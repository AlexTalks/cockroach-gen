create-sequence
CREATE SEQUENCE defaultdb.SQ1
----

ops
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
Stage 1 of 4
  transitions:
    [Sequence:{DescID: 52}, PUBLIC, DROP] -> TXN_DROPPED
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 52
Stage 2 of 4
  transitions:
    [Namespace:{DescID: 52, Name: sq1}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.DrainDescriptorName
      TableID: 52
Stage 3 of 4 (non-revertible)
  transitions:
    [Sequence:{DescID: 52}, TXN_DROPPED, DROP] -> DROPPED
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 52
Stage 4 of 4 (non-revertible)
  transitions:
    [Sequence:{DescID: 52}, DROPPED, DROP] -> ABSENT
  ops:
    *scop.LogEvent
      DescID: 52
      Direction: 2
      Element:
        sequence:
          sequenceId: 52
      Metadata:
        Statement: DROP SEQUENCE defaultdb.sq1 CASCADE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForDescriptor
      DescID: 52

create-table
CREATE TABLE defaultdb.blog_posts (id INT PRIMARY KEY, val int DEFAULT nextval('defaultdb.sq1'), title text)
----

create-table
CREATE TABLE defaultdb.blog_posts2 (id INT PRIMARY KEY, val int DEFAULT nextval('defaultdb.sq1'), title text)
----

ops
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
Stage 1 of 4
  transitions:
    [Sequence:{DescID: 52}, PUBLIC, DROP] -> TXN_DROPPED
  ops:
    *scop.MarkDescriptorAsDroppedSynthetically
      DescID: 52
Stage 2 of 4
  transitions:
    [Namespace:{DescID: 52, Name: sq1}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.DrainDescriptorName
      TableID: 52
Stage 3 of 4 (non-revertible)
  transitions:
    [Sequence:{DescID: 52}, TXN_DROPPED, DROP] -> DROPPED
    [RelationDependedOnBy:{DescID: 52, ReferencedDescID: 53}, PUBLIC, DROP] -> ABSENT
    [RelationDependedOnBy:{DescID: 52, ReferencedDescID: 54}, PUBLIC, DROP] -> ABSENT
  ops:
    *scop.MarkDescriptorAsDropped
      DescID: 52
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 53
      TableID: 52
    *scop.RemoveRelationDependedOnBy
      DependedOnBy: 54
      TableID: 52
Stage 4 of 4 (non-revertible)
  transitions:
    [Sequence:{DescID: 52}, DROPPED, DROP] -> ABSENT
  ops:
    *scop.LogEvent
      DescID: 52
      Direction: 2
      Element:
        sequence:
          sequenceId: 52
      Metadata:
        Statement: DROP SEQUENCE defaultdb.sq1 CASCADE
        TargetMetadata:
          SourceElementID: 1
          SubWorkID: 1
        Username: root
    *scop.CreateGcJobForDescriptor
      DescID: 52


deps
DROP SEQUENCE defaultdb.SQ1 CASCADE
----
- from: [Namespace:{DescID: 52, Name: sq1}, ABSENT]
  to:   [Sequence:{DescID: 52}, DROPPED]
  kind: HappensAfter
  rule: namespace needs descriptor to be dropped
- from: [RelationDependedOnBy:{DescID: 52, ReferencedDescID: 53}, ABSENT]
  to:   [Sequence:{DescID: 52}, DROPPED]
  kind: SameStage
  rule: dependency needs relation/type as non-synthetically dropped
- from: [RelationDependedOnBy:{DescID: 52, ReferencedDescID: 54}, ABSENT]
  to:   [Sequence:{DescID: 52}, DROPPED]
  kind: SameStage
  rule: dependency needs relation/type as non-synthetically dropped
- from: [Sequence:{DescID: 52}, ABSENT]
  to:   [Namespace:{DescID: 52, Name: sq1}, ABSENT]
  kind: HappensAfter
  rule: descriptor can only be cleaned up once the name is drained
