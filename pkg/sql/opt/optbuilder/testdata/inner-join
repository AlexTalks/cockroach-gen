exec-ddl
CREATE TABLE t.a (x INT PRIMARY KEY, y FLOAT)
----
TABLE a
 ├── x int not null
 ├── y float
 └── INDEX primary
      └── x int not null

exec-ddl
CREATE TABLE t.b (x INT, y FLOAT)
----
TABLE b
 ├── x int
 ├── y float
 ├── rowid int not null (hidden)
 └── INDEX primary
      └── rowid int not null (hidden)

exec-ddl
CREATE TABLE t.c (x INT, y FLOAT, z VARCHAR, CONSTRAINT fk_x_ref_a FOREIGN KEY (x) REFERENCES t.a (x))
----
TABLE c
 ├── x int
 ├── y float
 ├── z string
 ├── rowid int not null (hidden)
 └── INDEX primary
      └── rowid int not null (hidden)

build
SELECT * FROM t.a, t.b
----
project
 ├── columns: x:1(int!null) y:2(float) x:3(int) y:4(float)
 ├── inner-join
 │    ├── columns: a.x:1(int!null) a.y:2(float) b.x:3(int) b.y:4(float) b.rowid:5(int!null)
 │    ├── scan a
 │    │    └── columns: a.x:1(int!null) a.y:2(float)
 │    ├── scan b
 │    │    └── columns: b.x:3(int) b.y:4(float) b.rowid:5(int!null)
 │    └── true [type=bool]
 └── projections [outer=(1-4)]
      ├── variable: a.x [type=int, outer=(1)]
      ├── variable: a.y [type=float, outer=(2)]
      ├── variable: b.x [type=int, outer=(3)]
      └── variable: b.y [type=float, outer=(4)]

build
SELECT a.x, b.y FROM t.a, t.b WHERE a.x = b.x
----
project
 ├── columns: x:1(int!null) y:4(float)
 ├── select
 │    ├── columns: a.x:1(int!null) a.y:2(float) b.x:3(int) b.y:4(float) b.rowid:5(int!null)
 │    ├── inner-join
 │    │    ├── columns: a.x:1(int!null) a.y:2(float) b.x:3(int) b.y:4(float) b.rowid:5(int!null)
 │    │    ├── scan a
 │    │    │    └── columns: a.x:1(int!null) a.y:2(float)
 │    │    ├── scan b
 │    │    │    └── columns: b.x:3(int) b.y:4(float) b.rowid:5(int!null)
 │    │    └── true [type=bool]
 │    └── eq [type=bool, outer=(1,3)]
 │         ├── variable: a.x [type=int, outer=(1)]
 │         └── variable: b.x [type=int, outer=(3)]
 └── projections [outer=(1,4)]
      ├── variable: a.x [type=int, outer=(1)]
      └── variable: b.y [type=float, outer=(4)]

build
SELECT * FROM t.c, t.b, t.a WHERE c.x = a.x AND b.x = a.x
----
project
 ├── columns: x:1(int) y:2(float) z:3(string) x:5(int) y:6(float) x:8(int!null) y:9(float)
 ├── select
 │    ├── columns: c.x:1(int) c.y:2(float) c.z:3(string) c.rowid:4(int!null) b.x:5(int) b.y:6(float) b.rowid:7(int!null) a.x:8(int!null) a.y:9(float)
 │    ├── inner-join
 │    │    ├── columns: c.x:1(int) c.y:2(float) c.z:3(string) c.rowid:4(int!null) b.x:5(int) b.y:6(float) b.rowid:7(int!null) a.x:8(int!null) a.y:9(float)
 │    │    ├── inner-join
 │    │    │    ├── columns: c.x:1(int) c.y:2(float) c.z:3(string) c.rowid:4(int!null) b.x:5(int) b.y:6(float) b.rowid:7(int!null)
 │    │    │    ├── scan c
 │    │    │    │    └── columns: c.x:1(int) c.y:2(float) c.z:3(string) c.rowid:4(int!null)
 │    │    │    ├── scan b
 │    │    │    │    └── columns: b.x:5(int) b.y:6(float) b.rowid:7(int!null)
 │    │    │    └── true [type=bool]
 │    │    ├── scan a
 │    │    │    └── columns: a.x:8(int!null) a.y:9(float)
 │    │    └── true [type=bool]
 │    └── and [type=bool, outer=(1,5,8)]
 │         ├── eq [type=bool, outer=(1,8)]
 │         │    ├── variable: c.x [type=int, outer=(1)]
 │         │    └── variable: a.x [type=int, outer=(8)]
 │         └── eq [type=bool, outer=(5,8)]
 │              ├── variable: b.x [type=int, outer=(5)]
 │              └── variable: a.x [type=int, outer=(8)]
 └── projections [outer=(1-3,5,6,8,9)]
      ├── variable: c.x [type=int, outer=(1)]
      ├── variable: c.y [type=float, outer=(2)]
      ├── variable: c.z [type=string, outer=(3)]
      ├── variable: b.x [type=int, outer=(5)]
      ├── variable: b.y [type=float, outer=(6)]
      ├── variable: a.x [type=int, outer=(8)]
      └── variable: a.y [type=float, outer=(9)]
