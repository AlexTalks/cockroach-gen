// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[HoistSelectExists-52]
	_ = x[HoistSelectNotExists-53]
	_ = x[HoistSelectSubquery-54]
	_ = x[HoistProjectSubquery-55]
	_ = x[HoistJoinSubquery-56]
	_ = x[HoistValuesSubquery-57]
	_ = x[HoistProjectSetSubquery-58]
	_ = x[NormalizeSelectAnyFilter-59]
	_ = x[NormalizeJoinAnyFilter-60]
	_ = x[NormalizeSelectNotAnyFilter-61]
	_ = x[NormalizeJoinNotAnyFilter-62]
	_ = x[FoldNullCast-63]
	_ = x[FoldNullUnary-64]
	_ = x[FoldNullBinaryLeft-65]
	_ = x[FoldNullBinaryRight-66]
	_ = x[FoldNullInNonEmpty-67]
	_ = x[FoldInEmpty-68]
	_ = x[FoldNotInEmpty-69]
	_ = x[FoldArray-70]
	_ = x[FoldBinary-71]
	_ = x[FoldUnary-72]
	_ = x[FoldComparison-73]
	_ = x[FoldCast-74]
	_ = x[FoldIndirection-75]
	_ = x[FoldColumnAccess-76]
	_ = x[FoldFunction-77]
	_ = x[FoldEqualsAnyNull-78]
	_ = x[ConvertGroupByToDistinct-79]
	_ = x[EliminateDistinct-80]
	_ = x[EliminateGroupByProject-81]
	_ = x[ReduceGroupingCols-82]
	_ = x[ReduceNotNullGroupingCols-83]
	_ = x[EliminateAggDistinctForKeys-84]
	_ = x[EliminateAggFilteredDistinctForKeys-85]
	_ = x[EliminateDistinctNoColumns-86]
	_ = x[EliminateErrorDistinctNoColumns-87]
	_ = x[EliminateDistinctOnValues-88]
	_ = x[PushAggDistinctIntoScalarGroupBy-89]
	_ = x[InlineProjectConstants-90]
	_ = x[InlineSelectConstants-91]
	_ = x[InlineJoinConstantsLeft-92]
	_ = x[InlineJoinConstantsRight-93]
	_ = x[PushSelectIntoInlinableProject-94]
	_ = x[InlineProjectInProject-95]
	_ = x[CommuteRightJoin-96]
	_ = x[SimplifyJoinFilters-97]
	_ = x[DetectJoinContradiction-98]
	_ = x[PushFilterIntoJoinLeftAndRight-99]
	_ = x[MapFilterIntoJoinLeft-100]
	_ = x[MapFilterIntoJoinRight-101]
	_ = x[MapEqualityIntoJoinLeftAndRight-102]
	_ = x[PushFilterIntoJoinLeft-103]
	_ = x[PushFilterIntoJoinRight-104]
	_ = x[SimplifyLeftJoinWithoutFilters-105]
	_ = x[SimplifyRightJoinWithoutFilters-106]
	_ = x[SimplifyLeftJoinWithFilters-107]
	_ = x[SimplifyRightJoinWithFilters-108]
	_ = x[EliminateSemiJoin-109]
	_ = x[SimplifyZeroCardinalitySemiJoin-110]
	_ = x[EliminateAntiJoin-111]
	_ = x[SimplifyZeroCardinalityAntiJoin-112]
	_ = x[EliminateJoinNoColsLeft-113]
	_ = x[EliminateJoinNoColsRight-114]
	_ = x[HoistJoinProjectRight-115]
	_ = x[HoistJoinProjectLeft-116]
	_ = x[SimplifyJoinNotNullEquality-117]
	_ = x[ExtractJoinEqualities-118]
	_ = x[SortFiltersInJoin-119]
	_ = x[EliminateLimit-120]
	_ = x[EliminateOffset-121]
	_ = x[PushLimitIntoProject-122]
	_ = x[PushOffsetIntoProject-123]
	_ = x[PushLimitIntoOffset-124]
	_ = x[PushLimitIntoOrdinality-125]
	_ = x[PushLimitIntoLeftJoin-126]
	_ = x[EliminateMax1Row-127]
	_ = x[FoldPlusZero-128]
	_ = x[FoldZeroPlus-129]
	_ = x[FoldMinusZero-130]
	_ = x[FoldMultOne-131]
	_ = x[FoldOneMult-132]
	_ = x[FoldDivOne-133]
	_ = x[InvertMinus-134]
	_ = x[EliminateUnaryMinus-135]
	_ = x[SimplifyLimitOrdering-136]
	_ = x[SimplifyOffsetOrdering-137]
	_ = x[SimplifyGroupByOrdering-138]
	_ = x[SimplifyOrdinalityOrdering-139]
	_ = x[SimplifyExplainOrdering-140]
	_ = x[EliminateProject-141]
	_ = x[MergeProjects-142]
	_ = x[MergeProjectWithValues-143]
	_ = x[PruneProjectCols-144]
	_ = x[PruneScanCols-145]
	_ = x[PruneSelectCols-146]
	_ = x[PruneLimitCols-147]
	_ = x[PruneOffsetCols-148]
	_ = x[PruneJoinLeftCols-149]
	_ = x[PruneJoinRightCols-150]
	_ = x[PruneSemiAntiJoinRightCols-151]
	_ = x[PruneAggCols-152]
	_ = x[PruneGroupByCols-153]
	_ = x[PruneValuesCols-154]
	_ = x[PruneOrdinalityCols-155]
	_ = x[PruneExplainCols-156]
	_ = x[PruneProjectSetCols-157]
	_ = x[PruneWindowOutputCols-158]
	_ = x[PruneWindowInputCols-159]
	_ = x[PruneMutationFetchCols-160]
	_ = x[PruneMutationInputCols-161]
	_ = x[PruneMutationReturnCols-162]
	_ = x[PruneWithScanCols-163]
	_ = x[PruneWithCols-164]
	_ = x[PruneUnionAllCols-165]
	_ = x[RejectNullsLeftJoin-166]
	_ = x[RejectNullsRightJoin-167]
	_ = x[RejectNullsGroupBy-168]
	_ = x[CommuteVar-169]
	_ = x[CommuteConst-170]
	_ = x[EliminateCoalesce-171]
	_ = x[SimplifyCoalesce-172]
	_ = x[EliminateCast-173]
	_ = x[NormalizeInConst-174]
	_ = x[FoldInNull-175]
	_ = x[UnifyComparisonTypes-176]
	_ = x[EliminateExistsProject-177]
	_ = x[EliminateExistsGroupBy-178]
	_ = x[IntroduceExistsLimit-179]
	_ = x[EliminateExistsLimit-180]
	_ = x[NormalizeJSONFieldAccess-181]
	_ = x[NormalizeJSONContains-182]
	_ = x[SimplifyCaseWhenConstValue-183]
	_ = x[InlineAnyValuesSingleCol-184]
	_ = x[InlineAnyValuesMultiCol-185]
	_ = x[SimplifyEqualsAnyTuple-186]
	_ = x[SimplifyAnyScalarArray-187]
	_ = x[FoldCollate-188]
	_ = x[NormalizeArrayFlattenToAgg-189]
	_ = x[SimplifySelectFilters-190]
	_ = x[ConsolidateSelectFilters-191]
	_ = x[DetectSelectContradiction-192]
	_ = x[EliminateSelect-193]
	_ = x[MergeSelects-194]
	_ = x[PushSelectIntoProject-195]
	_ = x[MergeSelectInnerJoin-196]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-197]
	_ = x[PushSelectIntoJoinLeft-198]
	_ = x[PushSelectIntoGroupBy-199]
	_ = x[RemoveNotNullCondition-200]
	_ = x[InlineConstVar-201]
	_ = x[PushSelectIntoProjectSet-202]
	_ = x[PushFilterIntoSetOp-203]
	_ = x[EliminateUnionAllLeft-204]
	_ = x[EliminateUnionAllRight-205]
	_ = x[EliminateWindow-206]
	_ = x[ReduceWindowPartitionCols-207]
	_ = x[SimplifyWindowOrdering-208]
	_ = x[PushSelectIntoWindow-209]
	_ = x[PushLimitIntoWindow-210]
	_ = x[InlineWith-211]
	_ = x[startExploreRule-212]
	_ = x[ReplaceScalarMinMaxWithLimit-213]
	_ = x[ReplaceMinWithLimit-214]
	_ = x[ReplaceMaxWithLimit-215]
	_ = x[GenerateStreamingGroupBy-216]
	_ = x[CommuteJoin-217]
	_ = x[CommuteLeftJoin-218]
	_ = x[CommuteSemiJoin-219]
	_ = x[GenerateMergeJoins-220]
	_ = x[GenerateLookupJoins-221]
	_ = x[GenerateZigzagJoins-222]
	_ = x[GenerateInvertedIndexZigzagJoins-223]
	_ = x[GenerateLookupJoinsWithFilter-224]
	_ = x[AssociateJoin-225]
	_ = x[GenerateLimitedScans-226]
	_ = x[PushLimitIntoConstrainedScan-227]
	_ = x[PushLimitIntoIndexJoin-228]
	_ = x[GenerateIndexScans-229]
	_ = x[GenerateConstrainedScans-230]
	_ = x[GenerateInvertedIndexScans-231]
	_ = x[SplitDisjunction-232]
	_ = x[SplitDisjunctionAddKey-233]
	_ = x[NumRuleNames-234]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateErrorDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoScalarGroupByInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 966, 986, 1005, 1025, 1042, 1061, 1084, 1108, 1130, 1157, 1182, 1194, 1207, 1225, 1244, 1262, 1273, 1287, 1296, 1306, 1315, 1329, 1337, 1352, 1368, 1380, 1397, 1421, 1438, 1461, 1479, 1504, 1531, 1566, 1592, 1623, 1648, 1680, 1702, 1723, 1746, 1770, 1800, 1822, 1838, 1857, 1880, 1910, 1931, 1953, 1984, 2006, 2029, 2059, 2090, 2117, 2145, 2162, 2193, 2210, 2241, 2264, 2288, 2309, 2329, 2356, 2377, 2394, 2408, 2423, 2443, 2464, 2483, 2506, 2527, 2543, 2555, 2567, 2580, 2591, 2602, 2612, 2623, 2642, 2663, 2685, 2708, 2734, 2757, 2773, 2786, 2808, 2824, 2837, 2852, 2866, 2881, 2898, 2916, 2942, 2954, 2970, 2985, 3004, 3020, 3039, 3060, 3080, 3102, 3124, 3147, 3164, 3177, 3194, 3213, 3233, 3251, 3261, 3273, 3290, 3306, 3319, 3335, 3345, 3365, 3387, 3409, 3429, 3449, 3473, 3494, 3520, 3544, 3567, 3589, 3611, 3622, 3648, 3669, 3693, 3718, 3733, 3745, 3766, 3786, 3824, 3846, 3867, 3889, 3903, 3927, 3946, 3967, 3989, 4004, 4029, 4051, 4071, 4090, 4100, 4116, 4144, 4163, 4182, 4206, 4217, 4232, 4247, 4265, 4284, 4303, 4335, 4364, 4377, 4397, 4425, 4447, 4465, 4489, 4515, 4531, 4553, 4565}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
