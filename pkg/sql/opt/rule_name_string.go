// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[TryDecorrelateMax1Row-52]
	_ = x[HoistSelectExists-53]
	_ = x[HoistSelectNotExists-54]
	_ = x[HoistSelectSubquery-55]
	_ = x[HoistProjectSubquery-56]
	_ = x[HoistJoinSubquery-57]
	_ = x[HoistValuesSubquery-58]
	_ = x[HoistProjectSetSubquery-59]
	_ = x[NormalizeSelectAnyFilter-60]
	_ = x[NormalizeJoinAnyFilter-61]
	_ = x[NormalizeSelectNotAnyFilter-62]
	_ = x[NormalizeJoinNotAnyFilter-63]
	_ = x[FoldNullCast-64]
	_ = x[FoldNullUnary-65]
	_ = x[FoldNullBinaryLeft-66]
	_ = x[FoldNullBinaryRight-67]
	_ = x[FoldNullInNonEmpty-68]
	_ = x[FoldInEmpty-69]
	_ = x[FoldNotInEmpty-70]
	_ = x[FoldArray-71]
	_ = x[FoldBinary-72]
	_ = x[FoldUnary-73]
	_ = x[FoldComparison-74]
	_ = x[FoldCast-75]
	_ = x[FoldIndirection-76]
	_ = x[FoldColumnAccess-77]
	_ = x[FoldFunction-78]
	_ = x[FoldEqualsAnyNull-79]
	_ = x[ConvertGroupByToDistinct-80]
	_ = x[EliminateDistinct-81]
	_ = x[EliminateGroupByProject-82]
	_ = x[ReduceGroupingCols-83]
	_ = x[ReduceNotNullGroupingCols-84]
	_ = x[EliminateAggDistinctForKeys-85]
	_ = x[EliminateAggFilteredDistinctForKeys-86]
	_ = x[EliminateDistinctNoColumns-87]
	_ = x[EliminateEnsureDistinctNoColumns-88]
	_ = x[EliminateDistinctOnValues-89]
	_ = x[PushAggDistinctIntoScalarGroupBy-90]
	_ = x[PushAggFilterIntoScalarGroupBy-91]
	_ = x[ConvertCountToCountRows-92]
	_ = x[InlineProjectConstants-93]
	_ = x[InlineSelectConstants-94]
	_ = x[InlineJoinConstantsLeft-95]
	_ = x[InlineJoinConstantsRight-96]
	_ = x[PushSelectIntoInlinableProject-97]
	_ = x[InlineProjectInProject-98]
	_ = x[CommuteRightJoin-99]
	_ = x[SimplifyJoinFilters-100]
	_ = x[DetectJoinContradiction-101]
	_ = x[PushFilterIntoJoinLeftAndRight-102]
	_ = x[MapFilterIntoJoinLeft-103]
	_ = x[MapFilterIntoJoinRight-104]
	_ = x[MapEqualityIntoJoinLeftAndRight-105]
	_ = x[PushFilterIntoJoinLeft-106]
	_ = x[PushFilterIntoJoinRight-107]
	_ = x[SimplifyLeftJoinWithoutFilters-108]
	_ = x[SimplifyRightJoinWithoutFilters-109]
	_ = x[SimplifyLeftJoinWithFilters-110]
	_ = x[SimplifyRightJoinWithFilters-111]
	_ = x[EliminateSemiJoin-112]
	_ = x[SimplifyZeroCardinalitySemiJoin-113]
	_ = x[EliminateAntiJoin-114]
	_ = x[SimplifyZeroCardinalityAntiJoin-115]
	_ = x[EliminateJoinNoColsLeft-116]
	_ = x[EliminateJoinNoColsRight-117]
	_ = x[HoistJoinProjectRight-118]
	_ = x[HoistJoinProjectLeft-119]
	_ = x[SimplifyJoinNotNullEquality-120]
	_ = x[ExtractJoinEqualities-121]
	_ = x[SortFiltersInJoin-122]
	_ = x[EliminateLimit-123]
	_ = x[EliminateOffset-124]
	_ = x[PushLimitIntoProject-125]
	_ = x[PushOffsetIntoProject-126]
	_ = x[PushLimitIntoOffset-127]
	_ = x[PushLimitIntoOrdinality-128]
	_ = x[PushLimitIntoLeftJoin-129]
	_ = x[EliminateMax1Row-130]
	_ = x[FoldPlusZero-131]
	_ = x[FoldZeroPlus-132]
	_ = x[FoldMinusZero-133]
	_ = x[FoldMultOne-134]
	_ = x[FoldOneMult-135]
	_ = x[FoldDivOne-136]
	_ = x[InvertMinus-137]
	_ = x[EliminateUnaryMinus-138]
	_ = x[SimplifyLimitOrdering-139]
	_ = x[SimplifyOffsetOrdering-140]
	_ = x[SimplifyGroupByOrdering-141]
	_ = x[SimplifyOrdinalityOrdering-142]
	_ = x[SimplifyExplainOrdering-143]
	_ = x[EliminateProject-144]
	_ = x[MergeProjects-145]
	_ = x[MergeProjectWithValues-146]
	_ = x[PruneProjectCols-147]
	_ = x[PruneScanCols-148]
	_ = x[PruneSelectCols-149]
	_ = x[PruneLimitCols-150]
	_ = x[PruneOffsetCols-151]
	_ = x[PruneJoinLeftCols-152]
	_ = x[PruneJoinRightCols-153]
	_ = x[PruneSemiAntiJoinRightCols-154]
	_ = x[PruneAggCols-155]
	_ = x[PruneGroupByCols-156]
	_ = x[PruneValuesCols-157]
	_ = x[PruneOrdinalityCols-158]
	_ = x[PruneExplainCols-159]
	_ = x[PruneProjectSetCols-160]
	_ = x[PruneWindowOutputCols-161]
	_ = x[PruneWindowInputCols-162]
	_ = x[PruneMutationFetchCols-163]
	_ = x[PruneMutationInputCols-164]
	_ = x[PruneMutationReturnCols-165]
	_ = x[PruneWithScanCols-166]
	_ = x[PruneWithCols-167]
	_ = x[PruneUnionAllCols-168]
	_ = x[RejectNullsLeftJoin-169]
	_ = x[RejectNullsRightJoin-170]
	_ = x[RejectNullsGroupBy-171]
	_ = x[CommuteVar-172]
	_ = x[CommuteConst-173]
	_ = x[EliminateCoalesce-174]
	_ = x[SimplifyCoalesce-175]
	_ = x[EliminateCast-176]
	_ = x[NormalizeInConst-177]
	_ = x[FoldInNull-178]
	_ = x[UnifyComparisonTypes-179]
	_ = x[EliminateExistsProject-180]
	_ = x[EliminateExistsGroupBy-181]
	_ = x[IntroduceExistsLimit-182]
	_ = x[EliminateExistsLimit-183]
	_ = x[NormalizeJSONFieldAccess-184]
	_ = x[NormalizeJSONContains-185]
	_ = x[SimplifyCaseWhenConstValue-186]
	_ = x[InlineAnyValuesSingleCol-187]
	_ = x[InlineAnyValuesMultiCol-188]
	_ = x[SimplifyEqualsAnyTuple-189]
	_ = x[SimplifyAnyScalarArray-190]
	_ = x[FoldCollate-191]
	_ = x[NormalizeArrayFlattenToAgg-192]
	_ = x[SimplifySelectFilters-193]
	_ = x[ConsolidateSelectFilters-194]
	_ = x[DetectSelectContradiction-195]
	_ = x[EliminateSelect-196]
	_ = x[MergeSelects-197]
	_ = x[PushSelectIntoProject-198]
	_ = x[MergeSelectInnerJoin-199]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-200]
	_ = x[PushSelectIntoJoinLeft-201]
	_ = x[PushSelectIntoGroupBy-202]
	_ = x[RemoveNotNullCondition-203]
	_ = x[InlineConstVar-204]
	_ = x[PushSelectIntoProjectSet-205]
	_ = x[PushFilterIntoSetOp-206]
	_ = x[EliminateUnionAllLeft-207]
	_ = x[EliminateUnionAllRight-208]
	_ = x[EliminateWindow-209]
	_ = x[ReduceWindowPartitionCols-210]
	_ = x[SimplifyWindowOrdering-211]
	_ = x[PushSelectIntoWindow-212]
	_ = x[PushLimitIntoWindow-213]
	_ = x[InlineWith-214]
	_ = x[startExploreRule-215]
	_ = x[ReplaceScalarMinMaxWithLimit-216]
	_ = x[ReplaceMinWithLimit-217]
	_ = x[ReplaceMaxWithLimit-218]
	_ = x[GenerateStreamingGroupBy-219]
	_ = x[CommuteJoin-220]
	_ = x[CommuteLeftJoin-221]
	_ = x[CommuteSemiJoin-222]
	_ = x[GenerateMergeJoins-223]
	_ = x[GenerateLookupJoins-224]
	_ = x[GenerateZigzagJoins-225]
	_ = x[GenerateInvertedIndexZigzagJoins-226]
	_ = x[GenerateLookupJoinsWithFilter-227]
	_ = x[AssociateJoin-228]
	_ = x[GenerateLimitedScans-229]
	_ = x[PushLimitIntoConstrainedScan-230]
	_ = x[PushLimitIntoIndexJoin-231]
	_ = x[GenerateIndexScans-232]
	_ = x[GenerateConstrainedScans-233]
	_ = x[GenerateInvertedIndexScans-234]
	_ = x[SplitDisjunction-235]
	_ = x[SplitDisjunctionAddKey-236]
	_ = x[NumRuleNames-237]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoScalarGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 970, 987, 1007, 1026, 1046, 1063, 1082, 1105, 1129, 1151, 1178, 1203, 1215, 1228, 1246, 1265, 1283, 1294, 1308, 1317, 1327, 1336, 1350, 1358, 1373, 1389, 1401, 1418, 1442, 1459, 1482, 1500, 1525, 1552, 1587, 1613, 1645, 1670, 1702, 1732, 1755, 1777, 1798, 1821, 1845, 1875, 1897, 1913, 1932, 1955, 1985, 2006, 2028, 2059, 2081, 2104, 2134, 2165, 2192, 2220, 2237, 2268, 2285, 2316, 2339, 2363, 2384, 2404, 2431, 2452, 2469, 2483, 2498, 2518, 2539, 2558, 2581, 2602, 2618, 2630, 2642, 2655, 2666, 2677, 2687, 2698, 2717, 2738, 2760, 2783, 2809, 2832, 2848, 2861, 2883, 2899, 2912, 2927, 2941, 2956, 2973, 2991, 3017, 3029, 3045, 3060, 3079, 3095, 3114, 3135, 3155, 3177, 3199, 3222, 3239, 3252, 3269, 3288, 3308, 3326, 3336, 3348, 3365, 3381, 3394, 3410, 3420, 3440, 3462, 3484, 3504, 3524, 3548, 3569, 3595, 3619, 3642, 3664, 3686, 3697, 3723, 3744, 3768, 3793, 3808, 3820, 3841, 3861, 3899, 3921, 3942, 3964, 3978, 4002, 4021, 4042, 4064, 4079, 4104, 4126, 4146, 4165, 4175, 4191, 4219, 4238, 4257, 4281, 4292, 4307, 4322, 4340, 4359, 4378, 4410, 4439, 4452, 4472, 4500, 4522, 4540, 4564, 4590, 4606, 4628, 4640}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
