// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[DecorrelateJoin-44]
	_ = x[DecorrelateProjectSet-45]
	_ = x[TryDecorrelateSelect-46]
	_ = x[TryDecorrelateProject-47]
	_ = x[TryDecorrelateProjectSelect-48]
	_ = x[TryDecorrelateProjectInnerJoin-49]
	_ = x[TryDecorrelateInnerJoin-50]
	_ = x[TryDecorrelateInnerLeftJoin-51]
	_ = x[TryDecorrelateGroupBy-52]
	_ = x[TryDecorrelateScalarGroupBy-53]
	_ = x[TryDecorrelateSemiJoin-54]
	_ = x[TryDecorrelateLimitOne-55]
	_ = x[TryDecorrelateProjectSet-56]
	_ = x[TryDecorrelateWindow-57]
	_ = x[TryDecorrelateMax1Row-58]
	_ = x[HoistSelectExists-59]
	_ = x[HoistSelectNotExists-60]
	_ = x[HoistSelectSubquery-61]
	_ = x[HoistProjectSubquery-62]
	_ = x[HoistJoinSubquery-63]
	_ = x[HoistValuesSubquery-64]
	_ = x[HoistProjectSetSubquery-65]
	_ = x[NormalizeSelectAnyFilter-66]
	_ = x[NormalizeJoinAnyFilter-67]
	_ = x[NormalizeSelectNotAnyFilter-68]
	_ = x[NormalizeJoinNotAnyFilter-69]
	_ = x[FoldNullCast-70]
	_ = x[FoldNullUnary-71]
	_ = x[FoldNullBinaryLeft-72]
	_ = x[FoldNullBinaryRight-73]
	_ = x[FoldNullInNonEmpty-74]
	_ = x[FoldInEmpty-75]
	_ = x[FoldNotInEmpty-76]
	_ = x[FoldArray-77]
	_ = x[FoldBinary-78]
	_ = x[FoldUnary-79]
	_ = x[FoldComparison-80]
	_ = x[FoldCast-81]
	_ = x[FoldIndirection-82]
	_ = x[FoldColumnAccess-83]
	_ = x[FoldFunction-84]
	_ = x[FoldEqualsAnyNull-85]
	_ = x[ConvertGroupByToDistinct-86]
	_ = x[EliminateDistinct-87]
	_ = x[EliminateGroupByProject-88]
	_ = x[ReduceGroupingCols-89]
	_ = x[ReduceNotNullGroupingCols-90]
	_ = x[EliminateAggDistinctForKeys-91]
	_ = x[EliminateAggFilteredDistinctForKeys-92]
	_ = x[EliminateDistinctNoColumns-93]
	_ = x[EliminateEnsureDistinctNoColumns-94]
	_ = x[EliminateDistinctOnValues-95]
	_ = x[PushAggDistinctIntoScalarGroupBy-96]
	_ = x[PushAggFilterIntoScalarGroupBy-97]
	_ = x[ConvertCountToCountRows-98]
	_ = x[InlineConstVar-99]
	_ = x[InlineProjectConstants-100]
	_ = x[InlineSelectConstants-101]
	_ = x[InlineJoinConstantsLeft-102]
	_ = x[InlineJoinConstantsRight-103]
	_ = x[PushSelectIntoInlinableProject-104]
	_ = x[InlineProjectInProject-105]
	_ = x[CommuteRightJoin-106]
	_ = x[SimplifyJoinFilters-107]
	_ = x[DetectJoinContradiction-108]
	_ = x[PushFilterIntoJoinLeftAndRight-109]
	_ = x[MapFilterIntoJoinLeft-110]
	_ = x[MapFilterIntoJoinRight-111]
	_ = x[MapEqualityIntoJoinLeftAndRight-112]
	_ = x[PushFilterIntoJoinLeft-113]
	_ = x[PushFilterIntoJoinRight-114]
	_ = x[SimplifyLeftJoin-115]
	_ = x[SimplifyRightJoin-116]
	_ = x[EliminateSemiJoin-117]
	_ = x[SimplifyZeroCardinalitySemiJoin-118]
	_ = x[EliminateAntiJoin-119]
	_ = x[SimplifyZeroCardinalityAntiJoin-120]
	_ = x[EliminateJoinNoColsLeft-121]
	_ = x[EliminateJoinNoColsRight-122]
	_ = x[HoistJoinProjectRight-123]
	_ = x[HoistJoinProjectLeft-124]
	_ = x[SimplifyJoinNotNullEquality-125]
	_ = x[ExtractJoinEqualities-126]
	_ = x[SortFiltersInJoin-127]
	_ = x[EliminateLimit-128]
	_ = x[EliminateOffset-129]
	_ = x[PushLimitIntoProject-130]
	_ = x[PushOffsetIntoProject-131]
	_ = x[PushLimitIntoOffset-132]
	_ = x[PushLimitIntoOrdinality-133]
	_ = x[PushLimitIntoLeftJoin-134]
	_ = x[EliminateMax1Row-135]
	_ = x[FoldPlusZero-136]
	_ = x[FoldZeroPlus-137]
	_ = x[FoldMinusZero-138]
	_ = x[FoldMultOne-139]
	_ = x[FoldOneMult-140]
	_ = x[FoldDivOne-141]
	_ = x[InvertMinus-142]
	_ = x[EliminateUnaryMinus-143]
	_ = x[SimplifyLimitOrdering-144]
	_ = x[SimplifyOffsetOrdering-145]
	_ = x[SimplifyGroupByOrdering-146]
	_ = x[SimplifyOrdinalityOrdering-147]
	_ = x[SimplifyExplainOrdering-148]
	_ = x[EliminateProject-149]
	_ = x[MergeProjects-150]
	_ = x[MergeProjectWithValues-151]
	_ = x[PushColumnRemappingIntoValues-152]
	_ = x[FoldTupleAccessIntoValues-153]
	_ = x[ConvertZipArraysToValues-154]
	_ = x[PruneProjectCols-155]
	_ = x[PruneScanCols-156]
	_ = x[PruneSelectCols-157]
	_ = x[PruneLimitCols-158]
	_ = x[PruneOffsetCols-159]
	_ = x[PruneJoinLeftCols-160]
	_ = x[PruneJoinRightCols-161]
	_ = x[PruneSemiAntiJoinRightCols-162]
	_ = x[PruneAggCols-163]
	_ = x[PruneGroupByCols-164]
	_ = x[PruneValuesCols-165]
	_ = x[PruneOrdinalityCols-166]
	_ = x[PruneExplainCols-167]
	_ = x[PruneProjectSetCols-168]
	_ = x[PruneWindowOutputCols-169]
	_ = x[PruneWindowInputCols-170]
	_ = x[PruneMutationFetchCols-171]
	_ = x[PruneMutationInputCols-172]
	_ = x[PruneMutationReturnCols-173]
	_ = x[PruneWithScanCols-174]
	_ = x[PruneWithCols-175]
	_ = x[PruneUnionAllCols-176]
	_ = x[RejectNullsLeftJoin-177]
	_ = x[RejectNullsRightJoin-178]
	_ = x[RejectNullsGroupBy-179]
	_ = x[CommuteVar-180]
	_ = x[CommuteConst-181]
	_ = x[EliminateCoalesce-182]
	_ = x[SimplifyCoalesce-183]
	_ = x[EliminateCast-184]
	_ = x[NormalizeInConst-185]
	_ = x[FoldInNull-186]
	_ = x[UnifyComparisonTypes-187]
	_ = x[EliminateExistsZeroRows-188]
	_ = x[EliminateExistsProject-189]
	_ = x[EliminateExistsGroupBy-190]
	_ = x[IntroduceExistsLimit-191]
	_ = x[EliminateExistsLimit-192]
	_ = x[NormalizeJSONFieldAccess-193]
	_ = x[NormalizeJSONContains-194]
	_ = x[SimplifyCaseWhenConstValue-195]
	_ = x[InlineAnyValuesSingleCol-196]
	_ = x[InlineAnyValuesMultiCol-197]
	_ = x[SimplifyEqualsAnyTuple-198]
	_ = x[SimplifyAnyScalarArray-199]
	_ = x[FoldCollate-200]
	_ = x[NormalizeArrayFlattenToAgg-201]
	_ = x[SimplifySameVarEqualities-202]
	_ = x[SimplifySameVarInequalities-203]
	_ = x[SimplifySelectFilters-204]
	_ = x[ConsolidateSelectFilters-205]
	_ = x[DetectSelectContradiction-206]
	_ = x[EliminateSelect-207]
	_ = x[MergeSelects-208]
	_ = x[PushSelectIntoProject-209]
	_ = x[MergeSelectInnerJoin-210]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-211]
	_ = x[PushSelectIntoJoinLeft-212]
	_ = x[PushSelectIntoGroupBy-213]
	_ = x[RemoveNotNullCondition-214]
	_ = x[PushSelectIntoProjectSet-215]
	_ = x[PushFilterIntoSetOp-216]
	_ = x[EliminateUnionAllLeft-217]
	_ = x[EliminateUnionAllRight-218]
	_ = x[EliminateWindow-219]
	_ = x[ReduceWindowPartitionCols-220]
	_ = x[SimplifyWindowOrdering-221]
	_ = x[PushSelectIntoWindow-222]
	_ = x[PushLimitIntoWindow-223]
	_ = x[InlineWith-224]
	_ = x[startExploreRule-225]
	_ = x[ReplaceScalarMinMaxWithLimit-226]
	_ = x[ReplaceMinWithLimit-227]
	_ = x[ReplaceMaxWithLimit-228]
	_ = x[GenerateStreamingGroupBy-229]
	_ = x[CommuteJoin-230]
	_ = x[CommuteLeftJoin-231]
	_ = x[CommuteSemiJoin-232]
	_ = x[GenerateMergeJoins-233]
	_ = x[GenerateLookupJoins-234]
	_ = x[GenerateGeoLookupJoins-235]
	_ = x[GenerateZigzagJoins-236]
	_ = x[GenerateInvertedIndexZigzagJoins-237]
	_ = x[GenerateLookupJoinsWithFilter-238]
	_ = x[AssociateJoin-239]
	_ = x[GenerateLimitedScans-240]
	_ = x[PushLimitIntoConstrainedScan-241]
	_ = x[PushLimitIntoIndexJoin-242]
	_ = x[GenerateIndexScans-243]
	_ = x[GenerateConstrainedScans-244]
	_ = x[GenerateInvertedIndexScans-245]
	_ = x[SplitDisjunction-246]
	_ = x[SplitDisjunctionAddKey-247]
	_ = x[NumRuleNames-248]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoScalarGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateGeoLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 810, 831, 851, 872, 899, 929, 952, 979, 1000, 1027, 1049, 1071, 1095, 1115, 1136, 1153, 1173, 1192, 1212, 1229, 1248, 1271, 1295, 1317, 1344, 1369, 1381, 1394, 1412, 1431, 1449, 1460, 1474, 1483, 1493, 1502, 1516, 1524, 1539, 1555, 1567, 1584, 1608, 1625, 1648, 1666, 1691, 1718, 1753, 1779, 1811, 1836, 1868, 1898, 1921, 1935, 1957, 1978, 2001, 2025, 2055, 2077, 2093, 2112, 2135, 2165, 2186, 2208, 2239, 2261, 2284, 2300, 2317, 2334, 2365, 2382, 2413, 2436, 2460, 2481, 2501, 2528, 2549, 2566, 2580, 2595, 2615, 2636, 2655, 2678, 2699, 2715, 2727, 2739, 2752, 2763, 2774, 2784, 2795, 2814, 2835, 2857, 2880, 2906, 2929, 2945, 2958, 2980, 3009, 3034, 3058, 3074, 3087, 3102, 3116, 3131, 3148, 3166, 3192, 3204, 3220, 3235, 3254, 3270, 3289, 3310, 3330, 3352, 3374, 3397, 3414, 3427, 3444, 3463, 3483, 3501, 3511, 3523, 3540, 3556, 3569, 3585, 3595, 3615, 3638, 3660, 3682, 3702, 3722, 3746, 3767, 3793, 3817, 3840, 3862, 3884, 3895, 3921, 3946, 3973, 3994, 4018, 4043, 4058, 4070, 4091, 4111, 4149, 4171, 4192, 4214, 4238, 4257, 4278, 4300, 4315, 4340, 4362, 4382, 4401, 4411, 4427, 4455, 4474, 4493, 4517, 4528, 4543, 4558, 4576, 4595, 4617, 4636, 4668, 4697, 4710, 4730, 4758, 4780, 4798, 4822, 4848, 4864, 4886, 4898}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
