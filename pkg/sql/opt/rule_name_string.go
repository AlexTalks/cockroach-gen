// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[DecorrelateJoin-44]
	_ = x[DecorrelateProjectSet-45]
	_ = x[TryDecorrelateSelect-46]
	_ = x[TryDecorrelateProject-47]
	_ = x[TryDecorrelateProjectSelect-48]
	_ = x[TryDecorrelateProjectInnerJoin-49]
	_ = x[TryDecorrelateInnerJoin-50]
	_ = x[TryDecorrelateInnerLeftJoin-51]
	_ = x[TryDecorrelateGroupBy-52]
	_ = x[TryDecorrelateScalarGroupBy-53]
	_ = x[TryDecorrelateSemiJoin-54]
	_ = x[TryDecorrelateLimitOne-55]
	_ = x[TryDecorrelateProjectSet-56]
	_ = x[TryDecorrelateWindow-57]
	_ = x[TryDecorrelateMax1Row-58]
	_ = x[HoistSelectExists-59]
	_ = x[HoistSelectNotExists-60]
	_ = x[HoistSelectSubquery-61]
	_ = x[HoistProjectSubquery-62]
	_ = x[HoistJoinSubquery-63]
	_ = x[HoistValuesSubquery-64]
	_ = x[HoistProjectSetSubquery-65]
	_ = x[NormalizeSelectAnyFilter-66]
	_ = x[NormalizeJoinAnyFilter-67]
	_ = x[NormalizeSelectNotAnyFilter-68]
	_ = x[NormalizeJoinNotAnyFilter-69]
	_ = x[FoldNullCast-70]
	_ = x[FoldNullUnary-71]
	_ = x[FoldNullBinaryLeft-72]
	_ = x[FoldNullBinaryRight-73]
	_ = x[FoldNullInNonEmpty-74]
	_ = x[FoldInEmpty-75]
	_ = x[FoldNotInEmpty-76]
	_ = x[FoldArray-77]
	_ = x[FoldBinary-78]
	_ = x[FoldUnary-79]
	_ = x[FoldComparison-80]
	_ = x[FoldCast-81]
	_ = x[FoldIndirection-82]
	_ = x[FoldColumnAccess-83]
	_ = x[FoldFunction-84]
	_ = x[FoldEqualsAnyNull-85]
	_ = x[ConvertGroupByToDistinct-86]
	_ = x[EliminateDistinct-87]
	_ = x[EliminateGroupByProject-88]
	_ = x[ReduceGroupingCols-89]
	_ = x[ReduceNotNullGroupingCols-90]
	_ = x[EliminateAggDistinctForKeys-91]
	_ = x[EliminateAggFilteredDistinctForKeys-92]
	_ = x[EliminateDistinctNoColumns-93]
	_ = x[EliminateEnsureDistinctNoColumns-94]
	_ = x[EliminateDistinctOnValues-95]
	_ = x[PushAggDistinctIntoScalarGroupBy-96]
	_ = x[PushAggFilterIntoScalarGroupBy-97]
	_ = x[ConvertCountToCountRows-98]
	_ = x[FoldGroupingOperators-99]
	_ = x[InlineConstVar-100]
	_ = x[InlineProjectConstants-101]
	_ = x[InlineSelectConstants-102]
	_ = x[InlineJoinConstantsLeft-103]
	_ = x[InlineJoinConstantsRight-104]
	_ = x[PushSelectIntoInlinableProject-105]
	_ = x[InlineProjectInProject-106]
	_ = x[CommuteRightJoin-107]
	_ = x[SimplifyJoinFilters-108]
	_ = x[DetectJoinContradiction-109]
	_ = x[PushFilterIntoJoinLeftAndRight-110]
	_ = x[MapFilterIntoJoinLeft-111]
	_ = x[MapFilterIntoJoinRight-112]
	_ = x[MapEqualityIntoJoinLeftAndRight-113]
	_ = x[PushFilterIntoJoinLeft-114]
	_ = x[PushFilterIntoJoinRight-115]
	_ = x[SimplifyLeftJoin-116]
	_ = x[SimplifyRightJoin-117]
	_ = x[EliminateSemiJoin-118]
	_ = x[SimplifyZeroCardinalitySemiJoin-119]
	_ = x[EliminateAntiJoin-120]
	_ = x[SimplifyZeroCardinalityAntiJoin-121]
	_ = x[EliminateJoinNoColsLeft-122]
	_ = x[EliminateJoinNoColsRight-123]
	_ = x[HoistJoinProjectRight-124]
	_ = x[HoistJoinProjectLeft-125]
	_ = x[SimplifyJoinNotNullEquality-126]
	_ = x[ExtractJoinEqualities-127]
	_ = x[SortFiltersInJoin-128]
	_ = x[EliminateLimit-129]
	_ = x[EliminateOffset-130]
	_ = x[PushLimitIntoProject-131]
	_ = x[PushOffsetIntoProject-132]
	_ = x[PushLimitIntoOffset-133]
	_ = x[PushLimitIntoOrdinality-134]
	_ = x[PushLimitIntoLeftJoin-135]
	_ = x[EliminateMax1Row-136]
	_ = x[FoldPlusZero-137]
	_ = x[FoldZeroPlus-138]
	_ = x[FoldMinusZero-139]
	_ = x[FoldMultOne-140]
	_ = x[FoldOneMult-141]
	_ = x[FoldDivOne-142]
	_ = x[InvertMinus-143]
	_ = x[EliminateUnaryMinus-144]
	_ = x[SimplifyLimitOrdering-145]
	_ = x[SimplifyOffsetOrdering-146]
	_ = x[SimplifyGroupByOrdering-147]
	_ = x[SimplifyOrdinalityOrdering-148]
	_ = x[SimplifyExplainOrdering-149]
	_ = x[EliminateProject-150]
	_ = x[MergeProjects-151]
	_ = x[MergeProjectWithValues-152]
	_ = x[PushColumnRemappingIntoValues-153]
	_ = x[FoldTupleAccessIntoValues-154]
	_ = x[ConvertZipArraysToValues-155]
	_ = x[PruneProjectCols-156]
	_ = x[PruneScanCols-157]
	_ = x[PruneSelectCols-158]
	_ = x[PruneLimitCols-159]
	_ = x[PruneOffsetCols-160]
	_ = x[PruneJoinLeftCols-161]
	_ = x[PruneJoinRightCols-162]
	_ = x[PruneSemiAntiJoinRightCols-163]
	_ = x[PruneAggCols-164]
	_ = x[PruneGroupByCols-165]
	_ = x[PruneValuesCols-166]
	_ = x[PruneOrdinalityCols-167]
	_ = x[PruneExplainCols-168]
	_ = x[PruneProjectSetCols-169]
	_ = x[PruneWindowOutputCols-170]
	_ = x[PruneWindowInputCols-171]
	_ = x[PruneMutationFetchCols-172]
	_ = x[PruneMutationInputCols-173]
	_ = x[PruneMutationReturnCols-174]
	_ = x[PruneWithScanCols-175]
	_ = x[PruneWithCols-176]
	_ = x[PruneUnionAllCols-177]
	_ = x[RejectNullsLeftJoin-178]
	_ = x[RejectNullsRightJoin-179]
	_ = x[RejectNullsGroupBy-180]
	_ = x[CommuteVar-181]
	_ = x[CommuteConst-182]
	_ = x[EliminateCoalesce-183]
	_ = x[SimplifyCoalesce-184]
	_ = x[EliminateCast-185]
	_ = x[NormalizeInConst-186]
	_ = x[FoldInNull-187]
	_ = x[UnifyComparisonTypes-188]
	_ = x[EliminateExistsZeroRows-189]
	_ = x[EliminateExistsProject-190]
	_ = x[EliminateExistsGroupBy-191]
	_ = x[IntroduceExistsLimit-192]
	_ = x[EliminateExistsLimit-193]
	_ = x[NormalizeJSONFieldAccess-194]
	_ = x[NormalizeJSONContains-195]
	_ = x[SimplifyCaseWhenConstValue-196]
	_ = x[InlineAnyValuesSingleCol-197]
	_ = x[InlineAnyValuesMultiCol-198]
	_ = x[SimplifyEqualsAnyTuple-199]
	_ = x[SimplifyAnyScalarArray-200]
	_ = x[FoldCollate-201]
	_ = x[NormalizeArrayFlattenToAgg-202]
	_ = x[SimplifySameVarEqualities-203]
	_ = x[SimplifySameVarInequalities-204]
	_ = x[SimplifySelectFilters-205]
	_ = x[ConsolidateSelectFilters-206]
	_ = x[DetectSelectContradiction-207]
	_ = x[EliminateSelect-208]
	_ = x[MergeSelects-209]
	_ = x[PushSelectIntoProject-210]
	_ = x[MergeSelectInnerJoin-211]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-212]
	_ = x[PushSelectIntoJoinLeft-213]
	_ = x[PushSelectIntoGroupBy-214]
	_ = x[RemoveNotNullCondition-215]
	_ = x[PushSelectIntoProjectSet-216]
	_ = x[PushFilterIntoSetOp-217]
	_ = x[EliminateUnionAllLeft-218]
	_ = x[EliminateUnionAllRight-219]
	_ = x[EliminateWindow-220]
	_ = x[ReduceWindowPartitionCols-221]
	_ = x[SimplifyWindowOrdering-222]
	_ = x[PushSelectIntoWindow-223]
	_ = x[PushLimitIntoWindow-224]
	_ = x[InlineWith-225]
	_ = x[startExploreRule-226]
	_ = x[ReplaceScalarMinMaxWithLimit-227]
	_ = x[ReplaceMinWithLimit-228]
	_ = x[ReplaceMaxWithLimit-229]
	_ = x[GenerateStreamingGroupBy-230]
	_ = x[CommuteJoin-231]
	_ = x[CommuteLeftJoin-232]
	_ = x[CommuteSemiJoin-233]
	_ = x[GenerateMergeJoins-234]
	_ = x[GenerateLookupJoins-235]
	_ = x[GenerateGeoLookupJoins-236]
	_ = x[GenerateZigzagJoins-237]
	_ = x[GenerateInvertedIndexZigzagJoins-238]
	_ = x[GenerateLookupJoinsWithFilter-239]
	_ = x[AssociateJoin-240]
	_ = x[GenerateLimitedScans-241]
	_ = x[PushLimitIntoConstrainedScan-242]
	_ = x[PushLimitIntoIndexJoin-243]
	_ = x[GenerateIndexScans-244]
	_ = x[GenerateConstrainedScans-245]
	_ = x[GenerateInvertedIndexScans-246]
	_ = x[SplitDisjunction-247]
	_ = x[SplitDisjunctionAddKey-248]
	_ = x[NumRuleNames-249]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoScalarGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateGeoLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 810, 831, 851, 872, 899, 929, 952, 979, 1000, 1027, 1049, 1071, 1095, 1115, 1136, 1153, 1173, 1192, 1212, 1229, 1248, 1271, 1295, 1317, 1344, 1369, 1381, 1394, 1412, 1431, 1449, 1460, 1474, 1483, 1493, 1502, 1516, 1524, 1539, 1555, 1567, 1584, 1608, 1625, 1648, 1666, 1691, 1718, 1753, 1779, 1811, 1836, 1868, 1898, 1921, 1942, 1956, 1978, 1999, 2022, 2046, 2076, 2098, 2114, 2133, 2156, 2186, 2207, 2229, 2260, 2282, 2305, 2321, 2338, 2355, 2386, 2403, 2434, 2457, 2481, 2502, 2522, 2549, 2570, 2587, 2601, 2616, 2636, 2657, 2676, 2699, 2720, 2736, 2748, 2760, 2773, 2784, 2795, 2805, 2816, 2835, 2856, 2878, 2901, 2927, 2950, 2966, 2979, 3001, 3030, 3055, 3079, 3095, 3108, 3123, 3137, 3152, 3169, 3187, 3213, 3225, 3241, 3256, 3275, 3291, 3310, 3331, 3351, 3373, 3395, 3418, 3435, 3448, 3465, 3484, 3504, 3522, 3532, 3544, 3561, 3577, 3590, 3606, 3616, 3636, 3659, 3681, 3703, 3723, 3743, 3767, 3788, 3814, 3838, 3861, 3883, 3905, 3916, 3942, 3967, 3994, 4015, 4039, 4064, 4079, 4091, 4112, 4132, 4170, 4192, 4213, 4235, 4259, 4278, 4299, 4321, 4336, 4361, 4383, 4403, 4422, 4432, 4448, 4476, 4495, 4514, 4538, 4549, 4564, 4579, 4597, 4616, 4638, 4657, 4689, 4718, 4731, 4751, 4779, 4801, 4819, 4843, 4869, 4885, 4907, 4919}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
