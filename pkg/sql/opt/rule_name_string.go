// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[NegateComparison-19]
	_ = x[EliminateNot-20]
	_ = x[NegateAnd-21]
	_ = x[NegateOr-22]
	_ = x[ExtractRedundantConjunct-23]
	_ = x[CommuteVarInequality-24]
	_ = x[CommuteConstInequality-25]
	_ = x[NormalizeCmpPlusConst-26]
	_ = x[NormalizeCmpMinusConst-27]
	_ = x[NormalizeCmpConstMinus-28]
	_ = x[NormalizeTupleEquality-29]
	_ = x[FoldNullComparisonLeft-30]
	_ = x[FoldNullComparisonRight-31]
	_ = x[FoldIsNull-32]
	_ = x[FoldNonNullIsNull-33]
	_ = x[FoldIsNotNull-34]
	_ = x[FoldNonNullIsNotNull-35]
	_ = x[CommuteNullIs-36]
	_ = x[DecorrelateJoin-37]
	_ = x[DecorrelateProjectSet-38]
	_ = x[TryDecorrelateSelect-39]
	_ = x[TryDecorrelateProject-40]
	_ = x[TryDecorrelateProjectSelect-41]
	_ = x[TryDecorrelateProjectInnerJoin-42]
	_ = x[TryDecorrelateInnerJoin-43]
	_ = x[TryDecorrelateInnerLeftJoin-44]
	_ = x[TryDecorrelateGroupBy-45]
	_ = x[TryDecorrelateScalarGroupBy-46]
	_ = x[TryDecorrelateSemiJoin-47]
	_ = x[TryDecorrelateLimitOne-48]
	_ = x[TryDecorrelateProjectSet-49]
	_ = x[TryDecorrelateWindow-50]
	_ = x[HoistSelectExists-51]
	_ = x[HoistSelectNotExists-52]
	_ = x[HoistSelectSubquery-53]
	_ = x[HoistProjectSubquery-54]
	_ = x[HoistJoinSubquery-55]
	_ = x[HoistValuesSubquery-56]
	_ = x[HoistProjectSetSubquery-57]
	_ = x[NormalizeSelectAnyFilter-58]
	_ = x[NormalizeJoinAnyFilter-59]
	_ = x[NormalizeSelectNotAnyFilter-60]
	_ = x[NormalizeJoinNotAnyFilter-61]
	_ = x[FoldNullCast-62]
	_ = x[FoldNullUnary-63]
	_ = x[FoldNullBinaryLeft-64]
	_ = x[FoldNullBinaryRight-65]
	_ = x[FoldNullInNonEmpty-66]
	_ = x[FoldNullInEmpty-67]
	_ = x[FoldNullNotInEmpty-68]
	_ = x[FoldArray-69]
	_ = x[FoldBinary-70]
	_ = x[FoldUnary-71]
	_ = x[FoldComparison-72]
	_ = x[FoldCast-73]
	_ = x[FoldIndirection-74]
	_ = x[FoldColumnAccess-75]
	_ = x[FoldFunction-76]
	_ = x[ConvertGroupByToDistinct-77]
	_ = x[EliminateDistinct-78]
	_ = x[EliminateGroupByProject-79]
	_ = x[ReduceGroupingCols-80]
	_ = x[EliminateAggDistinctForKeys-81]
	_ = x[EliminateDistinctOnNoColumns-82]
	_ = x[InlineProjectConstants-83]
	_ = x[InlineSelectConstants-84]
	_ = x[InlineJoinConstantsLeft-85]
	_ = x[InlineJoinConstantsRight-86]
	_ = x[PushSelectIntoInlinableProject-87]
	_ = x[InlineProjectInProject-88]
	_ = x[SimplifyJoinFilters-89]
	_ = x[DetectJoinContradiction-90]
	_ = x[PushFilterIntoJoinLeftAndRight-91]
	_ = x[MapFilterIntoJoinLeft-92]
	_ = x[MapFilterIntoJoinRight-93]
	_ = x[PushFilterIntoJoinLeft-94]
	_ = x[PushFilterIntoJoinRight-95]
	_ = x[SimplifyLeftJoinWithoutFilters-96]
	_ = x[SimplifyRightJoinWithoutFilters-97]
	_ = x[SimplifyLeftJoinWithFilters-98]
	_ = x[SimplifyRightJoinWithFilters-99]
	_ = x[EliminateSemiJoin-100]
	_ = x[EliminateAntiJoin-101]
	_ = x[EliminateJoinNoColsLeft-102]
	_ = x[EliminateJoinNoColsRight-103]
	_ = x[HoistJoinProjectRight-104]
	_ = x[HoistJoinProjectLeft-105]
	_ = x[SimplifyJoinNotNullEquality-106]
	_ = x[ExtractJoinEqualities-107]
	_ = x[SortFiltersInJoin-108]
	_ = x[EliminateLimit-109]
	_ = x[EliminateOffset-110]
	_ = x[PushLimitIntoProject-111]
	_ = x[PushOffsetIntoProject-112]
	_ = x[PushLimitIntoOffset-113]
	_ = x[EliminateMax1Row-114]
	_ = x[FoldPlusZero-115]
	_ = x[FoldZeroPlus-116]
	_ = x[FoldMinusZero-117]
	_ = x[FoldMultOne-118]
	_ = x[FoldOneMult-119]
	_ = x[FoldDivOne-120]
	_ = x[InvertMinus-121]
	_ = x[EliminateUnaryMinus-122]
	_ = x[SimplifyLimitOrdering-123]
	_ = x[SimplifyOffsetOrdering-124]
	_ = x[SimplifyGroupByOrdering-125]
	_ = x[SimplifyOrdinalityOrdering-126]
	_ = x[SimplifyExplainOrdering-127]
	_ = x[EliminateProject-128]
	_ = x[MergeProjects-129]
	_ = x[MergeProjectWithValues-130]
	_ = x[PruneProjectCols-131]
	_ = x[PruneScanCols-132]
	_ = x[PruneSelectCols-133]
	_ = x[PruneLimitCols-134]
	_ = x[PruneOffsetCols-135]
	_ = x[PruneJoinLeftCols-136]
	_ = x[PruneJoinRightCols-137]
	_ = x[PruneSemiAntiJoinRightCols-138]
	_ = x[PruneAggCols-139]
	_ = x[PruneGroupByCols-140]
	_ = x[PruneValuesCols-141]
	_ = x[PruneOrdinalityCols-142]
	_ = x[PruneExplainCols-143]
	_ = x[PruneProjectSetCols-144]
	_ = x[PruneWindowOutputCols-145]
	_ = x[PruneWindowInputCols-146]
	_ = x[PruneMutationFetchCols-147]
	_ = x[PruneMutationInputCols-148]
	_ = x[PruneMutationReturnCols-149]
	_ = x[RejectNullsLeftJoin-150]
	_ = x[RejectNullsRightJoin-151]
	_ = x[RejectNullsGroupBy-152]
	_ = x[CommuteVar-153]
	_ = x[CommuteConst-154]
	_ = x[EliminateCoalesce-155]
	_ = x[SimplifyCoalesce-156]
	_ = x[EliminateCast-157]
	_ = x[NormalizeInConst-158]
	_ = x[FoldInNull-159]
	_ = x[UnifyComparisonTypes-160]
	_ = x[EliminateExistsProject-161]
	_ = x[EliminateExistsGroupBy-162]
	_ = x[IntroduceExistsLimit-163]
	_ = x[NormalizeJSONFieldAccess-164]
	_ = x[NormalizeJSONContains-165]
	_ = x[SimplifyCaseWhenConstValue-166]
	_ = x[SimplifyEqualsAnyTuple-167]
	_ = x[SimplifyAnyScalarArray-168]
	_ = x[FoldCollate-169]
	_ = x[NormalizeArrayFlattenToAgg-170]
	_ = x[SimplifySelectFilters-171]
	_ = x[ConsolidateSelectFilters-172]
	_ = x[DetectSelectContradiction-173]
	_ = x[EliminateSelect-174]
	_ = x[MergeSelects-175]
	_ = x[PushSelectIntoProject-176]
	_ = x[MergeSelectInnerJoin-177]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-178]
	_ = x[PushSelectCondRightIntoJoinLeftAndRight-179]
	_ = x[PushSelectIntoJoinLeft-180]
	_ = x[PushSelectIntoJoinRight-181]
	_ = x[PushSelectIntoGroupBy-182]
	_ = x[RemoveNotNullCondition-183]
	_ = x[EliminateUnionAllLeft-184]
	_ = x[EliminateUnionAllRight-185]
	_ = x[PushFilterIntoSetOp-186]
	_ = x[EliminateWindow-187]
	_ = x[ReduceWindowPartitionCols-188]
	_ = x[SimplifyWindowOrdering-189]
	_ = x[PushSelectIntoWindow-190]
	_ = x[PushLimitIntoWindow-191]
	_ = x[startExploreRule-192]
	_ = x[ReplaceMinWithLimit-193]
	_ = x[ReplaceMaxWithLimit-194]
	_ = x[GenerateStreamingGroupBy-195]
	_ = x[CommuteJoin-196]
	_ = x[CommuteLeftJoin-197]
	_ = x[CommuteRightJoin-198]
	_ = x[CommuteSemiJoin-199]
	_ = x[GenerateMergeJoins-200]
	_ = x[GenerateLookupJoins-201]
	_ = x[GenerateZigzagJoins-202]
	_ = x[GenerateInvertedIndexZigzagJoins-203]
	_ = x[GenerateLookupJoinsWithFilter-204]
	_ = x[AssociateJoin-205]
	_ = x[GenerateLimitedScans-206]
	_ = x[PushLimitIntoConstrainedScan-207]
	_ = x[PushLimitIntoIndexJoin-208]
	_ = x[GenerateIndexScans-209]
	_ = x[GenerateConstrainedScans-210]
	_ = x[GenerateInvertedIndexScans-211]
	_ = x[NumRuleNames-212]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldNullInEmptyFoldNullNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsEliminateAggDistinctForKeysEliminateDistinctOnNoColumnsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinEliminateAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectCondRightIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoJoinRightPushSelectIntoGroupByRemoveNotNullConditionEliminateUnionAllLeftEliminateUnionAllRightPushFilterIntoSetOpEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowstartExploreRuleReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteRightJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 318, 330, 339, 347, 371, 391, 413, 434, 456, 478, 500, 522, 545, 555, 572, 585, 605, 618, 633, 654, 674, 695, 722, 752, 775, 802, 823, 850, 872, 894, 918, 938, 955, 975, 994, 1014, 1031, 1050, 1073, 1097, 1119, 1146, 1171, 1183, 1196, 1214, 1233, 1251, 1266, 1284, 1293, 1303, 1312, 1326, 1334, 1349, 1365, 1377, 1401, 1418, 1441, 1459, 1486, 1514, 1536, 1557, 1580, 1604, 1634, 1656, 1675, 1698, 1728, 1749, 1771, 1793, 1816, 1846, 1877, 1904, 1932, 1949, 1966, 1989, 2013, 2034, 2054, 2081, 2102, 2119, 2133, 2148, 2168, 2189, 2208, 2224, 2236, 2248, 2261, 2272, 2283, 2293, 2304, 2323, 2344, 2366, 2389, 2415, 2438, 2454, 2467, 2489, 2505, 2518, 2533, 2547, 2562, 2579, 2597, 2623, 2635, 2651, 2666, 2685, 2701, 2720, 2741, 2761, 2783, 2805, 2828, 2847, 2867, 2885, 2895, 2907, 2924, 2940, 2953, 2969, 2979, 2999, 3021, 3043, 3063, 3087, 3108, 3134, 3156, 3178, 3189, 3215, 3236, 3260, 3285, 3300, 3312, 3333, 3353, 3391, 3430, 3452, 3475, 3496, 3518, 3539, 3561, 3580, 3595, 3620, 3642, 3662, 3681, 3697, 3716, 3735, 3759, 3770, 3785, 3801, 3816, 3834, 3853, 3872, 3904, 3933, 3946, 3966, 3994, 4016, 4034, 4058, 4084, 4096}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
