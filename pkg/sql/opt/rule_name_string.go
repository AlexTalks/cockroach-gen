// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[NegateComparison-19]
	_ = x[EliminateNot-20]
	_ = x[NegateAnd-21]
	_ = x[NegateOr-22]
	_ = x[ExtractRedundantConjunct-23]
	_ = x[CommuteVarInequality-24]
	_ = x[CommuteConstInequality-25]
	_ = x[NormalizeCmpPlusConst-26]
	_ = x[NormalizeCmpMinusConst-27]
	_ = x[NormalizeCmpConstMinus-28]
	_ = x[NormalizeTupleEquality-29]
	_ = x[FoldNullComparisonLeft-30]
	_ = x[FoldNullComparisonRight-31]
	_ = x[FoldIsNull-32]
	_ = x[FoldNonNullIsNull-33]
	_ = x[FoldIsNotNull-34]
	_ = x[FoldNonNullIsNotNull-35]
	_ = x[CommuteNullIs-36]
	_ = x[DecorrelateJoin-37]
	_ = x[DecorrelateProjectSet-38]
	_ = x[TryDecorrelateSelect-39]
	_ = x[TryDecorrelateProject-40]
	_ = x[TryDecorrelateProjectSelect-41]
	_ = x[TryDecorrelateProjectInnerJoin-42]
	_ = x[TryDecorrelateInnerJoin-43]
	_ = x[TryDecorrelateInnerLeftJoin-44]
	_ = x[TryDecorrelateGroupBy-45]
	_ = x[TryDecorrelateScalarGroupBy-46]
	_ = x[TryDecorrelateSemiJoin-47]
	_ = x[TryDecorrelateLimitOne-48]
	_ = x[TryDecorrelateProjectSet-49]
	_ = x[HoistSelectExists-50]
	_ = x[HoistSelectNotExists-51]
	_ = x[HoistSelectSubquery-52]
	_ = x[HoistProjectSubquery-53]
	_ = x[HoistJoinSubquery-54]
	_ = x[HoistValuesSubquery-55]
	_ = x[HoistProjectSetSubquery-56]
	_ = x[NormalizeSelectAnyFilter-57]
	_ = x[NormalizeJoinAnyFilter-58]
	_ = x[NormalizeSelectNotAnyFilter-59]
	_ = x[NormalizeJoinNotAnyFilter-60]
	_ = x[FoldNullCast-61]
	_ = x[FoldNullUnary-62]
	_ = x[FoldNullBinaryLeft-63]
	_ = x[FoldNullBinaryRight-64]
	_ = x[FoldNullInNonEmpty-65]
	_ = x[FoldNullInEmpty-66]
	_ = x[FoldNullNotInEmpty-67]
	_ = x[FoldArray-68]
	_ = x[FoldBinary-69]
	_ = x[FoldUnary-70]
	_ = x[FoldComparison-71]
	_ = x[FoldCast-72]
	_ = x[FoldIndirection-73]
	_ = x[FoldColumnAccess-74]
	_ = x[FoldFunction-75]
	_ = x[ConvertGroupByToDistinct-76]
	_ = x[EliminateDistinct-77]
	_ = x[EliminateGroupByProject-78]
	_ = x[ReduceGroupingCols-79]
	_ = x[EliminateAggDistinctForKeys-80]
	_ = x[EliminateDistinctOnNoColumns-81]
	_ = x[InlineProjectConstants-82]
	_ = x[InlineSelectConstants-83]
	_ = x[InlineJoinConstantsLeft-84]
	_ = x[InlineJoinConstantsRight-85]
	_ = x[PushSelectIntoInlinableProject-86]
	_ = x[InlineProjectInProject-87]
	_ = x[SimplifyJoinFilters-88]
	_ = x[DetectJoinContradiction-89]
	_ = x[PushFilterIntoJoinLeftAndRight-90]
	_ = x[MapFilterIntoJoinLeft-91]
	_ = x[MapFilterIntoJoinRight-92]
	_ = x[PushFilterIntoJoinLeft-93]
	_ = x[PushFilterIntoJoinRight-94]
	_ = x[SimplifyLeftJoinWithoutFilters-95]
	_ = x[SimplifyRightJoinWithoutFilters-96]
	_ = x[SimplifyLeftJoinWithFilters-97]
	_ = x[SimplifyRightJoinWithFilters-98]
	_ = x[EliminateSemiJoin-99]
	_ = x[EliminateAntiJoin-100]
	_ = x[EliminateJoinNoColsLeft-101]
	_ = x[EliminateJoinNoColsRight-102]
	_ = x[HoistJoinProjectRight-103]
	_ = x[HoistJoinProjectLeft-104]
	_ = x[SimplifyJoinNotNullEquality-105]
	_ = x[ExtractJoinEqualities-106]
	_ = x[SortFiltersInJoin-107]
	_ = x[EliminateLimit-108]
	_ = x[PushLimitIntoProject-109]
	_ = x[PushOffsetIntoProject-110]
	_ = x[EliminateMax1Row-111]
	_ = x[FoldPlusZero-112]
	_ = x[FoldZeroPlus-113]
	_ = x[FoldMinusZero-114]
	_ = x[FoldMultOne-115]
	_ = x[FoldOneMult-116]
	_ = x[FoldDivOne-117]
	_ = x[InvertMinus-118]
	_ = x[EliminateUnaryMinus-119]
	_ = x[SimplifyLimitOrdering-120]
	_ = x[SimplifyOffsetOrdering-121]
	_ = x[SimplifyGroupByOrdering-122]
	_ = x[SimplifyOrdinalityOrdering-123]
	_ = x[SimplifyExplainOrdering-124]
	_ = x[EliminateProject-125]
	_ = x[MergeProjects-126]
	_ = x[MergeProjectWithValues-127]
	_ = x[PruneProjectCols-128]
	_ = x[PruneScanCols-129]
	_ = x[PruneSelectCols-130]
	_ = x[PruneLimitCols-131]
	_ = x[PruneOffsetCols-132]
	_ = x[PruneJoinLeftCols-133]
	_ = x[PruneJoinRightCols-134]
	_ = x[PruneAggCols-135]
	_ = x[PruneGroupByCols-136]
	_ = x[PruneValuesCols-137]
	_ = x[PruneOrdinalityCols-138]
	_ = x[PruneExplainCols-139]
	_ = x[PruneProjectSetCols-140]
	_ = x[PruneWindowOutputCols-141]
	_ = x[PruneWindowInputCols-142]
	_ = x[PruneMutationFetchCols-143]
	_ = x[PruneMutationInputCols-144]
	_ = x[RejectNullsLeftJoin-145]
	_ = x[RejectNullsRightJoin-146]
	_ = x[RejectNullsGroupBy-147]
	_ = x[CommuteVar-148]
	_ = x[CommuteConst-149]
	_ = x[EliminateCoalesce-150]
	_ = x[SimplifyCoalesce-151]
	_ = x[EliminateCast-152]
	_ = x[NormalizeInConst-153]
	_ = x[FoldInNull-154]
	_ = x[UnifyComparisonTypes-155]
	_ = x[EliminateExistsProject-156]
	_ = x[EliminateExistsGroupBy-157]
	_ = x[IntroduceExistsLimit-158]
	_ = x[NormalizeJSONFieldAccess-159]
	_ = x[NormalizeJSONContains-160]
	_ = x[SimplifyCaseWhenConstValue-161]
	_ = x[SimplifyEqualsAnyTuple-162]
	_ = x[SimplifyAnyScalarArray-163]
	_ = x[FoldCollate-164]
	_ = x[NormalizeArrayFlattenToAgg-165]
	_ = x[SimplifySelectFilters-166]
	_ = x[ConsolidateSelectFilters-167]
	_ = x[DetectSelectContradiction-168]
	_ = x[EliminateSelect-169]
	_ = x[MergeSelects-170]
	_ = x[PushSelectIntoProject-171]
	_ = x[MergeSelectInnerJoin-172]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-173]
	_ = x[PushSelectCondRightIntoJoinLeftAndRight-174]
	_ = x[PushSelectIntoJoinLeft-175]
	_ = x[PushSelectIntoJoinRight-176]
	_ = x[PushSelectIntoGroupBy-177]
	_ = x[RemoveNotNullCondition-178]
	_ = x[EliminateUnionAllLeft-179]
	_ = x[EliminateUnionAllRight-180]
	_ = x[PushFilterIntoSetOp-181]
	_ = x[EliminateWindow-182]
	_ = x[ReduceWindowPartitionCols-183]
	_ = x[SimplifyWindowOrdering-184]
	_ = x[startExploreRule-185]
	_ = x[ReplaceMinWithLimit-186]
	_ = x[ReplaceMaxWithLimit-187]
	_ = x[GenerateStreamingGroupBy-188]
	_ = x[CommuteJoin-189]
	_ = x[CommuteLeftJoin-190]
	_ = x[CommuteRightJoin-191]
	_ = x[GenerateMergeJoins-192]
	_ = x[GenerateLookupJoins-193]
	_ = x[GenerateZigzagJoins-194]
	_ = x[GenerateInvertedIndexZigzagJoins-195]
	_ = x[GenerateLookupJoinsWithFilter-196]
	_ = x[AssociateJoin-197]
	_ = x[GenerateLimitedScans-198]
	_ = x[PushLimitIntoConstrainedScan-199]
	_ = x[PushLimitIntoIndexJoin-200]
	_ = x[GenerateIndexScans-201]
	_ = x[GenerateConstrainedScans-202]
	_ = x[GenerateInvertedIndexScans-203]
	_ = x[NumRuleNames-204]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldNullInEmptyFoldNullNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsEliminateAggDistinctForKeysEliminateDistinctOnNoColumnsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinEliminateAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitPushLimitIntoProjectPushOffsetIntoProjectEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectCondRightIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoJoinRightPushSelectIntoGroupByRemoveNotNullConditionEliminateUnionAllLeftEliminateUnionAllRightPushFilterIntoSetOpEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingstartExploreRuleReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteRightJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 318, 330, 339, 347, 371, 391, 413, 434, 456, 478, 500, 522, 545, 555, 572, 585, 605, 618, 633, 654, 674, 695, 722, 752, 775, 802, 823, 850, 872, 894, 918, 935, 955, 974, 994, 1011, 1030, 1053, 1077, 1099, 1126, 1151, 1163, 1176, 1194, 1213, 1231, 1246, 1264, 1273, 1283, 1292, 1306, 1314, 1329, 1345, 1357, 1381, 1398, 1421, 1439, 1466, 1494, 1516, 1537, 1560, 1584, 1614, 1636, 1655, 1678, 1708, 1729, 1751, 1773, 1796, 1826, 1857, 1884, 1912, 1929, 1946, 1969, 1993, 2014, 2034, 2061, 2082, 2099, 2113, 2133, 2154, 2170, 2182, 2194, 2207, 2218, 2229, 2239, 2250, 2269, 2290, 2312, 2335, 2361, 2384, 2400, 2413, 2435, 2451, 2464, 2479, 2493, 2508, 2525, 2543, 2555, 2571, 2586, 2605, 2621, 2640, 2661, 2681, 2703, 2725, 2744, 2764, 2782, 2792, 2804, 2821, 2837, 2850, 2866, 2876, 2896, 2918, 2940, 2960, 2984, 3005, 3031, 3053, 3075, 3086, 3112, 3133, 3157, 3182, 3197, 3209, 3230, 3250, 3288, 3327, 3349, 3372, 3393, 3415, 3436, 3458, 3477, 3492, 3517, 3539, 3555, 3574, 3593, 3617, 3628, 3643, 3659, 3677, 3696, 3715, 3747, 3776, 3789, 3809, 3837, 3859, 3877, 3901, 3927, 3939}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
