// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[NegateComparison-19]
	_ = x[EliminateNot-20]
	_ = x[NegateAnd-21]
	_ = x[NegateOr-22]
	_ = x[ExtractRedundantConjunct-23]
	_ = x[CommuteVarInequality-24]
	_ = x[CommuteConstInequality-25]
	_ = x[NormalizeCmpPlusConst-26]
	_ = x[NormalizeCmpMinusConst-27]
	_ = x[NormalizeCmpConstMinus-28]
	_ = x[NormalizeTupleEquality-29]
	_ = x[FoldNullComparisonLeft-30]
	_ = x[FoldNullComparisonRight-31]
	_ = x[FoldIsNull-32]
	_ = x[FoldNonNullIsNull-33]
	_ = x[FoldIsNotNull-34]
	_ = x[FoldNonNullIsNotNull-35]
	_ = x[CommuteNullIs-36]
	_ = x[DecorrelateJoin-37]
	_ = x[DecorrelateProjectSet-38]
	_ = x[TryDecorrelateSelect-39]
	_ = x[TryDecorrelateProject-40]
	_ = x[TryDecorrelateProjectSelect-41]
	_ = x[TryDecorrelateProjectInnerJoin-42]
	_ = x[TryDecorrelateInnerJoin-43]
	_ = x[TryDecorrelateInnerLeftJoin-44]
	_ = x[TryDecorrelateGroupBy-45]
	_ = x[TryDecorrelateScalarGroupBy-46]
	_ = x[TryDecorrelateSemiJoin-47]
	_ = x[TryDecorrelateLimitOne-48]
	_ = x[TryDecorrelateProjectSet-49]
	_ = x[TryDecorrelateWindow-50]
	_ = x[HoistSelectExists-51]
	_ = x[HoistSelectNotExists-52]
	_ = x[HoistSelectSubquery-53]
	_ = x[HoistProjectSubquery-54]
	_ = x[HoistJoinSubquery-55]
	_ = x[HoistValuesSubquery-56]
	_ = x[HoistProjectSetSubquery-57]
	_ = x[NormalizeSelectAnyFilter-58]
	_ = x[NormalizeJoinAnyFilter-59]
	_ = x[NormalizeSelectNotAnyFilter-60]
	_ = x[NormalizeJoinNotAnyFilter-61]
	_ = x[FoldNullCast-62]
	_ = x[FoldNullUnary-63]
	_ = x[FoldNullBinaryLeft-64]
	_ = x[FoldNullBinaryRight-65]
	_ = x[FoldNullInNonEmpty-66]
	_ = x[FoldNullInEmpty-67]
	_ = x[FoldNullNotInEmpty-68]
	_ = x[FoldArray-69]
	_ = x[FoldBinary-70]
	_ = x[FoldUnary-71]
	_ = x[FoldComparison-72]
	_ = x[FoldCast-73]
	_ = x[FoldIndirection-74]
	_ = x[FoldColumnAccess-75]
	_ = x[FoldFunction-76]
	_ = x[ConvertGroupByToDistinct-77]
	_ = x[EliminateDistinct-78]
	_ = x[EliminateGroupByProject-79]
	_ = x[ReduceGroupingCols-80]
	_ = x[EliminateAggDistinctForKeys-81]
	_ = x[EliminateDistinctOnNoColumns-82]
	_ = x[InlineProjectConstants-83]
	_ = x[InlineSelectConstants-84]
	_ = x[InlineJoinConstantsLeft-85]
	_ = x[InlineJoinConstantsRight-86]
	_ = x[PushSelectIntoInlinableProject-87]
	_ = x[InlineProjectInProject-88]
	_ = x[SimplifyJoinFilters-89]
	_ = x[DetectJoinContradiction-90]
	_ = x[PushFilterIntoJoinLeftAndRight-91]
	_ = x[MapFilterIntoJoinLeft-92]
	_ = x[MapFilterIntoJoinRight-93]
	_ = x[PushFilterIntoJoinLeft-94]
	_ = x[PushFilterIntoJoinRight-95]
	_ = x[SimplifyLeftJoinWithoutFilters-96]
	_ = x[SimplifyRightJoinWithoutFilters-97]
	_ = x[SimplifyLeftJoinWithFilters-98]
	_ = x[SimplifyRightJoinWithFilters-99]
	_ = x[EliminateSemiJoin-100]
	_ = x[SimplifyZeroCardinalitySemiJoin-101]
	_ = x[EliminateAntiJoin-102]
	_ = x[SimplifyZeroCardinalityAntiJoin-103]
	_ = x[EliminateJoinNoColsLeft-104]
	_ = x[EliminateJoinNoColsRight-105]
	_ = x[HoistJoinProjectRight-106]
	_ = x[HoistJoinProjectLeft-107]
	_ = x[SimplifyJoinNotNullEquality-108]
	_ = x[ExtractJoinEqualities-109]
	_ = x[SortFiltersInJoin-110]
	_ = x[EliminateLimit-111]
	_ = x[EliminateOffset-112]
	_ = x[PushLimitIntoProject-113]
	_ = x[PushOffsetIntoProject-114]
	_ = x[PushLimitIntoOffset-115]
	_ = x[EliminateMax1Row-116]
	_ = x[FoldPlusZero-117]
	_ = x[FoldZeroPlus-118]
	_ = x[FoldMinusZero-119]
	_ = x[FoldMultOne-120]
	_ = x[FoldOneMult-121]
	_ = x[FoldDivOne-122]
	_ = x[InvertMinus-123]
	_ = x[EliminateUnaryMinus-124]
	_ = x[SimplifyLimitOrdering-125]
	_ = x[SimplifyOffsetOrdering-126]
	_ = x[SimplifyGroupByOrdering-127]
	_ = x[SimplifyOrdinalityOrdering-128]
	_ = x[SimplifyExplainOrdering-129]
	_ = x[EliminateProject-130]
	_ = x[MergeProjects-131]
	_ = x[MergeProjectWithValues-132]
	_ = x[PruneProjectCols-133]
	_ = x[PruneScanCols-134]
	_ = x[PruneSelectCols-135]
	_ = x[PruneLimitCols-136]
	_ = x[PruneOffsetCols-137]
	_ = x[PruneJoinLeftCols-138]
	_ = x[PruneJoinRightCols-139]
	_ = x[PruneSemiAntiJoinRightCols-140]
	_ = x[PruneAggCols-141]
	_ = x[PruneGroupByCols-142]
	_ = x[PruneValuesCols-143]
	_ = x[PruneOrdinalityCols-144]
	_ = x[PruneExplainCols-145]
	_ = x[PruneProjectSetCols-146]
	_ = x[PruneWindowOutputCols-147]
	_ = x[PruneWindowInputCols-148]
	_ = x[PruneMutationFetchCols-149]
	_ = x[PruneMutationInputCols-150]
	_ = x[PruneMutationReturnCols-151]
	_ = x[RejectNullsLeftJoin-152]
	_ = x[RejectNullsRightJoin-153]
	_ = x[RejectNullsGroupBy-154]
	_ = x[CommuteVar-155]
	_ = x[CommuteConst-156]
	_ = x[EliminateCoalesce-157]
	_ = x[SimplifyCoalesce-158]
	_ = x[EliminateCast-159]
	_ = x[NormalizeInConst-160]
	_ = x[FoldInNull-161]
	_ = x[UnifyComparisonTypes-162]
	_ = x[EliminateExistsProject-163]
	_ = x[EliminateExistsGroupBy-164]
	_ = x[IntroduceExistsLimit-165]
	_ = x[NormalizeJSONFieldAccess-166]
	_ = x[NormalizeJSONContains-167]
	_ = x[SimplifyCaseWhenConstValue-168]
	_ = x[SimplifyEqualsAnyTuple-169]
	_ = x[SimplifyAnyScalarArray-170]
	_ = x[FoldCollate-171]
	_ = x[NormalizeArrayFlattenToAgg-172]
	_ = x[SimplifySelectFilters-173]
	_ = x[ConsolidateSelectFilters-174]
	_ = x[DetectSelectContradiction-175]
	_ = x[EliminateSelect-176]
	_ = x[MergeSelects-177]
	_ = x[PushSelectIntoProject-178]
	_ = x[MergeSelectInnerJoin-179]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-180]
	_ = x[PushSelectCondRightIntoJoinLeftAndRight-181]
	_ = x[PushSelectIntoJoinLeft-182]
	_ = x[PushSelectIntoJoinRight-183]
	_ = x[PushSelectIntoGroupBy-184]
	_ = x[RemoveNotNullCondition-185]
	_ = x[EliminateUnionAllLeft-186]
	_ = x[EliminateUnionAllRight-187]
	_ = x[PushFilterIntoSetOp-188]
	_ = x[EliminateWindow-189]
	_ = x[ReduceWindowPartitionCols-190]
	_ = x[SimplifyWindowOrdering-191]
	_ = x[PushSelectIntoWindow-192]
	_ = x[PushLimitIntoWindow-193]
	_ = x[startExploreRule-194]
	_ = x[ReplaceMinWithLimit-195]
	_ = x[ReplaceMaxWithLimit-196]
	_ = x[GenerateStreamingGroupBy-197]
	_ = x[CommuteJoin-198]
	_ = x[CommuteLeftJoin-199]
	_ = x[CommuteRightJoin-200]
	_ = x[CommuteSemiJoin-201]
	_ = x[GenerateMergeJoins-202]
	_ = x[GenerateLookupJoins-203]
	_ = x[GenerateZigzagJoins-204]
	_ = x[GenerateInvertedIndexZigzagJoins-205]
	_ = x[GenerateLookupJoinsWithFilter-206]
	_ = x[AssociateJoin-207]
	_ = x[GenerateLimitedScans-208]
	_ = x[PushLimitIntoConstrainedScan-209]
	_ = x[PushLimitIntoIndexJoin-210]
	_ = x[GenerateIndexScans-211]
	_ = x[GenerateConstrainedScans-212]
	_ = x[GenerateInvertedIndexScans-213]
	_ = x[NumRuleNames-214]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldNullInEmptyFoldNullNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsEliminateAggDistinctForKeysEliminateDistinctOnNoColumnsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectCondRightIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoJoinRightPushSelectIntoGroupByRemoveNotNullConditionEliminateUnionAllLeftEliminateUnionAllRightPushFilterIntoSetOpEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowstartExploreRuleReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteRightJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 318, 330, 339, 347, 371, 391, 413, 434, 456, 478, 500, 522, 545, 555, 572, 585, 605, 618, 633, 654, 674, 695, 722, 752, 775, 802, 823, 850, 872, 894, 918, 938, 955, 975, 994, 1014, 1031, 1050, 1073, 1097, 1119, 1146, 1171, 1183, 1196, 1214, 1233, 1251, 1266, 1284, 1293, 1303, 1312, 1326, 1334, 1349, 1365, 1377, 1401, 1418, 1441, 1459, 1486, 1514, 1536, 1557, 1580, 1604, 1634, 1656, 1675, 1698, 1728, 1749, 1771, 1793, 1816, 1846, 1877, 1904, 1932, 1949, 1980, 1997, 2028, 2051, 2075, 2096, 2116, 2143, 2164, 2181, 2195, 2210, 2230, 2251, 2270, 2286, 2298, 2310, 2323, 2334, 2345, 2355, 2366, 2385, 2406, 2428, 2451, 2477, 2500, 2516, 2529, 2551, 2567, 2580, 2595, 2609, 2624, 2641, 2659, 2685, 2697, 2713, 2728, 2747, 2763, 2782, 2803, 2823, 2845, 2867, 2890, 2909, 2929, 2947, 2957, 2969, 2986, 3002, 3015, 3031, 3041, 3061, 3083, 3105, 3125, 3149, 3170, 3196, 3218, 3240, 3251, 3277, 3298, 3322, 3347, 3362, 3374, 3395, 3415, 3453, 3492, 3514, 3537, 3558, 3580, 3601, 3623, 3642, 3657, 3682, 3704, 3724, 3743, 3759, 3778, 3797, 3821, 3832, 3847, 3863, 3878, 3896, 3915, 3934, 3966, 3995, 4008, 4028, 4056, 4078, 4096, 4120, 4146, 4158}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
