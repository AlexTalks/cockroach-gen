// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[HoistSelectExists-52]
	_ = x[HoistSelectNotExists-53]
	_ = x[HoistSelectSubquery-54]
	_ = x[HoistProjectSubquery-55]
	_ = x[HoistJoinSubquery-56]
	_ = x[HoistValuesSubquery-57]
	_ = x[HoistProjectSetSubquery-58]
	_ = x[NormalizeSelectAnyFilter-59]
	_ = x[NormalizeJoinAnyFilter-60]
	_ = x[NormalizeSelectNotAnyFilter-61]
	_ = x[NormalizeJoinNotAnyFilter-62]
	_ = x[FoldNullCast-63]
	_ = x[FoldNullUnary-64]
	_ = x[FoldNullBinaryLeft-65]
	_ = x[FoldNullBinaryRight-66]
	_ = x[FoldNullInNonEmpty-67]
	_ = x[FoldInEmpty-68]
	_ = x[FoldNotInEmpty-69]
	_ = x[FoldArray-70]
	_ = x[FoldBinary-71]
	_ = x[FoldUnary-72]
	_ = x[FoldComparison-73]
	_ = x[FoldCast-74]
	_ = x[FoldIndirection-75]
	_ = x[FoldColumnAccess-76]
	_ = x[FoldFunction-77]
	_ = x[FoldEqualsAnyNull-78]
	_ = x[ConvertGroupByToDistinct-79]
	_ = x[EliminateDistinct-80]
	_ = x[EliminateGroupByProject-81]
	_ = x[ReduceGroupingCols-82]
	_ = x[ReduceNotNullGroupingCols-83]
	_ = x[EliminateAggDistinctForKeys-84]
	_ = x[EliminateAggFilteredDistinctForKeys-85]
	_ = x[EliminateDistinctNoColumns-86]
	_ = x[EliminateErrorDistinctNoColumns-87]
	_ = x[EliminateDistinctOnValues-88]
	_ = x[PushAggDistinctIntoScalarGroupBy-89]
	_ = x[PushAggFilterIntoScalarGroupBy-90]
	_ = x[InlineProjectConstants-91]
	_ = x[InlineSelectConstants-92]
	_ = x[InlineJoinConstantsLeft-93]
	_ = x[InlineJoinConstantsRight-94]
	_ = x[PushSelectIntoInlinableProject-95]
	_ = x[InlineProjectInProject-96]
	_ = x[CommuteRightJoin-97]
	_ = x[SimplifyJoinFilters-98]
	_ = x[DetectJoinContradiction-99]
	_ = x[PushFilterIntoJoinLeftAndRight-100]
	_ = x[MapFilterIntoJoinLeft-101]
	_ = x[MapFilterIntoJoinRight-102]
	_ = x[MapEqualityIntoJoinLeftAndRight-103]
	_ = x[PushFilterIntoJoinLeft-104]
	_ = x[PushFilterIntoJoinRight-105]
	_ = x[SimplifyLeftJoinWithoutFilters-106]
	_ = x[SimplifyRightJoinWithoutFilters-107]
	_ = x[SimplifyLeftJoinWithFilters-108]
	_ = x[SimplifyRightJoinWithFilters-109]
	_ = x[EliminateSemiJoin-110]
	_ = x[SimplifyZeroCardinalitySemiJoin-111]
	_ = x[EliminateAntiJoin-112]
	_ = x[SimplifyZeroCardinalityAntiJoin-113]
	_ = x[EliminateJoinNoColsLeft-114]
	_ = x[EliminateJoinNoColsRight-115]
	_ = x[HoistJoinProjectRight-116]
	_ = x[HoistJoinProjectLeft-117]
	_ = x[SimplifyJoinNotNullEquality-118]
	_ = x[ExtractJoinEqualities-119]
	_ = x[SortFiltersInJoin-120]
	_ = x[EliminateLimit-121]
	_ = x[EliminateOffset-122]
	_ = x[PushLimitIntoProject-123]
	_ = x[PushOffsetIntoProject-124]
	_ = x[PushLimitIntoOffset-125]
	_ = x[PushLimitIntoOrdinality-126]
	_ = x[PushLimitIntoLeftJoin-127]
	_ = x[EliminateMax1Row-128]
	_ = x[FoldPlusZero-129]
	_ = x[FoldZeroPlus-130]
	_ = x[FoldMinusZero-131]
	_ = x[FoldMultOne-132]
	_ = x[FoldOneMult-133]
	_ = x[FoldDivOne-134]
	_ = x[InvertMinus-135]
	_ = x[EliminateUnaryMinus-136]
	_ = x[SimplifyLimitOrdering-137]
	_ = x[SimplifyOffsetOrdering-138]
	_ = x[SimplifyGroupByOrdering-139]
	_ = x[SimplifyOrdinalityOrdering-140]
	_ = x[SimplifyExplainOrdering-141]
	_ = x[EliminateProject-142]
	_ = x[MergeProjects-143]
	_ = x[MergeProjectWithValues-144]
	_ = x[PruneProjectCols-145]
	_ = x[PruneScanCols-146]
	_ = x[PruneSelectCols-147]
	_ = x[PruneLimitCols-148]
	_ = x[PruneOffsetCols-149]
	_ = x[PruneJoinLeftCols-150]
	_ = x[PruneJoinRightCols-151]
	_ = x[PruneSemiAntiJoinRightCols-152]
	_ = x[PruneAggCols-153]
	_ = x[PruneGroupByCols-154]
	_ = x[PruneValuesCols-155]
	_ = x[PruneOrdinalityCols-156]
	_ = x[PruneExplainCols-157]
	_ = x[PruneProjectSetCols-158]
	_ = x[PruneWindowOutputCols-159]
	_ = x[PruneWindowInputCols-160]
	_ = x[PruneMutationFetchCols-161]
	_ = x[PruneMutationInputCols-162]
	_ = x[PruneMutationReturnCols-163]
	_ = x[PruneWithScanCols-164]
	_ = x[PruneWithCols-165]
	_ = x[PruneUnionAllCols-166]
	_ = x[RejectNullsLeftJoin-167]
	_ = x[RejectNullsRightJoin-168]
	_ = x[RejectNullsGroupBy-169]
	_ = x[CommuteVar-170]
	_ = x[CommuteConst-171]
	_ = x[EliminateCoalesce-172]
	_ = x[SimplifyCoalesce-173]
	_ = x[EliminateCast-174]
	_ = x[NormalizeInConst-175]
	_ = x[FoldInNull-176]
	_ = x[UnifyComparisonTypes-177]
	_ = x[EliminateExistsProject-178]
	_ = x[EliminateExistsGroupBy-179]
	_ = x[IntroduceExistsLimit-180]
	_ = x[EliminateExistsLimit-181]
	_ = x[NormalizeJSONFieldAccess-182]
	_ = x[NormalizeJSONContains-183]
	_ = x[SimplifyCaseWhenConstValue-184]
	_ = x[InlineAnyValuesSingleCol-185]
	_ = x[InlineAnyValuesMultiCol-186]
	_ = x[SimplifyEqualsAnyTuple-187]
	_ = x[SimplifyAnyScalarArray-188]
	_ = x[FoldCollate-189]
	_ = x[NormalizeArrayFlattenToAgg-190]
	_ = x[SimplifySelectFilters-191]
	_ = x[ConsolidateSelectFilters-192]
	_ = x[DetectSelectContradiction-193]
	_ = x[EliminateSelect-194]
	_ = x[MergeSelects-195]
	_ = x[PushSelectIntoProject-196]
	_ = x[MergeSelectInnerJoin-197]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-198]
	_ = x[PushSelectIntoJoinLeft-199]
	_ = x[PushSelectIntoGroupBy-200]
	_ = x[RemoveNotNullCondition-201]
	_ = x[InlineConstVar-202]
	_ = x[PushSelectIntoProjectSet-203]
	_ = x[PushFilterIntoSetOp-204]
	_ = x[EliminateUnionAllLeft-205]
	_ = x[EliminateUnionAllRight-206]
	_ = x[EliminateWindow-207]
	_ = x[ReduceWindowPartitionCols-208]
	_ = x[SimplifyWindowOrdering-209]
	_ = x[PushSelectIntoWindow-210]
	_ = x[PushLimitIntoWindow-211]
	_ = x[InlineWith-212]
	_ = x[startExploreRule-213]
	_ = x[ReplaceScalarMinMaxWithLimit-214]
	_ = x[ReplaceMinWithLimit-215]
	_ = x[ReplaceMaxWithLimit-216]
	_ = x[GenerateStreamingGroupBy-217]
	_ = x[CommuteJoin-218]
	_ = x[CommuteLeftJoin-219]
	_ = x[CommuteSemiJoin-220]
	_ = x[GenerateMergeJoins-221]
	_ = x[GenerateLookupJoins-222]
	_ = x[GenerateZigzagJoins-223]
	_ = x[GenerateInvertedIndexZigzagJoins-224]
	_ = x[GenerateLookupJoinsWithFilter-225]
	_ = x[AssociateJoin-226]
	_ = x[GenerateLimitedScans-227]
	_ = x[PushLimitIntoConstrainedScan-228]
	_ = x[PushLimitIntoIndexJoin-229]
	_ = x[GenerateIndexScans-230]
	_ = x[GenerateConstrainedScans-231]
	_ = x[GenerateInvertedIndexScans-232]
	_ = x[SplitDisjunction-233]
	_ = x[SplitDisjunctionAddKey-234]
	_ = x[NumRuleNames-235]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateErrorDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoScalarGroupByPushAggFilterIntoScalarGroupByInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 966, 986, 1005, 1025, 1042, 1061, 1084, 1108, 1130, 1157, 1182, 1194, 1207, 1225, 1244, 1262, 1273, 1287, 1296, 1306, 1315, 1329, 1337, 1352, 1368, 1380, 1397, 1421, 1438, 1461, 1479, 1504, 1531, 1566, 1592, 1623, 1648, 1680, 1710, 1732, 1753, 1776, 1800, 1830, 1852, 1868, 1887, 1910, 1940, 1961, 1983, 2014, 2036, 2059, 2089, 2120, 2147, 2175, 2192, 2223, 2240, 2271, 2294, 2318, 2339, 2359, 2386, 2407, 2424, 2438, 2453, 2473, 2494, 2513, 2536, 2557, 2573, 2585, 2597, 2610, 2621, 2632, 2642, 2653, 2672, 2693, 2715, 2738, 2764, 2787, 2803, 2816, 2838, 2854, 2867, 2882, 2896, 2911, 2928, 2946, 2972, 2984, 3000, 3015, 3034, 3050, 3069, 3090, 3110, 3132, 3154, 3177, 3194, 3207, 3224, 3243, 3263, 3281, 3291, 3303, 3320, 3336, 3349, 3365, 3375, 3395, 3417, 3439, 3459, 3479, 3503, 3524, 3550, 3574, 3597, 3619, 3641, 3652, 3678, 3699, 3723, 3748, 3763, 3775, 3796, 3816, 3854, 3876, 3897, 3919, 3933, 3957, 3976, 3997, 4019, 4034, 4059, 4081, 4101, 4120, 4130, 4146, 4174, 4193, 4212, 4236, 4247, 4262, 4277, 4295, 4314, 4333, 4365, 4394, 4407, 4427, 4455, 4477, 4495, 4519, 4545, 4561, 4583, 4595}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
