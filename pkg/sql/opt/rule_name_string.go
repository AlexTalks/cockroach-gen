// Code generated by "stringer"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[FoldCmpSTMaxDistanceLeft-47]
	_ = x[FoldCmpSTMaxDistanceRight-48]
	_ = x[FoldEqTrue-49]
	_ = x[FoldEqFalse-50]
	_ = x[FoldNeTrue-51]
	_ = x[FoldNeFalse-52]
	_ = x[NormCycleTestRelTrueToFalse-53]
	_ = x[NormCycleTestRelFalseToTrue-54]
	_ = x[DecorrelateJoin-55]
	_ = x[DecorrelateProjectSet-56]
	_ = x[TryDecorrelateSelect-57]
	_ = x[TryDecorrelateProject-58]
	_ = x[TryDecorrelateProjectSelect-59]
	_ = x[TryDecorrelateProjectInnerJoin-60]
	_ = x[TryDecorrelateInnerJoin-61]
	_ = x[TryDecorrelateInnerLeftJoin-62]
	_ = x[TryDecorrelateGroupBy-63]
	_ = x[TryDecorrelateScalarGroupBy-64]
	_ = x[TryDecorrelateSemiJoin-65]
	_ = x[TryDecorrelateLimitOne-66]
	_ = x[TryDecorrelateLimit-67]
	_ = x[TryDecorrelateProjectSet-68]
	_ = x[TryDecorrelateWindow-69]
	_ = x[TryDecorrelateMax1Row-70]
	_ = x[HoistSelectExists-71]
	_ = x[HoistSelectNotExists-72]
	_ = x[HoistSelectSubquery-73]
	_ = x[HoistProjectSubquery-74]
	_ = x[HoistJoinSubquery-75]
	_ = x[HoistValuesSubquery-76]
	_ = x[HoistProjectSetSubquery-77]
	_ = x[NormalizeSelectAnyFilter-78]
	_ = x[NormalizeJoinAnyFilter-79]
	_ = x[NormalizeSelectNotAnyFilter-80]
	_ = x[NormalizeJoinNotAnyFilter-81]
	_ = x[FoldNullCast-82]
	_ = x[FoldNullUnary-83]
	_ = x[FoldNullBinaryLeft-84]
	_ = x[FoldNullBinaryRight-85]
	_ = x[FoldNullInNonEmpty-86]
	_ = x[FoldInEmpty-87]
	_ = x[FoldNotInEmpty-88]
	_ = x[FoldArray-89]
	_ = x[FoldBinary-90]
	_ = x[FoldUnary-91]
	_ = x[FoldComparison-92]
	_ = x[FoldCast-93]
	_ = x[FoldAssignmentCast-94]
	_ = x[FoldIndirection-95]
	_ = x[FoldColumnAccess-96]
	_ = x[FoldFunctionWithNullArg-97]
	_ = x[FoldFunction-98]
	_ = x[FoldEqualsAnyNull-99]
	_ = x[ConvertGroupByToDistinct-100]
	_ = x[EliminateGroupByProject-101]
	_ = x[EliminateJoinUnderGroupByLeft-102]
	_ = x[EliminateJoinUnderGroupByRight-103]
	_ = x[EliminateDistinct-104]
	_ = x[ReduceGroupingCols-105]
	_ = x[ReduceNotNullGroupingCols-106]
	_ = x[EliminateAggDistinctForKeys-107]
	_ = x[EliminateAggFilteredDistinctForKeys-108]
	_ = x[EliminateDistinctNoColumns-109]
	_ = x[EliminateEnsureDistinctNoColumns-110]
	_ = x[EliminateDistinctOnValues-111]
	_ = x[PushAggDistinctIntoGroupBy-112]
	_ = x[PushAggFilterIntoScalarGroupBy-113]
	_ = x[ConvertCountToCountRows-114]
	_ = x[ConvertRegressionCountToCount-115]
	_ = x[FoldGroupingOperators-116]
	_ = x[InlineConstVar-117]
	_ = x[InlineProjectConstants-118]
	_ = x[InlineSelectConstants-119]
	_ = x[InlineJoinConstantsLeft-120]
	_ = x[InlineJoinConstantsRight-121]
	_ = x[PushSelectIntoInlinableProject-122]
	_ = x[InlineSelectVirtualColumns-123]
	_ = x[InlineProjectInProject-124]
	_ = x[InlineUDF-125]
	_ = x[CommuteRightJoin-126]
	_ = x[SimplifyJoinFilters-127]
	_ = x[DetectJoinContradiction-128]
	_ = x[PushFilterIntoJoinLeftAndRight-129]
	_ = x[MapFilterIntoJoinLeft-130]
	_ = x[MapFilterIntoJoinRight-131]
	_ = x[MapEqualityIntoJoinLeftAndRight-132]
	_ = x[PushFilterIntoJoinLeft-133]
	_ = x[PushFilterIntoJoinRight-134]
	_ = x[SimplifyLeftJoin-135]
	_ = x[SimplifyRightJoin-136]
	_ = x[EliminateSemiJoin-137]
	_ = x[SimplifyZeroCardinalitySemiJoin-138]
	_ = x[EliminateAntiJoin-139]
	_ = x[SimplifyZeroCardinalityAntiJoin-140]
	_ = x[EliminateJoinNoColsLeft-141]
	_ = x[EliminateJoinNoColsRight-142]
	_ = x[HoistJoinProjectRight-143]
	_ = x[HoistJoinProjectLeft-144]
	_ = x[SimplifyJoinNotNullEquality-145]
	_ = x[ExtractJoinComparisons-146]
	_ = x[SortFiltersInJoin-147]
	_ = x[LeftAssociateJoinsLeft-148]
	_ = x[LeftAssociateJoinsRight-149]
	_ = x[RightAssociateJoinsLeft-150]
	_ = x[RightAssociateJoinsRight-151]
	_ = x[RemoveJoinNotNullCondition-152]
	_ = x[ProjectInnerJoinValues-153]
	_ = x[EliminateLimit-154]
	_ = x[EliminateOffset-155]
	_ = x[PushLimitIntoProject-156]
	_ = x[PushOffsetIntoProject-157]
	_ = x[PushLimitIntoOffset-158]
	_ = x[PushLimitIntoOrdinality-159]
	_ = x[PushLimitIntoJoinLeft-160]
	_ = x[PushLimitIntoJoinRight-161]
	_ = x[FoldLimits-162]
	_ = x[AssociateLimitJoinsLeft-163]
	_ = x[AssociateLimitJoinsRight-164]
	_ = x[EliminateMax1Row-165]
	_ = x[SimplifyPartialIndexProjections-166]
	_ = x[FoldPlusZero-167]
	_ = x[FoldZeroPlus-168]
	_ = x[FoldMinusZero-169]
	_ = x[FoldMultOne-170]
	_ = x[FoldOneMult-171]
	_ = x[FoldDivOne-172]
	_ = x[FoldFloorDivOne-173]
	_ = x[InvertMinus-174]
	_ = x[EliminateUnaryMinus-175]
	_ = x[SimplifyLimitOrdering-176]
	_ = x[SimplifyOffsetOrdering-177]
	_ = x[SimplifyGroupByOrdering-178]
	_ = x[SimplifyOrdinalityOrdering-179]
	_ = x[SimplifyExplainOrdering-180]
	_ = x[SimplifyWithBindingOrdering-181]
	_ = x[EliminateJoinUnderProjectLeft-182]
	_ = x[EliminateJoinUnderProjectRight-183]
	_ = x[EliminateProject-184]
	_ = x[MergeProjects-185]
	_ = x[MergeProjectWithValues-186]
	_ = x[PushColumnRemappingIntoValues-187]
	_ = x[PushAssignmentCastsIntoValues-188]
	_ = x[FoldTupleAccessIntoValues-189]
	_ = x[FoldJSONAccessIntoValues-190]
	_ = x[ConvertZipArraysToValues-191]
	_ = x[PruneProjectCols-192]
	_ = x[PruneScanCols-193]
	_ = x[PruneSelectCols-194]
	_ = x[PruneLimitCols-195]
	_ = x[PruneOffsetCols-196]
	_ = x[PruneJoinLeftCols-197]
	_ = x[PruneJoinRightCols-198]
	_ = x[PruneSemiAntiJoinRightCols-199]
	_ = x[PruneAggCols-200]
	_ = x[PruneGroupByCols-201]
	_ = x[PruneValuesCols-202]
	_ = x[PruneOrdinalityCols-203]
	_ = x[PruneExplainCols-204]
	_ = x[PruneProjectSetCols-205]
	_ = x[PruneWindowOutputCols-206]
	_ = x[PruneWindowInputCols-207]
	_ = x[PruneMutationFetchCols-208]
	_ = x[PruneMutationInputCols-209]
	_ = x[PruneMutationReturnCols-210]
	_ = x[PruneWithScanCols-211]
	_ = x[PruneWithCols-212]
	_ = x[PruneUnionAllCols-213]
	_ = x[RejectNullsLeftJoin-214]
	_ = x[RejectNullsRightJoin-215]
	_ = x[RejectNullsGroupBy-216]
	_ = x[RejectNullsUnderJoinLeft-217]
	_ = x[RejectNullsUnderJoinRight-218]
	_ = x[RejectNullsProject-219]
	_ = x[CommuteVar-220]
	_ = x[CommuteConst-221]
	_ = x[EliminateCoalesce-222]
	_ = x[SimplifyCoalesce-223]
	_ = x[EliminateCast-224]
	_ = x[InlineAnyWithScanOfValues-225]
	_ = x[NormalizeInConst-226]
	_ = x[FoldInNull-227]
	_ = x[SimplifyInSingleElement-228]
	_ = x[SimplifyNotInSingleElement-229]
	_ = x[UnifyComparisonTypes-230]
	_ = x[EliminateExistsZeroRows-231]
	_ = x[EliminateExistsProject-232]
	_ = x[EliminateExistsGroupBy-233]
	_ = x[InlineExistsSelectTuple-234]
	_ = x[IntroduceExistsLimit-235]
	_ = x[EliminateExistsLimit-236]
	_ = x[SimplifyCaseWhenConstValue-237]
	_ = x[InlineAnyValuesSingleCol-238]
	_ = x[InlineAnyValuesMultiCol-239]
	_ = x[SimplifyEqualsAnyTuple-240]
	_ = x[SimplifyAnyScalarArray-241]
	_ = x[FoldCollate-242]
	_ = x[NormalizeArrayFlattenToAgg-243]
	_ = x[SimplifySameVarEqualities-244]
	_ = x[SimplifySameVarInequalities-245]
	_ = x[SimplifyNotDisjoint-246]
	_ = x[ConvertJSONSubscriptToFetchValue-247]
	_ = x[SimplifySelectFilters-248]
	_ = x[ConsolidateSelectFilters-249]
	_ = x[DeduplicateSelectFilters-250]
	_ = x[EliminateSelect-251]
	_ = x[MergeSelects-252]
	_ = x[PushSelectIntoProject-253]
	_ = x[MergeSelectInnerJoin-254]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-255]
	_ = x[PushSelectIntoJoinLeft-256]
	_ = x[PushSelectIntoGroupBy-257]
	_ = x[RemoveNotNullCondition-258]
	_ = x[SimplifyIsNullCondition-259]
	_ = x[PushSelectIntoProjectSet-260]
	_ = x[PushFilterIntoSetOp-261]
	_ = x[EliminateSetLeft-262]
	_ = x[EliminateSetRight-263]
	_ = x[EliminateDistinctSetLeft-264]
	_ = x[EliminateDistinctSetRight-265]
	_ = x[SimplifyExcept-266]
	_ = x[SimplifyIntersectLeft-267]
	_ = x[SimplifyIntersectRight-268]
	_ = x[ConvertUnionToDistinctUnionAll-269]
	_ = x[EliminateWindow-270]
	_ = x[ReduceWindowPartitionCols-271]
	_ = x[SimplifyWindowOrdering-272]
	_ = x[PushSelectIntoWindow-273]
	_ = x[PushLimitIntoWindow-274]
	_ = x[InlineWith-275]
	_ = x[ApplyLimitToRecursiveCTEScan-276]
	_ = x[TryAddLimitToRecursiveBranch-277]
	_ = x[startExploreRule-278]
	_ = x[MemoCycleTestRelRule-279]
	_ = x[MemoCycleTestRelRuleFilter-280]
	_ = x[ReplaceScalarMinMaxWithScalarSubqueries-281]
	_ = x[ReplaceFilteredScalarMinMaxWithSubqueries-282]
	_ = x[ReplaceScalarMinMaxWithLimit-283]
	_ = x[ReplaceMinWithLimit-284]
	_ = x[ReplaceMaxWithLimit-285]
	_ = x[GenerateStreamingGroupBy-286]
	_ = x[SplitGroupByScanIntoUnionScans-287]
	_ = x[SplitGroupByFilteredScanIntoUnionScans-288]
	_ = x[EliminateIndexJoinOrProjectInsideGroupBy-289]
	_ = x[GenerateLimitedGroupByScans-290]
	_ = x[ReorderJoins-291]
	_ = x[CommuteLeftJoin-292]
	_ = x[CommuteSemiJoin-293]
	_ = x[ConvertSemiToInnerJoin-294]
	_ = x[SplitDisjunctionOfJoinTerms-295]
	_ = x[SplitDisjunctionOfAntiJoinTerms-296]
	_ = x[GenerateMergeJoins-297]
	_ = x[GenerateLookupJoins-298]
	_ = x[GenerateInvertedJoins-299]
	_ = x[GenerateInvertedJoinsFromSelect-300]
	_ = x[GenerateLookupJoinsWithFilter-301]
	_ = x[GenerateLookupJoinsWithVirtualCols-302]
	_ = x[GenerateLookupJoinsWithVirtualColsAndFilter-303]
	_ = x[PushJoinIntoIndexJoin-304]
	_ = x[HoistProjectFromInnerJoin-305]
	_ = x[HoistProjectFromLeftJoin-306]
	_ = x[GenerateLocalityOptimizedAntiJoin-307]
	_ = x[GenerateLocalityOptimizedLookupJoin-308]
	_ = x[GenerateLocalityOptimizedSearchOfLocalityOptimizedJoin-309]
	_ = x[GenerateLocalityOptimizedSearchOfLookupJoins-310]
	_ = x[GenerateLimitedScans-311]
	_ = x[PushLimitIntoFilteredScan-312]
	_ = x[PushLimitIntoIndexJoin-313]
	_ = x[SplitLimitedScanIntoUnionScans-314]
	_ = x[SplitLimitedSelectIntoUnionSelects-315]
	_ = x[GenerateTopK-316]
	_ = x[GenerateLimitedTopKScans-317]
	_ = x[GeneratePartialOrderTopK-318]
	_ = x[GenerateStreamingGroupByLimitOrderingHint-319]
	_ = x[EliminateIndexJoinInsideProject-320]
	_ = x[GenerateIndexScans-321]
	_ = x[GenerateLocalityOptimizedScan-322]
	_ = x[GeneratePartialIndexScans-323]
	_ = x[GenerateConstrainedScans-324]
	_ = x[GenerateInvertedIndexScans-325]
	_ = x[GenerateZigzagJoins-326]
	_ = x[GenerateInvertedIndexZigzagJoins-327]
	_ = x[SplitDisjunction-328]
	_ = x[SplitDisjunctionAddKey-329]
	_ = x[GenerateStreamingSetOp-330]
	_ = x[NumRuleNames-331]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightFoldCmpSTMaxDistanceLeftFoldCmpSTMaxDistanceRightFoldEqTrueFoldEqFalseFoldNeTrueFoldNeFalseNormCycleTestRelTrueToFalseNormCycleTestRelFalseToTrueDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateLimitTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldAssignmentCastFoldIndirectionFoldColumnAccessFoldFunctionWithNullArgFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsConvertRegressionCountToCountFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineSelectVirtualColumnsInlineProjectInProjectInlineUDFCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinComparisonsSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightRemoveJoinNotNullConditionProjectInnerJoinValuesEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowSimplifyPartialIndexProjectionsFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneFoldFloorDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingSimplifyWithBindingOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesPushAssignmentCastsIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastInlineAnyWithScanOfValuesNormalizeInConstFoldInNullSimplifyInSingleElementSimplifyNotInSingleElementUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByInlineExistsSelectTupleIntroduceExistsLimitEliminateExistsLimitSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifyNotDisjointConvertJSONSubscriptToFetchValueSimplifySelectFiltersConsolidateSelectFiltersDeduplicateSelectFiltersEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionSimplifyIsNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateSetLeftEliminateSetRightEliminateDistinctSetLeftEliminateDistinctSetRightSimplifyExceptSimplifyIntersectLeftSimplifyIntersectRightConvertUnionToDistinctUnionAllEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithApplyLimitToRecursiveCTEScanTryAddLimitToRecursiveBranchstartExploreRuleMemoCycleTestRelRuleMemoCycleTestRelRuleFilterReplaceScalarMinMaxWithScalarSubqueriesReplaceFilteredScalarMinMaxWithSubqueriesReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupBySplitGroupByScanIntoUnionScansSplitGroupByFilteredScanIntoUnionScansEliminateIndexJoinOrProjectInsideGroupByGenerateLimitedGroupByScansReorderJoinsCommuteLeftJoinCommuteSemiJoinConvertSemiToInnerJoinSplitDisjunctionOfJoinTermsSplitDisjunctionOfAntiJoinTermsGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateLookupJoinsWithFilterGenerateLookupJoinsWithVirtualColsGenerateLookupJoinsWithVirtualColsAndFilterPushJoinIntoIndexJoinHoistProjectFromInnerJoinHoistProjectFromLeftJoinGenerateLocalityOptimizedAntiJoinGenerateLocalityOptimizedLookupJoinGenerateLocalityOptimizedSearchOfLocalityOptimizedJoinGenerateLocalityOptimizedSearchOfLookupJoinsGenerateLimitedScansPushLimitIntoFilteredScanPushLimitIntoIndexJoinSplitLimitedScanIntoUnionScansSplitLimitedSelectIntoUnionSelectsGenerateTopKGenerateLimitedTopKScansGeneratePartialOrderTopKGenerateStreamingGroupByLimitOrderingHintEliminateIndexJoinInsideProjectGenerateIndexScansGenerateLocalityOptimizedScanGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsSplitDisjunctionSplitDisjunctionAddKeyGenerateStreamingSetOpNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 882, 907, 917, 928, 938, 949, 976, 1003, 1018, 1039, 1059, 1080, 1107, 1137, 1160, 1187, 1208, 1235, 1257, 1279, 1298, 1322, 1342, 1363, 1380, 1400, 1419, 1439, 1456, 1475, 1498, 1522, 1544, 1571, 1596, 1608, 1621, 1639, 1658, 1676, 1687, 1701, 1710, 1720, 1729, 1743, 1751, 1769, 1784, 1800, 1823, 1835, 1852, 1876, 1899, 1928, 1958, 1975, 1993, 2018, 2045, 2080, 2106, 2138, 2163, 2189, 2219, 2242, 2271, 2292, 2306, 2328, 2349, 2372, 2396, 2426, 2452, 2474, 2483, 2499, 2518, 2541, 2571, 2592, 2614, 2645, 2667, 2690, 2706, 2723, 2740, 2771, 2788, 2819, 2842, 2866, 2887, 2907, 2934, 2956, 2973, 2995, 3018, 3041, 3065, 3091, 3113, 3127, 3142, 3162, 3183, 3202, 3225, 3246, 3268, 3278, 3301, 3325, 3341, 3372, 3384, 3396, 3409, 3420, 3431, 3441, 3456, 3467, 3486, 3507, 3529, 3552, 3578, 3601, 3628, 3657, 3687, 3703, 3716, 3738, 3767, 3796, 3821, 3845, 3869, 3885, 3898, 3913, 3927, 3942, 3959, 3977, 4003, 4015, 4031, 4046, 4065, 4081, 4100, 4121, 4141, 4163, 4185, 4208, 4225, 4238, 4255, 4274, 4294, 4312, 4336, 4361, 4379, 4389, 4401, 4418, 4434, 4447, 4472, 4488, 4498, 4521, 4547, 4567, 4590, 4612, 4634, 4657, 4677, 4697, 4723, 4747, 4770, 4792, 4814, 4825, 4851, 4876, 4903, 4922, 4954, 4975, 4999, 5023, 5038, 5050, 5071, 5091, 5129, 5151, 5172, 5194, 5217, 5241, 5260, 5276, 5293, 5317, 5342, 5356, 5377, 5399, 5429, 5444, 5469, 5491, 5511, 5530, 5540, 5568, 5596, 5612, 5632, 5658, 5697, 5738, 5766, 5785, 5804, 5828, 5858, 5896, 5936, 5963, 5975, 5990, 6005, 6027, 6054, 6085, 6103, 6122, 6143, 6174, 6203, 6237, 6280, 6301, 6326, 6350, 6383, 6418, 6472, 6516, 6536, 6561, 6583, 6613, 6647, 6659, 6683, 6707, 6748, 6779, 6797, 6826, 6851, 6875, 6901, 6920, 6952, 6968, 6990, 7012, 7024}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
