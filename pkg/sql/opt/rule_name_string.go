// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[NegateComparison-19]
	_ = x[EliminateNot-20]
	_ = x[NegateAnd-21]
	_ = x[NegateOr-22]
	_ = x[ExtractRedundantConjunct-23]
	_ = x[CommuteVarInequality-24]
	_ = x[CommuteConstInequality-25]
	_ = x[NormalizeCmpPlusConst-26]
	_ = x[NormalizeCmpMinusConst-27]
	_ = x[NormalizeCmpConstMinus-28]
	_ = x[NormalizeTupleEquality-29]
	_ = x[FoldNullComparisonLeft-30]
	_ = x[FoldNullComparisonRight-31]
	_ = x[FoldIsNull-32]
	_ = x[FoldNonNullIsNull-33]
	_ = x[FoldIsNotNull-34]
	_ = x[FoldNonNullIsNotNull-35]
	_ = x[CommuteNullIs-36]
	_ = x[DecorrelateJoin-37]
	_ = x[DecorrelateProjectSet-38]
	_ = x[TryDecorrelateSelect-39]
	_ = x[TryDecorrelateProject-40]
	_ = x[TryDecorrelateProjectSelect-41]
	_ = x[TryDecorrelateProjectInnerJoin-42]
	_ = x[TryDecorrelateInnerJoin-43]
	_ = x[TryDecorrelateInnerLeftJoin-44]
	_ = x[TryDecorrelateGroupBy-45]
	_ = x[TryDecorrelateScalarGroupBy-46]
	_ = x[TryDecorrelateSemiJoin-47]
	_ = x[TryDecorrelateLimitOne-48]
	_ = x[TryDecorrelateProjectSet-49]
	_ = x[TryDecorrelateWindow-50]
	_ = x[HoistSelectExists-51]
	_ = x[HoistSelectNotExists-52]
	_ = x[HoistSelectSubquery-53]
	_ = x[HoistProjectSubquery-54]
	_ = x[HoistJoinSubquery-55]
	_ = x[HoistValuesSubquery-56]
	_ = x[HoistProjectSetSubquery-57]
	_ = x[NormalizeSelectAnyFilter-58]
	_ = x[NormalizeJoinAnyFilter-59]
	_ = x[NormalizeSelectNotAnyFilter-60]
	_ = x[NormalizeJoinNotAnyFilter-61]
	_ = x[FoldNullCast-62]
	_ = x[FoldNullUnary-63]
	_ = x[FoldNullBinaryLeft-64]
	_ = x[FoldNullBinaryRight-65]
	_ = x[FoldNullInNonEmpty-66]
	_ = x[FoldNullInEmpty-67]
	_ = x[FoldNullNotInEmpty-68]
	_ = x[FoldArray-69]
	_ = x[FoldBinary-70]
	_ = x[FoldUnary-71]
	_ = x[FoldComparison-72]
	_ = x[FoldCast-73]
	_ = x[FoldIndirection-74]
	_ = x[FoldColumnAccess-75]
	_ = x[FoldFunction-76]
	_ = x[ConvertGroupByToDistinct-77]
	_ = x[EliminateDistinct-78]
	_ = x[EliminateGroupByProject-79]
	_ = x[ReduceGroupingCols-80]
	_ = x[EliminateAggDistinctForKeys-81]
	_ = x[EliminateDistinctOnNoColumns-82]
	_ = x[InlineProjectConstants-83]
	_ = x[InlineSelectConstants-84]
	_ = x[InlineJoinConstantsLeft-85]
	_ = x[InlineJoinConstantsRight-86]
	_ = x[PushSelectIntoInlinableProject-87]
	_ = x[InlineProjectInProject-88]
	_ = x[SimplifyJoinFilters-89]
	_ = x[DetectJoinContradiction-90]
	_ = x[PushFilterIntoJoinLeftAndRight-91]
	_ = x[MapFilterIntoJoinLeft-92]
	_ = x[MapFilterIntoJoinRight-93]
	_ = x[MapEqualityIntoJoinLeftAndRight-94]
	_ = x[PushFilterIntoJoinLeft-95]
	_ = x[PushFilterIntoJoinRight-96]
	_ = x[SimplifyLeftJoinWithoutFilters-97]
	_ = x[SimplifyRightJoinWithoutFilters-98]
	_ = x[SimplifyLeftJoinWithFilters-99]
	_ = x[SimplifyRightJoinWithFilters-100]
	_ = x[EliminateSemiJoin-101]
	_ = x[SimplifyZeroCardinalitySemiJoin-102]
	_ = x[EliminateAntiJoin-103]
	_ = x[SimplifyZeroCardinalityAntiJoin-104]
	_ = x[EliminateJoinNoColsLeft-105]
	_ = x[EliminateJoinNoColsRight-106]
	_ = x[HoistJoinProjectRight-107]
	_ = x[HoistJoinProjectLeft-108]
	_ = x[SimplifyJoinNotNullEquality-109]
	_ = x[ExtractJoinEqualities-110]
	_ = x[SortFiltersInJoin-111]
	_ = x[EliminateLimit-112]
	_ = x[EliminateOffset-113]
	_ = x[PushLimitIntoProject-114]
	_ = x[PushOffsetIntoProject-115]
	_ = x[PushLimitIntoOffset-116]
	_ = x[EliminateMax1Row-117]
	_ = x[FoldPlusZero-118]
	_ = x[FoldZeroPlus-119]
	_ = x[FoldMinusZero-120]
	_ = x[FoldMultOne-121]
	_ = x[FoldOneMult-122]
	_ = x[FoldDivOne-123]
	_ = x[InvertMinus-124]
	_ = x[EliminateUnaryMinus-125]
	_ = x[SimplifyLimitOrdering-126]
	_ = x[SimplifyOffsetOrdering-127]
	_ = x[SimplifyGroupByOrdering-128]
	_ = x[SimplifyOrdinalityOrdering-129]
	_ = x[SimplifyExplainOrdering-130]
	_ = x[EliminateProject-131]
	_ = x[MergeProjects-132]
	_ = x[MergeProjectWithValues-133]
	_ = x[PruneProjectCols-134]
	_ = x[PruneScanCols-135]
	_ = x[PruneSelectCols-136]
	_ = x[PruneLimitCols-137]
	_ = x[PruneOffsetCols-138]
	_ = x[PruneJoinLeftCols-139]
	_ = x[PruneJoinRightCols-140]
	_ = x[PruneSemiAntiJoinRightCols-141]
	_ = x[PruneAggCols-142]
	_ = x[PruneGroupByCols-143]
	_ = x[PruneValuesCols-144]
	_ = x[PruneOrdinalityCols-145]
	_ = x[PruneExplainCols-146]
	_ = x[PruneProjectSetCols-147]
	_ = x[PruneWindowOutputCols-148]
	_ = x[PruneWindowInputCols-149]
	_ = x[PruneMutationFetchCols-150]
	_ = x[PruneMutationInputCols-151]
	_ = x[PruneMutationReturnCols-152]
	_ = x[PruneWithScanCols-153]
	_ = x[PruneWithCols-154]
	_ = x[PruneUnionAllCols-155]
	_ = x[RejectNullsLeftJoin-156]
	_ = x[RejectNullsRightJoin-157]
	_ = x[RejectNullsGroupBy-158]
	_ = x[CommuteVar-159]
	_ = x[CommuteConst-160]
	_ = x[EliminateCoalesce-161]
	_ = x[SimplifyCoalesce-162]
	_ = x[EliminateCast-163]
	_ = x[NormalizeInConst-164]
	_ = x[FoldInNull-165]
	_ = x[UnifyComparisonTypes-166]
	_ = x[EliminateExistsProject-167]
	_ = x[EliminateExistsGroupBy-168]
	_ = x[IntroduceExistsLimit-169]
	_ = x[NormalizeJSONFieldAccess-170]
	_ = x[NormalizeJSONContains-171]
	_ = x[SimplifyCaseWhenConstValue-172]
	_ = x[SimplifyEqualsAnyTuple-173]
	_ = x[SimplifyAnyScalarArray-174]
	_ = x[FoldCollate-175]
	_ = x[NormalizeArrayFlattenToAgg-176]
	_ = x[SimplifySelectFilters-177]
	_ = x[ConsolidateSelectFilters-178]
	_ = x[DetectSelectContradiction-179]
	_ = x[EliminateSelect-180]
	_ = x[MergeSelects-181]
	_ = x[PushSelectIntoProject-182]
	_ = x[MergeSelectInnerJoin-183]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-184]
	_ = x[PushSelectCondRightIntoJoinLeftAndRight-185]
	_ = x[PushSelectIntoJoinLeft-186]
	_ = x[PushSelectIntoJoinRight-187]
	_ = x[PushSelectIntoGroupBy-188]
	_ = x[RemoveNotNullCondition-189]
	_ = x[EliminateUnionAllLeft-190]
	_ = x[EliminateUnionAllRight-191]
	_ = x[PushFilterIntoSetOp-192]
	_ = x[EliminateWindow-193]
	_ = x[ReduceWindowPartitionCols-194]
	_ = x[SimplifyWindowOrdering-195]
	_ = x[PushSelectIntoWindow-196]
	_ = x[PushLimitIntoWindow-197]
	_ = x[InlineWith-198]
	_ = x[startExploreRule-199]
	_ = x[ReplaceMinWithLimit-200]
	_ = x[ReplaceMaxWithLimit-201]
	_ = x[GenerateStreamingGroupBy-202]
	_ = x[CommuteJoin-203]
	_ = x[CommuteLeftJoin-204]
	_ = x[CommuteRightJoin-205]
	_ = x[CommuteSemiJoin-206]
	_ = x[GenerateMergeJoins-207]
	_ = x[GenerateLookupJoins-208]
	_ = x[GenerateZigzagJoins-209]
	_ = x[GenerateInvertedIndexZigzagJoins-210]
	_ = x[GenerateLookupJoinsWithFilter-211]
	_ = x[AssociateJoin-212]
	_ = x[GenerateLimitedScans-213]
	_ = x[PushLimitIntoConstrainedScan-214]
	_ = x[PushLimitIntoIndexJoin-215]
	_ = x[GenerateIndexScans-216]
	_ = x[GenerateConstrainedScans-217]
	_ = x[GenerateInvertedIndexScans-218]
	_ = x[NumRuleNames-219]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldNullInEmptyFoldNullNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsEliminateAggDistinctForKeysEliminateDistinctOnNoColumnsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectCondRightIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoJoinRightPushSelectIntoGroupByRemoveNotNullConditionEliminateUnionAllLeftEliminateUnionAllRightPushFilterIntoSetOpEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteRightJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 318, 330, 339, 347, 371, 391, 413, 434, 456, 478, 500, 522, 545, 555, 572, 585, 605, 618, 633, 654, 674, 695, 722, 752, 775, 802, 823, 850, 872, 894, 918, 938, 955, 975, 994, 1014, 1031, 1050, 1073, 1097, 1119, 1146, 1171, 1183, 1196, 1214, 1233, 1251, 1266, 1284, 1293, 1303, 1312, 1326, 1334, 1349, 1365, 1377, 1401, 1418, 1441, 1459, 1486, 1514, 1536, 1557, 1580, 1604, 1634, 1656, 1675, 1698, 1728, 1749, 1771, 1802, 1824, 1847, 1877, 1908, 1935, 1963, 1980, 2011, 2028, 2059, 2082, 2106, 2127, 2147, 2174, 2195, 2212, 2226, 2241, 2261, 2282, 2301, 2317, 2329, 2341, 2354, 2365, 2376, 2386, 2397, 2416, 2437, 2459, 2482, 2508, 2531, 2547, 2560, 2582, 2598, 2611, 2626, 2640, 2655, 2672, 2690, 2716, 2728, 2744, 2759, 2778, 2794, 2813, 2834, 2854, 2876, 2898, 2921, 2938, 2951, 2968, 2987, 3007, 3025, 3035, 3047, 3064, 3080, 3093, 3109, 3119, 3139, 3161, 3183, 3203, 3227, 3248, 3274, 3296, 3318, 3329, 3355, 3376, 3400, 3425, 3440, 3452, 3473, 3493, 3531, 3570, 3592, 3615, 3636, 3658, 3679, 3701, 3720, 3735, 3760, 3782, 3802, 3821, 3831, 3847, 3866, 3885, 3909, 3920, 3935, 3951, 3966, 3984, 4003, 4022, 4054, 4083, 4096, 4116, 4144, 4166, 4184, 4208, 4234, 4246}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
