// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[HoistSelectExists-52]
	_ = x[HoistSelectNotExists-53]
	_ = x[HoistSelectSubquery-54]
	_ = x[HoistProjectSubquery-55]
	_ = x[HoistJoinSubquery-56]
	_ = x[HoistValuesSubquery-57]
	_ = x[HoistProjectSetSubquery-58]
	_ = x[NormalizeSelectAnyFilter-59]
	_ = x[NormalizeJoinAnyFilter-60]
	_ = x[NormalizeSelectNotAnyFilter-61]
	_ = x[NormalizeJoinNotAnyFilter-62]
	_ = x[FoldNullCast-63]
	_ = x[FoldNullUnary-64]
	_ = x[FoldNullBinaryLeft-65]
	_ = x[FoldNullBinaryRight-66]
	_ = x[FoldNullInNonEmpty-67]
	_ = x[FoldInEmpty-68]
	_ = x[FoldNotInEmpty-69]
	_ = x[FoldArray-70]
	_ = x[FoldBinary-71]
	_ = x[FoldUnary-72]
	_ = x[FoldComparison-73]
	_ = x[FoldCast-74]
	_ = x[FoldIndirection-75]
	_ = x[FoldColumnAccess-76]
	_ = x[FoldFunction-77]
	_ = x[FoldEqualsAnyNull-78]
	_ = x[ConvertGroupByToDistinct-79]
	_ = x[EliminateDistinct-80]
	_ = x[EliminateGroupByProject-81]
	_ = x[ReduceGroupingCols-82]
	_ = x[EliminateAggDistinctForKeys-83]
	_ = x[EliminateAggFilteredDistinctForKeys-84]
	_ = x[EliminateDistinctOnNoColumns-85]
	_ = x[InlineProjectConstants-86]
	_ = x[InlineSelectConstants-87]
	_ = x[InlineJoinConstantsLeft-88]
	_ = x[InlineJoinConstantsRight-89]
	_ = x[PushSelectIntoInlinableProject-90]
	_ = x[InlineProjectInProject-91]
	_ = x[CommuteRightJoin-92]
	_ = x[SimplifyJoinFilters-93]
	_ = x[DetectJoinContradiction-94]
	_ = x[PushFilterIntoJoinLeftAndRight-95]
	_ = x[MapFilterIntoJoinLeft-96]
	_ = x[MapFilterIntoJoinRight-97]
	_ = x[MapEqualityIntoJoinLeftAndRight-98]
	_ = x[PushFilterIntoJoinLeft-99]
	_ = x[PushFilterIntoJoinRight-100]
	_ = x[SimplifyLeftJoinWithoutFilters-101]
	_ = x[SimplifyRightJoinWithoutFilters-102]
	_ = x[SimplifyLeftJoinWithFilters-103]
	_ = x[SimplifyRightJoinWithFilters-104]
	_ = x[EliminateSemiJoin-105]
	_ = x[SimplifyZeroCardinalitySemiJoin-106]
	_ = x[EliminateAntiJoin-107]
	_ = x[SimplifyZeroCardinalityAntiJoin-108]
	_ = x[EliminateJoinNoColsLeft-109]
	_ = x[EliminateJoinNoColsRight-110]
	_ = x[HoistJoinProjectRight-111]
	_ = x[HoistJoinProjectLeft-112]
	_ = x[SimplifyJoinNotNullEquality-113]
	_ = x[ExtractJoinEqualities-114]
	_ = x[SortFiltersInJoin-115]
	_ = x[EliminateLimit-116]
	_ = x[EliminateOffset-117]
	_ = x[PushLimitIntoProject-118]
	_ = x[PushOffsetIntoProject-119]
	_ = x[PushLimitIntoOffset-120]
	_ = x[PushLimitIntoOrdinality-121]
	_ = x[PushLimitIntoLeftJoin-122]
	_ = x[EliminateMax1Row-123]
	_ = x[FoldPlusZero-124]
	_ = x[FoldZeroPlus-125]
	_ = x[FoldMinusZero-126]
	_ = x[FoldMultOne-127]
	_ = x[FoldOneMult-128]
	_ = x[FoldDivOne-129]
	_ = x[InvertMinus-130]
	_ = x[EliminateUnaryMinus-131]
	_ = x[SimplifyLimitOrdering-132]
	_ = x[SimplifyOffsetOrdering-133]
	_ = x[SimplifyGroupByOrdering-134]
	_ = x[SimplifyOrdinalityOrdering-135]
	_ = x[SimplifyExplainOrdering-136]
	_ = x[EliminateProject-137]
	_ = x[MergeProjects-138]
	_ = x[MergeProjectWithValues-139]
	_ = x[PruneProjectCols-140]
	_ = x[PruneScanCols-141]
	_ = x[PruneSelectCols-142]
	_ = x[PruneLimitCols-143]
	_ = x[PruneOffsetCols-144]
	_ = x[PruneJoinLeftCols-145]
	_ = x[PruneJoinRightCols-146]
	_ = x[PruneSemiAntiJoinRightCols-147]
	_ = x[PruneAggCols-148]
	_ = x[PruneGroupByCols-149]
	_ = x[PruneValuesCols-150]
	_ = x[PruneOrdinalityCols-151]
	_ = x[PruneExplainCols-152]
	_ = x[PruneProjectSetCols-153]
	_ = x[PruneWindowOutputCols-154]
	_ = x[PruneWindowInputCols-155]
	_ = x[PruneMutationFetchCols-156]
	_ = x[PruneMutationInputCols-157]
	_ = x[PruneMutationReturnCols-158]
	_ = x[PruneWithScanCols-159]
	_ = x[PruneWithCols-160]
	_ = x[PruneUnionAllCols-161]
	_ = x[RejectNullsLeftJoin-162]
	_ = x[RejectNullsRightJoin-163]
	_ = x[RejectNullsGroupBy-164]
	_ = x[CommuteVar-165]
	_ = x[CommuteConst-166]
	_ = x[EliminateCoalesce-167]
	_ = x[SimplifyCoalesce-168]
	_ = x[EliminateCast-169]
	_ = x[NormalizeInConst-170]
	_ = x[FoldInNull-171]
	_ = x[UnifyComparisonTypes-172]
	_ = x[EliminateExistsProject-173]
	_ = x[EliminateExistsGroupBy-174]
	_ = x[IntroduceExistsLimit-175]
	_ = x[NormalizeJSONFieldAccess-176]
	_ = x[NormalizeJSONContains-177]
	_ = x[SimplifyCaseWhenConstValue-178]
	_ = x[InlineAnyValuesSingleCol-179]
	_ = x[InlineAnyValuesMultiCol-180]
	_ = x[SimplifyEqualsAnyTuple-181]
	_ = x[SimplifyAnyScalarArray-182]
	_ = x[FoldCollate-183]
	_ = x[NormalizeArrayFlattenToAgg-184]
	_ = x[SimplifySelectFilters-185]
	_ = x[ConsolidateSelectFilters-186]
	_ = x[DetectSelectContradiction-187]
	_ = x[EliminateSelect-188]
	_ = x[MergeSelects-189]
	_ = x[PushSelectIntoProject-190]
	_ = x[MergeSelectInnerJoin-191]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-192]
	_ = x[PushSelectIntoJoinLeft-193]
	_ = x[PushSelectIntoGroupBy-194]
	_ = x[RemoveNotNullCondition-195]
	_ = x[InlineConstVar-196]
	_ = x[PushSelectIntoProjectSet-197]
	_ = x[EliminateUnionAllLeft-198]
	_ = x[EliminateUnionAllRight-199]
	_ = x[PushFilterIntoSetOp-200]
	_ = x[EliminateWindow-201]
	_ = x[ReduceWindowPartitionCols-202]
	_ = x[SimplifyWindowOrdering-203]
	_ = x[PushSelectIntoWindow-204]
	_ = x[PushLimitIntoWindow-205]
	_ = x[InlineWith-206]
	_ = x[startExploreRule-207]
	_ = x[ReplaceScalarMinMaxWithLimit-208]
	_ = x[ReplaceMinWithLimit-209]
	_ = x[ReplaceMaxWithLimit-210]
	_ = x[GenerateStreamingGroupBy-211]
	_ = x[CommuteJoin-212]
	_ = x[CommuteLeftJoin-213]
	_ = x[CommuteSemiJoin-214]
	_ = x[GenerateMergeJoins-215]
	_ = x[GenerateLookupJoins-216]
	_ = x[GenerateZigzagJoins-217]
	_ = x[GenerateInvertedIndexZigzagJoins-218]
	_ = x[GenerateLookupJoinsWithFilter-219]
	_ = x[AssociateJoin-220]
	_ = x[GenerateLimitedScans-221]
	_ = x[PushLimitIntoConstrainedScan-222]
	_ = x[PushLimitIntoIndexJoin-223]
	_ = x[GenerateIndexScans-224]
	_ = x[GenerateConstrainedScans-225]
	_ = x[GenerateInvertedIndexScans-226]
	_ = x[NumRuleNames-227]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctOnNoColumnsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetEliminateUnionAllLeftEliminateUnionAllRightPushFilterIntoSetOpEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 966, 986, 1005, 1025, 1042, 1061, 1084, 1108, 1130, 1157, 1182, 1194, 1207, 1225, 1244, 1262, 1273, 1287, 1296, 1306, 1315, 1329, 1337, 1352, 1368, 1380, 1397, 1421, 1438, 1461, 1479, 1506, 1541, 1569, 1591, 1612, 1635, 1659, 1689, 1711, 1727, 1746, 1769, 1799, 1820, 1842, 1873, 1895, 1918, 1948, 1979, 2006, 2034, 2051, 2082, 2099, 2130, 2153, 2177, 2198, 2218, 2245, 2266, 2283, 2297, 2312, 2332, 2353, 2372, 2395, 2416, 2432, 2444, 2456, 2469, 2480, 2491, 2501, 2512, 2531, 2552, 2574, 2597, 2623, 2646, 2662, 2675, 2697, 2713, 2726, 2741, 2755, 2770, 2787, 2805, 2831, 2843, 2859, 2874, 2893, 2909, 2928, 2949, 2969, 2991, 3013, 3036, 3053, 3066, 3083, 3102, 3122, 3140, 3150, 3162, 3179, 3195, 3208, 3224, 3234, 3254, 3276, 3298, 3318, 3342, 3363, 3389, 3413, 3436, 3458, 3480, 3491, 3517, 3538, 3562, 3587, 3602, 3614, 3635, 3655, 3693, 3715, 3736, 3758, 3772, 3796, 3817, 3839, 3858, 3873, 3898, 3920, 3940, 3959, 3969, 3985, 4013, 4032, 4051, 4075, 4086, 4101, 4116, 4134, 4153, 4172, 4204, 4233, 4246, 4266, 4294, 4316, 4334, 4358, 4384, 4396}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
