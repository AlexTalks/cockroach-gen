// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[DecorrelateJoin-45]
	_ = x[DecorrelateProjectSet-46]
	_ = x[TryDecorrelateSelect-47]
	_ = x[TryDecorrelateProject-48]
	_ = x[TryDecorrelateProjectSelect-49]
	_ = x[TryDecorrelateProjectInnerJoin-50]
	_ = x[TryDecorrelateInnerJoin-51]
	_ = x[TryDecorrelateInnerLeftJoin-52]
	_ = x[TryDecorrelateGroupBy-53]
	_ = x[TryDecorrelateScalarGroupBy-54]
	_ = x[TryDecorrelateSemiJoin-55]
	_ = x[TryDecorrelateLimitOne-56]
	_ = x[TryDecorrelateProjectSet-57]
	_ = x[TryDecorrelateWindow-58]
	_ = x[TryDecorrelateMax1Row-59]
	_ = x[HoistSelectExists-60]
	_ = x[HoistSelectNotExists-61]
	_ = x[HoistSelectSubquery-62]
	_ = x[HoistProjectSubquery-63]
	_ = x[HoistJoinSubquery-64]
	_ = x[HoistValuesSubquery-65]
	_ = x[HoistProjectSetSubquery-66]
	_ = x[NormalizeSelectAnyFilter-67]
	_ = x[NormalizeJoinAnyFilter-68]
	_ = x[NormalizeSelectNotAnyFilter-69]
	_ = x[NormalizeJoinNotAnyFilter-70]
	_ = x[FoldNullCast-71]
	_ = x[FoldNullUnary-72]
	_ = x[FoldNullBinaryLeft-73]
	_ = x[FoldNullBinaryRight-74]
	_ = x[FoldNullInNonEmpty-75]
	_ = x[FoldInEmpty-76]
	_ = x[FoldNotInEmpty-77]
	_ = x[FoldArray-78]
	_ = x[FoldBinary-79]
	_ = x[FoldUnary-80]
	_ = x[FoldComparison-81]
	_ = x[FoldCast-82]
	_ = x[FoldIndirection-83]
	_ = x[FoldColumnAccess-84]
	_ = x[FoldFunction-85]
	_ = x[FoldEqualsAnyNull-86]
	_ = x[ConvertGroupByToDistinct-87]
	_ = x[EliminateGroupByProject-88]
	_ = x[EliminateJoinUnderGroupByLeft-89]
	_ = x[EliminateJoinUnderGroupByRight-90]
	_ = x[EliminateDistinct-91]
	_ = x[ReduceGroupingCols-92]
	_ = x[ReduceNotNullGroupingCols-93]
	_ = x[EliminateAggDistinctForKeys-94]
	_ = x[EliminateAggFilteredDistinctForKeys-95]
	_ = x[EliminateDistinctNoColumns-96]
	_ = x[EliminateEnsureDistinctNoColumns-97]
	_ = x[EliminateDistinctOnValues-98]
	_ = x[PushAggDistinctIntoGroupBy-99]
	_ = x[PushAggFilterIntoScalarGroupBy-100]
	_ = x[ConvertCountToCountRows-101]
	_ = x[FoldGroupingOperators-102]
	_ = x[InlineConstVar-103]
	_ = x[InlineProjectConstants-104]
	_ = x[InlineSelectConstants-105]
	_ = x[InlineJoinConstantsLeft-106]
	_ = x[InlineJoinConstantsRight-107]
	_ = x[PushSelectIntoInlinableProject-108]
	_ = x[InlineProjectInProject-109]
	_ = x[CommuteRightJoin-110]
	_ = x[SimplifyJoinFilters-111]
	_ = x[DetectJoinContradiction-112]
	_ = x[PushFilterIntoJoinLeftAndRight-113]
	_ = x[MapFilterIntoJoinLeft-114]
	_ = x[MapFilterIntoJoinRight-115]
	_ = x[MapEqualityIntoJoinLeftAndRight-116]
	_ = x[PushFilterIntoJoinLeft-117]
	_ = x[PushFilterIntoJoinRight-118]
	_ = x[SimplifyLeftJoin-119]
	_ = x[SimplifyRightJoin-120]
	_ = x[EliminateSemiJoin-121]
	_ = x[SimplifyZeroCardinalitySemiJoin-122]
	_ = x[EliminateAntiJoin-123]
	_ = x[SimplifyZeroCardinalityAntiJoin-124]
	_ = x[EliminateJoinNoColsLeft-125]
	_ = x[EliminateJoinNoColsRight-126]
	_ = x[HoistJoinProjectRight-127]
	_ = x[HoistJoinProjectLeft-128]
	_ = x[SimplifyJoinNotNullEquality-129]
	_ = x[ExtractJoinEqualities-130]
	_ = x[SortFiltersInJoin-131]
	_ = x[LeftAssociateJoinsLeft-132]
	_ = x[LeftAssociateJoinsRight-133]
	_ = x[RightAssociateJoinsLeft-134]
	_ = x[RightAssociateJoinsRight-135]
	_ = x[EliminateLimit-136]
	_ = x[EliminateOffset-137]
	_ = x[PushLimitIntoProject-138]
	_ = x[PushOffsetIntoProject-139]
	_ = x[PushLimitIntoOffset-140]
	_ = x[PushLimitIntoOrdinality-141]
	_ = x[PushLimitIntoJoinLeft-142]
	_ = x[PushLimitIntoJoinRight-143]
	_ = x[FoldLimits-144]
	_ = x[AssociateLimitJoinsLeft-145]
	_ = x[AssociateLimitJoinsRight-146]
	_ = x[EliminateMax1Row-147]
	_ = x[FoldPlusZero-148]
	_ = x[FoldZeroPlus-149]
	_ = x[FoldMinusZero-150]
	_ = x[FoldMultOne-151]
	_ = x[FoldOneMult-152]
	_ = x[FoldDivOne-153]
	_ = x[InvertMinus-154]
	_ = x[EliminateUnaryMinus-155]
	_ = x[SimplifyLimitOrdering-156]
	_ = x[SimplifyOffsetOrdering-157]
	_ = x[SimplifyGroupByOrdering-158]
	_ = x[SimplifyOrdinalityOrdering-159]
	_ = x[SimplifyExplainOrdering-160]
	_ = x[EliminateJoinUnderProjectLeft-161]
	_ = x[EliminateJoinUnderProjectRight-162]
	_ = x[EliminateProject-163]
	_ = x[MergeProjects-164]
	_ = x[MergeProjectWithValues-165]
	_ = x[PushColumnRemappingIntoValues-166]
	_ = x[FoldTupleAccessIntoValues-167]
	_ = x[FoldJSONAccessIntoValues-168]
	_ = x[ConvertZipArraysToValues-169]
	_ = x[PruneProjectCols-170]
	_ = x[PruneScanCols-171]
	_ = x[PruneSelectCols-172]
	_ = x[PruneLimitCols-173]
	_ = x[PruneOffsetCols-174]
	_ = x[PruneJoinLeftCols-175]
	_ = x[PruneJoinRightCols-176]
	_ = x[PruneSemiAntiJoinRightCols-177]
	_ = x[PruneAggCols-178]
	_ = x[PruneGroupByCols-179]
	_ = x[PruneValuesCols-180]
	_ = x[PruneOrdinalityCols-181]
	_ = x[PruneExplainCols-182]
	_ = x[PruneProjectSetCols-183]
	_ = x[PruneWindowOutputCols-184]
	_ = x[PruneWindowInputCols-185]
	_ = x[PruneMutationFetchCols-186]
	_ = x[PruneMutationInputCols-187]
	_ = x[PruneMutationReturnCols-188]
	_ = x[PruneWithScanCols-189]
	_ = x[PruneWithCols-190]
	_ = x[PruneUnionAllCols-191]
	_ = x[RejectNullsLeftJoin-192]
	_ = x[RejectNullsRightJoin-193]
	_ = x[RejectNullsGroupBy-194]
	_ = x[RejectNullsUnderJoinLeft-195]
	_ = x[RejectNullsUnderJoinRight-196]
	_ = x[RejectNullsProject-197]
	_ = x[CommuteVar-198]
	_ = x[CommuteConst-199]
	_ = x[EliminateCoalesce-200]
	_ = x[SimplifyCoalesce-201]
	_ = x[EliminateCast-202]
	_ = x[NormalizeInConst-203]
	_ = x[FoldInNull-204]
	_ = x[UnifyComparisonTypes-205]
	_ = x[EliminateExistsZeroRows-206]
	_ = x[EliminateExistsProject-207]
	_ = x[EliminateExistsGroupBy-208]
	_ = x[IntroduceExistsLimit-209]
	_ = x[EliminateExistsLimit-210]
	_ = x[NormalizeJSONFieldAccess-211]
	_ = x[NormalizeJSONContains-212]
	_ = x[SimplifyCaseWhenConstValue-213]
	_ = x[InlineAnyValuesSingleCol-214]
	_ = x[InlineAnyValuesMultiCol-215]
	_ = x[SimplifyEqualsAnyTuple-216]
	_ = x[SimplifyAnyScalarArray-217]
	_ = x[FoldCollate-218]
	_ = x[NormalizeArrayFlattenToAgg-219]
	_ = x[SimplifySameVarEqualities-220]
	_ = x[SimplifySameVarInequalities-221]
	_ = x[SimplifySelectFilters-222]
	_ = x[ConsolidateSelectFilters-223]
	_ = x[DetectSelectContradiction-224]
	_ = x[EliminateSelect-225]
	_ = x[MergeSelects-226]
	_ = x[PushSelectIntoProject-227]
	_ = x[MergeSelectInnerJoin-228]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-229]
	_ = x[PushSelectIntoJoinLeft-230]
	_ = x[PushSelectIntoGroupBy-231]
	_ = x[RemoveNotNullCondition-232]
	_ = x[PushSelectIntoProjectSet-233]
	_ = x[PushFilterIntoSetOp-234]
	_ = x[EliminateUnionAllLeft-235]
	_ = x[EliminateUnionAllRight-236]
	_ = x[EliminateWindow-237]
	_ = x[ReduceWindowPartitionCols-238]
	_ = x[SimplifyWindowOrdering-239]
	_ = x[PushSelectIntoWindow-240]
	_ = x[PushLimitIntoWindow-241]
	_ = x[InlineWith-242]
	_ = x[startExploreRule-243]
	_ = x[ReplaceScalarMinMaxWithLimit-244]
	_ = x[ReplaceMinWithLimit-245]
	_ = x[ReplaceMaxWithLimit-246]
	_ = x[GenerateStreamingGroupBy-247]
	_ = x[ReorderJoins-248]
	_ = x[CommuteLeftJoin-249]
	_ = x[CommuteSemiJoin-250]
	_ = x[GenerateMergeJoins-251]
	_ = x[GenerateLookupJoins-252]
	_ = x[GenerateInvertedJoins-253]
	_ = x[GenerateInvertedJoinsFromSelect-254]
	_ = x[GenerateZigzagJoins-255]
	_ = x[GenerateInvertedIndexZigzagJoins-256]
	_ = x[GenerateLookupJoinsWithFilter-257]
	_ = x[PushJoinIntoIndexJoin-258]
	_ = x[GenerateLimitedScans-259]
	_ = x[PushLimitIntoConstrainedScan-260]
	_ = x[PushLimitIntoIndexJoin-261]
	_ = x[SplitScanIntoUnionScans-262]
	_ = x[GenerateIndexScans-263]
	_ = x[GeneratePartialIndexScans-264]
	_ = x[GenerateConstrainedScans-265]
	_ = x[GenerateInvertedIndexScans-266]
	_ = x[SplitDisjunction-267]
	_ = x[SplitDisjunctionAddKey-268]
	_ = x[NumRuleNames-269]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinSplitScanIntoUnionScansGenerateIndexScansGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 830, 851, 871, 892, 919, 949, 972, 999, 1020, 1047, 1069, 1091, 1115, 1135, 1156, 1173, 1193, 1212, 1232, 1249, 1268, 1291, 1315, 1337, 1364, 1389, 1401, 1414, 1432, 1451, 1469, 1480, 1494, 1503, 1513, 1522, 1536, 1544, 1559, 1575, 1587, 1604, 1628, 1651, 1680, 1710, 1727, 1745, 1770, 1797, 1832, 1858, 1890, 1915, 1941, 1971, 1994, 2015, 2029, 2051, 2072, 2095, 2119, 2149, 2171, 2187, 2206, 2229, 2259, 2280, 2302, 2333, 2355, 2378, 2394, 2411, 2428, 2459, 2476, 2507, 2530, 2554, 2575, 2595, 2622, 2643, 2660, 2682, 2705, 2728, 2752, 2766, 2781, 2801, 2822, 2841, 2864, 2885, 2907, 2917, 2940, 2964, 2980, 2992, 3004, 3017, 3028, 3039, 3049, 3060, 3079, 3100, 3122, 3145, 3171, 3194, 3223, 3253, 3269, 3282, 3304, 3333, 3358, 3382, 3406, 3422, 3435, 3450, 3464, 3479, 3496, 3514, 3540, 3552, 3568, 3583, 3602, 3618, 3637, 3658, 3678, 3700, 3722, 3745, 3762, 3775, 3792, 3811, 3831, 3849, 3873, 3898, 3916, 3926, 3938, 3955, 3971, 3984, 4000, 4010, 4030, 4053, 4075, 4097, 4117, 4137, 4161, 4182, 4208, 4232, 4255, 4277, 4299, 4310, 4336, 4361, 4388, 4409, 4433, 4458, 4473, 4485, 4506, 4526, 4564, 4586, 4607, 4629, 4653, 4672, 4693, 4715, 4730, 4755, 4777, 4797, 4816, 4826, 4842, 4870, 4889, 4908, 4932, 4944, 4959, 4974, 4992, 5011, 5032, 5063, 5082, 5114, 5143, 5164, 5184, 5212, 5234, 5257, 5275, 5300, 5324, 5350, 5366, 5388, 5400}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
