// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[TryDecorrelateMax1Row-52]
	_ = x[HoistSelectExists-53]
	_ = x[HoistSelectNotExists-54]
	_ = x[HoistSelectSubquery-55]
	_ = x[HoistProjectSubquery-56]
	_ = x[HoistJoinSubquery-57]
	_ = x[HoistValuesSubquery-58]
	_ = x[HoistProjectSetSubquery-59]
	_ = x[NormalizeSelectAnyFilter-60]
	_ = x[NormalizeJoinAnyFilter-61]
	_ = x[NormalizeSelectNotAnyFilter-62]
	_ = x[NormalizeJoinNotAnyFilter-63]
	_ = x[FoldNullCast-64]
	_ = x[FoldNullUnary-65]
	_ = x[FoldNullBinaryLeft-66]
	_ = x[FoldNullBinaryRight-67]
	_ = x[FoldNullInNonEmpty-68]
	_ = x[FoldInEmpty-69]
	_ = x[FoldNotInEmpty-70]
	_ = x[FoldArray-71]
	_ = x[FoldBinary-72]
	_ = x[FoldUnary-73]
	_ = x[FoldComparison-74]
	_ = x[FoldCast-75]
	_ = x[FoldIndirection-76]
	_ = x[FoldColumnAccess-77]
	_ = x[FoldFunction-78]
	_ = x[FoldEqualsAnyNull-79]
	_ = x[ConvertGroupByToDistinct-80]
	_ = x[EliminateDistinct-81]
	_ = x[EliminateGroupByProject-82]
	_ = x[ReduceGroupingCols-83]
	_ = x[ReduceNotNullGroupingCols-84]
	_ = x[EliminateAggDistinctForKeys-85]
	_ = x[EliminateAggFilteredDistinctForKeys-86]
	_ = x[EliminateDistinctNoColumns-87]
	_ = x[EliminateEnsureDistinctNoColumns-88]
	_ = x[EliminateDistinctOnValues-89]
	_ = x[PushAggDistinctIntoScalarGroupBy-90]
	_ = x[PushAggFilterIntoScalarGroupBy-91]
	_ = x[ConvertCountToCountRows-92]
	_ = x[InlineProjectConstants-93]
	_ = x[InlineSelectConstants-94]
	_ = x[InlineJoinConstantsLeft-95]
	_ = x[InlineJoinConstantsRight-96]
	_ = x[PushSelectIntoInlinableProject-97]
	_ = x[InlineProjectInProject-98]
	_ = x[CommuteRightJoin-99]
	_ = x[SimplifyJoinFilters-100]
	_ = x[DetectJoinContradiction-101]
	_ = x[PushFilterIntoJoinLeftAndRight-102]
	_ = x[MapFilterIntoJoinLeft-103]
	_ = x[MapFilterIntoJoinRight-104]
	_ = x[MapEqualityIntoJoinLeftAndRight-105]
	_ = x[PushFilterIntoJoinLeft-106]
	_ = x[PushFilterIntoJoinRight-107]
	_ = x[SimplifyLeftJoinWithoutFilters-108]
	_ = x[SimplifyRightJoinWithoutFilters-109]
	_ = x[SimplifyLeftJoinWithFilters-110]
	_ = x[SimplifyRightJoinWithFilters-111]
	_ = x[EliminateSemiJoin-112]
	_ = x[SimplifyZeroCardinalitySemiJoin-113]
	_ = x[EliminateAntiJoin-114]
	_ = x[SimplifyZeroCardinalityAntiJoin-115]
	_ = x[EliminateJoinNoColsLeft-116]
	_ = x[EliminateJoinNoColsRight-117]
	_ = x[HoistJoinProjectRight-118]
	_ = x[HoistJoinProjectLeft-119]
	_ = x[SimplifyJoinNotNullEquality-120]
	_ = x[ExtractJoinEqualities-121]
	_ = x[SortFiltersInJoin-122]
	_ = x[EliminateLimit-123]
	_ = x[EliminateOffset-124]
	_ = x[PushLimitIntoProject-125]
	_ = x[PushOffsetIntoProject-126]
	_ = x[PushLimitIntoOffset-127]
	_ = x[PushLimitIntoOrdinality-128]
	_ = x[PushLimitIntoLeftJoin-129]
	_ = x[EliminateMax1Row-130]
	_ = x[FoldPlusZero-131]
	_ = x[FoldZeroPlus-132]
	_ = x[FoldMinusZero-133]
	_ = x[FoldMultOne-134]
	_ = x[FoldOneMult-135]
	_ = x[FoldDivOne-136]
	_ = x[InvertMinus-137]
	_ = x[EliminateUnaryMinus-138]
	_ = x[SimplifyLimitOrdering-139]
	_ = x[SimplifyOffsetOrdering-140]
	_ = x[SimplifyGroupByOrdering-141]
	_ = x[SimplifyOrdinalityOrdering-142]
	_ = x[SimplifyExplainOrdering-143]
	_ = x[EliminateProject-144]
	_ = x[MergeProjects-145]
	_ = x[MergeProjectWithValues-146]
	_ = x[PushColumnRemappingIntoValues-147]
	_ = x[FoldTupleAccessIntoValues-148]
	_ = x[ConvertZipArraysToValues-149]
	_ = x[PruneProjectCols-150]
	_ = x[PruneScanCols-151]
	_ = x[PruneSelectCols-152]
	_ = x[PruneLimitCols-153]
	_ = x[PruneOffsetCols-154]
	_ = x[PruneJoinLeftCols-155]
	_ = x[PruneJoinRightCols-156]
	_ = x[PruneSemiAntiJoinRightCols-157]
	_ = x[PruneAggCols-158]
	_ = x[PruneGroupByCols-159]
	_ = x[PruneValuesCols-160]
	_ = x[PruneOrdinalityCols-161]
	_ = x[PruneExplainCols-162]
	_ = x[PruneProjectSetCols-163]
	_ = x[PruneWindowOutputCols-164]
	_ = x[PruneWindowInputCols-165]
	_ = x[PruneMutationFetchCols-166]
	_ = x[PruneMutationInputCols-167]
	_ = x[PruneMutationReturnCols-168]
	_ = x[PruneWithScanCols-169]
	_ = x[PruneWithCols-170]
	_ = x[PruneUnionAllCols-171]
	_ = x[RejectNullsLeftJoin-172]
	_ = x[RejectNullsRightJoin-173]
	_ = x[RejectNullsGroupBy-174]
	_ = x[CommuteVar-175]
	_ = x[CommuteConst-176]
	_ = x[EliminateCoalesce-177]
	_ = x[SimplifyCoalesce-178]
	_ = x[EliminateCast-179]
	_ = x[NormalizeInConst-180]
	_ = x[FoldInNull-181]
	_ = x[UnifyComparisonTypes-182]
	_ = x[EliminateExistsZeroRows-183]
	_ = x[EliminateExistsProject-184]
	_ = x[EliminateExistsGroupBy-185]
	_ = x[IntroduceExistsLimit-186]
	_ = x[EliminateExistsLimit-187]
	_ = x[NormalizeJSONFieldAccess-188]
	_ = x[NormalizeJSONContains-189]
	_ = x[SimplifyCaseWhenConstValue-190]
	_ = x[InlineAnyValuesSingleCol-191]
	_ = x[InlineAnyValuesMultiCol-192]
	_ = x[SimplifyEqualsAnyTuple-193]
	_ = x[SimplifyAnyScalarArray-194]
	_ = x[FoldCollate-195]
	_ = x[NormalizeArrayFlattenToAgg-196]
	_ = x[SimplifySameVarEqualities-197]
	_ = x[SimplifySameVarInequalities-198]
	_ = x[SimplifySelectFilters-199]
	_ = x[ConsolidateSelectFilters-200]
	_ = x[DetectSelectContradiction-201]
	_ = x[EliminateSelect-202]
	_ = x[MergeSelects-203]
	_ = x[PushSelectIntoProject-204]
	_ = x[MergeSelectInnerJoin-205]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-206]
	_ = x[PushSelectIntoJoinLeft-207]
	_ = x[PushSelectIntoGroupBy-208]
	_ = x[RemoveNotNullCondition-209]
	_ = x[InlineConstVar-210]
	_ = x[PushSelectIntoProjectSet-211]
	_ = x[PushFilterIntoSetOp-212]
	_ = x[EliminateUnionAllLeft-213]
	_ = x[EliminateUnionAllRight-214]
	_ = x[EliminateWindow-215]
	_ = x[ReduceWindowPartitionCols-216]
	_ = x[SimplifyWindowOrdering-217]
	_ = x[PushSelectIntoWindow-218]
	_ = x[PushLimitIntoWindow-219]
	_ = x[InlineWith-220]
	_ = x[startExploreRule-221]
	_ = x[ReplaceScalarMinMaxWithLimit-222]
	_ = x[ReplaceMinWithLimit-223]
	_ = x[ReplaceMaxWithLimit-224]
	_ = x[GenerateStreamingGroupBy-225]
	_ = x[CommuteJoin-226]
	_ = x[CommuteLeftJoin-227]
	_ = x[CommuteSemiJoin-228]
	_ = x[GenerateMergeJoins-229]
	_ = x[GenerateLookupJoins-230]
	_ = x[GenerateGeoLookupJoins-231]
	_ = x[GenerateZigzagJoins-232]
	_ = x[GenerateInvertedIndexZigzagJoins-233]
	_ = x[GenerateLookupJoinsWithFilter-234]
	_ = x[AssociateJoin-235]
	_ = x[GenerateLimitedScans-236]
	_ = x[PushLimitIntoConstrainedScan-237]
	_ = x[PushLimitIntoIndexJoin-238]
	_ = x[GenerateIndexScans-239]
	_ = x[GenerateConstrainedScans-240]
	_ = x[GenerateInvertedIndexScans-241]
	_ = x[SplitDisjunction-242]
	_ = x[SplitDisjunctionAddKey-243]
	_ = x[NumRuleNames-244]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoScalarGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateGeoLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 970, 987, 1007, 1026, 1046, 1063, 1082, 1105, 1129, 1151, 1178, 1203, 1215, 1228, 1246, 1265, 1283, 1294, 1308, 1317, 1327, 1336, 1350, 1358, 1373, 1389, 1401, 1418, 1442, 1459, 1482, 1500, 1525, 1552, 1587, 1613, 1645, 1670, 1702, 1732, 1755, 1777, 1798, 1821, 1845, 1875, 1897, 1913, 1932, 1955, 1985, 2006, 2028, 2059, 2081, 2104, 2134, 2165, 2192, 2220, 2237, 2268, 2285, 2316, 2339, 2363, 2384, 2404, 2431, 2452, 2469, 2483, 2498, 2518, 2539, 2558, 2581, 2602, 2618, 2630, 2642, 2655, 2666, 2677, 2687, 2698, 2717, 2738, 2760, 2783, 2809, 2832, 2848, 2861, 2883, 2912, 2937, 2961, 2977, 2990, 3005, 3019, 3034, 3051, 3069, 3095, 3107, 3123, 3138, 3157, 3173, 3192, 3213, 3233, 3255, 3277, 3300, 3317, 3330, 3347, 3366, 3386, 3404, 3414, 3426, 3443, 3459, 3472, 3488, 3498, 3518, 3541, 3563, 3585, 3605, 3625, 3649, 3670, 3696, 3720, 3743, 3765, 3787, 3798, 3824, 3849, 3876, 3897, 3921, 3946, 3961, 3973, 3994, 4014, 4052, 4074, 4095, 4117, 4131, 4155, 4174, 4195, 4217, 4232, 4257, 4279, 4299, 4318, 4328, 4344, 4372, 4391, 4410, 4434, 4445, 4460, 4475, 4493, 4512, 4534, 4553, 4585, 4614, 4627, 4647, 4675, 4697, 4715, 4739, 4765, 4781, 4803, 4815}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
