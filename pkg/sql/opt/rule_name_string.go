// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[DecorrelateJoin-47]
	_ = x[DecorrelateProjectSet-48]
	_ = x[TryDecorrelateSelect-49]
	_ = x[TryDecorrelateProject-50]
	_ = x[TryDecorrelateProjectSelect-51]
	_ = x[TryDecorrelateProjectInnerJoin-52]
	_ = x[TryDecorrelateInnerJoin-53]
	_ = x[TryDecorrelateInnerLeftJoin-54]
	_ = x[TryDecorrelateGroupBy-55]
	_ = x[TryDecorrelateScalarGroupBy-56]
	_ = x[TryDecorrelateSemiJoin-57]
	_ = x[TryDecorrelateLimitOne-58]
	_ = x[TryDecorrelateProjectSet-59]
	_ = x[TryDecorrelateWindow-60]
	_ = x[TryDecorrelateMax1Row-61]
	_ = x[HoistSelectExists-62]
	_ = x[HoistSelectNotExists-63]
	_ = x[HoistSelectSubquery-64]
	_ = x[HoistProjectSubquery-65]
	_ = x[HoistJoinSubquery-66]
	_ = x[HoistValuesSubquery-67]
	_ = x[HoistProjectSetSubquery-68]
	_ = x[NormalizeSelectAnyFilter-69]
	_ = x[NormalizeJoinAnyFilter-70]
	_ = x[NormalizeSelectNotAnyFilter-71]
	_ = x[NormalizeJoinNotAnyFilter-72]
	_ = x[FoldNullCast-73]
	_ = x[FoldNullUnary-74]
	_ = x[FoldNullBinaryLeft-75]
	_ = x[FoldNullBinaryRight-76]
	_ = x[FoldNullInNonEmpty-77]
	_ = x[FoldInEmpty-78]
	_ = x[FoldNotInEmpty-79]
	_ = x[FoldArray-80]
	_ = x[FoldBinary-81]
	_ = x[FoldUnary-82]
	_ = x[FoldComparison-83]
	_ = x[FoldCast-84]
	_ = x[FoldIndirection-85]
	_ = x[FoldColumnAccess-86]
	_ = x[FoldFunction-87]
	_ = x[FoldEqualsAnyNull-88]
	_ = x[ConvertGroupByToDistinct-89]
	_ = x[EliminateGroupByProject-90]
	_ = x[EliminateJoinUnderGroupByLeft-91]
	_ = x[EliminateJoinUnderGroupByRight-92]
	_ = x[EliminateDistinct-93]
	_ = x[ReduceGroupingCols-94]
	_ = x[ReduceNotNullGroupingCols-95]
	_ = x[EliminateAggDistinctForKeys-96]
	_ = x[EliminateAggFilteredDistinctForKeys-97]
	_ = x[EliminateDistinctNoColumns-98]
	_ = x[EliminateEnsureDistinctNoColumns-99]
	_ = x[EliminateDistinctOnValues-100]
	_ = x[PushAggDistinctIntoGroupBy-101]
	_ = x[PushAggFilterIntoScalarGroupBy-102]
	_ = x[ConvertCountToCountRows-103]
	_ = x[FoldGroupingOperators-104]
	_ = x[InlineConstVar-105]
	_ = x[InlineProjectConstants-106]
	_ = x[InlineSelectConstants-107]
	_ = x[InlineJoinConstantsLeft-108]
	_ = x[InlineJoinConstantsRight-109]
	_ = x[PushSelectIntoInlinableProject-110]
	_ = x[InlineProjectInProject-111]
	_ = x[CommuteRightJoin-112]
	_ = x[SimplifyJoinFilters-113]
	_ = x[DetectJoinContradiction-114]
	_ = x[PushFilterIntoJoinLeftAndRight-115]
	_ = x[MapFilterIntoJoinLeft-116]
	_ = x[MapFilterIntoJoinRight-117]
	_ = x[MapEqualityIntoJoinLeftAndRight-118]
	_ = x[PushFilterIntoJoinLeft-119]
	_ = x[PushFilterIntoJoinRight-120]
	_ = x[SimplifyLeftJoin-121]
	_ = x[SimplifyRightJoin-122]
	_ = x[EliminateSemiJoin-123]
	_ = x[SimplifyZeroCardinalitySemiJoin-124]
	_ = x[EliminateAntiJoin-125]
	_ = x[SimplifyZeroCardinalityAntiJoin-126]
	_ = x[EliminateJoinNoColsLeft-127]
	_ = x[EliminateJoinNoColsRight-128]
	_ = x[HoistJoinProjectRight-129]
	_ = x[HoistJoinProjectLeft-130]
	_ = x[SimplifyJoinNotNullEquality-131]
	_ = x[ExtractJoinEqualities-132]
	_ = x[SortFiltersInJoin-133]
	_ = x[LeftAssociateJoinsLeft-134]
	_ = x[LeftAssociateJoinsRight-135]
	_ = x[RightAssociateJoinsLeft-136]
	_ = x[RightAssociateJoinsRight-137]
	_ = x[EliminateLimit-138]
	_ = x[EliminateOffset-139]
	_ = x[PushLimitIntoProject-140]
	_ = x[PushOffsetIntoProject-141]
	_ = x[PushLimitIntoOffset-142]
	_ = x[PushLimitIntoOrdinality-143]
	_ = x[PushLimitIntoJoinLeft-144]
	_ = x[PushLimitIntoJoinRight-145]
	_ = x[FoldLimits-146]
	_ = x[AssociateLimitJoinsLeft-147]
	_ = x[AssociateLimitJoinsRight-148]
	_ = x[EliminateMax1Row-149]
	_ = x[FoldPlusZero-150]
	_ = x[FoldZeroPlus-151]
	_ = x[FoldMinusZero-152]
	_ = x[FoldMultOne-153]
	_ = x[FoldOneMult-154]
	_ = x[FoldDivOne-155]
	_ = x[InvertMinus-156]
	_ = x[EliminateUnaryMinus-157]
	_ = x[SimplifyLimitOrdering-158]
	_ = x[SimplifyOffsetOrdering-159]
	_ = x[SimplifyGroupByOrdering-160]
	_ = x[SimplifyOrdinalityOrdering-161]
	_ = x[SimplifyExplainOrdering-162]
	_ = x[EliminateJoinUnderProjectLeft-163]
	_ = x[EliminateJoinUnderProjectRight-164]
	_ = x[EliminateProject-165]
	_ = x[MergeProjects-166]
	_ = x[MergeProjectWithValues-167]
	_ = x[PushColumnRemappingIntoValues-168]
	_ = x[FoldTupleAccessIntoValues-169]
	_ = x[FoldJSONAccessIntoValues-170]
	_ = x[ConvertZipArraysToValues-171]
	_ = x[PruneProjectCols-172]
	_ = x[PruneScanCols-173]
	_ = x[PruneSelectCols-174]
	_ = x[PruneLimitCols-175]
	_ = x[PruneOffsetCols-176]
	_ = x[PruneJoinLeftCols-177]
	_ = x[PruneJoinRightCols-178]
	_ = x[PruneSemiAntiJoinRightCols-179]
	_ = x[PruneAggCols-180]
	_ = x[PruneGroupByCols-181]
	_ = x[PruneValuesCols-182]
	_ = x[PruneOrdinalityCols-183]
	_ = x[PruneExplainCols-184]
	_ = x[PruneProjectSetCols-185]
	_ = x[PruneWindowOutputCols-186]
	_ = x[PruneWindowInputCols-187]
	_ = x[PruneMutationFetchCols-188]
	_ = x[PruneMutationInputCols-189]
	_ = x[PruneMutationReturnCols-190]
	_ = x[PruneWithScanCols-191]
	_ = x[PruneWithCols-192]
	_ = x[PruneUnionAllCols-193]
	_ = x[RejectNullsLeftJoin-194]
	_ = x[RejectNullsRightJoin-195]
	_ = x[RejectNullsGroupBy-196]
	_ = x[RejectNullsUnderJoinLeft-197]
	_ = x[RejectNullsUnderJoinRight-198]
	_ = x[RejectNullsProject-199]
	_ = x[CommuteVar-200]
	_ = x[CommuteConst-201]
	_ = x[EliminateCoalesce-202]
	_ = x[SimplifyCoalesce-203]
	_ = x[EliminateCast-204]
	_ = x[NormalizeInConst-205]
	_ = x[FoldInNull-206]
	_ = x[UnifyComparisonTypes-207]
	_ = x[EliminateExistsZeroRows-208]
	_ = x[EliminateExistsProject-209]
	_ = x[EliminateExistsGroupBy-210]
	_ = x[IntroduceExistsLimit-211]
	_ = x[EliminateExistsLimit-212]
	_ = x[NormalizeJSONFieldAccess-213]
	_ = x[NormalizeJSONContains-214]
	_ = x[SimplifyCaseWhenConstValue-215]
	_ = x[InlineAnyValuesSingleCol-216]
	_ = x[InlineAnyValuesMultiCol-217]
	_ = x[SimplifyEqualsAnyTuple-218]
	_ = x[SimplifyAnyScalarArray-219]
	_ = x[FoldCollate-220]
	_ = x[NormalizeArrayFlattenToAgg-221]
	_ = x[SimplifySameVarEqualities-222]
	_ = x[SimplifySameVarInequalities-223]
	_ = x[SimplifySelectFilters-224]
	_ = x[ConsolidateSelectFilters-225]
	_ = x[DetectSelectContradiction-226]
	_ = x[EliminateSelect-227]
	_ = x[MergeSelects-228]
	_ = x[PushSelectIntoProject-229]
	_ = x[MergeSelectInnerJoin-230]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-231]
	_ = x[PushSelectIntoJoinLeft-232]
	_ = x[PushSelectIntoGroupBy-233]
	_ = x[RemoveNotNullCondition-234]
	_ = x[PushSelectIntoProjectSet-235]
	_ = x[PushFilterIntoSetOp-236]
	_ = x[EliminateUnionAllLeft-237]
	_ = x[EliminateUnionAllRight-238]
	_ = x[EliminateWindow-239]
	_ = x[ReduceWindowPartitionCols-240]
	_ = x[SimplifyWindowOrdering-241]
	_ = x[PushSelectIntoWindow-242]
	_ = x[PushLimitIntoWindow-243]
	_ = x[InlineWith-244]
	_ = x[startExploreRule-245]
	_ = x[ReplaceScalarMinMaxWithLimit-246]
	_ = x[ReplaceMinWithLimit-247]
	_ = x[ReplaceMaxWithLimit-248]
	_ = x[GenerateStreamingGroupBy-249]
	_ = x[ReorderJoins-250]
	_ = x[CommuteLeftJoin-251]
	_ = x[CommuteSemiJoin-252]
	_ = x[GenerateMergeJoins-253]
	_ = x[GenerateLookupJoins-254]
	_ = x[GenerateInvertedJoins-255]
	_ = x[GenerateInvertedJoinsFromSelect-256]
	_ = x[GenerateZigzagJoins-257]
	_ = x[GenerateInvertedIndexZigzagJoins-258]
	_ = x[GenerateLookupJoinsWithFilter-259]
	_ = x[PushJoinIntoIndexJoin-260]
	_ = x[GenerateLimitedScans-261]
	_ = x[PushLimitIntoConstrainedScan-262]
	_ = x[PushLimitIntoIndexJoin-263]
	_ = x[SplitScanIntoUnionScans-264]
	_ = x[GenerateIndexScans-265]
	_ = x[GeneratePartialIndexScans-266]
	_ = x[GenerateConstrainedScans-267]
	_ = x[GenerateInvertedIndexScans-268]
	_ = x[SplitDisjunction-269]
	_ = x[SplitDisjunctionAddKey-270]
	_ = x[NumRuleNames-271]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinSplitScanIntoUnionScansGenerateIndexScansGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 873, 894, 914, 935, 962, 992, 1015, 1042, 1063, 1090, 1112, 1134, 1158, 1178, 1199, 1216, 1236, 1255, 1275, 1292, 1311, 1334, 1358, 1380, 1407, 1432, 1444, 1457, 1475, 1494, 1512, 1523, 1537, 1546, 1556, 1565, 1579, 1587, 1602, 1618, 1630, 1647, 1671, 1694, 1723, 1753, 1770, 1788, 1813, 1840, 1875, 1901, 1933, 1958, 1984, 2014, 2037, 2058, 2072, 2094, 2115, 2138, 2162, 2192, 2214, 2230, 2249, 2272, 2302, 2323, 2345, 2376, 2398, 2421, 2437, 2454, 2471, 2502, 2519, 2550, 2573, 2597, 2618, 2638, 2665, 2686, 2703, 2725, 2748, 2771, 2795, 2809, 2824, 2844, 2865, 2884, 2907, 2928, 2950, 2960, 2983, 3007, 3023, 3035, 3047, 3060, 3071, 3082, 3092, 3103, 3122, 3143, 3165, 3188, 3214, 3237, 3266, 3296, 3312, 3325, 3347, 3376, 3401, 3425, 3449, 3465, 3478, 3493, 3507, 3522, 3539, 3557, 3583, 3595, 3611, 3626, 3645, 3661, 3680, 3701, 3721, 3743, 3765, 3788, 3805, 3818, 3835, 3854, 3874, 3892, 3916, 3941, 3959, 3969, 3981, 3998, 4014, 4027, 4043, 4053, 4073, 4096, 4118, 4140, 4160, 4180, 4204, 4225, 4251, 4275, 4298, 4320, 4342, 4353, 4379, 4404, 4431, 4452, 4476, 4501, 4516, 4528, 4549, 4569, 4607, 4629, 4650, 4672, 4696, 4715, 4736, 4758, 4773, 4798, 4820, 4840, 4859, 4869, 4885, 4913, 4932, 4951, 4975, 4987, 5002, 5017, 5035, 5054, 5075, 5106, 5125, 5157, 5186, 5207, 5227, 5255, 5277, 5300, 5318, 5343, 5367, 5393, 5409, 5431, 5443}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
