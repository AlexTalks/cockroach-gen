// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[DecorrelateJoin-47]
	_ = x[DecorrelateProjectSet-48]
	_ = x[TryDecorrelateSelect-49]
	_ = x[TryDecorrelateProject-50]
	_ = x[TryDecorrelateProjectSelect-51]
	_ = x[TryDecorrelateProjectInnerJoin-52]
	_ = x[TryDecorrelateInnerJoin-53]
	_ = x[TryDecorrelateInnerLeftJoin-54]
	_ = x[TryDecorrelateGroupBy-55]
	_ = x[TryDecorrelateScalarGroupBy-56]
	_ = x[TryDecorrelateSemiJoin-57]
	_ = x[TryDecorrelateLimitOne-58]
	_ = x[TryDecorrelateProjectSet-59]
	_ = x[TryDecorrelateWindow-60]
	_ = x[TryDecorrelateMax1Row-61]
	_ = x[HoistSelectExists-62]
	_ = x[HoistSelectNotExists-63]
	_ = x[HoistSelectSubquery-64]
	_ = x[HoistProjectSubquery-65]
	_ = x[HoistJoinSubquery-66]
	_ = x[HoistValuesSubquery-67]
	_ = x[HoistProjectSetSubquery-68]
	_ = x[NormalizeSelectAnyFilter-69]
	_ = x[NormalizeJoinAnyFilter-70]
	_ = x[NormalizeSelectNotAnyFilter-71]
	_ = x[NormalizeJoinNotAnyFilter-72]
	_ = x[FoldNullCast-73]
	_ = x[FoldNullUnary-74]
	_ = x[FoldNullBinaryLeft-75]
	_ = x[FoldNullBinaryRight-76]
	_ = x[FoldNullInNonEmpty-77]
	_ = x[FoldInEmpty-78]
	_ = x[FoldNotInEmpty-79]
	_ = x[FoldArray-80]
	_ = x[FoldBinary-81]
	_ = x[FoldUnary-82]
	_ = x[FoldComparison-83]
	_ = x[FoldCast-84]
	_ = x[FoldIndirection-85]
	_ = x[FoldColumnAccess-86]
	_ = x[FoldFunction-87]
	_ = x[FoldEqualsAnyNull-88]
	_ = x[ConvertGroupByToDistinct-89]
	_ = x[EliminateGroupByProject-90]
	_ = x[EliminateJoinUnderGroupByLeft-91]
	_ = x[EliminateJoinUnderGroupByRight-92]
	_ = x[EliminateDistinct-93]
	_ = x[ReduceGroupingCols-94]
	_ = x[ReduceNotNullGroupingCols-95]
	_ = x[EliminateAggDistinctForKeys-96]
	_ = x[EliminateAggFilteredDistinctForKeys-97]
	_ = x[EliminateDistinctNoColumns-98]
	_ = x[EliminateEnsureDistinctNoColumns-99]
	_ = x[EliminateDistinctOnValues-100]
	_ = x[PushAggDistinctIntoGroupBy-101]
	_ = x[PushAggFilterIntoScalarGroupBy-102]
	_ = x[ConvertCountToCountRows-103]
	_ = x[FoldGroupingOperators-104]
	_ = x[InlineConstVar-105]
	_ = x[InlineProjectConstants-106]
	_ = x[InlineSelectConstants-107]
	_ = x[InlineJoinConstantsLeft-108]
	_ = x[InlineJoinConstantsRight-109]
	_ = x[PushSelectIntoInlinableProject-110]
	_ = x[InlineProjectInProject-111]
	_ = x[CommuteRightJoin-112]
	_ = x[SimplifyJoinFilters-113]
	_ = x[DetectJoinContradiction-114]
	_ = x[PushFilterIntoJoinLeftAndRight-115]
	_ = x[MapFilterIntoJoinLeft-116]
	_ = x[MapFilterIntoJoinRight-117]
	_ = x[MapEqualityIntoJoinLeftAndRight-118]
	_ = x[PushFilterIntoJoinLeft-119]
	_ = x[PushFilterIntoJoinRight-120]
	_ = x[SimplifyLeftJoin-121]
	_ = x[SimplifyRightJoin-122]
	_ = x[EliminateSemiJoin-123]
	_ = x[SimplifyZeroCardinalitySemiJoin-124]
	_ = x[EliminateAntiJoin-125]
	_ = x[SimplifyZeroCardinalityAntiJoin-126]
	_ = x[EliminateJoinNoColsLeft-127]
	_ = x[EliminateJoinNoColsRight-128]
	_ = x[HoistJoinProjectRight-129]
	_ = x[HoistJoinProjectLeft-130]
	_ = x[SimplifyJoinNotNullEquality-131]
	_ = x[ExtractJoinEqualities-132]
	_ = x[SortFiltersInJoin-133]
	_ = x[LeftAssociateJoinsLeft-134]
	_ = x[LeftAssociateJoinsRight-135]
	_ = x[RightAssociateJoinsLeft-136]
	_ = x[RightAssociateJoinsRight-137]
	_ = x[RemoveJoinNotNullCondition-138]
	_ = x[EliminateLimit-139]
	_ = x[EliminateOffset-140]
	_ = x[PushLimitIntoProject-141]
	_ = x[PushOffsetIntoProject-142]
	_ = x[PushLimitIntoOffset-143]
	_ = x[PushLimitIntoOrdinality-144]
	_ = x[PushLimitIntoJoinLeft-145]
	_ = x[PushLimitIntoJoinRight-146]
	_ = x[FoldLimits-147]
	_ = x[AssociateLimitJoinsLeft-148]
	_ = x[AssociateLimitJoinsRight-149]
	_ = x[EliminateMax1Row-150]
	_ = x[FoldPlusZero-151]
	_ = x[FoldZeroPlus-152]
	_ = x[FoldMinusZero-153]
	_ = x[FoldMultOne-154]
	_ = x[FoldOneMult-155]
	_ = x[FoldDivOne-156]
	_ = x[InvertMinus-157]
	_ = x[EliminateUnaryMinus-158]
	_ = x[SimplifyLimitOrdering-159]
	_ = x[SimplifyOffsetOrdering-160]
	_ = x[SimplifyGroupByOrdering-161]
	_ = x[SimplifyOrdinalityOrdering-162]
	_ = x[SimplifyExplainOrdering-163]
	_ = x[EliminateJoinUnderProjectLeft-164]
	_ = x[EliminateJoinUnderProjectRight-165]
	_ = x[EliminateProject-166]
	_ = x[MergeProjects-167]
	_ = x[MergeProjectWithValues-168]
	_ = x[PushColumnRemappingIntoValues-169]
	_ = x[FoldTupleAccessIntoValues-170]
	_ = x[FoldJSONAccessIntoValues-171]
	_ = x[ConvertZipArraysToValues-172]
	_ = x[PruneProjectCols-173]
	_ = x[PruneScanCols-174]
	_ = x[PruneSelectCols-175]
	_ = x[PruneLimitCols-176]
	_ = x[PruneOffsetCols-177]
	_ = x[PruneJoinLeftCols-178]
	_ = x[PruneJoinRightCols-179]
	_ = x[PruneSemiAntiJoinRightCols-180]
	_ = x[PruneAggCols-181]
	_ = x[PruneGroupByCols-182]
	_ = x[PruneValuesCols-183]
	_ = x[PruneOrdinalityCols-184]
	_ = x[PruneExplainCols-185]
	_ = x[PruneProjectSetCols-186]
	_ = x[PruneWindowOutputCols-187]
	_ = x[PruneWindowInputCols-188]
	_ = x[PruneMutationFetchCols-189]
	_ = x[PruneMutationInputCols-190]
	_ = x[PruneMutationReturnCols-191]
	_ = x[PruneWithScanCols-192]
	_ = x[PruneWithCols-193]
	_ = x[PruneUnionAllCols-194]
	_ = x[RejectNullsLeftJoin-195]
	_ = x[RejectNullsRightJoin-196]
	_ = x[RejectNullsGroupBy-197]
	_ = x[RejectNullsUnderJoinLeft-198]
	_ = x[RejectNullsUnderJoinRight-199]
	_ = x[RejectNullsProject-200]
	_ = x[CommuteVar-201]
	_ = x[CommuteConst-202]
	_ = x[EliminateCoalesce-203]
	_ = x[SimplifyCoalesce-204]
	_ = x[EliminateCast-205]
	_ = x[NormalizeInConst-206]
	_ = x[FoldInNull-207]
	_ = x[UnifyComparisonTypes-208]
	_ = x[EliminateExistsZeroRows-209]
	_ = x[EliminateExistsProject-210]
	_ = x[EliminateExistsGroupBy-211]
	_ = x[IntroduceExistsLimit-212]
	_ = x[EliminateExistsLimit-213]
	_ = x[NormalizeJSONFieldAccess-214]
	_ = x[NormalizeJSONContains-215]
	_ = x[SimplifyCaseWhenConstValue-216]
	_ = x[InlineAnyValuesSingleCol-217]
	_ = x[InlineAnyValuesMultiCol-218]
	_ = x[SimplifyEqualsAnyTuple-219]
	_ = x[SimplifyAnyScalarArray-220]
	_ = x[FoldCollate-221]
	_ = x[NormalizeArrayFlattenToAgg-222]
	_ = x[SimplifySameVarEqualities-223]
	_ = x[SimplifySameVarInequalities-224]
	_ = x[SimplifySelectFilters-225]
	_ = x[ConsolidateSelectFilters-226]
	_ = x[DetectSelectContradiction-227]
	_ = x[EliminateSelect-228]
	_ = x[MergeSelects-229]
	_ = x[PushSelectIntoProject-230]
	_ = x[MergeSelectInnerJoin-231]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-232]
	_ = x[PushSelectIntoJoinLeft-233]
	_ = x[PushSelectIntoGroupBy-234]
	_ = x[RemoveNotNullCondition-235]
	_ = x[PushSelectIntoProjectSet-236]
	_ = x[PushFilterIntoSetOp-237]
	_ = x[EliminateUnionAllLeft-238]
	_ = x[EliminateUnionAllRight-239]
	_ = x[EliminateWindow-240]
	_ = x[ReduceWindowPartitionCols-241]
	_ = x[SimplifyWindowOrdering-242]
	_ = x[PushSelectIntoWindow-243]
	_ = x[PushLimitIntoWindow-244]
	_ = x[InlineWith-245]
	_ = x[startExploreRule-246]
	_ = x[ReplaceScalarMinMaxWithLimit-247]
	_ = x[ReplaceMinWithLimit-248]
	_ = x[ReplaceMaxWithLimit-249]
	_ = x[GenerateStreamingGroupBy-250]
	_ = x[ReorderJoins-251]
	_ = x[CommuteLeftJoin-252]
	_ = x[CommuteSemiJoin-253]
	_ = x[GenerateMergeJoins-254]
	_ = x[GenerateLookupJoins-255]
	_ = x[GenerateInvertedJoins-256]
	_ = x[GenerateInvertedJoinsFromSelect-257]
	_ = x[GenerateZigzagJoins-258]
	_ = x[GenerateInvertedIndexZigzagJoins-259]
	_ = x[GenerateLookupJoinsWithFilter-260]
	_ = x[PushJoinIntoIndexJoin-261]
	_ = x[GenerateLimitedScans-262]
	_ = x[PushLimitIntoConstrainedScan-263]
	_ = x[PushLimitIntoIndexJoin-264]
	_ = x[SplitScanIntoUnionScans-265]
	_ = x[GenerateIndexScans-266]
	_ = x[GeneratePartialIndexScans-267]
	_ = x[GenerateConstrainedScans-268]
	_ = x[GenerateInvertedIndexScans-269]
	_ = x[SplitDisjunction-270]
	_ = x[SplitDisjunctionAddKey-271]
	_ = x[NumRuleNames-272]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightRemoveJoinNotNullConditionEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinSplitScanIntoUnionScansGenerateIndexScansGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 873, 894, 914, 935, 962, 992, 1015, 1042, 1063, 1090, 1112, 1134, 1158, 1178, 1199, 1216, 1236, 1255, 1275, 1292, 1311, 1334, 1358, 1380, 1407, 1432, 1444, 1457, 1475, 1494, 1512, 1523, 1537, 1546, 1556, 1565, 1579, 1587, 1602, 1618, 1630, 1647, 1671, 1694, 1723, 1753, 1770, 1788, 1813, 1840, 1875, 1901, 1933, 1958, 1984, 2014, 2037, 2058, 2072, 2094, 2115, 2138, 2162, 2192, 2214, 2230, 2249, 2272, 2302, 2323, 2345, 2376, 2398, 2421, 2437, 2454, 2471, 2502, 2519, 2550, 2573, 2597, 2618, 2638, 2665, 2686, 2703, 2725, 2748, 2771, 2795, 2821, 2835, 2850, 2870, 2891, 2910, 2933, 2954, 2976, 2986, 3009, 3033, 3049, 3061, 3073, 3086, 3097, 3108, 3118, 3129, 3148, 3169, 3191, 3214, 3240, 3263, 3292, 3322, 3338, 3351, 3373, 3402, 3427, 3451, 3475, 3491, 3504, 3519, 3533, 3548, 3565, 3583, 3609, 3621, 3637, 3652, 3671, 3687, 3706, 3727, 3747, 3769, 3791, 3814, 3831, 3844, 3861, 3880, 3900, 3918, 3942, 3967, 3985, 3995, 4007, 4024, 4040, 4053, 4069, 4079, 4099, 4122, 4144, 4166, 4186, 4206, 4230, 4251, 4277, 4301, 4324, 4346, 4368, 4379, 4405, 4430, 4457, 4478, 4502, 4527, 4542, 4554, 4575, 4595, 4633, 4655, 4676, 4698, 4722, 4741, 4762, 4784, 4799, 4824, 4846, 4866, 4885, 4895, 4911, 4939, 4958, 4977, 5001, 5013, 5028, 5043, 5061, 5080, 5101, 5132, 5151, 5183, 5212, 5233, 5253, 5281, 5303, 5326, 5344, 5369, 5393, 5419, 5435, 5457, 5469}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
