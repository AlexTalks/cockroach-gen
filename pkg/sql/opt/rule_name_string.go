// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldIsNotNull-35]
	_ = x[FoldNonNullIsNotNull-36]
	_ = x[CommuteNullIs-37]
	_ = x[DecorrelateJoin-38]
	_ = x[DecorrelateProjectSet-39]
	_ = x[TryDecorrelateSelect-40]
	_ = x[TryDecorrelateProject-41]
	_ = x[TryDecorrelateProjectSelect-42]
	_ = x[TryDecorrelateProjectInnerJoin-43]
	_ = x[TryDecorrelateInnerJoin-44]
	_ = x[TryDecorrelateInnerLeftJoin-45]
	_ = x[TryDecorrelateGroupBy-46]
	_ = x[TryDecorrelateScalarGroupBy-47]
	_ = x[TryDecorrelateSemiJoin-48]
	_ = x[TryDecorrelateLimitOne-49]
	_ = x[TryDecorrelateProjectSet-50]
	_ = x[TryDecorrelateWindow-51]
	_ = x[HoistSelectExists-52]
	_ = x[HoistSelectNotExists-53]
	_ = x[HoistSelectSubquery-54]
	_ = x[HoistProjectSubquery-55]
	_ = x[HoistJoinSubquery-56]
	_ = x[HoistValuesSubquery-57]
	_ = x[HoistProjectSetSubquery-58]
	_ = x[NormalizeSelectAnyFilter-59]
	_ = x[NormalizeJoinAnyFilter-60]
	_ = x[NormalizeSelectNotAnyFilter-61]
	_ = x[NormalizeJoinNotAnyFilter-62]
	_ = x[FoldNullCast-63]
	_ = x[FoldNullUnary-64]
	_ = x[FoldNullBinaryLeft-65]
	_ = x[FoldNullBinaryRight-66]
	_ = x[FoldNullInNonEmpty-67]
	_ = x[FoldNullInEmpty-68]
	_ = x[FoldNullNotInEmpty-69]
	_ = x[FoldArray-70]
	_ = x[FoldBinary-71]
	_ = x[FoldUnary-72]
	_ = x[FoldComparison-73]
	_ = x[FoldCast-74]
	_ = x[FoldIndirection-75]
	_ = x[FoldColumnAccess-76]
	_ = x[FoldFunction-77]
	_ = x[FoldEqualsAnyNull-78]
	_ = x[ConvertGroupByToDistinct-79]
	_ = x[EliminateDistinct-80]
	_ = x[EliminateGroupByProject-81]
	_ = x[ReduceGroupingCols-82]
	_ = x[EliminateAggDistinctForKeys-83]
	_ = x[EliminateDistinctOnNoColumns-84]
	_ = x[InlineProjectConstants-85]
	_ = x[InlineSelectConstants-86]
	_ = x[InlineJoinConstantsLeft-87]
	_ = x[InlineJoinConstantsRight-88]
	_ = x[PushSelectIntoInlinableProject-89]
	_ = x[InlineProjectInProject-90]
	_ = x[CommuteRightJoin-91]
	_ = x[SimplifyJoinFilters-92]
	_ = x[DetectJoinContradiction-93]
	_ = x[PushFilterIntoJoinLeftAndRight-94]
	_ = x[MapFilterIntoJoinLeft-95]
	_ = x[MapFilterIntoJoinRight-96]
	_ = x[MapEqualityIntoJoinLeftAndRight-97]
	_ = x[PushFilterIntoJoinLeft-98]
	_ = x[PushFilterIntoJoinRight-99]
	_ = x[SimplifyLeftJoinWithoutFilters-100]
	_ = x[SimplifyRightJoinWithoutFilters-101]
	_ = x[SimplifyLeftJoinWithFilters-102]
	_ = x[SimplifyRightJoinWithFilters-103]
	_ = x[EliminateSemiJoin-104]
	_ = x[SimplifyZeroCardinalitySemiJoin-105]
	_ = x[EliminateAntiJoin-106]
	_ = x[SimplifyZeroCardinalityAntiJoin-107]
	_ = x[EliminateJoinNoColsLeft-108]
	_ = x[EliminateJoinNoColsRight-109]
	_ = x[HoistJoinProjectRight-110]
	_ = x[HoistJoinProjectLeft-111]
	_ = x[SimplifyJoinNotNullEquality-112]
	_ = x[ExtractJoinEqualities-113]
	_ = x[SortFiltersInJoin-114]
	_ = x[EliminateLimit-115]
	_ = x[EliminateOffset-116]
	_ = x[PushLimitIntoProject-117]
	_ = x[PushOffsetIntoProject-118]
	_ = x[PushLimitIntoOffset-119]
	_ = x[PushLimitIntoOrdinality-120]
	_ = x[PushLimitIntoLeftJoin-121]
	_ = x[EliminateMax1Row-122]
	_ = x[FoldPlusZero-123]
	_ = x[FoldZeroPlus-124]
	_ = x[FoldMinusZero-125]
	_ = x[FoldMultOne-126]
	_ = x[FoldOneMult-127]
	_ = x[FoldDivOne-128]
	_ = x[InvertMinus-129]
	_ = x[EliminateUnaryMinus-130]
	_ = x[SimplifyLimitOrdering-131]
	_ = x[SimplifyOffsetOrdering-132]
	_ = x[SimplifyGroupByOrdering-133]
	_ = x[SimplifyOrdinalityOrdering-134]
	_ = x[SimplifyExplainOrdering-135]
	_ = x[EliminateProject-136]
	_ = x[MergeProjects-137]
	_ = x[MergeProjectWithValues-138]
	_ = x[PruneProjectCols-139]
	_ = x[PruneScanCols-140]
	_ = x[PruneSelectCols-141]
	_ = x[PruneLimitCols-142]
	_ = x[PruneOffsetCols-143]
	_ = x[PruneJoinLeftCols-144]
	_ = x[PruneJoinRightCols-145]
	_ = x[PruneSemiAntiJoinRightCols-146]
	_ = x[PruneAggCols-147]
	_ = x[PruneGroupByCols-148]
	_ = x[PruneValuesCols-149]
	_ = x[PruneOrdinalityCols-150]
	_ = x[PruneExplainCols-151]
	_ = x[PruneProjectSetCols-152]
	_ = x[PruneWindowOutputCols-153]
	_ = x[PruneWindowInputCols-154]
	_ = x[PruneMutationFetchCols-155]
	_ = x[PruneMutationInputCols-156]
	_ = x[PruneMutationReturnCols-157]
	_ = x[PruneWithScanCols-158]
	_ = x[PruneWithCols-159]
	_ = x[PruneUnionAllCols-160]
	_ = x[RejectNullsLeftJoin-161]
	_ = x[RejectNullsRightJoin-162]
	_ = x[RejectNullsGroupBy-163]
	_ = x[CommuteVar-164]
	_ = x[CommuteConst-165]
	_ = x[EliminateCoalesce-166]
	_ = x[SimplifyCoalesce-167]
	_ = x[EliminateCast-168]
	_ = x[NormalizeInConst-169]
	_ = x[FoldInNull-170]
	_ = x[UnifyComparisonTypes-171]
	_ = x[EliminateExistsProject-172]
	_ = x[EliminateExistsGroupBy-173]
	_ = x[IntroduceExistsLimit-174]
	_ = x[NormalizeJSONFieldAccess-175]
	_ = x[NormalizeJSONContains-176]
	_ = x[SimplifyCaseWhenConstValue-177]
	_ = x[InlineAnyValuesSingleCol-178]
	_ = x[InlineAnyValuesMultiCol-179]
	_ = x[SimplifyEqualsAnyTuple-180]
	_ = x[SimplifyAnyScalarArray-181]
	_ = x[FoldCollate-182]
	_ = x[NormalizeArrayFlattenToAgg-183]
	_ = x[SimplifySelectFilters-184]
	_ = x[ConsolidateSelectFilters-185]
	_ = x[DetectSelectContradiction-186]
	_ = x[EliminateSelect-187]
	_ = x[MergeSelects-188]
	_ = x[PushSelectIntoProject-189]
	_ = x[MergeSelectInnerJoin-190]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-191]
	_ = x[PushSelectIntoJoinLeft-192]
	_ = x[PushSelectIntoGroupBy-193]
	_ = x[RemoveNotNullCondition-194]
	_ = x[InlineConstVar-195]
	_ = x[PushSelectIntoProjectSet-196]
	_ = x[EliminateUnionAllLeft-197]
	_ = x[EliminateUnionAllRight-198]
	_ = x[PushFilterIntoSetOp-199]
	_ = x[EliminateWindow-200]
	_ = x[ReduceWindowPartitionCols-201]
	_ = x[SimplifyWindowOrdering-202]
	_ = x[PushSelectIntoWindow-203]
	_ = x[PushLimitIntoWindow-204]
	_ = x[InlineWith-205]
	_ = x[startExploreRule-206]
	_ = x[ReplaceScalarMinWithLimit-207]
	_ = x[ReplaceScalarMaxWithLimit-208]
	_ = x[ReplaceMinWithLimit-209]
	_ = x[ReplaceMaxWithLimit-210]
	_ = x[GenerateStreamingGroupBy-211]
	_ = x[CommuteJoin-212]
	_ = x[CommuteLeftJoin-213]
	_ = x[CommuteSemiJoin-214]
	_ = x[GenerateMergeJoins-215]
	_ = x[GenerateLookupJoins-216]
	_ = x[GenerateZigzagJoins-217]
	_ = x[GenerateInvertedIndexZigzagJoins-218]
	_ = x[GenerateLookupJoinsWithFilter-219]
	_ = x[AssociateJoin-220]
	_ = x[GenerateLimitedScans-221]
	_ = x[PushLimitIntoConstrainedScan-222]
	_ = x[PushLimitIntoIndexJoin-223]
	_ = x[GenerateIndexScans-224]
	_ = x[GenerateConstrainedScans-225]
	_ = x[GenerateInvertedIndexScans-226]
	_ = x[NumRuleNames-227]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldIsNotNullFoldNonNullIsNotNullCommuteNullIsDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldNullInEmptyFoldNullNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateDistinctEliminateGroupByProjectReduceGroupingColsEliminateAggDistinctForKeysEliminateDistinctOnNoColumnsInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinWithoutFiltersSimplifyRightJoinWithoutFiltersSimplifyLeftJoinWithFiltersSimplifyRightJoinWithFiltersEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoLeftJoinEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateProjectMergeProjectsMergeProjectWithValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitNormalizeJSONFieldAccessNormalizeJSONContainsSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySelectFiltersConsolidateSelectFiltersDetectSelectContradictionEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionInlineConstVarPushSelectIntoProjectSetEliminateUnionAllLeftEliminateUnionAllRightPushFilterIntoSetOpEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinWithLimitReplaceScalarMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByCommuteJoinCommuteLeftJoinCommuteSemiJoinGenerateMergeJoinsGenerateLookupJoinsGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsGenerateLookupJoinsWithFilterAssociateJoinGenerateLimitedScansPushLimitIntoConstrainedScanPushLimitIntoIndexJoinGenerateIndexScansGenerateConstrainedScansGenerateInvertedIndexScansNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 596, 616, 629, 644, 665, 685, 706, 733, 763, 786, 813, 834, 861, 883, 905, 929, 949, 966, 986, 1005, 1025, 1042, 1061, 1084, 1108, 1130, 1157, 1182, 1194, 1207, 1225, 1244, 1262, 1277, 1295, 1304, 1314, 1323, 1337, 1345, 1360, 1376, 1388, 1405, 1429, 1446, 1469, 1487, 1514, 1542, 1564, 1585, 1608, 1632, 1662, 1684, 1700, 1719, 1742, 1772, 1793, 1815, 1846, 1868, 1891, 1921, 1952, 1979, 2007, 2024, 2055, 2072, 2103, 2126, 2150, 2171, 2191, 2218, 2239, 2256, 2270, 2285, 2305, 2326, 2345, 2368, 2389, 2405, 2417, 2429, 2442, 2453, 2464, 2474, 2485, 2504, 2525, 2547, 2570, 2596, 2619, 2635, 2648, 2670, 2686, 2699, 2714, 2728, 2743, 2760, 2778, 2804, 2816, 2832, 2847, 2866, 2882, 2901, 2922, 2942, 2964, 2986, 3009, 3026, 3039, 3056, 3075, 3095, 3113, 3123, 3135, 3152, 3168, 3181, 3197, 3207, 3227, 3249, 3271, 3291, 3315, 3336, 3362, 3386, 3409, 3431, 3453, 3464, 3490, 3511, 3535, 3560, 3575, 3587, 3608, 3628, 3666, 3688, 3709, 3731, 3745, 3769, 3790, 3812, 3831, 3846, 3871, 3893, 3913, 3932, 3942, 3958, 3983, 4008, 4027, 4046, 4070, 4081, 4096, 4111, 4129, 4148, 4167, 4199, 4228, 4241, 4261, 4289, 4311, 4329, 4353, 4379, 4391}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
