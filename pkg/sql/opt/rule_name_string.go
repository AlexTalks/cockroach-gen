// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[FoldCmpSTMaxDistanceLeft-47]
	_ = x[FoldCmpSTMaxDistanceRight-48]
	_ = x[DecorrelateJoin-49]
	_ = x[DecorrelateProjectSet-50]
	_ = x[TryDecorrelateSelect-51]
	_ = x[TryDecorrelateProject-52]
	_ = x[TryDecorrelateProjectSelect-53]
	_ = x[TryDecorrelateProjectInnerJoin-54]
	_ = x[TryDecorrelateInnerJoin-55]
	_ = x[TryDecorrelateInnerLeftJoin-56]
	_ = x[TryDecorrelateGroupBy-57]
	_ = x[TryDecorrelateScalarGroupBy-58]
	_ = x[TryDecorrelateSemiJoin-59]
	_ = x[TryDecorrelateLimitOne-60]
	_ = x[TryDecorrelateProjectSet-61]
	_ = x[TryDecorrelateWindow-62]
	_ = x[TryDecorrelateMax1Row-63]
	_ = x[HoistSelectExists-64]
	_ = x[HoistSelectNotExists-65]
	_ = x[HoistSelectSubquery-66]
	_ = x[HoistProjectSubquery-67]
	_ = x[HoistJoinSubquery-68]
	_ = x[HoistValuesSubquery-69]
	_ = x[HoistProjectSetSubquery-70]
	_ = x[NormalizeSelectAnyFilter-71]
	_ = x[NormalizeJoinAnyFilter-72]
	_ = x[NormalizeSelectNotAnyFilter-73]
	_ = x[NormalizeJoinNotAnyFilter-74]
	_ = x[FoldNullCast-75]
	_ = x[FoldNullUnary-76]
	_ = x[FoldNullBinaryLeft-77]
	_ = x[FoldNullBinaryRight-78]
	_ = x[FoldNullInNonEmpty-79]
	_ = x[FoldInEmpty-80]
	_ = x[FoldNotInEmpty-81]
	_ = x[FoldArray-82]
	_ = x[FoldBinary-83]
	_ = x[FoldUnary-84]
	_ = x[FoldComparison-85]
	_ = x[FoldCast-86]
	_ = x[FoldIndirection-87]
	_ = x[FoldColumnAccess-88]
	_ = x[FoldFunction-89]
	_ = x[FoldEqualsAnyNull-90]
	_ = x[ConvertGroupByToDistinct-91]
	_ = x[EliminateGroupByProject-92]
	_ = x[EliminateJoinUnderGroupByLeft-93]
	_ = x[EliminateJoinUnderGroupByRight-94]
	_ = x[EliminateDistinct-95]
	_ = x[ReduceGroupingCols-96]
	_ = x[ReduceNotNullGroupingCols-97]
	_ = x[EliminateAggDistinctForKeys-98]
	_ = x[EliminateAggFilteredDistinctForKeys-99]
	_ = x[EliminateDistinctNoColumns-100]
	_ = x[EliminateEnsureDistinctNoColumns-101]
	_ = x[EliminateDistinctOnValues-102]
	_ = x[PushAggDistinctIntoGroupBy-103]
	_ = x[PushAggFilterIntoScalarGroupBy-104]
	_ = x[ConvertCountToCountRows-105]
	_ = x[FoldGroupingOperators-106]
	_ = x[InlineConstVar-107]
	_ = x[InlineProjectConstants-108]
	_ = x[InlineSelectConstants-109]
	_ = x[InlineJoinConstantsLeft-110]
	_ = x[InlineJoinConstantsRight-111]
	_ = x[PushSelectIntoInlinableProject-112]
	_ = x[InlineProjectInProject-113]
	_ = x[CommuteRightJoin-114]
	_ = x[SimplifyJoinFilters-115]
	_ = x[DetectJoinContradiction-116]
	_ = x[PushFilterIntoJoinLeftAndRight-117]
	_ = x[MapFilterIntoJoinLeft-118]
	_ = x[MapFilterIntoJoinRight-119]
	_ = x[MapEqualityIntoJoinLeftAndRight-120]
	_ = x[PushFilterIntoJoinLeft-121]
	_ = x[PushFilterIntoJoinRight-122]
	_ = x[SimplifyLeftJoin-123]
	_ = x[SimplifyRightJoin-124]
	_ = x[EliminateSemiJoin-125]
	_ = x[SimplifyZeroCardinalitySemiJoin-126]
	_ = x[EliminateAntiJoin-127]
	_ = x[SimplifyZeroCardinalityAntiJoin-128]
	_ = x[EliminateJoinNoColsLeft-129]
	_ = x[EliminateJoinNoColsRight-130]
	_ = x[HoistJoinProjectRight-131]
	_ = x[HoistJoinProjectLeft-132]
	_ = x[SimplifyJoinNotNullEquality-133]
	_ = x[ExtractJoinEqualities-134]
	_ = x[SortFiltersInJoin-135]
	_ = x[LeftAssociateJoinsLeft-136]
	_ = x[LeftAssociateJoinsRight-137]
	_ = x[RightAssociateJoinsLeft-138]
	_ = x[RightAssociateJoinsRight-139]
	_ = x[RemoveJoinNotNullCondition-140]
	_ = x[ProjectInnerJoinValues-141]
	_ = x[EliminateLimit-142]
	_ = x[EliminateOffset-143]
	_ = x[PushLimitIntoProject-144]
	_ = x[PushOffsetIntoProject-145]
	_ = x[PushLimitIntoOffset-146]
	_ = x[PushLimitIntoOrdinality-147]
	_ = x[PushLimitIntoJoinLeft-148]
	_ = x[PushLimitIntoJoinRight-149]
	_ = x[FoldLimits-150]
	_ = x[AssociateLimitJoinsLeft-151]
	_ = x[AssociateLimitJoinsRight-152]
	_ = x[EliminateMax1Row-153]
	_ = x[FoldPlusZero-154]
	_ = x[FoldZeroPlus-155]
	_ = x[FoldMinusZero-156]
	_ = x[FoldMultOne-157]
	_ = x[FoldOneMult-158]
	_ = x[FoldDivOne-159]
	_ = x[InvertMinus-160]
	_ = x[EliminateUnaryMinus-161]
	_ = x[SimplifyLimitOrdering-162]
	_ = x[SimplifyOffsetOrdering-163]
	_ = x[SimplifyGroupByOrdering-164]
	_ = x[SimplifyOrdinalityOrdering-165]
	_ = x[SimplifyExplainOrdering-166]
	_ = x[EliminateJoinUnderProjectLeft-167]
	_ = x[EliminateJoinUnderProjectRight-168]
	_ = x[EliminateProject-169]
	_ = x[MergeProjects-170]
	_ = x[MergeProjectWithValues-171]
	_ = x[PushColumnRemappingIntoValues-172]
	_ = x[FoldTupleAccessIntoValues-173]
	_ = x[FoldJSONAccessIntoValues-174]
	_ = x[ConvertZipArraysToValues-175]
	_ = x[PruneProjectCols-176]
	_ = x[PruneScanCols-177]
	_ = x[PruneSelectCols-178]
	_ = x[PruneLimitCols-179]
	_ = x[PruneOffsetCols-180]
	_ = x[PruneJoinLeftCols-181]
	_ = x[PruneJoinRightCols-182]
	_ = x[PruneSemiAntiJoinRightCols-183]
	_ = x[PruneAggCols-184]
	_ = x[PruneGroupByCols-185]
	_ = x[PruneValuesCols-186]
	_ = x[PruneOrdinalityCols-187]
	_ = x[PruneExplainCols-188]
	_ = x[PruneProjectSetCols-189]
	_ = x[PruneWindowOutputCols-190]
	_ = x[PruneWindowInputCols-191]
	_ = x[PruneMutationFetchCols-192]
	_ = x[PruneMutationInputCols-193]
	_ = x[PruneMutationReturnCols-194]
	_ = x[PruneWithScanCols-195]
	_ = x[PruneWithCols-196]
	_ = x[PruneUnionAllCols-197]
	_ = x[RejectNullsLeftJoin-198]
	_ = x[RejectNullsRightJoin-199]
	_ = x[RejectNullsGroupBy-200]
	_ = x[RejectNullsUnderJoinLeft-201]
	_ = x[RejectNullsUnderJoinRight-202]
	_ = x[RejectNullsProject-203]
	_ = x[CommuteVar-204]
	_ = x[CommuteConst-205]
	_ = x[EliminateCoalesce-206]
	_ = x[SimplifyCoalesce-207]
	_ = x[EliminateCast-208]
	_ = x[NormalizeInConst-209]
	_ = x[FoldInNull-210]
	_ = x[UnifyComparisonTypes-211]
	_ = x[EliminateExistsZeroRows-212]
	_ = x[EliminateExistsProject-213]
	_ = x[EliminateExistsGroupBy-214]
	_ = x[IntroduceExistsLimit-215]
	_ = x[EliminateExistsLimit-216]
	_ = x[SimplifyCaseWhenConstValue-217]
	_ = x[InlineAnyValuesSingleCol-218]
	_ = x[InlineAnyValuesMultiCol-219]
	_ = x[SimplifyEqualsAnyTuple-220]
	_ = x[SimplifyAnyScalarArray-221]
	_ = x[FoldCollate-222]
	_ = x[NormalizeArrayFlattenToAgg-223]
	_ = x[SimplifySameVarEqualities-224]
	_ = x[SimplifySameVarInequalities-225]
	_ = x[SimplifySelectFilters-226]
	_ = x[ConsolidateSelectFilters-227]
	_ = x[EliminateSelect-228]
	_ = x[MergeSelects-229]
	_ = x[PushSelectIntoProject-230]
	_ = x[MergeSelectInnerJoin-231]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-232]
	_ = x[PushSelectIntoJoinLeft-233]
	_ = x[PushSelectIntoGroupBy-234]
	_ = x[RemoveNotNullCondition-235]
	_ = x[PushSelectIntoProjectSet-236]
	_ = x[PushFilterIntoSetOp-237]
	_ = x[EliminateUnionAllLeft-238]
	_ = x[EliminateUnionAllRight-239]
	_ = x[EliminateWindow-240]
	_ = x[ReduceWindowPartitionCols-241]
	_ = x[SimplifyWindowOrdering-242]
	_ = x[PushSelectIntoWindow-243]
	_ = x[PushLimitIntoWindow-244]
	_ = x[InlineWith-245]
	_ = x[startExploreRule-246]
	_ = x[ReplaceScalarMinMaxWithLimit-247]
	_ = x[ReplaceMinWithLimit-248]
	_ = x[ReplaceMaxWithLimit-249]
	_ = x[GenerateStreamingGroupBy-250]
	_ = x[ReorderJoins-251]
	_ = x[CommuteLeftJoin-252]
	_ = x[CommuteSemiJoin-253]
	_ = x[ConvertSemiToInnerJoin-254]
	_ = x[GenerateMergeJoins-255]
	_ = x[GenerateLookupJoins-256]
	_ = x[GenerateInvertedJoins-257]
	_ = x[GenerateInvertedJoinsFromSelect-258]
	_ = x[GenerateLookupJoinsWithFilter-259]
	_ = x[PushJoinIntoIndexJoin-260]
	_ = x[GenerateLimitedScans-261]
	_ = x[PushLimitIntoFilteredScan-262]
	_ = x[PushLimitIntoIndexJoin-263]
	_ = x[SplitScanIntoUnionScans-264]
	_ = x[EliminateIndexJoinInsideProject-265]
	_ = x[GenerateIndexScans-266]
	_ = x[GeneratePartialIndexScans-267]
	_ = x[GenerateConstrainedScans-268]
	_ = x[GenerateInvertedIndexScans-269]
	_ = x[GenerateZigzagJoins-270]
	_ = x[GenerateInvertedIndexZigzagJoins-271]
	_ = x[SplitDisjunction-272]
	_ = x[SplitDisjunctionAddKey-273]
	_ = x[NumRuleNames-274]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightFoldCmpSTMaxDistanceLeftFoldCmpSTMaxDistanceRightDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightRemoveJoinNotNullConditionProjectInnerJoinValuesEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifySelectFiltersConsolidateSelectFiltersEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinConvertSemiToInnerJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinGenerateLimitedScansPushLimitIntoFilteredScanPushLimitIntoIndexJoinSplitScanIntoUnionScansEliminateIndexJoinInsideProjectGenerateIndexScansGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 882, 907, 922, 943, 963, 984, 1011, 1041, 1064, 1091, 1112, 1139, 1161, 1183, 1207, 1227, 1248, 1265, 1285, 1304, 1324, 1341, 1360, 1383, 1407, 1429, 1456, 1481, 1493, 1506, 1524, 1543, 1561, 1572, 1586, 1595, 1605, 1614, 1628, 1636, 1651, 1667, 1679, 1696, 1720, 1743, 1772, 1802, 1819, 1837, 1862, 1889, 1924, 1950, 1982, 2007, 2033, 2063, 2086, 2107, 2121, 2143, 2164, 2187, 2211, 2241, 2263, 2279, 2298, 2321, 2351, 2372, 2394, 2425, 2447, 2470, 2486, 2503, 2520, 2551, 2568, 2599, 2622, 2646, 2667, 2687, 2714, 2735, 2752, 2774, 2797, 2820, 2844, 2870, 2892, 2906, 2921, 2941, 2962, 2981, 3004, 3025, 3047, 3057, 3080, 3104, 3120, 3132, 3144, 3157, 3168, 3179, 3189, 3200, 3219, 3240, 3262, 3285, 3311, 3334, 3363, 3393, 3409, 3422, 3444, 3473, 3498, 3522, 3546, 3562, 3575, 3590, 3604, 3619, 3636, 3654, 3680, 3692, 3708, 3723, 3742, 3758, 3777, 3798, 3818, 3840, 3862, 3885, 3902, 3915, 3932, 3951, 3971, 3989, 4013, 4038, 4056, 4066, 4078, 4095, 4111, 4124, 4140, 4150, 4170, 4193, 4215, 4237, 4257, 4277, 4303, 4327, 4350, 4372, 4394, 4405, 4431, 4456, 4483, 4504, 4528, 4543, 4555, 4576, 4596, 4634, 4656, 4677, 4699, 4723, 4742, 4763, 4785, 4800, 4825, 4847, 4867, 4886, 4896, 4912, 4940, 4959, 4978, 5002, 5014, 5029, 5044, 5066, 5084, 5103, 5124, 5155, 5184, 5205, 5225, 5250, 5272, 5295, 5326, 5344, 5369, 5393, 5419, 5438, 5470, 5486, 5508, 5520}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
