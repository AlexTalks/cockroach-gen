# LogicTest: default parallel-stmts distsql distsql-metadata

# A basic sanity check to demonstrate column type changes.
subtest SanityCheck

statement ok
CREATE TABLE t (s STRING, sl STRING(5), t TIME, ts TIMESTAMP)

statement ok
INSERT INTO t VALUES ('some string', 'short', TIME '20:16:27', '2018-05-23 20:16:27.658082')

statement ok
ALTER TABLE t ALTER s TYPE BYTES, ALTER sl TYPE STRING(6), ALTER t TYPE TIMETZ, ALTER ts TYPE TIMESTAMPTZ

query TTBTT colnames
SHOW COLUMNS FROM t
----
Field  Type                      Null  Default  Indices
s      BYTES                     true  NULL     {}
sl     STRING(6)                 true  NULL     {}
t      TIMETZ                    true  NULL     {}
ts     TIMESTAMP WITH TIME ZONE  true  NULL     {}

query TTTT
SELECT * FROM t
----
some string  short  0000-01-01 20:16:27 +0000 UTC  2018-05-23 20:16:27.658082 +0000 +0000

statement ok
DROP TABLE t


# Demonstrate that we can change to an alias of a type
subtest ChangeVisibleColumnType

statement ok
CREATE TABLE t (a INT)

query TTBTT colnames
SHOW COLUMNS FROM t
----
Field  Type  Null  Default  Indices
a      INT   true  NULL     {}

statement ok
ALTER TABLE t ALTER a TYPE INTEGER

query TTBTT colnames
SHOW COLUMNS FROM t
----
Field  Type  Null  Default  Indices
a      INTEGER   true  NULL     {}

statement ok
DROP TABLE t


# Verify error handling when a bad COLLATE is used
subtest BadStringLocale

statement ok
CREATE TABLE t (s STRING)

statement error pq: invalid locale bad_locale
ALTER TABLE t ALTER s TYPE STRING COLLATE bad_locale

statement ok
DROP TABLE t


# Verify error handling when a silly COLLATE is used
subtest BadCollateOnNotString

statement ok
CREATE TABLE t (i INT)

statement error pq: COLLATE can only be used with string types
ALTER TABLE t ALTER i TYPE INT COLLATE nope

statement ok
DROP TABLE t


# Verify that making a no-op change is ok
subtest NoOpColumnChange

statement ok
CREATE TABLE t (s STRING)

statement ok
ALTER TABLE t ALTER s TYPE STRING

statement ok
DROP TABLE t
