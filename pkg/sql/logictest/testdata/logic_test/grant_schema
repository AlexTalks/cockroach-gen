# LogicTest: default-configs local-mixed-21.2-22.1

statement ok
GRANT CREATE ON DATABASE test TO testuser;
CREATE USER testuser2

# Don't run these tests as an admin.
user testuser

# Check pg_catalog grants.
query TTTT colnames
SHOW GRANTS ON SCHEMA pg_catalog
----
database_name  schema_name  grantee  privilege_type
test           pg_catalog   public   USAGE

# Check information_schema grants.
query TTTT colnames
SHOW GRANTS ON SCHEMA information_schema
----
database_name  schema_name         grantee  privilege_type
test           information_schema  public   USAGE

# Check public schema grants.
query TTTT colnames
SHOW GRANTS ON SCHEMA public
----
database_name  schema_name  grantee  privilege_type
test           public       admin    ALL
test           public       public   CREATE
test           public       public   USAGE
test           public       root     ALL

statement ok
SET experimental_enable_temp_tables = true;
CREATE TEMP TABLE t(a INT)

let $temp_schema
SELECT schema_name FROM [show schemas] WHERE schema_name LIKE '%pg_temp%'

# Check pg_temp grants.
query TT colnames
SELECT grantee, privilege_type FROM [SHOW GRANTS ON SCHEMA $temp_schema]
----
grantee  privilege_type
admin    ALL
public   CREATE
public   USAGE
root     ALL

statement ok
CREATE SCHEMA s;
GRANT CREATE ON SCHEMA s TO testuser2

# Check user-defined schema grants.
query TTTT colnames
SHOW GRANTS ON SCHEMA s
----
database_name  schema_name  grantee    privilege_type
test           s            admin      ALL
test           s            root       ALL
test           s            testuser   ALL
test           s            testuser2  CREATE

# Check grant information in backing table. We have to strip off the session
# identifying information from the end of the pg_temp schema name.
query TTTTT colnames
SELECT
  grantee,
  table_catalog,
  IF(table_schema LIKE 'pg_temp%', 'pg_temp', table_schema) AS table_schema,
  privilege_type,
  is_grantable
FROM information_schema.schema_privileges
----
grantee    table_catalog  table_schema        privilege_type  is_grantable
public     test           crdb_internal       USAGE           NULL
public     test           information_schema  USAGE           NULL
public     test           pg_catalog          USAGE           NULL
public     test           pg_extension        USAGE           NULL
admin      test           pg_temp             ALL             NULL
public     test           pg_temp             CREATE          NULL
public     test           pg_temp             USAGE           NULL
root       test           pg_temp             ALL             NULL
admin      test           public              ALL             NULL
public     test           public              CREATE          NULL
public     test           public              USAGE           NULL
root       test           public              ALL             NULL
admin      test           s                   ALL             NULL
root       test           s                   ALL             NULL
testuser   test           s                   ALL             NULL
testuser2  test           s                   CREATE          NULL

# Check grants for testuser2, which should inherit from the public role.
query TBB colnames rowsort
WITH schema_names(schema_name) AS (
   SELECT n.nspname AS schema_name
     FROM pg_catalog.pg_namespace n
) SELECT IF(schema_name LIKE 'pg_temp%', 'pg_temp', schema_name) AS schema_name,
  pg_catalog.has_schema_privilege('testuser2', schema_name, 'CREATE') AS has_create,
  pg_catalog.has_schema_privilege('testuser2', schema_name, 'USAGE') AS has_usage
FROM schema_names
----
schema_name         has_create  has_usage
crdb_internal       false       true
information_schema  false       true
pg_catalog          false       true
pg_extension        false       true
pg_temp             true        true
public              true        true
s                   true        false
