// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1310
	`ALTER`: {
		//line sql.y: 1311
		Category: hGroup,
		//line sql.y: 1312
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1329
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1330
		Category: hDDL,
		//line sql.y: 1331
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET [REGIONAL AFFINITY [TO | AT] ... | LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1371
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1387
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1388
		Category: hDDL,
		//line sql.y: 1389
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1408
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1413
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1414
		Category: hDDL,
		//line sql.y: 1415
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1418
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1426
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1427
		Category: hDDL,
		//line sql.y: 1428
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1453
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1454
		Category: hDDL,
		//line sql.y: 1455
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1462
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1512
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1513
		Category: hDDL,
		//line sql.y: 1514
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1526
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1531
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1532
		Category: hDDL,
		//line sql.y: 1533
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1549
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2070
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2071
		Category: hDDL,
		//line sql.y: 2072
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2088
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2230
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2231
		Category: hMisc,
		//line sql.y: 2232
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2259
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2260
		Category: hCCL,
		//line sql.y: 2261
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2281
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2385
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2386
		Category: hCCL,
		//line sql.y: 2387
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2456
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2534
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2535
		Category: hCCL,
		//line sql.y: 2536
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2557
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2678
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2679
		Category: hCCL,
		//line sql.y: 2680
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2708
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2752
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2753
		Category: hCCL,
		//line sql.y: 2754
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2763
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2899
	`CANCEL`: {
		//line sql.y: 2900
		Category: hGroup,
		//line sql.y: 2901
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2908
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2909
		Category: hMisc,
		//line sql.y: 2910
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2913
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2935
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2936
		Category: hMisc,
		//line sql.y: 2937
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2940
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2971
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2972
		Category: hMisc,
		//line sql.y: 2973
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2976
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3046
	`CREATE`: {
		//line sql.y: 3047
		Category: hGroup,
		//line sql.y: 3048
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3061
	`CREATE EXTENSION`: {
		//line sql.y: 3062
		Category: hCfg,
		//line sql.y: 3063
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3141
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3142
		Category: hMisc,
		//line sql.y: 3143
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3286
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3287
		Category: hDML,
		//line sql.y: 3288
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3292
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3312
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3313
		Category: hCfg,
		//line sql.y: 3314
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3326
	`DROP`: {
		//line sql.y: 3327
		Category: hGroup,
		//line sql.y: 3328
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3347
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3348
		Category: hDDL,
		//line sql.y: 3349
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3350
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3380
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3381
		Category: hDDL,
		//line sql.y: 3382
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3383
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3395
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3396
		Category: hDDL,
		//line sql.y: 3397
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3398
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3410
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3411
		Category: hDDL,
		//line sql.y: 3412
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3413
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3435
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3436
		Category: hDDL,
		//line sql.y: 3437
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3438
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3458
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3459
		Category: hDDL,
		//line sql.y: 3460
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3496
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3497
		Category: hDDL,
		//line sql.y: 3498
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3518
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3519
		Category: hPriv,
		//line sql.y: 3520
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3521
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3545
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3546
		Category: hMisc,
		//line sql.y: 3547
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3550
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3573
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3574
		Category: hMisc,
		//line sql.y: 3575
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3588
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3695
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3696
		Category: hMisc,
		//line sql.y: 3697
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3698
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3729
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3730
		Category: hMisc,
		//line sql.y: 3731
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3732
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3762
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3763
		Category: hMisc,
		//line sql.y: 3764
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3765
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3785
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3786
		Category: hPriv,
		//line sql.y: 3787
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 3802
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3832
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3833
		Category: hPriv,
		//line sql.y: 3834
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 3849
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3917
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3918
		Category: hCfg,
		//line sql.y: 3919
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3920
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3932
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3933
		Category: hCfg,
		//line sql.y: 3934
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3935
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3944
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3945
		Category: hCfg,
		//line sql.y: 3946
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3949
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3970
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3971
		Category: hExperimental,
		//line sql.y: 3972
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3980
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3986
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3987
		Category: hExperimental,
		//line sql.y: 3988
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3996
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4004
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4005
		Category: hExperimental,
		//line sql.y: 4006
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4017
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4072
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4073
		Category: hCfg,
		//line sql.y: 4074
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4075
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4096
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4097
		Category: hCfg,
		//line sql.y: 4098
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 4104
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4121
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4122
		Category: hTxn,
		//line sql.y: 4123
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4132
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4324
	`SHOW`: {
		//line sql.y: 4325
		Category: hGroup,
		//line sql.y: 4326
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES, SHOW REGIONS,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY
`,
	},
	//line sql.y: 4408
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4409
		Category: hCfg,
		//line sql.y: 4410
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4411
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4432
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4433
		Category: hExperimental,
		//line sql.y: 4434
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4441
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4454
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4455
		Category: hExperimental,
		//line sql.y: 4456
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4460
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4473
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4474
		Category: hCCL,
		//line sql.y: 4475
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4476
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4530
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4531
		Category: hCfg,
		//line sql.y: 4532
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4535
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4561
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4562
		Category: hDDL,
		//line sql.y: 4563
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4564
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4572
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4573
		Category: hDDL,
		//line sql.y: 4574
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4575
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4595
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4596
		Category: hDDL,
		//line sql.y: 4597
		Text: `SHOW DATABASES
`,
		//line sql.y: 4598
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4606
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4607
		Category: hMisc,
		//line sql.y: 4608
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4616
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4617
		Category: hMisc,
		//line sql.y: 4618
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4626
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4627
		Category: hPriv,
		//line sql.y: 4628
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4634
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4647
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4648
		Category: hDDL,
		//line sql.y: 4649
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4650
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4680
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4681
		Category: hDDL,
		//line sql.y: 4682
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4683
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4696
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4697
		Category: hMisc,
		//line sql.y: 4698
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4699
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4720
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4721
		Category: hMisc,
		//line sql.y: 4722
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4726
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4770
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4771
		Category: hMisc,
		//line sql.y: 4772
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4775
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4822
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4823
		Category: hMisc,
		//line sql.y: 4824
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4826
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4849
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4850
		Category: hMisc,
		//line sql.y: 4851
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4852
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4865
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4866
		Category: hDDL,
		//line sql.y: 4867
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4868
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4896
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4897
		Category: hMisc,
		//line sql.y: 4898
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4915
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4916
		Category: hDDL,
		//line sql.y: 4917
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4929
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4930
		Category: hDDL,
		//line sql.y: 4931
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4943
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4944
		Category: hMisc,
		//line sql.y: 4945
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4954
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4955
		Category: hMisc,
		//line sql.y: 4956
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4964
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4965
		Category: hCfg,
		//line sql.y: 4966
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4974
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4975
		Category: hCfg,
		//line sql.y: 4976
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4977
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4996
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4997
		Category: hDDL,
		//line sql.y: 4998
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4999
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5017
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5018
		Category: hPriv,
		//line sql.y: 5019
		Text: `SHOW USERS
`,
		//line sql.y: 5020
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5028
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5029
		Category: hPriv,
		//line sql.y: 5030
		Text: `SHOW ROLES
`,
		//line sql.y: 5031
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5087
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5088
		Category: hMisc,
		//line sql.y: 5089
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 5110
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5111
		Category: hMisc,
		//line sql.y: 5112
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5131
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5132
		Category: hDDL,
		//line sql.y: 5133
		Text: `
SHOW REGIONS
SHOW REGIONS FOR DATABASE <database>
`,
	},
	//line sql.y: 5389
	`PAUSE`: {
		//line sql.y: 5390
		Category: hMisc,
		//line sql.y: 5391
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5401
	`RESUME`: {
		//line sql.y: 5402
		Category: hMisc,
		//line sql.y: 5403
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5413
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5414
		Category: hMisc,
		//line sql.y: 5415
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5418
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5453
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5454
		Category: hMisc,
		//line sql.y: 5455
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5459
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5480
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5481
		Category: hDDL,
		//line sql.y: 5482
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5515
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5516
		Category: hDDL,
		//line sql.y: 5517
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5543
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5544
		Category: hDDL,
		//line sql.y: 5545
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE [WITHOUT INDEX] ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5575
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6421
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6422
		Category: hDDL,
		//line sql.y: 6423
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6433
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6498
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6499
		Category: hDML,
		//line sql.y: 6500
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6501
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6519
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6520
		Category: hPriv,
		//line sql.y: 6521
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6522
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6534
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6535
		Category: hPriv,
		//line sql.y: 6536
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6537
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6566
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6567
		Category: hDDL,
		//line sql.y: 6568
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6569
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6744
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6745
		Category: hDDL,
		//line sql.y: 6746
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6789
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6790
		Category: hDDL,
		//line sql.y: 6791
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6801
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7253
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7254
		Category: hTxn,
		//line sql.y: 7255
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7256
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7264
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7265
		Category: hMisc,
		//line sql.y: 7266
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7269
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7291
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7292
		Category: hMisc,
		//line sql.y: 7293
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7299
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7320
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7321
		Category: hMisc,
		//line sql.y: 7322
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleid>

`,
		//line sql.y: 7328
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7349
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7350
		Category: hTxn,
		//line sql.y: 7351
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7352
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7367
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7368
		Category: hTxn,
		//line sql.y: 7369
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7377
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7390
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7391
		Category: hTxn,
		//line sql.y: 7392
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7395
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7419
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7420
		Category: hTxn,
		//line sql.y: 7421
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7424
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7538
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7539
		Category: hDDL,
		//line sql.y: 7540
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7541
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7661
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7662
		Category: hDML,
		//line sql.y: 7663
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7671
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7690
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7691
		Category: hDML,
		//line sql.y: 7692
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7696
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7812
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7813
		Category: hDML,
		//line sql.y: 7814
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7821
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7877
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 7878
		Category: hPriv,
		//line sql.y: 7879
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 7881
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 7892
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 7893
		Category: hPriv,
		//line sql.y: 7894
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 7896
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8076
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8077
		Category: hDML,
		//line sql.y: 8078
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8089
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8090
		Category: hDML,
		//line sql.y: 8091
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8103
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8178
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8179
		Category: hDML,
		//line sql.y: 8180
		Text: `TABLE <tablename>
`,
		//line sql.y: 8181
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8555
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8556
		Category: hDML,
		//line sql.y: 8557
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8558
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8667
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8668
		Category: hDML,
		//line sql.y: 8669
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8691
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
