// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1246
	`ALTER`: {
		//line sql.y: 1247
		Category: hGroup,
		//line sql.y: 1248
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1265
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1266
		Category: hDDL,
		//line sql.y: 1267
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1306
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1321
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1322
		Category: hDDL,
		//line sql.y: 1323
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1342
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1347
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1348
		Category: hDDL,
		//line sql.y: 1349
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1352
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1360
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1361
		Category: hDDL,
		//line sql.y: 1362
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1387
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1388
		Category: hDDL,
		//line sql.y: 1389
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1392
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1408
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1409
		Category: hDDL,
		//line sql.y: 1410
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1422
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1427
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1428
		Category: hDDL,
		//line sql.y: 1429
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1445
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1954
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1955
		Category: hDDL,
		//line sql.y: 1956
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1972
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2079
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2080
		Category: hMisc,
		//line sql.y: 2081
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2108
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2109
		Category: hCCL,
		//line sql.y: 2110
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2130
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2234
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2235
		Category: hCCL,
		//line sql.y: 2236
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2311
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2389
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2390
		Category: hCCL,
		//line sql.y: 2391
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2412
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2533
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2534
		Category: hCCL,
		//line sql.y: 2535
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2563
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2607
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2608
		Category: hCCL,
		//line sql.y: 2609
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2618
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2750
	`CANCEL`: {
		//line sql.y: 2751
		Category: hGroup,
		//line sql.y: 2752
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2759
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2760
		Category: hMisc,
		//line sql.y: 2761
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2764
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2786
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2787
		Category: hMisc,
		//line sql.y: 2788
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2791
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2822
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2823
		Category: hMisc,
		//line sql.y: 2824
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2827
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2897
	`CREATE`: {
		//line sql.y: 2898
		Category: hGroup,
		//line sql.y: 2899
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2977
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2978
		Category: hMisc,
		//line sql.y: 2979
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3122
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3123
		Category: hDML,
		//line sql.y: 3124
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3128
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3148
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3149
		Category: hCfg,
		//line sql.y: 3150
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3162
	`DROP`: {
		//line sql.y: 3163
		Category: hGroup,
		//line sql.y: 3164
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3183
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3184
		Category: hDDL,
		//line sql.y: 3185
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3186
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3216
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3217
		Category: hDDL,
		//line sql.y: 3218
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3219
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3231
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3232
		Category: hDDL,
		//line sql.y: 3233
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3234
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3246
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3247
		Category: hDDL,
		//line sql.y: 3248
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3249
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3271
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3272
		Category: hDDL,
		//line sql.y: 3273
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3274
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3294
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3295
		Category: hDDL,
		//line sql.y: 3296
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3332
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3333
		Category: hDDL,
		//line sql.y: 3334
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3364
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3365
		Category: hPriv,
		//line sql.y: 3366
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3367
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3391
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3392
		Category: hMisc,
		//line sql.y: 3393
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3396
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3419
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3420
		Category: hMisc,
		//line sql.y: 3421
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3434
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3541
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3542
		Category: hMisc,
		//line sql.y: 3543
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3544
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3575
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3576
		Category: hMisc,
		//line sql.y: 3577
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3578
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3608
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3609
		Category: hMisc,
		//line sql.y: 3610
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3611
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3631
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3632
		Category: hPriv,
		//line sql.y: 3633
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3646
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3666
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3667
		Category: hPriv,
		//line sql.y: 3668
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3681
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3739
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3740
		Category: hCfg,
		//line sql.y: 3741
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3742
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3754
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3755
		Category: hCfg,
		//line sql.y: 3756
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3757
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3766
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3767
		Category: hCfg,
		//line sql.y: 3768
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3771
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3792
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3793
		Category: hExperimental,
		//line sql.y: 3794
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3802
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3808
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3809
		Category: hExperimental,
		//line sql.y: 3810
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3818
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3826
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3827
		Category: hExperimental,
		//line sql.y: 3828
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3839
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3894
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3895
		Category: hCfg,
		//line sql.y: 3896
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3897
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3918
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3919
		Category: hCfg,
		//line sql.y: 3920
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3926
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3943
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3944
		Category: hTxn,
		//line sql.y: 3945
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 3952
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4144
	`SHOW`: {
		//line sql.y: 4145
		Category: hGroup,
		//line sql.y: 4146
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE SHOW TRANSACTION, SHOW USERS,
SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4218
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4219
		Category: hCfg,
		//line sql.y: 4220
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4221
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4242
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4243
		Category: hExperimental,
		//line sql.y: 4244
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4251
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4264
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4265
		Category: hExperimental,
		//line sql.y: 4266
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4270
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4283
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4284
		Category: hCCL,
		//line sql.y: 4285
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4286
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4340
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4341
		Category: hCfg,
		//line sql.y: 4342
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4345
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4371
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4372
		Category: hDDL,
		//line sql.y: 4373
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4374
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4382
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4383
		Category: hDDL,
		//line sql.y: 4384
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4385
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4405
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4406
		Category: hDDL,
		//line sql.y: 4407
		Text: `SHOW DATABASES
`,
		//line sql.y: 4408
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4416
	`SHOW ENUMS`: {
		ShortDescription: `list defined enums`,
		//line sql.y: 4417
		Category: hMisc,
		//line sql.y: 4418
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4426
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4427
		Category: hPriv,
		//line sql.y: 4428
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4434
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4447
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4448
		Category: hDDL,
		//line sql.y: 4449
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4450
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4480
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4481
		Category: hDDL,
		//line sql.y: 4482
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4483
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4496
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4497
		Category: hMisc,
		//line sql.y: 4498
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4499
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4520
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4521
		Category: hMisc,
		//line sql.y: 4522
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4526
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4570
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4571
		Category: hMisc,
		//line sql.y: 4572
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4575
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4622
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4623
		Category: hMisc,
		//line sql.y: 4624
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4626
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4649
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4650
		Category: hMisc,
		//line sql.y: 4651
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4652
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4665
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4666
		Category: hDDL,
		//line sql.y: 4667
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4668
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4700
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4701
		Category: hDDL,
		//line sql.y: 4702
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4714
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4715
		Category: hDDL,
		//line sql.y: 4716
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4728
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4729
		Category: hMisc,
		//line sql.y: 4730
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4739
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4740
		Category: hMisc,
		//line sql.y: 4741
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4749
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4750
		Category: hCfg,
		//line sql.y: 4751
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4759
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4760
		Category: hCfg,
		//line sql.y: 4761
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4762
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4781
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4782
		Category: hDDL,
		//line sql.y: 4783
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4784
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4802
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4803
		Category: hPriv,
		//line sql.y: 4804
		Text: `SHOW USERS
`,
		//line sql.y: 4805
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4813
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4814
		Category: hPriv,
		//line sql.y: 4815
		Text: `SHOW ROLES
`,
		//line sql.y: 4816
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4872
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4873
		Category: hMisc,
		//line sql.y: 4874
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4895
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4896
		Category: hMisc,
		//line sql.y: 4897
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5143
	`PAUSE`: {
		//line sql.y: 5144
		Category: hMisc,
		//line sql.y: 5145
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5155
	`RESUME`: {
		//line sql.y: 5156
		Category: hMisc,
		//line sql.y: 5157
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5167
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5168
		Category: hMisc,
		//line sql.y: 5169
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5172
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5207
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5208
		Category: hMisc,
		//line sql.y: 5209
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5213
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5234
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5235
		Category: hDDL,
		//line sql.y: 5236
		Text: `
CREATE SCHEMA [IF NOT EXISTS] <schemaname>
`,
	},
	//line sql.y: 5254
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5255
		Category: hDDL,
		//line sql.y: 5256
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5282
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5283
		Category: hDDL,
		//line sql.y: 5284
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5314
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6141
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6142
		Category: hDDL,
		//line sql.y: 6143
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6153
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6218
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6219
		Category: hDML,
		//line sql.y: 6220
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6221
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6239
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6240
		Category: hPriv,
		//line sql.y: 6241
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6242
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6254
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6255
		Category: hPriv,
		//line sql.y: 6256
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6257
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6286
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6287
		Category: hDDL,
		//line sql.y: 6288
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6289
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6456
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6457
		Category: hDDL,
		//line sql.y: 6458
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6501
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6502
		Category: hDDL,
		//line sql.y: 6503
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6513
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6843
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6844
		Category: hTxn,
		//line sql.y: 6845
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6846
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6854
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6855
		Category: hMisc,
		//line sql.y: 6856
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6859
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6881
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6882
		Category: hMisc,
		//line sql.y: 6883
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6889
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6910
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6911
		Category: hMisc,
		//line sql.y: 6912
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6918
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6939
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 6940
		Category: hTxn,
		//line sql.y: 6941
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 6942
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6957
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 6958
		Category: hTxn,
		//line sql.y: 6959
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 6967
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 6980
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 6981
		Category: hTxn,
		//line sql.y: 6982
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 6985
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7009
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7010
		Category: hTxn,
		//line sql.y: 7011
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7014
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7114
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7115
		Category: hDDL,
		//line sql.y: 7116
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7117
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7186
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7187
		Category: hDML,
		//line sql.y: 7188
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7196
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7215
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7216
		Category: hDML,
		//line sql.y: 7217
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7221
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7337
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7338
		Category: hDML,
		//line sql.y: 7339
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7346
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7571
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7572
		Category: hDML,
		//line sql.y: 7573
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7584
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7585
		Category: hDML,
		//line sql.y: 7586
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7598
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7673
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7674
		Category: hDML,
		//line sql.y: 7675
		Text: `TABLE <tablename>
`,
		//line sql.y: 7676
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8033
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8034
		Category: hDML,
		//line sql.y: 8035
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8036
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8145
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8146
		Category: hDML,
		//line sql.y: 8147
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8169
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
