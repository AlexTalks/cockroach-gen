// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1267
	`ALTER`: {
		//line sql.y: 1268
		Category: hGroup,
		//line sql.y: 1269
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1286
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1287
		Category: hDDL,
		//line sql.y: 1288
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1327
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1342
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1343
		Category: hDDL,
		//line sql.y: 1344
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1363
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1368
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1369
		Category: hDDL,
		//line sql.y: 1370
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1373
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1381
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1382
		Category: hDDL,
		//line sql.y: 1383
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1408
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1409
		Category: hDDL,
		//line sql.y: 1410
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1413
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1429
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1430
		Category: hDDL,
		//line sql.y: 1431
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1443
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1448
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1449
		Category: hDDL,
		//line sql.y: 1450
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1466
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1975
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1976
		Category: hDDL,
		//line sql.y: 1977
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1993
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2109
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2110
		Category: hMisc,
		//line sql.y: 2111
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2138
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2139
		Category: hCCL,
		//line sql.y: 2140
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2160
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2264
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2265
		Category: hCCL,
		//line sql.y: 2266
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2335
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2413
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2414
		Category: hCCL,
		//line sql.y: 2415
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2436
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2557
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2558
		Category: hCCL,
		//line sql.y: 2559
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2587
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2631
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2632
		Category: hCCL,
		//line sql.y: 2633
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2642
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2778
	`CANCEL`: {
		//line sql.y: 2779
		Category: hGroup,
		//line sql.y: 2780
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2787
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2788
		Category: hMisc,
		//line sql.y: 2789
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2792
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2814
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2815
		Category: hMisc,
		//line sql.y: 2816
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2819
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2850
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2851
		Category: hMisc,
		//line sql.y: 2852
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2855
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2925
	`CREATE`: {
		//line sql.y: 2926
		Category: hGroup,
		//line sql.y: 2927
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 2940
	`CREATE EXTENSION`: {
		//line sql.y: 2941
		Category: hCfg,
		//line sql.y: 2942
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3019
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3020
		Category: hMisc,
		//line sql.y: 3021
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3164
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3165
		Category: hDML,
		//line sql.y: 3166
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3170
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3190
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3191
		Category: hCfg,
		//line sql.y: 3192
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3204
	`DROP`: {
		//line sql.y: 3205
		Category: hGroup,
		//line sql.y: 3206
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3225
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3226
		Category: hDDL,
		//line sql.y: 3227
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3228
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3258
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3259
		Category: hDDL,
		//line sql.y: 3260
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3261
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3273
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3274
		Category: hDDL,
		//line sql.y: 3275
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3276
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3288
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3289
		Category: hDDL,
		//line sql.y: 3290
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3291
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3313
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3314
		Category: hDDL,
		//line sql.y: 3315
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3316
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3336
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3337
		Category: hDDL,
		//line sql.y: 3338
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3374
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3375
		Category: hDDL,
		//line sql.y: 3376
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3406
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3407
		Category: hPriv,
		//line sql.y: 3408
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3409
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3433
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3434
		Category: hMisc,
		//line sql.y: 3435
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3438
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3461
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3462
		Category: hMisc,
		//line sql.y: 3463
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3476
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3583
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3584
		Category: hMisc,
		//line sql.y: 3585
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3586
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3617
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3618
		Category: hMisc,
		//line sql.y: 3619
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3620
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3650
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3651
		Category: hMisc,
		//line sql.y: 3652
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3653
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3673
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3674
		Category: hPriv,
		//line sql.y: 3675
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3690
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3720
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3721
		Category: hPriv,
		//line sql.y: 3722
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3737
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3805
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3806
		Category: hCfg,
		//line sql.y: 3807
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3808
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3820
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3821
		Category: hCfg,
		//line sql.y: 3822
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3823
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3832
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3833
		Category: hCfg,
		//line sql.y: 3834
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3837
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3858
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3859
		Category: hExperimental,
		//line sql.y: 3860
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3868
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3874
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3875
		Category: hExperimental,
		//line sql.y: 3876
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3884
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3892
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3893
		Category: hExperimental,
		//line sql.y: 3894
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3905
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3960
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3961
		Category: hCfg,
		//line sql.y: 3962
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3963
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3984
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3985
		Category: hCfg,
		//line sql.y: 3986
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3992
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4009
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4010
		Category: hTxn,
		//line sql.y: 4011
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4020
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4212
	`SHOW`: {
		//line sql.y: 4213
		Category: hGroup,
		//line sql.y: 4214
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4293
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4294
		Category: hCfg,
		//line sql.y: 4295
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4296
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4317
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4318
		Category: hExperimental,
		//line sql.y: 4319
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4326
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4339
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4340
		Category: hExperimental,
		//line sql.y: 4341
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4345
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4358
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4359
		Category: hCCL,
		//line sql.y: 4360
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4361
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4415
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4416
		Category: hCfg,
		//line sql.y: 4417
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4420
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4446
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4447
		Category: hDDL,
		//line sql.y: 4448
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4449
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4457
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4458
		Category: hDDL,
		//line sql.y: 4459
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4460
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4480
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4481
		Category: hDDL,
		//line sql.y: 4482
		Text: `SHOW DATABASES
`,
		//line sql.y: 4483
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4491
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4492
		Category: hMisc,
		//line sql.y: 4493
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4501
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4502
		Category: hMisc,
		//line sql.y: 4503
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4511
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4512
		Category: hPriv,
		//line sql.y: 4513
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4519
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4532
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4533
		Category: hDDL,
		//line sql.y: 4534
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4535
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4565
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4566
		Category: hDDL,
		//line sql.y: 4567
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4568
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4581
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4582
		Category: hMisc,
		//line sql.y: 4583
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4584
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4605
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4606
		Category: hMisc,
		//line sql.y: 4607
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4611
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4655
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4656
		Category: hMisc,
		//line sql.y: 4657
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4660
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4707
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4708
		Category: hMisc,
		//line sql.y: 4709
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4711
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4734
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4735
		Category: hMisc,
		//line sql.y: 4736
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4737
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4750
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4751
		Category: hDDL,
		//line sql.y: 4752
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4753
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4781
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4782
		Category: hMisc,
		//line sql.y: 4783
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4800
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4801
		Category: hDDL,
		//line sql.y: 4802
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4814
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4815
		Category: hDDL,
		//line sql.y: 4816
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4828
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4829
		Category: hMisc,
		//line sql.y: 4830
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4839
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4840
		Category: hMisc,
		//line sql.y: 4841
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4849
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4850
		Category: hCfg,
		//line sql.y: 4851
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4859
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4860
		Category: hCfg,
		//line sql.y: 4861
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4862
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4881
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4882
		Category: hDDL,
		//line sql.y: 4883
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4884
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4902
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4903
		Category: hPriv,
		//line sql.y: 4904
		Text: `SHOW USERS
`,
		//line sql.y: 4905
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4913
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4914
		Category: hPriv,
		//line sql.y: 4915
		Text: `SHOW ROLES
`,
		//line sql.y: 4916
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4972
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4973
		Category: hMisc,
		//line sql.y: 4974
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4995
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4996
		Category: hMisc,
		//line sql.y: 4997
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5247
	`PAUSE`: {
		//line sql.y: 5248
		Category: hMisc,
		//line sql.y: 5249
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5259
	`RESUME`: {
		//line sql.y: 5260
		Category: hMisc,
		//line sql.y: 5261
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5271
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5272
		Category: hMisc,
		//line sql.y: 5273
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5276
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5311
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5312
		Category: hMisc,
		//line sql.y: 5313
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5317
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5338
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5339
		Category: hDDL,
		//line sql.y: 5340
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5373
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5374
		Category: hDDL,
		//line sql.y: 5375
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5401
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5402
		Category: hDDL,
		//line sql.y: 5403
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5433
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6260
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6261
		Category: hDDL,
		//line sql.y: 6262
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6272
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6337
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6338
		Category: hDML,
		//line sql.y: 6339
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6340
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6358
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6359
		Category: hPriv,
		//line sql.y: 6360
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6361
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6373
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6374
		Category: hPriv,
		//line sql.y: 6375
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6376
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6405
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6406
		Category: hDDL,
		//line sql.y: 6407
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6408
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6583
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6584
		Category: hDDL,
		//line sql.y: 6585
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6628
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6629
		Category: hDDL,
		//line sql.y: 6630
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6640
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6994
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6995
		Category: hTxn,
		//line sql.y: 6996
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6997
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7005
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7006
		Category: hMisc,
		//line sql.y: 7007
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7010
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7032
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7033
		Category: hMisc,
		//line sql.y: 7034
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7040
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7061
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7062
		Category: hMisc,
		//line sql.y: 7063
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <jobid>

`,
		//line sql.y: 7069
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7090
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7091
		Category: hTxn,
		//line sql.y: 7092
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7093
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7108
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7109
		Category: hTxn,
		//line sql.y: 7110
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7118
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7131
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7132
		Category: hTxn,
		//line sql.y: 7133
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7136
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7160
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7161
		Category: hTxn,
		//line sql.y: 7162
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7165
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7279
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7280
		Category: hDDL,
		//line sql.y: 7281
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7282
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7367
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7368
		Category: hDML,
		//line sql.y: 7369
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7377
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7396
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7397
		Category: hDML,
		//line sql.y: 7398
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7402
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7518
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7519
		Category: hDML,
		//line sql.y: 7520
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7527
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7583
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 7584
		Category: hPriv,
		//line sql.y: 7585
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
	},
	//line sql.y: 7766
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7767
		Category: hDML,
		//line sql.y: 7768
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7779
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7780
		Category: hDML,
		//line sql.y: 7781
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7793
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7868
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7869
		Category: hDML,
		//line sql.y: 7870
		Text: `TABLE <tablename>
`,
		//line sql.y: 7871
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8241
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8242
		Category: hDML,
		//line sql.y: 8243
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8244
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8353
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8354
		Category: hDML,
		//line sql.y: 8355
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8377
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
