// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1238
	`ALTER`: {
		//line sql.y: 1239
		Category: hGroup,
		//line sql.y: 1240
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1257
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1258
		Category: hDDL,
		//line sql.y: 1259
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1298
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1313
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1314
		Category: hDDL,
		//line sql.y: 1315
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1334
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1339
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1340
		Category: hDDL,
		//line sql.y: 1341
		Text: `
ALTER VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1344
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1352
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1353
		Category: hDDL,
		//line sql.y: 1354
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1379
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1380
		Category: hDDL,
		//line sql.y: 1381
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
`,
		//line sql.y: 1383
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1391
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1392
		Category: hDDL,
		//line sql.y: 1393
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1405
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1410
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1411
		Category: hDDL,
		//line sql.y: 1412
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1428
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1937
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1938
		Category: hDDL,
		//line sql.y: 1939
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1955
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2057
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2058
		Category: hMisc,
		//line sql.y: 2059
		Text: `
REFRESH MATERIALIZED VIEW view_name
`,
	},
	//line sql.y: 2068
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2069
		Category: hCCL,
		//line sql.y: 2070
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2090
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2182
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2183
		Category: hCCL,
		//line sql.y: 2184
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.

`,
		//line sql.y: 2255
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2340
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2341
		Category: hCCL,
		//line sql.y: 2342
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2363
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2484
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2485
		Category: hCCL,
		//line sql.y: 2486
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2514
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2558
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2559
		Category: hCCL,
		//line sql.y: 2560
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2569
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2701
	`CANCEL`: {
		//line sql.y: 2702
		Category: hGroup,
		//line sql.y: 2703
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2710
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2711
		Category: hMisc,
		//line sql.y: 2712
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2715
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2737
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2738
		Category: hMisc,
		//line sql.y: 2739
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2742
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2773
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2774
		Category: hMisc,
		//line sql.y: 2775
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2778
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2848
	`CREATE`: {
		//line sql.y: 2849
		Category: hGroup,
		//line sql.y: 2850
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2928
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2929
		Category: hMisc,
		//line sql.y: 2930
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3073
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3074
		Category: hDML,
		//line sql.y: 3075
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3079
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3099
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3100
		Category: hCfg,
		//line sql.y: 3101
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3113
	`DROP`: {
		//line sql.y: 3114
		Category: hGroup,
		//line sql.y: 3115
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3134
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3135
		Category: hDDL,
		//line sql.y: 3136
		Text: `DROP VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3137
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3149
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3150
		Category: hDDL,
		//line sql.y: 3151
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3152
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3164
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3165
		Category: hDDL,
		//line sql.y: 3166
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3167
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3179
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3180
		Category: hDDL,
		//line sql.y: 3181
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3182
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3204
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3205
		Category: hDDL,
		//line sql.y: 3206
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3207
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3227
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3228
		Category: hDDL,
		//line sql.y: 3229
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3259
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3260
		Category: hDDL,
		//line sql.y: 3261
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3291
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3292
		Category: hPriv,
		//line sql.y: 3293
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3294
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3318
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3319
		Category: hMisc,
		//line sql.y: 3320
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3323
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3346
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3347
		Category: hMisc,
		//line sql.y: 3348
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3361
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3468
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3469
		Category: hMisc,
		//line sql.y: 3470
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3471
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3502
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3503
		Category: hMisc,
		//line sql.y: 3504
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3505
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3535
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3536
		Category: hMisc,
		//line sql.y: 3537
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3538
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3558
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3559
		Category: hPriv,
		//line sql.y: 3560
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3573
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3589
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3590
		Category: hPriv,
		//line sql.y: 3591
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3604
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3658
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3659
		Category: hCfg,
		//line sql.y: 3660
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3661
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3673
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3674
		Category: hCfg,
		//line sql.y: 3675
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3676
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3685
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3686
		Category: hCfg,
		//line sql.y: 3687
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3690
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3711
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3712
		Category: hExperimental,
		//line sql.y: 3713
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3721
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3727
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3728
		Category: hExperimental,
		//line sql.y: 3729
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3737
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3745
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3746
		Category: hExperimental,
		//line sql.y: 3747
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3758
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3813
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3814
		Category: hCfg,
		//line sql.y: 3815
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3816
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3837
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3838
		Category: hCfg,
		//line sql.y: 3839
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3845
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3862
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3863
		Category: hTxn,
		//line sql.y: 3864
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 3871
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4063
	`SHOW`: {
		//line sql.y: 4064
		Category: hGroup,
		//line sql.y: 4065
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE SHOW TRANSACTION, SHOW USERS,
SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4137
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4138
		Category: hCfg,
		//line sql.y: 4139
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4140
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4161
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4162
		Category: hExperimental,
		//line sql.y: 4163
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4170
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4183
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4184
		Category: hExperimental,
		//line sql.y: 4185
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4189
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4202
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4203
		Category: hCCL,
		//line sql.y: 4204
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4205
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4244
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4245
		Category: hCfg,
		//line sql.y: 4246
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4249
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4275
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4276
		Category: hDDL,
		//line sql.y: 4277
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4278
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4286
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4287
		Category: hDDL,
		//line sql.y: 4288
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4289
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4309
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4310
		Category: hDDL,
		//line sql.y: 4311
		Text: `SHOW DATABASES
`,
		//line sql.y: 4312
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4320
	`SHOW ENUMS`: {
		ShortDescription: `list defined enums`,
		//line sql.y: 4321
		Category: hMisc,
		//line sql.y: 4322
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4330
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4331
		Category: hPriv,
		//line sql.y: 4332
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4338
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4351
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4352
		Category: hDDL,
		//line sql.y: 4353
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4354
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4384
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4385
		Category: hDDL,
		//line sql.y: 4386
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4387
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4400
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4401
		Category: hMisc,
		//line sql.y: 4402
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4403
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4424
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4425
		Category: hMisc,
		//line sql.y: 4426
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4430
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4474
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4475
		Category: hMisc,
		//line sql.y: 4476
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4479
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4526
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4527
		Category: hMisc,
		//line sql.y: 4528
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4530
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4553
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4554
		Category: hMisc,
		//line sql.y: 4555
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4556
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4569
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4570
		Category: hDDL,
		//line sql.y: 4571
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4572
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4604
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4605
		Category: hDDL,
		//line sql.y: 4606
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4618
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4619
		Category: hDDL,
		//line sql.y: 4620
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4632
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4633
		Category: hMisc,
		//line sql.y: 4634
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4643
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4644
		Category: hMisc,
		//line sql.y: 4645
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4653
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4654
		Category: hCfg,
		//line sql.y: 4655
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4663
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4664
		Category: hCfg,
		//line sql.y: 4665
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4666
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4685
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4686
		Category: hDDL,
		//line sql.y: 4687
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4688
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4706
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4707
		Category: hPriv,
		//line sql.y: 4708
		Text: `SHOW USERS
`,
		//line sql.y: 4709
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4717
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4718
		Category: hPriv,
		//line sql.y: 4719
		Text: `SHOW ROLES
`,
		//line sql.y: 4720
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4776
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4777
		Category: hMisc,
		//line sql.y: 4778
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4799
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4800
		Category: hMisc,
		//line sql.y: 4801
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5047
	`PAUSE`: {
		//line sql.y: 5048
		Category: hMisc,
		//line sql.y: 5049
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5059
	`RESUME`: {
		//line sql.y: 5060
		Category: hMisc,
		//line sql.y: 5061
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5071
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5072
		Category: hMisc,
		//line sql.y: 5073
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5076
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5111
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5112
		Category: hMisc,
		//line sql.y: 5113
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5117
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5138
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5139
		Category: hDDL,
		//line sql.y: 5140
		Text: `
CREATE SCHEMA [IF NOT EXISTS] <schemaname>
`,
	},
	//line sql.y: 5158
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5159
		Category: hDDL,
		//line sql.y: 5160
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5181
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5182
		Category: hDDL,
		//line sql.y: 5183
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5213
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6040
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6041
		Category: hDDL,
		//line sql.y: 6042
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6052
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6117
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6118
		Category: hDML,
		//line sql.y: 6119
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6120
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6138
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6139
		Category: hPriv,
		//line sql.y: 6140
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6141
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6153
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6154
		Category: hPriv,
		//line sql.y: 6155
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6156
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6185
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6186
		Category: hDDL,
		//line sql.y: 6187
		Text: `CREATE [TEMPORARY | TEMP] VIEW <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6188
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6295
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6296
		Category: hDDL,
		//line sql.y: 6297
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6340
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6341
		Category: hDDL,
		//line sql.y: 6342
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6352
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6632
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6633
		Category: hTxn,
		//line sql.y: 6634
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6635
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6643
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6644
		Category: hMisc,
		//line sql.y: 6645
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6648
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6670
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6671
		Category: hMisc,
		//line sql.y: 6672
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6678
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6699
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6700
		Category: hMisc,
		//line sql.y: 6701
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6707
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6728
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 6729
		Category: hTxn,
		//line sql.y: 6730
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 6731
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6746
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 6747
		Category: hTxn,
		//line sql.y: 6748
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 6756
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 6769
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 6770
		Category: hTxn,
		//line sql.y: 6771
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 6774
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 6798
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 6799
		Category: hTxn,
		//line sql.y: 6800
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6803
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 6903
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 6904
		Category: hDDL,
		//line sql.y: 6905
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 6906
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 6975
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 6976
		Category: hDML,
		//line sql.y: 6977
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT [( <colnames...> )] {DO UPDATE SET ... [WHERE <expr>] | DO NOTHING}]
       [RETURNING <exprs...>]
`,
		//line sql.y: 6982
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7001
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7002
		Category: hDML,
		//line sql.y: 7003
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7007
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7118
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7119
		Category: hDML,
		//line sql.y: 7120
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7127
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7352
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7353
		Category: hDML,
		//line sql.y: 7354
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7365
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7366
		Category: hDML,
		//line sql.y: 7367
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7379
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7454
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7455
		Category: hDML,
		//line sql.y: 7456
		Text: `TABLE <tablename>
`,
		//line sql.y: 7457
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7814
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 7815
		Category: hDML,
		//line sql.y: 7816
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 7817
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7926
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 7927
		Category: hDML,
		//line sql.y: 7928
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 7950
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
