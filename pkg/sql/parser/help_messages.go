// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1230
	`ALTER`: {
		//line sql.y: 1231
		Category: hGroup,
		//line sql.y: 1232
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1249
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1250
		Category: hDDL,
		//line sql.y: 1251
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1290
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1305
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1306
		Category: hDDL,
		//line sql.y: 1307
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1326
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1331
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1332
		Category: hDDL,
		//line sql.y: 1333
		Text: `
ALTER VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1336
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1344
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1345
		Category: hDDL,
		//line sql.y: 1346
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1371
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1372
		Category: hDDL,
		//line sql.y: 1373
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
`,
		//line sql.y: 1375
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1383
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1384
		Category: hDDL,
		//line sql.y: 1385
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1397
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1402
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1403
		Category: hDDL,
		//line sql.y: 1404
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1420
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1922
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1923
		Category: hDDL,
		//line sql.y: 1924
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1940
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2042
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2043
		Category: hCCL,
		//line sql.y: 2044
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2064
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2156
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2157
		Category: hCCL,
		//line sql.y: 2158
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.

`,
		//line sql.y: 2229
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2314
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2315
		Category: hCCL,
		//line sql.y: 2316
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   INTO_DB
   SKIP_MISSING_FOREIGN_KEYS

`,
		//line sql.y: 2332
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2383
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2384
		Category: hCCL,
		//line sql.y: 2385
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2413
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2457
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2458
		Category: hCCL,
		//line sql.y: 2459
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2468
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2600
	`CANCEL`: {
		//line sql.y: 2601
		Category: hGroup,
		//line sql.y: 2602
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2609
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2610
		Category: hMisc,
		//line sql.y: 2611
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2614
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2636
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2637
		Category: hMisc,
		//line sql.y: 2638
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2641
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2672
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2673
		Category: hMisc,
		//line sql.y: 2674
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2677
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2747
	`CREATE`: {
		//line sql.y: 2748
		Category: hGroup,
		//line sql.y: 2749
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2828
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2829
		Category: hMisc,
		//line sql.y: 2830
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 2973
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 2974
		Category: hDML,
		//line sql.y: 2975
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 2979
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 2999
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3000
		Category: hCfg,
		//line sql.y: 3001
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3013
	`DROP`: {
		//line sql.y: 3014
		Category: hGroup,
		//line sql.y: 3015
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3034
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3035
		Category: hDDL,
		//line sql.y: 3036
		Text: `DROP VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3037
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3049
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3050
		Category: hDDL,
		//line sql.y: 3051
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3052
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3064
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3065
		Category: hDDL,
		//line sql.y: 3066
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3067
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3079
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3080
		Category: hDDL,
		//line sql.y: 3081
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3082
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3104
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3105
		Category: hDDL,
		//line sql.y: 3106
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3107
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3127
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3128
		Category: hDDL,
		//line sql.y: 3129
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3159
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3160
		Category: hDDL,
		//line sql.y: 3161
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3191
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3192
		Category: hPriv,
		//line sql.y: 3193
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3194
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3218
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3219
		Category: hMisc,
		//line sql.y: 3220
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3223
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3246
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3247
		Category: hMisc,
		//line sql.y: 3248
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3261
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3368
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3369
		Category: hMisc,
		//line sql.y: 3370
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3371
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3402
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3403
		Category: hMisc,
		//line sql.y: 3404
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3405
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3435
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3436
		Category: hMisc,
		//line sql.y: 3437
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3438
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3458
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3459
		Category: hPriv,
		//line sql.y: 3460
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3473
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3489
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3490
		Category: hPriv,
		//line sql.y: 3491
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3504
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3558
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3559
		Category: hCfg,
		//line sql.y: 3560
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3561
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3573
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3574
		Category: hCfg,
		//line sql.y: 3575
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3576
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3585
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3586
		Category: hCfg,
		//line sql.y: 3587
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3590
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3611
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3612
		Category: hExperimental,
		//line sql.y: 3613
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3621
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3627
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3628
		Category: hExperimental,
		//line sql.y: 3629
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3637
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3645
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3646
		Category: hExperimental,
		//line sql.y: 3647
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3658
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3713
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3714
		Category: hCfg,
		//line sql.y: 3715
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3716
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3737
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3738
		Category: hCfg,
		//line sql.y: 3739
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3745
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3762
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3763
		Category: hTxn,
		//line sql.y: 3764
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 3771
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 3963
	`SHOW`: {
		//line sql.y: 3964
		Category: hGroup,
		//line sql.y: 3965
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE SHOW TRANSACTION, SHOW USERS,
SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4037
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4038
		Category: hCfg,
		//line sql.y: 4039
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4040
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4061
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4062
		Category: hExperimental,
		//line sql.y: 4063
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4070
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4083
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4084
		Category: hExperimental,
		//line sql.y: 4085
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4089
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4102
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4103
		Category: hCCL,
		//line sql.y: 4104
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4105
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4144
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4145
		Category: hCfg,
		//line sql.y: 4146
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4149
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4175
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4176
		Category: hDDL,
		//line sql.y: 4177
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4178
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4186
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4187
		Category: hDDL,
		//line sql.y: 4188
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4189
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4209
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4210
		Category: hDDL,
		//line sql.y: 4211
		Text: `SHOW DATABASES
`,
		//line sql.y: 4212
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4220
	`SHOW ENUMS`: {
		ShortDescription: `list defined enums`,
		//line sql.y: 4221
		Category: hMisc,
		//line sql.y: 4222
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4230
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4231
		Category: hPriv,
		//line sql.y: 4232
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4238
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4251
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4252
		Category: hDDL,
		//line sql.y: 4253
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4254
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4284
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4285
		Category: hDDL,
		//line sql.y: 4286
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4287
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4300
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4301
		Category: hMisc,
		//line sql.y: 4302
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4303
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4324
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4325
		Category: hMisc,
		//line sql.y: 4326
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4330
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4374
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4375
		Category: hMisc,
		//line sql.y: 4376
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4379
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4426
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4427
		Category: hMisc,
		//line sql.y: 4428
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4430
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4453
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4454
		Category: hMisc,
		//line sql.y: 4455
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4456
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4469
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4470
		Category: hDDL,
		//line sql.y: 4471
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4472
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4504
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4505
		Category: hDDL,
		//line sql.y: 4506
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4518
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4519
		Category: hDDL,
		//line sql.y: 4520
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4532
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4533
		Category: hMisc,
		//line sql.y: 4534
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4543
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4544
		Category: hMisc,
		//line sql.y: 4545
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4553
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4554
		Category: hCfg,
		//line sql.y: 4555
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4563
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4564
		Category: hCfg,
		//line sql.y: 4565
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4566
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4585
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4586
		Category: hDDL,
		//line sql.y: 4587
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4588
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4606
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4607
		Category: hPriv,
		//line sql.y: 4608
		Text: `SHOW USERS
`,
		//line sql.y: 4609
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4617
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4618
		Category: hPriv,
		//line sql.y: 4619
		Text: `SHOW ROLES
`,
		//line sql.y: 4620
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4676
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4677
		Category: hMisc,
		//line sql.y: 4678
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4699
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4700
		Category: hMisc,
		//line sql.y: 4701
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 4947
	`PAUSE`: {
		//line sql.y: 4948
		Category: hMisc,
		//line sql.y: 4949
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 4959
	`RESUME`: {
		//line sql.y: 4960
		Category: hMisc,
		//line sql.y: 4961
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 4971
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 4972
		Category: hMisc,
		//line sql.y: 4973
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 4976
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5011
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5012
		Category: hMisc,
		//line sql.y: 5013
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5017
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5038
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5039
		Category: hDDL,
		//line sql.y: 5040
		Text: `
CREATE SCHEMA [IF NOT EXISTS] <schemaname>
`,
	},
	//line sql.y: 5058
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5059
		Category: hDDL,
		//line sql.y: 5060
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5081
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5082
		Category: hDDL,
		//line sql.y: 5083
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5113
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 5934
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 5935
		Category: hDDL,
		//line sql.y: 5936
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 5946
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6011
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6012
		Category: hDML,
		//line sql.y: 6013
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6014
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6032
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6033
		Category: hPriv,
		//line sql.y: 6034
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6035
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6047
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6048
		Category: hPriv,
		//line sql.y: 6049
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6050
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6079
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6080
		Category: hDDL,
		//line sql.y: 6081
		Text: `CREATE [TEMPORARY | TEMP] VIEW <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6082
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6179
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6180
		Category: hDDL,
		//line sql.y: 6181
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6224
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6225
		Category: hDDL,
		//line sql.y: 6226
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6234
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6510
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6511
		Category: hTxn,
		//line sql.y: 6512
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6513
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6521
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6522
		Category: hMisc,
		//line sql.y: 6523
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6526
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6548
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6549
		Category: hMisc,
		//line sql.y: 6550
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6556
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6577
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6578
		Category: hMisc,
		//line sql.y: 6579
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6585
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6606
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 6607
		Category: hTxn,
		//line sql.y: 6608
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 6609
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6624
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 6625
		Category: hTxn,
		//line sql.y: 6626
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 6634
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 6647
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 6648
		Category: hTxn,
		//line sql.y: 6649
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 6652
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 6676
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 6677
		Category: hTxn,
		//line sql.y: 6678
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6681
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 6781
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 6782
		Category: hDDL,
		//line sql.y: 6783
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 6784
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 6853
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 6854
		Category: hDML,
		//line sql.y: 6855
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT [( <colnames...> )] {DO UPDATE SET ... [WHERE <expr>] | DO NOTHING}]
       [RETURNING <exprs...>]
`,
		//line sql.y: 6860
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 6879
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 6880
		Category: hDML,
		//line sql.y: 6881
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 6885
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 6996
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 6997
		Category: hDML,
		//line sql.y: 6998
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7005
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7230
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7231
		Category: hDML,
		//line sql.y: 7232
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7243
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7244
		Category: hDML,
		//line sql.y: 7245
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7257
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7332
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7333
		Category: hDML,
		//line sql.y: 7334
		Text: `TABLE <tablename>
`,
		//line sql.y: 7335
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7692
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 7693
		Category: hDML,
		//line sql.y: 7694
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 7695
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7804
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 7805
		Category: hDML,
		//line sql.y: 7806
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 7828
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
