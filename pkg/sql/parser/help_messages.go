// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1302
	`ALTER`: {
		//line sql.y: 1303
		Category: hGroup,
		//line sql.y: 1304
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1321
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1322
		Category: hDDL,
		//line sql.y: 1323
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET [REGIONAL AFFINITY [TO | AT] ... | LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1363
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1379
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1380
		Category: hDDL,
		//line sql.y: 1381
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1400
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1405
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1406
		Category: hDDL,
		//line sql.y: 1407
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1410
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1418
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1419
		Category: hDDL,
		//line sql.y: 1420
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1445
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1446
		Category: hDDL,
		//line sql.y: 1447
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1454
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1504
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1505
		Category: hDDL,
		//line sql.y: 1506
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1518
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1523
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1524
		Category: hDDL,
		//line sql.y: 1525
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1541
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2062
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2063
		Category: hDDL,
		//line sql.y: 2064
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2080
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2222
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2223
		Category: hMisc,
		//line sql.y: 2224
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2251
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2252
		Category: hCCL,
		//line sql.y: 2253
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2273
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2377
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2378
		Category: hCCL,
		//line sql.y: 2379
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2448
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2526
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2527
		Category: hCCL,
		//line sql.y: 2528
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2549
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2670
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2671
		Category: hCCL,
		//line sql.y: 2672
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2700
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2744
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2745
		Category: hCCL,
		//line sql.y: 2746
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2755
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2891
	`CANCEL`: {
		//line sql.y: 2892
		Category: hGroup,
		//line sql.y: 2893
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2900
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2901
		Category: hMisc,
		//line sql.y: 2902
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2905
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2927
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2928
		Category: hMisc,
		//line sql.y: 2929
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2932
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2963
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2964
		Category: hMisc,
		//line sql.y: 2965
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2968
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3038
	`CREATE`: {
		//line sql.y: 3039
		Category: hGroup,
		//line sql.y: 3040
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3053
	`CREATE EXTENSION`: {
		//line sql.y: 3054
		Category: hCfg,
		//line sql.y: 3055
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3133
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3134
		Category: hMisc,
		//line sql.y: 3135
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3278
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3279
		Category: hDML,
		//line sql.y: 3280
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3284
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3304
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3305
		Category: hCfg,
		//line sql.y: 3306
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3318
	`DROP`: {
		//line sql.y: 3319
		Category: hGroup,
		//line sql.y: 3320
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3339
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3340
		Category: hDDL,
		//line sql.y: 3341
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3342
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3372
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3373
		Category: hDDL,
		//line sql.y: 3374
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3375
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3387
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3388
		Category: hDDL,
		//line sql.y: 3389
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3390
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3402
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3403
		Category: hDDL,
		//line sql.y: 3404
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3405
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3427
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3428
		Category: hDDL,
		//line sql.y: 3429
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3430
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3450
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3451
		Category: hDDL,
		//line sql.y: 3452
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3488
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3489
		Category: hDDL,
		//line sql.y: 3490
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3510
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3511
		Category: hPriv,
		//line sql.y: 3512
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3513
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3537
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3538
		Category: hMisc,
		//line sql.y: 3539
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3542
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3565
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3566
		Category: hMisc,
		//line sql.y: 3567
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3580
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3687
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3688
		Category: hMisc,
		//line sql.y: 3689
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3690
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3721
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3722
		Category: hMisc,
		//line sql.y: 3723
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3724
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3754
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3755
		Category: hMisc,
		//line sql.y: 3756
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3757
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3777
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3778
		Category: hPriv,
		//line sql.y: 3779
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3794
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3824
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3825
		Category: hPriv,
		//line sql.y: 3826
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3841
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3909
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3910
		Category: hCfg,
		//line sql.y: 3911
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3912
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3924
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3925
		Category: hCfg,
		//line sql.y: 3926
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3927
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3936
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3937
		Category: hCfg,
		//line sql.y: 3938
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3941
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3962
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3963
		Category: hExperimental,
		//line sql.y: 3964
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3972
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3978
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3979
		Category: hExperimental,
		//line sql.y: 3980
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3988
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3996
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3997
		Category: hExperimental,
		//line sql.y: 3998
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4009
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4064
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4065
		Category: hCfg,
		//line sql.y: 4066
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4067
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4088
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4089
		Category: hCfg,
		//line sql.y: 4090
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 4096
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4113
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4114
		Category: hTxn,
		//line sql.y: 4115
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4124
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4316
	`SHOW`: {
		//line sql.y: 4317
		Category: hGroup,
		//line sql.y: 4318
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES, SHOW REGIONS,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY
`,
	},
	//line sql.y: 4400
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4401
		Category: hCfg,
		//line sql.y: 4402
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4403
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4424
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4425
		Category: hExperimental,
		//line sql.y: 4426
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4433
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4446
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4447
		Category: hExperimental,
		//line sql.y: 4448
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4452
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4465
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4466
		Category: hCCL,
		//line sql.y: 4467
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4468
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4522
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4523
		Category: hCfg,
		//line sql.y: 4524
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4527
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4553
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4554
		Category: hDDL,
		//line sql.y: 4555
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4556
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4564
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4565
		Category: hDDL,
		//line sql.y: 4566
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4567
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4587
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4588
		Category: hDDL,
		//line sql.y: 4589
		Text: `SHOW DATABASES
`,
		//line sql.y: 4590
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4598
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4599
		Category: hMisc,
		//line sql.y: 4600
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4608
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4609
		Category: hMisc,
		//line sql.y: 4610
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4618
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4619
		Category: hPriv,
		//line sql.y: 4620
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4626
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4639
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4640
		Category: hDDL,
		//line sql.y: 4641
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4642
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4672
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4673
		Category: hDDL,
		//line sql.y: 4674
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4675
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4688
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4689
		Category: hMisc,
		//line sql.y: 4690
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4691
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4712
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4713
		Category: hMisc,
		//line sql.y: 4714
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4718
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4762
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4763
		Category: hMisc,
		//line sql.y: 4764
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4767
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4814
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4815
		Category: hMisc,
		//line sql.y: 4816
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4818
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4841
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4842
		Category: hMisc,
		//line sql.y: 4843
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4844
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4857
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4858
		Category: hDDL,
		//line sql.y: 4859
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4860
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4888
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4889
		Category: hMisc,
		//line sql.y: 4890
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4907
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4908
		Category: hDDL,
		//line sql.y: 4909
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4921
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4922
		Category: hDDL,
		//line sql.y: 4923
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4935
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4936
		Category: hMisc,
		//line sql.y: 4937
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4946
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4947
		Category: hMisc,
		//line sql.y: 4948
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4956
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4957
		Category: hCfg,
		//line sql.y: 4958
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4966
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4967
		Category: hCfg,
		//line sql.y: 4968
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4969
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4988
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4989
		Category: hDDL,
		//line sql.y: 4990
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4991
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5009
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5010
		Category: hPriv,
		//line sql.y: 5011
		Text: `SHOW USERS
`,
		//line sql.y: 5012
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5020
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5021
		Category: hPriv,
		//line sql.y: 5022
		Text: `SHOW ROLES
`,
		//line sql.y: 5023
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5079
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5080
		Category: hMisc,
		//line sql.y: 5081
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 5102
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5103
		Category: hMisc,
		//line sql.y: 5104
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5123
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5124
		Category: hDDL,
		//line sql.y: 5125
		Text: `
SHOW REGIONS
SHOW REGIONS FOR DATABASE <database>
`,
	},
	//line sql.y: 5381
	`PAUSE`: {
		//line sql.y: 5382
		Category: hMisc,
		//line sql.y: 5383
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5393
	`RESUME`: {
		//line sql.y: 5394
		Category: hMisc,
		//line sql.y: 5395
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5405
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5406
		Category: hMisc,
		//line sql.y: 5407
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5410
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5445
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5446
		Category: hMisc,
		//line sql.y: 5447
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5451
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5472
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5473
		Category: hDDL,
		//line sql.y: 5474
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5507
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5508
		Category: hDDL,
		//line sql.y: 5509
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5535
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5536
		Category: hDDL,
		//line sql.y: 5537
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE [WITHOUT INDEX] ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5567
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6413
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6414
		Category: hDDL,
		//line sql.y: 6415
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6425
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6490
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6491
		Category: hDML,
		//line sql.y: 6492
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6493
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6511
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6512
		Category: hPriv,
		//line sql.y: 6513
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6514
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6526
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6527
		Category: hPriv,
		//line sql.y: 6528
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6529
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6558
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6559
		Category: hDDL,
		//line sql.y: 6560
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6561
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6736
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6737
		Category: hDDL,
		//line sql.y: 6738
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6781
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6782
		Category: hDDL,
		//line sql.y: 6783
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6793
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7245
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7246
		Category: hTxn,
		//line sql.y: 7247
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7248
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7256
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7257
		Category: hMisc,
		//line sql.y: 7258
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7261
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7283
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7284
		Category: hMisc,
		//line sql.y: 7285
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7291
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7312
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7313
		Category: hMisc,
		//line sql.y: 7314
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleid>

`,
		//line sql.y: 7320
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7341
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7342
		Category: hTxn,
		//line sql.y: 7343
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7344
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7359
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7360
		Category: hTxn,
		//line sql.y: 7361
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7369
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7382
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7383
		Category: hTxn,
		//line sql.y: 7384
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7387
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7411
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7412
		Category: hTxn,
		//line sql.y: 7413
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7416
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7530
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7531
		Category: hDDL,
		//line sql.y: 7532
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7533
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7653
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7654
		Category: hDML,
		//line sql.y: 7655
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7663
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7682
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7683
		Category: hDML,
		//line sql.y: 7684
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7688
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7804
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7805
		Category: hDML,
		//line sql.y: 7806
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7813
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7869
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 7870
		Category: hPriv,
		//line sql.y: 7871
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 7873
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 7884
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 7885
		Category: hPriv,
		//line sql.y: 7886
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 7888
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8068
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8069
		Category: hDML,
		//line sql.y: 8070
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8081
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8082
		Category: hDML,
		//line sql.y: 8083
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8095
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8170
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8171
		Category: hDML,
		//line sql.y: 8172
		Text: `TABLE <tablename>
`,
		//line sql.y: 8173
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8547
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8548
		Category: hDML,
		//line sql.y: 8549
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8550
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8659
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8660
		Category: hDML,
		//line sql.y: 8661
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8683
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
