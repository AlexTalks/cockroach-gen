// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1702
	`ALTER`: {
		//line sql.y: 1703
		Category: hGroup,
		//line sql.y: 1704
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1728
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1729
		Category: hDDL,
		//line sql.y: 1730
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1773
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1789
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1790
		Category: hDDL,
		//line sql.y: 1791
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1810
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1815
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1816
		Category: hDDL,
		//line sql.y: 1817
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1820
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1829
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1830
		Category: hDDL,
		//line sql.y: 1831
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1860
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1861
		Category: hDDL,
		//line sql.y: 1862
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1875
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1894
	`ALTER FUNCTION`: {
		ShortDescription: `change the definition of a function`,
		//line sql.y: 1895
		Category: hDDL,
		//line sql.y: 1896
		Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
`,
		//line sql.y: 1911
		SeeAlso: `WEBDOCS/alter-function.html
`,
	},
	//line sql.y: 2109
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2110
		Category: hDDL,
		//line sql.y: 2111
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2127
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2133
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2134
		Category: hDDL,
		//line sql.y: 2135
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2153
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2833
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2834
		Category: hDDL,
		//line sql.y: 2835
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2851
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 3000
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 3001
		Category: hMisc,
		//line sql.y: 3002
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 3029
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 3030
		Category: hCCL,
		//line sql.y: 3031
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 3065
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3187
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3188
		Category: hCCL,
		//line sql.y: 3189
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3259
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3277
	`ALTER BACKUP SCHEDULE`: {
		ShortDescription: `alter an existing backup schedule`,
		//line sql.y: 3278
		Category: hCCL,
		//line sql.y: 3279
		Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
		//line sql.y: 3291
		SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
	},
	//line sql.y: 3431
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3432
		Category: hMisc,
		//line sql.y: 3433
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3451
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3452
		Category: hMisc,
		//line sql.y: 3453
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3467
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3468
		Category: hCCL,
		//line sql.y: 3469
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3497
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3714
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3715
		Category: hCCL,
		//line sql.y: 3716
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3734
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3768
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3769
		Category: hCCL,
		//line sql.y: 3770
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3780
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3968
	`CANCEL`: {
		//line sql.y: 3969
		Category: hGroup,
		//line sql.y: 3970
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3978
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3979
		Category: hMisc,
		//line sql.y: 3980
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3983
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4005
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 4006
		Category: hMisc,
		//line sql.y: 4007
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 4010
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 4041
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 4042
		Category: hMisc,
		//line sql.y: 4043
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 4046
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 4077
	`CANCEL ALL JOBS`: {
		ShortDescription: `cancel all background jobs`,
		//line sql.y: 4078
		Category: hMisc,
		//line sql.y: 4079
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 4138
	`CREATE`: {
		//line sql.y: 4139
		Category: hGroup,
		//line sql.y: 4140
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 4155
	`CREATE EXTENSION`: {
		ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
		//line sql.y: 4156
		Category: hCfg,
		//line sql.y: 4157
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4175
	`CREATE FUNCTION`: {
		ShortDescription: `define a new function`,
		//line sql.y: 4176
		Category: hDDL,
		//line sql.y: 4177
		Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
 } ...
`,
		//line sql.y: 4187
		SeeAlso: `WEBDOCS/create-function.html
`,
	},
	//line sql.y: 4440
	`DROP FUNCTION`: {
		ShortDescription: `remove a function`,
		//line sql.y: 4441
		Category: hDDL,
		//line sql.y: 4442
		Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
		//line sql.y: 4445
		SeeAlso: `WEBDOCS/drop-function.html
`,
	},
	//line sql.y: 4639
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4640
		Category: hMisc,
		//line sql.y: 4641
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4734
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4735
		Category: hCCL,
		//line sql.y: 4736
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4826
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4827
		Category: hDML,
		//line sql.y: 4828
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [USING <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4833
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4860
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4861
		Category: hCfg,
		//line sql.y: 4862
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4883
	`DROP`: {
		//line sql.y: 4884
		Category: hGroup,
		//line sql.y: 4885
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4906
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4907
		Category: hDDL,
		//line sql.y: 4908
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4909
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4939
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4940
		Category: hDDL,
		//line sql.y: 4941
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4942
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4954
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4955
		Category: hDDL,
		//line sql.y: 4956
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4957
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4969
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4970
		Category: hDDL,
		//line sql.y: 4971
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4972
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4994
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4995
		Category: hDDL,
		//line sql.y: 4996
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4997
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 5017
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 5018
		Category: hDDL,
		//line sql.y: 5019
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 5055
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 5056
		Category: hDDL,
		//line sql.y: 5057
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 5077
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 5078
		Category: hPriv,
		//line sql.y: 5079
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 5080
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 5113
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 5114
		Category: hMisc,
		//line sql.y: 5115
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 5118
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 5141
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 5142
		Category: hMisc,
		//line sql.y: 5143
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 5157
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5268
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5269
		Category: hCCL,
		//line sql.y: 5270
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5321
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5322
		Category: hCCL,
		//line sql.y: 5323
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5377
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5378
		Category: hMisc,
		//line sql.y: 5379
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5380
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5411
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5412
		Category: hMisc,
		//line sql.y: 5413
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5414
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5444
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5445
		Category: hMisc,
		//line sql.y: 5446
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5447
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5467
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5468
		Category: hPriv,
		//line sql.y: 5469
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5486
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5568
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5569
		Category: hPriv,
		//line sql.y: 5570
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5587
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5761
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5762
		Category: hCfg,
		//line sql.y: 5763
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5764
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5780
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5781
		Category: hCfg,
		//line sql.y: 5782
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5783
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5792
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5793
		Category: hCfg,
		//line sql.y: 5794
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5797
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5818
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5819
		Category: hExperimental,
		//line sql.y: 5820
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5828
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5834
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5835
		Category: hExperimental,
		//line sql.y: 5836
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5844
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5852
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5853
		Category: hExperimental,
		//line sql.y: 5854
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5865
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5920
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5921
		Category: hCfg,
		//line sql.y: 5922
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5923
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5932
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5933
		Category: hGroup,
		//line sql.y: 5934
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5937
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5974
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5975
		Category: hCfg,
		//line sql.y: 5976
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5982
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6013
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 6014
		Category: hCfg,
		//line sql.y: 6015
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 6019
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6030
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 6031
		Category: hTxn,
		//line sql.y: 6032
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 6041
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 6238
	`SHOW`: {
		//line sql.y: 6239
		Category: hGroup,
		//line sql.y: 6240
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS,
SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS,
SHOW CREATE EXTERNAL CONNECTIONS
`,
	},
	//line sql.y: 6296
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6297
		Category: hMisc,
		//line sql.y: 6298
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6299
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6315
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6316
		Category: hMisc,
		//line sql.y: 6317
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6318
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6387
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6388
		Category: hMisc,
		//line sql.y: 6389
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6390
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6400
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6401
		Category: hMisc,
		//line sql.y: 6402
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6403
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6539
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6540
		Category: hCfg,
		//line sql.y: 6541
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6542
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6586
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics`,
		//line sql.y: 6587
		Category: hMisc,
		//line sql.y: 6588
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
		//line sql.y: 6599
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6621
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6622
		Category: hExperimental,
		//line sql.y: 6623
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6627
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6640
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6641
		Category: hCCL,
		//line sql.y: 6642
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6643
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6734
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6735
		Category: hCfg,
		//line sql.y: 6736
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6739
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6785
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6786
		Category: hDDL,
		//line sql.y: 6787
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6788
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6796
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6797
		Category: hDDL,
		//line sql.y: 6798
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6799
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 6819
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 6820
		Category: hDDL,
		//line sql.y: 6821
		Text: `SHOW DATABASES
`,
		//line sql.y: 6822
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 6830
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 6831
		Category: hDDL,
		//line sql.y: 6832
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 6848
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 6849
		Category: hMisc,
		//line sql.y: 6850
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 6878
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 6879
		Category: hMisc,
		//line sql.y: 6880
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6888
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6889
		Category: hPriv,
		//line sql.y: 6890
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6896
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6916
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6917
		Category: hDDL,
		//line sql.y: 6918
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6919
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 6949
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 6950
		Category: hDDL,
		//line sql.y: 6951
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 6952
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 6965
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 6966
		Category: hMisc,
		//line sql.y: 6967
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 6968
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 6995
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 6996
		Category: hMisc,
		//line sql.y: 6997
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 7001
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7063
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 7064
		Category: hMisc,
		//line sql.y: 7065
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 7068
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7119
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 7120
		Category: hMisc,
		//line sql.y: 7121
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 7123
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 7146
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 7147
		Category: hMisc,
		//line sql.y: 7148
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 7149
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 7162
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 7163
		Category: hDDL,
		//line sql.y: 7164
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 7165
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 7193
	`SHOW FUNCTIONS`: {
		ShortDescription: `list functions`,
		//line sql.y: 7194
		Category: hDDL,
		//line sql.y: 7195
		Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
	},
	//line sql.y: 7221
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 7222
		Category: hMisc,
		//line sql.y: 7223
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 7240
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 7241
		Category: hDDL,
		//line sql.y: 7242
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 7254
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 7255
		Category: hDDL,
		//line sql.y: 7256
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 7268
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 7269
		Category: hMisc,
		//line sql.y: 7270
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 7308
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 7309
		Category: hCfg,
		//line sql.y: 7310
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7318
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7319
		Category: hCfg,
		//line sql.y: 7320
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7321
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7340
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7341
		Category: hMisc,
		//line sql.y: 7342
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7354
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7355
		Category: hDDL,
		//line sql.y: 7356
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7362
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7421
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7422
		Category: hDDL,
		//line sql.y: 7423
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7426
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7439
	`SHOW CREATE EXTERNAL CONNECTIONS`: {
		ShortDescription: `list CREATE statements for external connections`,
		//line sql.y: 7440
		Category: hDDL,
		//line sql.y: 7441
		Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
	},
	//line sql.y: 7456
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7457
		Category: hPriv,
		//line sql.y: 7458
		Text: `SHOW USERS
`,
		//line sql.y: 7459
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7467
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7468
		Category: hPriv,
		//line sql.y: 7469
		Text: `SHOW ROLES
`,
		//line sql.y: 7470
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7478
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7479
		Category: hCfg,
		//line sql.y: 7480
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7483
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7539
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7540
		Category: hMisc,
		//line sql.y: 7541
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7562
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7563
		Category: hMisc,
		//line sql.y: 7564
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 7583
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `list survival goals`,
		//line sql.y: 7584
		Category: hDDL,
		//line sql.y: 7585
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 7600
	`SHOW REGIONS`: {
		ShortDescription: `list regions`,
		//line sql.y: 7601
		Category: hDDL,
		//line sql.y: 7602
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 7963
	`PAUSE`: {
		ShortDescription: `pause background tasks`,
		//line sql.y: 7964
		Category: hGroup,
		//line sql.y: 7965
		Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
	},
	//line sql.y: 7972
	`RESUME`: {
		ShortDescription: `resume background tasks`,
		//line sql.y: 7973
		Category: hGroup,
		//line sql.y: 7974
		Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 7981
	`RESUME ALL JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7982
		Category: hMisc,
		//line sql.y: 7983
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7992
	`PAUSE JOBS`: {
		ShortDescription: `pause selected background jobs`,
		//line sql.y: 7993
		Category: hMisc,
		//line sql.y: 7994
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 7997
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8046
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 8047
		Category: hMisc,
		//line sql.y: 8048
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 8052
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8073
	`PAUSE ALL JOBS`: {
		ShortDescription: `pause all background jobs`,
		//line sql.y: 8074
		Category: hMisc,
		//line sql.y: 8075
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8085
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 8086
		Category: hDDL,
		//line sql.y: 8087
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 8120
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 8121
		Category: hDDL,
		//line sql.y: 8122
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 8148
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 8149
		Category: hDDL,
		//line sql.y: 8150
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 8177
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 9141
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 9142
		Category: hDDL,
		//line sql.y: 9143
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 9154
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 9237
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 9238
		Category: hDML,
		//line sql.y: 9239
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 9240
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 9264
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 9265
		Category: hPriv,
		//line sql.y: 9266
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 9267
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9279
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 9280
		Category: hPriv,
		//line sql.y: 9281
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 9285
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9363
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9364
		Category: hDDL,
		//line sql.y: 9365
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9368
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9582
	`CREATE TYPE`: {
		ShortDescription: `create a type`,
		//line sql.y: 9583
		Category: hDDL,
		//line sql.y: 9584
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 9636
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 9637
		Category: hDDL,
		//line sql.y: 9638
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 9645
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 10156
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 10157
		Category: hDDL,
		//line sql.y: 10158
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 10305
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 10306
		Category: hTxn,
		//line sql.y: 10307
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10308
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10316
	`RESUME JOBS`: {
		ShortDescription: `resume selected background jobs`,
		//line sql.y: 10317
		Category: hMisc,
		//line sql.y: 10318
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 10321
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 10343
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 10344
		Category: hMisc,
		//line sql.y: 10345
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 10351
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10372
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10373
		Category: hMisc,
		//line sql.y: 10374
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10380
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10401
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10402
		Category: hTxn,
		//line sql.y: 10403
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10404
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10419
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10420
		Category: hTxn,
		//line sql.y: 10421
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10429
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10437
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10438
		Category: hTxn,
		//line sql.y: 10439
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10442
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10461
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10462
		Category: hTxn,
		//line sql.y: 10463
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10466
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 10602
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 10603
		Category: hDDL,
		//line sql.y: 10604
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 10605
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 10796
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 10797
		Category: hDML,
		//line sql.y: 10798
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 10806
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 10825
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 10826
		Category: hDML,
		//line sql.y: 10827
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 10831
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 10961
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 10962
		Category: hDML,
		//line sql.y: 10963
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 10970
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 11026
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 11027
		Category: hPriv,
		//line sql.y: 11028
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 11030
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 11041
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 11042
		Category: hPriv,
		//line sql.y: 11043
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 11045
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 11225
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 11226
		Category: hDML,
		//line sql.y: 11227
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 11238
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 11239
		Category: hDML,
		//line sql.y: 11240
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 11252
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 11327
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 11328
		Category: hDML,
		//line sql.y: 11329
		Text: `TABLE <tablename>
`,
		//line sql.y: 11330
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11692
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 11693
		Category: hDML,
		//line sql.y: 11694
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 11695
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11830
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 11831
		Category: hDML,
		//line sql.y: 11832
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 11857
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
