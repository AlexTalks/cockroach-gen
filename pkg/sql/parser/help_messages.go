// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1258
	`ALTER`: {
		//line sql.y: 1259
		Category: hGroup,
		//line sql.y: 1260
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1277
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1278
		Category: hDDL,
		//line sql.y: 1279
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1318
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1333
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1334
		Category: hDDL,
		//line sql.y: 1335
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1354
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1359
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1360
		Category: hDDL,
		//line sql.y: 1361
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1364
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1372
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1373
		Category: hDDL,
		//line sql.y: 1374
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1399
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1400
		Category: hDDL,
		//line sql.y: 1401
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1404
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1420
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1421
		Category: hDDL,
		//line sql.y: 1422
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1434
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1439
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1440
		Category: hDDL,
		//line sql.y: 1441
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1457
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1966
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1967
		Category: hDDL,
		//line sql.y: 1968
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1984
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2091
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2092
		Category: hMisc,
		//line sql.y: 2093
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2120
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2121
		Category: hCCL,
		//line sql.y: 2122
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2142
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2246
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2247
		Category: hCCL,
		//line sql.y: 2248
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2317
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2395
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2396
		Category: hCCL,
		//line sql.y: 2397
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2418
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2539
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2540
		Category: hCCL,
		//line sql.y: 2541
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2569
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2613
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2614
		Category: hCCL,
		//line sql.y: 2615
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2624
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2756
	`CANCEL`: {
		//line sql.y: 2757
		Category: hGroup,
		//line sql.y: 2758
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2765
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2766
		Category: hMisc,
		//line sql.y: 2767
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2770
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2792
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2793
		Category: hMisc,
		//line sql.y: 2794
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2797
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2828
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2829
		Category: hMisc,
		//line sql.y: 2830
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2833
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2903
	`CREATE`: {
		//line sql.y: 2904
		Category: hGroup,
		//line sql.y: 2905
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2983
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2984
		Category: hMisc,
		//line sql.y: 2985
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3128
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3129
		Category: hDML,
		//line sql.y: 3130
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3134
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3154
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3155
		Category: hCfg,
		//line sql.y: 3156
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3168
	`DROP`: {
		//line sql.y: 3169
		Category: hGroup,
		//line sql.y: 3170
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3189
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3190
		Category: hDDL,
		//line sql.y: 3191
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3192
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3222
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3223
		Category: hDDL,
		//line sql.y: 3224
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3225
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3237
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3238
		Category: hDDL,
		//line sql.y: 3239
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3240
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3252
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3253
		Category: hDDL,
		//line sql.y: 3254
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3255
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3277
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3278
		Category: hDDL,
		//line sql.y: 3279
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3280
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3300
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3301
		Category: hDDL,
		//line sql.y: 3302
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3338
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3339
		Category: hDDL,
		//line sql.y: 3340
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3370
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3371
		Category: hPriv,
		//line sql.y: 3372
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3373
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3397
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3398
		Category: hMisc,
		//line sql.y: 3399
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3402
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3425
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3426
		Category: hMisc,
		//line sql.y: 3427
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3440
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3547
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3548
		Category: hMisc,
		//line sql.y: 3549
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3550
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3581
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3582
		Category: hMisc,
		//line sql.y: 3583
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3584
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3614
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3615
		Category: hMisc,
		//line sql.y: 3616
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3617
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3637
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3638
		Category: hPriv,
		//line sql.y: 3639
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3654
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3684
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3685
		Category: hPriv,
		//line sql.y: 3686
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3701
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3769
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3770
		Category: hCfg,
		//line sql.y: 3771
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3772
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3784
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3785
		Category: hCfg,
		//line sql.y: 3786
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3787
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3796
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3797
		Category: hCfg,
		//line sql.y: 3798
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3801
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3822
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3823
		Category: hExperimental,
		//line sql.y: 3824
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3832
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3838
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3839
		Category: hExperimental,
		//line sql.y: 3840
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3848
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3856
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3857
		Category: hExperimental,
		//line sql.y: 3858
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3869
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3924
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3925
		Category: hCfg,
		//line sql.y: 3926
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3927
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3948
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3949
		Category: hCfg,
		//line sql.y: 3950
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3956
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3973
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3974
		Category: hTxn,
		//line sql.y: 3975
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 3984
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4176
	`SHOW`: {
		//line sql.y: 4177
		Category: hGroup,
		//line sql.y: 4178
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4252
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4253
		Category: hCfg,
		//line sql.y: 4254
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4255
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4276
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4277
		Category: hExperimental,
		//line sql.y: 4278
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4285
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4298
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4299
		Category: hExperimental,
		//line sql.y: 4300
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4304
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4317
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4318
		Category: hCCL,
		//line sql.y: 4319
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4320
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4374
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4375
		Category: hCfg,
		//line sql.y: 4376
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4379
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4405
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4406
		Category: hDDL,
		//line sql.y: 4407
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4408
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4416
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4417
		Category: hDDL,
		//line sql.y: 4418
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4419
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4439
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4440
		Category: hDDL,
		//line sql.y: 4441
		Text: `SHOW DATABASES
`,
		//line sql.y: 4442
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4450
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4451
		Category: hMisc,
		//line sql.y: 4452
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4460
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4461
		Category: hMisc,
		//line sql.y: 4462
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4470
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4471
		Category: hPriv,
		//line sql.y: 4472
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4478
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4491
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4492
		Category: hDDL,
		//line sql.y: 4493
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4494
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4524
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4525
		Category: hDDL,
		//line sql.y: 4526
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4527
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4540
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4541
		Category: hMisc,
		//line sql.y: 4542
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4543
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4564
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4565
		Category: hMisc,
		//line sql.y: 4566
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4570
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4614
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4615
		Category: hMisc,
		//line sql.y: 4616
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4619
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4666
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4667
		Category: hMisc,
		//line sql.y: 4668
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4670
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4693
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4694
		Category: hMisc,
		//line sql.y: 4695
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4696
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4709
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4710
		Category: hDDL,
		//line sql.y: 4711
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4712
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4740
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4741
		Category: hMisc,
		//line sql.y: 4742
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4759
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4760
		Category: hDDL,
		//line sql.y: 4761
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4773
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4774
		Category: hDDL,
		//line sql.y: 4775
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4787
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4788
		Category: hMisc,
		//line sql.y: 4789
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4798
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4799
		Category: hMisc,
		//line sql.y: 4800
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4808
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4809
		Category: hCfg,
		//line sql.y: 4810
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4818
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4819
		Category: hCfg,
		//line sql.y: 4820
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4821
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4840
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4841
		Category: hDDL,
		//line sql.y: 4842
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4843
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4861
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4862
		Category: hPriv,
		//line sql.y: 4863
		Text: `SHOW USERS
`,
		//line sql.y: 4864
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4872
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4873
		Category: hPriv,
		//line sql.y: 4874
		Text: `SHOW ROLES
`,
		//line sql.y: 4875
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4931
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4932
		Category: hMisc,
		//line sql.y: 4933
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4954
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4955
		Category: hMisc,
		//line sql.y: 4956
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5202
	`PAUSE`: {
		//line sql.y: 5203
		Category: hMisc,
		//line sql.y: 5204
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5214
	`RESUME`: {
		//line sql.y: 5215
		Category: hMisc,
		//line sql.y: 5216
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5226
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5227
		Category: hMisc,
		//line sql.y: 5228
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5231
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5266
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5267
		Category: hMisc,
		//line sql.y: 5268
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5272
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5293
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5294
		Category: hDDL,
		//line sql.y: 5295
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5328
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5329
		Category: hDDL,
		//line sql.y: 5330
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5356
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5357
		Category: hDDL,
		//line sql.y: 5358
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5388
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6215
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6216
		Category: hDDL,
		//line sql.y: 6217
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6227
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6292
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6293
		Category: hDML,
		//line sql.y: 6294
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6295
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6313
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6314
		Category: hPriv,
		//line sql.y: 6315
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6316
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6328
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6329
		Category: hPriv,
		//line sql.y: 6330
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6331
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6360
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6361
		Category: hDDL,
		//line sql.y: 6362
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6363
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6538
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6539
		Category: hDDL,
		//line sql.y: 6540
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6583
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6584
		Category: hDDL,
		//line sql.y: 6585
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6595
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6925
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6926
		Category: hTxn,
		//line sql.y: 6927
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6928
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6936
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6937
		Category: hMisc,
		//line sql.y: 6938
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6941
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6963
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6964
		Category: hMisc,
		//line sql.y: 6965
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6971
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6992
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6993
		Category: hMisc,
		//line sql.y: 6994
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 7000
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7021
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7022
		Category: hTxn,
		//line sql.y: 7023
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7024
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7039
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7040
		Category: hTxn,
		//line sql.y: 7041
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7049
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7062
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7063
		Category: hTxn,
		//line sql.y: 7064
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7067
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7091
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7092
		Category: hTxn,
		//line sql.y: 7093
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7096
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7210
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7211
		Category: hDDL,
		//line sql.y: 7212
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7213
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7282
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7283
		Category: hDML,
		//line sql.y: 7284
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7292
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7311
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7312
		Category: hDML,
		//line sql.y: 7313
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7317
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7433
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7434
		Category: hDML,
		//line sql.y: 7435
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7442
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7667
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7668
		Category: hDML,
		//line sql.y: 7669
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7680
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7681
		Category: hDML,
		//line sql.y: 7682
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7694
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7769
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7770
		Category: hDML,
		//line sql.y: 7771
		Text: `TABLE <tablename>
`,
		//line sql.y: 7772
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8129
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8130
		Category: hDML,
		//line sql.y: 8131
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8132
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8241
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8242
		Category: hDML,
		//line sql.y: 8243
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8265
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
