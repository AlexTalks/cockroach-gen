// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1258
	`ALTER`: {
		//line sql.y: 1259
		Category: hGroup,
		//line sql.y: 1260
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1277
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1278
		Category: hDDL,
		//line sql.y: 1279
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1318
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1333
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1334
		Category: hDDL,
		//line sql.y: 1335
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1354
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1359
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1360
		Category: hDDL,
		//line sql.y: 1361
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1364
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1372
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1373
		Category: hDDL,
		//line sql.y: 1374
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1399
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1400
		Category: hDDL,
		//line sql.y: 1401
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1404
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1420
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1421
		Category: hDDL,
		//line sql.y: 1422
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1434
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1439
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1440
		Category: hDDL,
		//line sql.y: 1441
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1457
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1966
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1967
		Category: hDDL,
		//line sql.y: 1968
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1984
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2091
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2092
		Category: hMisc,
		//line sql.y: 2093
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2120
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2121
		Category: hCCL,
		//line sql.y: 2122
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2142
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2246
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2247
		Category: hCCL,
		//line sql.y: 2248
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2323
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2401
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2402
		Category: hCCL,
		//line sql.y: 2403
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2424
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2545
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2546
		Category: hCCL,
		//line sql.y: 2547
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2575
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2619
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2620
		Category: hCCL,
		//line sql.y: 2621
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2630
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2762
	`CANCEL`: {
		//line sql.y: 2763
		Category: hGroup,
		//line sql.y: 2764
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2771
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2772
		Category: hMisc,
		//line sql.y: 2773
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2776
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2798
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2799
		Category: hMisc,
		//line sql.y: 2800
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2803
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2834
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2835
		Category: hMisc,
		//line sql.y: 2836
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2839
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2909
	`CREATE`: {
		//line sql.y: 2910
		Category: hGroup,
		//line sql.y: 2911
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2989
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2990
		Category: hMisc,
		//line sql.y: 2991
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3134
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3135
		Category: hDML,
		//line sql.y: 3136
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3140
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3160
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3161
		Category: hCfg,
		//line sql.y: 3162
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3174
	`DROP`: {
		//line sql.y: 3175
		Category: hGroup,
		//line sql.y: 3176
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3195
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3196
		Category: hDDL,
		//line sql.y: 3197
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3198
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3228
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3229
		Category: hDDL,
		//line sql.y: 3230
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3231
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3243
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3244
		Category: hDDL,
		//line sql.y: 3245
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3246
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3258
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3259
		Category: hDDL,
		//line sql.y: 3260
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3261
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3283
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3284
		Category: hDDL,
		//line sql.y: 3285
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3286
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3306
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3307
		Category: hDDL,
		//line sql.y: 3308
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3344
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3345
		Category: hDDL,
		//line sql.y: 3346
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3376
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3377
		Category: hPriv,
		//line sql.y: 3378
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3379
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3403
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3404
		Category: hMisc,
		//line sql.y: 3405
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3408
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3431
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3432
		Category: hMisc,
		//line sql.y: 3433
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3446
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3553
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3554
		Category: hMisc,
		//line sql.y: 3555
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3556
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3587
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3588
		Category: hMisc,
		//line sql.y: 3589
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3590
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3620
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3621
		Category: hMisc,
		//line sql.y: 3622
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3623
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3643
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3644
		Category: hPriv,
		//line sql.y: 3645
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3660
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3690
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3691
		Category: hPriv,
		//line sql.y: 3692
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3707
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3775
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3776
		Category: hCfg,
		//line sql.y: 3777
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3778
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3790
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3791
		Category: hCfg,
		//line sql.y: 3792
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3793
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3802
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3803
		Category: hCfg,
		//line sql.y: 3804
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3807
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3828
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3829
		Category: hExperimental,
		//line sql.y: 3830
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3838
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3844
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3845
		Category: hExperimental,
		//line sql.y: 3846
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3854
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3862
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3863
		Category: hExperimental,
		//line sql.y: 3864
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3875
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3930
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3931
		Category: hCfg,
		//line sql.y: 3932
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3933
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3954
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3955
		Category: hCfg,
		//line sql.y: 3956
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3962
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3979
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3980
		Category: hTxn,
		//line sql.y: 3981
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 3990
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4182
	`SHOW`: {
		//line sql.y: 4183
		Category: hGroup,
		//line sql.y: 4184
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4258
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4259
		Category: hCfg,
		//line sql.y: 4260
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4261
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4282
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4283
		Category: hExperimental,
		//line sql.y: 4284
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4291
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4304
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4305
		Category: hExperimental,
		//line sql.y: 4306
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4310
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4323
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4324
		Category: hCCL,
		//line sql.y: 4325
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4326
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4380
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4381
		Category: hCfg,
		//line sql.y: 4382
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4385
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4411
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4412
		Category: hDDL,
		//line sql.y: 4413
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4414
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4422
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4423
		Category: hDDL,
		//line sql.y: 4424
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4425
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4445
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4446
		Category: hDDL,
		//line sql.y: 4447
		Text: `SHOW DATABASES
`,
		//line sql.y: 4448
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4456
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4457
		Category: hMisc,
		//line sql.y: 4458
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4466
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4467
		Category: hMisc,
		//line sql.y: 4468
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4476
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4477
		Category: hPriv,
		//line sql.y: 4478
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4484
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4497
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4498
		Category: hDDL,
		//line sql.y: 4499
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4500
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4530
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4531
		Category: hDDL,
		//line sql.y: 4532
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4533
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4546
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4547
		Category: hMisc,
		//line sql.y: 4548
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4549
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4570
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4571
		Category: hMisc,
		//line sql.y: 4572
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4576
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4620
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4621
		Category: hMisc,
		//line sql.y: 4622
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4625
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4672
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4673
		Category: hMisc,
		//line sql.y: 4674
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4676
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4699
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4700
		Category: hMisc,
		//line sql.y: 4701
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4702
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4715
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4716
		Category: hDDL,
		//line sql.y: 4717
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4718
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4746
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4747
		Category: hMisc,
		//line sql.y: 4748
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4765
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4766
		Category: hDDL,
		//line sql.y: 4767
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4779
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4780
		Category: hDDL,
		//line sql.y: 4781
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4793
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4794
		Category: hMisc,
		//line sql.y: 4795
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4804
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4805
		Category: hMisc,
		//line sql.y: 4806
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4814
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4815
		Category: hCfg,
		//line sql.y: 4816
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4824
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4825
		Category: hCfg,
		//line sql.y: 4826
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4827
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4846
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4847
		Category: hDDL,
		//line sql.y: 4848
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4849
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4867
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4868
		Category: hPriv,
		//line sql.y: 4869
		Text: `SHOW USERS
`,
		//line sql.y: 4870
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4878
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4879
		Category: hPriv,
		//line sql.y: 4880
		Text: `SHOW ROLES
`,
		//line sql.y: 4881
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4937
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4938
		Category: hMisc,
		//line sql.y: 4939
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4960
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4961
		Category: hMisc,
		//line sql.y: 4962
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5208
	`PAUSE`: {
		//line sql.y: 5209
		Category: hMisc,
		//line sql.y: 5210
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5220
	`RESUME`: {
		//line sql.y: 5221
		Category: hMisc,
		//line sql.y: 5222
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5232
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5233
		Category: hMisc,
		//line sql.y: 5234
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5237
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5272
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5273
		Category: hMisc,
		//line sql.y: 5274
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5278
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5299
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5300
		Category: hDDL,
		//line sql.y: 5301
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5334
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5335
		Category: hDDL,
		//line sql.y: 5336
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5362
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5363
		Category: hDDL,
		//line sql.y: 5364
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5394
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6221
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6222
		Category: hDDL,
		//line sql.y: 6223
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6233
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6298
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6299
		Category: hDML,
		//line sql.y: 6300
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6301
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6319
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6320
		Category: hPriv,
		//line sql.y: 6321
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6322
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6334
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6335
		Category: hPriv,
		//line sql.y: 6336
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6337
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6366
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6367
		Category: hDDL,
		//line sql.y: 6368
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6369
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6536
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6537
		Category: hDDL,
		//line sql.y: 6538
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6581
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6582
		Category: hDDL,
		//line sql.y: 6583
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6593
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6923
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6924
		Category: hTxn,
		//line sql.y: 6925
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6926
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6934
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6935
		Category: hMisc,
		//line sql.y: 6936
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6939
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6961
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6962
		Category: hMisc,
		//line sql.y: 6963
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6969
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6990
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6991
		Category: hMisc,
		//line sql.y: 6992
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6998
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7019
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7020
		Category: hTxn,
		//line sql.y: 7021
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7022
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7037
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7038
		Category: hTxn,
		//line sql.y: 7039
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7047
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7060
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7061
		Category: hTxn,
		//line sql.y: 7062
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7065
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7089
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7090
		Category: hTxn,
		//line sql.y: 7091
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7094
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7208
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7209
		Category: hDDL,
		//line sql.y: 7210
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7211
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7280
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7281
		Category: hDML,
		//line sql.y: 7282
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7290
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7309
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7310
		Category: hDML,
		//line sql.y: 7311
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7315
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7431
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7432
		Category: hDML,
		//line sql.y: 7433
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7440
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7665
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7666
		Category: hDML,
		//line sql.y: 7667
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7678
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7679
		Category: hDML,
		//line sql.y: 7680
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7692
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7767
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7768
		Category: hDML,
		//line sql.y: 7769
		Text: `TABLE <tablename>
`,
		//line sql.y: 7770
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8127
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8128
		Category: hDML,
		//line sql.y: 8129
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8130
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8239
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8240
		Category: hDML,
		//line sql.y: 8241
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8263
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
