// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1235
	`ALTER`: {
		//line sql.y: 1236
		Category: hGroup,
		//line sql.y: 1237
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1254
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1255
		Category: hDDL,
		//line sql.y: 1256
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1295
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1310
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1311
		Category: hDDL,
		//line sql.y: 1312
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1331
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1336
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1337
		Category: hDDL,
		//line sql.y: 1338
		Text: `
ALTER VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1341
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1349
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1350
		Category: hDDL,
		//line sql.y: 1351
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1376
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1377
		Category: hDDL,
		//line sql.y: 1378
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
`,
		//line sql.y: 1380
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1388
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1389
		Category: hDDL,
		//line sql.y: 1390
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1402
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1407
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1408
		Category: hDDL,
		//line sql.y: 1409
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1425
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1927
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1928
		Category: hDDL,
		//line sql.y: 1929
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1945
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2047
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2048
		Category: hCCL,
		//line sql.y: 2049
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2069
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2161
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2162
		Category: hCCL,
		//line sql.y: 2163
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.

`,
		//line sql.y: 2234
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2319
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2320
		Category: hCCL,
		//line sql.y: 2321
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   INTO_DB
   SKIP_MISSING_FOREIGN_KEYS

`,
		//line sql.y: 2337
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2454
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2455
		Category: hCCL,
		//line sql.y: 2456
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2484
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2528
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2529
		Category: hCCL,
		//line sql.y: 2530
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2539
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2671
	`CANCEL`: {
		//line sql.y: 2672
		Category: hGroup,
		//line sql.y: 2673
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2680
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2681
		Category: hMisc,
		//line sql.y: 2682
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2685
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2707
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2708
		Category: hMisc,
		//line sql.y: 2709
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2712
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2743
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2744
		Category: hMisc,
		//line sql.y: 2745
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2748
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2818
	`CREATE`: {
		//line sql.y: 2819
		Category: hGroup,
		//line sql.y: 2820
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2899
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2900
		Category: hMisc,
		//line sql.y: 2901
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3044
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3045
		Category: hDML,
		//line sql.y: 3046
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3050
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3070
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3071
		Category: hCfg,
		//line sql.y: 3072
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3084
	`DROP`: {
		//line sql.y: 3085
		Category: hGroup,
		//line sql.y: 3086
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3105
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3106
		Category: hDDL,
		//line sql.y: 3107
		Text: `DROP VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3108
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3120
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3121
		Category: hDDL,
		//line sql.y: 3122
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3123
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3135
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3136
		Category: hDDL,
		//line sql.y: 3137
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3138
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3150
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3151
		Category: hDDL,
		//line sql.y: 3152
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3153
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3175
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3176
		Category: hDDL,
		//line sql.y: 3177
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3178
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3198
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3199
		Category: hDDL,
		//line sql.y: 3200
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3230
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3231
		Category: hDDL,
		//line sql.y: 3232
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3262
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3263
		Category: hPriv,
		//line sql.y: 3264
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3265
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3289
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3290
		Category: hMisc,
		//line sql.y: 3291
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3294
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3317
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3318
		Category: hMisc,
		//line sql.y: 3319
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3332
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3439
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3440
		Category: hMisc,
		//line sql.y: 3441
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3442
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3473
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3474
		Category: hMisc,
		//line sql.y: 3475
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3476
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3506
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3507
		Category: hMisc,
		//line sql.y: 3508
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3509
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3529
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3530
		Category: hPriv,
		//line sql.y: 3531
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3544
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3560
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3561
		Category: hPriv,
		//line sql.y: 3562
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3575
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3629
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3630
		Category: hCfg,
		//line sql.y: 3631
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3632
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3644
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3645
		Category: hCfg,
		//line sql.y: 3646
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3647
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3656
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3657
		Category: hCfg,
		//line sql.y: 3658
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3661
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3682
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3683
		Category: hExperimental,
		//line sql.y: 3684
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3692
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3698
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3699
		Category: hExperimental,
		//line sql.y: 3700
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3708
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3716
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3717
		Category: hExperimental,
		//line sql.y: 3718
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3729
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3784
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3785
		Category: hCfg,
		//line sql.y: 3786
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3787
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3808
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3809
		Category: hCfg,
		//line sql.y: 3810
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3816
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3833
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3834
		Category: hTxn,
		//line sql.y: 3835
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 3842
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4034
	`SHOW`: {
		//line sql.y: 4035
		Category: hGroup,
		//line sql.y: 4036
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE SHOW TRANSACTION, SHOW USERS,
SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4108
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4109
		Category: hCfg,
		//line sql.y: 4110
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4111
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4132
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4133
		Category: hExperimental,
		//line sql.y: 4134
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4141
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4154
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4155
		Category: hExperimental,
		//line sql.y: 4156
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4160
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4173
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4174
		Category: hCCL,
		//line sql.y: 4175
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4176
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4215
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4216
		Category: hCfg,
		//line sql.y: 4217
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4220
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4246
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4247
		Category: hDDL,
		//line sql.y: 4248
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4249
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4257
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4258
		Category: hDDL,
		//line sql.y: 4259
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4260
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4280
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4281
		Category: hDDL,
		//line sql.y: 4282
		Text: `SHOW DATABASES
`,
		//line sql.y: 4283
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4291
	`SHOW ENUMS`: {
		ShortDescription: `list defined enums`,
		//line sql.y: 4292
		Category: hMisc,
		//line sql.y: 4293
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4301
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4302
		Category: hPriv,
		//line sql.y: 4303
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4309
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4322
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4323
		Category: hDDL,
		//line sql.y: 4324
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4325
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4355
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4356
		Category: hDDL,
		//line sql.y: 4357
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4358
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4371
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4372
		Category: hMisc,
		//line sql.y: 4373
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4374
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4395
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4396
		Category: hMisc,
		//line sql.y: 4397
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4401
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4445
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4446
		Category: hMisc,
		//line sql.y: 4447
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4450
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4497
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4498
		Category: hMisc,
		//line sql.y: 4499
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4501
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4524
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4525
		Category: hMisc,
		//line sql.y: 4526
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4527
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4540
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4541
		Category: hDDL,
		//line sql.y: 4542
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4543
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4575
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4576
		Category: hDDL,
		//line sql.y: 4577
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4589
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4590
		Category: hDDL,
		//line sql.y: 4591
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4603
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4604
		Category: hMisc,
		//line sql.y: 4605
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4614
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4615
		Category: hMisc,
		//line sql.y: 4616
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4624
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4625
		Category: hCfg,
		//line sql.y: 4626
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4634
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4635
		Category: hCfg,
		//line sql.y: 4636
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4637
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4656
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4657
		Category: hDDL,
		//line sql.y: 4658
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4659
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4677
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4678
		Category: hPriv,
		//line sql.y: 4679
		Text: `SHOW USERS
`,
		//line sql.y: 4680
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4688
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4689
		Category: hPriv,
		//line sql.y: 4690
		Text: `SHOW ROLES
`,
		//line sql.y: 4691
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4747
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4748
		Category: hMisc,
		//line sql.y: 4749
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4770
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4771
		Category: hMisc,
		//line sql.y: 4772
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5018
	`PAUSE`: {
		//line sql.y: 5019
		Category: hMisc,
		//line sql.y: 5020
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5030
	`RESUME`: {
		//line sql.y: 5031
		Category: hMisc,
		//line sql.y: 5032
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5042
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5043
		Category: hMisc,
		//line sql.y: 5044
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5047
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5082
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5083
		Category: hMisc,
		//line sql.y: 5084
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5088
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5109
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5110
		Category: hDDL,
		//line sql.y: 5111
		Text: `
CREATE SCHEMA [IF NOT EXISTS] <schemaname>
`,
	},
	//line sql.y: 5129
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5130
		Category: hDDL,
		//line sql.y: 5131
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5152
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5153
		Category: hDDL,
		//line sql.y: 5154
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5184
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6008
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6009
		Category: hDDL,
		//line sql.y: 6010
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6020
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6085
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6086
		Category: hDML,
		//line sql.y: 6087
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6088
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6106
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6107
		Category: hPriv,
		//line sql.y: 6108
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6109
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6121
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6122
		Category: hPriv,
		//line sql.y: 6123
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6124
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6153
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6154
		Category: hDDL,
		//line sql.y: 6155
		Text: `CREATE [TEMPORARY | TEMP] VIEW <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6156
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6253
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6254
		Category: hDDL,
		//line sql.y: 6255
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6298
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6299
		Category: hDDL,
		//line sql.y: 6300
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6310
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6590
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6591
		Category: hTxn,
		//line sql.y: 6592
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6593
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6601
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6602
		Category: hMisc,
		//line sql.y: 6603
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6606
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6628
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6629
		Category: hMisc,
		//line sql.y: 6630
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6636
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6657
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6658
		Category: hMisc,
		//line sql.y: 6659
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6665
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6686
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 6687
		Category: hTxn,
		//line sql.y: 6688
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 6689
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6704
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 6705
		Category: hTxn,
		//line sql.y: 6706
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 6714
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 6727
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 6728
		Category: hTxn,
		//line sql.y: 6729
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 6732
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 6756
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 6757
		Category: hTxn,
		//line sql.y: 6758
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6761
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 6861
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 6862
		Category: hDDL,
		//line sql.y: 6863
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 6864
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 6933
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 6934
		Category: hDML,
		//line sql.y: 6935
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT [( <colnames...> )] {DO UPDATE SET ... [WHERE <expr>] | DO NOTHING}]
       [RETURNING <exprs...>]
`,
		//line sql.y: 6940
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 6959
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 6960
		Category: hDML,
		//line sql.y: 6961
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 6965
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7076
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7077
		Category: hDML,
		//line sql.y: 7078
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7085
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7310
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7311
		Category: hDML,
		//line sql.y: 7312
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7323
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7324
		Category: hDML,
		//line sql.y: 7325
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7337
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7412
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7413
		Category: hDML,
		//line sql.y: 7414
		Text: `TABLE <tablename>
`,
		//line sql.y: 7415
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7772
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 7773
		Category: hDML,
		//line sql.y: 7774
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 7775
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7884
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 7885
		Category: hDML,
		//line sql.y: 7886
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 7908
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
