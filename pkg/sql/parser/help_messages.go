// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1656
	`ALTER`: {
		//line sql.y: 1657
		Category: hGroup,
		//line sql.y: 1658
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1680
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1681
		Category: hDDL,
		//line sql.y: 1682
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1725
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1741
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1742
		Category: hDDL,
		//line sql.y: 1743
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1762
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1767
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1768
		Category: hDDL,
		//line sql.y: 1769
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1772
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1781
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1782
		Category: hDDL,
		//line sql.y: 1783
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1812
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1813
		Category: hDDL,
		//line sql.y: 1814
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1826
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1962
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1963
		Category: hDDL,
		//line sql.y: 1964
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1980
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1986
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1987
		Category: hDDL,
		//line sql.y: 1988
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2005
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2648
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2649
		Category: hDDL,
		//line sql.y: 2650
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2666
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2815
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2816
		Category: hMisc,
		//line sql.y: 2817
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2844
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2845
		Category: hCCL,
		//line sql.y: 2846
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 2880
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2990
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2991
		Category: hCCL,
		//line sql.y: 2992
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3062
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3153
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3154
		Category: hMisc,
		//line sql.y: 3155
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3173
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3174
		Category: hCCL,
		//line sql.y: 3175
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3203
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3417
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3418
		Category: hCCL,
		//line sql.y: 3419
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3437
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3471
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3472
		Category: hCCL,
		//line sql.y: 3473
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3483
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3671
	`CANCEL`: {
		//line sql.y: 3672
		Category: hGroup,
		//line sql.y: 3673
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3681
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3682
		Category: hMisc,
		//line sql.y: 3683
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3686
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3708
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3709
		Category: hMisc,
		//line sql.y: 3710
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3713
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3744
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3745
		Category: hMisc,
		//line sql.y: 3746
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3749
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3780
	`CANCEL ALL JOBS`: {
		//line sql.y: 3781
		Category: hMisc,
		//line sql.y: 3782
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 3841
	`CREATE`: {
		//line sql.y: 3842
		Category: hGroup,
		//line sql.y: 3843
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3858
	`CREATE EXTENSION`: {
		//line sql.y: 3859
		Category: hCfg,
		//line sql.y: 3860
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4189
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4190
		Category: hMisc,
		//line sql.y: 4191
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4284
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4285
		Category: hCCL,
		//line sql.y: 4286
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4376
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4377
		Category: hDML,
		//line sql.y: 4378
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4382
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4402
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4403
		Category: hCfg,
		//line sql.y: 4404
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4416
	`DROP`: {
		//line sql.y: 4417
		Category: hGroup,
		//line sql.y: 4418
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4437
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4438
		Category: hDDL,
		//line sql.y: 4439
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4440
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4470
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4471
		Category: hDDL,
		//line sql.y: 4472
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4473
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4485
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4486
		Category: hDDL,
		//line sql.y: 4487
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4488
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4500
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4501
		Category: hDDL,
		//line sql.y: 4502
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4503
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4525
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4526
		Category: hDDL,
		//line sql.y: 4527
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4528
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4548
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4549
		Category: hDDL,
		//line sql.y: 4550
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 4586
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 4587
		Category: hDDL,
		//line sql.y: 4588
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 4608
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 4609
		Category: hPriv,
		//line sql.y: 4610
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 4611
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4635
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4636
		Category: hMisc,
		//line sql.y: 4637
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4640
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4663
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4664
		Category: hMisc,
		//line sql.y: 4665
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4679
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4790
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 4791
		Category: hCCL,
		//line sql.y: 4792
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 4843
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 4844
		Category: hCCL,
		//line sql.y: 4845
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 4899
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4900
		Category: hMisc,
		//line sql.y: 4901
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4902
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4933
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4934
		Category: hMisc,
		//line sql.y: 4935
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4936
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4966
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4967
		Category: hMisc,
		//line sql.y: 4968
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4969
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4989
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4990
		Category: hPriv,
		//line sql.y: 4991
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5007
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5077
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5078
		Category: hPriv,
		//line sql.y: 5079
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5095
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5234
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5235
		Category: hCfg,
		//line sql.y: 5236
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5237
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5253
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5254
		Category: hCfg,
		//line sql.y: 5255
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5256
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5265
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5266
		Category: hCfg,
		//line sql.y: 5267
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5270
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5291
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5292
		Category: hExperimental,
		//line sql.y: 5293
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5301
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5307
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5308
		Category: hExperimental,
		//line sql.y: 5309
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5317
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5325
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5326
		Category: hExperimental,
		//line sql.y: 5327
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5338
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5393
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5394
		Category: hCfg,
		//line sql.y: 5395
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5396
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5405
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5406
		Category: hCfg,
		//line sql.y: 5407
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5410
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5447
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5448
		Category: hCfg,
		//line sql.y: 5449
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5455
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5486
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 5487
		Category: hCfg,
		//line sql.y: 5488
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 5492
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5503
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 5504
		Category: hTxn,
		//line sql.y: 5505
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 5514
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 5711
	`SHOW`: {
		//line sql.y: 5712
		Category: hGroup,
		//line sql.y: 5713
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS, SHOW
STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 5766
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 5767
		Category: hMisc,
		//line sql.y: 5768
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 5769
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 5785
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 5786
		Category: hMisc,
		//line sql.y: 5787
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 5788
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 5857
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 5858
		Category: hMisc,
		//line sql.y: 5859
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5860
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 5870
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 5871
		Category: hMisc,
		//line sql.y: 5872
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5873
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6009
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6010
		Category: hCfg,
		//line sql.y: 6011
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6012
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6056
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 6057
		Category: hExperimental,
		//line sql.y: 6058
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 6065
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6078
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6079
		Category: hExperimental,
		//line sql.y: 6080
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6084
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6097
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6098
		Category: hCCL,
		//line sql.y: 6099
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6100
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6179
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6180
		Category: hCfg,
		//line sql.y: 6181
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6184
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6230
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6231
		Category: hDDL,
		//line sql.y: 6232
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6233
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6241
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6242
		Category: hDDL,
		//line sql.y: 6243
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6244
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 6264
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 6265
		Category: hDDL,
		//line sql.y: 6266
		Text: `SHOW DATABASES
`,
		//line sql.y: 6267
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 6275
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 6276
		Category: hDDL,
		//line sql.y: 6277
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 6293
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 6294
		Category: hMisc,
		//line sql.y: 6295
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 6323
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 6324
		Category: hMisc,
		//line sql.y: 6325
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6333
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6334
		Category: hPriv,
		//line sql.y: 6335
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6341
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6354
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6355
		Category: hDDL,
		//line sql.y: 6356
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6357
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 6387
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 6388
		Category: hDDL,
		//line sql.y: 6389
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 6390
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 6403
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 6404
		Category: hMisc,
		//line sql.y: 6405
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 6406
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 6433
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 6434
		Category: hMisc,
		//line sql.y: 6435
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 6439
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6501
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 6502
		Category: hMisc,
		//line sql.y: 6503
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 6506
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6557
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 6558
		Category: hMisc,
		//line sql.y: 6559
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 6561
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 6584
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 6585
		Category: hMisc,
		//line sql.y: 6586
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 6587
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 6600
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 6601
		Category: hDDL,
		//line sql.y: 6602
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 6603
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 6631
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 6632
		Category: hMisc,
		//line sql.y: 6633
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 6650
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 6651
		Category: hDDL,
		//line sql.y: 6652
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 6664
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 6665
		Category: hDDL,
		//line sql.y: 6666
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 6678
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 6679
		Category: hMisc,
		//line sql.y: 6680
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 6718
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 6719
		Category: hCfg,
		//line sql.y: 6720
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 6728
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 6729
		Category: hCfg,
		//line sql.y: 6730
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 6731
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6750
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 6751
		Category: hMisc,
		//line sql.y: 6752
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 6764
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 6765
		Category: hDDL,
		//line sql.y: 6766
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 6771
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 6820
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 6821
		Category: hDDL,
		//line sql.y: 6822
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 6825
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6838
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 6839
		Category: hPriv,
		//line sql.y: 6840
		Text: `SHOW USERS
`,
		//line sql.y: 6841
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 6849
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 6850
		Category: hPriv,
		//line sql.y: 6851
		Text: `SHOW ROLES
`,
		//line sql.y: 6852
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 6860
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 6861
		Category: hCfg,
		//line sql.y: 6862
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 6865
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 6921
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 6922
		Category: hMisc,
		//line sql.y: 6923
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 6944
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 6945
		Category: hMisc,
		//line sql.y: 6946
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 6965
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 6966
		Category: hDDL,
		//line sql.y: 6967
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 6982
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 6983
		Category: hDDL,
		//line sql.y: 6984
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 7337
	`PAUSE`: {
		//line sql.y: 7338
		Category: hMisc,
		//line sql.y: 7339
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 7350
	`RESUME`: {
		//line sql.y: 7351
		Category: hMisc,
		//line sql.y: 7352
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 7363
	`RESUME ALL JOBS`: {
		//line sql.y: 7364
		Category: hMisc,
		//line sql.y: 7365
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7374
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 7375
		Category: hMisc,
		//line sql.y: 7376
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 7379
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7428
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 7429
		Category: hMisc,
		//line sql.y: 7430
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 7434
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7455
	`PAUSE ALL JOBS`: {
		//line sql.y: 7456
		Category: hMisc,
		//line sql.y: 7457
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7467
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 7468
		Category: hDDL,
		//line sql.y: 7469
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 7502
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 7503
		Category: hDDL,
		//line sql.y: 7504
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 7530
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 7531
		Category: hDDL,
		//line sql.y: 7532
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 7559
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 8495
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 8496
		Category: hDDL,
		//line sql.y: 8497
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 8508
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 8591
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 8592
		Category: hDML,
		//line sql.y: 8593
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 8594
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 8618
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 8619
		Category: hPriv,
		//line sql.y: 8620
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 8621
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8633
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 8634
		Category: hPriv,
		//line sql.y: 8635
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 8639
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8717
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 8718
		Category: hDDL,
		//line sql.y: 8719
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 8722
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 8936
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 8937
		Category: hDDL,
		//line sql.y: 8938
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 8990
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 8991
		Category: hDDL,
		//line sql.y: 8992
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 8999
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 9492
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 9493
		Category: hDDL,
		//line sql.y: 9494
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 9641
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 9642
		Category: hTxn,
		//line sql.y: 9643
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9644
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9652
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 9653
		Category: hMisc,
		//line sql.y: 9654
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 9657
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 9679
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 9680
		Category: hMisc,
		//line sql.y: 9681
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 9687
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 9708
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 9709
		Category: hMisc,
		//line sql.y: 9710
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 9716
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 9737
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 9738
		Category: hTxn,
		//line sql.y: 9739
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 9740
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9755
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 9756
		Category: hTxn,
		//line sql.y: 9757
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 9765
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 9773
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 9774
		Category: hTxn,
		//line sql.y: 9775
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 9778
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 9797
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 9798
		Category: hTxn,
		//line sql.y: 9799
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9802
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 9938
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 9939
		Category: hDDL,
		//line sql.y: 9940
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 9941
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 10118
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 10119
		Category: hDML,
		//line sql.y: 10120
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 10128
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 10147
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 10148
		Category: hDML,
		//line sql.y: 10149
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 10153
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 10283
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 10284
		Category: hDML,
		//line sql.y: 10285
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 10292
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 10348
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 10349
		Category: hPriv,
		//line sql.y: 10350
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 10352
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 10363
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 10364
		Category: hPriv,
		//line sql.y: 10365
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 10367
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 10547
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 10548
		Category: hDML,
		//line sql.y: 10549
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 10560
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 10561
		Category: hDML,
		//line sql.y: 10562
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 10574
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 10649
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 10650
		Category: hDML,
		//line sql.y: 10651
		Text: `TABLE <tablename>
`,
		//line sql.y: 10652
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11014
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 11015
		Category: hDML,
		//line sql.y: 11016
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 11017
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11152
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 11153
		Category: hDML,
		//line sql.y: 11154
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 11179
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
