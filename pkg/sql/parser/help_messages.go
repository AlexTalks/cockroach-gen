// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1335
	`ALTER`: {
		//line sql.y: 1336
		Category: hGroup,
		//line sql.y: 1337
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1355
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1356
		Category: hDDL,
		//line sql.y: 1357
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1397
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1414
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1415
		Category: hDDL,
		//line sql.y: 1416
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1435
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1440
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1441
		Category: hDDL,
		//line sql.y: 1442
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1445
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1454
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1455
		Category: hDDL,
		//line sql.y: 1456
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1482
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1483
		Category: hDDL,
		//line sql.y: 1484
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1492
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1556
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1557
		Category: hDDL,
		//line sql.y: 1558
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1570
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1575
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1576
		Category: hDDL,
		//line sql.y: 1577
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1593
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2145
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2146
		Category: hDDL,
		//line sql.y: 2147
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2163
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2314
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2315
		Category: hMisc,
		//line sql.y: 2316
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2343
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2344
		Category: hCCL,
		//line sql.y: 2345
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2365
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2470
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2471
		Category: hCCL,
		//line sql.y: 2472
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2541
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2619
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2620
		Category: hCCL,
		//line sql.y: 2621
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2642
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2800
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2801
		Category: hCCL,
		//line sql.y: 2802
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2830
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2874
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2875
		Category: hCCL,
		//line sql.y: 2876
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2885
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3037
	`CANCEL`: {
		//line sql.y: 3038
		Category: hGroup,
		//line sql.y: 3039
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3046
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3047
		Category: hMisc,
		//line sql.y: 3048
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3051
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3073
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3074
		Category: hMisc,
		//line sql.y: 3075
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3078
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3109
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3110
		Category: hMisc,
		//line sql.y: 3111
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3114
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3185
	`CREATE`: {
		//line sql.y: 3186
		Category: hGroup,
		//line sql.y: 3187
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3202
	`CREATE EXTENSION`: {
		//line sql.y: 3203
		Category: hCfg,
		//line sql.y: 3204
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3282
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3283
		Category: hMisc,
		//line sql.y: 3284
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3377
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3378
		Category: hCCL,
		//line sql.y: 3379
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3434
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3435
		Category: hCCL,
		//line sql.y: 3436
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3443
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3493
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3494
		Category: hDML,
		//line sql.y: 3495
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3499
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3519
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3520
		Category: hCfg,
		//line sql.y: 3521
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3533
	`DROP`: {
		//line sql.y: 3534
		Category: hGroup,
		//line sql.y: 3535
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3554
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3555
		Category: hDDL,
		//line sql.y: 3556
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3557
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3587
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3588
		Category: hDDL,
		//line sql.y: 3589
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3590
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3602
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3603
		Category: hDDL,
		//line sql.y: 3604
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3605
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3617
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3618
		Category: hDDL,
		//line sql.y: 3619
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3620
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3642
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3643
		Category: hDDL,
		//line sql.y: 3644
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3645
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3665
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3666
		Category: hDDL,
		//line sql.y: 3667
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3703
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3704
		Category: hDDL,
		//line sql.y: 3705
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3725
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3726
		Category: hPriv,
		//line sql.y: 3727
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3728
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3752
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3753
		Category: hMisc,
		//line sql.y: 3754
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3757
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3780
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3781
		Category: hMisc,
		//line sql.y: 3782
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3796
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3903
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3904
		Category: hMisc,
		//line sql.y: 3905
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3906
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3937
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3938
		Category: hMisc,
		//line sql.y: 3939
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3940
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3970
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3971
		Category: hMisc,
		//line sql.y: 3972
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3973
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3993
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3994
		Category: hPriv,
		//line sql.y: 3995
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 4010
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4048
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4049
		Category: hPriv,
		//line sql.y: 4050
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 4065
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4137
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4138
		Category: hCfg,
		//line sql.y: 4139
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4140
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4152
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4153
		Category: hCfg,
		//line sql.y: 4154
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4155
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4164
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4165
		Category: hCfg,
		//line sql.y: 4166
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4169
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4190
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4191
		Category: hExperimental,
		//line sql.y: 4192
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4200
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4206
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4207
		Category: hExperimental,
		//line sql.y: 4208
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4216
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4224
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4225
		Category: hExperimental,
		//line sql.y: 4226
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4237
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4292
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4293
		Category: hCfg,
		//line sql.y: 4294
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4295
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4316
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4317
		Category: hCfg,
		//line sql.y: 4318
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4324
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4341
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4342
		Category: hTxn,
		//line sql.y: 4343
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4352
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4544
	`SHOW`: {
		//line sql.y: 4545
		Category: hGroup,
		//line sql.y: 4546
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4630
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4631
		Category: hCfg,
		//line sql.y: 4632
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4633
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4654
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4655
		Category: hExperimental,
		//line sql.y: 4656
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4663
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4676
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4677
		Category: hExperimental,
		//line sql.y: 4678
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4682
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4695
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4696
		Category: hCCL,
		//line sql.y: 4697
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4698
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4752
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4753
		Category: hCfg,
		//line sql.y: 4754
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4757
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4783
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4784
		Category: hDDL,
		//line sql.y: 4785
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4786
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4794
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4795
		Category: hDDL,
		//line sql.y: 4796
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4797
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4817
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4818
		Category: hDDL,
		//line sql.y: 4819
		Text: `SHOW DATABASES
`,
		//line sql.y: 4820
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4828
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4829
		Category: hMisc,
		//line sql.y: 4830
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4858
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4859
		Category: hMisc,
		//line sql.y: 4860
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4868
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4869
		Category: hPriv,
		//line sql.y: 4870
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4876
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4889
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4890
		Category: hDDL,
		//line sql.y: 4891
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4892
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4922
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4923
		Category: hDDL,
		//line sql.y: 4924
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4925
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4938
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 4939
		Category: hMisc,
		//line sql.y: 4940
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 4941
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4968
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4969
		Category: hMisc,
		//line sql.y: 4970
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4974
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5018
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5019
		Category: hMisc,
		//line sql.y: 5020
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5023
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5070
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5071
		Category: hMisc,
		//line sql.y: 5072
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5074
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5097
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5098
		Category: hMisc,
		//line sql.y: 5099
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5100
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5113
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5114
		Category: hDDL,
		//line sql.y: 5115
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5116
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5144
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5145
		Category: hMisc,
		//line sql.y: 5146
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5163
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5164
		Category: hDDL,
		//line sql.y: 5165
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5177
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5178
		Category: hDDL,
		//line sql.y: 5179
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5191
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5192
		Category: hMisc,
		//line sql.y: 5193
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5209
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5210
		Category: hCfg,
		//line sql.y: 5211
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5219
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5220
		Category: hCfg,
		//line sql.y: 5221
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5222
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5241
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5242
		Category: hDDL,
		//line sql.y: 5243
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5246
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5268
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5269
		Category: hPriv,
		//line sql.y: 5270
		Text: `SHOW USERS
`,
		//line sql.y: 5271
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5279
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5280
		Category: hPriv,
		//line sql.y: 5281
		Text: `SHOW ROLES
`,
		//line sql.y: 5282
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5290
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5291
		Category: hCfg,
		//line sql.y: 5292
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5295
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5351
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5352
		Category: hMisc,
		//line sql.y: 5353
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5374
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5375
		Category: hMisc,
		//line sql.y: 5376
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5395
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5396
		Category: hDDL,
		//line sql.y: 5397
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5412
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5413
		Category: hDDL,
		//line sql.y: 5414
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5702
	`PAUSE`: {
		//line sql.y: 5703
		Category: hMisc,
		//line sql.y: 5704
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5714
	`RESUME`: {
		//line sql.y: 5715
		Category: hMisc,
		//line sql.y: 5716
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5726
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5727
		Category: hMisc,
		//line sql.y: 5728
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5731
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5766
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5767
		Category: hMisc,
		//line sql.y: 5768
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5772
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5793
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5794
		Category: hDDL,
		//line sql.y: 5795
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5828
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5829
		Category: hDDL,
		//line sql.y: 5830
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5856
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5857
		Category: hDDL,
		//line sql.y: 5858
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE [WITHOUT INDEX] ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE |UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5888
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6808
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6809
		Category: hDDL,
		//line sql.y: 6810
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6820
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6884
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6885
		Category: hDML,
		//line sql.y: 6886
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6887
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6905
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6906
		Category: hPriv,
		//line sql.y: 6907
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6908
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6920
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6921
		Category: hPriv,
		//line sql.y: 6922
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6923
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6952
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6953
		Category: hDDL,
		//line sql.y: 6954
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6955
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7130
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7131
		Category: hDDL,
		//line sql.y: 7132
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7184
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7185
		Category: hDDL,
		//line sql.y: 7186
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7196
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7707
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7708
		Category: hTxn,
		//line sql.y: 7709
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7710
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7718
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7719
		Category: hMisc,
		//line sql.y: 7720
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7723
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7745
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7746
		Category: hMisc,
		//line sql.y: 7747
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7753
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7774
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7775
		Category: hMisc,
		//line sql.y: 7776
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7782
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7803
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7804
		Category: hTxn,
		//line sql.y: 7805
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7806
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7821
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7822
		Category: hTxn,
		//line sql.y: 7823
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7831
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7844
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7845
		Category: hTxn,
		//line sql.y: 7846
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7849
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7873
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7874
		Category: hTxn,
		//line sql.y: 7875
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7878
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7992
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7993
		Category: hDDL,
		//line sql.y: 7994
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7995
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8138
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8139
		Category: hDML,
		//line sql.y: 8140
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8148
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8167
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8168
		Category: hDML,
		//line sql.y: 8169
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8173
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8289
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8290
		Category: hDML,
		//line sql.y: 8291
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8298
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8354
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8355
		Category: hPriv,
		//line sql.y: 8356
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8358
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8369
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8370
		Category: hPriv,
		//line sql.y: 8371
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8373
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8553
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8554
		Category: hDML,
		//line sql.y: 8555
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8566
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8567
		Category: hDML,
		//line sql.y: 8568
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8580
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8655
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8656
		Category: hDML,
		//line sql.y: 8657
		Text: `TABLE <tablename>
`,
		//line sql.y: 8658
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9032
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9033
		Category: hDML,
		//line sql.y: 9034
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9035
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9144
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9145
		Category: hDML,
		//line sql.y: 9146
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9168
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
