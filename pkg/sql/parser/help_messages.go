// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1650
	`ALTER`: {
		//line sql.y: 1651
		Category: hGroup,
		//line sql.y: 1652
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1674
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1675
		Category: hDDL,
		//line sql.y: 1676
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1719
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1735
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1736
		Category: hDDL,
		//line sql.y: 1737
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1756
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1761
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1762
		Category: hDDL,
		//line sql.y: 1763
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1766
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1775
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1776
		Category: hDDL,
		//line sql.y: 1777
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1806
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1807
		Category: hDDL,
		//line sql.y: 1808
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1820
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1956
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1957
		Category: hDDL,
		//line sql.y: 1958
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1974
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1980
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1981
		Category: hDDL,
		//line sql.y: 1982
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1999
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2642
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2643
		Category: hDDL,
		//line sql.y: 2644
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2660
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2809
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2810
		Category: hMisc,
		//line sql.y: 2811
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2838
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2839
		Category: hCCL,
		//line sql.y: 2840
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 2874
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2984
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2985
		Category: hCCL,
		//line sql.y: 2986
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3056
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3141
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3142
		Category: hCCL,
		//line sql.y: 3143
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3171
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3385
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3386
		Category: hCCL,
		//line sql.y: 3387
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3405
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3439
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3440
		Category: hCCL,
		//line sql.y: 3441
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3451
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3639
	`CANCEL`: {
		//line sql.y: 3640
		Category: hGroup,
		//line sql.y: 3641
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3649
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3650
		Category: hMisc,
		//line sql.y: 3651
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3654
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3676
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3677
		Category: hMisc,
		//line sql.y: 3678
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3681
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3712
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3713
		Category: hMisc,
		//line sql.y: 3714
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3717
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3748
	`CANCEL ALL JOBS`: {
		//line sql.y: 3749
		Category: hMisc,
		//line sql.y: 3750
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 3809
	`CREATE`: {
		//line sql.y: 3810
		Category: hGroup,
		//line sql.y: 3811
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3825
	`CREATE EXTENSION`: {
		//line sql.y: 3826
		Category: hCfg,
		//line sql.y: 3827
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4156
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4157
		Category: hMisc,
		//line sql.y: 4158
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4251
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4252
		Category: hCCL,
		//line sql.y: 4253
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4343
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4344
		Category: hDML,
		//line sql.y: 4345
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4349
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4369
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4370
		Category: hCfg,
		//line sql.y: 4371
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4383
	`DROP`: {
		//line sql.y: 4384
		Category: hGroup,
		//line sql.y: 4385
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4404
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4405
		Category: hDDL,
		//line sql.y: 4406
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4407
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4437
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4438
		Category: hDDL,
		//line sql.y: 4439
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4440
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4452
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4453
		Category: hDDL,
		//line sql.y: 4454
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4455
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4467
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4468
		Category: hDDL,
		//line sql.y: 4469
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4470
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4492
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4493
		Category: hDDL,
		//line sql.y: 4494
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4495
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4515
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4516
		Category: hDDL,
		//line sql.y: 4517
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 4553
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 4554
		Category: hDDL,
		//line sql.y: 4555
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 4575
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 4576
		Category: hPriv,
		//line sql.y: 4577
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 4578
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4602
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4603
		Category: hMisc,
		//line sql.y: 4604
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4607
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4630
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4631
		Category: hMisc,
		//line sql.y: 4632
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4646
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4757
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 4758
		Category: hCCL,
		//line sql.y: 4759
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 4810
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 4811
		Category: hCCL,
		//line sql.y: 4812
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 4866
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4867
		Category: hMisc,
		//line sql.y: 4868
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4869
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4900
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4901
		Category: hMisc,
		//line sql.y: 4902
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4903
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4933
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4934
		Category: hMisc,
		//line sql.y: 4935
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4936
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4956
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4957
		Category: hPriv,
		//line sql.y: 4958
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4974
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5044
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5045
		Category: hPriv,
		//line sql.y: 5046
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5062
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5201
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5202
		Category: hCfg,
		//line sql.y: 5203
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5204
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5220
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5221
		Category: hCfg,
		//line sql.y: 5222
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5223
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5232
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5233
		Category: hCfg,
		//line sql.y: 5234
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5237
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5258
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5259
		Category: hExperimental,
		//line sql.y: 5260
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5268
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5274
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5275
		Category: hExperimental,
		//line sql.y: 5276
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5284
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5292
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5293
		Category: hExperimental,
		//line sql.y: 5294
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5305
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5360
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5361
		Category: hCfg,
		//line sql.y: 5362
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5363
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5372
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5373
		Category: hCfg,
		//line sql.y: 5374
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5377
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5414
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5415
		Category: hCfg,
		//line sql.y: 5416
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5422
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5453
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 5454
		Category: hCfg,
		//line sql.y: 5455
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 5459
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5470
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 5471
		Category: hTxn,
		//line sql.y: 5472
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 5481
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 5678
	`SHOW`: {
		//line sql.y: 5679
		Category: hGroup,
		//line sql.y: 5680
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS, SHOW
STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 5733
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 5734
		Category: hMisc,
		//line sql.y: 5735
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 5736
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 5752
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 5753
		Category: hMisc,
		//line sql.y: 5754
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 5755
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 5824
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 5825
		Category: hMisc,
		//line sql.y: 5826
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5827
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 5837
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 5838
		Category: hMisc,
		//line sql.y: 5839
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5840
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 5976
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 5977
		Category: hCfg,
		//line sql.y: 5978
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 5979
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6023
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 6024
		Category: hExperimental,
		//line sql.y: 6025
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 6032
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6045
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6046
		Category: hExperimental,
		//line sql.y: 6047
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6051
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6064
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6065
		Category: hCCL,
		//line sql.y: 6066
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6067
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6146
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6147
		Category: hCfg,
		//line sql.y: 6148
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6151
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6197
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6198
		Category: hDDL,
		//line sql.y: 6199
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6200
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6208
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6209
		Category: hDDL,
		//line sql.y: 6210
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6211
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 6231
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 6232
		Category: hDDL,
		//line sql.y: 6233
		Text: `SHOW DATABASES
`,
		//line sql.y: 6234
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 6242
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 6243
		Category: hDDL,
		//line sql.y: 6244
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 6260
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 6261
		Category: hMisc,
		//line sql.y: 6262
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 6290
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 6291
		Category: hMisc,
		//line sql.y: 6292
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6300
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6301
		Category: hPriv,
		//line sql.y: 6302
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6308
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6321
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6322
		Category: hDDL,
		//line sql.y: 6323
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6324
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 6354
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 6355
		Category: hDDL,
		//line sql.y: 6356
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 6357
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 6370
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 6371
		Category: hMisc,
		//line sql.y: 6372
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 6373
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 6400
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 6401
		Category: hMisc,
		//line sql.y: 6402
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 6406
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6468
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 6469
		Category: hMisc,
		//line sql.y: 6470
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 6473
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6524
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 6525
		Category: hMisc,
		//line sql.y: 6526
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 6528
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 6551
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 6552
		Category: hMisc,
		//line sql.y: 6553
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 6554
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 6567
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 6568
		Category: hDDL,
		//line sql.y: 6569
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 6570
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 6598
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 6599
		Category: hMisc,
		//line sql.y: 6600
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 6617
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 6618
		Category: hDDL,
		//line sql.y: 6619
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 6631
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 6632
		Category: hDDL,
		//line sql.y: 6633
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 6645
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 6646
		Category: hMisc,
		//line sql.y: 6647
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 6685
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 6686
		Category: hCfg,
		//line sql.y: 6687
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 6695
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 6696
		Category: hCfg,
		//line sql.y: 6697
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 6698
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6717
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 6718
		Category: hMisc,
		//line sql.y: 6719
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 6731
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 6732
		Category: hDDL,
		//line sql.y: 6733
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 6738
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 6787
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 6788
		Category: hDDL,
		//line sql.y: 6789
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 6792
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6805
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 6806
		Category: hPriv,
		//line sql.y: 6807
		Text: `SHOW USERS
`,
		//line sql.y: 6808
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 6816
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 6817
		Category: hPriv,
		//line sql.y: 6818
		Text: `SHOW ROLES
`,
		//line sql.y: 6819
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 6827
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 6828
		Category: hCfg,
		//line sql.y: 6829
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 6832
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 6888
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 6889
		Category: hMisc,
		//line sql.y: 6890
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 6911
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 6912
		Category: hMisc,
		//line sql.y: 6913
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 6932
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 6933
		Category: hDDL,
		//line sql.y: 6934
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 6949
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 6950
		Category: hDDL,
		//line sql.y: 6951
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 7304
	`PAUSE`: {
		//line sql.y: 7305
		Category: hMisc,
		//line sql.y: 7306
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 7317
	`RESUME`: {
		//line sql.y: 7318
		Category: hMisc,
		//line sql.y: 7319
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 7330
	`RESUME ALL JOBS`: {
		//line sql.y: 7331
		Category: hMisc,
		//line sql.y: 7332
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7341
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 7342
		Category: hMisc,
		//line sql.y: 7343
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 7346
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7395
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 7396
		Category: hMisc,
		//line sql.y: 7397
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 7401
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7422
	`PAUSE ALL JOBS`: {
		//line sql.y: 7423
		Category: hMisc,
		//line sql.y: 7424
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7434
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 7435
		Category: hDDL,
		//line sql.y: 7436
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 7469
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 7470
		Category: hDDL,
		//line sql.y: 7471
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 7497
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 7498
		Category: hDDL,
		//line sql.y: 7499
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 7526
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 8462
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 8463
		Category: hDDL,
		//line sql.y: 8464
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 8475
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 8558
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 8559
		Category: hDML,
		//line sql.y: 8560
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 8561
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 8585
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 8586
		Category: hPriv,
		//line sql.y: 8587
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 8588
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8600
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 8601
		Category: hPriv,
		//line sql.y: 8602
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 8606
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8684
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 8685
		Category: hDDL,
		//line sql.y: 8686
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 8689
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 8903
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 8904
		Category: hDDL,
		//line sql.y: 8905
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 8957
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 8958
		Category: hDDL,
		//line sql.y: 8959
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 8966
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 9459
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 9460
		Category: hDDL,
		//line sql.y: 9461
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 9608
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 9609
		Category: hTxn,
		//line sql.y: 9610
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9611
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9619
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 9620
		Category: hMisc,
		//line sql.y: 9621
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 9624
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 9646
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 9647
		Category: hMisc,
		//line sql.y: 9648
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 9654
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 9675
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 9676
		Category: hMisc,
		//line sql.y: 9677
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 9683
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 9704
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 9705
		Category: hTxn,
		//line sql.y: 9706
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 9707
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9722
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 9723
		Category: hTxn,
		//line sql.y: 9724
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 9732
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 9740
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 9741
		Category: hTxn,
		//line sql.y: 9742
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 9745
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 9764
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 9765
		Category: hTxn,
		//line sql.y: 9766
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9769
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 9905
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 9906
		Category: hDDL,
		//line sql.y: 9907
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 9908
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 10085
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 10086
		Category: hDML,
		//line sql.y: 10087
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 10095
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 10114
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 10115
		Category: hDML,
		//line sql.y: 10116
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 10120
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 10250
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 10251
		Category: hDML,
		//line sql.y: 10252
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 10259
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 10315
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 10316
		Category: hPriv,
		//line sql.y: 10317
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 10319
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 10330
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 10331
		Category: hPriv,
		//line sql.y: 10332
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 10334
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 10514
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 10515
		Category: hDML,
		//line sql.y: 10516
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 10527
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 10528
		Category: hDML,
		//line sql.y: 10529
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 10541
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 10616
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 10617
		Category: hDML,
		//line sql.y: 10618
		Text: `TABLE <tablename>
`,
		//line sql.y: 10619
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 10981
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 10982
		Category: hDML,
		//line sql.y: 10983
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 10984
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11119
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 11120
		Category: hDML,
		//line sql.y: 11121
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 11146
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
