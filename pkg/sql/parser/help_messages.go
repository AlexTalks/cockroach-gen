// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1677
	`ALTER`: {
		//line sql.y: 1678
		Category: hGroup,
		//line sql.y: 1679
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1702
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1703
		Category: hDDL,
		//line sql.y: 1704
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1747
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1763
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1764
		Category: hDDL,
		//line sql.y: 1765
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1784
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1789
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1790
		Category: hDDL,
		//line sql.y: 1791
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1794
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1803
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1804
		Category: hDDL,
		//line sql.y: 1805
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1834
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1835
		Category: hDDL,
		//line sql.y: 1836
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1849
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 2055
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2056
		Category: hDDL,
		//line sql.y: 2057
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2073
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2079
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2080
		Category: hDDL,
		//line sql.y: 2081
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2098
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2757
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2758
		Category: hDDL,
		//line sql.y: 2759
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2775
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2924
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2925
		Category: hMisc,
		//line sql.y: 2926
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2953
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2954
		Category: hCCL,
		//line sql.y: 2955
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 2989
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3111
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3112
		Category: hCCL,
		//line sql.y: 3113
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3183
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3274
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3275
		Category: hMisc,
		//line sql.y: 3276
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3294
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3295
		Category: hMisc,
		//line sql.y: 3296
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3310
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3311
		Category: hCCL,
		//line sql.y: 3312
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3340
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3550
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3551
		Category: hCCL,
		//line sql.y: 3552
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3570
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3604
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3605
		Category: hCCL,
		//line sql.y: 3606
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3616
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3804
	`CANCEL`: {
		//line sql.y: 3805
		Category: hGroup,
		//line sql.y: 3806
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3814
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3815
		Category: hMisc,
		//line sql.y: 3816
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3819
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3841
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3842
		Category: hMisc,
		//line sql.y: 3843
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3846
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3877
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3878
		Category: hMisc,
		//line sql.y: 3879
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3882
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3913
	`CANCEL ALL JOBS`: {
		//line sql.y: 3914
		Category: hMisc,
		//line sql.y: 3915
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 3974
	`CREATE`: {
		//line sql.y: 3975
		Category: hGroup,
		//line sql.y: 3976
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3991
	`CREATE EXTENSION`: {
		//line sql.y: 3992
		Category: hCfg,
		//line sql.y: 3993
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4454
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4455
		Category: hMisc,
		//line sql.y: 4456
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4549
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4550
		Category: hCCL,
		//line sql.y: 4551
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4641
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4642
		Category: hDML,
		//line sql.y: 4643
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4647
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4667
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4668
		Category: hCfg,
		//line sql.y: 4669
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4681
	`DROP`: {
		//line sql.y: 4682
		Category: hGroup,
		//line sql.y: 4683
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4704
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4705
		Category: hDDL,
		//line sql.y: 4706
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4707
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4737
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4738
		Category: hDDL,
		//line sql.y: 4739
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4740
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4752
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4753
		Category: hDDL,
		//line sql.y: 4754
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4755
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4767
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4768
		Category: hDDL,
		//line sql.y: 4769
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4770
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4792
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4793
		Category: hDDL,
		//line sql.y: 4794
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4795
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4815
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4816
		Category: hDDL,
		//line sql.y: 4817
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 4853
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 4854
		Category: hDDL,
		//line sql.y: 4855
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 4875
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 4876
		Category: hPriv,
		//line sql.y: 4877
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 4878
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4902
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4903
		Category: hMisc,
		//line sql.y: 4904
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4907
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4930
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4931
		Category: hMisc,
		//line sql.y: 4932
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4946
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5057
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5058
		Category: hCCL,
		//line sql.y: 5059
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5110
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5111
		Category: hCCL,
		//line sql.y: 5112
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5166
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5167
		Category: hMisc,
		//line sql.y: 5168
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5169
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5200
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5201
		Category: hMisc,
		//line sql.y: 5202
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5203
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5233
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5234
		Category: hMisc,
		//line sql.y: 5235
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5236
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5256
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5257
		Category: hPriv,
		//line sql.y: 5258
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5274
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5344
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5345
		Category: hPriv,
		//line sql.y: 5346
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5362
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5512
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5513
		Category: hCfg,
		//line sql.y: 5514
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5515
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5531
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5532
		Category: hCfg,
		//line sql.y: 5533
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5534
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5543
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5544
		Category: hCfg,
		//line sql.y: 5545
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5548
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5569
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5570
		Category: hExperimental,
		//line sql.y: 5571
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5579
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5585
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5586
		Category: hExperimental,
		//line sql.y: 5587
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5595
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5603
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5604
		Category: hExperimental,
		//line sql.y: 5605
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5616
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5671
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5672
		Category: hCfg,
		//line sql.y: 5673
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5674
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5683
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5684
		Category: hCfg,
		//line sql.y: 5685
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5688
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5725
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5726
		Category: hCfg,
		//line sql.y: 5727
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5733
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5764
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 5765
		Category: hCfg,
		//line sql.y: 5766
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 5770
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5781
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 5782
		Category: hTxn,
		//line sql.y: 5783
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 5792
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 5989
	`SHOW`: {
		//line sql.y: 5990
		Category: hGroup,
		//line sql.y: 5991
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS, SHOW
STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 6044
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6045
		Category: hMisc,
		//line sql.y: 6046
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6047
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6063
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6064
		Category: hMisc,
		//line sql.y: 6065
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6066
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6135
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6136
		Category: hMisc,
		//line sql.y: 6137
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6138
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6148
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6149
		Category: hMisc,
		//line sql.y: 6150
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6151
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6287
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6288
		Category: hCfg,
		//line sql.y: 6289
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6290
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6334
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 6335
		Category: hExperimental,
		//line sql.y: 6336
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 6343
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6356
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6357
		Category: hExperimental,
		//line sql.y: 6358
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6362
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6375
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6376
		Category: hCCL,
		//line sql.y: 6377
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6378
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6457
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6458
		Category: hCfg,
		//line sql.y: 6459
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6462
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6508
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6509
		Category: hDDL,
		//line sql.y: 6510
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6511
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6519
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6520
		Category: hDDL,
		//line sql.y: 6521
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6522
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 6542
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 6543
		Category: hDDL,
		//line sql.y: 6544
		Text: `SHOW DATABASES
`,
		//line sql.y: 6545
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 6553
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 6554
		Category: hDDL,
		//line sql.y: 6555
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 6571
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 6572
		Category: hMisc,
		//line sql.y: 6573
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 6601
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 6602
		Category: hMisc,
		//line sql.y: 6603
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6611
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6612
		Category: hPriv,
		//line sql.y: 6613
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6619
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6632
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6633
		Category: hDDL,
		//line sql.y: 6634
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6635
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 6665
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 6666
		Category: hDDL,
		//line sql.y: 6667
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 6668
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 6681
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 6682
		Category: hMisc,
		//line sql.y: 6683
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 6684
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 6711
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 6712
		Category: hMisc,
		//line sql.y: 6713
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 6717
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6779
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 6780
		Category: hMisc,
		//line sql.y: 6781
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 6784
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6835
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 6836
		Category: hMisc,
		//line sql.y: 6837
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 6839
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 6862
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 6863
		Category: hMisc,
		//line sql.y: 6864
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 6865
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 6878
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 6879
		Category: hDDL,
		//line sql.y: 6880
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 6881
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 6909
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 6910
		Category: hMisc,
		//line sql.y: 6911
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 6928
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 6929
		Category: hDDL,
		//line sql.y: 6930
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 6942
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 6943
		Category: hDDL,
		//line sql.y: 6944
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 6956
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 6957
		Category: hMisc,
		//line sql.y: 6958
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 6996
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 6997
		Category: hCfg,
		//line sql.y: 6998
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7006
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7007
		Category: hCfg,
		//line sql.y: 7008
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7009
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7028
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7029
		Category: hMisc,
		//line sql.y: 7030
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7042
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7043
		Category: hDDL,
		//line sql.y: 7044
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7049
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7098
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7099
		Category: hDDL,
		//line sql.y: 7100
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7103
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7116
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7117
		Category: hPriv,
		//line sql.y: 7118
		Text: `SHOW USERS
`,
		//line sql.y: 7119
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7127
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7128
		Category: hPriv,
		//line sql.y: 7129
		Text: `SHOW ROLES
`,
		//line sql.y: 7130
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7138
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7139
		Category: hCfg,
		//line sql.y: 7140
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7143
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7199
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7200
		Category: hMisc,
		//line sql.y: 7201
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7222
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7223
		Category: hMisc,
		//line sql.y: 7224
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 7243
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 7244
		Category: hDDL,
		//line sql.y: 7245
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 7260
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 7261
		Category: hDDL,
		//line sql.y: 7262
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 7619
	`PAUSE`: {
		//line sql.y: 7620
		Category: hMisc,
		//line sql.y: 7621
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 7632
	`RESUME`: {
		//line sql.y: 7633
		Category: hMisc,
		//line sql.y: 7634
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 7645
	`RESUME ALL JOBS`: {
		//line sql.y: 7646
		Category: hMisc,
		//line sql.y: 7647
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7656
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 7657
		Category: hMisc,
		//line sql.y: 7658
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 7661
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7710
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 7711
		Category: hMisc,
		//line sql.y: 7712
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 7716
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7737
	`PAUSE ALL JOBS`: {
		//line sql.y: 7738
		Category: hMisc,
		//line sql.y: 7739
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7749
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 7750
		Category: hDDL,
		//line sql.y: 7751
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 7784
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 7785
		Category: hDDL,
		//line sql.y: 7786
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 7812
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 7813
		Category: hDDL,
		//line sql.y: 7814
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 7841
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 8780
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 8781
		Category: hDDL,
		//line sql.y: 8782
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 8793
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 8876
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 8877
		Category: hDML,
		//line sql.y: 8878
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 8879
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 8903
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 8904
		Category: hPriv,
		//line sql.y: 8905
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 8906
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8918
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 8919
		Category: hPriv,
		//line sql.y: 8920
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 8924
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9002
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9003
		Category: hDDL,
		//line sql.y: 9004
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9007
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9221
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 9222
		Category: hDDL,
		//line sql.y: 9223
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 9275
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 9276
		Category: hDDL,
		//line sql.y: 9277
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 9284
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 9795
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 9796
		Category: hDDL,
		//line sql.y: 9797
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 9944
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 9945
		Category: hTxn,
		//line sql.y: 9946
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9947
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9955
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 9956
		Category: hMisc,
		//line sql.y: 9957
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 9960
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 9982
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 9983
		Category: hMisc,
		//line sql.y: 9984
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 9990
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10011
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10012
		Category: hMisc,
		//line sql.y: 10013
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10019
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10040
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10041
		Category: hTxn,
		//line sql.y: 10042
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10043
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10058
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10059
		Category: hTxn,
		//line sql.y: 10060
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10068
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10076
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10077
		Category: hTxn,
		//line sql.y: 10078
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10081
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10100
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10101
		Category: hTxn,
		//line sql.y: 10102
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10105
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 10241
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 10242
		Category: hDDL,
		//line sql.y: 10243
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 10244
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 10435
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 10436
		Category: hDML,
		//line sql.y: 10437
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 10445
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 10464
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 10465
		Category: hDML,
		//line sql.y: 10466
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 10470
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 10600
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 10601
		Category: hDML,
		//line sql.y: 10602
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 10609
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 10665
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 10666
		Category: hPriv,
		//line sql.y: 10667
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 10669
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 10680
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 10681
		Category: hPriv,
		//line sql.y: 10682
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 10684
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 10864
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 10865
		Category: hDML,
		//line sql.y: 10866
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 10877
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 10878
		Category: hDML,
		//line sql.y: 10879
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 10891
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 10966
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 10967
		Category: hDML,
		//line sql.y: 10968
		Text: `TABLE <tablename>
`,
		//line sql.y: 10969
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11331
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 11332
		Category: hDML,
		//line sql.y: 11333
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 11334
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11469
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 11470
		Category: hDML,
		//line sql.y: 11471
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 11496
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
