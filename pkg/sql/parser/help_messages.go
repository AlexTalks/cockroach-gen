// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1251
	`ALTER`: {
		//line sql.y: 1252
		Category: hGroup,
		//line sql.y: 1253
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1270
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1271
		Category: hDDL,
		//line sql.y: 1272
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1311
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1326
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1327
		Category: hDDL,
		//line sql.y: 1328
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1347
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1352
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1353
		Category: hDDL,
		//line sql.y: 1354
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1357
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1365
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1366
		Category: hDDL,
		//line sql.y: 1367
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1392
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1393
		Category: hDDL,
		//line sql.y: 1394
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1397
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1413
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1414
		Category: hDDL,
		//line sql.y: 1415
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1427
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1432
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1433
		Category: hDDL,
		//line sql.y: 1434
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1450
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1959
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1960
		Category: hDDL,
		//line sql.y: 1961
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1977
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2084
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2085
		Category: hMisc,
		//line sql.y: 2086
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2113
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2114
		Category: hCCL,
		//line sql.y: 2115
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2135
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2239
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2240
		Category: hCCL,
		//line sql.y: 2241
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2316
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2394
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2395
		Category: hCCL,
		//line sql.y: 2396
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2417
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2538
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2539
		Category: hCCL,
		//line sql.y: 2540
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2568
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2612
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2613
		Category: hCCL,
		//line sql.y: 2614
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2623
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2755
	`CANCEL`: {
		//line sql.y: 2756
		Category: hGroup,
		//line sql.y: 2757
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2764
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2765
		Category: hMisc,
		//line sql.y: 2766
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2769
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2791
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2792
		Category: hMisc,
		//line sql.y: 2793
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2796
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2827
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2828
		Category: hMisc,
		//line sql.y: 2829
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2832
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2902
	`CREATE`: {
		//line sql.y: 2903
		Category: hGroup,
		//line sql.y: 2904
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2982
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2983
		Category: hMisc,
		//line sql.y: 2984
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3127
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3128
		Category: hDML,
		//line sql.y: 3129
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3133
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3153
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3154
		Category: hCfg,
		//line sql.y: 3155
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3167
	`DROP`: {
		//line sql.y: 3168
		Category: hGroup,
		//line sql.y: 3169
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3188
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3189
		Category: hDDL,
		//line sql.y: 3190
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3191
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3221
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3222
		Category: hDDL,
		//line sql.y: 3223
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3224
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3236
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3237
		Category: hDDL,
		//line sql.y: 3238
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3239
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3251
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3252
		Category: hDDL,
		//line sql.y: 3253
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3254
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3276
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3277
		Category: hDDL,
		//line sql.y: 3278
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3279
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3299
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3300
		Category: hDDL,
		//line sql.y: 3301
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3337
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3338
		Category: hDDL,
		//line sql.y: 3339
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3369
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3370
		Category: hPriv,
		//line sql.y: 3371
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3372
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3396
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3397
		Category: hMisc,
		//line sql.y: 3398
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3401
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3424
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3425
		Category: hMisc,
		//line sql.y: 3426
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3439
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3546
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3547
		Category: hMisc,
		//line sql.y: 3548
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3549
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3580
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3581
		Category: hMisc,
		//line sql.y: 3582
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3583
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3613
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3614
		Category: hMisc,
		//line sql.y: 3615
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3616
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3636
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3637
		Category: hPriv,
		//line sql.y: 3638
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3653
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3683
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3684
		Category: hPriv,
		//line sql.y: 3685
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3700
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3768
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3769
		Category: hCfg,
		//line sql.y: 3770
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3771
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3783
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3784
		Category: hCfg,
		//line sql.y: 3785
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3786
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3795
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3796
		Category: hCfg,
		//line sql.y: 3797
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3800
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3821
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3822
		Category: hExperimental,
		//line sql.y: 3823
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3831
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3837
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3838
		Category: hExperimental,
		//line sql.y: 3839
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3847
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3855
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3856
		Category: hExperimental,
		//line sql.y: 3857
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3868
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3923
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3924
		Category: hCfg,
		//line sql.y: 3925
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3926
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3947
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3948
		Category: hCfg,
		//line sql.y: 3949
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3955
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3972
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3973
		Category: hTxn,
		//line sql.y: 3974
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 3983
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4175
	`SHOW`: {
		//line sql.y: 4176
		Category: hGroup,
		//line sql.y: 4177
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION, SHOW TYPES,
SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4250
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4251
		Category: hCfg,
		//line sql.y: 4252
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4253
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4274
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4275
		Category: hExperimental,
		//line sql.y: 4276
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4283
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4296
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4297
		Category: hExperimental,
		//line sql.y: 4298
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4302
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4315
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4316
		Category: hCCL,
		//line sql.y: 4317
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4318
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4372
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4373
		Category: hCfg,
		//line sql.y: 4374
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4377
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4403
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4404
		Category: hDDL,
		//line sql.y: 4405
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4406
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4414
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4415
		Category: hDDL,
		//line sql.y: 4416
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4417
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4437
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4438
		Category: hDDL,
		//line sql.y: 4439
		Text: `SHOW DATABASES
`,
		//line sql.y: 4440
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4448
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4449
		Category: hMisc,
		//line sql.y: 4450
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4458
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4459
		Category: hMisc,
		//line sql.y: 4460
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4468
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4469
		Category: hPriv,
		//line sql.y: 4470
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4476
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4489
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4490
		Category: hDDL,
		//line sql.y: 4491
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4492
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4522
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4523
		Category: hDDL,
		//line sql.y: 4524
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4525
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4538
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4539
		Category: hMisc,
		//line sql.y: 4540
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4541
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4562
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4563
		Category: hMisc,
		//line sql.y: 4564
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4568
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4612
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4613
		Category: hMisc,
		//line sql.y: 4614
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4617
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4664
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4665
		Category: hMisc,
		//line sql.y: 4666
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4668
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4691
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4692
		Category: hMisc,
		//line sql.y: 4693
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4694
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4707
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4708
		Category: hDDL,
		//line sql.y: 4709
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4710
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4742
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4743
		Category: hDDL,
		//line sql.y: 4744
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4756
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4757
		Category: hDDL,
		//line sql.y: 4758
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4770
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4771
		Category: hMisc,
		//line sql.y: 4772
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4781
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4782
		Category: hMisc,
		//line sql.y: 4783
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4791
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4792
		Category: hCfg,
		//line sql.y: 4793
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4801
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4802
		Category: hCfg,
		//line sql.y: 4803
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4804
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4823
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4824
		Category: hDDL,
		//line sql.y: 4825
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4826
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4844
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4845
		Category: hPriv,
		//line sql.y: 4846
		Text: `SHOW USERS
`,
		//line sql.y: 4847
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4855
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4856
		Category: hPriv,
		//line sql.y: 4857
		Text: `SHOW ROLES
`,
		//line sql.y: 4858
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4914
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4915
		Category: hMisc,
		//line sql.y: 4916
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4937
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4938
		Category: hMisc,
		//line sql.y: 4939
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5185
	`PAUSE`: {
		//line sql.y: 5186
		Category: hMisc,
		//line sql.y: 5187
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5197
	`RESUME`: {
		//line sql.y: 5198
		Category: hMisc,
		//line sql.y: 5199
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5209
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5210
		Category: hMisc,
		//line sql.y: 5211
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5214
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5249
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5250
		Category: hMisc,
		//line sql.y: 5251
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5255
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5276
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5277
		Category: hDDL,
		//line sql.y: 5278
		Text: `
CREATE SCHEMA [IF NOT EXISTS] <schemaname>
`,
	},
	//line sql.y: 5296
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5297
		Category: hDDL,
		//line sql.y: 5298
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5324
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5325
		Category: hDDL,
		//line sql.y: 5326
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5356
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6183
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6184
		Category: hDDL,
		//line sql.y: 6185
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6195
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6260
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6261
		Category: hDML,
		//line sql.y: 6262
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6263
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6281
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6282
		Category: hPriv,
		//line sql.y: 6283
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6284
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6296
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6297
		Category: hPriv,
		//line sql.y: 6298
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6299
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6328
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6329
		Category: hDDL,
		//line sql.y: 6330
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6331
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6498
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6499
		Category: hDDL,
		//line sql.y: 6500
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6543
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6544
		Category: hDDL,
		//line sql.y: 6545
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6555
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6885
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6886
		Category: hTxn,
		//line sql.y: 6887
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6888
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6896
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6897
		Category: hMisc,
		//line sql.y: 6898
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6901
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6923
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6924
		Category: hMisc,
		//line sql.y: 6925
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6931
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6952
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6953
		Category: hMisc,
		//line sql.y: 6954
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6960
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6981
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 6982
		Category: hTxn,
		//line sql.y: 6983
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 6984
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6999
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7000
		Category: hTxn,
		//line sql.y: 7001
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7009
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7022
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7023
		Category: hTxn,
		//line sql.y: 7024
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7027
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7051
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7052
		Category: hTxn,
		//line sql.y: 7053
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7056
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7170
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7171
		Category: hDDL,
		//line sql.y: 7172
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7173
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7242
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7243
		Category: hDML,
		//line sql.y: 7244
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7252
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7271
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7272
		Category: hDML,
		//line sql.y: 7273
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7277
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7393
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7394
		Category: hDML,
		//line sql.y: 7395
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7402
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7627
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7628
		Category: hDML,
		//line sql.y: 7629
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7640
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7641
		Category: hDML,
		//line sql.y: 7642
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7654
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7729
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7730
		Category: hDML,
		//line sql.y: 7731
		Text: `TABLE <tablename>
`,
		//line sql.y: 7732
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8089
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8090
		Category: hDML,
		//line sql.y: 8091
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8092
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8201
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8202
		Category: hDML,
		//line sql.y: 8203
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8225
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
