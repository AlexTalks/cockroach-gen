// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1604
	`ALTER`: {
		//line sql.y: 1605
		Category: hGroup,
		//line sql.y: 1606
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1628
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1629
		Category: hDDL,
		//line sql.y: 1630
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1673
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1689
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1690
		Category: hDDL,
		//line sql.y: 1691
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1710
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1715
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1716
		Category: hDDL,
		//line sql.y: 1717
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1720
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1729
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1730
		Category: hDDL,
		//line sql.y: 1731
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1760
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1761
		Category: hDDL,
		//line sql.y: 1762
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1774
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1910
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1911
		Category: hDDL,
		//line sql.y: 1912
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1928
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1934
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1935
		Category: hDDL,
		//line sql.y: 1936
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1953
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2596
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2597
		Category: hDDL,
		//line sql.y: 2598
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2614
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2763
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2764
		Category: hMisc,
		//line sql.y: 2765
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2792
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2793
		Category: hCCL,
		//line sql.y: 2794
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 2828
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2938
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2939
		Category: hCCL,
		//line sql.y: 2940
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3010
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3095
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3096
		Category: hCCL,
		//line sql.y: 3097
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3125
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3339
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3340
		Category: hCCL,
		//line sql.y: 3341
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3359
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3393
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3394
		Category: hCCL,
		//line sql.y: 3395
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3405
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3593
	`CANCEL`: {
		//line sql.y: 3594
		Category: hGroup,
		//line sql.y: 3595
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3603
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3604
		Category: hMisc,
		//line sql.y: 3605
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3608
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3630
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3631
		Category: hMisc,
		//line sql.y: 3632
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3635
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3666
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3667
		Category: hMisc,
		//line sql.y: 3668
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3671
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3702
	`CANCEL ALL JOBS`: {
		//line sql.y: 3703
		Category: hMisc,
		//line sql.y: 3704
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 3763
	`CREATE`: {
		//line sql.y: 3764
		Category: hGroup,
		//line sql.y: 3765
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3779
	`CREATE EXTENSION`: {
		//line sql.y: 3780
		Category: hCfg,
		//line sql.y: 3781
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3865
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3866
		Category: hMisc,
		//line sql.y: 3867
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3960
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3961
		Category: hCCL,
		//line sql.y: 3962
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4052
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4053
		Category: hDML,
		//line sql.y: 4054
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4058
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4078
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4079
		Category: hCfg,
		//line sql.y: 4080
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4092
	`DROP`: {
		//line sql.y: 4093
		Category: hGroup,
		//line sql.y: 4094
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4113
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4114
		Category: hDDL,
		//line sql.y: 4115
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4116
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4146
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4147
		Category: hDDL,
		//line sql.y: 4148
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4149
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4161
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4162
		Category: hDDL,
		//line sql.y: 4163
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4164
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4176
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4177
		Category: hDDL,
		//line sql.y: 4178
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4179
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4201
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4202
		Category: hDDL,
		//line sql.y: 4203
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4204
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4224
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4225
		Category: hDDL,
		//line sql.y: 4226
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 4262
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 4263
		Category: hDDL,
		//line sql.y: 4264
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 4284
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 4285
		Category: hPriv,
		//line sql.y: 4286
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 4287
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4311
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4312
		Category: hMisc,
		//line sql.y: 4313
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4316
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4339
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4340
		Category: hMisc,
		//line sql.y: 4341
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4355
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4466
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 4467
		Category: hCCL,
		//line sql.y: 4468
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 4519
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 4520
		Category: hCCL,
		//line sql.y: 4521
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 4575
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4576
		Category: hMisc,
		//line sql.y: 4577
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4578
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4609
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4610
		Category: hMisc,
		//line sql.y: 4611
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4612
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4642
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4643
		Category: hMisc,
		//line sql.y: 4644
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4645
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4665
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4666
		Category: hPriv,
		//line sql.y: 4667
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4683
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4753
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4754
		Category: hPriv,
		//line sql.y: 4755
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4771
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4910
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4911
		Category: hCfg,
		//line sql.y: 4912
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4913
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4929
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4930
		Category: hCfg,
		//line sql.y: 4931
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4932
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4941
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4942
		Category: hCfg,
		//line sql.y: 4943
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4946
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4967
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4968
		Category: hExperimental,
		//line sql.y: 4969
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4977
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4983
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4984
		Category: hExperimental,
		//line sql.y: 4985
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4993
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5001
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5002
		Category: hExperimental,
		//line sql.y: 5003
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5014
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5069
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5070
		Category: hCfg,
		//line sql.y: 5071
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5072
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5081
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5082
		Category: hCfg,
		//line sql.y: 5083
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5086
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5123
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5124
		Category: hCfg,
		//line sql.y: 5125
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5131
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5162
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 5163
		Category: hCfg,
		//line sql.y: 5164
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 5168
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5179
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 5180
		Category: hTxn,
		//line sql.y: 5181
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 5190
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 5387
	`SHOW`: {
		//line sql.y: 5388
		Category: hGroup,
		//line sql.y: 5389
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 5441
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 5442
		Category: hMisc,
		//line sql.y: 5443
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 5444
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 5460
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 5461
		Category: hMisc,
		//line sql.y: 5462
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 5463
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 5532
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 5533
		Category: hMisc,
		//line sql.y: 5534
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5535
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 5545
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 5546
		Category: hMisc,
		//line sql.y: 5547
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5548
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 5684
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 5685
		Category: hCfg,
		//line sql.y: 5686
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 5687
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5731
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 5732
		Category: hExperimental,
		//line sql.y: 5733
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 5740
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 5753
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 5754
		Category: hExperimental,
		//line sql.y: 5755
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 5759
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 5772
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 5773
		Category: hCCL,
		//line sql.y: 5774
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 5775
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 5854
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 5855
		Category: hCfg,
		//line sql.y: 5856
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 5859
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5905
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 5906
		Category: hDDL,
		//line sql.y: 5907
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 5908
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 5916
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 5917
		Category: hDDL,
		//line sql.y: 5918
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 5919
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 5939
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 5940
		Category: hDDL,
		//line sql.y: 5941
		Text: `SHOW DATABASES
`,
		//line sql.y: 5942
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 5950
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 5951
		Category: hDDL,
		//line sql.y: 5952
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 5968
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 5969
		Category: hMisc,
		//line sql.y: 5970
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 5998
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 5999
		Category: hMisc,
		//line sql.y: 6000
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6008
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6009
		Category: hPriv,
		//line sql.y: 6010
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6016
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6029
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6030
		Category: hDDL,
		//line sql.y: 6031
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6032
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 6062
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 6063
		Category: hDDL,
		//line sql.y: 6064
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 6065
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 6078
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 6079
		Category: hMisc,
		//line sql.y: 6080
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 6081
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 6108
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 6109
		Category: hMisc,
		//line sql.y: 6110
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 6114
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6176
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 6177
		Category: hMisc,
		//line sql.y: 6178
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 6181
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6232
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 6233
		Category: hMisc,
		//line sql.y: 6234
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 6236
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 6259
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 6260
		Category: hMisc,
		//line sql.y: 6261
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 6262
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 6275
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 6276
		Category: hDDL,
		//line sql.y: 6277
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 6278
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 6306
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 6307
		Category: hMisc,
		//line sql.y: 6308
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 6325
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 6326
		Category: hDDL,
		//line sql.y: 6327
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 6339
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 6340
		Category: hDDL,
		//line sql.y: 6341
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 6353
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 6354
		Category: hMisc,
		//line sql.y: 6355
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 6393
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 6394
		Category: hCfg,
		//line sql.y: 6395
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 6403
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 6404
		Category: hCfg,
		//line sql.y: 6405
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 6406
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6425
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 6426
		Category: hMisc,
		//line sql.y: 6427
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 6439
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 6440
		Category: hDDL,
		//line sql.y: 6441
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 6446
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 6486
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 6487
		Category: hDDL,
		//line sql.y: 6488
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 6491
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6504
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 6505
		Category: hPriv,
		//line sql.y: 6506
		Text: `SHOW USERS
`,
		//line sql.y: 6507
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 6515
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 6516
		Category: hPriv,
		//line sql.y: 6517
		Text: `SHOW ROLES
`,
		//line sql.y: 6518
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 6526
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 6527
		Category: hCfg,
		//line sql.y: 6528
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 6531
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 6587
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 6588
		Category: hMisc,
		//line sql.y: 6589
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 6610
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 6611
		Category: hMisc,
		//line sql.y: 6612
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 6631
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 6632
		Category: hDDL,
		//line sql.y: 6633
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 6648
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 6649
		Category: hDDL,
		//line sql.y: 6650
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 6964
	`PAUSE`: {
		//line sql.y: 6965
		Category: hMisc,
		//line sql.y: 6966
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 6977
	`RESUME`: {
		//line sql.y: 6978
		Category: hMisc,
		//line sql.y: 6979
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 6990
	`RESUME ALL JOBS`: {
		//line sql.y: 6991
		Category: hMisc,
		//line sql.y: 6992
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7001
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 7002
		Category: hMisc,
		//line sql.y: 7003
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 7006
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7055
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 7056
		Category: hMisc,
		//line sql.y: 7057
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 7061
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7082
	`PAUSE ALL JOBS`: {
		//line sql.y: 7083
		Category: hMisc,
		//line sql.y: 7084
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7094
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 7095
		Category: hDDL,
		//line sql.y: 7096
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 7129
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 7130
		Category: hDDL,
		//line sql.y: 7131
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 7157
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 7158
		Category: hDDL,
		//line sql.y: 7159
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 7186
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 8122
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 8123
		Category: hDDL,
		//line sql.y: 8124
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 8135
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 8218
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 8219
		Category: hDML,
		//line sql.y: 8220
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 8221
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 8245
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 8246
		Category: hPriv,
		//line sql.y: 8247
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 8248
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8260
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 8261
		Category: hPriv,
		//line sql.y: 8262
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 8266
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8344
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 8345
		Category: hDDL,
		//line sql.y: 8346
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 8347
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 8559
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 8560
		Category: hDDL,
		//line sql.y: 8561
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 8613
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 8614
		Category: hDDL,
		//line sql.y: 8615
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 8622
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 9115
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 9116
		Category: hDDL,
		//line sql.y: 9117
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 9264
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 9265
		Category: hTxn,
		//line sql.y: 9266
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9267
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9275
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 9276
		Category: hMisc,
		//line sql.y: 9277
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 9280
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 9302
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 9303
		Category: hMisc,
		//line sql.y: 9304
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 9310
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 9331
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 9332
		Category: hMisc,
		//line sql.y: 9333
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 9339
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 9360
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 9361
		Category: hTxn,
		//line sql.y: 9362
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 9363
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9378
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 9379
		Category: hTxn,
		//line sql.y: 9380
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 9388
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 9401
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 9402
		Category: hTxn,
		//line sql.y: 9403
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 9406
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 9430
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 9431
		Category: hTxn,
		//line sql.y: 9432
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9435
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 9549
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 9550
		Category: hDDL,
		//line sql.y: 9551
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 9552
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 9729
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 9730
		Category: hDML,
		//line sql.y: 9731
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 9739
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 9758
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 9759
		Category: hDML,
		//line sql.y: 9760
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 9764
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 9894
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 9895
		Category: hDML,
		//line sql.y: 9896
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 9903
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 9959
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 9960
		Category: hPriv,
		//line sql.y: 9961
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 9963
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 9974
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 9975
		Category: hPriv,
		//line sql.y: 9976
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 9978
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 10158
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 10159
		Category: hDML,
		//line sql.y: 10160
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 10171
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 10172
		Category: hDML,
		//line sql.y: 10173
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 10185
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 10260
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 10261
		Category: hDML,
		//line sql.y: 10262
		Text: `TABLE <tablename>
`,
		//line sql.y: 10263
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 10625
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 10626
		Category: hDML,
		//line sql.y: 10627
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 10628
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 10763
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 10764
		Category: hDML,
		//line sql.y: 10765
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 10790
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
