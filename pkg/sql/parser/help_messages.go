// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1310
	`ALTER`: {
		//line sql.y: 1311
		Category: hGroup,
		//line sql.y: 1312
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1329
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1330
		Category: hDDL,
		//line sql.y: 1331
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET [REGIONAL AFFINITY [TO | AT] ... | LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1371
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1387
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1388
		Category: hDDL,
		//line sql.y: 1389
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1408
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1413
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1414
		Category: hDDL,
		//line sql.y: 1415
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1418
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1426
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1427
		Category: hDDL,
		//line sql.y: 1428
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1453
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1454
		Category: hDDL,
		//line sql.y: 1455
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1462
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1508
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1509
		Category: hDDL,
		//line sql.y: 1510
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1522
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1527
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1528
		Category: hDDL,
		//line sql.y: 1529
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1545
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2066
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2067
		Category: hDDL,
		//line sql.y: 2068
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2084
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2226
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2227
		Category: hMisc,
		//line sql.y: 2228
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2255
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2256
		Category: hCCL,
		//line sql.y: 2257
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2277
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2381
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2382
		Category: hCCL,
		//line sql.y: 2383
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2452
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2530
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2531
		Category: hCCL,
		//line sql.y: 2532
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2553
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2674
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2675
		Category: hCCL,
		//line sql.y: 2676
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2704
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2748
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2749
		Category: hCCL,
		//line sql.y: 2750
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2759
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2895
	`CANCEL`: {
		//line sql.y: 2896
		Category: hGroup,
		//line sql.y: 2897
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2904
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2905
		Category: hMisc,
		//line sql.y: 2906
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2909
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2931
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2932
		Category: hMisc,
		//line sql.y: 2933
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2936
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2967
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2968
		Category: hMisc,
		//line sql.y: 2969
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2972
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3042
	`CREATE`: {
		//line sql.y: 3043
		Category: hGroup,
		//line sql.y: 3044
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3057
	`CREATE EXTENSION`: {
		//line sql.y: 3058
		Category: hCfg,
		//line sql.y: 3059
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3137
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3138
		Category: hMisc,
		//line sql.y: 3139
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3282
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3283
		Category: hDML,
		//line sql.y: 3284
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3288
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3308
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3309
		Category: hCfg,
		//line sql.y: 3310
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3322
	`DROP`: {
		//line sql.y: 3323
		Category: hGroup,
		//line sql.y: 3324
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3343
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3344
		Category: hDDL,
		//line sql.y: 3345
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3346
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3376
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3377
		Category: hDDL,
		//line sql.y: 3378
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3379
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3391
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3392
		Category: hDDL,
		//line sql.y: 3393
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3394
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3406
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3407
		Category: hDDL,
		//line sql.y: 3408
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3409
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3431
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3432
		Category: hDDL,
		//line sql.y: 3433
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3434
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3454
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3455
		Category: hDDL,
		//line sql.y: 3456
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3492
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3493
		Category: hDDL,
		//line sql.y: 3494
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3514
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3515
		Category: hPriv,
		//line sql.y: 3516
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3517
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3541
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3542
		Category: hMisc,
		//line sql.y: 3543
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3546
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3569
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3570
		Category: hMisc,
		//line sql.y: 3571
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3584
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3691
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3692
		Category: hMisc,
		//line sql.y: 3693
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3694
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3725
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3726
		Category: hMisc,
		//line sql.y: 3727
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3728
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3758
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3759
		Category: hMisc,
		//line sql.y: 3760
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3761
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3781
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3782
		Category: hPriv,
		//line sql.y: 3783
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 3798
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3828
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3829
		Category: hPriv,
		//line sql.y: 3830
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 3845
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3913
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3914
		Category: hCfg,
		//line sql.y: 3915
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3916
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3928
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3929
		Category: hCfg,
		//line sql.y: 3930
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3931
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3940
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3941
		Category: hCfg,
		//line sql.y: 3942
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3945
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3966
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3967
		Category: hExperimental,
		//line sql.y: 3968
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3976
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3982
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3983
		Category: hExperimental,
		//line sql.y: 3984
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3992
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4000
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4001
		Category: hExperimental,
		//line sql.y: 4002
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4013
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4068
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4069
		Category: hCfg,
		//line sql.y: 4070
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4071
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4092
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4093
		Category: hCfg,
		//line sql.y: 4094
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 4100
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4117
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4118
		Category: hTxn,
		//line sql.y: 4119
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4128
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4320
	`SHOW`: {
		//line sql.y: 4321
		Category: hGroup,
		//line sql.y: 4322
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES, SHOW REGIONS,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY
`,
	},
	//line sql.y: 4404
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4405
		Category: hCfg,
		//line sql.y: 4406
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4407
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4428
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4429
		Category: hExperimental,
		//line sql.y: 4430
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4437
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4450
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4451
		Category: hExperimental,
		//line sql.y: 4452
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4456
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4469
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4470
		Category: hCCL,
		//line sql.y: 4471
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4472
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4526
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4527
		Category: hCfg,
		//line sql.y: 4528
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4531
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4557
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4558
		Category: hDDL,
		//line sql.y: 4559
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4560
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4568
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4569
		Category: hDDL,
		//line sql.y: 4570
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4571
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4591
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4592
		Category: hDDL,
		//line sql.y: 4593
		Text: `SHOW DATABASES
`,
		//line sql.y: 4594
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4602
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4603
		Category: hMisc,
		//line sql.y: 4604
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4612
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4613
		Category: hMisc,
		//line sql.y: 4614
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4622
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4623
		Category: hPriv,
		//line sql.y: 4624
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4630
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4643
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4644
		Category: hDDL,
		//line sql.y: 4645
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4646
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4676
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4677
		Category: hDDL,
		//line sql.y: 4678
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4679
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4692
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4693
		Category: hMisc,
		//line sql.y: 4694
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4695
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4716
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4717
		Category: hMisc,
		//line sql.y: 4718
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4722
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4766
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4767
		Category: hMisc,
		//line sql.y: 4768
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4771
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4818
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4819
		Category: hMisc,
		//line sql.y: 4820
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4822
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4845
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4846
		Category: hMisc,
		//line sql.y: 4847
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4848
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4861
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4862
		Category: hDDL,
		//line sql.y: 4863
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4864
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4892
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4893
		Category: hMisc,
		//line sql.y: 4894
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4911
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4912
		Category: hDDL,
		//line sql.y: 4913
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4925
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4926
		Category: hDDL,
		//line sql.y: 4927
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4939
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4940
		Category: hMisc,
		//line sql.y: 4941
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4957
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4958
		Category: hCfg,
		//line sql.y: 4959
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4967
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4968
		Category: hCfg,
		//line sql.y: 4969
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4970
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4989
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4990
		Category: hDDL,
		//line sql.y: 4991
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4992
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5010
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5011
		Category: hPriv,
		//line sql.y: 5012
		Text: `SHOW USERS
`,
		//line sql.y: 5013
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5021
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5022
		Category: hPriv,
		//line sql.y: 5023
		Text: `SHOW ROLES
`,
		//line sql.y: 5024
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5080
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5081
		Category: hMisc,
		//line sql.y: 5082
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 5103
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5104
		Category: hMisc,
		//line sql.y: 5105
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5124
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5125
		Category: hDDL,
		//line sql.y: 5126
		Text: `
SHOW REGIONS
SHOW REGIONS FOR DATABASE <database>
`,
	},
	//line sql.y: 5382
	`PAUSE`: {
		//line sql.y: 5383
		Category: hMisc,
		//line sql.y: 5384
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5394
	`RESUME`: {
		//line sql.y: 5395
		Category: hMisc,
		//line sql.y: 5396
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5406
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5407
		Category: hMisc,
		//line sql.y: 5408
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5411
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5446
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5447
		Category: hMisc,
		//line sql.y: 5448
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5452
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5473
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5474
		Category: hDDL,
		//line sql.y: 5475
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5508
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5509
		Category: hDDL,
		//line sql.y: 5510
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5536
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5537
		Category: hDDL,
		//line sql.y: 5538
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE [WITHOUT INDEX] ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5568
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6423
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6424
		Category: hDDL,
		//line sql.y: 6425
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6435
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6500
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6501
		Category: hDML,
		//line sql.y: 6502
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6503
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6521
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6522
		Category: hPriv,
		//line sql.y: 6523
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6524
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6536
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6537
		Category: hPriv,
		//line sql.y: 6538
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6539
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6568
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6569
		Category: hDDL,
		//line sql.y: 6570
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6571
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6746
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6747
		Category: hDDL,
		//line sql.y: 6748
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6791
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6792
		Category: hDDL,
		//line sql.y: 6793
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6803
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7255
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7256
		Category: hTxn,
		//line sql.y: 7257
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7258
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7266
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7267
		Category: hMisc,
		//line sql.y: 7268
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7271
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7293
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7294
		Category: hMisc,
		//line sql.y: 7295
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7301
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7322
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7323
		Category: hMisc,
		//line sql.y: 7324
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleid>

`,
		//line sql.y: 7330
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7351
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7352
		Category: hTxn,
		//line sql.y: 7353
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7354
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7369
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7370
		Category: hTxn,
		//line sql.y: 7371
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7379
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7392
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7393
		Category: hTxn,
		//line sql.y: 7394
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7397
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7421
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7422
		Category: hTxn,
		//line sql.y: 7423
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7426
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7540
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7541
		Category: hDDL,
		//line sql.y: 7542
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7543
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7667
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7668
		Category: hDML,
		//line sql.y: 7669
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7677
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7696
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7697
		Category: hDML,
		//line sql.y: 7698
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7702
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7818
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7819
		Category: hDML,
		//line sql.y: 7820
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7827
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7883
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 7884
		Category: hPriv,
		//line sql.y: 7885
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 7887
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 7898
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 7899
		Category: hPriv,
		//line sql.y: 7900
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 7902
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8082
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8083
		Category: hDML,
		//line sql.y: 8084
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8095
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8096
		Category: hDML,
		//line sql.y: 8097
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8109
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8184
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8185
		Category: hDML,
		//line sql.y: 8186
		Text: `TABLE <tablename>
`,
		//line sql.y: 8187
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8561
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8562
		Category: hDML,
		//line sql.y: 8563
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8564
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8673
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8674
		Category: hDML,
		//line sql.y: 8675
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8697
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
