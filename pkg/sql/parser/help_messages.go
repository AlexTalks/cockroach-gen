// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1713
	`ALTER`: {
		//line sql.y: 1714
		Category: hGroup,
		//line sql.y: 1715
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1739
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1740
		Category: hDDL,
		//line sql.y: 1741
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1784
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1800
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1801
		Category: hDDL,
		//line sql.y: 1802
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1821
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1826
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1827
		Category: hDDL,
		//line sql.y: 1828
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1831
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1840
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1841
		Category: hDDL,
		//line sql.y: 1842
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1871
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1872
		Category: hDDL,
		//line sql.y: 1873
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1886
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1905
	`ALTER FUNCTION`: {
		ShortDescription: `change the definition of a function`,
		//line sql.y: 1906
		Category: hDDL,
		//line sql.y: 1907
		Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
`,
		//line sql.y: 1922
		SeeAlso: `WEBDOCS/alter-function.html
`,
	},
	//line sql.y: 2120
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2121
		Category: hDDL,
		//line sql.y: 2122
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2138
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2144
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2145
		Category: hDDL,
		//line sql.y: 2146
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2164
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2844
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2845
		Category: hDDL,
		//line sql.y: 2846
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2862
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 3011
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 3012
		Category: hMisc,
		//line sql.y: 3013
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 3040
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 3041
		Category: hCCL,
		//line sql.y: 3042
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 3076
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3198
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3199
		Category: hCCL,
		//line sql.y: 3200
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3270
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3288
	`ALTER BACKUP SCHEDULE`: {
		ShortDescription: `alter an existing backup schedule`,
		//line sql.y: 3289
		Category: hCCL,
		//line sql.y: 3290
		Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
		//line sql.y: 3302
		SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
	},
	//line sql.y: 3442
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3443
		Category: hMisc,
		//line sql.y: 3444
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3462
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3463
		Category: hMisc,
		//line sql.y: 3464
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3478
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3479
		Category: hCCL,
		//line sql.y: 3480
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3508
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3695
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3696
		Category: hCCL,
		//line sql.y: 3697
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3715
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3749
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3750
		Category: hCCL,
		//line sql.y: 3751
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3761
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3949
	`CANCEL`: {
		//line sql.y: 3950
		Category: hGroup,
		//line sql.y: 3951
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3959
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3960
		Category: hMisc,
		//line sql.y: 3961
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3964
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3986
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3987
		Category: hMisc,
		//line sql.y: 3988
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3991
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 4022
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 4023
		Category: hMisc,
		//line sql.y: 4024
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 4027
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 4058
	`CANCEL ALL JOBS`: {
		ShortDescription: `cancel all background jobs`,
		//line sql.y: 4059
		Category: hMisc,
		//line sql.y: 4060
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 4119
	`CREATE`: {
		//line sql.y: 4120
		Category: hGroup,
		//line sql.y: 4121
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION, CREATE TENANT, CREATE SCHEDULE
`,
	},
	//line sql.y: 4137
	`CREATE TENANT`: {
		ShortDescription: `create new tenant`,
		//line sql.y: 4138
		Category: hGroup,
		//line sql.y: 4139
		Text: `CREATE TENANT name
`,
	},
	//line sql.y: 4155
	`CREATE SCHEDULE`: {
		//line sql.y: 4156
		Category: hGroup,
		//line sql.y: 4157
		Text: `
CREATE SCHEDULE FOR BACKUP,
CREATE SCHEDULE FOR CHANGEFEED
`,
	},
	//line sql.y: 4165
	`CREATE EXTENSION`: {
		ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
		//line sql.y: 4166
		Category: hCfg,
		//line sql.y: 4167
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4185
	`CREATE FUNCTION`: {
		ShortDescription: `define a new function`,
		//line sql.y: 4186
		Category: hDDL,
		//line sql.y: 4187
		Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
 } ...
`,
		//line sql.y: 4197
		SeeAlso: `WEBDOCS/create-function.html
`,
	},
	//line sql.y: 4450
	`DROP FUNCTION`: {
		ShortDescription: `remove a function`,
		//line sql.y: 4451
		Category: hDDL,
		//line sql.y: 4452
		Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
		//line sql.y: 4455
		SeeAlso: `WEBDOCS/drop-function.html
`,
	},
	//line sql.y: 4649
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4650
		Category: hMisc,
		//line sql.y: 4651
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4751
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4752
		Category: hCCL,
		//line sql.y: 4753
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4795
	`CREATE SCHEDULE FOR CHANGEFEED`: {
		ShortDescription: `create changefeed periodically`,
		//line sql.y: 4796
		Category: hCCL,
		//line sql.y: 4797
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR CHANGEFEED
<targets> INTO <sink> [WITH <options>]
RECURRING [crontab|NEVER]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All changefeeds run in UTC timezone.

Description:
  Optional description (or name) for this schedule

RECURRING <crontab>:
  The RECURRING expression specifies when export runs
  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

sink: data capture stream destination (Enterprise only)
`,
		//line sql.y: 4819
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 4918
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4919
		Category: hDML,
		//line sql.y: 4920
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [USING <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4925
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4952
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4953
		Category: hCfg,
		//line sql.y: 4954
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4975
	`DROP`: {
		//line sql.y: 4976
		Category: hGroup,
		//line sql.y: 4977
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4999
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 5000
		Category: hDDL,
		//line sql.y: 5001
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5002
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 5032
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 5033
		Category: hDDL,
		//line sql.y: 5034
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5035
		SeeAlso: `DROP
`,
	},
	//line sql.y: 5047
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 5048
		Category: hDDL,
		//line sql.y: 5049
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5050
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 5062
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 5063
		Category: hDDL,
		//line sql.y: 5064
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5065
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 5087
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 5088
		Category: hDDL,
		//line sql.y: 5089
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 5090
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 5110
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 5111
		Category: hDDL,
		//line sql.y: 5112
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 5132
	`DROP TENANT`: {
		ShortDescription: `remove a tenant`,
		//line sql.y: 5133
		Category: hDDL,
		//line sql.y: 5134
		Text: `DROP TENANT [IF EXISTS] <name>
`,
	},
	//line sql.y: 5168
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 5169
		Category: hDDL,
		//line sql.y: 5170
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 5190
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 5191
		Category: hPriv,
		//line sql.y: 5192
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 5193
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 5226
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 5227
		Category: hMisc,
		//line sql.y: 5228
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 5231
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 5254
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 5255
		Category: hMisc,
		//line sql.y: 5256
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 5270
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5381
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5382
		Category: hCCL,
		//line sql.y: 5383
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5434
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5435
		Category: hCCL,
		//line sql.y: 5436
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5490
	`SHOW TENANT`: {
		ShortDescription: `display tenant information`,
		//line sql.y: 5491
		Category: hMisc,
		//line sql.y: 5492
		Text: `SHOW TENANT <tenant_name> [WITH REPLICATION STATUS]
`,
	},
	//line sql.y: 5510
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5511
		Category: hMisc,
		//line sql.y: 5512
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5513
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5544
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5545
		Category: hMisc,
		//line sql.y: 5546
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5547
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5577
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5578
		Category: hMisc,
		//line sql.y: 5579
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5580
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5600
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5601
		Category: hPriv,
		//line sql.y: 5602
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5619
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5701
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5702
		Category: hPriv,
		//line sql.y: 5703
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5720
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5894
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5895
		Category: hCfg,
		//line sql.y: 5896
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5897
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5913
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5914
		Category: hCfg,
		//line sql.y: 5915
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5916
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5925
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5926
		Category: hCfg,
		//line sql.y: 5927
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5930
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5951
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5952
		Category: hExperimental,
		//line sql.y: 5953
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5961
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5967
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5968
		Category: hExperimental,
		//line sql.y: 5969
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5977
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5985
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5986
		Category: hExperimental,
		//line sql.y: 5987
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5998
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 6053
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 6054
		Category: hCfg,
		//line sql.y: 6055
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 6056
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6066
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 6067
		Category: hGroup,
		//line sql.y: 6068
		SeeAlso: `ALTER TENANT REPLICATION, ALTER TENANT CLUSTER SETTING
`,
	},
	//line sql.y: 6074
	`ALTER TENANT REPLICATION`: {
		ShortDescription: `alter tenant replication stream`,
		//line sql.y: 6075
		Category: hGroup,
		//line sql.y: 6076
		Text: `
ALTER TENANT '<tenant_name>' PAUSE REPLICATION
ALTER TENANT '<tenant_name>' RESUME REPLICATION
ALTER TENANT '<tenant_name>' COMPLETE REPLICATION TO LATEST
ALTER TENANT '<tenant_name>' COMPLETE REPLICATION TO SYSTEM TIME 'time'
`,
	},
	//line sql.y: 6119
	`ALTER TENANT CLUSTER SETTING`: {
		ShortDescription: `alter tenant cluster settings`,
		//line sql.y: 6120
		Category: hGroup,
		//line sql.y: 6121
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 6124
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 6162
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 6163
		Category: hCfg,
		//line sql.y: 6164
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 6170
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6201
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 6202
		Category: hCfg,
		//line sql.y: 6203
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 6207
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6218
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 6219
		Category: hTxn,
		//line sql.y: 6220
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 6229
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 6426
	`SHOW`: {
		//line sql.y: 6427
		Category: hGroup,
		//line sql.y: 6428
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS,
SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW COMMIT TIMESTAMP,
SHOW FULL TABLE SCANS, SHOW CREATE EXTERNAL CONNECTIONS, SHOW TENANT
`,
	},
	//line sql.y: 6485
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6486
		Category: hMisc,
		//line sql.y: 6487
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6488
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6504
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6505
		Category: hMisc,
		//line sql.y: 6506
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6507
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6576
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6577
		Category: hMisc,
		//line sql.y: 6578
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6579
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6589
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6590
		Category: hMisc,
		//line sql.y: 6591
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6592
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6728
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6729
		Category: hCfg,
		//line sql.y: 6730
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6731
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6775
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics`,
		//line sql.y: 6776
		Category: hMisc,
		//line sql.y: 6777
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
		//line sql.y: 6788
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6810
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6811
		Category: hExperimental,
		//line sql.y: 6812
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6816
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6829
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6830
		Category: hCCL,
		//line sql.y: 6831
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6832
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6923
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6924
		Category: hCfg,
		//line sql.y: 6925
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6928
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6974
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6975
		Category: hDDL,
		//line sql.y: 6976
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6977
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6985
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6986
		Category: hDDL,
		//line sql.y: 6987
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6988
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 7008
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 7009
		Category: hDDL,
		//line sql.y: 7010
		Text: `SHOW DATABASES
`,
		//line sql.y: 7011
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 7019
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 7020
		Category: hDDL,
		//line sql.y: 7021
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 7037
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 7038
		Category: hMisc,
		//line sql.y: 7039
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 7067
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 7068
		Category: hMisc,
		//line sql.y: 7069
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 7077
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 7078
		Category: hPriv,
		//line sql.y: 7079
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 7085
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 7105
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 7106
		Category: hDDL,
		//line sql.y: 7107
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 7108
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 7138
	`SHOW COMMIT TIMESTAMP`: {
		ShortDescription: `show timestamp commit timestamp of last transaction`,
		//line sql.y: 7139
		Category: hMisc,
		//line sql.y: 7140
		Text: `SHOW COMMIT TIMESTAMP

Shows the commit timestamp of the last committed transaction if not currently
in a transaction. If currently in a transaction, implicitly commits the
transaction, returning any errors which may have occurred during the commit.
The transaction state will remain open from the perspective of the client,
meaning that a COMMIT must be issued to move the connection back to a state
where new statements may be issued.
`,
	},
	//line sql.y: 7154
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 7155
		Category: hDDL,
		//line sql.y: 7156
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 7157
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 7170
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 7171
		Category: hMisc,
		//line sql.y: 7172
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 7173
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 7200
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 7201
		Category: hMisc,
		//line sql.y: 7202
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 7206
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7268
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 7269
		Category: hMisc,
		//line sql.y: 7270
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 7273
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7328
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 7329
		Category: hMisc,
		//line sql.y: 7330
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 7332
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 7355
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 7356
		Category: hMisc,
		//line sql.y: 7357
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 7358
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 7371
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 7372
		Category: hDDL,
		//line sql.y: 7373
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 7374
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 7402
	`SHOW FUNCTIONS`: {
		ShortDescription: `list functions`,
		//line sql.y: 7403
		Category: hDDL,
		//line sql.y: 7404
		Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
	},
	//line sql.y: 7430
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 7431
		Category: hMisc,
		//line sql.y: 7432
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 7449
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 7450
		Category: hDDL,
		//line sql.y: 7451
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 7463
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 7464
		Category: hDDL,
		//line sql.y: 7465
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 7477
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 7478
		Category: hMisc,
		//line sql.y: 7479
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 7517
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 7518
		Category: hCfg,
		//line sql.y: 7519
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7527
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7528
		Category: hCfg,
		//line sql.y: 7529
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7530
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7549
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7550
		Category: hMisc,
		//line sql.y: 7551
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7563
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7564
		Category: hDDL,
		//line sql.y: 7565
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7571
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7630
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7631
		Category: hDDL,
		//line sql.y: 7632
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7635
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7648
	`SHOW CREATE EXTERNAL CONNECTIONS`: {
		ShortDescription: `list CREATE statements for external connections`,
		//line sql.y: 7649
		Category: hDDL,
		//line sql.y: 7650
		Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
	},
	//line sql.y: 7665
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7666
		Category: hPriv,
		//line sql.y: 7667
		Text: `SHOW USERS
`,
		//line sql.y: 7668
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7676
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7677
		Category: hPriv,
		//line sql.y: 7678
		Text: `SHOW ROLES
`,
		//line sql.y: 7679
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7687
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7688
		Category: hCfg,
		//line sql.y: 7689
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7692
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7748
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7749
		Category: hMisc,
		//line sql.y: 7750
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7771
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7772
		Category: hMisc,
		//line sql.y: 7773
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 7792
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `list survival goals`,
		//line sql.y: 7793
		Category: hDDL,
		//line sql.y: 7794
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 7809
	`SHOW REGIONS`: {
		ShortDescription: `list regions`,
		//line sql.y: 7810
		Category: hDDL,
		//line sql.y: 7811
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 8172
	`PAUSE`: {
		ShortDescription: `pause background tasks`,
		//line sql.y: 8173
		Category: hGroup,
		//line sql.y: 8174
		Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
	},
	//line sql.y: 8181
	`RESUME`: {
		ShortDescription: `resume background tasks`,
		//line sql.y: 8182
		Category: hGroup,
		//line sql.y: 8183
		Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 8190
	`RESUME ALL JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8191
		Category: hMisc,
		//line sql.y: 8192
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8201
	`PAUSE JOBS`: {
		ShortDescription: `pause selected background jobs`,
		//line sql.y: 8202
		Category: hMisc,
		//line sql.y: 8203
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 8206
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8255
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 8256
		Category: hMisc,
		//line sql.y: 8257
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 8261
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8282
	`PAUSE ALL JOBS`: {
		ShortDescription: `pause all background jobs`,
		//line sql.y: 8283
		Category: hMisc,
		//line sql.y: 8284
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8294
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 8295
		Category: hDDL,
		//line sql.y: 8296
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 8329
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 8330
		Category: hDDL,
		//line sql.y: 8331
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 8357
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 8358
		Category: hDDL,
		//line sql.y: 8359
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 8386
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 9350
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 9351
		Category: hDDL,
		//line sql.y: 9352
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 9363
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 9446
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 9447
		Category: hDML,
		//line sql.y: 9448
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 9449
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 9473
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 9474
		Category: hPriv,
		//line sql.y: 9475
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 9476
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9488
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 9489
		Category: hPriv,
		//line sql.y: 9490
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 9494
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9572
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9573
		Category: hDDL,
		//line sql.y: 9574
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9577
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9791
	`CREATE TYPE`: {
		ShortDescription: `create a type`,
		//line sql.y: 9792
		Category: hDDL,
		//line sql.y: 9793
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 9891
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 9892
		Category: hDDL,
		//line sql.y: 9893
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 9900
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 10411
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 10412
		Category: hDDL,
		//line sql.y: 10413
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 10560
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 10561
		Category: hTxn,
		//line sql.y: 10562
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10563
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10571
	`RESUME JOBS`: {
		ShortDescription: `resume selected background jobs`,
		//line sql.y: 10572
		Category: hMisc,
		//line sql.y: 10573
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 10576
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 10598
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 10599
		Category: hMisc,
		//line sql.y: 10600
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 10606
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10627
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10628
		Category: hMisc,
		//line sql.y: 10629
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10635
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10656
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10657
		Category: hTxn,
		//line sql.y: 10658
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10659
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10674
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10675
		Category: hTxn,
		//line sql.y: 10676
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10684
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10692
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10693
		Category: hTxn,
		//line sql.y: 10694
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10697
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10716
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10717
		Category: hTxn,
		//line sql.y: 10718
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10721
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 10857
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 10858
		Category: hDDL,
		//line sql.y: 10859
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 10860
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 11051
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 11052
		Category: hDML,
		//line sql.y: 11053
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 11061
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 11080
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 11081
		Category: hDML,
		//line sql.y: 11082
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 11086
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 11216
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 11217
		Category: hDML,
		//line sql.y: 11218
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 11225
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 11281
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 11282
		Category: hPriv,
		//line sql.y: 11283
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 11285
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 11296
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 11297
		Category: hPriv,
		//line sql.y: 11298
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 11300
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 11480
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 11481
		Category: hDML,
		//line sql.y: 11482
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 11493
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 11494
		Category: hDML,
		//line sql.y: 11495
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 11507
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 11582
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 11583
		Category: hDML,
		//line sql.y: 11584
		Text: `TABLE <tablename>
`,
		//line sql.y: 11585
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11947
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 11948
		Category: hDML,
		//line sql.y: 11949
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 11950
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 12085
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 12086
		Category: hDML,
		//line sql.y: 12087
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 12112
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
