// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1721
	`ALTER`: {
		//line sql.y: 1722
		Category: hGroup,
		//line sql.y: 1723
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1747
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1748
		Category: hDDL,
		//line sql.y: 1749
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1792
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1808
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1809
		Category: hDDL,
		//line sql.y: 1810
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1829
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1834
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1835
		Category: hDDL,
		//line sql.y: 1836
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1839
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1848
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1849
		Category: hDDL,
		//line sql.y: 1850
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1879
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1880
		Category: hDDL,
		//line sql.y: 1881
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1894
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1913
	`ALTER FUNCTION`: {
		ShortDescription: `change the definition of a function`,
		//line sql.y: 1914
		Category: hDDL,
		//line sql.y: 1915
		Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
`,
		//line sql.y: 1930
		SeeAlso: `WEBDOCS/alter-function.html
`,
	},
	//line sql.y: 2128
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2129
		Category: hDDL,
		//line sql.y: 2130
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2146
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2152
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2153
		Category: hDDL,
		//line sql.y: 2154
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE | INVISIBLE]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2172
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2856
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2857
		Category: hDDL,
		//line sql.y: 2858
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2874
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 3023
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 3024
		Category: hMisc,
		//line sql.y: 3025
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 3052
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 3053
		Category: hCCL,
		//line sql.y: 3054
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 3088
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3210
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3211
		Category: hCCL,
		//line sql.y: 3212
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3282
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3300
	`ALTER BACKUP SCHEDULE`: {
		ShortDescription: `alter an existing backup schedule`,
		//line sql.y: 3301
		Category: hCCL,
		//line sql.y: 3302
		Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
		//line sql.y: 3314
		SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
	},
	//line sql.y: 3454
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3455
		Category: hMisc,
		//line sql.y: 3456
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3474
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3475
		Category: hMisc,
		//line sql.y: 3476
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3490
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3491
		Category: hCCL,
		//line sql.y: 3492
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3520
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3707
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3708
		Category: hCCL,
		//line sql.y: 3709
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3727
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3761
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3762
		Category: hCCL,
		//line sql.y: 3763
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3773
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3961
	`CANCEL`: {
		//line sql.y: 3962
		Category: hGroup,
		//line sql.y: 3963
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3971
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3972
		Category: hMisc,
		//line sql.y: 3973
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3976
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3998
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3999
		Category: hMisc,
		//line sql.y: 4000
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 4003
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 4034
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 4035
		Category: hMisc,
		//line sql.y: 4036
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 4039
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 4070
	`CANCEL ALL JOBS`: {
		ShortDescription: `cancel all background jobs`,
		//line sql.y: 4071
		Category: hMisc,
		//line sql.y: 4072
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 4131
	`CREATE`: {
		//line sql.y: 4132
		Category: hGroup,
		//line sql.y: 4133
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION, CREATE TENANT, CREATE SCHEDULE
`,
	},
	//line sql.y: 4149
	`CREATE TENANT`: {
		ShortDescription: `create new tenant`,
		//line sql.y: 4150
		Category: hGroup,
		//line sql.y: 4151
		Text: `CREATE TENANT name
`,
	},
	//line sql.y: 4203
	`CREATE SCHEDULE`: {
		//line sql.y: 4204
		Category: hGroup,
		//line sql.y: 4205
		Text: `
CREATE SCHEDULE FOR BACKUP,
CREATE SCHEDULE FOR CHANGEFEED
`,
	},
	//line sql.y: 4213
	`CREATE EXTENSION`: {
		ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
		//line sql.y: 4214
		Category: hCfg,
		//line sql.y: 4215
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4233
	`CREATE FUNCTION`: {
		ShortDescription: `define a new function`,
		//line sql.y: 4234
		Category: hDDL,
		//line sql.y: 4235
		Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
 } ...
`,
		//line sql.y: 4245
		SeeAlso: `WEBDOCS/create-function.html
`,
	},
	//line sql.y: 4498
	`DROP FUNCTION`: {
		ShortDescription: `remove a function`,
		//line sql.y: 4499
		Category: hDDL,
		//line sql.y: 4500
		Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
		//line sql.y: 4503
		SeeAlso: `WEBDOCS/drop-function.html
`,
	},
	//line sql.y: 4697
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4698
		Category: hMisc,
		//line sql.y: 4699
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4799
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4800
		Category: hCCL,
		//line sql.y: 4801
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4843
	`CREATE SCHEDULE FOR CHANGEFEED`: {
		ShortDescription: `create changefeed periodically`,
		//line sql.y: 4844
		Category: hCCL,
		//line sql.y: 4845
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR CHANGEFEED
<targets> INTO <sink> [WITH <options>]
RECURRING [crontab|NEVER]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All changefeeds run in UTC timezone.

Description:
  Optional description (or name) for this schedule

RECURRING <crontab>:
  The RECURRING expression specifies when export runs
  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

sink: data capture stream destination (Enterprise only)
`,
		//line sql.y: 4867
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 4966
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4967
		Category: hDML,
		//line sql.y: 4968
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [USING <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4973
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 5000
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 5001
		Category: hCfg,
		//line sql.y: 5002
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 5023
	`DROP`: {
		//line sql.y: 5024
		Category: hGroup,
		//line sql.y: 5025
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 5047
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 5048
		Category: hDDL,
		//line sql.y: 5049
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5050
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 5080
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 5081
		Category: hDDL,
		//line sql.y: 5082
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5083
		SeeAlso: `DROP
`,
	},
	//line sql.y: 5095
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 5096
		Category: hDDL,
		//line sql.y: 5097
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5098
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 5110
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 5111
		Category: hDDL,
		//line sql.y: 5112
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5113
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 5135
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 5136
		Category: hDDL,
		//line sql.y: 5137
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 5138
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 5158
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 5159
		Category: hDDL,
		//line sql.y: 5160
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 5180
	`DROP TENANT`: {
		ShortDescription: `remove a tenant`,
		//line sql.y: 5181
		Category: hDDL,
		//line sql.y: 5182
		Text: `DROP TENANT [IF EXISTS] <name>
`,
	},
	//line sql.y: 5216
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 5217
		Category: hDDL,
		//line sql.y: 5218
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 5238
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 5239
		Category: hPriv,
		//line sql.y: 5240
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 5241
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 5274
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 5275
		Category: hMisc,
		//line sql.y: 5276
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 5279
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 5302
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 5303
		Category: hMisc,
		//line sql.y: 5304
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 5318
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5429
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5430
		Category: hCCL,
		//line sql.y: 5431
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5482
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5483
		Category: hCCL,
		//line sql.y: 5484
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5538
	`SHOW TENANT`: {
		ShortDescription: `display tenant information`,
		//line sql.y: 5539
		Category: hMisc,
		//line sql.y: 5540
		Text: `SHOW TENANT <tenant_name> [WITH REPLICATION STATUS]
`,
	},
	//line sql.y: 5558
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5559
		Category: hMisc,
		//line sql.y: 5560
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5561
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5592
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5593
		Category: hMisc,
		//line sql.y: 5594
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5595
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5625
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5626
		Category: hMisc,
		//line sql.y: 5627
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5628
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5648
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5649
		Category: hPriv,
		//line sql.y: 5650
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5667
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5749
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5750
		Category: hPriv,
		//line sql.y: 5751
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5768
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5942
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5943
		Category: hCfg,
		//line sql.y: 5944
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5945
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5961
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5962
		Category: hCfg,
		//line sql.y: 5963
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5964
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5973
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5974
		Category: hCfg,
		//line sql.y: 5975
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5978
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5999
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 6000
		Category: hExperimental,
		//line sql.y: 6001
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 6009
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 6015
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 6016
		Category: hExperimental,
		//line sql.y: 6017
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 6025
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 6033
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 6034
		Category: hExperimental,
		//line sql.y: 6035
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 6046
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 6101
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 6102
		Category: hCfg,
		//line sql.y: 6103
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 6104
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6114
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 6115
		Category: hGroup,
		//line sql.y: 6116
		SeeAlso: `ALTER TENANT REPLICATION, ALTER TENANT CLUSTER SETTING
`,
	},
	//line sql.y: 6122
	`ALTER TENANT REPLICATION`: {
		ShortDescription: `alter tenant replication stream`,
		//line sql.y: 6123
		Category: hGroup,
		//line sql.y: 6124
		Text: `
ALTER TENANT '<tenant_name>' PAUSE REPLICATION
ALTER TENANT '<tenant_name>' RESUME REPLICATION
ALTER TENANT '<tenant_name>' COMPLETE REPLICATION TO LATEST
ALTER TENANT '<tenant_name>' COMPLETE REPLICATION TO SYSTEM TIME 'time'
`,
	},
	//line sql.y: 6167
	`ALTER TENANT CLUSTER SETTING`: {
		ShortDescription: `alter tenant cluster settings`,
		//line sql.y: 6168
		Category: hGroup,
		//line sql.y: 6169
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 6172
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 6210
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 6211
		Category: hCfg,
		//line sql.y: 6212
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 6218
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6249
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 6250
		Category: hCfg,
		//line sql.y: 6251
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 6255
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6266
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 6267
		Category: hTxn,
		//line sql.y: 6268
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 6277
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 6474
	`SHOW`: {
		//line sql.y: 6475
		Category: hGroup,
		//line sql.y: 6476
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS,
SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW COMMIT TIMESTAMP,
SHOW FULL TABLE SCANS, SHOW CREATE EXTERNAL CONNECTIONS, SHOW TENANT
`,
	},
	//line sql.y: 6533
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6534
		Category: hMisc,
		//line sql.y: 6535
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6536
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6552
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6553
		Category: hMisc,
		//line sql.y: 6554
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6555
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6624
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6625
		Category: hMisc,
		//line sql.y: 6626
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6627
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6637
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6638
		Category: hMisc,
		//line sql.y: 6639
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6640
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6776
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6777
		Category: hCfg,
		//line sql.y: 6778
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6779
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6823
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics`,
		//line sql.y: 6824
		Category: hMisc,
		//line sql.y: 6825
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
		//line sql.y: 6836
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6858
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6859
		Category: hExperimental,
		//line sql.y: 6860
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6864
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6877
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6878
		Category: hCCL,
		//line sql.y: 6879
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6880
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6971
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6972
		Category: hCfg,
		//line sql.y: 6973
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6976
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 7022
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 7023
		Category: hDDL,
		//line sql.y: 7024
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 7025
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 7033
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 7034
		Category: hDDL,
		//line sql.y: 7035
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 7036
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 7056
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 7057
		Category: hDDL,
		//line sql.y: 7058
		Text: `SHOW DATABASES
`,
		//line sql.y: 7059
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 7067
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 7068
		Category: hDDL,
		//line sql.y: 7069
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 7085
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 7086
		Category: hMisc,
		//line sql.y: 7087
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 7115
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 7116
		Category: hMisc,
		//line sql.y: 7117
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 7125
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 7126
		Category: hPriv,
		//line sql.y: 7127
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 7133
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 7153
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 7154
		Category: hDDL,
		//line sql.y: 7155
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 7156
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 7186
	`SHOW COMMIT TIMESTAMP`: {
		ShortDescription: `show timestamp commit timestamp of last transaction`,
		//line sql.y: 7187
		Category: hMisc,
		//line sql.y: 7188
		Text: `SHOW COMMIT TIMESTAMP

Shows the commit timestamp of the last committed transaction if not currently
in a transaction. If currently in a transaction, implicitly commits the
transaction, returning any errors which may have occurred during the commit.
The transaction state will remain open from the perspective of the client,
meaning that a COMMIT must be issued to move the connection back to a state
where new statements may be issued.
`,
	},
	//line sql.y: 7202
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 7203
		Category: hDDL,
		//line sql.y: 7204
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 7205
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 7218
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 7219
		Category: hMisc,
		//line sql.y: 7220
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 7221
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 7248
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 7249
		Category: hMisc,
		//line sql.y: 7250
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 7254
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7316
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 7317
		Category: hMisc,
		//line sql.y: 7318
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 7321
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7376
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 7377
		Category: hMisc,
		//line sql.y: 7378
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 7380
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 7403
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 7404
		Category: hMisc,
		//line sql.y: 7405
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 7406
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 7419
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 7420
		Category: hDDL,
		//line sql.y: 7421
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 7422
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 7450
	`SHOW FUNCTIONS`: {
		ShortDescription: `list functions`,
		//line sql.y: 7451
		Category: hDDL,
		//line sql.y: 7452
		Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
	},
	//line sql.y: 7478
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 7479
		Category: hMisc,
		//line sql.y: 7480
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 7497
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 7498
		Category: hDDL,
		//line sql.y: 7499
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 7511
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 7512
		Category: hDDL,
		//line sql.y: 7513
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 7525
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 7526
		Category: hMisc,
		//line sql.y: 7527
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 7565
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 7566
		Category: hCfg,
		//line sql.y: 7567
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7575
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7576
		Category: hCfg,
		//line sql.y: 7577
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7578
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7597
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7598
		Category: hMisc,
		//line sql.y: 7599
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7611
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7612
		Category: hDDL,
		//line sql.y: 7613
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7619
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7678
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7679
		Category: hDDL,
		//line sql.y: 7680
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7683
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7696
	`SHOW CREATE EXTERNAL CONNECTIONS`: {
		ShortDescription: `list CREATE statements for external connections`,
		//line sql.y: 7697
		Category: hDDL,
		//line sql.y: 7698
		Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
	},
	//line sql.y: 7713
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7714
		Category: hPriv,
		//line sql.y: 7715
		Text: `SHOW USERS
`,
		//line sql.y: 7716
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7724
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7725
		Category: hPriv,
		//line sql.y: 7726
		Text: `SHOW ROLES
`,
		//line sql.y: 7727
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7735
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7736
		Category: hCfg,
		//line sql.y: 7737
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7740
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7796
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7797
		Category: hMisc,
		//line sql.y: 7798
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7819
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7820
		Category: hMisc,
		//line sql.y: 7821
		Text: `
SHOW CLUSTER RANGES                                  [ WITH <options...> ]
SHOW RANGES FROM DATABASE <databasename>             [ WITH <options...> ]
SHOW RANGES FROM CURRENT_CATALOG                     [ WITH <options...> ]
SHOW RANGES FROM TABLE   <tablename>                 [ WITH <options...> ]
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname> [ WITH <options...> ]

Options:
  INDEXES
  TABLES
  DETAILS
  EXPLAIN
`,
	},
	//line sql.y: 7908
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `list survival goals`,
		//line sql.y: 7909
		Category: hDDL,
		//line sql.y: 7910
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 7925
	`SHOW REGIONS`: {
		ShortDescription: `list regions`,
		//line sql.y: 7926
		Category: hDDL,
		//line sql.y: 7927
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 8288
	`PAUSE`: {
		ShortDescription: `pause background tasks`,
		//line sql.y: 8289
		Category: hGroup,
		//line sql.y: 8290
		Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
	},
	//line sql.y: 8297
	`RESUME`: {
		ShortDescription: `resume background tasks`,
		//line sql.y: 8298
		Category: hGroup,
		//line sql.y: 8299
		Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 8306
	`RESUME ALL JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8307
		Category: hMisc,
		//line sql.y: 8308
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8317
	`PAUSE JOBS`: {
		ShortDescription: `pause selected background jobs`,
		//line sql.y: 8318
		Category: hMisc,
		//line sql.y: 8319
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 8322
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8371
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 8372
		Category: hMisc,
		//line sql.y: 8373
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 8377
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8398
	`PAUSE ALL JOBS`: {
		ShortDescription: `pause all background jobs`,
		//line sql.y: 8399
		Category: hMisc,
		//line sql.y: 8400
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8410
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 8411
		Category: hDDL,
		//line sql.y: 8412
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 8445
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 8446
		Category: hDDL,
		//line sql.y: 8447
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 8473
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 8474
		Category: hDDL,
		//line sql.y: 8475
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 8502
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 9466
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 9467
		Category: hDDL,
		//line sql.y: 9468
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 9479
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 9562
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 9563
		Category: hDML,
		//line sql.y: 9564
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 9565
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 9589
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 9590
		Category: hPriv,
		//line sql.y: 9591
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 9592
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9604
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 9605
		Category: hPriv,
		//line sql.y: 9606
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 9610
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9688
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9689
		Category: hDDL,
		//line sql.y: 9690
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9693
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9907
	`CREATE TYPE`: {
		ShortDescription: `create a type`,
		//line sql.y: 9908
		Category: hDDL,
		//line sql.y: 9909
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 10007
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 10008
		Category: hDDL,
		//line sql.y: 10009
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 10016
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 10531
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 10532
		Category: hDDL,
		//line sql.y: 10533
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 10680
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 10681
		Category: hTxn,
		//line sql.y: 10682
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10683
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10691
	`RESUME JOBS`: {
		ShortDescription: `resume selected background jobs`,
		//line sql.y: 10692
		Category: hMisc,
		//line sql.y: 10693
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 10696
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 10718
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 10719
		Category: hMisc,
		//line sql.y: 10720
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 10726
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10747
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10748
		Category: hMisc,
		//line sql.y: 10749
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10755
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10776
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10777
		Category: hTxn,
		//line sql.y: 10778
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10779
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10794
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10795
		Category: hTxn,
		//line sql.y: 10796
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10804
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10812
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10813
		Category: hTxn,
		//line sql.y: 10814
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10817
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10836
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10837
		Category: hTxn,
		//line sql.y: 10838
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10841
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 10977
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 10978
		Category: hDDL,
		//line sql.y: 10979
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 10980
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 11171
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 11172
		Category: hDML,
		//line sql.y: 11173
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 11181
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 11200
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 11201
		Category: hDML,
		//line sql.y: 11202
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 11206
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 11336
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 11337
		Category: hDML,
		//line sql.y: 11338
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 11345
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 11401
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 11402
		Category: hPriv,
		//line sql.y: 11403
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 11405
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 11416
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 11417
		Category: hPriv,
		//line sql.y: 11418
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 11420
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 11600
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 11601
		Category: hDML,
		//line sql.y: 11602
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 11613
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 11614
		Category: hDML,
		//line sql.y: 11615
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 11627
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 11702
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 11703
		Category: hDML,
		//line sql.y: 11704
		Text: `TABLE <tablename>
`,
		//line sql.y: 11705
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 12067
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 12068
		Category: hDML,
		//line sql.y: 12069
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 12070
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 12205
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 12206
		Category: hDML,
		//line sql.y: 12207
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 12232
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
