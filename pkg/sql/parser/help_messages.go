// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1708
	`ALTER`: {
		//line sql.y: 1709
		Category: hGroup,
		//line sql.y: 1710
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1734
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1735
		Category: hDDL,
		//line sql.y: 1736
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1779
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1795
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1796
		Category: hDDL,
		//line sql.y: 1797
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1816
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1821
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1822
		Category: hDDL,
		//line sql.y: 1823
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1826
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1835
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1836
		Category: hDDL,
		//line sql.y: 1837
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1866
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1867
		Category: hDDL,
		//line sql.y: 1868
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1881
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1900
	`ALTER FUNCTION`: {
		ShortDescription: `change the definition of a function`,
		//line sql.y: 1901
		Category: hDDL,
		//line sql.y: 1902
		Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
`,
		//line sql.y: 1917
		SeeAlso: `WEBDOCS/alter-function.html
`,
	},
	//line sql.y: 2115
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2116
		Category: hDDL,
		//line sql.y: 2117
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2133
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2139
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2140
		Category: hDDL,
		//line sql.y: 2141
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2159
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2839
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2840
		Category: hDDL,
		//line sql.y: 2841
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2857
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 3006
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 3007
		Category: hMisc,
		//line sql.y: 3008
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 3035
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 3036
		Category: hCCL,
		//line sql.y: 3037
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 3071
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3193
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3194
		Category: hCCL,
		//line sql.y: 3195
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3265
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3283
	`ALTER BACKUP SCHEDULE`: {
		ShortDescription: `alter an existing backup schedule`,
		//line sql.y: 3284
		Category: hCCL,
		//line sql.y: 3285
		Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
		//line sql.y: 3297
		SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
	},
	//line sql.y: 3437
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3438
		Category: hMisc,
		//line sql.y: 3439
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3457
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3458
		Category: hMisc,
		//line sql.y: 3459
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3473
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3474
		Category: hCCL,
		//line sql.y: 3475
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3503
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3690
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3691
		Category: hCCL,
		//line sql.y: 3692
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3710
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3744
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3745
		Category: hCCL,
		//line sql.y: 3746
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3756
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3944
	`CANCEL`: {
		//line sql.y: 3945
		Category: hGroup,
		//line sql.y: 3946
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3954
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3955
		Category: hMisc,
		//line sql.y: 3956
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3959
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3981
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3982
		Category: hMisc,
		//line sql.y: 3983
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3986
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 4017
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 4018
		Category: hMisc,
		//line sql.y: 4019
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 4022
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 4053
	`CANCEL ALL JOBS`: {
		ShortDescription: `cancel all background jobs`,
		//line sql.y: 4054
		Category: hMisc,
		//line sql.y: 4055
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 4114
	`CREATE`: {
		//line sql.y: 4115
		Category: hGroup,
		//line sql.y: 4116
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION, CREATE TENANT
`,
	},
	//line sql.y: 4132
	`CREATE TENANT`: {
		ShortDescription: `create new tenant`,
		//line sql.y: 4133
		Category: hGroup,
		//line sql.y: 4134
		Text: `CREATE TENANT name
`,
	},
	//line sql.y: 4150
	`CREATE EXTENSION`: {
		ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
		//line sql.y: 4151
		Category: hCfg,
		//line sql.y: 4152
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4170
	`CREATE FUNCTION`: {
		ShortDescription: `define a new function`,
		//line sql.y: 4171
		Category: hDDL,
		//line sql.y: 4172
		Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
 } ...
`,
		//line sql.y: 4182
		SeeAlso: `WEBDOCS/create-function.html
`,
	},
	//line sql.y: 4435
	`DROP FUNCTION`: {
		ShortDescription: `remove a function`,
		//line sql.y: 4436
		Category: hDDL,
		//line sql.y: 4437
		Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
		//line sql.y: 4440
		SeeAlso: `WEBDOCS/drop-function.html
`,
	},
	//line sql.y: 4634
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4635
		Category: hMisc,
		//line sql.y: 4636
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4736
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4737
		Category: hCCL,
		//line sql.y: 4738
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4828
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4829
		Category: hDML,
		//line sql.y: 4830
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [USING <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4835
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4862
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4863
		Category: hCfg,
		//line sql.y: 4864
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4885
	`DROP`: {
		//line sql.y: 4886
		Category: hGroup,
		//line sql.y: 4887
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4909
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4910
		Category: hDDL,
		//line sql.y: 4911
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4912
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4942
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4943
		Category: hDDL,
		//line sql.y: 4944
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4945
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4957
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4958
		Category: hDDL,
		//line sql.y: 4959
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4960
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4972
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4973
		Category: hDDL,
		//line sql.y: 4974
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4975
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4997
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4998
		Category: hDDL,
		//line sql.y: 4999
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 5000
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 5020
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 5021
		Category: hDDL,
		//line sql.y: 5022
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 5042
	`DROP TENANT`: {
		ShortDescription: `remove a tenant`,
		//line sql.y: 5043
		Category: hDDL,
		//line sql.y: 5044
		Text: `DROP TENANT [IF EXISTS] <name>
`,
	},
	//line sql.y: 5078
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 5079
		Category: hDDL,
		//line sql.y: 5080
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 5100
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 5101
		Category: hPriv,
		//line sql.y: 5102
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 5103
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 5136
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 5137
		Category: hMisc,
		//line sql.y: 5138
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 5141
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 5164
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 5165
		Category: hMisc,
		//line sql.y: 5166
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 5180
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5291
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5292
		Category: hCCL,
		//line sql.y: 5293
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5344
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5345
		Category: hCCL,
		//line sql.y: 5346
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5400
	`SHOW TENANT`: {
		ShortDescription: `display tenant information`,
		//line sql.y: 5401
		Category: hMisc,
		//line sql.y: 5402
		Text: `SHOW TENANT <tenant_name> [WITH REPLICATION STATUS]
`,
	},
	//line sql.y: 5420
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5421
		Category: hMisc,
		//line sql.y: 5422
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5423
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5454
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5455
		Category: hMisc,
		//line sql.y: 5456
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5457
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5487
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5488
		Category: hMisc,
		//line sql.y: 5489
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5490
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5510
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5511
		Category: hPriv,
		//line sql.y: 5512
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5529
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5611
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5612
		Category: hPriv,
		//line sql.y: 5613
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5630
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5804
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5805
		Category: hCfg,
		//line sql.y: 5806
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5807
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5823
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5824
		Category: hCfg,
		//line sql.y: 5825
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5826
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5835
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5836
		Category: hCfg,
		//line sql.y: 5837
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5840
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5861
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5862
		Category: hExperimental,
		//line sql.y: 5863
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5871
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5877
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5878
		Category: hExperimental,
		//line sql.y: 5879
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5887
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5895
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5896
		Category: hExperimental,
		//line sql.y: 5897
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5908
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5963
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5964
		Category: hCfg,
		//line sql.y: 5965
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5966
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5975
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5976
		Category: hGroup,
		//line sql.y: 5977
		SeeAlso: `ALTER TENANT REPLICATION, ALTER TENANT CLUSTER SETTING
`,
	},
	//line sql.y: 5983
	`ALTER TENANT REPLICATION`: {
		ShortDescription: `alter tenant replication stream`,
		//line sql.y: 5984
		Category: hGroup,
		//line sql.y: 5985
		Text: `
ALTER TENANT '<tenant_name>' PAUSE REPLICATION
ALTER TENANT '<tenant_name>' RESUME REPLICATION
`,
	},
	//line sql.y: 6006
	`ALTER TENANT CLUSTER SETTING`: {
		ShortDescription: `alter tenant cluster settings`,
		//line sql.y: 6007
		Category: hGroup,
		//line sql.y: 6008
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 6011
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 6049
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 6050
		Category: hCfg,
		//line sql.y: 6051
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 6057
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6088
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 6089
		Category: hCfg,
		//line sql.y: 6090
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 6094
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6105
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 6106
		Category: hTxn,
		//line sql.y: 6107
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 6116
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 6313
	`SHOW`: {
		//line sql.y: 6314
		Category: hGroup,
		//line sql.y: 6315
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS,
SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW COMMIT TIMESTAMP,
SHOW FULL TABLE SCANS, SHOW CREATE EXTERNAL CONNECTIONS, SHOW TENANT
`,
	},
	//line sql.y: 6372
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6373
		Category: hMisc,
		//line sql.y: 6374
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6375
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6391
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6392
		Category: hMisc,
		//line sql.y: 6393
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6394
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6463
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6464
		Category: hMisc,
		//line sql.y: 6465
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6466
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6476
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6477
		Category: hMisc,
		//line sql.y: 6478
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6479
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6615
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6616
		Category: hCfg,
		//line sql.y: 6617
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6618
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6662
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics`,
		//line sql.y: 6663
		Category: hMisc,
		//line sql.y: 6664
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
		//line sql.y: 6675
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6697
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6698
		Category: hExperimental,
		//line sql.y: 6699
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6703
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6716
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6717
		Category: hCCL,
		//line sql.y: 6718
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6719
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6810
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6811
		Category: hCfg,
		//line sql.y: 6812
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6815
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6861
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6862
		Category: hDDL,
		//line sql.y: 6863
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6864
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6872
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6873
		Category: hDDL,
		//line sql.y: 6874
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6875
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 6895
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 6896
		Category: hDDL,
		//line sql.y: 6897
		Text: `SHOW DATABASES
`,
		//line sql.y: 6898
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 6906
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 6907
		Category: hDDL,
		//line sql.y: 6908
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 6924
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 6925
		Category: hMisc,
		//line sql.y: 6926
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 6954
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 6955
		Category: hMisc,
		//line sql.y: 6956
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6964
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6965
		Category: hPriv,
		//line sql.y: 6966
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6972
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6992
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6993
		Category: hDDL,
		//line sql.y: 6994
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6995
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 7025
	`SHOW COMMIT TIMESTAMP`: {
		ShortDescription: `show timestamp commit timestamp of last transaction`,
		//line sql.y: 7026
		Category: hMisc,
		//line sql.y: 7027
		Text: `SHOW COMMIT TIMESTAMP

Shows the commit timestamp of the last committed transaction if not currently
in a transaction. If currently in a transaction, implicitly commits the
transaction, returning any errors which may have occurred during the commit.
The transaction state will remain open from the perspective of the client,
meaning that a COMMIT must be issued to move the connection back to a state
where new statements may be issued.
`,
	},
	//line sql.y: 7041
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 7042
		Category: hDDL,
		//line sql.y: 7043
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 7044
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 7057
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 7058
		Category: hMisc,
		//line sql.y: 7059
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 7060
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 7087
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 7088
		Category: hMisc,
		//line sql.y: 7089
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 7093
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7155
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 7156
		Category: hMisc,
		//line sql.y: 7157
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 7160
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7211
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 7212
		Category: hMisc,
		//line sql.y: 7213
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 7215
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 7238
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 7239
		Category: hMisc,
		//line sql.y: 7240
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 7241
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 7254
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 7255
		Category: hDDL,
		//line sql.y: 7256
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 7257
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 7285
	`SHOW FUNCTIONS`: {
		ShortDescription: `list functions`,
		//line sql.y: 7286
		Category: hDDL,
		//line sql.y: 7287
		Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
	},
	//line sql.y: 7313
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 7314
		Category: hMisc,
		//line sql.y: 7315
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 7332
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 7333
		Category: hDDL,
		//line sql.y: 7334
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 7346
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 7347
		Category: hDDL,
		//line sql.y: 7348
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 7360
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 7361
		Category: hMisc,
		//line sql.y: 7362
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 7400
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 7401
		Category: hCfg,
		//line sql.y: 7402
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7410
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7411
		Category: hCfg,
		//line sql.y: 7412
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7413
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7432
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7433
		Category: hMisc,
		//line sql.y: 7434
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7446
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7447
		Category: hDDL,
		//line sql.y: 7448
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7454
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7513
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7514
		Category: hDDL,
		//line sql.y: 7515
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7518
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7531
	`SHOW CREATE EXTERNAL CONNECTIONS`: {
		ShortDescription: `list CREATE statements for external connections`,
		//line sql.y: 7532
		Category: hDDL,
		//line sql.y: 7533
		Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
	},
	//line sql.y: 7548
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7549
		Category: hPriv,
		//line sql.y: 7550
		Text: `SHOW USERS
`,
		//line sql.y: 7551
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7559
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7560
		Category: hPriv,
		//line sql.y: 7561
		Text: `SHOW ROLES
`,
		//line sql.y: 7562
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7570
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7571
		Category: hCfg,
		//line sql.y: 7572
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7575
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7631
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7632
		Category: hMisc,
		//line sql.y: 7633
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7654
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7655
		Category: hMisc,
		//line sql.y: 7656
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 7675
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `list survival goals`,
		//line sql.y: 7676
		Category: hDDL,
		//line sql.y: 7677
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 7692
	`SHOW REGIONS`: {
		ShortDescription: `list regions`,
		//line sql.y: 7693
		Category: hDDL,
		//line sql.y: 7694
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 8055
	`PAUSE`: {
		ShortDescription: `pause background tasks`,
		//line sql.y: 8056
		Category: hGroup,
		//line sql.y: 8057
		Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
	},
	//line sql.y: 8064
	`RESUME`: {
		ShortDescription: `resume background tasks`,
		//line sql.y: 8065
		Category: hGroup,
		//line sql.y: 8066
		Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 8073
	`RESUME ALL JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8074
		Category: hMisc,
		//line sql.y: 8075
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8084
	`PAUSE JOBS`: {
		ShortDescription: `pause selected background jobs`,
		//line sql.y: 8085
		Category: hMisc,
		//line sql.y: 8086
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 8089
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8138
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 8139
		Category: hMisc,
		//line sql.y: 8140
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 8144
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8165
	`PAUSE ALL JOBS`: {
		ShortDescription: `pause all background jobs`,
		//line sql.y: 8166
		Category: hMisc,
		//line sql.y: 8167
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8177
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 8178
		Category: hDDL,
		//line sql.y: 8179
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 8212
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 8213
		Category: hDDL,
		//line sql.y: 8214
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 8240
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 8241
		Category: hDDL,
		//line sql.y: 8242
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 8269
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 9233
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 9234
		Category: hDDL,
		//line sql.y: 9235
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 9246
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 9329
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 9330
		Category: hDML,
		//line sql.y: 9331
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 9332
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 9356
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 9357
		Category: hPriv,
		//line sql.y: 9358
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 9359
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9371
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 9372
		Category: hPriv,
		//line sql.y: 9373
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 9377
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9455
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9456
		Category: hDDL,
		//line sql.y: 9457
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9460
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9674
	`CREATE TYPE`: {
		ShortDescription: `create a type`,
		//line sql.y: 9675
		Category: hDDL,
		//line sql.y: 9676
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 9728
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 9729
		Category: hDDL,
		//line sql.y: 9730
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 9737
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 10248
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 10249
		Category: hDDL,
		//line sql.y: 10250
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 10397
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 10398
		Category: hTxn,
		//line sql.y: 10399
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10400
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10408
	`RESUME JOBS`: {
		ShortDescription: `resume selected background jobs`,
		//line sql.y: 10409
		Category: hMisc,
		//line sql.y: 10410
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 10413
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 10435
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 10436
		Category: hMisc,
		//line sql.y: 10437
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 10443
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10464
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10465
		Category: hMisc,
		//line sql.y: 10466
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10472
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10493
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10494
		Category: hTxn,
		//line sql.y: 10495
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10496
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10511
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10512
		Category: hTxn,
		//line sql.y: 10513
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10521
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10529
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10530
		Category: hTxn,
		//line sql.y: 10531
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10534
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10553
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10554
		Category: hTxn,
		//line sql.y: 10555
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10558
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 10694
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 10695
		Category: hDDL,
		//line sql.y: 10696
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 10697
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 10888
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 10889
		Category: hDML,
		//line sql.y: 10890
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 10898
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 10917
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 10918
		Category: hDML,
		//line sql.y: 10919
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 10923
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 11053
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 11054
		Category: hDML,
		//line sql.y: 11055
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 11062
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 11118
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 11119
		Category: hPriv,
		//line sql.y: 11120
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 11122
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 11133
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 11134
		Category: hPriv,
		//line sql.y: 11135
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 11137
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 11317
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 11318
		Category: hDML,
		//line sql.y: 11319
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 11330
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 11331
		Category: hDML,
		//line sql.y: 11332
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 11344
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 11419
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 11420
		Category: hDML,
		//line sql.y: 11421
		Text: `TABLE <tablename>
`,
		//line sql.y: 11422
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11784
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 11785
		Category: hDML,
		//line sql.y: 11786
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 11787
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11922
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 11923
		Category: hDML,
		//line sql.y: 11924
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 11949
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
