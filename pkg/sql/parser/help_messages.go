// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1511
	`ALTER`: {
		//line sql.y: 1512
		Category: hGroup,
		//line sql.y: 1513
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 1532
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1533
		Category: hDDL,
		//line sql.y: 1534
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1575
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1592
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1593
		Category: hDDL,
		//line sql.y: 1594
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1613
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1618
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1619
		Category: hDDL,
		//line sql.y: 1620
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1623
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1632
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1633
		Category: hDDL,
		//line sql.y: 1634
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1661
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1662
		Category: hDDL,
		//line sql.y: 1663
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1673
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1777
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1778
		Category: hDDL,
		//line sql.y: 1779
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE RELOCATE from <store_id> to <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE from <store_id> to <store_id>
  ALTER RANGE RELOCATE LEASE to <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE to <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1795
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1802
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1803
		Category: hDDL,
		//line sql.y: 1804
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1820
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2466
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2467
		Category: hDDL,
		//line sql.y: 2468
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2484
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2633
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2634
		Category: hMisc,
		//line sql.y: 2635
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2662
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2663
		Category: hCCL,
		//line sql.y: 2664
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_storage: specify a different path to store the incremental backup

`,
		//line sql.y: 2698
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2808
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2809
		Category: hCCL,
		//line sql.y: 2810
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2880
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2965
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2966
		Category: hCCL,
		//line sql.y: 2967
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 2991
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3156
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3157
		Category: hCCL,
		//line sql.y: 3158
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 3186
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 3220
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3221
		Category: hCCL,
		//line sql.y: 3222
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3232
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3384
	`CANCEL`: {
		//line sql.y: 3385
		Category: hGroup,
		//line sql.y: 3386
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3394
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3395
		Category: hMisc,
		//line sql.y: 3396
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3399
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3421
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3422
		Category: hMisc,
		//line sql.y: 3423
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3426
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3457
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3458
		Category: hMisc,
		//line sql.y: 3459
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3462
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3493
	`CANCEL ALL JOBS`: {
		//line sql.y: 3494
		Category: hMisc,
		//line sql.y: 3495
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 3553
	`CREATE`: {
		//line sql.y: 3554
		Category: hGroup,
		//line sql.y: 3555
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3570
	`CREATE EXTENSION`: {
		//line sql.y: 3571
		Category: hCfg,
		//line sql.y: 3572
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3650
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3651
		Category: hMisc,
		//line sql.y: 3652
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3745
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3746
		Category: hCCL,
		//line sql.y: 3747
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3802
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3803
		Category: hCCL,
		//line sql.y: 3804
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3811
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3861
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3862
		Category: hDML,
		//line sql.y: 3863
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3867
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3887
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3888
		Category: hCfg,
		//line sql.y: 3889
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3901
	`DROP`: {
		//line sql.y: 3902
		Category: hGroup,
		//line sql.y: 3903
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3922
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3923
		Category: hDDL,
		//line sql.y: 3924
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3925
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3955
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3956
		Category: hDDL,
		//line sql.y: 3957
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3958
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3970
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3971
		Category: hDDL,
		//line sql.y: 3972
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3973
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3985
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3986
		Category: hDDL,
		//line sql.y: 3987
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3988
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4010
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4011
		Category: hDDL,
		//line sql.y: 4012
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4013
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4033
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4034
		Category: hDDL,
		//line sql.y: 4035
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 4071
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 4072
		Category: hDDL,
		//line sql.y: 4073
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 4093
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 4094
		Category: hPriv,
		//line sql.y: 4095
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 4096
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4120
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4121
		Category: hMisc,
		//line sql.y: 4122
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4125
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4148
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4149
		Category: hMisc,
		//line sql.y: 4150
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4164
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4275
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4276
		Category: hMisc,
		//line sql.y: 4277
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4278
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4309
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4310
		Category: hMisc,
		//line sql.y: 4311
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4312
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4342
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4343
		Category: hMisc,
		//line sql.y: 4344
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4345
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4365
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4366
		Category: hPriv,
		//line sql.y: 4367
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4383
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4432
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4433
		Category: hPriv,
		//line sql.y: 4434
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4450
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4533
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4534
		Category: hCfg,
		//line sql.y: 4535
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4536
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4548
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4549
		Category: hCfg,
		//line sql.y: 4550
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4551
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4560
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4561
		Category: hCfg,
		//line sql.y: 4562
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4565
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4586
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4587
		Category: hExperimental,
		//line sql.y: 4588
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4596
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4602
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4603
		Category: hExperimental,
		//line sql.y: 4604
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4612
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4620
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4621
		Category: hExperimental,
		//line sql.y: 4622
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4633
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4688
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4689
		Category: hCfg,
		//line sql.y: 4690
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4691
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4712
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4713
		Category: hCfg,
		//line sql.y: 4714
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4720
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4739
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 4740
		Category: hCfg,
		//line sql.y: 4741
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 4745
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4756
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4757
		Category: hTxn,
		//line sql.y: 4758
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4767
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4971
	`SHOW`: {
		//line sql.y: 4972
		Category: hGroup,
		//line sql.y: 4973
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 5059
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 5060
		Category: hCfg,
		//line sql.y: 5061
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 5062
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5100
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 5101
		Category: hExperimental,
		//line sql.y: 5102
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 5109
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 5122
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 5123
		Category: hExperimental,
		//line sql.y: 5124
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 5128
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 5141
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 5142
		Category: hCCL,
		//line sql.y: 5143
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 5144
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 5198
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 5199
		Category: hCfg,
		//line sql.y: 5200
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 5203
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5229
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 5230
		Category: hDDL,
		//line sql.y: 5231
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 5232
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 5240
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 5241
		Category: hDDL,
		//line sql.y: 5242
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 5243
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 5263
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 5264
		Category: hDDL,
		//line sql.y: 5265
		Text: `SHOW DATABASES
`,
		//line sql.y: 5266
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 5274
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 5275
		Category: hDDL,
		//line sql.y: 5276
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 5290
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 5291
		Category: hMisc,
		//line sql.y: 5292
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 5320
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 5321
		Category: hMisc,
		//line sql.y: 5322
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 5330
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 5331
		Category: hPriv,
		//line sql.y: 5332
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 5338
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 5351
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 5352
		Category: hDDL,
		//line sql.y: 5353
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 5354
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 5384
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 5385
		Category: hDDL,
		//line sql.y: 5386
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 5387
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 5400
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 5401
		Category: hMisc,
		//line sql.y: 5402
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 5403
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 5430
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 5431
		Category: hMisc,
		//line sql.y: 5432
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 5436
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5498
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5499
		Category: hMisc,
		//line sql.y: 5500
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5503
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5554
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5555
		Category: hMisc,
		//line sql.y: 5556
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5558
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5581
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5582
		Category: hMisc,
		//line sql.y: 5583
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5584
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5597
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5598
		Category: hDDL,
		//line sql.y: 5599
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5600
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5628
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5629
		Category: hMisc,
		//line sql.y: 5630
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5647
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5648
		Category: hDDL,
		//line sql.y: 5649
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5661
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5662
		Category: hDDL,
		//line sql.y: 5663
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5675
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5676
		Category: hMisc,
		//line sql.y: 5677
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5705
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5706
		Category: hCfg,
		//line sql.y: 5707
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5715
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5716
		Category: hCfg,
		//line sql.y: 5717
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5718
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5737
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 5738
		Category: hDDL,
		//line sql.y: 5739
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 5744
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 5784
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 5785
		Category: hDDL,
		//line sql.y: 5786
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 5789
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5802
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5803
		Category: hPriv,
		//line sql.y: 5804
		Text: `SHOW USERS
`,
		//line sql.y: 5805
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5813
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5814
		Category: hPriv,
		//line sql.y: 5815
		Text: `SHOW ROLES
`,
		//line sql.y: 5816
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5824
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5825
		Category: hCfg,
		//line sql.y: 5826
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5829
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5885
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5886
		Category: hMisc,
		//line sql.y: 5887
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5908
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5909
		Category: hMisc,
		//line sql.y: 5910
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5929
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5930
		Category: hDDL,
		//line sql.y: 5931
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5946
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5947
		Category: hDDL,
		//line sql.y: 5948
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 6235
	`PAUSE`: {
		//line sql.y: 6236
		Category: hMisc,
		//line sql.y: 6237
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 6248
	`RESUME`: {
		//line sql.y: 6249
		Category: hMisc,
		//line sql.y: 6250
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 6261
	`RESUME ALL JOBS`: {
		//line sql.y: 6262
		Category: hMisc,
		//line sql.y: 6263
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 6272
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 6273
		Category: hMisc,
		//line sql.y: 6274
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 6277
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6326
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 6327
		Category: hMisc,
		//line sql.y: 6328
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 6332
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6353
	`PAUSE ALL JOBS`: {
		//line sql.y: 6354
		Category: hMisc,
		//line sql.y: 6355
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 6365
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 6366
		Category: hDDL,
		//line sql.y: 6367
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 6400
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 6401
		Category: hDDL,
		//line sql.y: 6402
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 6428
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 6429
		Category: hDDL,
		//line sql.y: 6430
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 6457
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 7366
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 7367
		Category: hDDL,
		//line sql.y: 7368
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 7379
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 7451
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 7452
		Category: hDML,
		//line sql.y: 7453
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 7454
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 7478
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 7479
		Category: hPriv,
		//line sql.y: 7480
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 7481
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7493
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 7494
		Category: hPriv,
		//line sql.y: 7495
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 7499
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7568
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 7569
		Category: hDDL,
		//line sql.y: 7570
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 7571
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7745
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7746
		Category: hDDL,
		//line sql.y: 7747
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7799
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7800
		Category: hDDL,
		//line sql.y: 7801
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 7808
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 8307
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 8308
		Category: hDDL,
		//line sql.y: 8309
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 8445
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 8446
		Category: hTxn,
		//line sql.y: 8447
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8448
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8456
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8457
		Category: hMisc,
		//line sql.y: 8458
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 8461
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 8483
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 8484
		Category: hMisc,
		//line sql.y: 8485
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 8491
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8512
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 8513
		Category: hMisc,
		//line sql.y: 8514
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 8520
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8541
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 8542
		Category: hTxn,
		//line sql.y: 8543
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 8544
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8559
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 8560
		Category: hTxn,
		//line sql.y: 8561
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 8569
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 8582
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 8583
		Category: hTxn,
		//line sql.y: 8584
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 8587
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 8611
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 8612
		Category: hTxn,
		//line sql.y: 8613
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8616
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8730
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8731
		Category: hDDL,
		//line sql.y: 8732
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8733
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8897
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8898
		Category: hDML,
		//line sql.y: 8899
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8907
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8926
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8927
		Category: hDML,
		//line sql.y: 8928
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8932
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 9048
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 9049
		Category: hDML,
		//line sql.y: 9050
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 9057
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 9113
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 9114
		Category: hPriv,
		//line sql.y: 9115
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 9117
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 9128
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 9129
		Category: hPriv,
		//line sql.y: 9130
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 9132
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 9312
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 9313
		Category: hDML,
		//line sql.y: 9314
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 9325
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 9326
		Category: hDML,
		//line sql.y: 9327
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 9339
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 9414
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 9415
		Category: hDML,
		//line sql.y: 9416
		Text: `TABLE <tablename>
`,
		//line sql.y: 9417
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9779
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9780
		Category: hDML,
		//line sql.y: 9781
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9782
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9917
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9918
		Category: hDML,
		//line sql.y: 9919
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9944
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
