// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1499
	`ALTER`: {
		//line sql.y: 1500
		Category: hGroup,
		//line sql.y: 1501
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 1520
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1521
		Category: hDDL,
		//line sql.y: 1522
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1562
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1579
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1580
		Category: hDDL,
		//line sql.y: 1581
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1600
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1605
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1606
		Category: hDDL,
		//line sql.y: 1607
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1610
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1619
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1620
		Category: hDDL,
		//line sql.y: 1621
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1647
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1648
		Category: hDDL,
		//line sql.y: 1649
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1659
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1763
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1764
		Category: hDDL,
		//line sql.y: 1765
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1777
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1782
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1783
		Category: hDDL,
		//line sql.y: 1784
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1800
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2367
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2368
		Category: hDDL,
		//line sql.y: 2369
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2385
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2526
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2527
		Category: hMisc,
		//line sql.y: 2528
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2555
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2556
		Category: hCCL,
		//line sql.y: 2557
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2578
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2688
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2689
		Category: hCCL,
		//line sql.y: 2690
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2759
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2837
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2838
		Category: hCCL,
		//line sql.y: 2839
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
`,
		//line sql.y: 2861
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3018
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3019
		Category: hCCL,
		//line sql.y: 3020
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 3048
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 3092
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3093
		Category: hCCL,
		//line sql.y: 3094
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3103
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3255
	`CANCEL`: {
		//line sql.y: 3256
		Category: hGroup,
		//line sql.y: 3257
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3264
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3265
		Category: hMisc,
		//line sql.y: 3266
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3269
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3291
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3292
		Category: hMisc,
		//line sql.y: 3293
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3296
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3327
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3328
		Category: hMisc,
		//line sql.y: 3329
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3332
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3407
	`CREATE`: {
		//line sql.y: 3408
		Category: hGroup,
		//line sql.y: 3409
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3424
	`CREATE EXTENSION`: {
		//line sql.y: 3425
		Category: hCfg,
		//line sql.y: 3426
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3504
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3505
		Category: hMisc,
		//line sql.y: 3506
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3599
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3600
		Category: hCCL,
		//line sql.y: 3601
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3656
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3657
		Category: hCCL,
		//line sql.y: 3658
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3665
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3715
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3716
		Category: hDML,
		//line sql.y: 3717
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3721
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3741
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3742
		Category: hCfg,
		//line sql.y: 3743
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3755
	`DROP`: {
		//line sql.y: 3756
		Category: hGroup,
		//line sql.y: 3757
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3776
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3777
		Category: hDDL,
		//line sql.y: 3778
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3779
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3809
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3810
		Category: hDDL,
		//line sql.y: 3811
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3812
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3824
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3825
		Category: hDDL,
		//line sql.y: 3826
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3827
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3839
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3840
		Category: hDDL,
		//line sql.y: 3841
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3842
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3864
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3865
		Category: hDDL,
		//line sql.y: 3866
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3867
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3887
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3888
		Category: hDDL,
		//line sql.y: 3889
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3925
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3926
		Category: hDDL,
		//line sql.y: 3927
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3947
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3948
		Category: hPriv,
		//line sql.y: 3949
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3950
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3974
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3975
		Category: hMisc,
		//line sql.y: 3976
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3979
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4002
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4003
		Category: hMisc,
		//line sql.y: 4004
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4018
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4129
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4130
		Category: hMisc,
		//line sql.y: 4131
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4132
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4163
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4164
		Category: hMisc,
		//line sql.y: 4165
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4166
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4196
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4197
		Category: hMisc,
		//line sql.y: 4198
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4199
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4219
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4220
		Category: hPriv,
		//line sql.y: 4221
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4237
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4286
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4287
		Category: hPriv,
		//line sql.y: 4288
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4304
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4387
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4388
		Category: hCfg,
		//line sql.y: 4389
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4390
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4402
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4403
		Category: hCfg,
		//line sql.y: 4404
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4405
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4414
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4415
		Category: hCfg,
		//line sql.y: 4416
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4419
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4440
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4441
		Category: hExperimental,
		//line sql.y: 4442
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4450
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4456
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4457
		Category: hExperimental,
		//line sql.y: 4458
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4466
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4474
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4475
		Category: hExperimental,
		//line sql.y: 4476
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4487
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4542
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4543
		Category: hCfg,
		//line sql.y: 4544
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4545
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4566
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4567
		Category: hCfg,
		//line sql.y: 4568
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4574
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4591
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4592
		Category: hTxn,
		//line sql.y: 4593
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4602
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4803
	`SHOW`: {
		//line sql.y: 4804
		Category: hGroup,
		//line sql.y: 4805
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4891
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4892
		Category: hCfg,
		//line sql.y: 4893
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4894
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4916
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4917
		Category: hExperimental,
		//line sql.y: 4918
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4925
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4938
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4939
		Category: hExperimental,
		//line sql.y: 4940
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4944
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4957
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4958
		Category: hCCL,
		//line sql.y: 4959
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4960
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 5014
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 5015
		Category: hCfg,
		//line sql.y: 5016
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 5019
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5045
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 5046
		Category: hDDL,
		//line sql.y: 5047
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 5048
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 5056
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 5057
		Category: hDDL,
		//line sql.y: 5058
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 5059
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 5079
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 5080
		Category: hDDL,
		//line sql.y: 5081
		Text: `SHOW DATABASES
`,
		//line sql.y: 5082
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 5090
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 5091
		Category: hDDL,
		//line sql.y: 5092
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 5106
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 5107
		Category: hMisc,
		//line sql.y: 5108
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 5136
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 5137
		Category: hMisc,
		//line sql.y: 5138
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 5146
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 5147
		Category: hPriv,
		//line sql.y: 5148
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 5154
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 5167
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 5168
		Category: hDDL,
		//line sql.y: 5169
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 5170
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 5200
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 5201
		Category: hDDL,
		//line sql.y: 5202
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 5203
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 5216
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 5217
		Category: hMisc,
		//line sql.y: 5218
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 5219
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 5246
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 5247
		Category: hMisc,
		//line sql.y: 5248
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 5252
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5314
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5315
		Category: hMisc,
		//line sql.y: 5316
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5319
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5370
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5371
		Category: hMisc,
		//line sql.y: 5372
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5374
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5397
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5398
		Category: hMisc,
		//line sql.y: 5399
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5400
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5413
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5414
		Category: hDDL,
		//line sql.y: 5415
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5416
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5444
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5445
		Category: hMisc,
		//line sql.y: 5446
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5463
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5464
		Category: hDDL,
		//line sql.y: 5465
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5477
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5478
		Category: hDDL,
		//line sql.y: 5479
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5491
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5492
		Category: hMisc,
		//line sql.y: 5493
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5521
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5522
		Category: hCfg,
		//line sql.y: 5523
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5531
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5532
		Category: hCfg,
		//line sql.y: 5533
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5534
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5553
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 5554
		Category: hDDL,
		//line sql.y: 5555
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5558
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 5590
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 5591
		Category: hDDL,
		//line sql.y: 5592
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 5595
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5610
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5611
		Category: hPriv,
		//line sql.y: 5612
		Text: `SHOW USERS
`,
		//line sql.y: 5613
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5621
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5622
		Category: hPriv,
		//line sql.y: 5623
		Text: `SHOW ROLES
`,
		//line sql.y: 5624
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5632
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5633
		Category: hCfg,
		//line sql.y: 5634
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5637
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5693
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5694
		Category: hMisc,
		//line sql.y: 5695
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5716
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5717
		Category: hMisc,
		//line sql.y: 5718
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5737
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5738
		Category: hDDL,
		//line sql.y: 5739
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5754
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5755
		Category: hDDL,
		//line sql.y: 5756
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 6044
	`PAUSE`: {
		//line sql.y: 6045
		Category: hMisc,
		//line sql.y: 6046
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 6056
	`RESUME`: {
		//line sql.y: 6057
		Category: hMisc,
		//line sql.y: 6058
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 6068
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 6069
		Category: hMisc,
		//line sql.y: 6070
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 6073
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6122
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 6123
		Category: hMisc,
		//line sql.y: 6124
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 6128
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6149
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 6150
		Category: hDDL,
		//line sql.y: 6151
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 6184
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 6185
		Category: hDDL,
		//line sql.y: 6186
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 6212
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 6213
		Category: hDDL,
		//line sql.y: 6214
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 6244
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 7193
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 7194
		Category: hDDL,
		//line sql.y: 7195
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 7205
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 7269
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 7270
		Category: hDML,
		//line sql.y: 7271
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 7272
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 7290
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 7291
		Category: hPriv,
		//line sql.y: 7292
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 7293
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7305
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 7306
		Category: hPriv,
		//line sql.y: 7307
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 7311
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7380
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 7381
		Category: hDDL,
		//line sql.y: 7382
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 7383
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7558
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7559
		Category: hDDL,
		//line sql.y: 7560
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7612
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7613
		Category: hDDL,
		//line sql.y: 7614
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7624
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 8127
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 8128
		Category: hDDL,
		//line sql.y: 8129
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 8265
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 8266
		Category: hTxn,
		//line sql.y: 8267
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8268
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8276
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8277
		Category: hMisc,
		//line sql.y: 8278
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 8281
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 8303
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 8304
		Category: hMisc,
		//line sql.y: 8305
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 8311
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8332
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 8333
		Category: hMisc,
		//line sql.y: 8334
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 8340
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8361
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 8362
		Category: hTxn,
		//line sql.y: 8363
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 8364
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8379
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 8380
		Category: hTxn,
		//line sql.y: 8381
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 8389
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 8402
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 8403
		Category: hTxn,
		//line sql.y: 8404
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 8407
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 8431
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 8432
		Category: hTxn,
		//line sql.y: 8433
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8436
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8550
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8551
		Category: hDDL,
		//line sql.y: 8552
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8553
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8717
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8718
		Category: hDML,
		//line sql.y: 8719
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8727
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8746
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8747
		Category: hDML,
		//line sql.y: 8748
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8752
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8868
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8869
		Category: hDML,
		//line sql.y: 8870
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8877
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8933
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8934
		Category: hPriv,
		//line sql.y: 8935
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8937
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8948
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8949
		Category: hPriv,
		//line sql.y: 8950
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8952
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 9132
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 9133
		Category: hDML,
		//line sql.y: 9134
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 9145
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 9146
		Category: hDML,
		//line sql.y: 9147
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 9159
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 9234
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 9235
		Category: hDML,
		//line sql.y: 9236
		Text: `TABLE <tablename>
`,
		//line sql.y: 9237
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9608
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9609
		Category: hDML,
		//line sql.y: 9610
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9611
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9725
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9726
		Category: hDML,
		//line sql.y: 9727
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9750
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
