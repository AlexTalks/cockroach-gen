// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1311
	`ALTER`: {
		//line sql.y: 1312
		Category: hGroup,
		//line sql.y: 1313
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1330
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1331
		Category: hDDL,
		//line sql.y: 1332
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET [REGIONAL AFFINITY [TO | AT] ... | LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1372
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1388
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1389
		Category: hDDL,
		//line sql.y: 1390
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1409
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1414
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1415
		Category: hDDL,
		//line sql.y: 1416
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1419
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1427
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1428
		Category: hDDL,
		//line sql.y: 1429
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1454
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1455
		Category: hDDL,
		//line sql.y: 1456
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> SET PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1464
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1520
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1521
		Category: hDDL,
		//line sql.y: 1522
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1534
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1539
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1540
		Category: hDDL,
		//line sql.y: 1541
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1557
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2078
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2079
		Category: hDDL,
		//line sql.y: 2080
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2096
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2238
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2239
		Category: hMisc,
		//line sql.y: 2240
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2267
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2268
		Category: hCCL,
		//line sql.y: 2269
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2289
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2393
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2394
		Category: hCCL,
		//line sql.y: 2395
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2464
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2542
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2543
		Category: hCCL,
		//line sql.y: 2544
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2565
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2686
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2687
		Category: hCCL,
		//line sql.y: 2688
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2716
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2760
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2761
		Category: hCCL,
		//line sql.y: 2762
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2771
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2907
	`CANCEL`: {
		//line sql.y: 2908
		Category: hGroup,
		//line sql.y: 2909
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2916
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2917
		Category: hMisc,
		//line sql.y: 2918
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2921
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2943
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2944
		Category: hMisc,
		//line sql.y: 2945
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2948
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2979
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2980
		Category: hMisc,
		//line sql.y: 2981
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2984
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3054
	`CREATE`: {
		//line sql.y: 3055
		Category: hGroup,
		//line sql.y: 3056
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3069
	`CREATE EXTENSION`: {
		//line sql.y: 3070
		Category: hCfg,
		//line sql.y: 3071
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3149
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3150
		Category: hMisc,
		//line sql.y: 3151
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3294
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3295
		Category: hDML,
		//line sql.y: 3296
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3300
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3320
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3321
		Category: hCfg,
		//line sql.y: 3322
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3334
	`DROP`: {
		//line sql.y: 3335
		Category: hGroup,
		//line sql.y: 3336
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3355
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3356
		Category: hDDL,
		//line sql.y: 3357
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3358
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3388
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3389
		Category: hDDL,
		//line sql.y: 3390
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3391
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3403
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3404
		Category: hDDL,
		//line sql.y: 3405
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3406
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3418
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3419
		Category: hDDL,
		//line sql.y: 3420
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3421
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3443
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3444
		Category: hDDL,
		//line sql.y: 3445
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3446
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3466
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3467
		Category: hDDL,
		//line sql.y: 3468
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3504
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3505
		Category: hDDL,
		//line sql.y: 3506
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3526
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3527
		Category: hPriv,
		//line sql.y: 3528
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3529
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3553
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3554
		Category: hMisc,
		//line sql.y: 3555
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3558
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3581
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3582
		Category: hMisc,
		//line sql.y: 3583
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3597
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3704
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3705
		Category: hMisc,
		//line sql.y: 3706
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3707
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3738
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3739
		Category: hMisc,
		//line sql.y: 3740
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3741
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3771
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3772
		Category: hMisc,
		//line sql.y: 3773
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3774
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3794
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3795
		Category: hPriv,
		//line sql.y: 3796
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 3811
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3841
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3842
		Category: hPriv,
		//line sql.y: 3843
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 3858
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3926
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3927
		Category: hCfg,
		//line sql.y: 3928
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3929
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3941
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3942
		Category: hCfg,
		//line sql.y: 3943
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3944
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3953
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3954
		Category: hCfg,
		//line sql.y: 3955
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3958
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3979
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3980
		Category: hExperimental,
		//line sql.y: 3981
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3989
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3995
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3996
		Category: hExperimental,
		//line sql.y: 3997
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4005
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4013
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4014
		Category: hExperimental,
		//line sql.y: 4015
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4026
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4081
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4082
		Category: hCfg,
		//line sql.y: 4083
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4084
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4105
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4106
		Category: hCfg,
		//line sql.y: 4107
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 4113
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4130
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4131
		Category: hTxn,
		//line sql.y: 4132
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4141
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4333
	`SHOW`: {
		//line sql.y: 4334
		Category: hGroup,
		//line sql.y: 4335
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES, SHOW REGIONS,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY
`,
	},
	//line sql.y: 4417
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4418
		Category: hCfg,
		//line sql.y: 4419
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4420
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4441
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4442
		Category: hExperimental,
		//line sql.y: 4443
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4450
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4463
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4464
		Category: hExperimental,
		//line sql.y: 4465
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4469
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4482
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4483
		Category: hCCL,
		//line sql.y: 4484
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4485
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4539
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4540
		Category: hCfg,
		//line sql.y: 4541
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4544
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4570
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4571
		Category: hDDL,
		//line sql.y: 4572
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4573
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4581
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4582
		Category: hDDL,
		//line sql.y: 4583
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4584
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4604
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4605
		Category: hDDL,
		//line sql.y: 4606
		Text: `SHOW DATABASES
`,
		//line sql.y: 4607
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4615
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4616
		Category: hMisc,
		//line sql.y: 4617
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4645
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4646
		Category: hMisc,
		//line sql.y: 4647
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4655
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4656
		Category: hPriv,
		//line sql.y: 4657
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4663
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4676
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4677
		Category: hDDL,
		//line sql.y: 4678
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4679
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4709
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4710
		Category: hDDL,
		//line sql.y: 4711
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4712
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4725
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4726
		Category: hMisc,
		//line sql.y: 4727
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4728
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4749
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4750
		Category: hMisc,
		//line sql.y: 4751
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4755
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4799
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4800
		Category: hMisc,
		//line sql.y: 4801
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4804
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4851
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4852
		Category: hMisc,
		//line sql.y: 4853
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4855
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4878
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4879
		Category: hMisc,
		//line sql.y: 4880
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4881
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4894
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4895
		Category: hDDL,
		//line sql.y: 4896
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4897
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4925
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4926
		Category: hMisc,
		//line sql.y: 4927
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4944
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4945
		Category: hDDL,
		//line sql.y: 4946
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4958
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4959
		Category: hDDL,
		//line sql.y: 4960
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4972
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4973
		Category: hMisc,
		//line sql.y: 4974
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4990
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4991
		Category: hCfg,
		//line sql.y: 4992
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5000
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5001
		Category: hCfg,
		//line sql.y: 5002
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5003
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5022
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5023
		Category: hDDL,
		//line sql.y: 5024
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 5025
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5043
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5044
		Category: hPriv,
		//line sql.y: 5045
		Text: `SHOW USERS
`,
		//line sql.y: 5046
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5054
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5055
		Category: hPriv,
		//line sql.y: 5056
		Text: `SHOW ROLES
`,
		//line sql.y: 5057
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5113
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5114
		Category: hMisc,
		//line sql.y: 5115
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5136
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5137
		Category: hMisc,
		//line sql.y: 5138
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5157
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5158
		Category: hDDL,
		//line sql.y: 5159
		Text: `
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5424
	`PAUSE`: {
		//line sql.y: 5425
		Category: hMisc,
		//line sql.y: 5426
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5436
	`RESUME`: {
		//line sql.y: 5437
		Category: hMisc,
		//line sql.y: 5438
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5448
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5449
		Category: hMisc,
		//line sql.y: 5450
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5453
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5488
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5489
		Category: hMisc,
		//line sql.y: 5490
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5494
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5515
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5516
		Category: hDDL,
		//line sql.y: 5517
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5550
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5551
		Category: hDDL,
		//line sql.y: 5552
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5578
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5579
		Category: hDDL,
		//line sql.y: 5580
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE [WITHOUT INDEX] ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5610
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6465
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6466
		Category: hDDL,
		//line sql.y: 6467
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6477
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6542
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6543
		Category: hDML,
		//line sql.y: 6544
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6545
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6563
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6564
		Category: hPriv,
		//line sql.y: 6565
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6566
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6578
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6579
		Category: hPriv,
		//line sql.y: 6580
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6581
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6610
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6611
		Category: hDDL,
		//line sql.y: 6612
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6613
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6788
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6789
		Category: hDDL,
		//line sql.y: 6790
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6833
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6834
		Category: hDDL,
		//line sql.y: 6835
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6845
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7297
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7298
		Category: hTxn,
		//line sql.y: 7299
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7300
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7308
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7309
		Category: hMisc,
		//line sql.y: 7310
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7313
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7335
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7336
		Category: hMisc,
		//line sql.y: 7337
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7343
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7364
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7365
		Category: hMisc,
		//line sql.y: 7366
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleid>

`,
		//line sql.y: 7372
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7393
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7394
		Category: hTxn,
		//line sql.y: 7395
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7396
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7411
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7412
		Category: hTxn,
		//line sql.y: 7413
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7421
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7434
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7435
		Category: hTxn,
		//line sql.y: 7436
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7439
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7463
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7464
		Category: hTxn,
		//line sql.y: 7465
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7468
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7582
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7583
		Category: hDDL,
		//line sql.y: 7584
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7585
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7722
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7723
		Category: hDML,
		//line sql.y: 7724
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7732
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7751
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7752
		Category: hDML,
		//line sql.y: 7753
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7757
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7873
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7874
		Category: hDML,
		//line sql.y: 7875
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7882
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7938
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 7939
		Category: hPriv,
		//line sql.y: 7940
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 7942
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 7953
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 7954
		Category: hPriv,
		//line sql.y: 7955
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 7957
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8137
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8138
		Category: hDML,
		//line sql.y: 8139
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8150
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8151
		Category: hDML,
		//line sql.y: 8152
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8164
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8239
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8240
		Category: hDML,
		//line sql.y: 8241
		Text: `TABLE <tablename>
`,
		//line sql.y: 8242
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8616
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8617
		Category: hDML,
		//line sql.y: 8618
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8619
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8728
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8729
		Category: hDML,
		//line sql.y: 8730
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 8752
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
