// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1395
	`ALTER`: {
		//line sql.y: 1396
		Category: hGroup,
		//line sql.y: 1397
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1415
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1416
		Category: hDDL,
		//line sql.y: 1417
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1457
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1474
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1475
		Category: hDDL,
		//line sql.y: 1476
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1495
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1500
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1501
		Category: hDDL,
		//line sql.y: 1502
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1505
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1514
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1515
		Category: hDDL,
		//line sql.y: 1516
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1542
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1543
		Category: hDDL,
		//line sql.y: 1544
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1552
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1616
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1617
		Category: hDDL,
		//line sql.y: 1618
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1630
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1635
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1636
		Category: hDDL,
		//line sql.y: 1637
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1653
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2205
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2206
		Category: hDDL,
		//line sql.y: 2207
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2223
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2374
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2375
		Category: hMisc,
		//line sql.y: 2376
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2403
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2404
		Category: hCCL,
		//line sql.y: 2405
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2426
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2536
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2537
		Category: hCCL,
		//line sql.y: 2538
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2607
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2685
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2686
		Category: hCCL,
		//line sql.y: 2687
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
`,
		//line sql.y: 2709
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2871
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2872
		Category: hCCL,
		//line sql.y: 2873
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2901
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2945
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2946
		Category: hCCL,
		//line sql.y: 2947
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2956
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3108
	`CANCEL`: {
		//line sql.y: 3109
		Category: hGroup,
		//line sql.y: 3110
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3117
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3118
		Category: hMisc,
		//line sql.y: 3119
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3122
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3144
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3145
		Category: hMisc,
		//line sql.y: 3146
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3149
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3180
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3181
		Category: hMisc,
		//line sql.y: 3182
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3185
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3256
	`CREATE`: {
		//line sql.y: 3257
		Category: hGroup,
		//line sql.y: 3258
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3273
	`CREATE EXTENSION`: {
		//line sql.y: 3274
		Category: hCfg,
		//line sql.y: 3275
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3353
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3354
		Category: hMisc,
		//line sql.y: 3355
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3448
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3449
		Category: hCCL,
		//line sql.y: 3450
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3505
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3506
		Category: hCCL,
		//line sql.y: 3507
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3514
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3564
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3565
		Category: hDML,
		//line sql.y: 3566
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3570
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3590
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3591
		Category: hCfg,
		//line sql.y: 3592
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3604
	`DROP`: {
		//line sql.y: 3605
		Category: hGroup,
		//line sql.y: 3606
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3625
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3626
		Category: hDDL,
		//line sql.y: 3627
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3628
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3658
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3659
		Category: hDDL,
		//line sql.y: 3660
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3661
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3673
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3674
		Category: hDDL,
		//line sql.y: 3675
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3676
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3688
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3689
		Category: hDDL,
		//line sql.y: 3690
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3691
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3713
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3714
		Category: hDDL,
		//line sql.y: 3715
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3716
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3736
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3737
		Category: hDDL,
		//line sql.y: 3738
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3774
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3775
		Category: hDDL,
		//line sql.y: 3776
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3796
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3797
		Category: hPriv,
		//line sql.y: 3798
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3799
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3823
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3824
		Category: hMisc,
		//line sql.y: 3825
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3828
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3851
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3852
		Category: hMisc,
		//line sql.y: 3853
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3867
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3978
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3979
		Category: hMisc,
		//line sql.y: 3980
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3981
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4012
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4013
		Category: hMisc,
		//line sql.y: 4014
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4015
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4045
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4046
		Category: hMisc,
		//line sql.y: 4047
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4048
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4068
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4069
		Category: hPriv,
		//line sql.y: 4070
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 4085
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4123
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4124
		Category: hPriv,
		//line sql.y: 4125
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 4140
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4212
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4213
		Category: hCfg,
		//line sql.y: 4214
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4215
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4227
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4228
		Category: hCfg,
		//line sql.y: 4229
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4230
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4239
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4240
		Category: hCfg,
		//line sql.y: 4241
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4244
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4265
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4266
		Category: hExperimental,
		//line sql.y: 4267
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4275
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4281
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4282
		Category: hExperimental,
		//line sql.y: 4283
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4291
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4299
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4300
		Category: hExperimental,
		//line sql.y: 4301
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4312
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4367
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4368
		Category: hCfg,
		//line sql.y: 4369
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4370
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4391
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4392
		Category: hCfg,
		//line sql.y: 4393
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4399
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4416
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4417
		Category: hTxn,
		//line sql.y: 4418
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4427
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4619
	`SHOW`: {
		//line sql.y: 4620
		Category: hGroup,
		//line sql.y: 4621
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4705
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4706
		Category: hCfg,
		//line sql.y: 4707
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4708
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4729
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4730
		Category: hExperimental,
		//line sql.y: 4731
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4738
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4751
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4752
		Category: hExperimental,
		//line sql.y: 4753
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4757
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4770
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4771
		Category: hCCL,
		//line sql.y: 4772
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4773
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4827
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4828
		Category: hCfg,
		//line sql.y: 4829
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4832
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4858
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4859
		Category: hDDL,
		//line sql.y: 4860
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4861
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4869
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4870
		Category: hDDL,
		//line sql.y: 4871
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4872
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4892
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4893
		Category: hDDL,
		//line sql.y: 4894
		Text: `SHOW DATABASES
`,
		//line sql.y: 4895
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4903
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4904
		Category: hMisc,
		//line sql.y: 4905
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4933
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4934
		Category: hMisc,
		//line sql.y: 4935
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4943
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4944
		Category: hPriv,
		//line sql.y: 4945
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4951
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4964
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4965
		Category: hDDL,
		//line sql.y: 4966
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4967
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4997
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4998
		Category: hDDL,
		//line sql.y: 4999
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 5000
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 5013
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 5014
		Category: hMisc,
		//line sql.y: 5015
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 5016
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 5043
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 5044
		Category: hMisc,
		//line sql.y: 5045
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 5049
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5093
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5094
		Category: hMisc,
		//line sql.y: 5095
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5098
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5145
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5146
		Category: hMisc,
		//line sql.y: 5147
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5149
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5172
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5173
		Category: hMisc,
		//line sql.y: 5174
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5175
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5188
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5189
		Category: hDDL,
		//line sql.y: 5190
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5191
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5219
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5220
		Category: hMisc,
		//line sql.y: 5221
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5238
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5239
		Category: hDDL,
		//line sql.y: 5240
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5252
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5253
		Category: hDDL,
		//line sql.y: 5254
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5266
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5267
		Category: hMisc,
		//line sql.y: 5268
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5284
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5285
		Category: hCfg,
		//line sql.y: 5286
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5294
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5295
		Category: hCfg,
		//line sql.y: 5296
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5297
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5316
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5317
		Category: hDDL,
		//line sql.y: 5318
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5321
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5343
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5344
		Category: hPriv,
		//line sql.y: 5345
		Text: `SHOW USERS
`,
		//line sql.y: 5346
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5354
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5355
		Category: hPriv,
		//line sql.y: 5356
		Text: `SHOW ROLES
`,
		//line sql.y: 5357
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5365
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5366
		Category: hCfg,
		//line sql.y: 5367
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5370
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5426
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5427
		Category: hMisc,
		//line sql.y: 5428
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5449
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5450
		Category: hMisc,
		//line sql.y: 5451
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5470
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5471
		Category: hDDL,
		//line sql.y: 5472
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5487
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5488
		Category: hDDL,
		//line sql.y: 5489
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5777
	`PAUSE`: {
		//line sql.y: 5778
		Category: hMisc,
		//line sql.y: 5779
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5789
	`RESUME`: {
		//line sql.y: 5790
		Category: hMisc,
		//line sql.y: 5791
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5801
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5802
		Category: hMisc,
		//line sql.y: 5803
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5806
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5841
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5842
		Category: hMisc,
		//line sql.y: 5843
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5847
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5868
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5869
		Category: hDDL,
		//line sql.y: 5870
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5903
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5904
		Category: hDDL,
		//line sql.y: 5905
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5931
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5932
		Category: hDDL,
		//line sql.y: 5933
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5963
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6884
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6885
		Category: hDDL,
		//line sql.y: 6886
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6896
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6960
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6961
		Category: hDML,
		//line sql.y: 6962
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6963
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6981
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6982
		Category: hPriv,
		//line sql.y: 6983
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6984
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6996
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6997
		Category: hPriv,
		//line sql.y: 6998
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6999
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7028
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 7029
		Category: hDDL,
		//line sql.y: 7030
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 7031
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7206
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7207
		Category: hDDL,
		//line sql.y: 7208
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7260
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7261
		Category: hDDL,
		//line sql.y: 7262
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7272
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7783
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7784
		Category: hTxn,
		//line sql.y: 7785
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7786
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7794
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7795
		Category: hMisc,
		//line sql.y: 7796
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7799
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7821
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7822
		Category: hMisc,
		//line sql.y: 7823
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7829
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7850
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7851
		Category: hMisc,
		//line sql.y: 7852
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7858
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7879
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7880
		Category: hTxn,
		//line sql.y: 7881
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7882
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7897
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7898
		Category: hTxn,
		//line sql.y: 7899
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7907
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7920
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7921
		Category: hTxn,
		//line sql.y: 7922
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7925
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7949
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7950
		Category: hTxn,
		//line sql.y: 7951
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7954
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8068
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8069
		Category: hDDL,
		//line sql.y: 8070
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8071
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8214
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8215
		Category: hDML,
		//line sql.y: 8216
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8224
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8243
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8244
		Category: hDML,
		//line sql.y: 8245
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8249
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8365
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8366
		Category: hDML,
		//line sql.y: 8367
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8374
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8430
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8431
		Category: hPriv,
		//line sql.y: 8432
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8434
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8445
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8446
		Category: hPriv,
		//line sql.y: 8447
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8449
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8629
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8630
		Category: hDML,
		//line sql.y: 8631
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8642
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8643
		Category: hDML,
		//line sql.y: 8644
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8656
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8731
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8732
		Category: hDML,
		//line sql.y: 8733
		Text: `TABLE <tablename>
`,
		//line sql.y: 8734
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9105
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9106
		Category: hDML,
		//line sql.y: 9107
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9108
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9217
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9218
		Category: hDML,
		//line sql.y: 9219
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9241
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
