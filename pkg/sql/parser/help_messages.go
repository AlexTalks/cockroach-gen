// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
  //line sql.y: 1825
  `ALTER`: {
    //line sql.y: 1826
    Category: hGroup,
    //line sql.y: 1827
    Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES
`,
  },
  //line sql.y: 1852
  `ALTER TABLE`: {
    ShortDescription: `change the definition of a table`,
    //line sql.y: 1853
    Category: hDDL,
    //line sql.y: 1854
    Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> ADD GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [ ( opt_sequence_option_list ) ]
  ALTER TABLE ... ALTER [COLUMN] <colname> SET GENERATED { ALWAYS | BY DEFAULT }
  ALTER TABLE ... ALTER [COLUMN] <colname> <identity_option_list>
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP IDENTITY [ IF EXISTS ]
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 1901
    SeeAlso: `WEBDOCS/alter-table.html
`,
  },
  //line sql.y: 1917
  `ALTER PARTITION`: {
    ShortDescription: `apply zone configurations to a partition`,
    //line sql.y: 1918
    Category: hDDL,
    //line sql.y: 1919
    Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 1938
    SeeAlso: `WEBDOCS/alter-partition.html
`,
  },
  //line sql.y: 1943
  `ALTER VIEW`: {
    ShortDescription: `change the definition of a view`,
    //line sql.y: 1944
    Category: hDDL,
    //line sql.y: 1945
    Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
    //line sql.y: 1948
    SeeAlso: `WEBDOCS/alter-view.html
`,
  },
  //line sql.y: 1957
  `ALTER SEQUENCE`: {
    ShortDescription: `change the definition of a sequence`,
    //line sql.y: 1958
    Category: hDDL,
    //line sql.y: 1959
    Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
  },
  //line sql.y: 1988
  `ALTER DATABASE`: {
    ShortDescription: `change the definition of a database`,
    //line sql.y: 1989
    Category: hDDL,
    //line sql.y: 1990
    Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
    //line sql.y: 2003
    SeeAlso: `WEBDOCS/alter-database.html
`,
  },
  //line sql.y: 2022
  `ALTER FUNCTION`: {
    ShortDescription: `change the definition of a function`,
    //line sql.y: 2023
    Category: hDDL,
    //line sql.y: 2024
    Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
`,
    //line sql.y: 2039
    SeeAlso: `WEBDOCS/alter-function.html
`,
  },
  //line sql.y: 2048
  `ALTER PROCEDURE`: {
    ShortDescription: `change the definition of a procedure`,
    //line sql.y: 2049
    Category: hDDL,
    //line sql.y: 2050
    Text: `
ALTER PROCEDURE name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER PROCEDURE name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER PROCEDURE name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

`,
    //line sql.y: 2058
    SeeAlso: `WEBDOCS/alter-procedure.html
`,
  },
  //line sql.y: 2252
  `ALTER RANGE`: {
    ShortDescription: `change the parameters of a range`,
    //line sql.y: 2253
    Category: hDDL,
    //line sql.y: 2254
    Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 2270
    SeeAlso: `ALTER TABLE
`,
  },
  //line sql.y: 2276
  `ALTER INDEX`: {
    ShortDescription: `change the definition of an index`,
    //line sql.y: 2277
    Category: hDDL,
    //line sql.y: 2278
    Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE | INVISIBLE | VISIBILITY ...]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
    //line sql.y: 2296
    SeeAlso: `WEBDOCS/alter-index.html
`,
  },
  //line sql.y: 3077
  `ALTER TYPE`: {
    ShortDescription: `change the definition of a type.`,
    //line sql.y: 3078
    Category: hDDL,
    //line sql.y: 3079
    Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
    //line sql.y: 3095
    SeeAlso: `WEBDOCS/alter-type.html
`,
  },
  //line sql.y: 3244
  `REFRESH`: {
    ShortDescription: `recalculate a materialized view`,
    //line sql.y: 3245
    Category: hMisc,
    //line sql.y: 3246
    Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
  },
  //line sql.y: 3273
  `BACKUP`: {
    ShortDescription: `back up data to external storage`,
    //line sql.y: 3274
    Category: hCCL,
    //line sql.y: 3275
    Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup
   include_all_virtual_clusters: enable backups of all virtual clusters during a cluster backup

`,
    //line sql.y: 3310
    SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
  },
  //line sql.y: 3456
  `CREATE SCHEDULE FOR BACKUP`: {
    ShortDescription: `backup data periodically`,
    //line sql.y: 3457
    Category: hCCL,
    //line sql.y: 3458
    Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
    //line sql.y: 3528
    SeeAlso: `BACKUP
`,
  },
  //line sql.y: 3546
  `ALTER BACKUP SCHEDULE`: {
    ShortDescription: `alter an existing backup schedule`,
    //line sql.y: 3547
    Category: hCCL,
    //line sql.y: 3548
    Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
    //line sql.y: 3560
    SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
  },
  //line sql.y: 3708
  `CREATE EXTERNAL CONNECTION`: {
    ShortDescription: `create a new external connection`,
    //line sql.y: 3709
    Category: hMisc,
    //line sql.y: 3710
    Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
  },
  //line sql.y: 3728
  `DROP EXTERNAL CONNECTION`: {
    ShortDescription: `drop an existing external connection`,
    //line sql.y: 3729
    Category: hMisc,
    //line sql.y: 3730
    Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
  },
  //line sql.y: 3744
  `RESTORE`: {
    ShortDescription: `restore data from external storage`,
    //line sql.y: 3745
    Category: hCCL,
    //line sql.y: 3746
    Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   skip_missing_udfs: skip restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
   include_all_virtual_clusters: enable backups of all virtual clusters during a cluster backup
`,
    //line sql.y: 3776
    SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
  },
  //line sql.y: 3996
  `IMPORT`: {
    ShortDescription: `load data from file in a distributed manner`,
    //line sql.y: 3997
    Category: hCCL,
    //line sql.y: 3998
    Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
    //line sql.y: 4016
    SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
  },
  //line sql.y: 4050
  `EXPORT`: {
    ShortDescription: `export data to file in a distributed manner`,
    //line sql.y: 4051
    Category: hCCL,
    //line sql.y: 4052
    Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
    //line sql.y: 4062
    SeeAlso: `SELECT
`,
  },
  //line sql.y: 4144
  `CALL`: {
    ShortDescription: `invoke a procedure`,
    //line sql.y: 4145
    Category: hMisc,
    //line sql.y: 4146
    Text: `CALL <name> ( [ <expr> [, ...] ] )
`,
    //line sql.y: 4147
    SeeAlso: `CREATE PROCEDURE
`,
  },
  //line sql.y: 4389
  `CANCEL`: {
    //line sql.y: 4390
    Category: hGroup,
    //line sql.y: 4391
    Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
  },
  //line sql.y: 4399
  `CANCEL JOBS`: {
    ShortDescription: `cancel background jobs`,
    //line sql.y: 4400
    Category: hMisc,
    //line sql.y: 4401
    Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
    //line sql.y: 4404
    SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
  },
  //line sql.y: 4426
  `CANCEL QUERIES`: {
    ShortDescription: `cancel running queries`,
    //line sql.y: 4427
    Category: hMisc,
    //line sql.y: 4428
    Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
    //line sql.y: 4431
    SeeAlso: `SHOW STATEMENTS
`,
  },
  //line sql.y: 4462
  `CANCEL SESSIONS`: {
    ShortDescription: `cancel open sessions`,
    //line sql.y: 4463
    Category: hMisc,
    //line sql.y: 4464
    Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
    //line sql.y: 4467
    SeeAlso: `SHOW SESSIONS
`,
  },
  //line sql.y: 4498
  `CANCEL ALL JOBS`: {
    ShortDescription: `cancel all background jobs`,
    //line sql.y: 4499
    Category: hMisc,
    //line sql.y: 4500
    Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
  },
  //line sql.y: 4563
  `CREATE`: {
    //line sql.y: 4564
    Category: hGroup,
    //line sql.y: 4565
    Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION, CREATE SCHEDULE
`,
  },
  //line sql.y: 4581
  `CREATE VIRTUAL CLUSTER`: {
    ShortDescription: `create a new virtual cluster`,
    //line sql.y: 4582
    Category: hExperimental,
    //line sql.y: 4583
    Text: `
CREATE VIRTUAL CLUSTER [ IF NOT EXISTS ] name [ LIKE <virtual_cluster_spec> ] [ <replication> ]

Replication option:
   FROM REPLICATION OF <virtual_cluster_spec> ON <location> [ WITH OPTIONS ... ]
`,
  },
  //line sql.y: 4688
  `CREATE SCHEDULE`: {
    //line sql.y: 4689
    Category: hGroup,
    //line sql.y: 4690
    Text: `
CREATE SCHEDULE FOR BACKUP,
CREATE SCHEDULE FOR CHANGEFEED
`,
  },
  //line sql.y: 4698
  `CREATE EXTENSION`: {
    ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
    //line sql.y: 4699
    Category: hCfg,
    //line sql.y: 4700
    Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
  },
  //line sql.y: 4718
  `CREATE FUNCTION`: {
    ShortDescription: `define a new function`,
    //line sql.y: 4719
    Category: hDDL,
    //line sql.y: 4720
    Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
 } ...
`,
    //line sql.y: 4730
    SeeAlso: `WEBDOCS/create-function.html
`,
  },
  //line sql.y: 4766
  `CREATE PROCEDURE`: {
    ShortDescription: `define a new procedure`,
    //line sql.y: 4767
    Category: hDDL,
    //line sql.y: 4768
    Text: `
CREATE [ OR REPLACE ] PROCEDURE
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
 { LANGUAGE lang_name
   | AS 'definition'
 } ...
`,
    //line sql.y: 4774
    SeeAlso: `WEBDOCS/create-procedure.html
`,
  },
  //line sql.y: 5036
  `DROP FUNCTION`: {
    ShortDescription: `remove a function`,
    //line sql.y: 5037
    Category: hDDL,
    //line sql.y: 5038
    Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
    //line sql.y: 5041
    SeeAlso: `WEBDOCS/drop-function.html
`,
  },
  //line sql.y: 5060
  `DROP PROCEDURE`: {
    ShortDescription: `remove a procedure`,
    //line sql.y: 5061
    Category: hDDL,
    //line sql.y: 5062
    Text: `
DROP PROCEDURE [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
    //line sql.y: 5065
    SeeAlso: `WEBDOCS/drop-procedure.html
`,
  },
  //line sql.y: 5292
  `CREATE STATISTICS`: {
    ShortDescription: `create a new table statistic`,
    //line sql.y: 5293
    Category: hMisc,
    //line sql.y: 5294
    Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
  },
  //line sql.y: 5394
  `CREATE CHANGEFEED`: {
    ShortDescription: `create change data capture`,
    //line sql.y: 5395
    Category: hCCL,
    //line sql.y: 5396
    Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
  },
  //line sql.y: 5438
  `CREATE SCHEDULE FOR CHANGEFEED`: {
    ShortDescription: `create changefeed periodically`,
    //line sql.y: 5439
    Category: hCCL,
    //line sql.y: 5440
    Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR CHANGEFEED
<targets> INTO <sink> [WITH <options>]
RECURRING [crontab|NEVER]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All changefeeds run in UTC timezone.

Description:
  Optional description (or name) for this schedule

RECURRING <crontab>:
  The RECURRING expression specifies when export runs
  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

sink: data capture stream destination (Enterprise only)
`,
    //line sql.y: 5462
    SeeAlso: `CREATE CHANGEFEED
`,
  },
  //line sql.y: 5561
  `DELETE`: {
    ShortDescription: `delete rows from a table`,
    //line sql.y: 5562
    Category: hDML,
    //line sql.y: 5563
    Text: `
DELETE
   [BATCH [SIZE <expr>]]
   FROM <tablename>
   [WHERE <expr>]
   [ORDER BY <exprs...>]
   [USING <exprs...>]
   [LIMIT <expr>]
   [RETURNING <exprs...>]
`,
    //line sql.y: 5572
    SeeAlso: `WEBDOCS/delete.html
`,
  },
  //line sql.y: 5630
  `DISCARD`: {
    ShortDescription: `reset the session to its initial state`,
    //line sql.y: 5631
    Category: hCfg,
    //line sql.y: 5632
    Text: `DISCARD ALL
`,
  },
  //line sql.y: 5653
  `DROP`: {
    //line sql.y: 5654
    Category: hGroup,
    //line sql.y: 5655
    Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
  },
  //line sql.y: 5678
  `DROP VIEW`: {
    ShortDescription: `remove a view`,
    //line sql.y: 5679
    Category: hDDL,
    //line sql.y: 5680
    Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 5681
    SeeAlso: `WEBDOCS/drop-index.html
`,
  },
  //line sql.y: 5711
  `DROP SEQUENCE`: {
    ShortDescription: `remove a sequence`,
    //line sql.y: 5712
    Category: hDDL,
    //line sql.y: 5713
    Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 5714
    SeeAlso: `DROP
`,
  },
  //line sql.y: 5726
  `DROP TABLE`: {
    ShortDescription: `remove a table`,
    //line sql.y: 5727
    Category: hDDL,
    //line sql.y: 5728
    Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 5729
    SeeAlso: `WEBDOCS/drop-table.html
`,
  },
  //line sql.y: 5741
  `DROP INDEX`: {
    ShortDescription: `remove an index`,
    //line sql.y: 5742
    Category: hDDL,
    //line sql.y: 5743
    Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 5744
    SeeAlso: `WEBDOCS/drop-index.html
`,
  },
  //line sql.y: 5766
  `DROP DATABASE`: {
    ShortDescription: `remove a database`,
    //line sql.y: 5767
    Category: hDDL,
    //line sql.y: 5768
    Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
    //line sql.y: 5769
    SeeAlso: `WEBDOCS/drop-database.html
`,
  },
  //line sql.y: 5789
  `DROP TYPE`: {
    ShortDescription: `remove a type`,
    //line sql.y: 5790
    Category: hDDL,
    //line sql.y: 5791
    Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
  },
  //line sql.y: 5811
  `DROP VIRTUAL CLUSTER`: {
    ShortDescription: `remove a virtual cluster`,
    //line sql.y: 5812
    Category: hExperimental,
    //line sql.y: 5813
    Text: `DROP VIRTUAL CLUSTER [IF EXISTS] <virtual_cluster_spec> [IMMEDIATE]
`,
  },
  //line sql.y: 5857
  `DROP SCHEMA`: {
    ShortDescription: `remove a schema`,
    //line sql.y: 5858
    Category: hDDL,
    //line sql.y: 5859
    Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
  },
  //line sql.y: 5879
  `DROP ROLE`: {
    ShortDescription: `remove a user`,
    //line sql.y: 5880
    Category: hPriv,
    //line sql.y: 5881
    Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
    //line sql.y: 5882
    SeeAlso: `CREATE ROLE, SHOW ROLE
`,
  },
  //line sql.y: 5915
  `ANALYZE`: {
    ShortDescription: `collect table statistics`,
    //line sql.y: 5916
    Category: hMisc,
    //line sql.y: 5917
    Text: `
ANALYZE <tablename>

`,
    //line sql.y: 5920
    SeeAlso: `CREATE STATISTICS
`,
  },
  //line sql.y: 5943
  `EXPLAIN`: {
    ShortDescription: `show the logical plan of a query`,
    //line sql.y: 5944
    Category: hMisc,
    //line sql.y: 5945
    Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
    //line sql.y: 5959
    SeeAlso: `WEBDOCS/explain.html
`,
  },
  //line sql.y: 6082
  `ALTER CHANGEFEED`: {
    ShortDescription: `alter an existing changefeed`,
    //line sql.y: 6083
    Category: hCCL,
    //line sql.y: 6084
    Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
  },
  //line sql.y: 6135
  `ALTER BACKUP`: {
    ShortDescription: `alter an existing backup's encryption keys`,
    //line sql.y: 6136
    Category: hCCL,
    //line sql.y: 6137
    Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
  },
  //line sql.y: 6191
  `SHOW VIRTUAL CLUSTER`: {
    ShortDescription: `display metadata about virtual clusters`,
    //line sql.y: 6192
    Category: hExperimental,
    //line sql.y: 6193
    Text: `
SHOW VIRTUAL CLUSTER { <virtual_cluster_spec> | ALL } [ WITH <options> ]
SHOW VIRTUAL CLUSTERS                                 [ WITH <options> ]

Options:
    REPLICATION STATUS
    CAPABILITIES
`,
  },
  //line sql.y: 6290
  `PREPARE`: {
    ShortDescription: `prepare a statement for later execution`,
    //line sql.y: 6291
    Category: hMisc,
    //line sql.y: 6292
    Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
    //line sql.y: 6293
    SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
  },
  //line sql.y: 6324
  `EXECUTE`: {
    ShortDescription: `execute a statement prepared previously`,
    //line sql.y: 6325
    Category: hMisc,
    //line sql.y: 6326
    Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
    //line sql.y: 6327
    SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
  },
  //line sql.y: 6357
  `DEALLOCATE`: {
    ShortDescription: `remove a prepared statement`,
    //line sql.y: 6358
    Category: hMisc,
    //line sql.y: 6359
    Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
    //line sql.y: 6360
    SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
  },
  //line sql.y: 6380
  `GRANT`: {
    ShortDescription: `define access privileges and role memberships`,
    //line sql.y: 6381
    Category: hPriv,
    //line sql.y: 6382
    Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
    //line sql.y: 6399
    SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
  },
  //line sql.y: 6493
  `REVOKE`: {
    ShortDescription: `remove access privileges and role memberships`,
    //line sql.y: 6494
    Category: hPriv,
    //line sql.y: 6495
    Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
    //line sql.y: 6512
    SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
  },
  //line sql.y: 6710
  `RESET`: {
    ShortDescription: `reset a session variable to its default value`,
    //line sql.y: 6711
    Category: hCfg,
    //line sql.y: 6712
    Text: `RESET [SESSION] <var>
`,
    //line sql.y: 6713
    SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 6729
  `RESET CLUSTER SETTING`: {
    ShortDescription: `reset a cluster setting to its default value`,
    //line sql.y: 6730
    Category: hCfg,
    //line sql.y: 6731
    Text: `RESET CLUSTER SETTING <var>
`,
    //line sql.y: 6732
    SeeAlso: `SET CLUSTER SETTING, RESET
`,
  },
  //line sql.y: 6741
  `USE`: {
    ShortDescription: `set the current database`,
    //line sql.y: 6742
    Category: hCfg,
    //line sql.y: 6743
    Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
    //line sql.y: 6746
    SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 6767
  `SCRUB`: {
    ShortDescription: `run checks against databases or tables`,
    //line sql.y: 6768
    Category: hExperimental,
    //line sql.y: 6769
    Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
    //line sql.y: 6777
    SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
  },
  //line sql.y: 6783
  `SCRUB DATABASE`: {
    ShortDescription: `run scrub checks on a database`,
    //line sql.y: 6784
    Category: hExperimental,
    //line sql.y: 6785
    Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
    //line sql.y: 6793
    SeeAlso: `SCRUB TABLE, SCRUB
`,
  },
  //line sql.y: 6801
  `SCRUB TABLE`: {
    ShortDescription: `run scrub checks on a table`,
    //line sql.y: 6802
    Category: hExperimental,
    //line sql.y: 6803
    Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
    //line sql.y: 6814
    SeeAlso: `SCRUB DATABASE, SRUB
`,
  },
  //line sql.y: 6869
  `SET CLUSTER SETTING`: {
    ShortDescription: `change a cluster setting`,
    //line sql.y: 6870
    Category: hCfg,
    //line sql.y: 6871
    Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
    //line sql.y: 6872
    SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
  },
  //line sql.y: 6882
  `ALTER VIRTUAL CLUSTER`: {
    ShortDescription: `alter configuration of virtual clusters`,
    //line sql.y: 6883
    Category: hGroup,
    //line sql.y: 6884
    Text: `
ALTER VIRTUAL CLUSTER REPLICATION, ALTER VIRTUAL CLUSTER SETTING,
ALTER VIRTUAL CLUSTER CAPABILITY, ALTER VIRTUAL CLUSTER RENAME,
ALTER VIRTUAL CLUSTER RESET, ALTER VIRTUAL CLUSTER SERVICE
`,
  },
  //line sql.y: 6904
  `ALTER VIRTUAL CLUSTER RESET`: {
    ShortDescription: `reset data state of a virtual cluster`,
    //line sql.y: 6905
    Category: hExperimental,
    //line sql.y: 6906
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> RESET DATA TO SYSTEM TIME <time>
`,
  },
  //line sql.y: 6918
  `ALTER VIRTUAL CLUSTER RENAME`: {
    ShortDescription: `rename a virtual cluster`,
    //line sql.y: 6919
    Category: hExperimental,
    //line sql.y: 6920
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> RENAME TO <name>
`,
  },
  //line sql.y: 6932
  `ALTER VIRTUAL CLUSTER SERVICE`: {
    ShortDescription: `alter service mode of a virtual cluster`,
    //line sql.y: 6933
    Category: hExperimental,
    //line sql.y: 6934
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> START SERVICE EXTERNAL
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> START SERVICE SHARED
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> STOP SERVICE
`,
  },
  //line sql.y: 6967
  `ALTER VIRTUAL CLUSTER REPLICATION`: {
    ShortDescription: `alter replication stream between virtual clusters`,
    //line sql.y: 6968
    Category: hExperimental,
    //line sql.y: 6969
    Text: `
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> PAUSE REPLICATION
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> RESUME REPLICATION
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> COMPLETE REPLICATION TO LATEST
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> COMPLETE REPLICATION TO SYSTEM TIME 'time'
ALTER VIRTUAL CLUSTER <virtual_cluster_spec> SET REPLICATION opt=value,...
`,
  },
  //line sql.y: 7032
  `ALTER VIRTUAL CLUSTER SETTING`: {
    ShortDescription: `alter cluster setting overrides for virtual clusters`,
    //line sql.y: 7033
    Category: hGroup,
    //line sql.y: 7034
    Text: `
ALTER VIRTUAL CLUSTER { <virtual_cluster_spec> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER VIRTUAL CLUSTER { <virtual_cluster_spec> | ALL } RESET CLUSTER SETTING <var>
`,
    //line sql.y: 7037
    SeeAlso: `SET CLUSTER SETTING
`,
  },
  //line sql.y: 7077
  `ALTER VIRTUAL CLUSTER CAPABILITY`: {
    ShortDescription: `alter system capability of virtual cluster`,
    //line sql.y: 7078
    Category: hGroup,
    //line sql.y: 7079
    Text: `
ALTER VIRTUAL CLUSTER <tenant_id> GRANT CAPABILITY <var> { TO | = } <value>
ALTER VIRTUAL CLUSTER <tenant_id> REVOKE CAPABILITY <var>
`,
  },
  //line sql.y: 7157
  `SET SESSION`: {
    ShortDescription: `change a session variable`,
    //line sql.y: 7158
    Category: hCfg,
    //line sql.y: 7159
    Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { READ COMMITTED | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
    //line sql.y: 7165
    SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 7196
  `SET LOCAL`: {
    ShortDescription: `change a session variable scoped to the current transaction`,
    //line sql.y: 7197
    Category: hCfg,
    //line sql.y: 7198
    Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
    //line sql.y: 7202
    SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
  },
  //line sql.y: 7213
  `SET TRANSACTION`: {
    ShortDescription: `configure the transaction settings`,
    //line sql.y: 7214
    Category: hTxn,
    //line sql.y: 7215
    Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { READ COMMITTED | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
    //line sql.y: 7224
    SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
  },
  //line sql.y: 7423
  `SHOW`: {
    //line sql.y: 7424
    Category: hGroup,
    //line sql.y: 7425
    Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW DEFAULT SESSION VARIABLES,
SHOW ENUMS, SHOW FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS,
SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW COMMIT TIMESTAMP,
SHOW FULL TABLE SCANS, SHOW CREATE EXTERNAL CONNECTIONS
`,
  },
  //line sql.y: 7484
  `CLOSE`: {
    ShortDescription: `close SQL cursor`,
    //line sql.y: 7485
    Category: hMisc,
    //line sql.y: 7486
    Text: `CLOSE [ ALL | <name> ]
`,
    //line sql.y: 7487
    SeeAlso: `DECLARE, FETCH
`,
  },
  //line sql.y: 7503
  `DECLARE`: {
    ShortDescription: `declare SQL cursor`,
    //line sql.y: 7504
    Category: hMisc,
    //line sql.y: 7505
    Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
    //line sql.y: 7506
    SeeAlso: `CLOSE, FETCH
`,
  },
  //line sql.y: 7575
  `FETCH`: {
    ShortDescription: `fetch rows from a SQL cursor`,
    //line sql.y: 7576
    Category: hMisc,
    //line sql.y: 7577
    Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
    //line sql.y: 7578
    SeeAlso: `MOVE, CLOSE, DECLARE
`,
  },
  //line sql.y: 7588
  `MOVE`: {
    ShortDescription: `move a SQL cursor without fetching rows`,
    //line sql.y: 7589
    Category: hMisc,
    //line sql.y: 7590
    Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
    //line sql.y: 7591
    SeeAlso: `FETCH, CLOSE, DECLARE
`,
  },
  //line sql.y: 7727
  `SHOW SESSION`: {
    ShortDescription: `display session variables`,
    //line sql.y: 7728
    Category: hCfg,
    //line sql.y: 7729
    Text: `SHOW [SESSION] { <var> | ALL }
`,
    //line sql.y: 7730
    SeeAlso: `WEBDOCS/show-vars.html
`,
  },
  //line sql.y: 7775
  `SHOW STATISTICS`: {
    ShortDescription: `display table statistics`,
    //line sql.y: 7776
    Category: hMisc,
    //line sql.y: 7777
    Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
    //line sql.y: 7788
    SeeAlso: `SHOW HISTOGRAM
`,
  },
  //line sql.y: 7810
  `SHOW HISTOGRAM`: {
    ShortDescription: `display histogram (experimental)`,
    //line sql.y: 7811
    Category: hExperimental,
    //line sql.y: 7812
    Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
    //line sql.y: 7816
    SeeAlso: `SHOW STATISTICS
`,
  },
  //line sql.y: 7829
  `SHOW BACKUP`: {
    ShortDescription: `list backup contents`,
    //line sql.y: 7830
    Category: hCCL,
    //line sql.y: 7831
    Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
    //line sql.y: 7832
    SeeAlso: `WEBDOCS/show-backup.html
`,
  },
  //line sql.y: 8046
  `SHOW CLUSTER SETTING`: {
    ShortDescription: `display cluster settings`,
    //line sql.y: 8047
    Category: hCfg,
    //line sql.y: 8048
    Text: `
SHOW CLUSTER SETTING <var> [ FOR VIRTUAL CLUSTER <virtual_cluster_spec> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR VIRTUAL CLUSTER <virtual_cluster_spec> ]
`,
    //line sql.y: 8051
    SeeAlso: `WEBDOCS/cluster-settings.html
`,
  },
  //line sql.y: 8101
  `SHOW COLUMNS`: {
    ShortDescription: `list columns in relation`,
    //line sql.y: 8102
    Category: hDDL,
    //line sql.y: 8103
    Text: `SHOW COLUMNS FROM <tablename>
`,
    //line sql.y: 8104
    SeeAlso: `WEBDOCS/show-columns.html
`,
  },
  //line sql.y: 8112
  `SHOW PARTITIONS`: {
    ShortDescription: `list partition information`,
    //line sql.y: 8113
    Category: hDDL,
    //line sql.y: 8114
    Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
    //line sql.y: 8115
    SeeAlso: `WEBDOCS/show-partitions.html
`,
  },
  //line sql.y: 8135
  `SHOW DATABASES`: {
    ShortDescription: `list databases`,
    //line sql.y: 8136
    Category: hDDL,
    //line sql.y: 8137
    Text: `SHOW DATABASES
`,
    //line sql.y: 8138
    SeeAlso: `WEBDOCS/show-databases.html
`,
  },
  //line sql.y: 8146
  `SHOW DEFAULT PRIVILEGES`: {
    ShortDescription: `list default privileges`,
    //line sql.y: 8147
    Category: hDDL,
    //line sql.y: 8148
    Text: `SHOW DEFAULT PRIVILEGES
`,
    //line sql.y: 8149
    SeeAlso: `WEBDOCS/show-default-privileges
`,
  },
  //line sql.y: 8172
  `SHOW ENUMS`: {
    ShortDescription: `list enums`,
    //line sql.y: 8173
    Category: hMisc,
    //line sql.y: 8174
    Text: `SHOW ENUMS
`,
  },
  //line sql.y: 8202
  `SHOW TYPES`: {
    ShortDescription: `list user defined types`,
    //line sql.y: 8203
    Category: hMisc,
    //line sql.y: 8204
    Text: `SHOW TYPES
`,
  },
  //line sql.y: 8212
  `SHOW GRANTS`: {
    ShortDescription: `list grants`,
    //line sql.y: 8213
    Category: hPriv,
    //line sql.y: 8214
    Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
    //line sql.y: 8220
    SeeAlso: `WEBDOCS/show-grants.html
`,
  },
  //line sql.y: 8240
  `SHOW INDEXES`: {
    ShortDescription: `list indexes`,
    //line sql.y: 8241
    Category: hDDL,
    //line sql.y: 8242
    Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
    //line sql.y: 8243
    SeeAlso: `WEBDOCS/show-index.html
`,
  },
  //line sql.y: 8273
  `SHOW COMMIT TIMESTAMP`: {
    ShortDescription: `show timestamp commit timestamp of last transaction`,
    //line sql.y: 8274
    Category: hMisc,
    //line sql.y: 8275
    Text: `SHOW COMMIT TIMESTAMP

Shows the commit timestamp of the last committed transaction if not currently
in a transaction. If currently in a transaction, implicitly commits the
transaction, returning any errors which may have occurred during the commit.
The transaction state will remain open from the perspective of the client,
meaning that a COMMIT must be issued to move the connection back to a state
where new statements may be issued.
`,
  },
  //line sql.y: 8289
  `SHOW CONSTRAINTS`: {
    ShortDescription: `list constraints`,
    //line sql.y: 8290
    Category: hDDL,
    //line sql.y: 8291
    Text: `SHOW CONSTRAINTS FROM <tablename>
`,
    //line sql.y: 8292
    SeeAlso: `WEBDOCS/show-constraints.html
`,
  },
  //line sql.y: 8305
  `SHOW STATEMENTS`: {
    ShortDescription: `list running statements`,
    //line sql.y: 8306
    Category: hMisc,
    //line sql.y: 8307
    Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
    //line sql.y: 8308
    SeeAlso: `CANCEL QUERIES
`,
  },
  //line sql.y: 8335
  `SHOW JOBS`: {
    ShortDescription: `list background jobs`,
    //line sql.y: 8336
    Category: hMisc,
    //line sql.y: 8337
    Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause] [WITH EXECUTION DETAILS]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid> [WITH EXECUTION DETAILS]
`,
    //line sql.y: 8341
    SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
  },
  //line sql.y: 8451
  `SHOW SCHEDULES`: {
    ShortDescription: `list periodic schedules`,
    //line sql.y: 8452
    Category: hMisc,
    //line sql.y: 8453
    Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
    //line sql.y: 8456
    SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
  },
  //line sql.y: 8511
  `SHOW TRACE`: {
    ShortDescription: `display an execution trace`,
    //line sql.y: 8512
    Category: hMisc,
    //line sql.y: 8513
    Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
    //line sql.y: 8515
    SeeAlso: `EXPLAIN
`,
  },
  //line sql.y: 8538
  `SHOW SESSIONS`: {
    ShortDescription: `list open client sessions`,
    //line sql.y: 8539
    Category: hMisc,
    //line sql.y: 8540
    Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
    //line sql.y: 8541
    SeeAlso: `CANCEL SESSIONS
`,
  },
  //line sql.y: 8554
  `SHOW TABLES`: {
    ShortDescription: `list tables`,
    //line sql.y: 8555
    Category: hDDL,
    //line sql.y: 8556
    Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
    //line sql.y: 8557
    SeeAlso: `WEBDOCS/show-tables.html
`,
  },
  //line sql.y: 8585
  `SHOW FUNCTIONS`: {
    ShortDescription: `list functions`,
    //line sql.y: 8586
    Category: hDDL,
    //line sql.y: 8587
    Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
  },
  //line sql.y: 8613
  `SHOW PROCEDURES`: {
    ShortDescription: `list procedures`,
    //line sql.y: 8614
    Category: hDDL,
    //line sql.y: 8615
    Text: `SHOW PROCEDURES [FROM <databasename> [ . <schemaname> ] ]
`,
  },
  //line sql.y: 8641
  `SHOW TRANSACTIONS`: {
    ShortDescription: `list open client transactions across the cluster`,
    //line sql.y: 8642
    Category: hMisc,
    //line sql.y: 8643
    Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
  },
  //line sql.y: 8660
  `SHOW SCHEMAS`: {
    ShortDescription: `list schemas`,
    //line sql.y: 8661
    Category: hDDL,
    //line sql.y: 8662
    Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
  },
  //line sql.y: 8674
  `SHOW SEQUENCES`: {
    ShortDescription: `list sequences`,
    //line sql.y: 8675
    Category: hDDL,
    //line sql.y: 8676
    Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
  },
  //line sql.y: 8688
  `SHOW SYNTAX`: {
    ShortDescription: `analyze SQL syntax`,
    //line sql.y: 8689
    Category: hMisc,
    //line sql.y: 8690
    Text: `SHOW SYNTAX <string>
`,
  },
  //line sql.y: 8728
  `SHOW SAVEPOINT`: {
    ShortDescription: `display current savepoint properties`,
    //line sql.y: 8729
    Category: hCfg,
    //line sql.y: 8730
    Text: `SHOW SAVEPOINT STATUS
`,
  },
  //line sql.y: 8738
  `SHOW TRANSACTION`: {
    ShortDescription: `display current transaction properties`,
    //line sql.y: 8739
    Category: hCfg,
    //line sql.y: 8740
    Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
    //line sql.y: 8741
    SeeAlso: `WEBDOCS/show-vars.html
`,
  },
  //line sql.y: 8760
  `SHOW TRANSFER`: {
    ShortDescription: `display session state for connection migration`,
    //line sql.y: 8761
    Category: hMisc,
    //line sql.y: 8762
    Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
  },
  //line sql.y: 8774
  `SHOW CREATE`: {
    ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
    //line sql.y: 8775
    Category: hDDL,
    //line sql.y: 8776
    Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
    //line sql.y: 8782
    SeeAlso: `WEBDOCS/show-create.html
`,
  },
  //line sql.y: 8871
  `SHOW CREATE SCHEDULES`: {
    ShortDescription: `list CREATE statements for scheduled jobs`,
    //line sql.y: 8872
    Category: hDDL,
    //line sql.y: 8873
    Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
    //line sql.y: 8876
    SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
  },
  //line sql.y: 8889
  `SHOW CREATE EXTERNAL CONNECTIONS`: {
    ShortDescription: `list CREATE statements for external connections`,
    //line sql.y: 8890
    Category: hDDL,
    //line sql.y: 8891
    Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
  },
  //line sql.y: 8906
  `SHOW USERS`: {
    ShortDescription: `list defined users`,
    //line sql.y: 8907
    Category: hPriv,
    //line sql.y: 8908
    Text: `SHOW USERS
`,
    //line sql.y: 8909
    SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
  },
  //line sql.y: 8917
  `SHOW DEFAULT SESSION VARIABLES FOR ROLE`: {
    ShortDescription: `list default session variables for role`,
    //line sql.y: 8918
    Category: hPriv,
    //line sql.y: 8919
    Text: `SHOW DEFAULT SESSION VARIABLES FOR ROLE <name>
`,
  },
  //line sql.y: 8935
  `SHOW ROLES`: {
    ShortDescription: `list defined roles`,
    //line sql.y: 8936
    Category: hPriv,
    //line sql.y: 8937
    Text: `SHOW ROLES
`,
    //line sql.y: 8938
    SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
  },
  //line sql.y: 8946
  `SHOW ZONE CONFIGURATION`: {
    ShortDescription: `display current zone configuration`,
    //line sql.y: 8947
    Category: hCfg,
    //line sql.y: 8948
    Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
    //line sql.y: 8951
    SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
  },
  //line sql.y: 9007
  `SHOW RANGE`: {
    ShortDescription: `show range information for a row`,
    //line sql.y: 9008
    Category: hMisc,
    //line sql.y: 9009
    Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
  },
  //line sql.y: 9030
  `SHOW RANGES`: {
    ShortDescription: `list ranges`,
    //line sql.y: 9031
    Category: hMisc,
    //line sql.y: 9032
    Text: `
SHOW CLUSTER RANGES                                  [ WITH <options...> ]
SHOW RANGES FROM DATABASE <databasename>             [ WITH <options...> ]
SHOW RANGES FROM CURRENT_CATALOG                     [ WITH <options...> ]
SHOW RANGES FROM TABLE   <tablename>                 [ WITH <options...> ]
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname> [ WITH <options...> ]

Options:
  INDEXES: list indexes contained per range
  TABLES:  list tables contained per range
  DETAILS: add range size, leaseholder and other details
  KEYS:    include binary start/end keys
  EXPLAIN: show the SQL queries that produces the result

Note: the availability of some of the options listed above is subject
to cluster configuration. See the documentation for details.

`,
    //line sql.y: 9049
    SeeAlso: `WEBDOCS/show-ranges.html
`,
  },
  //line sql.y: 9125
  `SHOW SURVIVAL GOAL`: {
    ShortDescription: `list survival goals`,
    //line sql.y: 9126
    Category: hDDL,
    //line sql.y: 9127
    Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
  },
  //line sql.y: 9142
  `SHOW REGIONS`: {
    ShortDescription: `list regions`,
    //line sql.y: 9143
    Category: hDDL,
    //line sql.y: 9144
    Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
  },
  //line sql.y: 9550
  `PAUSE`: {
    ShortDescription: `pause background tasks`,
    //line sql.y: 9551
    Category: hGroup,
    //line sql.y: 9552
    Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
  },
  //line sql.y: 9559
  `RESUME`: {
    ShortDescription: `resume background tasks`,
    //line sql.y: 9560
    Category: hGroup,
    //line sql.y: 9561
    Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
  },
  //line sql.y: 9568
  `RESUME ALL JOBS`: {
    ShortDescription: `resume background jobs`,
    //line sql.y: 9569
    Category: hMisc,
    //line sql.y: 9570
    Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
  },
  //line sql.y: 9579
  `PAUSE JOBS`: {
    ShortDescription: `pause selected background jobs`,
    //line sql.y: 9580
    Category: hMisc,
    //line sql.y: 9581
    Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
    //line sql.y: 9584
    SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
  },
  //line sql.y: 9633
  `PAUSE SCHEDULES`: {
    ShortDescription: `pause scheduled jobs`,
    //line sql.y: 9634
    Category: hMisc,
    //line sql.y: 9635
    Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
    //line sql.y: 9639
    SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
  },
  //line sql.y: 9660
  `PAUSE ALL JOBS`: {
    ShortDescription: `pause all background jobs`,
    //line sql.y: 9661
    Category: hMisc,
    //line sql.y: 9662
    Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
  },
  //line sql.y: 9672
  `CREATE SCHEMA`: {
    ShortDescription: `create a new schema`,
    //line sql.y: 9673
    Category: hDDL,
    //line sql.y: 9674
    Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
  },
  //line sql.y: 9707
  `ALTER SCHEMA`: {
    ShortDescription: `alter an existing schema`,
    //line sql.y: 9708
    Category: hDDL,
    //line sql.y: 9709
    Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
  },
  //line sql.y: 9735
  `CREATE TABLE`: {
    ShortDescription: `create a new table`,
    //line sql.y: 9736
    Category: hDDL,
    //line sql.y: 9737
    Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
    //line sql.y: 9764
    SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
  },
  //line sql.y: 10734
  `CREATE SEQUENCE`: {
    ShortDescription: `create a new sequence`,
    //line sql.y: 10735
    Category: hDDL,
    //line sql.y: 10736
    Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
    //line sql.y: 10747
    SeeAlso: `CREATE TABLE
`,
  },
  //line sql.y: 10832
  `TRUNCATE`: {
    ShortDescription: `empty one or more tables`,
    //line sql.y: 10833
    Category: hDML,
    //line sql.y: 10834
    Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
    //line sql.y: 10835
    SeeAlso: `WEBDOCS/truncate.html
`,
  },
  //line sql.y: 10859
  `CREATE ROLE`: {
    ShortDescription: `define a new role`,
    //line sql.y: 10860
    Category: hPriv,
    //line sql.y: 10861
    Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
    //line sql.y: 10862
    SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
  },
  //line sql.y: 10874
  `ALTER ROLE`: {
    ShortDescription: `alter a role`,
    //line sql.y: 10875
    Category: hPriv,
    //line sql.y: 10876
    Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
    //line sql.y: 10880
    SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
  },
  //line sql.y: 10958
  `CREATE VIEW`: {
    ShortDescription: `create a new view`,
    //line sql.y: 10959
    Category: hDDL,
    //line sql.y: 10960
    Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
    //line sql.y: 10963
    SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
  },
  //line sql.y: 11196
  `CREATE TYPE`: {
    ShortDescription: `create a type`,
    //line sql.y: 11197
    Category: hDDL,
    //line sql.y: 11198
    Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
  },
  //line sql.y: 11296
  `CREATE INDEX`: {
    ShortDescription: `create a new index`,
    //line sql.y: 11297
    Category: hDDL,
    //line sql.y: 11298
    Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
    //line sql.y: 11305
    SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
  },
  //line sql.y: 11830
  `ALTER DEFAULT PRIVILEGES`: {
    ShortDescription: `alter default privileges on an object`,
    //line sql.y: 11831
    Category: hDDL,
    //line sql.y: 11832
    Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
  },
  //line sql.y: 11979
  `RELEASE`: {
    ShortDescription: `complete a sub-transaction`,
    //line sql.y: 11980
    Category: hTxn,
    //line sql.y: 11981
    Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
    //line sql.y: 11982
    SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
  },
  //line sql.y: 11990
  `RESUME JOBS`: {
    ShortDescription: `resume selected background jobs`,
    //line sql.y: 11991
    Category: hMisc,
    //line sql.y: 11992
    Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
    //line sql.y: 11995
    SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
  },
  //line sql.y: 12017
  `RESUME SCHEDULES`: {
    ShortDescription: `resume executing scheduled jobs`,
    //line sql.y: 12018
    Category: hMisc,
    //line sql.y: 12019
    Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
    //line sql.y: 12025
    SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
  },
  //line sql.y: 12046
  `DROP SCHEDULES`: {
    ShortDescription: `destroy specified schedules`,
    //line sql.y: 12047
    Category: hMisc,
    //line sql.y: 12048
    Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
    //line sql.y: 12054
    SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
  },
  //line sql.y: 12075
  `SAVEPOINT`: {
    ShortDescription: `start a sub-transaction`,
    //line sql.y: 12076
    Category: hTxn,
    //line sql.y: 12077
    Text: `SAVEPOINT <savepoint name>
`,
    //line sql.y: 12078
    SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
  },
  //line sql.y: 12093
  `BEGIN`: {
    ShortDescription: `start a transaction`,
    //line sql.y: 12094
    Category: hTxn,
    //line sql.y: 12095
    Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { READ COMMITTED | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
    //line sql.y: 12103
    SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
  },
  //line sql.y: 12113
  `COMMIT`: {
    ShortDescription: `commit the current transaction`,
    //line sql.y: 12114
    Category: hTxn,
    //line sql.y: 12115
    Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
    //line sql.y: 12118
    SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
  },
  //line sql.y: 12137
  `ROLLBACK`: {
    ShortDescription: `abort the current (sub-)transaction`,
    //line sql.y: 12138
    Category: hTxn,
    //line sql.y: 12139
    Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
    //line sql.y: 12142
    SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
  },
  //line sql.y: 12278
  `CREATE DATABASE`: {
    ShortDescription: `create a new database`,
    //line sql.y: 12279
    Category: hDDL,
    //line sql.y: 12280
    Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
    //line sql.y: 12281
    SeeAlso: `WEBDOCS/create-database.html
`,
  },
  //line sql.y: 12486
  `INSERT`: {
    ShortDescription: `create new rows in a table`,
    //line sql.y: 12487
    Category: hDML,
    //line sql.y: 12488
    Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
    //line sql.y: 12496
    SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
  },
  //line sql.y: 12515
  `UPSERT`: {
    ShortDescription: `create or replace rows in a table`,
    //line sql.y: 12516
    Category: hDML,
    //line sql.y: 12517
    Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
    //line sql.y: 12521
    SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
  },
  //line sql.y: 12655
  `UPDATE`: {
    ShortDescription: `update rows of a table`,
    //line sql.y: 12656
    Category: hDML,
    //line sql.y: 12657
    Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [FROM <source>]
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
    //line sql.y: 12665
    SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
  },
  //line sql.y: 12721
  `REASSIGN OWNED BY`: {
    ShortDescription: `change ownership of all objects`,
    //line sql.y: 12722
    Category: hPriv,
    //line sql.y: 12723
    Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
    //line sql.y: 12725
    SeeAlso: `DROP OWNED BY
`,
  },
  //line sql.y: 12736
  `DROP OWNED BY`: {
    ShortDescription: `remove database objects owned by role(s).`,
    //line sql.y: 12737
    Category: hPriv,
    //line sql.y: 12738
    Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
    //line sql.y: 12740
    SeeAlso: `REASSIGN OWNED BY
`,
  },
  //line sql.y: 12920
  `<SELECTCLAUSE>`: {
    ShortDescription: `access tabular data`,
    //line sql.y: 12921
    Category: hDML,
    //line sql.y: 12922
    Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
  },
  //line sql.y: 12933
  `SELECT`: {
    ShortDescription: `retrieve rows from a data source and compute a result`,
    //line sql.y: 12934
    Category: hDML,
    //line sql.y: 12935
    Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
    //line sql.y: 12947
    SeeAlso: `WEBDOCS/select-clause.html
`,
  },
  //line sql.y: 13021
  `TABLE`: {
    ShortDescription: `select an entire table`,
    //line sql.y: 13022
    Category: hDML,
    //line sql.y: 13023
    Text: `TABLE <tablename>
`,
    //line sql.y: 13024
    SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
  },
  //line sql.y: 13425
  `VALUES`: {
    ShortDescription: `select a given set of values`,
    //line sql.y: 13426
    Category: hDML,
    //line sql.y: 13427
    Text: `VALUES ( <exprs...> ) [, ...]
`,
    //line sql.y: 13428
    SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
  },
  //line sql.y: 13568
  `<SOURCE>`: {
    ShortDescription: `define a data source for SELECT`,
    //line sql.y: 13569
    Category: hDML,
    //line sql.y: 13570
    Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED | STRAIGHT } ]

`,
    //line sql.y: 13595
    SeeAlso: `WEBDOCS/table-expressions.html
`,
  },
}
