// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1736
	`ALTER`: {
		//line sql.y: 1737
		Category: hGroup,
		//line sql.y: 1738
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1762
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1763
		Category: hDDL,
		//line sql.y: 1764
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING COLUMNS ( <colnames...> )
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1807
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1823
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1824
		Category: hDDL,
		//line sql.y: 1825
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1844
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1849
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1850
		Category: hDDL,
		//line sql.y: 1851
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1854
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1863
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1864
		Category: hDDL,
		//line sql.y: 1865
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1894
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1895
		Category: hDDL,
		//line sql.y: 1896
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1909
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1928
	`ALTER FUNCTION`: {
		ShortDescription: `change the definition of a function`,
		//line sql.y: 1929
		Category: hDDL,
		//line sql.y: 1930
		Text: `
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   action [ ... ] [ RESTRICT ]
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   RENAME TO new_name
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   OWNER TO { new_owner | CURRENT_USER | SESSION_USER }
ALTER FUNCTION name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ]
   SET SCHEMA new_schema

where action is one of:

   CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
   IMMUTABLE | STABLE | VOLATILE
   [ NOT ] LEAKPROOF
`,
		//line sql.y: 1945
		SeeAlso: `WEBDOCS/alter-function.html
`,
	},
	//line sql.y: 2143
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2144
		Category: hDDL,
		//line sql.y: 2145
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2161
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2167
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2168
		Category: hDDL,
		//line sql.y: 2169
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE | INVISIBLE]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2187
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2871
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2872
		Category: hDDL,
		//line sql.y: 2873
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2889
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 3038
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 3039
		Category: hMisc,
		//line sql.y: 3040
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 3067
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 3068
		Category: hCCL,
		//line sql.y: 3069
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 3103
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3225
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3226
		Category: hCCL,
		//line sql.y: 3227
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3297
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3315
	`ALTER BACKUP SCHEDULE`: {
		ShortDescription: `alter an existing backup schedule`,
		//line sql.y: 3316
		Category: hCCL,
		//line sql.y: 3317
		Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
		//line sql.y: 3329
		SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
	},
	//line sql.y: 3469
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3470
		Category: hMisc,
		//line sql.y: 3471
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3489
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3490
		Category: hMisc,
		//line sql.y: 3491
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3505
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3506
		Category: hCCL,
		//line sql.y: 3507
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3535
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3726
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3727
		Category: hCCL,
		//line sql.y: 3728
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3746
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3780
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3781
		Category: hCCL,
		//line sql.y: 3782
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3792
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3980
	`CANCEL`: {
		//line sql.y: 3981
		Category: hGroup,
		//line sql.y: 3982
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3990
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3991
		Category: hMisc,
		//line sql.y: 3992
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3995
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4017
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 4018
		Category: hMisc,
		//line sql.y: 4019
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 4022
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 4053
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 4054
		Category: hMisc,
		//line sql.y: 4055
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 4058
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 4089
	`CANCEL ALL JOBS`: {
		ShortDescription: `cancel all background jobs`,
		//line sql.y: 4090
		Category: hMisc,
		//line sql.y: 4091
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 4150
	`CREATE`: {
		//line sql.y: 4151
		Category: hGroup,
		//line sql.y: 4152
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION, CREATE TENANT, CREATE SCHEDULE
`,
	},
	//line sql.y: 4168
	`CREATE TENANT`: {
		ShortDescription: `create new tenant`,
		//line sql.y: 4169
		Category: hExperimental,
		//line sql.y: 4170
		Text: `
CREATE TENANT name
CREATE TENANT name FROM REPLICATION OF <tenant_spec> ON <location> [ WITH OPTIONS ... ]
`,
	},
	//line sql.y: 4226
	`CREATE SCHEDULE`: {
		//line sql.y: 4227
		Category: hGroup,
		//line sql.y: 4228
		Text: `
CREATE SCHEDULE FOR BACKUP,
CREATE SCHEDULE FOR CHANGEFEED
`,
	},
	//line sql.y: 4236
	`CREATE EXTENSION`: {
		ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
		//line sql.y: 4237
		Category: hCfg,
		//line sql.y: 4238
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4256
	`CREATE FUNCTION`: {
		ShortDescription: `define a new function`,
		//line sql.y: 4257
		Category: hDDL,
		//line sql.y: 4258
		Text: `
CREATE [ OR REPLACE ] FUNCTION
   name ( [ [ argmode ] [ argname ] argtype [, ...] ] )
   [ RETURNS rettype ]
 { LANGUAGE lang_name
   | { IMMUTABLE | STABLE | VOLATILE }
   | [ NOT ] LEAKPROOF
   | { CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT }
   | AS 'definition'
 } ...
`,
		//line sql.y: 4268
		SeeAlso: `WEBDOCS/create-function.html
`,
	},
	//line sql.y: 4521
	`DROP FUNCTION`: {
		ShortDescription: `remove a function`,
		//line sql.y: 4522
		Category: hDDL,
		//line sql.y: 4523
		Text: `
DROP FUNCTION [ IF EXISTS ] name [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
   [ CASCADE | RESTRICT ]
`,
		//line sql.y: 4526
		SeeAlso: `WEBDOCS/drop-function.html
`,
	},
	//line sql.y: 4720
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4721
		Category: hMisc,
		//line sql.y: 4722
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4822
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4823
		Category: hCCL,
		//line sql.y: 4824
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4866
	`CREATE SCHEDULE FOR CHANGEFEED`: {
		ShortDescription: `create changefeed periodically`,
		//line sql.y: 4867
		Category: hCCL,
		//line sql.y: 4868
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR CHANGEFEED
<targets> INTO <sink> [WITH <options>]
RECURRING [crontab|NEVER]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All changefeeds run in UTC timezone.

Description:
  Optional description (or name) for this schedule

RECURRING <crontab>:
  The RECURRING expression specifies when export runs
  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

sink: data capture stream destination (Enterprise only)
`,
		//line sql.y: 4890
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 4989
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4990
		Category: hDML,
		//line sql.y: 4991
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [USING <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4996
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 5023
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 5024
		Category: hCfg,
		//line sql.y: 5025
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 5046
	`DROP`: {
		//line sql.y: 5047
		Category: hGroup,
		//line sql.y: 5048
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 5070
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 5071
		Category: hDDL,
		//line sql.y: 5072
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5073
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 5103
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 5104
		Category: hDDL,
		//line sql.y: 5105
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5106
		SeeAlso: `DROP
`,
	},
	//line sql.y: 5118
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 5119
		Category: hDDL,
		//line sql.y: 5120
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5121
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 5133
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 5134
		Category: hDDL,
		//line sql.y: 5135
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 5136
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 5158
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 5159
		Category: hDDL,
		//line sql.y: 5160
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 5161
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 5181
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 5182
		Category: hDDL,
		//line sql.y: 5183
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 5203
	`DROP TENANT`: {
		ShortDescription: `remove a tenant`,
		//line sql.y: 5204
		Category: hExperimental,
		//line sql.y: 5205
		Text: `DROP TENANT [IF EXISTS] <tenant_spec> [IMMEDIATE]
`,
	},
	//line sql.y: 5247
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 5248
		Category: hDDL,
		//line sql.y: 5249
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 5269
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 5270
		Category: hPriv,
		//line sql.y: 5271
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 5272
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 5305
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 5306
		Category: hMisc,
		//line sql.y: 5307
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 5310
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 5333
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 5334
		Category: hMisc,
		//line sql.y: 5335
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 5349
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5461
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5462
		Category: hCCL,
		//line sql.y: 5463
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5514
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5515
		Category: hCCL,
		//line sql.y: 5516
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5570
	`SHOW TENANT`: {
		ShortDescription: `display tenant information`,
		//line sql.y: 5571
		Category: hExperimental,
		//line sql.y: 5572
		Text: `
SHOW { TENANT { <tenant_spec> | ALL } | TENANTS ] [WITH REPLICATION STATUS]
`,
	},
	//line sql.y: 5619
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5620
		Category: hMisc,
		//line sql.y: 5621
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5622
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5653
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5654
		Category: hMisc,
		//line sql.y: 5655
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5656
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5686
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5687
		Category: hMisc,
		//line sql.y: 5688
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5689
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5709
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5710
		Category: hPriv,
		//line sql.y: 5711
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5728
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5810
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5811
		Category: hPriv,
		//line sql.y: 5812
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE, EXECUTE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  FUNCTION <functionname> [ ( [ [ argmode ] [ argname ] argtype [, ...] ] ) ] [, ...]
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5829
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 6003
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 6004
		Category: hCfg,
		//line sql.y: 6005
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 6006
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6022
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 6023
		Category: hCfg,
		//line sql.y: 6024
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 6025
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 6034
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 6035
		Category: hCfg,
		//line sql.y: 6036
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 6039
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6060
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 6061
		Category: hExperimental,
		//line sql.y: 6062
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 6070
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 6076
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 6077
		Category: hExperimental,
		//line sql.y: 6078
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 6086
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 6094
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 6095
		Category: hExperimental,
		//line sql.y: 6096
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 6107
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 6162
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 6163
		Category: hCfg,
		//line sql.y: 6164
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 6165
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6175
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 6176
		Category: hGroup,
		//line sql.y: 6177
		SeeAlso: `ALTER TENANT REPLICATION, ALTER TENANT CLUSTER SETTING, ALTER TENANT RENAME
`,
	},
	//line sql.y: 6190
	`ALTER TENANT RENAME`: {
		ShortDescription: `rename a tenant`,
		//line sql.y: 6191
		Category: hExperimental,
		//line sql.y: 6192
		Text: `
ALTER TENANT <tenant_spec> RENAME TO <name>
`,
	},
	//line sql.y: 6204
	`ALTER TENANT REPLICATION`: {
		ShortDescription: `alter tenant replication stream`,
		//line sql.y: 6205
		Category: hExperimental,
		//line sql.y: 6206
		Text: `
ALTER TENANT <tenant_spec> PAUSE REPLICATION
ALTER TENANT <tenant_spec> RESUME REPLICATION
ALTER TENANT <tenant_spec> COMPLETE REPLICATION TO LATEST
ALTER TENANT <tenant_spec> COMPLETE REPLICATION TO SYSTEM TIME 'time'
ALTER TENANT <tenant_spec> SET REPLICATION opt=value,...
`,
	},
	//line sql.y: 6259
	`ALTER TENANT CLUSTER SETTING`: {
		ShortDescription: `alter tenant cluster settings`,
		//line sql.y: 6260
		Category: hGroup,
		//line sql.y: 6261
		Text: `
ALTER TENANT { <tenant_spec> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_spec> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 6264
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 6302
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 6303
		Category: hCfg,
		//line sql.y: 6304
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 6310
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6341
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 6342
		Category: hCfg,
		//line sql.y: 6343
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 6347
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 6358
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 6359
		Category: hTxn,
		//line sql.y: 6360
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 6369
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 6566
	`SHOW`: {
		//line sql.y: 6567
		Category: hGroup,
		//line sql.y: 6568
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW FUNCTIONS, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS,
SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW COMMIT TIMESTAMP,
SHOW FULL TABLE SCANS, SHOW CREATE EXTERNAL CONNECTIONS, SHOW TENANT
`,
	},
	//line sql.y: 6625
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6626
		Category: hMisc,
		//line sql.y: 6627
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6628
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6644
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6645
		Category: hMisc,
		//line sql.y: 6646
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6647
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6716
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6717
		Category: hMisc,
		//line sql.y: 6718
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6719
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6729
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6730
		Category: hMisc,
		//line sql.y: 6731
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6732
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6868
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6869
		Category: hCfg,
		//line sql.y: 6870
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6871
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6915
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics`,
		//line sql.y: 6916
		Category: hMisc,
		//line sql.y: 6917
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name> [WITH FORECAST]

Returns the available statistics for a table. The statistics can include a
histogram ID, which can be used with SHOW HISTOGRAM.

If USING JSON is specified, the statistics and histograms are encoded in JSON
format.

If WITH FORECAST is specified, forecasted statistics are included if
available.

`,
		//line sql.y: 6928
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6950
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6951
		Category: hExperimental,
		//line sql.y: 6952
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6956
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6969
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6970
		Category: hCCL,
		//line sql.y: 6971
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6972
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 7063
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 7064
		Category: hCfg,
		//line sql.y: 7065
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_spec> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_spec> ]
`,
		//line sql.y: 7068
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 7114
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 7115
		Category: hDDL,
		//line sql.y: 7116
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 7117
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 7125
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 7126
		Category: hDDL,
		//line sql.y: 7127
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 7128
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 7148
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 7149
		Category: hDDL,
		//line sql.y: 7150
		Text: `SHOW DATABASES
`,
		//line sql.y: 7151
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 7159
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 7160
		Category: hDDL,
		//line sql.y: 7161
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 7177
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 7178
		Category: hMisc,
		//line sql.y: 7179
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 7207
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 7208
		Category: hMisc,
		//line sql.y: 7209
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 7217
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 7218
		Category: hPriv,
		//line sql.y: 7219
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 7225
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 7245
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 7246
		Category: hDDL,
		//line sql.y: 7247
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 7248
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 7278
	`SHOW COMMIT TIMESTAMP`: {
		ShortDescription: `show timestamp commit timestamp of last transaction`,
		//line sql.y: 7279
		Category: hMisc,
		//line sql.y: 7280
		Text: `SHOW COMMIT TIMESTAMP

Shows the commit timestamp of the last committed transaction if not currently
in a transaction. If currently in a transaction, implicitly commits the
transaction, returning any errors which may have occurred during the commit.
The transaction state will remain open from the perspective of the client,
meaning that a COMMIT must be issued to move the connection back to a state
where new statements may be issued.
`,
	},
	//line sql.y: 7294
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 7295
		Category: hDDL,
		//line sql.y: 7296
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 7297
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 7310
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 7311
		Category: hMisc,
		//line sql.y: 7312
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 7313
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 7340
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 7341
		Category: hMisc,
		//line sql.y: 7342
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 7346
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7408
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 7409
		Category: hMisc,
		//line sql.y: 7410
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 7413
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7468
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 7469
		Category: hMisc,
		//line sql.y: 7470
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 7472
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 7495
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 7496
		Category: hMisc,
		//line sql.y: 7497
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 7498
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 7511
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 7512
		Category: hDDL,
		//line sql.y: 7513
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 7514
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 7542
	`SHOW FUNCTIONS`: {
		ShortDescription: `list functions`,
		//line sql.y: 7543
		Category: hDDL,
		//line sql.y: 7544
		Text: `SHOW FUNCTIONS [FROM <databasename> [ . <schemaname> ] ]
`,
	},
	//line sql.y: 7570
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 7571
		Category: hMisc,
		//line sql.y: 7572
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 7589
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 7590
		Category: hDDL,
		//line sql.y: 7591
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 7603
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 7604
		Category: hDDL,
		//line sql.y: 7605
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 7617
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 7618
		Category: hMisc,
		//line sql.y: 7619
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 7657
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 7658
		Category: hCfg,
		//line sql.y: 7659
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7667
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7668
		Category: hCfg,
		//line sql.y: 7669
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7670
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7689
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7690
		Category: hMisc,
		//line sql.y: 7691
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7703
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7704
		Category: hDDL,
		//line sql.y: 7705
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE [ SECONDARY ] INDEXES FROM <table_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7711
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7770
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7771
		Category: hDDL,
		//line sql.y: 7772
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7775
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7788
	`SHOW CREATE EXTERNAL CONNECTIONS`: {
		ShortDescription: `list CREATE statements for external connections`,
		//line sql.y: 7789
		Category: hDDL,
		//line sql.y: 7790
		Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
	},
	//line sql.y: 7805
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7806
		Category: hPriv,
		//line sql.y: 7807
		Text: `SHOW USERS
`,
		//line sql.y: 7808
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7816
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7817
		Category: hPriv,
		//line sql.y: 7818
		Text: `SHOW ROLES
`,
		//line sql.y: 7819
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7827
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7828
		Category: hCfg,
		//line sql.y: 7829
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7832
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7888
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7889
		Category: hMisc,
		//line sql.y: 7890
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7911
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7912
		Category: hMisc,
		//line sql.y: 7913
		Text: `
SHOW CLUSTER RANGES                                  [ WITH <options...> ]
SHOW RANGES FROM DATABASE <databasename>             [ WITH <options...> ]
SHOW RANGES FROM CURRENT_CATALOG                     [ WITH <options...> ]
SHOW RANGES FROM TABLE   <tablename>                 [ WITH <options...> ]
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname> [ WITH <options...> ]

Options:
  INDEXES
  TABLES
  DETAILS
  EXPLAIN
`,
	},
	//line sql.y: 8000
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `list survival goals`,
		//line sql.y: 8001
		Category: hDDL,
		//line sql.y: 8002
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 8017
	`SHOW REGIONS`: {
		ShortDescription: `list regions`,
		//line sql.y: 8018
		Category: hDDL,
		//line sql.y: 8019
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 8380
	`PAUSE`: {
		ShortDescription: `pause background tasks`,
		//line sql.y: 8381
		Category: hGroup,
		//line sql.y: 8382
		Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
	},
	//line sql.y: 8389
	`RESUME`: {
		ShortDescription: `resume background tasks`,
		//line sql.y: 8390
		Category: hGroup,
		//line sql.y: 8391
		Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 8398
	`RESUME ALL JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8399
		Category: hMisc,
		//line sql.y: 8400
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8409
	`PAUSE JOBS`: {
		ShortDescription: `pause selected background jobs`,
		//line sql.y: 8410
		Category: hMisc,
		//line sql.y: 8411
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 8414
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8463
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 8464
		Category: hMisc,
		//line sql.y: 8465
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 8469
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8490
	`PAUSE ALL JOBS`: {
		ShortDescription: `pause all background jobs`,
		//line sql.y: 8491
		Category: hMisc,
		//line sql.y: 8492
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 8502
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 8503
		Category: hDDL,
		//line sql.y: 8504
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 8537
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 8538
		Category: hDDL,
		//line sql.y: 8539
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 8565
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 8566
		Category: hDDL,
		//line sql.y: 8567
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 8594
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 9558
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 9559
		Category: hDDL,
		//line sql.y: 9560
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 9571
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 9654
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 9655
		Category: hDML,
		//line sql.y: 9656
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 9657
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 9681
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 9682
		Category: hPriv,
		//line sql.y: 9683
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 9684
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9696
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 9697
		Category: hPriv,
		//line sql.y: 9698
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 9702
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9780
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9781
		Category: hDDL,
		//line sql.y: 9782
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9785
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9999
	`CREATE TYPE`: {
		ShortDescription: `create a type`,
		//line sql.y: 10000
		Category: hDDL,
		//line sql.y: 10001
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 10099
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 10100
		Category: hDDL,
		//line sql.y: 10101
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 10108
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 10623
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 10624
		Category: hDDL,
		//line sql.y: 10625
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 10772
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 10773
		Category: hTxn,
		//line sql.y: 10774
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10775
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10783
	`RESUME JOBS`: {
		ShortDescription: `resume selected background jobs`,
		//line sql.y: 10784
		Category: hMisc,
		//line sql.y: 10785
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 10788
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 10810
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 10811
		Category: hMisc,
		//line sql.y: 10812
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 10818
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10839
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10840
		Category: hMisc,
		//line sql.y: 10841
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10847
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10868
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10869
		Category: hTxn,
		//line sql.y: 10870
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10871
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10886
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10887
		Category: hTxn,
		//line sql.y: 10888
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10896
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10904
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10905
		Category: hTxn,
		//line sql.y: 10906
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10909
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10928
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10929
		Category: hTxn,
		//line sql.y: 10930
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10933
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 11069
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 11070
		Category: hDDL,
		//line sql.y: 11071
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 11072
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 11278
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 11279
		Category: hDML,
		//line sql.y: 11280
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 11288
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 11307
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 11308
		Category: hDML,
		//line sql.y: 11309
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 11313
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 11443
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 11444
		Category: hDML,
		//line sql.y: 11445
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 11452
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 11508
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 11509
		Category: hPriv,
		//line sql.y: 11510
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 11512
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 11523
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 11524
		Category: hPriv,
		//line sql.y: 11525
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 11527
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 11707
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 11708
		Category: hDML,
		//line sql.y: 11709
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 11720
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 11721
		Category: hDML,
		//line sql.y: 11722
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 11734
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 11809
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 11810
		Category: hDML,
		//line sql.y: 11811
		Text: `TABLE <tablename>
`,
		//line sql.y: 11812
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 12164
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 12165
		Category: hDML,
		//line sql.y: 12166
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 12167
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 12308
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 12309
		Category: hDML,
		//line sql.y: 12310
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 12335
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
