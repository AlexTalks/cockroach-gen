// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:671
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11383

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1279,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	216, 190,
	434, 190,
	-2, 0,
	-1, 77,
	205, 1087,
	217, 1087,
	233, 318,
	330, 318,
	339, 885,
	370, 318,
	382, 885,
	419, 885,
	444, 318,
	469, 885,
	-2, 0,
	-1, 83,
	233, 322,
	-2, 0,
	-1, 84,
	119, 1279,
	211, 1279,
	454, 1279,
	455, 1279,
	-2, 0,
	-1, 100,
	136, 1250,
	154, 1250,
	167, 1250,
	214, 1250,
	246, 1250,
	289, 1250,
	299, 1250,
	449, 1250,
	-2, 1221,
	-1, 134,
	144, 771,
	232, 771,
	333, 740,
	387, 740,
	437, 771,
	-2, 0,
	-1, 136,
	4, 1281,
	21, 1281,
	22, 1281,
	23, 1281,
	24, 1281,
	25, 1281,
	26, 1281,
	28, 1281,
	29, 1281,
	35, 1281,
	40, 1281,
	41, 1281,
	42, 1281,
	43, 1281,
	44, 1281,
	45, 1281,
	46, 1281,
	47, 1281,
	48, 1281,
	50, 1281,
	51, 1281,
	52, 1281,
	53, 1281,
	55, 1281,
	56, 1281,
	57, 1281,
	58, 1281,
	59, 1281,
	63, 1281,
	64, 1281,
	65, 1281,
	66, 1281,
	68, 1281,
	69, 1281,
	70, 1281,
	74, 1281,
	75, 1281,
	76, 1281,
	77, 1281,
	78, 1281,
	79, 1281,
	80, 1281,
	83, 1281,
	84, 1281,
	85, 1281,
	86, 1281,
	88, 1281,
	90, 1281,
	91, 1281,
	92, 1281,
	94, 1281,
	96, 1281,
	97, 1281,
	105, 1281,
	106, 1281,
	107, 1281,
	108, 1281,
	110, 1281,
	111, 1281,
	112, 1281,
	114, 1281,
	115, 1281,
	116, 1281,
	118, 1281,
	119, 1281,
	121, 1281,
	122, 1281,
	123, 1281,
	126, 1281,
	127, 1281,
	128, 1281,
	130, 1281,
	131, 1281,
	133, 1281,
	134, 1281,
	135, 1281,
	137, 1281,
	138, 1281,
	139, 1281,
	140, 1281,
	141, 1281,
	142, 1281,
	143, 1281,
	144, 1281,
	145, 1281,
	146, 1281,
	147, 1281,
	148, 1281,
	149, 1281,
	150, 1281,
	151, 1281,
	153, 1281,
	159, 1281,
	160, 1281,
	161, 1281,
	162, 1281,
	166, 1281,
	168, 1281,
	172, 1281,
	173, 1281,
	174, 1281,
	175, 1281,
	176, 1281,
	177, 1281,
	179, 1281,
	180, 1281,
	182, 1281,
	183, 1281,
	185, 1281,
	186, 1281,
	187, 1281,
	188, 1281,
	189, 1281,
	190, 1281,
	191, 1281,
	192, 1281,
	193, 1281,
	195, 1281,
	196, 1281,
	198, 1281,
	199, 1281,
	200, 1281,
	201, 1281,
	205, 1281,
	206, 1281,
	207, 1281,
	208, 1281,
	211, 1281,
	212, 1281,
	213, 1281,
	215, 1281,
	217, 1281,
	219, 1281,
	221, 1281,
	222, 1281,
	223, 1281,
	225, 1281,
	229, 1281,
	230, 1281,
	231, 1281,
	232, 1281,
	233, 1281,
	234, 1281,
	236, 1281,
	237, 1281,
	238, 1281,
	240, 1281,
	241, 1281,
	243, 1281,
	244, 1281,
	247, 1281,
	248, 1281,
	249, 1281,
	252, 1281,
	253, 1281,
	254, 1281,
	255, 1281,
	257, 1281,
	258, 1281,
	259, 1281,
	260, 1281,
	261, 1281,
	262, 1281,
	263, 1281,
	264, 1281,
	265, 1281,
	266, 1281,
	267, 1281,
	269, 1281,
	271, 1281,
	272, 1281,
	273, 1281,
	274, 1281,
	275, 1281,
	276, 1281,
	278, 1281,
	280, 1281,
	282, 1281,
	284, 1281,
	285, 1281,
	286, 1281,
	287, 1281,
	288, 1281,
	291, 1281,
	294, 1281,
	295, 1281,
	296, 1281,
	297, 1281,
	300, 1281,
	301, 1281,
	302, 1281,
	304, 1281,
	306, 1281,
	307, 1281,
	308, 1281,
	309, 1281,
	310, 1281,
	311, 1281,
	312, 1281,
	313, 1281,
	314, 1281,
	315, 1281,
	316, 1281,
	317, 1281,
	319, 1281,
	320, 1281,
	321, 1281,
	322, 1281,
	323, 1281,
	324, 1281,
	325, 1281,
	326, 1281,
	327, 1281,
	329, 1281,
	331, 1281,
	332, 1281,
	333, 1281,
	334, 1281,
	335, 1281,
	336, 1281,
	337, 1281,
	338, 1281,
	339, 1281,
	340, 1281,
	341, 1281,
	348, 1281,
	350, 1281,
	351, 1281,
	352, 1281,
	353, 1281,
	354, 1281,
	355, 1281,
	356, 1281,
	357, 1281,
	359, 1281,
	360, 1281,
	361, 1281,
	363, 1281,
	364, 1281,
	365, 1281,
	366, 1281,
	367, 1281,
	368, 1281,
	370, 1281,
	371, 1281,
	372, 1281,
	373, 1281,
	374, 1281,
	375, 1281,
	376, 1281,
	377, 1281,
	378, 1281,
	379, 1281,
	380, 1281,
	382, 1281,
	383, 1281,
	384, 1281,
	385, 1281,
	386, 1281,
	387, 1281,
	389, 1281,
	390, 1281,
	391, 1281,
	392, 1281,
	393, 1281,
	395, 1281,
	396, 1281,
	397, 1281,
	399, 1281,
	401, 1281,
	402, 1281,
	403, 1281,
	404, 1281,
	405, 1281,
	406, 1281,
	407, 1281,
	408, 1281,
	409, 1281,
	410, 1281,
	411, 1281,
	412, 1281,
	413, 1281,
	415, 1281,
	416, 1281,
	418, 1281,
	420, 1281,
	421, 1281,
	422, 1281,
	423, 1281,
	424, 1281,
	425, 1281,
	426, 1281,
	427, 1281,
	429, 1281,
	430, 1281,
	431, 1281,
	432, 1281,
	433, 1281,
	435, 1281,
	437, 1281,
	438, 1281,
	439, 1281,
	440, 1281,
	441, 1281,
	443, 1281,
	444, 1281,
	445, 1281,
	447, 1281,
	448, 1281,
	451, 1281,
	452, 1281,
	453, 1281,
	454, 1281,
	455, 1281,
	456, 1281,
	457, 1281,
	459, 1281,
	462, 1281,
	463, 1281,
	464, 1281,
	465, 1281,
	466, 1281,
	467, 1281,
	469, 1281,
	470, 1281,
	471, 1281,
	476, 1281,
	477, 1281,
	478, 1281,
	479, 1281,
	480, 1281,
	481, 1281,
	-2, 0,
	-1, 137,
	1, 1155,
	221, 1155,
	329, 1155,
	337, 1155,
	484, 1155,
	508, 1155,
	-2, 0,
	-1, 139,
	1, 1155,
	508, 1155,
	-2, 0,
	-1, 140,
	1, 1155,
	508, 1155,
	-2, 0,
	-1, 141,
	1, 1155,
	434, 1155,
	508, 1155,
	-2, 0,
	-1, 170,
	136, 1249,
	154, 1249,
	167, 1249,
	214, 1249,
	246, 1249,
	289, 1249,
	299, 1249,
	449, 1249,
	-2, 1224,
	-1, 206,
	4, 1288,
	5, 1288,
	6, 1288,
	7, 1288,
	8, 1288,
	9, 1288,
	10, 1288,
	21, 1288,
	22, 1288,
	23, 1288,
	24, 1288,
	25, 1288,
	26, 1288,
	28, 1288,
	29, 1288,
	35, 1288,
	36, 1288,
	40, 1288,
	41, 1288,
	42, 1288,
	43, 1288,
	44, 1288,
	45, 1288,
	46, 1288,
	47, 1288,
	48, 1288,
	50, 1288,
	51, 1288,
	52, 1288,
	53, 1288,
	55, 1288,
	56, 1288,
	57, 1288,
	58, 1288,
	59, 1288,
	60, 1288,
	61, 1288,
	62, 1288,
	63, 1288,
	64, 1288,
	65, 1288,
	66, 1288,
	68, 1288,
	69, 1288,
	70, 1288,
	72, 1288,
	74, 1288,
	75, 1288,
	76, 1288,
	77, 1288,
	78, 1288,
	79, 1288,
	80, 1288,
	83, 1288,
	84, 1288,
	85, 1288,
	86, 1288,
	88, 1288,
	90, 1288,
	91, 1288,
	92, 1288,
	94, 1288,
	95, 1288,
	96, 1288,
	97, 1288,
	98, 1288,
	99, 1288,
	100, 1288,
	101, 1288,
	102, 1288,
	103, 1288,
	104, 1288,
	105, 1288,
	106, 1288,
	107, 1288,
	108, 1288,
	109, 1288,
	110, 1288,
	111, 1288,
	112, 1288,
	113, 1288,
	114, 1288,
	115, 1288,
	116, 1288,
	118, 1288,
	119, 1288,
	121, 1288,
	122, 1288,
	123, 1288,
	126, 1288,
	127, 1288,
	128, 1288,
	130, 1288,
	131, 1288,
	133, 1288,
	134, 1288,
	135, 1288,
	137, 1288,
	138, 1288,
	139, 1288,
	140, 1288,
	141, 1288,
	142, 1288,
	143, 1288,
	144, 1288,
	145, 1288,
	146, 1288,
	147, 1288,
	148, 1288,
	149, 1288,
	150, 1288,
	151, 1288,
	152, 1288,
	153, 1288,
	159, 1288,
	160, 1288,
	161, 1288,
	162, 1288,
	166, 1288,
	168, 1288,
	171, 1288,
	172, 1288,
	173, 1288,
	174, 1288,
	175, 1288,
	176, 1288,
	177, 1288,
	179, 1288,
	180, 1288,
	182, 1288,
	183, 1288,
	185, 1288,
	186, 1288,
	187, 1288,
	188, 1288,
	189, 1288,
	190, 1288,
	191, 1288,
	192, 1288,
	193, 1288,
	194, 1288,
	195, 1288,
	196, 1288,
	198, 1288,
	199, 1288,
	200, 1288,
	201, 1288,
	205, 1288,
	206, 1288,
	207, 1288,
	208, 1288,
	210, 1288,
	211, 1288,
	212, 1288,
	213, 1288,
	215, 1288,
	217, 1288,
	218, 1288,
	219, 1288,
	220, 1288,
	221, 1288,
	222, 1288,
	223, 1288,
	224, 1288,
	225, 1288,
	229, 1288,
	230, 1288,
	231, 1288,
	232, 1288,
	233, 1288,
	234, 1288,
	236, 1288,
	237, 1288,
	238, 1288,
	240, 1288,
	241, 1288,
	242, 1288,
	243, 1288,
	244, 1288,
	245, 1288,
	247, 1288,
	248, 1288,
	249, 1288,
	250, 1288,
	251, 1288,
	252, 1288,
	253, 1288,
	254, 1288,
	255, 1288,
	257, 1288,
	258, 1288,
	259, 1288,
	260, 1288,
	261, 1288,
	262, 1288,
	263, 1288,
	264, 1288,
	265, 1288,
	266, 1288,
	267, 1288,
	269, 1288,
	270, 1288,
	271, 1288,
	272, 1288,
	273, 1288,
	274, 1288,
	275, 1288,
	276, 1288,
	277, 1288,
	278, 1288,
	279, 1288,
	280, 1288,
	281, 1288,
	282, 1288,
	283, 1288,
	284, 1288,
	285, 1288,
	286, 1288,
	287, 1288,
	288, 1288,
	291, 1288,
	295, 1288,
	296, 1288,
	297, 1288,
	300, 1288,
	301, 1288,
	302, 1288,
	303, 1288,
	304, 1288,
	305, 1288,
	306, 1288,
	307, 1288,
	308, 1288,
	309, 1288,
	310, 1288,
	311, 1288,
	312, 1288,
	313, 1288,
	314, 1288,
	315, 1288,
	316, 1288,
	317, 1288,
	319, 1288,
	320, 1288,
	321, 1288,
	322, 1288,
	323, 1288,
	324, 1288,
	325, 1288,
	326, 1288,
	327, 1288,
	329, 1288,
	331, 1288,
	332, 1288,
	333, 1288,
	334, 1288,
	335, 1288,
	336, 1288,
	337, 1288,
	338, 1288,
	339, 1288,
	340, 1288,
	341, 1288,
	348, 1288,
	350, 1288,
	351, 1288,
	352, 1288,
	353, 1288,
	354, 1288,
	355, 1288,
	356, 1288,
	357, 1288,
	359, 1288,
	360, 1288,
	361, 1288,
	362, 1288,
	363, 1288,
	364, 1288,
	365, 1288,
	366, 1288,
	367, 1288,
	368, 1288,
	370, 1288,
	371, 1288,
	372, 1288,
	373, 1288,
	374, 1288,
	375, 1288,
	376, 1288,
	377, 1288,
	378, 1288,
	379, 1288,
	380, 1288,
	382, 1288,
	383, 1288,
	384, 1288,
	385, 1288,
	386, 1288,
	387, 1288,
	388, 1288,
	389, 1288,
	390, 1288,
	391, 1288,
	392, 1288,
	393, 1288,
	394, 1288,
	395, 1288,
	396, 1288,
	397, 1288,
	399, 1288,
	401, 1288,
	402, 1288,
	403, 1288,
	404, 1288,
	405, 1288,
	406, 1288,
	407, 1288,
	408, 1288,
	409, 1288,
	410, 1288,
	411, 1288,
	412, 1288,
	413, 1288,
	415, 1288,
	416, 1288,
	417, 1288,
	418, 1288,
	420, 1288,
	421, 1288,
	422, 1288,
	423, 1288,
	424, 1288,
	425, 1288,
	426, 1288,
	427, 1288,
	429, 1288,
	430, 1288,
	431, 1288,
	432, 1288,
	433, 1288,
	435, 1288,
	437, 1288,
	438, 1288,
	439, 1288,
	440, 1288,
	441, 1288,
	442, 1288,
	443, 1288,
	444, 1288,
	445, 1288,
	447, 1288,
	448, 1288,
	450, 1288,
	451, 1288,
	452, 1288,
	453, 1288,
	454, 1288,
	455, 1288,
	456, 1288,
	457, 1288,
	458, 1288,
	459, 1288,
	462, 1288,
	463, 1288,
	464, 1288,
	465, 1288,
	466, 1288,
	467, 1288,
	469, 1288,
	470, 1288,
	471, 1288,
	476, 1288,
	477, 1288,
	478, 1288,
	479, 1288,
	480, 1288,
	481, 1288,
	482, 1288,
	489, 1288,
	496, 1288,
	497, 1288,
	498, 1288,
	505, 1288,
	509, 1288,
	-2, 0,
	-1, 610,
	170, 1995,
	434, 1995,
	488, 1995,
	507, 1995,
	-2, 0,
	-1, 611,
	170, 2081,
	434, 2081,
	488, 2081,
	507, 2081,
	-2, 0,
	-1, 612,
	170, 1983,
	434, 1983,
	488, 1983,
	507, 1983,
	-2, 0,
	-1, 614,
	170, 2179,
	434, 2179,
	488, 2179,
	507, 2179,
	-2, 0,
	-1, 616,
	170, 2209,
	434, 2209,
	488, 2209,
	507, 2209,
	-2, 0,
	-1, 623,
	170, 2096,
	434, 2096,
	488, 2096,
	507, 2096,
	-2, 590,
	-1, 653,
	507, 1935,
	510, 1935,
	-2, 825,
	-1, 654,
	507, 1937,
	510, 1937,
	-2, 826,
	-1, 655,
	507, 1936,
	510, 1936,
	-2, 827,
	-1, 656,
	510, 1870,
	-2, 828,
	-1, 678,
	167, 204,
	-2, 0,
	-1, 701,
	469, 1064,
	-2, 886,
	-1, 739,
	4, 1085,
	21, 1085,
	22, 1085,
	23, 1085,
	24, 1085,
	25, 1085,
	26, 1085,
	28, 1085,
	29, 1085,
	35, 1085,
	40, 1085,
	41, 1085,
	42, 1085,
	43, 1085,
	44, 1085,
	45, 1085,
	46, 1085,
	47, 1085,
	48, 1085,
	50, 1085,
	51, 1085,
	52, 1085,
	53, 1085,
	55, 1085,
	56, 1085,
	57, 1085,
	58, 1085,
	59, 1085,
	63, 1085,
	64, 1085,
	65, 1085,
	66, 1085,
	68, 1085,
	69, 1085,
	70, 1085,
	74, 1085,
	75, 1085,
	76, 1085,
	77, 1085,
	78, 1085,
	79, 1085,
	80, 1085,
	83, 1085,
	84, 1085,
	85, 1085,
	86, 1085,
	88, 1085,
	90, 1085,
	91, 1085,
	92, 1085,
	94, 1085,
	96, 1085,
	97, 1085,
	105, 1085,
	106, 1085,
	107, 1085,
	108, 1085,
	110, 1085,
	111, 1085,
	112, 1085,
	114, 1085,
	115, 1085,
	116, 1085,
	118, 1085,
	119, 1085,
	121, 1085,
	122, 1085,
	123, 1085,
	126, 1085,
	127, 1085,
	128, 1085,
	130, 1085,
	131, 1085,
	133, 1085,
	134, 1085,
	135, 1085,
	137, 1085,
	138, 1085,
	139, 1085,
	140, 1085,
	141, 1085,
	142, 1085,
	143, 1085,
	144, 1085,
	145, 1085,
	146, 1085,
	147, 1085,
	148, 1085,
	149, 1085,
	150, 1085,
	151, 1085,
	153, 1085,
	159, 1085,
	160, 1085,
	161, 1085,
	162, 1085,
	166, 1085,
	168, 1085,
	172, 1085,
	173, 1085,
	174, 1085,
	175, 1085,
	176, 1085,
	177, 1085,
	179, 1085,
	180, 1085,
	182, 1085,
	183, 1085,
	185, 1085,
	186, 1085,
	187, 1085,
	188, 1085,
	189, 1085,
	190, 1085,
	191, 1085,
	192, 1085,
	193, 1085,
	195, 1085,
	196, 1085,
	198, 1085,
	199, 1085,
	200, 1085,
	201, 1085,
	205, 1085,
	206, 1085,
	207, 1085,
	208, 1085,
	211, 1085,
	212, 1085,
	213, 1085,
	215, 1085,
	217, 1085,
	219, 1085,
	221, 1085,
	222, 1085,
	223, 1085,
	225, 1085,
	229, 1085,
	230, 1085,
	231, 1085,
	232, 1085,
	233, 1085,
	234, 1085,
	236, 1085,
	237, 1085,
	238, 1085,
	240, 1085,
	241, 1085,
	243, 1085,
	244, 1085,
	247, 1085,
	248, 1085,
	249, 1085,
	252, 1085,
	253, 1085,
	254, 1085,
	255, 1085,
	257, 1085,
	258, 1085,
	259, 1085,
	260, 1085,
	261, 1085,
	262, 1085,
	263, 1085,
	264, 1085,
	265, 1085,
	266, 1085,
	267, 1085,
	269, 1085,
	271, 1085,
	272, 1085,
	273, 1085,
	274, 1085,
	275, 1085,
	276, 1085,
	278, 1085,
	280, 1085,
	282, 1085,
	284, 1085,
	285, 1085,
	286, 1085,
	287, 1085,
	288, 1085,
	291, 1085,
	295, 1085,
	296, 1085,
	297, 1085,
	300, 1085,
	301, 1085,
	302, 1085,
	304, 1085,
	306, 1085,
	307, 1085,
	308, 1085,
	309, 1085,
	310, 1085,
	311, 1085,
	312, 1085,
	313, 1085,
	314, 1085,
	315, 1085,
	316, 1085,
	317, 1085,
	319, 1085,
	320, 1085,
	321, 1085,
	322, 1085,
	323, 1085,
	324, 1085,
	325, 1085,
	326, 1085,
	327, 1085,
	329, 1085,
	331, 1085,
	332, 1085,
	333, 1085,
	334, 1085,
	335, 1085,
	336, 1085,
	337, 1085,
	338, 1085,
	339, 1085,
	340, 1085,
	341, 1085,
	348, 1085,
	350, 1085,
	351, 1085,
	352, 1085,
	353, 1085,
	354, 1085,
	355, 1085,
	356, 1085,
	357, 1085,
	359, 1085,
	360, 1085,
	361, 1085,
	363, 1085,
	364, 1085,
	365, 1085,
	366, 1085,
	367, 1085,
	368, 1085,
	370, 1085,
	371, 1085,
	372, 1085,
	373, 1085,
	374, 1085,
	375, 1085,
	376, 1085,
	377, 1085,
	378, 1085,
	379, 1085,
	380, 1085,
	382, 1085,
	383, 1085,
	384, 1085,
	385, 1085,
	386, 1085,
	387, 1085,
	389, 1085,
	390, 1085,
	391, 1085,
	392, 1085,
	393, 1085,
	395, 1085,
	396, 1085,
	397, 1085,
	399, 1085,
	401, 1085,
	402, 1085,
	403, 1085,
	404, 1085,
	405, 1085,
	406, 1085,
	407, 1085,
	408, 1085,
	409, 1085,
	410, 1085,
	411, 1085,
	412, 1085,
	413, 1085,
	415, 1085,
	416, 1085,
	418, 1085,
	420, 1085,
	421, 1085,
	422, 1085,
	423, 1085,
	424, 1085,
	425, 1085,
	426, 1085,
	427, 1085,
	429, 1085,
	430, 1085,
	431, 1085,
	432, 1085,
	433, 1085,
	435, 1085,
	437, 1085,
	438, 1085,
	439, 1085,
	440, 1085,
	441, 1085,
	443, 1085,
	444, 1085,
	445, 1085,
	447, 1085,
	448, 1085,
	451, 1085,
	452, 1085,
	453, 1085,
	454, 1085,
	455, 1085,
	456, 1085,
	457, 1085,
	459, 1085,
	462, 1085,
	463, 1085,
	464, 1085,
	465, 1085,
	466, 1085,
	467, 1085,
	469, 1085,
	470, 1085,
	471, 1085,
	476, 1085,
	477, 1085,
	478, 1085,
	479, 1085,
	480, 1085,
	481, 1085,
	-2, 0,
	-1, 817,
	333, 741,
	387, 741,
	-2, 0,
	-1, 818,
	333, 740,
	387, 740,
	-2, 686,
	-1, 822,
	1, 781,
	504, 781,
	506, 781,
	508, 781,
	-2, 0,
	-1, 823,
	1, 719,
	504, 719,
	506, 719,
	508, 719,
	-2, 0,
	-1, 824,
	1, 824,
	167, 824,
	504, 824,
	506, 824,
	508, 824,
	-2, 0,
	-1, 832,
	1, 744,
	504, 744,
	506, 744,
	508, 744,
	-2, 0,
	-1, 838,
	1, 781,
	504, 781,
	506, 781,
	508, 781,
	-2, 0,
	-1, 839,
	1, 783,
	504, 783,
	506, 783,
	508, 783,
	-2, 0,
	-1, 840,
	1, 786,
	504, 786,
	506, 786,
	508, 786,
	-2, 0,
	-1, 846,
	1, 803,
	504, 803,
	506, 803,
	508, 803,
	-2, 0,
	-1, 847,
	1, 805,
	504, 805,
	506, 805,
	508, 805,
	-2, 0,
	-1, 896,
	154, 1290,
	167, 1290,
	246, 1290,
	289, 1290,
	-2, 1228,
	-1, 911,
	154, 1289,
	167, 1289,
	246, 1289,
	289, 1289,
	-2, 1225,
	-1, 937,
	507, 1934,
	-2, 598,
	-1, 965,
	5, 1926,
	505, 1924,
	-2, 1915,
	-1, 973,
	5, 1947,
	505, 1944,
	-2, 1935,
	-1, 974,
	5, 1948,
	505, 1945,
	-2, 1936,
	-1, 982,
	507, 1932,
	-2, 1914,
	-1, 983,
	505, 2287,
	-2, 1933,
	-1, 1006,
	505, 2286,
	-2, 1949,
	-1, 1007,
	5, 1454,
	-2, 2257,
	-1, 1008,
	5, 1455,
	-2, 2258,
	-1, 1009,
	5, 1456,
	-2, 2272,
	-1, 1010,
	5, 1457,
	-2, 2237,
	-1, 1011,
	5, 1458,
	-2, 2270,
	-1, 1012,
	5, 1466,
	-2, 2249,
	-1, 1013,
	5, 1453,
	-2, 2245,
	-1, 1014,
	5, 1453,
	-2, 2244,
	-1, 1015,
	5, 1453,
	-2, 2263,
	-1, 1016,
	5, 1464,
	-2, 2239,
	-1, 1017,
	5, 1469,
	-2, 2238,
	-1, 1018,
	5, 1471,
	-2, 2282,
	-1, 1021,
	5, 1493,
	-2, 2275,
	-1, 1022,
	5, 1485,
	-2, 2276,
	-1, 1023,
	5, 1493,
	-2, 2277,
	-1, 1024,
	5, 1489,
	-2, 2278,
	-1, 1025,
	5, 1440,
	-2, 2250,
	-1, 1026,
	5, 1441,
	-2, 2251,
	-1, 1053,
	5, 1476,
	-2, 2283,
	-1, 1054,
	5, 1477,
	-2, 2273,
	-1, 1055,
	5, 1478,
	470, 1478,
	-2, 2240,
	-1, 1056,
	5, 1479,
	470, 1479,
	-2, 2241,
	-1, 1093,
	505, 1944,
	-2, 1935,
	-1, 1094,
	505, 1945,
	-2, 1936,
	-1, 1123,
	170, 2209,
	434, 2209,
	488, 2209,
	507, 2209,
	-2, 0,
	-1, 1126,
	1, 576,
	508, 576,
	-2, 1163,
	-1, 1251,
	350, 1910,
	389, 1910,
	498, 1910,
	-2, 1908,
	-1, 1263,
	509, 1910,
	-2, 1911,
	-1, 1270,
	1, 1061,
	504, 1061,
	506, 1061,
	508, 1061,
	-2, 1277,
	-1, 1323,
	339, 885,
	469, 885,
	-2, 317,
	-1, 1345,
	1, 1061,
	504, 1061,
	506, 1061,
	508, 1061,
	-2, 1277,
	-1, 1351,
	4, 1085,
	21, 1085,
	22, 1085,
	23, 1085,
	24, 1085,
	25, 1085,
	26, 1085,
	28, 1085,
	29, 1085,
	35, 1085,
	40, 1085,
	41, 1085,
	42, 1085,
	43, 1085,
	44, 1085,
	45, 1085,
	46, 1085,
	47, 1085,
	48, 1085,
	50, 1085,
	51, 1085,
	52, 1085,
	53, 1085,
	55, 1085,
	56, 1085,
	57, 1085,
	58, 1085,
	59, 1085,
	63, 1085,
	64, 1085,
	65, 1085,
	66, 1085,
	68, 1085,
	69, 1085,
	70, 1085,
	74, 1085,
	75, 1085,
	76, 1085,
	77, 1085,
	78, 1085,
	79, 1085,
	80, 1085,
	83, 1085,
	84, 1085,
	85, 1085,
	86, 1085,
	88, 1085,
	90, 1085,
	91, 1085,
	92, 1085,
	94, 1085,
	96, 1085,
	97, 1085,
	105, 1085,
	106, 1085,
	107, 1085,
	108, 1085,
	110, 1085,
	111, 1085,
	112, 1085,
	114, 1085,
	115, 1085,
	116, 1085,
	118, 1085,
	119, 1085,
	121, 1085,
	122, 1085,
	123, 1085,
	126, 1085,
	127, 1085,
	128, 1085,
	130, 1085,
	131, 1085,
	133, 1085,
	134, 1085,
	135, 1085,
	137, 1085,
	138, 1085,
	139, 1085,
	140, 1085,
	141, 1085,
	142, 1085,
	143, 1085,
	144, 1085,
	145, 1085,
	146, 1085,
	147, 1085,
	148, 1085,
	149, 1085,
	150, 1085,
	151, 1085,
	159, 1085,
	160, 1085,
	161, 1085,
	162, 1085,
	166, 1085,
	168, 1085,
	172, 1085,
	173, 1085,
	174, 1085,
	175, 1085,
	176, 1085,
	177, 1085,
	179, 1085,
	180, 1085,
	182, 1085,
	183, 1085,
	185, 1085,
	186, 1085,
	187, 1085,
	188, 1085,
	189, 1085,
	190, 1085,
	191, 1085,
	192, 1085,
	193, 1085,
	195, 1085,
	196, 1085,
	198, 1085,
	199, 1085,
	200, 1085,
	201, 1085,
	206, 1085,
	207, 1085,
	208, 1085,
	211, 1085,
	212, 1085,
	213, 1085,
	215, 1085,
	217, 1085,
	219, 1085,
	221, 1085,
	222, 1085,
	223, 1085,
	225, 1085,
	229, 1085,
	230, 1085,
	231, 1085,
	232, 1085,
	233, 1085,
	234, 1085,
	236, 1085,
	237, 1085,
	238, 1085,
	240, 1085,
	241, 1085,
	243, 1085,
	244, 1085,
	247, 1085,
	248, 1085,
	249, 1085,
	252, 1085,
	253, 1085,
	254, 1085,
	255, 1085,
	257, 1085,
	258, 1085,
	259, 1085,
	260, 1085,
	261, 1085,
	262, 1085,
	263, 1085,
	264, 1085,
	265, 1085,
	266, 1085,
	267, 1085,
	269, 1085,
	271, 1085,
	272, 1085,
	273, 1085,
	274, 1085,
	275, 1085,
	276, 1085,
	278, 1085,
	282, 1085,
	284, 1085,
	285, 1085,
	286, 1085,
	287, 1085,
	288, 1085,
	291, 1085,
	293, 1085,
	295, 1085,
	296, 1085,
	297, 1085,
	300, 1085,
	301, 1085,
	302, 1085,
	304, 1085,
	306, 1085,
	307, 1085,
	308, 1085,
	309, 1085,
	310, 1085,
	311, 1085,
	312, 1085,
	313, 1085,
	314, 1085,
	315, 1085,
	316, 1085,
	317, 1085,
	319, 1085,
	320, 1085,
	321, 1085,
	322, 1085,
	323, 1085,
	324, 1085,
	325, 1085,
	326, 1085,
	327, 1085,
	329, 1085,
	331, 1085,
	332, 1085,
	333, 1085,
	334, 1085,
	335, 1085,
	336, 1085,
	337, 1085,
	338, 1085,
	339, 1085,
	340, 1085,
	341, 1085,
	348, 1085,
	350, 1085,
	351, 1085,
	352, 1085,
	353, 1085,
	354, 1085,
	355, 1085,
	356, 1085,
	357, 1085,
	359, 1085,
	360, 1085,
	361, 1085,
	363, 1085,
	364, 1085,
	365, 1085,
	366, 1085,
	367, 1085,
	368, 1085,
	370, 1085,
	371, 1085,
	372, 1085,
	373, 1085,
	374, 1085,
	375, 1085,
	376, 1085,
	377, 1085,
	378, 1085,
	379, 1085,
	380, 1085,
	382, 1085,
	383, 1085,
	384, 1085,
	385, 1085,
	386, 1085,
	387, 1085,
	389, 1085,
	390, 1085,
	391, 1085,
	392, 1085,
	393, 1085,
	395, 1085,
	396, 1085,
	397, 1085,
	399, 1085,
	401, 1085,
	402, 1085,
	403, 1085,
	404, 1085,
	405, 1085,
	406, 1085,
	407, 1085,
	408, 1085,
	409, 1085,
	410, 1085,
	411, 1085,
	412, 1085,
	413, 1085,
	415, 1085,
	416, 1085,
	418, 1085,
	420, 1085,
	421, 1085,
	422, 1085,
	423, 1085,
	424, 1085,
	425, 1085,
	426, 1085,
	427, 1085,
	429, 1085,
	430, 1085,
	431, 1085,
	432, 1085,
	433, 1085,
	435, 1085,
	437, 1085,
	438, 1085,
	439, 1085,
	440, 1085,
	441, 1085,
	443, 1085,
	444, 1085,
	445, 1085,
	447, 1085,
	448, 1085,
	451, 1085,
	452, 1085,
	453, 1085,
	454, 1085,
	455, 1085,
	456, 1085,
	457, 1085,
	459, 1085,
	462, 1085,
	463, 1085,
	464, 1085,
	465, 1085,
	466, 1085,
	467, 1085,
	469, 1085,
	470, 1085,
	471, 1085,
	476, 1085,
	477, 1085,
	478, 1085,
	479, 1085,
	480, 1085,
	481, 1085,
	-2, 0,
	-1, 1423,
	1, 453,
	504, 453,
	506, 453,
	508, 453,
	-2, 1248,
	-1, 1426,
	4, 2281,
	11, 2281,
	12, 2281,
	14, 2281,
	15, 2281,
	16, 2281,
	17, 2281,
	18, 2281,
	19, 2281,
	21, 2281,
	22, 2281,
	23, 2281,
	24, 2281,
	25, 2281,
	26, 2281,
	28, 2281,
	29, 2281,
	32, 2281,
	33, 2281,
	35, 2281,
	37, 2281,
	40, 2281,
	41, 2281,
	42, 2281,
	43, 2281,
	44, 2281,
	45, 2281,
	46, 2281,
	47, 2281,
	48, 2281,
	50, 2281,
	51, 2281,
	52, 2281,
	53, 2281,
	55, 2281,
	56, 2281,
	57, 2281,
	58, 2281,
	59, 2281,
	63, 2281,
	64, 2281,
	65, 2281,
	66, 2281,
	68, 2281,
	69, 2281,
	70, 2281,
	71, 2281,
	74, 2281,
	75, 2281,
	76, 2281,
	77, 2281,
	78, 2281,
	79, 2281,
	80, 2281,
	81, 2281,
	83, 2281,
	84, 2281,
	85, 2281,
	86, 2281,
	88, 2281,
	89, 2281,
	90, 2281,
	91, 2281,
	92, 2281,
	94, 2281,
	95, 2281,
	96, 2281,
	97, 2281,
	105, 2281,
	106, 2281,
	107, 2281,
	108, 2281,
	110, 2281,
	111, 2281,
	112, 2281,
	114, 2281,
	115, 2281,
	116, 2281,
	118, 2281,
	119, 2281,
	121, 2281,
	122, 2281,
	123, 2281,
	126, 2281,
	127, 2281,
	128, 2281,
	130, 2281,
	131, 2281,
	133, 2281,
	134, 2281,
	135, 2281,
	137, 2281,
	138, 2281,
	139, 2281,
	140, 2281,
	141, 2281,
	142, 2281,
	143, 2281,
	144, 2281,
	145, 2281,
	146, 2281,
	147, 2281,
	148, 2281,
	149, 2281,
	150, 2281,
	151, 2281,
	155, 2281,
	156, 2281,
	157, 2281,
	158, 2281,
	159, 2281,
	160, 2281,
	161, 2281,
	162, 2281,
	165, 2281,
	166, 2281,
	168, 2281,
	171, 2281,
	172, 2281,
	173, 2281,
	174, 2281,
	175, 2281,
	176, 2281,
	177, 2281,
	179, 2281,
	180, 2281,
	182, 2281,
	183, 2281,
	185, 2281,
	186, 2281,
	187, 2281,
	188, 2281,
	189, 2281,
	190, 2281,
	191, 2281,
	192, 2281,
	193, 2281,
	194, 2281,
	195, 2281,
	196, 2281,
	197, 2281,
	198, 2281,
	199, 2281,
	200, 2281,
	201, 2281,
	203, 2281,
	204, 2281,
	206, 2281,
	207, 2281,
	208, 2281,
	210, 2281,
	211, 2281,
	212, 2281,
	213, 2281,
	215, 2281,
	217, 2281,
	218, 2281,
	219, 2281,
	220, 2281,
	221, 2281,
	222, 2281,
	223, 2281,
	224, 2281,
	225, 2281,
	227, 2281,
	228, 2281,
	229, 2281,
	230, 2281,
	231, 2281,
	232, 2281,
	233, 2281,
	234, 2281,
	236, 2281,
	237, 2281,
	238, 2281,
	240, 2281,
	241, 2281,
	242, 2281,
	243, 2281,
	244, 2281,
	245, 2281,
	247, 2281,
	248, 2281,
	249, 2281,
	252, 2281,
	253, 2281,
	254, 2281,
	255, 2281,
	256, 2281,
	257, 2281,
	258, 2281,
	259, 2281,
	260, 2281,
	261, 2281,
	262, 2281,
	263, 2281,
	264, 2281,
	265, 2281,
	266, 2281,
	267, 2281,
	269, 2281,
	270, 2281,
	271, 2281,
	272, 2281,
	273, 2281,
	274, 2281,
	275, 2281,
	276, 2281,
	278, 2281,
	281, 2281,
	282, 2281,
	284, 2281,
	285, 2281,
	286, 2281,
	287, 2281,
	288, 2281,
	291, 2281,
	295, 2281,
	296, 2281,
	297, 2281,
	298, 2281,
	300, 2281,
	301, 2281,
	302, 2281,
	304, 2281,
	306, 2281,
	307, 2281,
	308, 2281,
	309, 2281,
	310, 2281,
	311, 2281,
	312, 2281,
	313, 2281,
	314, 2281,
	315, 2281,
	316, 2281,
	317, 2281,
	319, 2281,
	320, 2281,
	321, 2281,
	322, 2281,
	323, 2281,
	324, 2281,
	325, 2281,
	326, 2281,
	327, 2281,
	329, 2281,
	331, 2281,
	332, 2281,
	333, 2281,
	334, 2281,
	335, 2281,
	336, 2281,
	337, 2281,
	338, 2281,
	339, 2281,
	340, 2281,
	341, 2281,
	348, 2281,
	349, 2281,
	350, 2281,
	351, 2281,
	352, 2281,
	353, 2281,
	354, 2281,
	355, 2281,
	356, 2281,
	357, 2281,
	359, 2281,
	360, 2281,
	361, 2281,
	362, 2281,
	363, 2281,
	364, 2281,
	365, 2281,
	366, 2281,
	367, 2281,
	368, 2281,
	369, 2281,
	370, 2281,
	371, 2281,
	372, 2281,
	373, 2281,
	374, 2281,
	375, 2281,
	376, 2281,
	377, 2281,
	378, 2281,
	379, 2281,
	380, 2281,
	382, 2281,
	383, 2281,
	384, 2281,
	385, 2281,
	386, 2281,
	387, 2281,
	389, 2281,
	390, 2281,
	391, 2281,
	392, 2281,
	393, 2281,
	394, 2281,
	395, 2281,
	396, 2281,
	397, 2281,
	399, 2281,
	401, 2281,
	402, 2281,
	403, 2281,
	404, 2281,
	405, 2281,
	406, 2281,
	407, 2281,
	408, 2281,
	409, 2281,
	410, 2281,
	411, 2281,
	412, 2281,
	413, 2281,
	415, 2281,
	416, 2281,
	418, 2281,
	420, 2281,
	421, 2281,
	422, 2281,
	423, 2281,
	424, 2281,
	425, 2281,
	426, 2281,
	427, 2281,
	429, 2281,
	430, 2281,
	431, 2281,
	432, 2281,
	433, 2281,
	435, 2281,
	437, 2281,
	438, 2281,
	439, 2281,
	440, 2281,
	441, 2281,
	443, 2281,
	444, 2281,
	445, 2281,
	447, 2281,
	448, 2281,
	451, 2281,
	452, 2281,
	453, 2281,
	454, 2281,
	455, 2281,
	456, 2281,
	457, 2281,
	459, 2281,
	462, 2281,
	463, 2281,
	464, 2281,
	465, 2281,
	466, 2281,
	467, 2281,
	469, 2281,
	470, 2281,
	471, 2281,
	476, 2281,
	477, 2281,
	478, 2281,
	479, 2281,
	480, 2281,
	481, 2281,
	482, 2281,
	483, 2281,
	486, 2281,
	487, 2281,
	488, 2281,
	489, 2281,
	490, 2281,
	491, 2281,
	493, 2281,
	494, 2281,
	495, 2281,
	496, 2281,
	497, 2281,
	498, 2281,
	499, 2281,
	500, 2281,
	501, 2281,
	503, 2281,
	506, 2281,
	507, 2281,
	509, 2281,
	510, 2281,
	-2, 0,
	-1, 1431,
	170, 2179,
	434, 2179,
	488, 2179,
	507, 2179,
	-2, 0,
	-1, 1479,
	333, 741,
	387, 741,
	-2, 0,
	-1, 1504,
	1, 736,
	504, 736,
	506, 736,
	508, 736,
	-2, 0,
	-1, 1505,
	1, 772,
	504, 772,
	506, 772,
	508, 772,
	-2, 0,
	-1, 1506,
	1, 743,
	504, 743,
	506, 743,
	508, 743,
	-2, 0,
	-1, 1508,
	1, 747,
	504, 747,
	506, 747,
	508, 747,
	-2, 0,
	-1, 1514,
	1, 754,
	504, 754,
	506, 754,
	508, 754,
	-2, 0,
	-1, 1542,
	1, 2229,
	504, 2229,
	506, 2229,
	507, 2229,
	508, 2229,
	-2, 801,
	-1, 1543,
	1, 2176,
	504, 2176,
	506, 2176,
	507, 2176,
	508, 2176,
	-2, 802,
	-1, 1558,
	1, 1158,
	508, 1158,
	-2, 1163,
	-1, 1561,
	154, 1289,
	167, 1289,
	246, 1289,
	289, 1289,
	-2, 1229,
	-1, 1655,
	136, 1250,
	154, 1250,
	167, 1250,
	214, 1250,
	246, 1250,
	289, 1250,
	299, 1250,
	449, 1250,
	-2, 1654,
	-1, 1715,
	506, 1804,
	-2, 0,
	-1, 1750,
	136, 1250,
	154, 1250,
	167, 1250,
	214, 1250,
	246, 1250,
	289, 1250,
	299, 1250,
	449, 1250,
	-2, 1370,
	-1, 1797,
	505, 1481,
	-2, 1469,
	-1, 1830,
	1, 578,
	508, 578,
	-2, 1163,
	-1, 2056,
	1, 738,
	504, 738,
	506, 738,
	508, 738,
	-2, 0,
	-1, 2057,
	1, 774,
	504, 774,
	506, 774,
	508, 774,
	-2, 0,
	-1, 2087,
	1, 756,
	504, 756,
	506, 756,
	508, 756,
	-2, 0,
	-1, 2133,
	367, 1316,
	368, 1316,
	-2, 1514,
	-1, 2164,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1534,
	-1, 2165,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1535,
	-1, 2166,
	89, 0,
	227, 0,
	228, 0,
	490, 0,
	491, 0,
	-2, 1536,
	-1, 2167,
	89, 0,
	227, 0,
	228, 0,
	490, 0,
	491, 0,
	-2, 1537,
	-1, 2168,
	89, 0,
	227, 0,
	228, 0,
	490, 0,
	491, 0,
	-2, 1538,
	-1, 2169,
	89, 0,
	227, 0,
	228, 0,
	490, 0,
	491, 0,
	-2, 1539,
	-1, 2170,
	89, 0,
	227, 0,
	228, 0,
	490, 0,
	491, 0,
	-2, 1540,
	-1, 2171,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1541,
	-1, 2183,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1553,
	-1, 2184,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1554,
	-1, 2185,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1555,
	-1, 2188,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1560,
	-1, 2194,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1564,
	-1, 2196,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1572,
	-1, 2197,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1573,
	-1, 2198,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1574,
	-1, 2199,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1575,
	-1, 2311,
	5, 1947,
	170, 1815,
	505, 1944,
	-2, 1935,
	-1, 2312,
	170, 1816,
	-2, 2233,
	-1, 2313,
	170, 1817,
	-2, 2095,
	-1, 2314,
	170, 1818,
	-2, 2006,
	-1, 2315,
	170, 1819,
	-2, 2050,
	-1, 2316,
	170, 1820,
	-2, 2090,
	-1, 2317,
	170, 1821,
	-2, 2174,
	-1, 2318,
	170, 1822,
	-2, 1637,
	-1, 2387,
	1, 1371,
	2, 1371,
	95, 1371,
	136, 1371,
	154, 1371,
	167, 1371,
	171, 1371,
	181, 1371,
	184, 1371,
	210, 1371,
	214, 1371,
	224, 1371,
	242, 1371,
	246, 1371,
	270, 1371,
	289, 1371,
	293, 1371,
	299, 1371,
	358, 1371,
	362, 1371,
	449, 1371,
	460, 1371,
	473, 1371,
	474, 1371,
	475, 1371,
	484, 1371,
	504, 1371,
	506, 1371,
	508, 1371,
	510, 1371,
	-2, 1370,
	-1, 2400,
	505, 1916,
	-2, 1930,
	-1, 2402,
	1, 253,
	-2, 1277,
	-1, 2424,
	505, 1480,
	-2, 1470,
	-1, 2541,
	1, 1061,
	504, 1061,
	506, 1061,
	508, 1061,
	-2, 1277,
	-1, 2704,
	294, 1319,
	-2, 2271,
	-1, 2705,
	294, 1320,
	-2, 2160,
	-1, 2709,
	367, 1881,
	368, 1881,
	-2, 1635,
	-1, 2710,
	367, 1885,
	368, 1885,
	-2, 1636,
	-1, 2711,
	367, 1882,
	368, 1882,
	-2, 1635,
	-1, 2712,
	367, 1886,
	368, 1886,
	-2, 1636,
	-1, 2725,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1562,
	-1, 2726,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1566,
	-1, 2732,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1568,
	-1, 2930,
	221, 1163,
	329, 1163,
	337, 1163,
	484, 1163,
	-2, 575,
	-1, 3056,
	1, 1061,
	504, 1061,
	506, 1061,
	508, 1061,
	-2, 1277,
	-1, 3149,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1570,
	-1, 3156,
	218, 0,
	220, 0,
	281, 0,
	-2, 1589,
	-1, 3223,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1618,
	-1, 3224,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1619,
	-1, 3225,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1620,
	-1, 3229,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1624,
	-1, 3230,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1625,
	-1, 3231,
	14, 0,
	15, 0,
	16, 0,
	486, 0,
	487, 0,
	488, 0,
	-2, 1626,
	-1, 3277,
	505, 1917,
	-2, 1931,
	-1, 3400,
	507, 2387,
	-2, 1207,
	-1, 3452,
	218, 0,
	220, 0,
	281, 0,
	-2, 1590,
	-1, 3455,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1593,
	-1, 3456,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1595,
	-1, 3656,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1594,
	-1, 3657,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 1596,
	-1, 3668,
	218, 0,
	-2, 1627,
	-1, 3813,
	218, 0,
	-2, 1628,
	-1, 3961,
	47, 0,
	194, 0,
	245, 0,
	394, 0,
	482, 0,
	489, 0,
	-2, 2236,
}

const sqlPrivate = 57344

const sqlLast = 100907

var sqlAct = [...]int{

	239, 3856, 3971, 3835, 3700, 3703, 4068, 3960, 3936, 3042,
	3435, 3743, 3920, 3930, 3917, 3902, 2625, 3972, 3303, 3973,
	3587, 2597, 2457, 3688, 1097, 3750, 3188, 2860, 4018, 3817,
	3959, 2027, 3613, 3572, 1289, 3618, 921, 2859, 2143, 2948,
	3645, 1414, 3392, 3759, 2036, 938, 3341, 3521, 3071, 2011,
	3781, 3600, 1409, 2211, 3064, 1570, 3623, 3038, 3066, 3304,
	1446, 36, 1273, 2151, 3141, 1784, 3371, 2326, 655, 2634,
	2718, 3354, 3673, 3028, 1155, 2518, 2586, 1756, 2560, 2569,
	3356, 3279, 2144, 621, 1086, 2636, 2874, 2902, 2882, 3434,
	2842, 2583, 655, 2572, 753, 2644, 2627, 1487, 920, 161,
	2863, 2865, 2633, 1413, 1882, 1931, 972, 2581, 2598, 912,
	1248, 1725, 1930, 1701, 3491, 2459, 1892, 2495, 1663, 3248,
	2343, 976, 2034, 1256, 2148, 3818, 2841, 1445, 4, 2224,
	2009, 650, 99, 2643, 2702, 2532, 2380, 3012, 1925, 233,
	1909, 1019, 2570, 1916, 1785, 2253, 969, 1869, 2382, 1558,
	2379, 232, 2208, 1139, 2132, 2909, 1856, 1390, 1866, 3744,
	2361, 1726, 2340, 2115, 2244, 1077, 3040, 2113, 1410, 1424,
	1406, 1966, 1400, 2591, 974, 1343, 2637, 2448, 589, 1745,
	656, 657, 1128, 161, 1696, 2247, 1080, 1735, 2351, 1059,
	2307, 925, 2494, 2225, 1648, 575, 2369, 2297, 170, 597,
	1571, 2114, 2116, 1275, 1514, 605, 1572, 661, 171, 1094,
	652, 1965, 1422, 747, 615, 727, 1986, 1076, 1366, 664,
	701, 1284, 1881, 592, 2137, 950, 41, 1082, 40, 38,
	600, 661, 29, 27, 1057, 25, 812, 2753, 1577, 1295,
	2000, 1557, 830, 664, 3262, 2749, 3263, 2861, 2002, 4126,
	916, 2002, 4121, 2360, 2002, 3081, 3097, 4109, 2002, 2002,
	4108, 2360, 2928, 916, 2360, 4085, 1742, 1454, 4083, 3537,
	4079, 4001, 3537, 3995, 1939, 4002, 3993, 2360, 748, 3990,
	2360, 3987, 3982, 3991, 3080, 3988, 1939, 3957, 3956, 3955,
	3951, 1939, 1939, 2020, 2020, 3950, 3945, 3943, 3097, 2020,
	3537, 3537, 768, 2717, 66, 917, 751, 750, 3915, 3896,
	1074, 2411, 3537, 2415, 3889, 1089, 2360, 3888, 2360, 3883,
	67, 2360, 3882, 3537, 3876, 3849, 3537, 3815, 1939, 3579,
	1136, 2415, 3795, 3792, 71, 3752, 1939, 3537, 3720, 3753,
	3719, 3711, 1939, 3710, 1939, 1939, 1939, 3537, 3679, 1060,
	1060, 3658, 1939, 3642, 3631, 2415, 2035, 2020, 3097, 3567,
	897, 3556, 3536, 2360, 3454, 2360, 3537, 3408, 2415, 77,
	896, 3113, 3402, 1585, 1586, 3369, 3113, 3272, 3270, 3370,
	3255, 3273, 3271, 3172, 2360, 3168, 1136, 1939, 3112, 2360,
	3104, 1108, 3113, 2858, 3105, 1616, 2853, 2360, 2353, 2852,
	2360, 2805, 1588, 2360, 83, 2806, 906, 3897, 1063, 911,
	1064, 1288, 3252, 1585, 1586, 2803, 2795, 2793, 98, 2804,
	2796, 2360, 2764, 84, 95, 2762, 2360, 1113, 3810, 3798,
	2649, 2763, 1297, 1587, 2020, 1616, 1061, 2623, 2020, 3252,
	2622, 2023, 1588, 1607, 2023, 2432, 2414, 2352, 2409, 2360,
	2415, 1604, 2360, 2403, 2359, 2514, 3612, 1939, 2360, 3579,
	66, 2360, 2814, 2815, 2022, 3557, 1939, 1109, 2023, 3105,
	2509, 2447, 85, 1587, 2752, 1836, 67, 2001, 2566, 1938,
	1886, 2526, 2445, 1721, 2814, 2815, 1283, 2832, 2833, 2834,
	71, 3333, 3144, 3122, 1743, 1919, 1489, 3448, 206, 2396,
	2395, 2394, 3082, 2393, 2392, 1065, 1062, 905, 1585, 1586,
	904, 1618, 1619, 1620, 1628, 1629, 1630, 1610, 1611, 1612,
	1613, 3083, 3978, 903, 206, 77, 902, 1593, 2682, 1621,
	1616, 901, 2829, 900, 2814, 2815, 208, 1588, 899, 895,
	894, 893, 892, 891, 1634, 2003, 890, 889, 2003, 888,
	84, 2003, 887, 886, 2829, 2003, 2003, 885, 884, 883,
	83, 882, 208, 1440, 881, 1615, 1617, 1593, 1587, 880,
	879, 861, 810, 809, 98, 808, 807, 806, 1607, 84,
	95, 805, 207, 804, 803, 802, 1604, 801, 800, 1602,
	1603, 88, 200, 1288, 799, 3080, 206, 798, 1253, 797,
	201, 796, 1109, 795, 794, 1615, 1617, 793, 207, 792,
	791, 790, 789, 788, 787, 786, 2820, 785, 1608, 784,
	974, 783, 172, 782, 974, 3801, 781, 771, 85, 770,
	169, 91, 766, 94, 208, 765, 759, 758, 2820, 1158,
	718, 717, 677, 1158, 676, 675, 206, 1278, 172, 667,
	666, 3507, 1610, 1611, 1612, 1613, 1138, 206, 1608, 665,
	1143, 1132, 1593, 635, 627, 752, 626, 625, 609, 134,
	974, 227, 974, 226, 974, 225, 224, 2814, 2815, 1278,
	207, 223, 222, 221, 208, 220, 219, 218, 2820, 217,
	200, 1625, 216, 1259, 1635, 208, 231, 1264, 201, 2611,
	1615, 1617, 2018, 1278, 215, 2015, 2255, 2830, 3466, 2001,
	2108, 1614, 967, 214, 213, 1631, 212, 1632, 211, 136,
	172, 210, 209, 3287, 1602, 1603, 3266, 2413, 1297, 2830,
	207, 1609, 1294, 173, 1301, 2280, 1307, 1287, 2352, 3114,
	200, 207, 1623, 2905, 1278, 974, 2775, 88, 201, 1267,
	1278, 200, 2856, 1608, 1278, 2758, 1348, 1350, 2547, 201,
	2577, 2419, 974, 1704, 974, 2401, 1126, 1109, 1278, 1703,
	172, 1609, 2266, 2857, 974, 2386, 974, 1309, 1633, 2830,
	1864, 749, 1769, 1665, 206, 1746, 169, 91, 1704, 94,
	2264, 1707, 2030, 3958, 1703, 1622, 134, 1674, 661, 1291,
	1145, 2814, 2815, 1151, 1339, 1245, 1250, 1420, 1584, 3863,
	664, 1096, 3807, 206, 3672, 3632, 1702, 1278, 3627, 3799,
	2831, 752, 208, 3698, 1438, 134, 1443, 3611, 3514, 1121,
	3489, 2820, 3488, 3482, 974, 3481, 1452, 974, 1457, 1286,
	1285, 3480, 2831, 2594, 3473, 3472, 1614, 3470, 3465, 161,
	161, 208, 1605, 1601, 3462, 1598, 1596, 1597, 1589, 1590,
	1591, 1592, 1594, 1595, 3461, 3368, 1609, 3375, 207, 2029,
	3291, 3290, 1459, 3289, 2480, 136, 3276, 3243, 200, 1427,
	1429, 3242, 917, 3241, 1507, 3164, 201, 3160, 2900, 173,
	3108, 1626, 2831, 965, 1508, 1394, 1397, 207, 1589, 1590,
	1591, 1592, 1594, 1595, 3331, 2849, 2840, 200, 172, 1672,
	1132, 2813, 2810, 1132, 2809, 201, 2807, 2802, 2801, 1666,
	2800, 1664, 2830, 2814, 2815, 2797, 2250, 974, 974, 974,
	974, 974, 974, 974, 1369, 2794, 1523, 172, 1665, 2774,
	2757, 2750, 206, 2624, 2825, 2823, 2824, 2816, 2817, 2818,
	2819, 2821, 2822, 1425, 2387, 2820, 2237, 1977, 974, 2826,
	2827, 2828, 2579, 1584, 974, 1308, 2825, 2823, 2824, 2816,
	2817, 2818, 2819, 2821, 2822, 1583, 4120, 1073, 3819, 1624,
	208, 1303, 1946, 1599, 1600, 1606, 1627, 1605, 1601, 1944,
	1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 2854,
	4077, 4076, 1439, 3476, 2251, 4011, 1562, 3475, 4009, 4000,
	1098, 3190, 3855, 3845, 1453, 206, 2825, 2823, 2824, 2816,
	2817, 2818, 2819, 2821, 2822, 3842, 207, 3841, 1556, 1458,
	3626, 3840, 3834, 1654, 3827, 2831, 200, 3796, 3780, 3779,
	2214, 66, 3767, 3764, 201, 3716, 2830, 3694, 3670, 1297,
	1464, 3653, 3652, 208, 3639, 3638, 3604, 67, 3580, 3506,
	3487, 1480, 1296, 3423, 1585, 1586, 172, 974, 974, 974,
	3420, 71, 1510, 974, 3321, 3320, 2220, 2820, 2252, 2249,
	1094, 3374, 1094, 2814, 2815, 1723, 1616, 3307, 3306, 3258,
	917, 2897, 3246, 1588, 3155, 1652, 3115, 1158, 3098, 207,
	3057, 3001, 1092, 3802, 2976, 974, 77, 2951, 655, 200,
	1559, 206, 1802, 655, 1567, 1566, 2950, 201, 2923, 897,
	2779, 974, 2778, 2773, 1587, 1278, 2741, 2559, 1710, 896,
	1709, 1708, 2578, 1772, 1561, 1705, 1697, 1706, 1695, 172,
	974, 83, 2426, 1781, 1563, 1760, 1158, 2425, 1825, 208,
	2398, 2391, 1777, 1580, 1581, 98, 206, 2358, 2262, 2831,
	84, 95, 2816, 2817, 2818, 2819, 2821, 2822, 1132, 1302,
	2921, 3607, 1585, 1586, 1768, 1724, 1862, 1719, 1718, 1729,
	1730, 1717, 161, 1753, 1716, 1715, 1089, 1833, 1089, 1714,
	2951, 1713, 1712, 1732, 208, 207, 2254, 1711, 1692, 1698,
	1699, 1588, 1827, 1691, 2031, 200, 1690, 1060, 971, 85,
	1689, 1688, 1687, 201, 917, 1686, 1685, 1684, 1593, 1683,
	1682, 1681, 1680, 1679, 1678, 1779, 1667, 1297, 1653, 1651,
	1646, 1120, 1587, 1796, 1111, 2593, 1104, 2820, 3510, 2279,
	207, 1828, 3458, 3286, 3269, 3261, 2761, 661, 1775, 2389,
	200, 3683, 661, 1799, 3512, 1853, 1615, 1617, 201, 664,
	1444, 3285, 1754, 206, 664, 1666, 2919, 2417, 1751, 1649,
	1585, 1586, 1764, 1830, 4074, 1142, 2265, 4067, 2814, 2815,
	172, 3559, 1278, 1278, 2823, 2824, 2816, 2817, 2818, 2819,
	2821, 2822, 1158, 1722, 2263, 3843, 2248, 3800, 3067, 1588,
	3755, 208, 3754, 1855, 3760, 1353, 1855, 1748, 3630, 1608,
	1763, 1875, 1762, 1761, 1855, 3582, 1759, 1758, 1780, 1757,
	3581, 2428, 3558, 1824, 3509, 3264, 3697, 3100, 88, 1141,
	1587, 1136, 3099, 1782, 1746, 1554, 1831, 1251, 2799, 1403,
	1263, 1266, 1934, 1936, 1744, 2798, 2723, 207, 1687, 1479,
	1704, 2499, 2482, 1136, 1509, 1687, 1703, 200, 1906, 2979,
	206, 1908, 1858, 1848, 1913, 201, 3378, 169, 91, 1137,
	94, 1842, 3319, 1676, 1524, 1136, 1140, 1488, 877, 1133,
	3044, 2028, 3043, 3751, 3998, 1585, 1586, 172, 3983, 3970,
	3029, 1891, 1489, 1932, 206, 2767, 3338, 3324, 208, 3120,
	1266, 1266, 752, 3674, 2861, 3192, 134, 3979, 206, 1673,
	2818, 2819, 2821, 2822, 1588, 2245, 2424, 1088, 878, 1917,
	1720, 1700, 1609, 661, 1593, 1978, 3036, 1974, 1327, 1278,
	2523, 1278, 208, 1278, 3992, 664, 3989, 3076, 1266, 3298,
	2520, 206, 3836, 3614, 207, 1587, 208, 3914, 3824, 1278,
	1278, 2954, 3314, 1970, 200, 2631, 136, 2590, 1975, 1983,
	1278, 3026, 201, 4035, 1286, 1285, 4034, 3980, 3136, 3736,
	173, 2932, 3351, 1278, 1278, 1278, 3547, 1315, 207, 208,
	1072, 1127, 1912, 3875, 172, 1421, 2433, 1134, 200, 4116,
	2037, 1468, 207, 1325, 655, 1135, 201, 933, 2093, 919,
	3729, 2123, 200, 2048, 1281, 1937, 2091, 3722, 3364, 3347,
	201, 2934, 3346, 3340, 875, 873, 871, 1991, 172, 869,
	866, 3337, 3335, 3295, 1980, 207, 3294, 2772, 3350, 857,
	2033, 2771, 172, 713, 2770, 200, 2769, 2727, 2530, 1593,
	1957, 948, 1522, 201, 1956, 2121, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 1133, 1843, 2293, 2529, 2525,
	2052, 917, 2516, 917, 1521, 172, 2508, 1326, 2816, 2817,
	2818, 2819, 2821, 2822, 974, 2507, 974, 2038, 1369, 1985,
	1988, 1989, 1988, 974, 2486, 2410, 1802, 1802, 1158, 2195,
	974, 974, 974, 974, 974, 974, 974, 974, 974, 974,
	974, 974, 974, 974, 974, 974, 974, 974, 974, 974,
	974, 974, 974, 974, 974, 974, 974, 974, 974, 974,
	974, 974, 974, 974, 974, 714, 974, 2125, 974, 974,
	974, 974, 1425, 661, 1425, 2005, 1993, 1994, 2007, 206,
	1142, 2024, 1136, 2025, 2012, 664, 1121, 2014, 2112, 1560,
	974, 2017, 1520, 974, 974, 2451, 1466, 3874, 915, 2451,
	2292, 974, 1595, 1134, 2122, 974, 2920, 974, 974, 2449,
	1142, 1135, 2041, 2449, 2153, 1158, 1359, 208, 1358, 2587,
	1955, 974, 974, 974, 974, 3651, 974, 974, 974, 974,
	974, 974, 974, 974, 1141, 1357, 2978, 1356, 1773, 1461,
	1133, 3121, 1734, 2533, 2070, 2106, 1380, 1796, 1796, 863,
	2046, 1334, 974, 974, 974, 974, 974, 974, 974, 974,
	974, 2087, 1282, 207, 1141, 974, 2120, 1799, 1799, 1321,
	2149, 2150, 2136, 200, 2418, 2440, 914, 1094, 2245, 2473,
	2097, 201, 1847, 1846, 1158, 2484, 1855, 1857, 3543, 2402,
	1090, 2700, 2715, 1094, 3948, 1589, 1590, 1591, 1592, 1594,
	1595, 1481, 2102, 172, 2111, 2110, 2109, 2133, 2822, 974,
	1158, 2124, 1886, 2226, 2227, 2117, 897, 3560, 1738, 897,
	897, 2503, 1565, 2206, 917, 2241, 2140, 2226, 2242, 2141,
	2142, 2496, 2497, 917, 2496, 2497, 2107, 917, 4034, 1263,
	1533, 3310, 2496, 2497, 1462, 2210, 2105, 2472, 1134, 2210,
	1537, 2204, 2060, 2288, 1553, 2063, 1135, 1741, 1136, 2374,
	1119, 916, 1101, 2522, 1790, 2814, 2815, 1990, 2832, 2833,
	2834, 1736, 2310, 2310, 2324, 1278, 2226, 2250, 2366, 2344,
	2346, 2931, 2222, 1089, 3127, 2350, 3450, 1489, 3126, 1739,
	1489, 1850, 2055, 2521, 1753, 2679, 1099, 1519, 1344, 1089,
	2239, 2254, 2535, 2519, 206, 1158, 2714, 3336, 716, 715,
	1060, 3334, 1591, 1592, 1594, 1595, 3323, 1737, 206, 3705,
	1132, 1477, 161, 2534, 2536, 917, 2814, 2815, 1886, 2399,
	779, 2218, 4071, 3976, 1802, 2829, 2365, 1833, 2216, 3650,
	2876, 1342, 208, 2319, 2104, 2388, 2327, 2524, 2306, 2335,
	4062, 2348, 2412, 2064, 3541, 2251, 208, 2123, 2356, 2357,
	1158, 2461, 2373, 2539, 2378, 2367, 2200, 2384, 2385, 711,
	1706, 710, 2506, 2092, 1278, 3533, 2371, 2372, 2201, 1751,
	2453, 2090, 2202, 2479, 974, 974, 2207, 974, 207, 1467,
	867, 867, 867, 1852, 1102, 868, 867, 2485, 200, 2483,
	2452, 2121, 207, 1136, 2993, 3529, 201, 2685, 2517, 1740,
	1516, 913, 200, 1092, 2513, 1092, 2101, 4078, 2986, 2820,
	201, 2431, 1943, 1942, 4051, 3707, 2427, 1851, 172, 2252,
	2249, 3301, 1905, 3181, 4063, 1776, 1698, 1699, 1889, 2563,
	2707, 2708, 172, 2992, 2548, 2430, 4050, 2551, 2488, 2553,
	3178, 3530, 2408, 2601, 2504, 1796, 3322, 2985, 2434, 1379,
	2450, 1278, 1278, 2464, 1278, 2119, 3893, 4088, 4023, 1534,
	3440, 1904, 2835, 3977, 3439, 1799, 1278, 1888, 2489, 1973,
	2820, 852, 1320, 3074, 2475, 2056, 3542, 2456, 2592, 2466,
	2469, 2592, 1465, 1870, 852, 2645, 2487, 2542, 1871, 2544,
	1883, 2042, 3311, 2619, 910, 2688, 2647, 2875, 2614, 2505,
	2830, 2540, 2652, 2653, 1504, 587, 633, 910, 661, 3073,
	2122, 2658, 2659, 2660, 3179, 974, 4065, 4101, 1879, 1323,
	664, 2498, 2500, 2501, 2502, 2738, 2648, 1263, 1886, 2057,
	582, 2203, 2668, 3837, 2669, 2192, 4069, 2254, 3073, 1877,
	2205, 2254, 1884, 1885, 2666, 1877, 1463, 3975, 2103, 1286,
	2545, 161, 2616, 2736, 2630, 3851, 864, 2062, 1505, 974,
	1344, 2830, 2557, 2002, 1531, 974, 974, 1535, 1870, 2567,
	1880, 2603, 2120, 1871, 853, 2676, 772, 3004, 2933, 746,
	1693, 2620, 2690, 1915, 2692, 2585, 2917, 853, 1872, 2663,
	3596, 2650, 2607, 2596, 2608, 2654, 2609, 2655, 1100, 2670,
	1564, 2672, 2687, 2674, 632, 1874, 1914, 3525, 3891, 1877,
	2729, 3526, 2463, 2831, 2209, 1764, 2436, 2615, 2617, 4070,
	974, 974, 2683, 2621, 3436, 2684, 974, 1929, 2632, 3706,
	2438, 2059, 2254, 1532, 1910, 780, 4022, 2248, 1118, 974,
	974, 3892, 2965, 1536, 760, 974, 974, 3663, 1920, 4044,
	1738, 974, 4072, 1927, 3925, 3854, 3528, 1425, 1884, 1885,
	974, 974, 974, 2439, 1859, 1860, 974, 1876, 2733, 1928,
	3531, 2054, 4064, 1872, 2831, 2236, 974, 2730, 2437, 1645,
	2610, 2451, 2190, 3359, 2734, 2193, 1911, 2967, 2739, 1741,
	1874, 2964, 3357, 974, 2217, 2467, 2777, 2706, 3647, 1476,
	1478, 2760, 2383, 2368, 2695, 2697, 2742, 2743, 2696, 2686,
	2370, 4089, 916, 2701, 3194, 2136, 2377, 4099, 1088, 2969,
	1088, 1739, 3606, 3430, 3282, 1114, 3441, 2716, 1790, 1790,
	2826, 2827, 2828, 2189, 2462, 3138, 854, 2825, 2823, 2824,
	2816, 2817, 2818, 2819, 2821, 2822, 2698, 1492, 3857, 854,
	2703, 3232, 1876, 1926, 3974, 4004, 4033, 3359, 4031, 974,
	974, 974, 668, 3373, 4005, 3597, 3357, 2751, 974, 974,
	974, 3871, 1877, 974, 2968, 2728, 3766, 917, 3527, 3390,
	3060, 2755, 2756, 974, 1094, 1158, 2759, 1964, 1731, 974,
	1112, 974, 3360, 1907, 4021, 1107, 773, 774, 574, 1094,
	2824, 2816, 2817, 2818, 2819, 2821, 2822, 1575, 3485, 3437,
	2971, 2139, 1887, 3534, 4102, 634, 3646, 1158, 631, 1844,
	3142, 3713, 2910, 583, 2868, 2869, 2837, 2838, 2839, 1094,
	2327, 2327, 1158, 3712, 2290, 4094, 3692, 2890, 2766, 2291,
	3903, 1740, 2294, 2735, 2295, 2296, 1802, 3823, 3391, 2972,
	1158, 3344, 2737, 1574, 1574, 855, 3297, 1877, 3355, 3061,
	2003, 3055, 974, 2946, 761, 762, 3360, 1569, 855, 2942,
	3546, 2571, 2561, 1984, 1976, 2915, 974, 3545, 1969, 1951,
	3858, 3177, 2191, 2880, 3247, 1657, 584, 1574, 1802, 1662,
	1089, 3139, 2098, 2851, 2927, 1867, 1837, 856, 2929, 2899,
	2878, 2938, 2939, 3393, 974, 1089, 3233, 3619, 1132, 2870,
	856, 3442, 2935, 2903, 3234, 2558, 2490, 2129, 1382, 2955,
	3749, 3358, 2959, 1873, 585, 2420, 586, 3747, 3648, 2047,
	2846, 2847, 2848, 1923, 1868, 1089, 2468, 2956, 2908, 2904,
	2961, 2962, 3693, 1645, 2862, 1573, 1573, 1158, 775, 776,
	2327, 2327, 2327, 2957, 2879, 2943, 1278, 2896, 2877, 2888,
	2889, 1278, 1841, 4003, 2981, 2891, 2892, 1796, 2973, 2974,
	1278, 3486, 2975, 3007, 1278, 1921, 3010, 2953, 1158, 1573,
	3018, 3020, 669, 670, 3443, 655, 2941, 1799, 1575, 1575,
	2918, 2912, 2913, 2914, 2952, 3358, 1278, 2894, 2884, 2895,
	2362, 2721, 2998, 2999, 2699, 4093, 3000, 1278, 1873, 1796,
	2984, 3260, 3041, 2930, 1922, 2873, 763, 764, 3013, 2983,
	1734, 1094, 3002, 3013, 2872, 2936, 3049, 3054, 2130, 1799,
	1251, 1839, 2947, 1506, 3030, 2565, 1790, 1875, 1493, 2407,
	2994, 2406, 2613, 3544, 2405, 1263, 2645, 3859, 2995, 2404,
	914, 1090, 3701, 1090, 1840, 2645, 1351, 3069, 3011, 1365,
	1092, 1278, 1278, 3021, 2970, 1875, 2977, 3830, 1352, 2364,
	2988, 2491, 2492, 3588, 2363, 3078, 1092, 2991, 3109, 1982,
	2885, 3032, 1278, 2997, 3027, 1870, 3096, 1363, 3003, 3636,
	1871, 3089, 2665, 672, 671, 3016, 1738, 3023, 3022, 1917,
	2911, 2671, 3052, 2673, 4041, 2675, 3745, 1917, 2651, 2543,
	3906, 3831, 3116, 3005, 3911, 1158, 3034, 2488, 1158, 3900,
	3492, 3070, 2989, 3062, 661, 778, 2990, 1089, 2883, 3249,
	2261, 1551, 3690, 3929, 2693, 1741, 664, 1549, 1528, 4043,
	1526, 3994, 1266, 1266, 3702, 3844, 673, 674, 974, 1736,
	3635, 161, 161, 2887, 974, 974, 917, 3075, 974, 974,
	974, 3669, 974, 2844, 3111, 3484, 3084, 1739, 3133, 3691,
	3363, 974, 1802, 3090, 3077, 1503, 2843, 3107, 3154, 3118,
	974, 3094, 3095, 974, 2808, 1501, 2740, 3907, 3832, 1158,
	1872, 1263, 3132, 2562, 2515, 1737, 1499, 2481, 974, 3123,
	2429, 3124, 1497, 3125, 1495, 1486, 1158, 1874, 1484, 3117,
	1361, 1771, 1767, 1552, 1449, 2089, 1802, 1802, 974, 974,
	3135, 974, 974, 974, 2260, 3134, 3150, 3151, 1569, 1263,
	3140, 1263, 2681, 2680, 2657, 2118, 2886, 3157, 3129, 974,
	2100, 1515, 2067, 974, 1948, 1802, 1802, 974, 974, 974,
	974, 974, 974, 974, 974, 974, 974, 974, 974, 974,
	974, 974, 974, 974, 974, 974, 3137, 974, 1826, 1876,
	1677, 1460, 1338, 1364, 974, 974, 1802, 3969, 3086, 3087,
	3088, 974, 865, 3566, 3091, 3555, 3092, 1740, 3093, 4045,
	3899, 3617, 974, 1796, 3166, 3167, 3571, 3518, 3006, 1550,
	3389, 1362, 3383, 1094, 1094, 1548, 1527, 974, 1525, 3162,
	3349, 3317, 3173, 1799, 3213, 3214, 3215, 3216, 3217, 3218,
	3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
	3229, 3230, 3231, 3189, 3235, 3315, 1158, 1796, 1796, 777,
	3196, 3204, 4019, 1502, 3265, 3205, 3180, 3182, 3183, 3296,
	2327, 2327, 3206, 1500, 3207, 1156, 3053, 1799, 1799, 1257,
	2149, 3197, 3236, 3045, 1498, 974, 1796, 1796, 3209, 3211,
	1496, 2612, 1494, 1485, 1877, 1088, 1483, 2588, 1360, 2576,
	2088, 974, 974, 161, 2568, 2555, 1799, 1799, 2021, 2149,
	3212, 1088, 2019, 3292, 2016, 2013, 908, 1796, 852, 3237,
	2008, 3244, 2006, 2004, 3256, 3257, 1995, 974, 974, 1089,
	1089, 1947, 2937, 3245, 1945, 1933, 3251, 1799, 3253, 3254,
	3240, 910, 870, 872, 874, 1918, 1903, 1890, 1878, 3174,
	3065, 3017, 974, 3773, 982, 1069, 1927, 1578, 2327, 2327,
	2327, 2327, 2327, 2327, 2327, 2327, 2327, 2327, 2327, 2327,
	2327, 2327, 2327, 2327, 2327, 2327, 2327, 1278, 2327, 1778,
	1070, 3267, 2719, 909, 4035, 3939, 3641, 3634, 3281, 3633,
	3578, 2646, 1802, 1863, 1317, 2451, 3268, 235, 235, 235,
	3775, 577, 578, 2471, 593, 577, 593, 603, 608, 2449,
	3345, 624, 3329, 2451, 3300, 3401, 630, 1278, 1886, 1546,
	1547, 853, 235, 2058, 974, 1402, 2084, 2470, 2083, 3938,
	2065, 1981, 1094, 974, 3548, 3330, 3332, 646, 3573, 1482,
	757, 3379, 1401, 3809, 3493, 1873, 235, 3325, 3471, 2493,
	1278, 1278, 1278, 2601, 1579, 3362, 1926, 2996, 2488, 3280,
	2474, 1582, 4037, 4029, 2720, 3411, 1278, 3403, 1585, 1586,
	3343, 3398, 3339, 1158, 3394, 3999, 3380, 1071, 1790, 3395,
	3366, 2554, 2924, 2925, 3415, 2926, 2645, 1585, 1586, 588,
	3342, 2086, 1834, 2219, 2520, 1158, 228, 1588, 974, 974,
	2528, 2527, 2510, 3361, 974, 974, 1802, 3427, 1657, 974,
	974, 1402, 974, 1796, 3381, 702, 974, 2476, 3790, 3384,
	1790, 743, 1402, 3898, 3396, 3867, 1893, 974, 1587, 3397,
	3429, 1263, 3405, 1799, 3864, 3399, 2947, 3068, 1089, 3404,
	571, 599, 3829, 974, 3410, 3742, 1897, 1587, 3416, 3417,
	3316, 3422, 3318, 3382, 1973, 577, 577, 3424, 3418, 3425,
	3372, 2512, 2331, 235, 3444, 2478, 3421, 3782, 3275, 2595,
	3445, 3453, 2349, 3438, 2511, 3699, 3433, 1829, 2477, 3783,
	1783, 2305, 2301, 854, 4066, 2916, 3931, 4092, 2814, 2815,
	3428, 3932, 3866, 3931, 1894, 1585, 1586, 1092, 3932, 2443,
	2444, 2441, 2442, 1094, 1288, 3784, 3463, 1470, 2256, 3348,
	4047, 1094, 1092, 1469, 3284, 1158, 2443, 1158, 2441, 2289,
	1530, 3763, 3730, 1529, 1094, 3574, 3570, 1796, 1090, 3569,
	3459, 3387, 3457, 3283, 3130, 3185, 3008, 1671, 1158, 1670,
	4080, 4052, 1092, 3498, 1090, 3820, 3726, 1799, 3684, 3681,
	3483, 3603, 3511, 2299, 3426, 3407, 3367, 974, 1263, 1263,
	3365, 3313, 3308, 3085, 3786, 3059, 3058, 3515, 3516, 2678,
	2303, 2304, 2302, 2662, 2661, 3539, 2605, 2580, 2556, 2422,
	3785, 3409, 2421, 2221, 1158, 2085, 2082, 2081, 3549, 1898,
	3501, 1158, 3540, 2080, 3497, 161, 2079, 3787, 1998, 3504,
	907, 3500, 855, 1997, 3494, 3551, 3552, 3550, 2903, 1089,
	3508, 3505, 3499, 1996, 1278, 1278, 3517, 1089, 3495, 3496,
	3575, 1979, 3576, 1959, 1958, 3490, 3538, 2298, 2300, 1954,
	1089, 1953, 1952, 1770, 1950, 1263, 1949, 1776, 1545, 1544,
	1158, 3586, 1490, 3589, 856, 1278, 1389, 1388, 1387, 1899,
	1900, 1386, 1385, 3577, 1384, 3584, 1383, 1381, 1376, 1375,
	1374, 1373, 1895, 1372, 1333, 1332, 3568, 1331, 1330, 1329,
	1328, 974, 1322, 1316, 1314, 3585, 1313, 3554, 1149, 3563,
	1148, 1147, 1865, 1146, 3598, 3583, 1117, 1158, 3562, 3637,
	3564, 1116, 1052, 1835, 3609, 876, 1896, 862, 3565, 974,
	974, 974, 3620, 3624, 1790, 3605, 3590, 3621, 3640, 3704,
	3643, 3608, 3532, 1539, 3628, 3615, 82, 1158, 1324, 689,
	76, 1924, 974, 3622, 3312, 974, 974, 3610, 835, 3928,
	3184, 1310, 3850, 697, 1092, 974, 3913, 2963, 1802, 2531,
	2066, 1491, 2068, 974, 974, 2898, 2390, 3890, 1790, 1790,
	3467, 2776, 3816, 3203, 3662, 2259, 1675, 2855, 1158, 78,
	1278, 3649, 958, 3629, 1004, 3595, 3654, 3594, 3519, 3299,
	2635, 3592, 3591, 1158, 1787, 1789, 924, 1790, 1790, 1161,
	1845, 974, 964, 1861, 1854, 2423, 2309, 981, 974, 978,
	1791, 1793, 1901, 980, 979, 3788, 974, 1792, 1802, 1694,
	3789, 977, 3668, 3671, 3665, 1786, 974, 3386, 1790, 974,
	3686, 3385, 1088, 2564, 2599, 1368, 837, 974, 3677, 3678,
	3659, 1849, 2215, 2243, 1158, 2765, 1668, 1088, 1940, 939,
	3680, 960, 1278, 1278, 1105, 2240, 3687, 1110, 3685, 949,
	2881, 3072, 3274, 3625, 2128, 3725, 705, 3708, 3695, 2811,
	2246, 1103, 2332, 3709, 2325, 2321, 2589, 1088, 1555, 1796,
	1902, 3735, 1115, 1647, 3676, 3757, 2600, 1144, 1158, 624,
	3748, 1278, 942, 2213, 1659, 2745, 2331, 3041, 2138, 1799,
	3288, 3079, 2901, 2416, 3935, 3762, 3193, 3732, 1963, 974,
	974, 3723, 235, 3740, 235, 235, 1254, 1068, 235, 235,
	1269, 3761, 3738, 974, 974, 1067, 3746, 3793, 3794, 3741,
	3737, 3774, 3756, 235, 3778, 1290, 3727, 1066, 3919, 1796,
	974, 1802, 3772, 3916, 3797, 3419, 2327, 3771, 3769, 3039,
	1838, 2435, 1637, 3770, 3777, 3624, 3776, 3791, 3046, 1799,
	1319, 954, 3715, 3768, 1262, 974, 2866, 3110, 974, 1335,
	629, 3804, 966, 1337, 1266, 1269, 2331, 2331, 235, 235,
	1636, 1254, 2538, 2537, 3822, 3826, 1131, 974, 1130, 1129,
	2945, 235, 2327, 4100, 3833, 3309, 205, 2713, 1576, 1378,
	1568, 202, 204, 203, 3821, 3839, 3814, 3813, 3599, 3278,
	2907, 235, 235, 235, 3997, 1254, 235, 1269, 3327, 3838,
	1973, 3031, 20, 3853, 1790, 974, 974, 624, 19, 235,
	235, 18, 103, 39, 17, 974, 1092, 1092, 974, 117,
	1278, 133, 3808, 3805, 3806, 132, 131, 3846, 636, 130,
	1278, 1278, 757, 3868, 129, 135, 3870, 128, 127, 3848,
	3717, 3718, 1796, 122, 126, 125, 3881, 1278, 124, 1088,
	3861, 3862, 3865, 3761, 3852, 3860, 123, 121, 120, 119,
	974, 974, 1799, 3731, 3873, 3877, 3733, 3734, 118, 116,
	115, 3879, 3880, 114, 113, 3878, 2331, 2331, 2331, 112,
	111, 110, 3872, 109, 108, 3886, 107, 3887, 3884, 3885,
	106, 105, 104, 974, 974, 3908, 974, 620, 617, 3895,
	235, 3918, 3921, 55, 54, 3933, 3910, 102, 101, 16,
	37, 2327, 1084, 14, 59, 60, 13, 235, 1790, 3909,
	32, 81, 93, 92, 2152, 33, 90, 89, 3937, 31,
	3923, 15, 3927, 641, 3940, 87, 3953, 3952, 86, 30,
	28, 11, 974, 974, 974, 1090, 9, 8, 34, 1755,
	12, 5, 3944, 166, 3949, 230, 230, 573, 165, 3947,
	1090, 168, 164, 3981, 167, 974, 80, 163, 162, 3986,
	79, 3954, 26, 3965, 3966, 3968, 3941, 3967, 10, 3942,
	3894, 158, 3758, 3377, 74, 160, 159, 3984, 157, 156,
	1090, 155, 75, 72, 154, 153, 73, 4008, 152, 24,
	6, 4010, 4006, 58, 7, 3644, 3119, 648, 96, 4016,
	97, 2257, 974, 3922, 35, 70, 3926, 4007, 69, 4020,
	4012, 2601, 68, 4015, 23, 1092, 3847, 57, 22, 195,
	194, 643, 4013, 4014, 193, 192, 191, 4017, 190, 185,
	184, 4032, 4030, 4028, 4026, 4027, 189, 187, 186, 3918,
	4038, 188, 3921, 4040, 4042, 183, 197, 4039, 196, 4054,
	974, 4049, 974, 4046, 4055, 199, 4053, 182, 180, 4036,
	176, 175, 179, 181, 178, 3937, 177, 4060, 4056, 174,
	4058, 4057, 198, 150, 1973, 4048, 151, 4061, 65, 149,
	148, 4075, 4073, 147, 146, 145, 144, 1266, 143, 64,
	4059, 21, 2, 1, 0, 4081, 2400, 0, 237, 0,
	0, 0, 0, 577, 0, 0, 0, 974, 974, 4084,
	0, 0, 0, 4087, 4090, 974, 4082, 974, 974, 0,
	4096, 1088, 1088, 0, 235, 0, 235, 4104, 638, 0,
	235, 4106, 0, 0, 4103, 0, 0, 0, 4086, 3533,
	0, 0, 0, 1290, 1254, 235, 0, 235, 0, 0,
	4113, 642, 235, 1290, 593, 0, 4110, 235, 1290, 0,
	4115, 974, 4105, 624, 0, 4107, 4119, 4114, 4117, 3529,
	4122, 0, 1090, 3522, 4118, 0, 0, 0, 4127, 647,
	0, 4112, 0, 0, 0, 0, 1092, 0, 0, 3520,
	0, 2446, 645, 0, 1092, 3524, 0, 4123, 640, 0,
	4125, 0, 0, 0, 0, 0, 0, 1092, 3996, 0,
	0, 0, 0, 0, 0, 3530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 4097, 4098, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3523, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 2331, 2331, 0, 0,
	0, 0, 937, 0, 649, 0, 0, 0, 0, 0,
	0, 4124, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2331, 2331, 2331, 2331, 2331, 2331,
	2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
	2331, 2331, 2331, 0, 2331, 0, 0, 0, 0, 235,
	0, 3525, 0, 235, 0, 3526, 0, 235, 1263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 235, 0, 235,
	0, 1585, 1586, 577, 1618, 1619, 1620, 1628, 1629, 1630,
	0, 0, 0, 1790, 0, 0, 0, 1999, 0, 0,
	3528, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 3531, 235, 0, 1634, 0, 0,
	0, 0, 0, 0, 1090, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 1266, 0, 0, 624, 0, 0, 0,
	757, 1607, 0, 0, 0, 0, 0, 0, 0, 1604,
	1585, 1586, 0, 1618, 1619, 1620, 1628, 1629, 1630, 0,
	0, 1088, 0, 0, 0, 235, 0, 1254, 235, 1088,
	0, 1621, 1616, 0, 0, 0, 0, 0, 0, 1588,
	0, 624, 1088, 0, 0, 0, 1634, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 235,
	1153, 235, 0, 235, 0, 235, 1261, 235, 0, 0,
	1587, 0, 3527, 0, 0, 1610, 1611, 1612, 1613, 0,
	1607, 0, 0, 0, 0, 1593, 0, 2094, 1604, 0,
	2095, 0, 2096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 3534, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 1635, 0, 0,
	0, 0, 0, 1615, 1617, 608, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1370,
	0, 0, 0, 0, 0, 0, 0, 1602, 1603, 0,
	0, 0, 0, 0, 1610, 1611, 1612, 1613, 0, 1393,
	1393, 1393, 0, 0, 1593, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 1434, 1435, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 1635, 0, 0, 0,
	0, 2867, 1615, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 1586, 0, 0, 0, 1631, 0, 1632,
	0, 0, 0, 0, 0, 0, 1602, 1603, 0, 0,
	0, 0, 0, 2893, 1616, 0, 0, 0, 937, 0,
	0, 1588, 937, 0, 1623, 0, 0, 0, 2906, 0,
	0, 0, 0, 0, 0, 1608, 0, 1242, 0, 0,
	0, 1242, 0, 0, 0, 0, 2922, 0, 1538, 1614,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 1607, 0, 0, 0, 577, 0, 0, 1609,
	1604, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 1626, 0, 0, 235, 0, 577,
	1585, 1586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 3153, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 1614, 1588,
	0, 0, 0, 0, 1090, 0, 1610, 1611, 1612, 1613,
	0, 0, 1090, 0, 0, 0, 1593, 0, 1609, 0,
	1585, 1586, 0, 0, 0, 1090, 0, 0, 0, 0,
	1587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 593, 1616, 1626, 2906, 0, 0, 0, 1604, 1588,
	0, 0, 1624, 0, 1615, 1617, 1599, 1600, 1606, 1627,
	1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592,
	1594, 1595, 0, 0, 0, 0, 0, 0, 1602, 1603,
	1587, 0, 0, 0, 0, 2460, 0, 0, 0, 0,
	1607, 0, 0, 235, 3148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 1608, 0, 0,
	0, 0, 0, 0, 1610, 1611, 1612, 1613, 235, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 1270,
	0, 1624, 0, 235, 0, 1599, 1600, 1606, 1627, 1605,
	1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 0, 0, 235, 2546, 2789, 0, 0, 1765, 2790,
	0, 1312, 1615, 1617, 1610, 1611, 1612, 1613, 0, 0,
	0, 0, 0, 1774, 1593, 1261, 0, 0, 0, 1290,
	0, 1257, 235, 0, 1156, 1345, 1602, 1603, 0, 235,
	0, 0, 2331, 0, 0, 2584, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 2460, 0, 577, 0, 0,
	2604, 66, 1615, 1617, 0, 1608, 235, 0, 0, 235,
	1609, 235, 0, 235, 0, 0, 0, 67, 1254, 0,
	235, 235, 0, 1269, 1269, 0, 1433, 0, 2331, 0,
	0, 71, 0, 2628, 757, 0, 2460, 2460, 0, 0,
	1447, 0, 0, 0, 0, 3170, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 3186, 0, 0, 0, 77, 235, 1254, 235,
	0, 0, 1290, 0, 1290, 0, 0, 1254, 0, 1254,
	0, 1254, 0, 0, 0, 0, 0, 0, 0, 1471,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 83, 0, 0, 0, 0, 235, 235, 235, 235,
	1254, 235, 0, 235, 0, 98, 0, 0, 1609, 0,
	84, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591,
	1592, 1594, 1595, 0, 235, 0, 0, 0, 1614, 0,
	0, 0, 235, 0, 66, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2331, 1609, 85,
	67, 0, 0, 0, 0, 0, 0, 0, 1585, 1586,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 3277, 0, 0, 0, 0, 1961, 937, 0,
	1616, 1968, 0, 0, 1242, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 1370, 0, 1987, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 1605,
	1601, 1290, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 0, 2331, 2331, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 98, 0,
	0, 0, 0, 84, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 1968, 0, 0, 2044, 169, 91, 0,
	94, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 0, 0, 0,
	1242, 0, 0, 0, 206, 0, 0, 2071, 235, 2073,
	0, 2075, 752, 2077, 0, 2078, 134, 0, 0, 0,
	1615, 1617, 0, 235, 0, 0, 0, 0, 577, 0,
	0, 0, 0, 577, 0, 0, 577, 0, 0, 577,
	577, 0, 208, 0, 0, 577, 0, 0, 0, 0,
	0, 0, 2099, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1290, 136, 0, 0, 0,
	0, 0, 0, 1608, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 1290, 0, 0, 0, 207, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 2460, 2460, 235, 201, 1269, 0, 0,
	2460, 0, 0, 2949, 0, 2814, 2815, 0, 2832, 2833,
	2834, 2460, 2949, 0, 2460, 2949, 2949, 1733, 1430, 0,
	169, 91, 0, 94, 0, 0, 3449, 0, 235, 235,
	1269, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2814, 2815, 206, 2832, 2833,
	2834, 1269, 235, 1254, 0, 752, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 2460, 3159, 3009, 2460, 1269,
	0, 0, 2460, 2460, 1269, 2829, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	1585, 1586, 0, 3503, 1447, 1447, 0, 0, 0, 235,
	3035, 0, 0, 3037, 2460, 0, 0, 235, 0, 136,
	0, 235, 1616, 1269, 3513, 2829, 0, 0, 0, 1588,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	2584, 207, 0, 1254, 0, 235, 0, 0, 2460, 0,
	577, 200, 0, 0, 0, 0, 0, 2460, 0, 201,
	1587, 0, 0, 0, 0, 0, 235, 235, 0, 2820,
	1607, 0, 0, 0, 0, 0, 0, 0, 1604, 2397,
	0, 1428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 2584, 0, 1242, 2584, 0, 1585,
	1586, 923, 0, 0, 0, 0, 0, 0, 0, 2820,
	0, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0,
	0, 1616, 2835, 0, 3147, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 3128, 0, 0,
	1254, 235, 0, 235, 1610, 1611, 1612, 1613, 2814, 2815,
	0, 2832, 2833, 2834, 1593, 2026, 0, 0, 0, 1587,
	2830, 0, 2835, 0, 0, 0, 0, 0, 0, 3158,
	0, 0, 2039, 1156, 0, 0, 235, 0, 0, 1585,
	1586, 0, 2040, 1242, 0, 1628, 1629, 1630, 0, 0,
	0, 0, 1615, 1617, 0, 2049, 2050, 2051, 0, 0,
	2830, 1616, 0, 3660, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 1634, 1602, 1603, 2829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 3191, 0, 0, 0, 0, 0, 0, 1587,
	0, 0, 0, 0, 3660, 1608, 0, 0, 0, 1607,
	0, 0, 1242, 1593, 0, 0, 0, 1604, 0, 2152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2831, 0, 0, 0, 0, 1242, 0,
	1968, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	0, 1615, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2820, 0, 0, 0, 0, 0, 0, 0,
	2152, 0, 0, 2831, 2606, 0, 0, 1393, 0, 1393,
	0, 1393, 0, 1610, 1611, 1612, 1613, 235, 235, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 1608, 0, 0, 0, 0, 577,
	577, 0, 0, 0, 0, 2835, 0, 0, 1609, 2656,
	0, 0, 1625, 0, 0, 1635, 0, 0, 0, 0,
	0, 1615, 1617, 1242, 0, 2664, 0, 2667, 0, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	2826, 2827, 2828, 2830, 0, 1602, 1603, 2825, 2823, 2824,
	2816, 2817, 2818, 2819, 2821, 2822, 0, 0, 0, 0,
	0, 0, 0, 1623, 2689, 1261, 2691, 1261, 0, 2694,
	0, 0, 0, 0, 1608, 0, 0, 0, 1242, 0,
	2826, 2827, 2828, 624, 0, 0, 0, 2825, 2823, 2824,
	2816, 2817, 2818, 2819, 2821, 2822, 0, 0, 0, 0,
	0, 0, 1393, 0, 0, 0, 0, 1609, 0, 0,
	2722, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 2831, 0, 235, 0,
	0, 0, 0, 0, 0, 235, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2460, 235, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 923, 0, 0,
	0, 923, 2628, 2628, 0, 0, 0, 0, 757, 757,
	2460, 0, 1626, 2584, 2584, 0, 0, 757, 2460, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 1597, 1589, 1590, 1591, 1592, 1594, 1595,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 1298,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2826, 2827, 2828, 0, 0, 0, 0,
	2825, 2823, 2824, 2816, 2817, 2818, 2819, 2821, 2822, 0,
	0, 0, 0, 0, 0, 3468, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 2541, 1627, 1605, 1601,
	0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2814, 2815, 0, 2832, 2833, 2834, 0, 1436,
	0, 1441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1450, 0, 1455, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 1290, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2618, 0, 0, 0, 0, 0, 2460,
	2460, 2460, 2829, 0, 0, 0, 0, 0, 1447, 0,
	0, 1511, 1290, 2940, 1517, 0, 0, 0, 0, 0,
	2460, 0, 2949, 0, 0, 1290, 1290, 235, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	235, 1269, 235, 0, 0, 0, 2980, 2982, 0, 2575,
	0, 0, 2460, 0, 2460, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2460, 0, 0, 0, 3601,
	0, 0, 0, 0, 0, 0, 2820, 0, 235, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 0, 0, 1242, 0, 0, 0, 0, 2836, 0,
	0, 0, 0, 0, 0, 3047, 0, 0, 1290, 3051,
	0, 0, 1585, 1586, 0, 1656, 0, 0, 0, 2835,
	0, 1669, 0, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 0, 0, 0,
	1242, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1261, 1261, 0, 2830, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	937, 0, 1587, 0, 0, 0, 0, 0, 0, 0,
	0, 3106, 1607, 0, 937, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2460, 0, 2949, 0, 0, 3689, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 1727, 1727, 1727, 0, 0, 3131,
	0, 1261, 1585, 1586, 0, 1618, 1619, 1620, 1628, 1629,
	1630, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1616, 1242, 1610, 1611, 1612, 1613,
	0, 1588, 0, 0, 3143, 0, 1593, 0, 1634, 0,
	2831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3689, 0, 0, 0, 0, 1242, 0, 0, 2460,
	0, 0, 1587, 0, 0, 0, 0, 923, 0, 3765,
	0, 0, 1607, 0, 1615, 1617, 0, 0, 0, 0,
	1604, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 1603,
	0, 0, 0, 0, 0, 235, 235, 0, 0, 0,
	0, 0, 0, 0, 1585, 1586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 3191,
	0, 0, 0, 0, 0, 0, 1616, 0, 0, 0,
	0, 0, 0, 1588, 0, 3689, 1610, 1611, 1612, 1613,
	0, 0, 0, 0, 0, 0, 1593, 2826, 2827, 2828,
	0, 0, 0, 0, 2825, 2823, 2824, 2816, 2817, 2818,
	2819, 2821, 2822, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 1625, 0, 0, 1635, 0,
	0, 235, 1604, 1242, 1615, 1617, 1242, 0, 0, 0,
	0, 2814, 2815, 0, 2832, 2833, 2834, 0, 3601, 1631,
	0, 1632, 0, 0, 0, 0, 0, 0, 1602, 1603,
	1614, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	2949, 0, 0, 0, 0, 0, 1623, 0, 2731, 0,
	1609, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 0, 1290, 0, 1290, 1610, 1611,
	1612, 1613, 3024, 0, 0, 0, 1447, 1242, 1593, 0,
	0, 2829, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3904, 0, 1242, 0, 0, 0, 3050, 1290,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 3056,
	0, 0, 0, 0, 0, 0, 1615, 1617, 0, 235,
	2460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	1602, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 983, 0, 2575,
	0, 0, 3191, 3102, 3103, 2820, 0, 0, 3376, 1608,
	1609, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591,
	1592, 1594, 1595, 3388, 1447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	236, 236, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2460, 0, 0, 0, 0, 2835, 0,
	0, 0, 0, 0, 1242, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 3689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3431, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 2830, 0, 0, 0,
	0, 0, 1614, 0, 0, 1290, 0, 2460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 1624, 0, 0, 0, 1599, 1600, 1606,
	1627, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591,
	1592, 1594, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 2127, 0, 2131, 0, 0, 0, 0, 0, 0,
	2145, 0, 0, 0, 0, 0, 0, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 0, 2194, 2628, 2196, 2197, 2198, 2199, 2831,
	0, 0, 0, 0, 0, 0, 2628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 2238, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 0, 0, 0, 2268, 2271,
	2274, 2277, 0, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 3553, 0, 0, 0, 0,
	0, 2323, 0, 2334, 2336, 2341, 0, 0, 2575, 0,
	0, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2826, 2827, 2828, 0,
	0, 0, 0, 2825, 2823, 2824, 2816, 2817, 2818, 2819,
	2821, 2822, 0, 0, 0, 0, 2575, 0, 0, 0,
	0, 0, 0, 3616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 1242, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 3412, 3413, 3414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 3696, 0, 0, 0, 0, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2549, 2550, 0, 2552, 0, 0, 0, 0, 0,
	0, 1610, 1611, 1612, 1613, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 66,
	0, 43, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 137, 0, 1615,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 61,
	0, 0, 0, 1602, 1603, 0, 45, 0, 139, 0,
	0, 0, 0, 3803, 1261, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 77, 1242, 0, 0, 0, 0,
	0, 0, 1608, 0, 0, 236, 1162, 236, 236, 0,
	1162, 236, 236, 0, 1162, 0, 47, 62, 0, 0,
	0, 0, 0, 0, 48, 0, 236, 0, 0, 83,
	0, 0, 2677, 140, 0, 0, 1242, 0, 0, 0,
	0, 46, 0, 98, 0, 0, 1162, 0, 84, 95,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 236, 236, 0, 0, 0, 0, 0, 0, 49,
	0, 0, 1638, 1639, 236, 0, 0, 937, 0, 0,
	0, 0, 0, 0, 0, 1614, 0, 85, 0, 3869,
	0, 0, 1242, 0, 236, 236, 236, 1447, 0, 236,
	735, 1162, 0, 0, 0, 1609, 0, 1162, 0, 0,
	0, 1162, 236, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 1162, 0, 2725, 2726, 0,
	0, 0, 0, 2732, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2746, 2747, 0, 0, 0, 0, 2238, 720,
	3912, 0, 0, 0, 0, 0, 0, 2754, 0, 0,
	721, 0, 0, 0, 1162, 0, 0, 3934, 0, 0,
	0, 0, 0, 2768, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 3946, 0, 0, 0, 0, 0,
	2780, 0, 0, 236, 0, 740, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	236, 0, 0, 0, 723, 0, 1605, 1601, 0, 1598,
	1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0, 63,
	0, 0, 3682, 0, 53, 169, 91, 724, 94, 0,
	0, 0, 51, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 0, 725, 0, 0,
	726, 0, 206, 0, 0, 2341, 2341, 2341, 0, 648,
	56, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 138, 0, 0, 0, 2871, 0,
	0, 0, 0, 739, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 3739, 1447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 200, 0, 0, 923,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 3,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 2966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 236, 236,
	236, 647, 0, 0, 0, 236, 0, 0, 730, 0,
	236, 0, 744, 745, 742, 0, 0, 0, 0, 0,
	737, 0, 1162, 731, 0, 0, 0, 0, 0, 0,
	1585, 1586, 0, 1618, 1619, 1620, 1628, 1629, 1630, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 1621, 1616, 0, 0, 0, 732, 738, 0, 1588,
	0, 0, 959, 100, 0, 733, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 734, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	1587, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	1607, 0, 0, 0, 0, 970, 0, 736, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 234, 234,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 1610, 1611, 1612, 1613, 0, 1162,
	1162, 236, 0, 0, 1593, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 2145, 0, 662, 0, 0,
	0, 3145, 3146, 0, 0, 3149, 0, 0, 0, 3152,
	0, 0, 0, 1625, 0, 0, 1635, 0, 3156, 0,
	0, 0, 1615, 1617, 898, 0, 0, 3163, 0, 0,
	2871, 0, 236, 0, 0, 918, 236, 1631, 0, 1632,
	236, 0, 0, 0, 0, 3175, 1602, 1603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	236, 0, 236, 0, 1623, 3198, 3199, 0, 3200, 3201,
	3202, 1078, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3208, 0, 0, 0,
	3210, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 1622, 0, 0,
	0, 3238, 3239, 0, 0, 0, 1162, 0, 1162, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 3250,
	0, 0, 0, 0, 0, 0, 1162, 1162, 0, 0,
	0, 0, 0, 0, 3259, 0, 0, 1162, 236, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 1614, 0,
	1162, 1162, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 236, 236, 0, 236, 0, 236, 0, 236, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3293, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3302, 3305,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 1599, 1600, 1606, 1627, 1605,
	1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 0, 0, 0, 0, 2234, 0, 0, 0, 2235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 1006, 0, 0,
	3406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3446, 3447, 0, 0, 0,
	0, 3451, 3452, 0, 0, 0, 3455, 3456, 0, 0,
	0, 1162, 0, 3460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3464, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 1162, 0, 0,
	3469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 100, 0, 100, 0, 100, 0, 0,
	0, 0, 0, 234, 0, 234, 234, 0, 0, 234,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 662, 0, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 3305, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 100, 234,
	234, 0, 918, 100, 100, 0, 236, 1162, 0, 0,
	0, 0, 234, 0, 0, 100, 0, 100, 0, 0,
	0, 1162, 0, 0, 0, 0, 236, 100, 0, 100,
	0, 0, 234, 234, 234, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 234, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 3305, 236,
	0, 0, 236, 0, 236, 0, 236, 0, 0, 0,
	0, 0, 0, 236, 236, 0, 0, 0, 1162, 1162,
	0, 1162, 0, 0, 0, 0, 3655, 3656, 3657, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 2145,
	0, 234, 3666, 3667, 0, 0, 0, 0, 0, 0,
	236, 0, 236, 0, 0, 0, 0, 0, 234, 0,
	3675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	236, 236, 236, 1650, 236, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 3305, 0, 0, 0, 0,
	1655, 0, 0, 3714, 1661, 0, 0, 0, 0, 0,
	0, 0, 0, 3721, 0, 0, 923, 236, 0, 0,
	0, 0, 0, 0, 3728, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3305, 3305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 1750, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3825, 0, 0, 3828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 0, 1091, 0, 0,
	0, 234, 0, 0, 3305, 0, 1095, 0, 0, 0,
	1095, 0, 0, 0, 1095, 0, 234, 1749, 234, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 0, 0,
	0, 0, 3305, 0, 0, 3305, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 2145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 1095, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 923, 0, 0, 0, 1095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3964,
	3964, 3964, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 236, 236, 0, 236, 0, 0, 0, 0, 662,
	0, 236, 3985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 3964,
	234, 1162, 0, 0, 234, 1162, 0, 0, 234, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 1162, 236, 0, 234, 0, 234, 0,
	234, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3305, 0, 3305,
	811, 918, 852, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 236,
	236, 0, 0, 0, 0, 818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1162, 1162,
	0, 831, 816, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 3964, 4091, 0, 0, 0, 1162,
	0, 0, 4095, 0, 0, 0, 0, 817, 0, 0,
	0, 0, 820, 0, 0, 0, 234, 860, 0, 234,
	0, 0, 0, 0, 0, 828, 829, 0, 0, 0,
	0, 845, 1162, 0, 236, 1162, 236, 0, 0, 234,
	0, 0, 0, 0, 0, 853, 822, 0, 0, 662,
	234, 0, 234, 0, 234, 0, 234, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 823, 0, 0, 0, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 1095, 0, 1095,
	898, 0, 0, 898, 898, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 0, 1803,
	0, 0, 0, 1162, 0, 815, 0, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 826, 0, 0, 0, 2212, 0,
	240, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	833, 832, 0, 0, 918, 0, 0, 0, 827, 0,
	0, 0, 842, 1655, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 1078,
	0, 821, 0, 1162, 859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 819,
	0, 0, 0, 849, 850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	1095, 0, 1091, 0, 0, 0, 100, 0, 0, 1095,
	0, 0, 847, 0, 0, 0, 0, 0, 1091, 858,
	843, 0, 836, 834, 0, 839, 0, 0, 0, 0,
	0, 840, 234, 0, 813, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 841, 0, 236, 0, 0, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 0,
	0, 0, 0, 0, 1162, 0, 844, 0, 0, 0,
	679, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 100, 0, 0, 846, 0, 0,
	0, 236, 0, 0, 680, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 1095, 0, 1095, 681,
	1095, 699, 0, 0, 0, 0, 234, 1162, 1162, 1162,
	0, 0, 0, 0, 0, 100, 1095, 1095, 100, 234,
	100, 0, 0, 1162, 0, 682, 0, 1095, 683, 236,
	1162, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	1095, 1095, 1095, 0, 0, 706, 0, 0, 0, 0,
	0, 684, 1162, 0, 662, 0, 0, 0, 0, 100,
	0, 0, 100, 0, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 685, 0, 0,
	234, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	687, 0, 0, 0, 0, 708, 0, 234, 0, 648,
	234, 0, 234, 0, 234, 0, 0, 0, 0, 0,
	0, 234, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1803, 1095, 100, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 1162, 0, 0, 0, 234, 0,
	234, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 1162, 690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 234, 234,
	234, 0, 234, 0, 234, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	0, 1162, 1095, 236, 0, 236, 0, 691, 1162, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 236, 0,
	0, 0, 0, 234, 0, 0, 2212, 0, 0, 975,
	692, 1162, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 1162, 236, 0,
	0, 647, 1162, 0, 1095, 0, 0, 0, 0, 0,
	0, 1095, 678, 0, 700, 0, 0, 0, 0, 0,
	1095, 0, 0, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 0, 698, 0, 1162, 0, 0, 0, 0, 1159,
	0, 0, 0, 1159, 0, 0, 694, 1279, 0, 711,
	0, 710, 0, 0, 0, 695, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 696, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 712, 1279,
	709, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1279, 0, 1162, 0, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	1162, 0, 1095, 0, 0, 0, 0, 0, 0, 236,
	0, 1078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	1279, 1803, 0, 0, 1279, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 0,
	0, 1162, 0, 0, 1091, 0, 0, 1095, 0, 1162,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 1279, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	100, 0, 0, 100, 0, 0, 0, 0, 236, 236,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 100, 0, 0, 100, 1095, 1095,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 234,
	234, 0, 234, 1095, 0, 0, 0, 0, 0, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1078, 0, 0, 918, 0, 0, 0,
	662, 0, 0, 0, 236, 0, 0, 1162, 234, 0,
	0, 0, 234, 0, 0, 0, 0, 1162, 1162, 0,
	0, 0, 0, 0, 0, 100, 100, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 1586,
	0, 1618, 1619, 1620, 1628, 1629, 1630, 0, 0, 0,
	0, 0, 234, 0, 234, 0, 0, 1159, 0, 1621,
	1616, 0, 0, 0, 0, 0, 0, 1588, 654, 0,
	0, 0, 0, 654, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 1159, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 1160, 0, 0, 0, 1280, 0, 0, 0,
	0, 1095, 1095, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 1610, 1611, 1612, 1613, 1095, 0, 0, 0,
	0, 0, 1593, 0, 0, 1078, 1078, 0, 1280, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 0, 1095,
	0, 1625, 1280, 0, 1635, 0, 0, 0, 0, 0,
	1615, 1617, 0, 1803, 0, 0, 0, 1095, 1091, 1091,
	0, 0, 1279, 1279, 0, 1631, 0, 1632, 0, 0,
	0, 0, 1159, 0, 1602, 1603, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 1280,
	0, 0, 1623, 1280, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 1608, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 1280, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 1095, 0, 0, 0, 1095, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 1279,
	0, 1279, 0, 1279, 1095, 0, 1609, 0, 0, 0,
	0, 0, 234, 0, 1078, 0, 0, 0, 1095, 1279,
	1279, 234, 0, 0, 0, 0, 0, 0, 0, 234,
	1279, 1626, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 1279, 1279, 1279, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 1091, 1095, 1095,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1095, 0, 0, 1095, 0, 0, 0, 1624,
	0, 0, 0, 1599, 1600, 1606, 1627, 1605, 1601, 0,
	1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 3474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 1078, 1095, 0, 0, 0,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 1803, 1803, 0, 1159, 0, 0, 0, 1749,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	1095, 1095, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 234, 0, 234, 1159, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 1095, 0, 100, 0, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 1280, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 234, 0, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1095, 1095, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	1280, 0, 1280, 2212, 0, 0, 0, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 1280, 1280,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 1280,
	0, 1279, 1279, 0, 1279, 0, 0, 0, 0, 0,
	0, 0, 1280, 1280, 1280, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 1095, 0, 1095, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 1095, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 1095, 0, 0, 0, 0, 100, 0, 0,
	100, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 1095, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 1160, 1585, 1586, 0, 1618, 1619, 1620,
	1628, 1629, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 1621, 1616, 0, 0, 1160,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 1095, 0, 1095, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	1095, 0, 1604, 0, 0, 0, 0, 1159, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 1159, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 1095,
	1095, 0, 0, 0, 0, 0, 0, 0, 1610, 1611,
	1612, 1613, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 1095, 1160,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	1635, 0, 0, 1280, 0, 0, 1615, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 1632, 0, 0, 0, 1159, 0, 0,
	1602, 1603, 0, 0, 0, 0, 1279, 0, 1803, 1585,
	1586, 1279, 1618, 1619, 1620, 1628, 1629, 1630, 1623, 0,
	1279, 0, 0, 0, 1279, 0, 0, 0, 1159, 1608,
	1621, 1616, 0, 0, 0, 654, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 1634, 1279, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 1279, 0, 0,
	1280, 1280, 0, 1280, 0, 0, 0, 0, 0, 1587,
	0, 1622, 0, 0, 0, 1280, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 1279, 1279, 0, 0, 0, 0, 1095, 1095, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 1611, 1612, 1613, 0, 0, 0,
	0, 0, 0, 1593, 0, 1159, 0, 1626, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 1635, 0, 0, 0, 0,
	0, 1615, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 1632, 0,
	0, 0, 0, 0, 0, 1602, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1159,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1624, 1159, 0, 0, 1599,
	1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0, 1633,
	0, 0, 0, 3161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1159, 0, 0, 0,
	0, 0, 1626, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 1585, 1586, 0, 1618, 1619,
	1620, 1628, 1629, 1630, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 1621, 1616, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	1624, 1634, 0, 0, 1599, 1600, 1606, 1627, 1605, 1601,
	0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595,
	0, 0, 0, 0, 0, 1587, 0, 1279, 2792, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1279, 1279, 1279, 1280, 0, 0, 0, 1160, 0, 1610,
	1611, 1612, 1613, 0, 0, 0, 1279, 0, 0, 1593,
	0, 0, 0, 1159, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 0, 1625, 0,
	0, 1635, 0, 0, 0, 0, 0, 1615, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 1632, 0, 0, 0, 0, 0,
	0, 1602, 1603, 0, 0, 0, 0, 0, 0, 0,
	1280, 1280, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 1160, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1159, 1160, 0, 0, 0, 0,
	0, 1159, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 1159, 0, 0,
	1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597,
	1589, 1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 2791, 1160, 0, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 1586, 0, 1618, 1619, 1620,
	1628, 1629, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 1616, 0, 1159, 0,
	1279, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 1159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 1586, 0, 1618, 1619, 1620,
	1628, 1629, 1630, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 1621, 1616, 0, 0, 0,
	0, 0, 1604, 1588, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 1159, 0, 0, 0, 0, 0,
	0, 0, 1279, 1279, 0, 0, 1280, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 1159, 0,
	0, 1279, 0, 0, 0, 0, 1280, 0, 1610, 1611,
	1612, 1613, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1280, 1280, 0, 0, 0, 0, 0, 1625, 0, 0,
	1635, 0, 0, 0, 0, 1280, 1615, 1617, 1610, 1611,
	1612, 1613, 1160, 0, 0, 0, 0, 0, 1593, 0,
	0, 1631, 0, 1632, 0, 0, 0, 0, 0, 0,
	1602, 1603, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 1623, 0,
	1635, 0, 0, 0, 0, 0, 1615, 1617, 0, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 1632, 0, 0, 0, 0, 0, 0,
	1602, 1603, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	1279, 1622, 0, 0, 0, 0, 0, 0, 0, 1608,
	1279, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 1614, 0, 1160, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 1160, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 1280, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 1280, 1624, 0, 0, 0, 1599,
	1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 2788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 1599,
	1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 0, 1160, 0, 0, 0,
	0, 0, 0, 2787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 1280, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1280, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	1163, 250, 251, 1164, 1165, 1166, 1280, 1167, 520, 1168,
	1169, 1170, 1171, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 1172, 261, 262,
	263, 264, 265, 1173, 1174, 0, 266, 525, 526, 527,
	1175, 267, 268, 528, 1176, 1243, 1177, 269, 270, 271,
	272, 273, 274, 275, 0, 1178, 277, 278, 279, 276,
	1179, 280, 0, 281, 282, 283, 1180, 284, 1036, 285,
	286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287, 288,
	289, 290, 0, 291, 529, 530, 1188, 295, 292, 293,
	1189, 296, 294, 1190, 297, 298, 299, 1191, 1192, 300,
	301, 302, 1193, 303, 304, 1194, 305, 306, 307, 1195,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 1196, 241, 1197, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	1198, 325, 1199, 1200, 1037, 326, 327, 535, 536, 328,
	329, 1201, 330, 537, 1202, 538, 331, 1203, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 1039, 337, 338,
	1204, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 1205, 1038, 345, 542, 543, 1206, 544, 1207,
	347, 1040, 545, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 1208, 358,
	360, 359, 1209, 361, 546, 1043, 362, 363, 1044, 1210,
	364, 365, 366, 1211, 1212, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 1213, 243, 1047, 390, 1214, 547, 391, 548,
	393, 394, 1215, 0, 395, 0, 1216, 1217, 397, 398,
	399, 1218, 1219, 400, 401, 549, 1048, 402, 1049, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 1220, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 1221, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 1222, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 1223, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 1224, 461, 462, 460, 463, 464,
	465, 1225, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 1226, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 1227, 483, 484,
	0, 482, 1228, 485, 486, 487, 488, 489, 490, 315,
	491, 1229, 492, 560, 561, 562, 563, 1230, 499, 1231,
	493, 494, 564, 495, 565, 1232, 496, 497, 498, 0,
	500, 501, 1233, 1234, 502, 503, 504, 506, 507, 505,
	508, 1235, 509, 1236, 0, 510, 511, 512, 566, 567,
	568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 0, 0, 0, 0, 0, 2375, 0, 0, 0,
	0, 0, 0, 0, 2376, 244, 245, 246, 247, 248,
	249, 1163, 250, 251, 1164, 1165, 1166, 0, 1167, 520,
	1168, 1169, 1170, 1171, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 1172, 261,
	262, 263, 264, 265, 1173, 1174, 0, 266, 525, 526,
	527, 1175, 267, 268, 528, 1176, 1243, 1177, 269, 270,
	271, 272, 273, 274, 275, 0, 1178, 277, 278, 279,
	276, 1179, 280, 0, 281, 282, 283, 1180, 284, 1036,
	285, 286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287,
	288, 289, 290, 0, 291, 529, 530, 1188, 295, 292,
	293, 1189, 296, 294, 1190, 297, 298, 299, 1191, 1192,
	300, 301, 302, 1193, 303, 304, 1194, 305, 306, 307,
	1195, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 532, 533, 1196, 241, 1197, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 1198, 325, 1199, 1200, 1037, 326, 327, 535, 536,
	328, 329, 1201, 330, 537, 1202, 538, 331, 1203, 332,
	333, 334, 335, 336, 539, 540, 541, 392, 1039, 337,
	338, 1204, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1205, 1038, 345, 542, 543, 1206, 544,
	1207, 347, 1040, 545, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 1208,
	358, 360, 359, 1209, 361, 546, 1043, 362, 363, 1044,
	1210, 364, 365, 366, 1211, 1212, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 1213, 243, 1047, 390, 1214, 547, 391,
	548, 393, 394, 1215, 0, 395, 0, 1216, 1217, 397,
	398, 399, 1218, 1219, 400, 401, 549, 1048, 402, 1049,
	550, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 1220, 413, 414, 551, 552, 553, 415, 554,
	416, 417, 1221, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 1222, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 1223, 438, 439, 440, 1050, 441, 442, 443,
	444, 556, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 1224, 461, 462, 460, 463,
	464, 465, 1225, 466, 450, 451, 467, 468, 1051, 469,
	470, 557, 0, 471, 1226, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 559, 1227, 483,
	484, 0, 482, 1228, 485, 486, 487, 488, 489, 490,
	315, 491, 1229, 492, 560, 561, 562, 563, 1230, 499,
	1231, 493, 494, 564, 495, 565, 1232, 496, 497, 498,
	0, 500, 501, 1233, 1234, 502, 503, 504, 506, 507,
	505, 508, 1235, 509, 1236, 0, 510, 511, 512, 566,
	567, 568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241,
	515, 516, 570, 517, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 0, 3169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3171, 244, 245, 246, 247, 248, 249,
	1163, 250, 251, 1164, 1165, 1166, 0, 1167, 520, 1168,
	1169, 1170, 1171, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 1172, 261, 262,
	263, 264, 265, 1173, 1174, 0, 266, 525, 526, 527,
	1175, 267, 268, 528, 1176, 1243, 1177, 269, 270, 271,
	272, 273, 274, 275, 0, 1178, 277, 278, 279, 276,
	1179, 280, 0, 281, 282, 283, 1180, 284, 1036, 285,
	286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287, 288,
	289, 290, 0, 291, 529, 530, 1188, 295, 292, 293,
	1189, 296, 294, 1190, 297, 298, 299, 1191, 1192, 300,
	301, 302, 1193, 303, 304, 1194, 305, 306, 307, 1195,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 1196, 241, 1197, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	1198, 325, 1199, 1200, 1037, 326, 327, 535, 536, 328,
	329, 1201, 330, 537, 1202, 538, 331, 1203, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 1039, 337, 338,
	1204, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 1205, 1038, 345, 542, 543, 1206, 544, 1207,
	347, 1040, 545, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 1208, 358,
	360, 359, 1209, 361, 546, 1043, 362, 363, 1044, 1210,
	364, 365, 366, 1211, 1212, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 1213, 243, 1047, 390, 1214, 547, 391, 548,
	393, 394, 1215, 0, 395, 0, 1216, 1217, 397, 398,
	399, 1218, 1219, 400, 401, 549, 1048, 402, 1049, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 1220, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 1221, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 1222, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 1223, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 1224, 461, 462, 460, 463, 464,
	465, 1225, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 1226, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 1227, 483, 484,
	0, 482, 1228, 485, 486, 487, 488, 489, 490, 315,
	491, 1229, 492, 560, 561, 562, 563, 1230, 499, 1231,
	493, 494, 564, 495, 565, 1232, 496, 497, 498, 0,
	500, 501, 1233, 1234, 502, 503, 504, 506, 507, 505,
	508, 1235, 509, 1236, 0, 510, 511, 512, 566, 567,
	568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3502, 244, 245, 246,
	247, 248, 249, 1163, 250, 251, 1164, 1165, 1166, 0,
	1167, 520, 1168, 1169, 1170, 1171, 252, 253, 255, 254,
	256, 257, 258, 521, 522, 0, 259, 523, 260, 524,
	1172, 261, 262, 263, 264, 265, 1173, 1174, 0, 266,
	525, 526, 527, 1175, 267, 268, 528, 1176, 1243, 1177,
	269, 270, 271, 272, 273, 274, 275, 0, 1178, 277,
	278, 279, 276, 1179, 280, 0, 281, 282, 283, 1180,
	284, 1036, 285, 286, 1181, 1182, 1184, 1183, 1185, 1186,
	1187, 287, 288, 289, 290, 0, 291, 529, 530, 1188,
	295, 292, 293, 1189, 296, 294, 1190, 297, 298, 299,
	1191, 1192, 300, 301, 302, 1193, 303, 304, 1194, 305,
	306, 307, 1195, 308, 309, 531, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 532, 533, 1196, 241,
	1197, 0, 0, 0, 0, 321, 322, 323, 534, 0,
	0, 0, 324, 1198, 325, 1199, 1200, 1037, 326, 327,
	535, 536, 328, 329, 1201, 330, 537, 1202, 538, 331,
	1203, 332, 333, 334, 335, 336, 539, 540, 541, 392,
	1039, 337, 338, 1204, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 1205, 1038, 345, 542, 543,
	1206, 544, 1207, 347, 1040, 545, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 1208, 358, 360, 359, 1209, 361, 546, 1043, 362,
	363, 1044, 1210, 364, 365, 366, 1211, 1212, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 1213, 243, 1047, 390, 1214,
	547, 391, 548, 393, 394, 1215, 0, 395, 0, 1216,
	1217, 397, 398, 399, 1218, 1219, 400, 401, 549, 1048,
	402, 1049, 550, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 1220, 413, 414, 551, 552, 553,
	415, 554, 416, 417, 1221, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 555, 427, 426, 428, 1222, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 1223, 438, 439, 440, 1050, 441,
	442, 443, 444, 556, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 1224, 461, 462,
	460, 463, 464, 465, 1225, 466, 450, 451, 467, 468,
	1051, 469, 470, 557, 0, 471, 1226, 472, 473, 474,
	475, 452, 476, 481, 558, 477, 478, 479, 480, 559,
	1227, 483, 484, 0, 482, 1228, 485, 486, 487, 488,
	489, 490, 315, 491, 1229, 492, 560, 561, 562, 563,
	1230, 499, 1231, 493, 494, 564, 495, 565, 1232, 496,
	497, 498, 0, 500, 501, 1233, 1234, 502, 503, 504,
	506, 507, 505, 508, 1235, 509, 1236, 0, 510, 511,
	512, 566, 567, 568, 1237, 514, 513, 569, 1238, 1239,
	1240, 1241, 515, 516, 570, 517, 518, 519, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3661, 244, 245, 246, 247, 248,
	249, 1163, 250, 251, 1164, 1165, 1166, 0, 1167, 520,
	1168, 1169, 1170, 1171, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 1172, 261,
	262, 263, 264, 265, 1173, 1174, 0, 266, 525, 526,
	527, 1175, 267, 268, 528, 1176, 1243, 1177, 269, 270,
	271, 272, 273, 274, 275, 0, 1178, 277, 278, 279,
	276, 1179, 280, 0, 281, 282, 283, 1180, 284, 1036,
	285, 286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287,
	288, 289, 290, 0, 291, 529, 530, 1188, 295, 292,
	293, 1189, 296, 294, 1190, 297, 298, 299, 1191, 1192,
	300, 301, 302, 1193, 303, 304, 1194, 305, 306, 307,
	1195, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 532, 533, 1196, 241, 1197, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 1198, 325, 1199, 1200, 1037, 326, 327, 535, 536,
	328, 329, 1201, 330, 537, 1202, 538, 331, 1203, 332,
	333, 334, 335, 336, 539, 540, 541, 392, 1039, 337,
	338, 1204, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1205, 1038, 345, 542, 543, 1206, 544,
	1207, 347, 1040, 545, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 1208,
	358, 360, 359, 1209, 361, 546, 1043, 362, 363, 1044,
	1210, 364, 365, 366, 1211, 1212, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 1213, 243, 1047, 390, 1214, 547, 391,
	548, 393, 394, 1215, 0, 395, 0, 1216, 1217, 397,
	398, 399, 1218, 1219, 400, 401, 549, 1048, 402, 1049,
	550, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 1220, 413, 414, 551, 552, 553, 415, 554,
	416, 417, 1221, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 1222, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 1223, 438, 439, 440, 1050, 441, 442, 443,
	444, 556, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 1224, 461, 462, 460, 463,
	464, 465, 1225, 466, 450, 451, 467, 468, 1051, 469,
	470, 557, 0, 471, 1226, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 559, 1227, 483,
	484, 0, 482, 1228, 485, 486, 487, 488, 489, 490,
	315, 491, 1229, 492, 560, 561, 562, 563, 1230, 499,
	1231, 493, 494, 564, 495, 565, 1232, 496, 497, 498,
	0, 500, 501, 1233, 1234, 502, 503, 504, 506, 507,
	505, 508, 1235, 509, 1236, 0, 510, 511, 512, 566,
	567, 568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241,
	515, 516, 570, 517, 518, 519, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3561, 244, 245, 246, 247, 248, 249, 1163,
	250, 251, 1164, 1165, 1166, 0, 1167, 520, 1168, 1169,
	1170, 1171, 252, 253, 255, 254, 256, 257, 258, 521,
	522, 0, 259, 523, 260, 524, 1172, 261, 262, 263,
	264, 265, 1173, 1174, 0, 266, 525, 526, 527, 1175,
	267, 268, 528, 1176, 1243, 1177, 269, 270, 271, 272,
	273, 274, 275, 0, 1178, 277, 278, 279, 276, 1179,
	280, 0, 281, 282, 283, 1180, 284, 1036, 285, 286,
	1181, 1182, 1184, 1183, 1185, 1186, 1187, 287, 288, 289,
	290, 0, 291, 529, 530, 1188, 295, 292, 293, 1189,
	296, 294, 1190, 297, 298, 299, 1191, 1192, 300, 301,
	302, 1193, 303, 304, 1194, 305, 306, 307, 1195, 308,
	309, 531, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 532, 533, 1196, 241, 1197, 0, 0, 0,
	0, 321, 322, 323, 534, 0, 0, 0, 324, 1198,
	325, 1199, 1200, 1037, 326, 327, 535, 536, 328, 329,
	1201, 330, 537, 1202, 538, 331, 1203, 332, 333, 334,
	335, 336, 539, 540, 541, 392, 1039, 337, 338, 1204,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 1205, 1038, 345, 542, 543, 1206, 544, 1207, 347,
	1040, 545, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 1208, 358, 360,
	359, 1209, 361, 546, 1043, 362, 363, 1044, 1210, 364,
	365, 366, 1211, 1212, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 1213, 243, 1047, 390, 1214, 547, 391, 548, 393,
	394, 1215, 0, 395, 0, 1216, 1217, 397, 398, 399,
	1218, 1219, 400, 401, 549, 1048, 402, 1049, 550, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	1220, 413, 414, 551, 552, 553, 415, 554, 416, 417,
	1221, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	555, 427, 426, 428, 1222, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	1223, 438, 439, 440, 1050, 441, 442, 443, 444, 556,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 1224, 461, 462, 460, 463, 464, 465,
	1225, 466, 450, 451, 467, 468, 1051, 469, 470, 557,
	0, 471, 1226, 472, 473, 474, 475, 452, 476, 481,
	558, 477, 478, 479, 480, 559, 1227, 483, 484, 0,
	482, 1228, 485, 486, 487, 488, 489, 490, 315, 491,
	1229, 492, 560, 561, 562, 563, 1230, 499, 1231, 493,
	494, 564, 495, 565, 1232, 496, 497, 498, 0, 500,
	501, 1233, 1234, 502, 503, 504, 506, 507, 505, 508,
	1235, 509, 1236, 0, 510, 511, 512, 566, 567, 568,
	1237, 514, 513, 569, 1238, 1239, 1240, 1241, 515, 516,
	570, 517, 518, 519, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3432, 244, 245, 246, 247, 248, 249, 1163, 250, 251,
	1164, 1165, 1166, 0, 1167, 520, 1168, 1169, 1170, 1171,
	252, 253, 255, 254, 256, 257, 258, 521, 522, 0,
	259, 523, 260, 524, 1172, 261, 262, 263, 264, 265,
	1173, 1174, 0, 266, 525, 526, 527, 1175, 267, 268,
	528, 1176, 1243, 1177, 269, 270, 271, 272, 273, 274,
	275, 0, 1178, 277, 278, 279, 276, 1179, 280, 0,
	281, 282, 283, 1180, 284, 1036, 285, 286, 1181, 1182,
	1184, 1183, 1185, 1186, 1187, 287, 288, 289, 290, 0,
	291, 529, 530, 1188, 295, 292, 293, 1189, 296, 294,
	1190, 297, 298, 299, 1191, 1192, 300, 301, 302, 1193,
	303, 304, 1194, 305, 306, 307, 1195, 308, 309, 531,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	532, 533, 1196, 241, 1197, 0, 0, 0, 0, 321,
	322, 323, 534, 0, 0, 0, 324, 1198, 325, 1199,
	1200, 1037, 326, 327, 535, 536, 328, 329, 1201, 330,
	537, 1202, 538, 331, 1203, 332, 333, 334, 335, 336,
	539, 540, 541, 392, 1039, 337, 338, 1204, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 1205,
	1038, 345, 542, 543, 1206, 544, 1207, 347, 1040, 545,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 1208, 358, 360, 359, 1209,
	361, 546, 1043, 362, 363, 1044, 1210, 364, 365, 366,
	1211, 1212, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 1213,
	243, 1047, 390, 1214, 547, 391, 548, 393, 394, 1215,
	0, 395, 0, 1216, 1217, 397, 398, 399, 1218, 1219,
	400, 401, 549, 1048, 402, 1049, 550, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 1220, 413,
	414, 551, 552, 553, 415, 554, 416, 417, 1221, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 555, 427,
	426, 428, 1222, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 1223, 438,
	439, 440, 1050, 441, 442, 443, 444, 556, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 1224, 461, 462, 460, 463, 464, 465, 1225, 466,
	450, 451, 467, 468, 1051, 469, 470, 557, 0, 471,
	1226, 472, 473, 474, 475, 452, 476, 481, 558, 477,
	478, 479, 480, 559, 1227, 483, 484, 0, 482, 1228,
	485, 486, 487, 488, 489, 490, 315, 491, 1229, 492,
	560, 561, 562, 563, 1230, 499, 1231, 493, 494, 564,
	495, 565, 1232, 496, 497, 498, 0, 500, 501, 1233,
	1234, 502, 503, 504, 506, 507, 505, 508, 1235, 509,
	1236, 0, 510, 511, 512, 566, 567, 568, 1237, 514,
	513, 569, 1238, 1239, 1240, 1241, 515, 516, 570, 517,
	518, 519, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3187, 244,
	245, 246, 247, 248, 249, 1163, 250, 251, 1164, 1165,
	1166, 0, 1167, 520, 1168, 1169, 1170, 1171, 252, 253,
	255, 254, 256, 257, 258, 521, 522, 0, 259, 523,
	260, 524, 1172, 261, 262, 263, 264, 265, 1173, 1174,
	0, 266, 525, 526, 527, 1175, 267, 268, 528, 1176,
	1243, 1177, 269, 270, 271, 272, 273, 274, 275, 0,
	1178, 277, 278, 279, 276, 1179, 280, 0, 281, 282,
	283, 1180, 284, 1036, 285, 286, 1181, 1182, 1184, 1183,
	1185, 1186, 1187, 287, 288, 289, 290, 0, 291, 529,
	530, 1188, 295, 292, 293, 1189, 296, 294, 1190, 297,
	298, 299, 1191, 1192, 300, 301, 302, 1193, 303, 304,
	1194, 305, 306, 307, 1195, 308, 309, 531, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 532, 533,
	1196, 241, 1197, 0, 0, 0, 0, 321, 322, 323,
	534, 0, 0, 0, 324, 1198, 325, 1199, 1200, 1037,
	326, 327, 535, 536, 328, 329, 1201, 330, 537, 1202,
	538, 331, 1203, 332, 333, 334, 335, 336, 539, 540,
	541, 392, 1039, 337, 338, 1204, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 1205, 1038, 345,
	542, 543, 1206, 544, 1207, 347, 1040, 545, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 1208, 358, 360, 359, 1209, 361, 546,
	1043, 362, 363, 1044, 1210, 364, 365, 366, 1211, 1212,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 1213, 243, 1047,
	390, 1214, 547, 391, 548, 393, 394, 1215, 0, 395,
	0, 1216, 1217, 397, 398, 399, 1218, 1219, 400, 401,
	549, 1048, 402, 1049, 550, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 1220, 413, 414, 551,
	552, 553, 415, 554, 416, 417, 1221, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 555, 427, 426, 428,
	1222, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 1223, 438, 439, 440,
	1050, 441, 442, 443, 444, 556, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 1224,
	461, 462, 460, 463, 464, 465, 1225, 466, 450, 451,
	467, 468, 1051, 469, 470, 557, 0, 471, 1226, 472,
	473, 474, 475, 452, 476, 481, 558, 477, 478, 479,
	480, 559, 1227, 483, 484, 0, 482, 1228, 485, 486,
	487, 488, 489, 490, 315, 491, 1229, 492, 560, 561,
	562, 563, 1230, 499, 1231, 493, 494, 564, 495, 565,
	1232, 496, 497, 498, 0, 500, 501, 1233, 1234, 502,
	503, 504, 506, 507, 505, 508, 1235, 509, 1236, 0,
	510, 511, 512, 566, 567, 568, 1237, 514, 513, 569,
	1238, 1239, 1240, 1241, 515, 516, 570, 517, 518, 519,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3033, 244, 245, 246,
	247, 248, 249, 1163, 250, 251, 1164, 1165, 1166, 0,
	1167, 520, 1168, 1169, 1170, 1171, 252, 253, 255, 254,
	256, 257, 258, 521, 522, 0, 259, 523, 260, 524,
	1172, 261, 262, 263, 264, 265, 1173, 1174, 0, 266,
	525, 526, 527, 1175, 267, 268, 528, 1176, 1243, 1177,
	269, 270, 271, 272, 273, 274, 275, 0, 1178, 277,
	278, 279, 276, 1179, 280, 0, 281, 282, 283, 1180,
	284, 1036, 285, 286, 1181, 1182, 1184, 1183, 1185, 1186,
	1187, 287, 288, 289, 290, 0, 291, 529, 530, 1188,
	295, 292, 293, 1189, 296, 294, 1190, 297, 298, 299,
	1191, 1192, 300, 301, 302, 1193, 303, 304, 1194, 305,
	306, 307, 1195, 308, 309, 531, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 532, 533, 1196, 241,
	1197, 0, 0, 0, 0, 321, 322, 323, 534, 0,
	0, 0, 324, 1198, 325, 1199, 1200, 1037, 326, 327,
	535, 536, 328, 329, 1201, 330, 537, 1202, 538, 331,
	1203, 332, 333, 334, 335, 336, 539, 540, 541, 392,
	1039, 337, 338, 1204, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 1205, 1038, 345, 542, 543,
	1206, 544, 1207, 347, 1040, 545, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 1208, 358, 360, 359, 1209, 361, 546, 1043, 362,
	363, 1044, 1210, 364, 365, 366, 1211, 1212, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 1213, 243, 1047, 390, 1214,
	547, 391, 548, 393, 394, 1215, 0, 395, 0, 1216,
	1217, 397, 398, 399, 1218, 1219, 400, 401, 549, 1048,
	402, 1049, 550, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 1220, 413, 414, 551, 552, 553,
	415, 554, 416, 417, 1221, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 555, 427, 426, 428, 1222, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 1223, 438, 439, 440, 1050, 441,
	442, 443, 444, 556, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 1224, 461, 462,
	460, 463, 464, 465, 1225, 466, 450, 451, 467, 468,
	1051, 469, 470, 557, 0, 471, 1226, 472, 473, 474,
	475, 452, 476, 481, 558, 477, 478, 479, 480, 559,
	1227, 483, 484, 0, 482, 1228, 485, 486, 487, 488,
	489, 490, 315, 491, 1229, 492, 560, 561, 562, 563,
	1230, 499, 1231, 493, 494, 564, 495, 565, 1232, 496,
	497, 498, 0, 500, 501, 1233, 1234, 502, 503, 504,
	506, 507, 505, 508, 1235, 509, 1236, 0, 510, 511,
	512, 566, 567, 568, 1237, 514, 513, 569, 1238, 1239,
	1240, 1241, 515, 516, 570, 517, 518, 519, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2258, 244, 245, 246, 247, 248,
	249, 1163, 250, 251, 1164, 1165, 1166, 0, 1167, 520,
	1168, 1169, 1170, 1171, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 1172, 261,
	262, 263, 264, 265, 1173, 1174, 0, 266, 525, 526,
	527, 1175, 267, 268, 528, 1176, 1243, 1177, 269, 270,
	271, 272, 273, 274, 275, 0, 1178, 277, 278, 279,
	276, 1179, 280, 0, 281, 282, 283, 1180, 284, 1036,
	285, 286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287,
	288, 289, 290, 0, 291, 529, 530, 1188, 295, 292,
	293, 1189, 296, 294, 1190, 297, 298, 299, 1191, 1192,
	300, 301, 302, 1193, 303, 304, 1194, 305, 306, 307,
	1195, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 532, 533, 1196, 241, 1197, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 1198, 325, 1199, 1200, 1037, 326, 327, 535, 536,
	328, 329, 1201, 330, 537, 1202, 538, 331, 1203, 332,
	333, 334, 335, 336, 539, 540, 541, 392, 1039, 337,
	338, 1204, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1205, 1038, 345, 542, 543, 1206, 544,
	1207, 347, 1040, 545, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 1208,
	358, 360, 359, 1209, 361, 546, 1043, 362, 363, 1044,
	1210, 364, 365, 366, 1211, 1212, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 1213, 243, 1047, 390, 1214, 547, 391,
	548, 393, 394, 1215, 0, 395, 0, 1216, 1217, 397,
	398, 399, 1218, 1219, 400, 401, 549, 1048, 402, 1049,
	550, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 1220, 413, 414, 551, 552, 553, 415, 554,
	416, 417, 1221, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 1222, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 1223, 438, 439, 440, 1050, 441, 442, 443,
	444, 556, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 1224, 461, 462, 460, 463,
	464, 465, 1225, 466, 450, 451, 467, 468, 1051, 469,
	470, 557, 0, 471, 1226, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 559, 1227, 483,
	484, 0, 482, 1228, 485, 486, 487, 488, 489, 490,
	315, 491, 1229, 492, 560, 561, 562, 563, 1230, 499,
	1231, 493, 494, 564, 495, 565, 1232, 496, 497, 498,
	0, 500, 501, 1233, 1234, 502, 503, 504, 506, 507,
	505, 508, 1235, 509, 1236, 0, 510, 511, 512, 566,
	567, 568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241,
	515, 516, 570, 517, 518, 519, 1255, 0, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 0, 0, 244, 245, 246, 247, 248,
	249, 1163, 250, 251, 1164, 1165, 1166, 0, 1167, 520,
	1168, 1169, 1170, 1171, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 1172, 261,
	262, 263, 264, 265, 1173, 1174, 0, 266, 525, 526,
	527, 1175, 267, 268, 528, 1176, 1243, 1177, 269, 270,
	271, 272, 273, 274, 275, 0, 1178, 277, 278, 279,
	276, 1179, 280, 0, 281, 282, 283, 1180, 284, 1036,
	285, 286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287,
	288, 289, 290, 0, 291, 529, 530, 1188, 295, 292,
	293, 1189, 296, 294, 1190, 297, 298, 299, 1191, 1192,
	300, 301, 302, 1193, 303, 304, 1194, 305, 306, 307,
	1195, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 532, 533, 1196, 241, 1197, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 1198, 325, 1199, 1200, 1037, 326, 327, 535, 536,
	328, 329, 1201, 330, 537, 1202, 538, 331, 1203, 332,
	333, 334, 335, 336, 539, 540, 541, 392, 1039, 337,
	338, 1204, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1205, 1038, 345, 542, 543, 1206, 544,
	1207, 347, 1040, 545, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 1208,
	358, 360, 359, 1209, 361, 546, 1043, 362, 363, 1044,
	1210, 364, 365, 366, 1211, 1212, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 1213, 243, 1047, 390, 1214, 547, 391,
	548, 393, 394, 1215, 0, 395, 0, 1216, 1217, 397,
	398, 399, 1218, 1219, 400, 401, 549, 1048, 402, 1049,
	550, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 1220, 413, 414, 551, 552, 553, 415, 554,
	416, 417, 1221, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 1222, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 1223, 438, 439, 440, 1050, 441, 442, 443,
	444, 556, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 1224, 461, 462, 460, 463,
	464, 465, 1225, 466, 450, 451, 467, 468, 1051, 469,
	470, 557, 0, 471, 1226, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 559, 1227, 483,
	484, 0, 482, 1228, 485, 486, 487, 488, 489, 490,
	315, 491, 1229, 492, 560, 561, 562, 563, 1230, 499,
	1231, 493, 494, 564, 495, 565, 1232, 496, 497, 498,
	0, 500, 501, 1233, 1234, 502, 503, 504, 506, 507,
	505, 508, 1235, 509, 1236, 0, 510, 511, 512, 566,
	567, 568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241,
	515, 516, 570, 517, 518, 519, 1154, 0, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 1163, 250, 251, 1164, 1165, 1166, 0, 1167, 520,
	1168, 1169, 1170, 1171, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 1172, 261,
	262, 263, 264, 265, 1173, 1174, 0, 266, 525, 526,
	527, 1175, 267, 268, 528, 1176, 1243, 1177, 269, 270,
	271, 272, 273, 274, 275, 0, 1178, 277, 278, 279,
	276, 1179, 280, 0, 281, 282, 283, 1180, 284, 1036,
	285, 286, 1181, 1182, 1184, 1183, 1185, 1186, 1187, 287,
	288, 289, 290, 0, 291, 529, 530, 1188, 295, 292,
	293, 1189, 296, 294, 1190, 297, 298, 299, 1191, 1192,
	300, 301, 302, 1193, 303, 304, 1194, 305, 306, 307,
	1195, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 532, 533, 1196, 241, 1197, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 1198, 325, 1199, 1200, 1037, 326, 327, 535, 536,
	328, 329, 1201, 330, 537, 1202, 538, 331, 1203, 332,
	333, 334, 335, 336, 539, 540, 541, 392, 1039, 337,
	338, 1204, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1205, 1038, 345, 542, 543, 1206, 544,
	1207, 347, 1040, 545, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 1208,
	358, 360, 359, 1209, 361, 546, 1043, 362, 363, 1044,
	1210, 364, 365, 366, 1211, 1212, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 1213, 243, 1047, 390, 1214, 547, 391,
	548, 393, 394, 1215, 0, 395, 0, 1216, 1217, 397,
	398, 399, 1218, 1219, 400, 401, 549, 1048, 402, 1049,
	550, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 1220, 413, 414, 551, 552, 553, 415, 554,
	416, 417, 1221, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 1222, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 1223, 438, 439, 440, 1050, 441, 442, 443,
	444, 556, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 1224, 461, 462, 460, 463,
	464, 465, 1225, 466, 450, 451, 467, 468, 1051, 469,
	470, 557, 0, 471, 1226, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 559, 1227, 483,
	484, 0, 482, 1228, 485, 486, 487, 488, 489, 490,
	315, 491, 1229, 492, 560, 561, 562, 563, 1230, 499,
	1231, 493, 494, 564, 495, 565, 1232, 496, 497, 498,
	0, 500, 501, 1233, 1234, 502, 503, 504, 506, 507,
	505, 508, 1235, 509, 1236, 0, 510, 511, 512, 566,
	567, 568, 1237, 514, 513, 569, 1238, 1239, 1240, 1241,
	515, 516, 570, 517, 518, 519, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 1163,
	250, 251, 1164, 1165, 1166, 0, 1167, 520, 1168, 1169,
	1170, 1171, 252, 253, 255, 254, 256, 257, 258, 521,
	522, 0, 259, 523, 260, 524, 1172, 261, 262, 263,
	264, 265, 1173, 1174, 0, 266, 525, 526, 527, 1175,
	267, 268, 528, 1176, 1243, 1177, 269, 270, 271, 272,
	273, 274, 275, 0, 1178, 277, 278, 279, 276, 1179,
	280, 0, 281, 282, 283, 1180, 284, 1036, 285, 286,
	1181, 1182, 1184, 1183, 1185, 1186, 1187, 287, 288, 289,
	290, 0, 291, 529, 530, 1188, 295, 292, 293, 1189,
	296, 294, 1190, 297, 298, 299, 1191, 1192, 300, 301,
	302, 1193, 303, 304, 1194, 305, 306, 307, 1195, 308,
	309, 531, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 532, 533, 1196, 241, 1197, 0, 0, 0,
	0, 321, 322, 323, 534, 0, 0, 0, 324, 1198,
	325, 1199, 1200, 1037, 326, 327, 535, 536, 328, 329,
	1201, 330, 537, 1202, 538, 331, 1203, 332, 333, 334,
	335, 336, 539, 540, 541, 392, 1039, 337, 338, 1204,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 1205, 1038, 345, 542, 543, 1206, 544, 1207, 347,
	1040, 545, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 1208, 358, 360,
	359, 1209, 361, 546, 1043, 362, 363, 1044, 1210, 364,
	365, 366, 1211, 1212, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 1213, 243, 1047, 390, 1214, 547, 391, 548, 393,
	394, 1215, 0, 395, 0, 1216, 1217, 397, 398, 399,
	1218, 1219, 400, 401, 549, 1048, 402, 1049, 550, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	1220, 413, 414, 551, 552, 553, 415, 554, 416, 417,
	1221, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	555, 427, 426, 428, 1222, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	1223, 438, 439, 440, 1050, 441, 442, 443, 444, 556,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 1224, 461, 462, 460, 463, 464, 465,
	1225, 466, 450, 451, 467, 468, 1051, 469, 470, 557,
	0, 471, 1226, 472, 473, 474, 475, 452, 476, 481,
	558, 477, 478, 479, 480, 559, 1227, 483, 484, 0,
	482, 1228, 485, 486, 487, 488, 489, 490, 315, 491,
	1229, 492, 560, 561, 562, 563, 1230, 499, 1231, 493,
	494, 564, 495, 565, 1232, 496, 497, 498, 0, 500,
	501, 1233, 1234, 502, 503, 504, 506, 507, 505, 508,
	1235, 509, 1236, 0, 510, 511, 512, 566, 567, 568,
	1237, 514, 513, 569, 1238, 1239, 1240, 1241, 515, 516,
	570, 517, 518, 519, 2233, 0, 973, 945, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 2230,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 2231, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	2229, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	2232, 0, 0, 0, 0, 0, 0, 957, 2228, 0,
	919, 955, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 206,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 208, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 1426, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 200, 515, 516, 570, 517, 518, 519,
	932, 201, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 973, 945, 946, 947,
	943, 944, 956, 1660, 1658, 0, 0, 955, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 206, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 208, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 1426, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 200, 515, 516,
	570, 517, 518, 519, 932, 201, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	973, 945, 946, 947, 943, 944, 956, 1660, 2744, 0,
	0, 955, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 206, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 208, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 1426, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 200, 515, 516, 570, 517, 518, 519, 932, 201,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 973, 945, 946, 947, 943, 944,
	956, 1660, 1658, 0, 0, 955, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 2337, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	2342, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 2338,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 2339, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 2278, 955,
	973, 945, 946, 947, 943, 944, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 0, 0, 0, 0, 0, 0,
	0, 957, 2276, 0, 2275, 955, 973, 945, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	0, 0, 0, 0, 0, 0, 0, 957, 2273, 0,
	2272, 955, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 0, 0, 0, 0,
	0, 0, 0, 957, 2270, 0, 2269, 955, 973, 945,
	946, 947, 943, 944, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 930, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 934, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 931, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 929, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 500, 501, 0, 935, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 932, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	926, 927, 0, 0, 0, 0, 0, 0, 0, 957,
	2267, 0, 1513, 955, 973, 945, 946, 947, 943, 944,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 1512, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 922, 955,
	973, 945, 946, 947, 943, 944, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 936,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 973, 945, 946, 947, 943, 944,
	956, 957, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 3924, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 936, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 973, 945,
	946, 947, 943, 944, 956, 957, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 930, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 934, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 2147,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 931, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 2146, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 929, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 500, 501, 0, 935, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 932, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	926, 927, 973, 945, 946, 947, 943, 944, 956, 957,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 3724,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 936, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 973, 945, 946, 947,
	943, 944, 956, 957, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 3400, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	1728, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	0, 955, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 3165, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 973, 945, 946, 947,
	943, 944, 956, 957, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 936, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	973, 945, 946, 947, 943, 944, 956, 957, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 1728, 0, 0, 0, 0, 0,
	0, 957, 0, 0, 0, 955, 973, 945, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 2342, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	973, 945, 946, 947, 943, 944, 956, 957, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 0, 0, 0, 0, 0, 0,
	0, 957, 1658, 0, 2347, 955, 973, 945, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	2345, 955, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 0, 2333, 955, 973, 945,
	946, 947, 943, 944, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 930, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 934, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 931, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 929, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 500, 501, 0, 935, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 932, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	926, 927, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 2322, 955, 973, 945, 946, 947, 943, 944,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 2320, 955,
	2311, 2318, 946, 947, 943, 944, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 2314, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 2315, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 2316, 2313,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 2317, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 2312, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 0, 0, 0, 0, 0, 0,
	0, 957, 0, 0, 2308, 955, 2311, 2318, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 2314, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	2315, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 2316, 2313, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 2317, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 2312, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	973, 945, 946, 947, 943, 944, 956, 957, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 0, 0, 0, 0, 0, 1666,
	0, 957, 0, 0, 0, 955, 973, 945, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 2126,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	1518, 955, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 0, 1456, 955, 973, 945,
	946, 947, 943, 944, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 930, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 934, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 931, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 929, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 500, 501, 0, 935, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 932, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	926, 927, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 1451, 955, 973, 945, 946, 947, 943, 944,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 1442, 955,
	973, 945, 946, 947, 943, 944, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 0, 0, 0, 0, 0, 0,
	0, 957, 0, 0, 1437, 955, 973, 945, 946, 947,
	943, 944, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	1419, 955, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 0, 1306, 955, 973, 945,
	946, 947, 943, 944, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 930, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 934, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 1305, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 931, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 929, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 500, 501, 0, 935, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 932, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	926, 927, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 1300, 955, 973, 945, 946, 947, 943, 944,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	1299, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 1293, 955,
	973, 945, 946, 947, 943, 944, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 973, 945, 946, 947, 943, 944,
	956, 957, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 926, 927, 973, 945,
	946, 947, 943, 944, 956, 957, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 930, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 3963, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 934, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 931, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 929, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 3962, 501, 0, 935, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 932, 0, 0, 0,
	0, 0, 0, 928, 0, 0, 0, 0, 0, 0,
	926, 927, 973, 945, 946, 947, 943, 944, 956, 957,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 3961, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 963, 996,
	930, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 3963, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 934, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 940, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 931, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 929, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 3962, 501, 0, 935, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 0, 0, 0, 515, 516, 570, 517, 518, 519,
	932, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 926, 927, 973, 945, 946, 947,
	2711, 2712, 956, 957, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 930, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 934, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 931, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 941,
	445, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 929,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 935, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 932, 0, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 926, 927,
	973, 945, 946, 947, 2709, 2710, 956, 957, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 997, 961, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 1010, 0, 259, 1017, 260, 1016,
	0, 261, 262, 263, 264, 265, 963, 996, 930, 266,
	1055, 1056, 527, 0, 267, 268, 1003, 0, 984, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1036, 285, 286, 987, 985, 986, 993, 989, 988,
	992, 287, 288, 289, 290, 1020, 291, 1014, 1013, 934,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1005, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 940, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1027, 1028, 952, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1012, 0,
	0, 0, 324, 0, 325, 0, 0, 1037, 326, 327,
	1025, 1026, 328, 329, 0, 330, 1034, 0, 962, 331,
	0, 332, 333, 334, 335, 336, 998, 999, 1002, 392,
	1039, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1038, 345, 1007, 1008,
	0, 968, 0, 347, 1040, 1000, 1041, 348, 349, 350,
	1042, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 1035, 1043, 362,
	363, 1044, 0, 364, 365, 366, 991, 990, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 1045, 383, 384, 385,
	388, 389, 387, 1046, 386, 931, 243, 1047, 390, 953,
	1001, 391, 1015, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 1048,
	402, 1049, 1029, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 1030,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 1011, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 1050, 441,
	442, 443, 444, 941, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 994, 466, 450, 451, 467, 468,
	1051, 469, 470, 1009, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 1054, 477, 478, 479, 480, 1031,
	0, 483, 484, 929, 482, 0, 485, 486, 487, 488,
	489, 490, 315, 491, 0, 492, 1021, 1022, 1023, 1024,
	0, 499, 0, 493, 494, 1032, 495, 1033, 951, 496,
	497, 498, 0, 500, 501, 0, 935, 502, 503, 504,
	506, 507, 505, 508, 995, 509, 0, 0, 510, 511,
	512, 566, 1018, 1053, 0, 514, 513, 569, 0, 0,
	0, 0, 515, 516, 570, 517, 518, 519, 932, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 926, 927, 973, 945, 946, 947, 943, 944,
	956, 957, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 521, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 286, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 1039, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 1040, 1000,
	1041, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 1044, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 1047, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 1051, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 500, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 932, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 2134, 2135, 973, 945,
	946, 947, 943, 944, 956, 957, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 997,
	961, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 1010, 0, 259, 1017, 260, 1016, 0, 261,
	262, 263, 264, 265, 963, 996, 0, 266, 1055, 1056,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 1020, 291, 1014, 1013, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1005, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 940, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 952, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1012, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 1025, 1026,
	328, 329, 0, 330, 1034, 0, 962, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 1007, 1008, 0, 968,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 0, 243, 1047, 390, 953, 1001, 391,
	1015, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 1011, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 941, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 1009, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 1054, 477, 478, 479, 480, 1031, 0, 483,
	484, 0, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 1021, 1022, 1023, 1024, 0, 499,
	0, 493, 494, 1032, 495, 1033, 951, 496, 497, 498,
	0, 500, 501, 0, 0, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	1018, 1053, 0, 514, 513, 569, 0, 0, 0, 0,
	515, 516, 570, 517, 518, 519, 973, 945, 946, 947,
	943, 944, 956, 2330, 0, 0, 0, 0, 0, 0,
	2328, 2329, 0, 244, 245, 246, 247, 248, 249, 957,
	250, 251, 0, 955, 0, 0, 0, 997, 961, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	1010, 0, 259, 1017, 260, 1016, 0, 261, 262, 263,
	264, 265, 963, 996, 0, 266, 1055, 1056, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 1020, 291, 1014, 1013, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1005,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 940, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 952, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1012, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 1025, 1026, 328, 329,
	0, 330, 1034, 0, 962, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 1007, 1008, 0, 968, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 0, 243, 1047, 390, 953, 1001, 391, 1015, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	1011, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 2704,
	2705, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 1009,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	1054, 477, 478, 479, 480, 1031, 0, 483, 484, 0,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 1021, 1022, 1023, 1024, 0, 499, 0, 493,
	494, 1032, 495, 1033, 951, 496, 497, 498, 0, 500,
	501, 0, 0, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 1018, 1053,
	0, 514, 513, 569, 0, 0, 0, 0, 515, 516,
	570, 517, 518, 519, 973, 945, 946, 947, 943, 944,
	956, 0, 0, 0, 0, 0, 0, 0, 1859, 1860,
	0, 244, 245, 246, 247, 248, 249, 957, 250, 251,
	0, 955, 0, 0, 0, 997, 961, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 0, 1010, 0,
	259, 1017, 260, 1016, 0, 261, 262, 263, 264, 265,
	963, 996, 930, 266, 1055, 1056, 527, 0, 267, 268,
	1003, 0, 984, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1036, 285, 3963, 987, 985,
	986, 993, 989, 988, 992, 287, 288, 289, 290, 1020,
	291, 1014, 1013, 934, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1005, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 940,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1027, 1028, 952, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1012, 0, 0, 0, 324, 0, 325, 0,
	0, 1037, 326, 327, 1025, 1026, 328, 329, 0, 330,
	1034, 0, 962, 331, 0, 332, 333, 334, 335, 336,
	998, 999, 1002, 392, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1038, 345, 1007, 1008, 0, 968, 0, 347, 0, 1000,
	0, 348, 349, 350, 1042, 351, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 0, 358, 360, 359, 0,
	361, 1035, 1043, 362, 363, 0, 0, 364, 365, 366,
	991, 990, 367, 368, 369, 370, 0, 371, 372, 374,
	376, 373, 375, 380, 377, 378, 379, 382, 0, 381,
	1045, 383, 384, 385, 388, 389, 387, 1046, 386, 931,
	243, 0, 390, 953, 1001, 391, 1015, 393, 394, 0,
	0, 395, 0, 0, 0, 397, 398, 399, 0, 0,
	400, 401, 549, 1048, 402, 1049, 1029, 403, 404, 396,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	414, 551, 552, 1030, 415, 554, 416, 417, 0, 418,
	0, 419, 420, 421, 422, 423, 424, 425, 1011, 427,
	426, 428, 0, 0, 0, 0, 0, 0, 429, 0,
	431, 432, 433, 430, 434, 435, 436, 437, 0, 438,
	439, 440, 1050, 441, 442, 443, 444, 941, 445, 0,
	446, 447, 453, 454, 448, 449, 455, 456, 457, 458,
	459, 0, 461, 462, 460, 463, 464, 465, 994, 466,
	450, 451, 467, 468, 0, 469, 470, 1009, 0, 471,
	0, 472, 473, 474, 475, 452, 476, 481, 1054, 477,
	478, 479, 480, 1031, 0, 483, 484, 929, 482, 0,
	485, 486, 487, 488, 489, 490, 315, 491, 0, 492,
	1021, 1022, 1023, 1024, 0, 499, 0, 493, 494, 1032,
	495, 1033, 951, 496, 497, 498, 0, 3962, 501, 0,
	935, 502, 503, 504, 506, 507, 505, 508, 995, 509,
	0, 0, 510, 511, 512, 566, 1018, 1053, 0, 514,
	513, 569, 0, 0, 0, 0, 515, 516, 570, 517,
	518, 519, 973, 945, 946, 947, 943, 944, 956, 0,
	0, 0, 0, 0, 0, 0, 926, 927, 0, 244,
	245, 246, 247, 248, 249, 957, 250, 251, 0, 955,
	0, 0, 0, 997, 961, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 1010, 0, 259, 1017,
	260, 1016, 0, 261, 262, 263, 264, 265, 0, 996,
	0, 266, 1055, 1056, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 1020, 291, 1014,
	1013, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1005, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 531, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	952, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1012, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 1025, 1026, 328, 329, 0, 330, 1034, 0,
	962, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	1007, 1008, 0, 968, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 0, 243, 1047,
	390, 953, 1001, 391, 1015, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 1011, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 941, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 0,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 1009, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 1054, 477, 478, 479,
	480, 1031, 0, 483, 484, 0, 482, 0, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 1021, 1022,
	1023, 1024, 0, 499, 0, 493, 494, 1032, 495, 1033,
	951, 496, 497, 498, 0, 500, 501, 0, 0, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 566, 1018, 1053, 0, 514, 513, 569,
	0, 919, 0, 1093, 515, 516, 570, 517, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 957, 997, 0, 0, 955, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	996, 0, 266, 525, 526, 527, 0, 267, 268, 1003,
	0, 984, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1036, 285, 286, 987, 985, 986,
	993, 989, 988, 992, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1027,
	1028, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	1037, 326, 327, 535, 536, 328, 329, 0, 330, 1034,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 998,
	999, 1002, 392, 1039, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1038,
	345, 542, 543, 0, 544, 0, 347, 1040, 1000, 1041,
	348, 349, 350, 1042, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 1079, 358, 360, 359, 0, 361,
	1035, 1043, 362, 363, 1044, 0, 364, 365, 366, 991,
	990, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 1045,
	383, 384, 385, 388, 389, 387, 1046, 386, 0, 243,
	1047, 390, 0, 1001, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 1085, 397, 398, 399, 0, 0, 400,
	401, 549, 1048, 402, 1049, 1029, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 1030, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 1050, 441, 442, 443, 444, 556, 1087, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	206, 461, 462, 460, 463, 464, 465, 994, 466, 450,
	451, 467, 468, 1051, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 1031, 0, 483, 484, 0, 482, 208, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 1032, 495,
	1033, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 995, 509, 0,
	0, 510, 511, 512, 1426, 567, 568, 0, 514, 513,
	569, 0, 1093, 0, 200, 515, 516, 570, 517, 518,
	519, 0, 201, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 1083, 997, 1752, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 522, 0, 259, 523,
	260, 524, 0, 261, 262, 263, 264, 265, 0, 996,
	0, 266, 525, 526, 527, 0, 267, 268, 1003, 0,
	984, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 987, 985, 986, 993,
	989, 988, 992, 287, 288, 289, 290, 0, 291, 529,
	530, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 531, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1027, 1028,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	534, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 535, 536, 328, 329, 0, 330, 1034, 0,
	538, 331, 0, 332, 333, 334, 335, 336, 998, 999,
	1002, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1038, 345,
	542, 543, 0, 544, 0, 347, 1040, 1000, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 1079, 358, 360, 359, 0, 361, 1035,
	1043, 362, 363, 1044, 0, 364, 365, 366, 991, 990,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 0, 243, 1047,
	390, 0, 1001, 391, 548, 393, 394, 0, 0, 395,
	0, 0, 1085, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 1029, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 1030, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 555, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 556, 1087, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 206,
	461, 462, 460, 463, 464, 465, 994, 466, 450, 451,
	467, 468, 1051, 469, 470, 557, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 558, 477, 478, 479,
	480, 1031, 0, 483, 484, 0, 482, 208, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 560, 561,
	562, 563, 0, 499, 0, 493, 494, 1032, 495, 1033,
	0, 496, 497, 498, 0, 500, 501, 0, 0, 502,
	503, 504, 506, 507, 505, 508, 995, 509, 0, 0,
	510, 511, 512, 1426, 567, 568, 0, 514, 513, 569,
	0, 0, 0, 200, 515, 516, 570, 517, 518, 519,
	0, 201, 0, 0, 0, 2864, 0, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 1752, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 996, 0, 266, 525, 526, 527,
	0, 267, 268, 1003, 0, 984, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1036, 285,
	286, 987, 985, 986, 993, 989, 988, 992, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1027, 1028, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 1037, 326, 327, 535, 536, 328,
	329, 0, 330, 1034, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 998, 999, 1002, 392, 1039, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1038, 345, 542, 543, 0, 544, 0,
	347, 1040, 1000, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 1079, 358,
	360, 359, 0, 361, 1035, 1043, 362, 363, 1044, 0,
	364, 365, 366, 991, 990, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 0, 243, 1047, 390, 0, 1001, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 1085, 397, 398,
	399, 0, 0, 400, 401, 549, 1048, 402, 1049, 1029,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 1030, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 1087, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 994, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 1031, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 1032, 495, 1033, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 995, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 0, 1075, 0, 1093, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 1083, 0, 1081, 997,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 0, 261,
	262, 263, 264, 265, 0, 996, 0, 266, 525, 526,
	527, 0, 267, 268, 1003, 0, 984, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1036,
	285, 286, 987, 985, 986, 993, 989, 988, 992, 287,
	288, 289, 290, 0, 291, 529, 530, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1027, 1028, 0, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 0, 325, 0, 0, 1037, 326, 327, 535, 536,
	328, 329, 0, 330, 1034, 0, 538, 331, 0, 332,
	333, 334, 335, 336, 998, 999, 1002, 392, 1039, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1038, 345, 542, 543, 0, 544,
	0, 347, 1040, 1000, 1041, 348, 349, 350, 1042, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 1079,
	358, 360, 359, 0, 361, 1035, 1043, 362, 363, 1044,
	0, 364, 365, 366, 991, 990, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 1045, 383, 384, 385, 388, 389,
	387, 1046, 386, 0, 243, 1047, 390, 0, 1001, 391,
	548, 393, 394, 0, 0, 395, 0, 0, 1085, 397,
	398, 399, 0, 0, 400, 401, 549, 1048, 402, 1049,
	1029, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 1030, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 1050, 441, 442, 443,
	444, 556, 1087, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 994, 466, 450, 451, 467, 468, 1051, 469,
	470, 557, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 1031, 0, 483,
	484, 0, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 560, 561, 562, 563, 0, 499,
	0, 493, 494, 1032, 495, 1033, 0, 496, 497, 498,
	0, 500, 501, 0, 0, 502, 503, 504, 506, 507,
	505, 508, 995, 509, 0, 0, 510, 511, 512, 566,
	567, 568, 0, 514, 513, 569, 0, 1093, 0, 0,
	515, 516, 570, 517, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1083, 997, 1081,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 996, 0, 266, 525, 526, 527,
	0, 267, 268, 1003, 0, 984, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1036, 285,
	286, 987, 985, 986, 993, 989, 988, 992, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1027, 1028, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 1037, 326, 327, 535, 536, 328,
	329, 0, 330, 1034, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 998, 999, 1002, 392, 1039, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1038, 345, 542, 543, 0, 544, 0,
	347, 1040, 1000, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 1079, 358,
	360, 359, 0, 361, 1035, 1043, 362, 363, 1044, 0,
	364, 365, 366, 991, 990, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 0, 243, 1047, 390, 0, 1001, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 1085, 397, 398,
	399, 0, 0, 400, 401, 549, 1048, 402, 1049, 1029,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 1030, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 1087, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 994, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 1031, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 1032, 495, 1033, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 995, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 0, 1093, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 1083, 997, 1081, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 521,
	522, 0, 259, 523, 260, 524, 0, 261, 262, 263,
	264, 265, 0, 996, 0, 266, 525, 526, 527, 0,
	267, 268, 1003, 0, 984, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1036, 285, 286,
	987, 985, 986, 993, 989, 988, 992, 287, 288, 289,
	290, 0, 291, 529, 530, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 531, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1027, 1028, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 534, 0, 0, 0, 324, 0,
	325, 0, 0, 1037, 326, 327, 535, 536, 328, 329,
	0, 330, 1034, 0, 538, 331, 0, 332, 333, 334,
	335, 336, 998, 999, 1002, 392, 1039, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1038, 345, 542, 543, 0, 544, 0, 347,
	1040, 1000, 1041, 348, 349, 350, 1042, 351, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 0, 358, 360,
	359, 0, 361, 1035, 1043, 362, 363, 1044, 0, 364,
	365, 366, 991, 990, 367, 368, 369, 370, 0, 371,
	372, 374, 376, 373, 375, 380, 377, 378, 379, 382,
	0, 381, 1045, 383, 384, 385, 388, 389, 387, 1046,
	386, 0, 243, 1047, 390, 0, 1001, 391, 548, 393,
	394, 0, 0, 395, 0, 0, 0, 397, 398, 399,
	0, 0, 400, 401, 549, 1048, 402, 1049, 1029, 403,
	404, 396, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 414, 551, 552, 1030, 415, 554, 416, 417,
	0, 418, 0, 419, 420, 421, 422, 423, 424, 425,
	555, 427, 426, 428, 0, 0, 0, 0, 0, 0,
	429, 0, 431, 432, 433, 430, 434, 435, 436, 437,
	0, 438, 439, 440, 1050, 441, 442, 443, 444, 556,
	1087, 0, 446, 447, 453, 454, 448, 449, 455, 456,
	457, 458, 459, 0, 461, 462, 460, 463, 464, 465,
	994, 466, 450, 451, 467, 468, 1051, 469, 470, 557,
	0, 471, 0, 472, 473, 474, 475, 452, 476, 481,
	558, 477, 478, 479, 480, 1031, 0, 483, 484, 0,
	482, 0, 485, 486, 487, 488, 489, 490, 315, 491,
	0, 492, 560, 561, 562, 563, 0, 499, 0, 493,
	494, 1032, 495, 1033, 0, 496, 497, 498, 0, 500,
	501, 0, 0, 502, 503, 504, 506, 507, 505, 508,
	995, 509, 0, 0, 510, 511, 512, 566, 567, 568,
	0, 514, 513, 569, 0, 919, 0, 1277, 515, 516,
	570, 517, 518, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1651, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 1243, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1036, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 1037, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 1039, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1038, 345, 542, 543, 0, 544, 0,
	347, 1040, 545, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 1043, 362, 363, 1044, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 0, 0, 1047, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 1048, 402, 1049, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 206, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 208, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 1426, 567,
	568, 0, 514, 513, 569, 0, 0, 0, 200, 515,
	516, 570, 517, 518, 519, 0, 201, 0, 0, 0,
	1423, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 521, 522, 0, 259, 523,
	260, 524, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 525, 526, 527, 0, 267, 268, 528, 0,
	1243, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1036, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 529,
	530, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 531, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 532, 533,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	534, 0, 0, 0, 324, 0, 325, 0, 0, 1037,
	326, 327, 535, 536, 328, 329, 0, 330, 537, 0,
	538, 331, 0, 332, 333, 334, 335, 336, 539, 540,
	541, 392, 1039, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 1038, 345,
	542, 543, 0, 544, 0, 347, 1040, 545, 1041, 348,
	349, 350, 1042, 351, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 0, 358, 360, 359, 0, 361, 546,
	1043, 362, 363, 1044, 0, 364, 365, 366, 0, 0,
	367, 368, 369, 370, 0, 371, 372, 374, 376, 373,
	375, 380, 377, 378, 379, 382, 0, 381, 1045, 383,
	384, 385, 388, 389, 387, 1046, 386, 0, 0, 1047,
	390, 0, 547, 391, 548, 393, 394, 0, 0, 395,
	0, 0, 0, 397, 398, 399, 0, 0, 400, 401,
	549, 1048, 402, 1049, 550, 403, 404, 396, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 414, 551,
	552, 553, 415, 554, 416, 417, 0, 418, 0, 419,
	420, 421, 422, 423, 424, 425, 555, 427, 426, 428,
	0, 0, 0, 0, 0, 0, 429, 0, 431, 432,
	433, 430, 434, 435, 436, 437, 0, 438, 439, 440,
	1050, 441, 442, 443, 444, 556, 445, 0, 446, 447,
	453, 454, 448, 449, 455, 456, 457, 458, 459, 206,
	461, 462, 460, 463, 464, 465, 0, 466, 450, 451,
	467, 468, 1051, 469, 470, 557, 0, 471, 0, 472,
	473, 474, 475, 452, 476, 481, 558, 477, 478, 479,
	480, 559, 0, 483, 484, 0, 482, 208, 485, 486,
	487, 488, 489, 490, 315, 491, 0, 492, 560, 561,
	562, 563, 0, 499, 0, 493, 494, 564, 495, 565,
	0, 496, 497, 498, 0, 500, 501, 0, 0, 502,
	503, 504, 506, 507, 505, 508, 0, 509, 0, 0,
	510, 511, 512, 1426, 567, 568, 0, 514, 513, 569,
	0, 0, 0, 200, 515, 516, 570, 517, 518, 519,
	0, 201, 0, 0, 0, 0, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 1243, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1036, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 1037, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 1039, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1038, 345, 542, 543, 0, 544, 0,
	347, 1040, 545, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 1043, 362, 363, 1044, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 0, 0, 1047, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 1048, 402, 1049, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 1277, 1276, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 1448, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 1243, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1036, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 1037, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 1039, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 1038, 345, 542, 543, 0, 544, 0, 347, 1040,
	545, 1041, 348, 349, 350, 1042, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 1043, 362, 363, 1044, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 1045, 383, 384, 385, 388, 389, 387, 1046, 386,
	0, 0, 1047, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 1048, 402, 1049, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 1050, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 1051, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 0,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 3101, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 1243, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1036, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	1037, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 1039, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 1038,
	345, 542, 543, 0, 544, 0, 347, 1040, 545, 1041,
	348, 349, 350, 1042, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 1935, 360, 359, 0, 361,
	546, 1043, 362, 363, 1044, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 1045,
	383, 384, 385, 388, 389, 387, 1046, 386, 0, 0,
	1047, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 1048, 402, 1049, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 1050, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 1051, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 1448, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 1093,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	997, 0, 1432, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 996, 0, 266, 525,
	526, 527, 0, 267, 268, 1003, 0, 984, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1036, 285, 286, 987, 985, 986, 993, 989, 988, 992,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1027, 1028, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 1037, 326, 327, 535,
	536, 328, 329, 0, 330, 1034, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 998, 999, 1002, 392, 1039,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1038, 345, 542, 543, 0,
	544, 0, 347, 1040, 1000, 1041, 348, 349, 350, 1042,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 1035, 1043, 362, 363,
	1044, 0, 364, 365, 366, 991, 990, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 1045, 383, 384, 385, 388,
	389, 387, 1046, 386, 0, 243, 1047, 390, 0, 1001,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 1048, 402,
	1049, 1029, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 1030, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 1050, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 994, 466, 450, 451, 467, 468, 1051,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 1031, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 1032, 495, 1033, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 995, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 919, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 0, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 206, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 208, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	1426, 567, 568, 0, 514, 513, 569, 238, 0, 0,
	200, 515, 516, 570, 517, 518, 519, 0, 201, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	172, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 243, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 0, 1367, 0, 238, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 1766, 520,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 521, 522, 0, 259, 523, 260, 524, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 525, 526,
	527, 0, 267, 268, 528, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 529, 530, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 531, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 532, 533, 0, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 534, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 535, 536,
	328, 329, 0, 330, 537, 0, 538, 331, 0, 332,
	333, 334, 335, 336, 539, 540, 541, 392, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 0, 345, 542, 543, 0, 544,
	0, 347, 0, 545, 0, 348, 349, 350, 0, 351,
	0, 0, 0, 352, 353, 354, 355, 356, 357, 0,
	358, 360, 359, 0, 361, 546, 0, 362, 363, 0,
	0, 364, 365, 366, 0, 0, 367, 368, 369, 370,
	0, 371, 372, 374, 376, 373, 375, 380, 377, 378,
	379, 382, 0, 381, 0, 383, 384, 385, 388, 389,
	387, 0, 386, 0, 243, 0, 390, 0, 547, 391,
	548, 393, 394, 0, 0, 395, 0, 0, 0, 397,
	398, 399, 0, 0, 400, 401, 549, 0, 402, 0,
	550, 403, 404, 396, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 414, 551, 552, 553, 415, 554,
	416, 417, 0, 418, 0, 419, 420, 421, 422, 423,
	424, 425, 555, 427, 426, 428, 0, 0, 0, 0,
	0, 0, 429, 0, 431, 432, 433, 430, 434, 435,
	436, 437, 0, 438, 439, 440, 0, 441, 442, 443,
	444, 556, 445, 0, 446, 447, 453, 454, 448, 449,
	455, 456, 457, 458, 459, 0, 461, 462, 460, 463,
	464, 465, 0, 466, 450, 451, 467, 468, 0, 469,
	470, 557, 0, 471, 0, 472, 473, 474, 475, 452,
	476, 481, 558, 477, 478, 479, 480, 559, 0, 483,
	484, 0, 482, 0, 485, 486, 487, 488, 489, 490,
	315, 491, 0, 492, 560, 561, 562, 563, 0, 499,
	0, 493, 494, 564, 495, 565, 0, 496, 497, 498,
	0, 500, 501, 0, 0, 502, 503, 504, 506, 507,
	505, 508, 0, 509, 0, 0, 510, 511, 512, 566,
	567, 568, 0, 514, 513, 569, 0, 238, 2629, 0,
	515, 516, 570, 517, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1371, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 238, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 4111, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 243, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 238,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 3048, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 1371, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 238, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 2602, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 238,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 3190, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 0, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 0, 769, 0,
	653, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	2032, 520, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 521, 522, 0, 259, 523, 260, 524,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	525, 526, 527, 0, 267, 268, 528, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 660, 290, 0, 291, 529, 530, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 531, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 532, 533, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 534, 0,
	0, 0, 324, 0, 325, 0, 767, 0, 326, 327,
	535, 536, 328, 329, 0, 330, 537, 0, 538, 331,
	0, 332, 333, 334, 335, 336, 539, 540, 541, 392,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 542, 543,
	0, 544, 0, 347, 0, 545, 0, 348, 349, 350,
	0, 351, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 0, 358, 360, 359, 0, 361, 546, 0, 362,
	363, 0, 0, 364, 365, 366, 0, 0, 367, 368,
	369, 370, 0, 371, 372, 374, 376, 373, 375, 380,
	377, 378, 379, 382, 0, 381, 0, 383, 384, 385,
	388, 389, 387, 0, 386, 0, 243, 0, 390, 0,
	547, 391, 548, 393, 394, 0, 0, 395, 0, 0,
	0, 397, 398, 399, 0, 0, 400, 401, 549, 0,
	402, 0, 550, 403, 404, 396, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 414, 551, 552, 553,
	415, 554, 416, 417, 0, 418, 0, 419, 420, 421,
	422, 423, 424, 425, 555, 427, 426, 428, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 432, 433, 430,
	434, 435, 436, 437, 0, 438, 439, 440, 0, 441,
	442, 443, 444, 556, 445, 0, 446, 447, 453, 454,
	448, 449, 455, 456, 457, 458, 459, 0, 461, 462,
	460, 463, 464, 465, 0, 466, 450, 451, 467, 468,
	0, 469, 470, 557, 0, 471, 0, 472, 473, 474,
	475, 452, 476, 481, 558, 477, 478, 479, 480, 559,
	0, 483, 484, 0, 482, 658, 485, 486, 487, 488,
	659, 490, 315, 491, 0, 492, 560, 561, 562, 563,
	0, 499, 0, 493, 494, 564, 495, 565, 0, 496,
	497, 498, 0, 500, 501, 0, 0, 502, 503, 504,
	506, 507, 505, 508, 0, 509, 0, 0, 510, 511,
	512, 566, 567, 568, 0, 514, 513, 569, 0, 651,
	0, 653, 515, 516, 570, 517, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 663, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 660, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 243, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 658, 485, 486, 487,
	488, 659, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 653, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 663, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 660, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 243, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	658, 485, 486, 487, 488, 659, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 653,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 663,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 660, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 2069, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 658, 485, 486, 487, 488, 659,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 1801, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 663, 0, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 0, 1807, 0, 259,
	1797, 260, 1813, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 1822, 1823, 0, 0, 267, 268, 0,
	0, 1243, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1036, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 1020, 291,
	1811, 1810, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1005, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 0, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 1809, 0, 0, 0, 324, 0, 325, 0, 0,
	1037, 326, 327, 1818, 1819, 328, 329, 0, 330, 0,
	0, 0, 331, 0, 332, 333, 334, 335, 336, 0,
	0, 0, 392, 1039, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 1038,
	345, 1804, 1805, 0, 1800, 0, 347, 1040, 0, 1041,
	348, 349, 350, 1042, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	0, 1043, 362, 363, 1044, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 1045,
	383, 384, 385, 388, 389, 387, 1046, 386, 0, 0,
	1047, 390, 0, 0, 391, 1812, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 0, 1048, 402, 1049, 0, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	1794, 1795, 0, 415, 0, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 1808, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 1050, 441, 442, 443, 444, 0, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 1051, 469, 470, 1806, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 1821, 477, 478,
	479, 480, 0, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 1814,
	1815, 1816, 1817, 0, 499, 0, 493, 494, 0, 495,
	0, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 0, 1798, 1820, 0, 514, 513,
	0, 0, 0, 0, 0, 515, 516, 0, 517, 518,
	519, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 1788, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	3353, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 1243, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1036, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 1037, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 1039,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1038, 345, 542, 543, 0,
	544, 0, 347, 1040, 545, 1041, 348, 349, 350, 1042,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 1043, 362, 363,
	1044, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 1045, 383, 384, 385, 388,
	389, 387, 1046, 386, 0, 0, 1047, 390, 3025, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 1048, 402,
	1049, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 1050, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 1051,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1277, 1276, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 1243, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1036, 285,
	286, 0, 0, 0, 0, 0, 0, 3014, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 1037, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 1039, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1038, 345, 542, 543, 0, 544, 0,
	347, 1040, 545, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 1043, 362, 363, 1044, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 0, 0, 1047, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 1048, 402, 1049, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 3015, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 243, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1475,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 1474, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 1473, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 1472, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1416,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 1415, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1347,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 1346, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1311,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1272,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 1243,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1036, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 1037, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 1271, 540, 541,
	392, 1039, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1038, 345, 542,
	543, 0, 544, 0, 347, 1040, 545, 1041, 348, 349,
	350, 1042, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 1043,
	362, 363, 1044, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 1045, 383, 384,
	385, 388, 389, 387, 1046, 386, 0, 0, 1047, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	1048, 402, 1049, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 1050,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 1051, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 1243, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1036, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 1037, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 1039,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1038, 345, 542, 543, 0,
	544, 0, 347, 1040, 545, 1041, 348, 349, 350, 1042,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 1043, 362, 363,
	1044, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 1045, 383, 384, 385, 388,
	389, 387, 1046, 386, 0, 0, 1047, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 1048, 402,
	1049, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 1050, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 1051,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1277, 1276, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 1243, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1036, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 1832, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 1037, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 1039, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1038, 345, 542, 543, 0, 544, 0,
	347, 1040, 545, 1041, 348, 349, 350, 1042, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 1043, 362, 363, 1044, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 1045, 383, 384, 385, 388, 389, 387,
	1046, 386, 0, 0, 1047, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 1048, 402, 1049, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 1050, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 1051, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 1277, 1276, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 1243, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1036, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 1037, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 1039, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 1038, 345, 542, 543, 0, 544, 0, 347, 1040,
	545, 1041, 348, 349, 350, 1042, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 1043, 362, 363, 1044, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 1045, 383, 384, 385, 388, 389, 387, 1046, 386,
	0, 0, 1047, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 1048, 402, 1049, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 1050, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 1051, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 1277,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 1243, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1036, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 1037, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 1039,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1038, 345, 542, 543, 0,
	544, 0, 347, 1040, 545, 1041, 348, 349, 350, 1042,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 1043, 362, 363,
	1044, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 1045, 383, 384, 385, 388,
	389, 387, 1046, 386, 0, 0, 1047, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 1048, 402,
	1049, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 1050, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 1051,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 2461, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 2458, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 2465, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 2642, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 2464, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 2639, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 2641, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 2638, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 2463, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 2640,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	2461, 267, 268, 528, 0, 0, 2455, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	2458, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	2465, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 2464, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 2454, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 2463, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 2462, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 1540, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 243, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 1543, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 1541, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 1542, 513, 569, 1247, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 1249, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 243, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 1085, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 1244, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 1246, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 243, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 1085, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 1150, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 1152, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 243, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 1085, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 602, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 601, 248, 249,
	591, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 594, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 595, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 596, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 590, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	591, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 594, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 595, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 596, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 2987, 386, 0, 243, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 238, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 243, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 1085, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 0,
	514, 513, 569, 2574, 0, 238, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 2573, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 243, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 0,
	514, 513, 569, 2045, 0, 238, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 243, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 238,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 1967, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1972, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1971, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1960, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1962, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1408, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1407, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1399, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1398, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1396, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1395, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1392, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1391, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1349, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1265, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 1258, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 1260, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 572, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 0, 514, 513, 569, 229, 0, 238,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 243,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 594, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 595, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 596, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 2076, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 243, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 238, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 2074, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 243, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 238,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 2072, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 243, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 2010,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 243,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 756, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 755, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 754, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 2642, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 3593, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 581, 0, 238, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	580, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 579,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 0, 514, 513, 569, 238, 2629, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 0, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 0,
	514, 513, 569, 238, 3602, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 3328, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 2381, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 238,
	2629, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 0, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 2626, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 2053, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 2043, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 622, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 1124, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 1122, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 623, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 619, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 1125, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 618,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 622, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 612, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 623, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 619, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 1431, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 618,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1412, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 1411,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1405, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 1404,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1355, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 1354,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1341, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 1340,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1336, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1268, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 1252, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 622, 0, 238, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 1124, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 1122, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 623, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 619, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 1125, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 618,
	561, 562, 563, 0, 499, 0, 493, 1123, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	1106, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 628, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 622,
	0, 238, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 612, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 610, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 611, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 623, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 613, 445, 0, 446, 447, 453,
	454, 448, 449, 619, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 614, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 618, 561, 562,
	563, 0, 499, 0, 493, 616, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 606,
	0, 238, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 607,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 604,
	0, 238, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 598,
	0, 238, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 0, 514, 513, 569, 576,
	0, 238, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 539, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 238, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 539, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 0, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 238,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 3063, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 0, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 3019,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 2960, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 466, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 2958, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 238, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 2944, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 0, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 238,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 2582, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 0, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 427, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 331, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 423, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 445, 0, 446,
	447, 607, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 238, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 520, 0,
	1992, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	521, 522, 0, 259, 523, 260, 524, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 525, 526, 527,
	0, 267, 268, 528, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 529, 530, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 531, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 534, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 535, 536, 328,
	329, 0, 330, 537, 0, 538, 331, 0, 332, 333,
	334, 335, 336, 539, 540, 541, 392, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 542, 543, 0, 544, 0,
	347, 0, 545, 0, 348, 349, 350, 0, 351, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 0, 358,
	360, 359, 0, 361, 546, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 367, 368, 369, 370, 0,
	371, 372, 374, 376, 373, 375, 380, 377, 378, 379,
	382, 0, 381, 0, 383, 384, 385, 388, 389, 387,
	0, 386, 0, 0, 0, 390, 0, 547, 391, 548,
	393, 394, 0, 0, 395, 0, 0, 0, 397, 398,
	399, 0, 0, 400, 401, 549, 0, 402, 0, 550,
	403, 404, 396, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 414, 551, 552, 553, 415, 554, 416,
	417, 0, 418, 0, 419, 420, 421, 422, 423, 424,
	425, 555, 427, 426, 428, 0, 0, 0, 0, 0,
	0, 429, 0, 431, 432, 433, 430, 434, 435, 436,
	437, 0, 438, 439, 440, 0, 441, 442, 443, 444,
	556, 445, 0, 446, 447, 453, 454, 448, 449, 455,
	456, 457, 458, 459, 0, 461, 462, 460, 463, 464,
	465, 0, 0, 450, 451, 467, 468, 0, 469, 470,
	557, 0, 471, 0, 472, 473, 474, 475, 452, 476,
	481, 558, 477, 478, 479, 480, 559, 0, 483, 484,
	0, 482, 0, 485, 486, 487, 488, 489, 490, 315,
	491, 0, 492, 560, 561, 562, 563, 0, 499, 0,
	493, 494, 564, 495, 565, 0, 496, 497, 498, 0,
	500, 501, 0, 0, 502, 503, 504, 506, 507, 505,
	508, 0, 509, 0, 0, 510, 511, 512, 566, 567,
	568, 238, 514, 513, 569, 0, 0, 0, 0, 515,
	516, 570, 517, 518, 519, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 521, 522, 0, 259, 523, 260,
	524, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 525, 526, 527, 0, 267, 268, 528, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 529, 530,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 531, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 534,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 535, 536, 328, 329, 0, 330, 537, 0, 538,
	331, 0, 332, 333, 334, 335, 336, 1377, 540, 541,
	392, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 542,
	543, 0, 544, 0, 347, 0, 545, 0, 348, 349,
	350, 0, 351, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 0, 358, 360, 359, 0, 361, 546, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 367,
	368, 369, 370, 0, 371, 372, 374, 376, 373, 375,
	380, 377, 378, 379, 382, 0, 381, 0, 383, 384,
	385, 388, 389, 387, 0, 386, 0, 0, 0, 390,
	0, 547, 391, 548, 393, 394, 0, 0, 395, 0,
	0, 0, 397, 398, 399, 0, 0, 400, 401, 549,
	0, 402, 0, 550, 403, 404, 396, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 414, 551, 552,
	553, 415, 554, 416, 417, 0, 418, 0, 419, 420,
	421, 422, 423, 424, 425, 555, 427, 426, 428, 0,
	0, 0, 0, 0, 0, 429, 0, 431, 432, 433,
	430, 434, 435, 436, 437, 0, 438, 439, 440, 0,
	441, 442, 443, 444, 556, 445, 0, 446, 447, 453,
	454, 448, 449, 455, 456, 457, 458, 459, 0, 461,
	462, 460, 463, 464, 465, 0, 466, 450, 451, 467,
	468, 0, 469, 470, 557, 0, 471, 0, 472, 473,
	474, 475, 452, 476, 481, 558, 477, 478, 479, 480,
	559, 0, 483, 484, 0, 482, 0, 485, 486, 487,
	488, 489, 490, 315, 491, 0, 492, 560, 561, 562,
	563, 0, 499, 0, 493, 494, 564, 495, 565, 0,
	496, 497, 498, 0, 500, 501, 0, 0, 502, 503,
	504, 506, 507, 505, 508, 0, 509, 0, 0, 510,
	511, 512, 566, 567, 568, 238, 514, 513, 569, 0,
	0, 0, 0, 515, 516, 570, 517, 518, 519, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 521, 522,
	0, 259, 523, 260, 524, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 525, 526, 527, 0, 267,
	268, 528, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 529, 530, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	531, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 534, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 535, 536, 328, 329, 0,
	330, 537, 0, 538, 331, 0, 332, 333, 334, 335,
	336, 1318, 540, 541, 392, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 542, 543, 0, 544, 0, 347, 0,
	545, 0, 348, 349, 350, 0, 351, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 0, 358, 360, 359,
	0, 361, 546, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 367, 368, 369, 370, 0, 371, 372,
	374, 376, 373, 375, 380, 377, 378, 379, 382, 0,
	381, 0, 383, 384, 385, 388, 389, 387, 0, 386,
	0, 0, 0, 390, 0, 547, 391, 548, 393, 394,
	0, 0, 395, 0, 0, 0, 397, 398, 399, 0,
	0, 400, 401, 549, 0, 402, 0, 550, 403, 404,
	396, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 414, 551, 552, 553, 415, 554, 416, 417, 0,
	418, 0, 419, 420, 421, 422, 423, 424, 425, 555,
	427, 426, 428, 0, 0, 0, 0, 0, 0, 429,
	0, 431, 432, 433, 430, 434, 435, 436, 437, 0,
	438, 439, 440, 0, 441, 442, 443, 444, 556, 445,
	0, 446, 447, 453, 454, 448, 449, 455, 456, 457,
	458, 459, 0, 461, 462, 460, 463, 464, 465, 0,
	466, 450, 451, 467, 468, 0, 469, 470, 557, 0,
	471, 0, 472, 473, 474, 475, 452, 476, 481, 558,
	477, 478, 479, 480, 559, 0, 483, 484, 0, 482,
	0, 485, 486, 487, 488, 489, 490, 315, 491, 0,
	492, 560, 561, 562, 563, 0, 499, 0, 493, 494,
	564, 495, 565, 0, 496, 497, 498, 0, 500, 501,
	0, 0, 502, 503, 504, 506, 507, 505, 508, 0,
	509, 0, 0, 510, 511, 512, 566, 567, 568, 238,
	514, 513, 569, 0, 0, 0, 0, 515, 516, 570,
	517, 518, 519, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 521, 522, 0, 259, 523, 260, 524, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 525,
	526, 527, 0, 267, 268, 528, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 529, 530, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 531, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 534, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 535,
	536, 328, 329, 0, 330, 537, 0, 538, 331, 0,
	332, 333, 334, 335, 336, 539, 540, 541, 392, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 542, 543, 0,
	544, 0, 347, 0, 545, 0, 348, 349, 350, 0,
	351, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	0, 358, 360, 359, 0, 361, 546, 0, 362, 363,
	0, 0, 364, 365, 366, 0, 0, 367, 368, 369,
	370, 0, 371, 372, 374, 376, 373, 375, 380, 377,
	378, 379, 382, 0, 381, 0, 383, 384, 385, 388,
	389, 387, 0, 386, 0, 0, 0, 390, 0, 547,
	391, 548, 393, 394, 0, 0, 395, 0, 0, 0,
	397, 398, 399, 0, 0, 400, 401, 549, 0, 402,
	0, 550, 403, 404, 396, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 414, 551, 552, 553, 415,
	554, 416, 417, 0, 418, 0, 419, 420, 421, 422,
	423, 424, 425, 555, 1058, 426, 428, 0, 0, 0,
	0, 0, 0, 429, 0, 431, 432, 433, 430, 434,
	435, 436, 437, 0, 438, 439, 440, 0, 441, 442,
	443, 444, 556, 445, 0, 446, 447, 453, 454, 448,
	449, 455, 456, 457, 458, 459, 0, 461, 462, 460,
	463, 464, 465, 0, 466, 450, 451, 467, 468, 0,
	469, 470, 557, 0, 471, 0, 472, 473, 474, 475,
	452, 476, 481, 558, 477, 478, 479, 480, 559, 0,
	483, 484, 0, 482, 0, 485, 486, 487, 488, 489,
	490, 315, 491, 0, 492, 560, 561, 562, 563, 0,
	499, 0, 493, 494, 564, 495, 565, 0, 496, 497,
	498, 0, 500, 501, 0, 0, 502, 503, 504, 506,
	507, 505, 508, 0, 509, 0, 0, 510, 511, 512,
	566, 567, 568, 238, 514, 513, 569, 0, 0, 0,
	0, 515, 516, 570, 517, 518, 519, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 521, 522, 0, 259,
	523, 260, 524, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 525, 526, 527, 0, 267, 268, 528,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	529, 530, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 531, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 534, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 535, 536, 328, 329, 0, 330, 537,
	0, 538, 0, 0, 332, 333, 334, 335, 336, 539,
	540, 541, 392, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 542, 543, 0, 544, 0, 347, 0, 545, 0,
	348, 349, 350, 0, 351, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 0, 358, 360, 359, 0, 361,
	546, 0, 362, 363, 0, 0, 364, 365, 366, 0,
	0, 367, 368, 369, 370, 0, 371, 372, 374, 376,
	373, 375, 380, 377, 378, 379, 382, 0, 381, 0,
	383, 384, 385, 388, 389, 387, 0, 386, 0, 0,
	0, 390, 0, 547, 391, 548, 393, 394, 0, 0,
	395, 0, 0, 0, 397, 398, 399, 0, 0, 400,
	401, 549, 0, 402, 0, 550, 403, 404, 396, 405,
	406, 0, 408, 409, 410, 411, 412, 0, 413, 414,
	551, 552, 553, 415, 554, 416, 417, 0, 418, 0,
	419, 420, 421, 422, 0, 424, 425, 555, 427, 426,
	428, 0, 0, 0, 0, 0, 0, 429, 0, 431,
	432, 433, 430, 434, 435, 436, 437, 0, 438, 439,
	440, 0, 441, 442, 443, 444, 556, 0, 0, 446,
	447, 453, 454, 448, 449, 455, 456, 457, 458, 459,
	0, 461, 462, 460, 463, 464, 465, 0, 466, 450,
	451, 467, 468, 0, 469, 470, 557, 0, 471, 0,
	472, 473, 474, 475, 452, 476, 481, 558, 477, 478,
	479, 480, 559, 0, 483, 484, 0, 482, 0, 485,
	486, 487, 488, 489, 490, 315, 491, 0, 492, 560,
	561, 562, 563, 0, 499, 0, 493, 494, 564, 495,
	565, 0, 496, 497, 498, 0, 500, 501, 0, 0,
	502, 503, 504, 506, 507, 505, 508, 0, 509, 0,
	0, 510, 511, 512, 566, 567, 568, 0, 514, 513,
	569, 0, 0, 0, 0, 515, 516, 570, 517, 518,
	519, 1585, 1586, 0, 1618, 1619, 1620, 1628, 1629, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 1616, 0, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 1585, 1586, 0, 1618, 1619, 1620,
	1628, 1629, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 1621, 1616, 0, 0, 0,
	0, 1607, 0, 1588, 0, 0, 0, 0, 0, 1604,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 1611, 1612, 1613, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 1635, 1610, 1611,
	1612, 1613, 0, 1615, 1617, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1632, 0, 0, 0, 0, 0, 0, 1602, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	1635, 0, 0, 0, 0, 1623, 1615, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 1631, 0, 1632, 0, 0, 0, 0, 0, 0,
	1602, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 1585, 1586, 0, 1618, 1619, 1620,
	1628, 1629, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 1626, 1621, 1616, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	1634, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 1599, 1600, 1606, 1627,
	1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592,
	1594, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	2786, 0, 0, 0, 0, 0, 0, 0, 1610, 1611,
	1612, 1613, 0, 0, 0, 1624, 0, 0, 1593, 1599,
	1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 2235, 0, 0, 0, 1625, 0, 0,
	1635, 0, 0, 0, 0, 0, 1615, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 1632, 0, 0, 0, 0, 0, 0,
	1602, 1603, 0, 0, 0, 1585, 1586, 0, 1618, 1619,
	1620, 1628, 1629, 1630, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 1621, 1616, 0, 1608,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 1586, 1609, 1618, 1619, 1620, 1628, 1629, 1630, 1610,
	1611, 1612, 1613, 0, 0, 0, 0, 0, 0, 1593,
	0, 1621, 1616, 0, 0, 0, 0, 1626, 0, 1588,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 1635, 0, 0, 0, 0, 0, 1615, 1617, 0,
	1587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 1631, 0, 1632, 0, 0, 0, 1604, 0,
	0, 1602, 1603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 1624, 0, 0, 0, 1599,
	1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 1633, 0, 0, 0, 3905,
	0, 0, 0, 0, 1610, 1611, 1612, 1613, 0, 0,
	0, 0, 1622, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 1635, 0, 0, 0,
	0, 0, 1615, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 1631, 0, 1632,
	0, 0, 0, 0, 0, 0, 1602, 1603, 0, 0,
	0, 1585, 1586, 1609, 1618, 1619, 1620, 1628, 1629, 1630,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 1621, 1616, 0, 1608, 0, 0, 1626, 0,
	1588, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 0, 1614, 0,
	1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597,
	1589, 1590, 1591, 1592, 1594, 1595, 0, 0, 1609, 0,
	3901, 0, 0, 0, 0, 1610, 1611, 1612, 1613, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 1585, 1586, 1626, 1618, 1619, 1620, 1628, 1629, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 1616, 1625, 0, 0, 1635, 0, 0,
	1588, 0, 0, 1615, 1617, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1632, 0, 0, 0, 0, 0, 0, 1602, 1603, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 1623, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 1624, 0, 0, 0, 1599, 1600, 1606, 1627, 1605,
	1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 1633, 0, 0, 0, 3812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 1611, 1612, 1613, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 1585,
	1586, 0, 1618, 1619, 1620, 1628, 1629, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	1621, 1616, 0, 0, 1625, 0, 0, 1635, 1588, 0,
	0, 0, 0, 1615, 1617, 1634, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1632, 0, 0, 0, 0, 0, 0, 1602, 1603, 1587,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 1623, 0, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 1611, 1612, 1613, 0, 0, 0,
	0, 0, 1624, 1593, 0, 0, 1599, 1600, 1606, 1627,
	1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592,
	1594, 1595, 0, 0, 0, 0, 3811, 0, 0, 1614,
	0, 0, 1625, 0, 0, 1635, 0, 0, 0, 0,
	0, 1615, 1617, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 1631, 0, 1632, 0,
	0, 0, 0, 0, 0, 1602, 1603, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 1599, 1600, 1606, 1627,
	1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592,
	1594, 1595, 0, 0, 0, 0, 3664, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 1586, 1609, 1618, 1619,
	1620, 1628, 1629, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1616, 0, 0,
	0, 0, 1626, 0, 1588, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 0, 1585, 1586, 0, 1618,
	1619, 1620, 1628, 1629, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1616, 0,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	1624, 0, 1634, 0, 1599, 1600, 1606, 1627, 1605, 1601,
	0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595,
	0, 0, 0, 0, 3535, 0, 1587, 0, 0, 1610,
	1611, 1612, 1613, 0, 0, 0, 1607, 0, 0, 1593,
	0, 0, 0, 0, 1604, 1585, 1586, 0, 1618, 1619,
	1620, 1628, 1629, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1616, 1625, 0,
	0, 1635, 0, 0, 1588, 0, 0, 1615, 1617, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 1632, 0, 0, 0, 0, 0,
	0, 1602, 1603, 0, 0, 1587, 0, 0, 0, 0,
	1610, 1611, 1612, 1613, 0, 1607, 0, 0, 0, 1623,
	1593, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1635, 0, 0, 1633, 0, 0, 1615, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 1631, 0, 1632, 0, 0, 0, 0,
	0, 0, 1602, 1603, 0, 0, 0, 0, 0, 1610,
	1611, 1612, 1613, 0, 0, 0, 0, 0, 0, 1593,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 1625, 0,
	0, 1635, 0, 0, 0, 0, 1633, 1615, 1617, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 1622, 1632, 0, 0, 0, 0, 0,
	0, 1602, 1603, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597,
	1589, 1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0,
	3479, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 1585, 1586, 0, 1618, 1619, 1620,
	1628, 1629, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 1616, 0, 1626, 0,
	0, 0, 0, 1588, 0, 0, 0, 1624, 0, 0,
	1634, 1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596,
	1597, 1589, 1590, 1591, 1592, 1594, 1595, 0, 0, 0,
	0, 3478, 0, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 1604, 1585, 1586, 0, 1618, 1619, 1620, 1628,
	1629, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1616, 0, 0, 0, 0,
	0, 0, 1588, 0, 0, 0, 1624, 0, 0, 1634,
	1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597,
	1589, 1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0,
	3477, 0, 0, 1587, 0, 0, 0, 0, 1610, 1611,
	1612, 1613, 0, 1607, 0, 0, 0, 0, 1593, 0,
	0, 1604, 1585, 1586, 0, 1618, 1619, 1620, 1628, 1629,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1616, 0, 0, 1625, 0, 0,
	1635, 1588, 0, 0, 0, 0, 1615, 1617, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 1632, 0, 0, 0, 0, 0, 0,
	1602, 1603, 1587, 0, 0, 0, 0, 1610, 1611, 1612,
	1613, 0, 1607, 0, 0, 0, 0, 1593, 1623, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 1635,
	0, 0, 0, 0, 1633, 1615, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 1622, 1632, 0, 0, 0, 0, 0, 0, 1602,
	1603, 0, 0, 0, 0, 0, 1610, 1611, 1612, 1613,
	0, 0, 0, 0, 0, 0, 1593, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 1625, 0, 0, 1635, 0,
	0, 0, 0, 1633, 1615, 1617, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 1631,
	1622, 1632, 0, 0, 0, 0, 0, 0, 1602, 1603,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 1599,
	1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589,
	1590, 1591, 1592, 1594, 1595, 0, 0, 0, 0, 3195,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1609, 1585, 1586, 0, 1618, 1619, 1620, 1628, 1629, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 1616, 0, 1626, 0, 0, 0, 0,
	1588, 0, 0, 0, 1624, 0, 0, 1634, 1599, 1600,
	1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590,
	1591, 1592, 1594, 1595, 0, 0, 0, 0, 2784, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 1604,
	1585, 1586, 0, 1618, 1619, 1620, 1628, 1629, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1616, 0, 0, 0, 0, 0, 0, 1588,
	0, 0, 0, 1624, 0, 0, 1634, 1599, 1600, 1606,
	1627, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591,
	1592, 1594, 1595, 0, 0, 0, 0, 2783, 0, 0,
	1587, 0, 0, 0, 0, 1610, 1611, 1612, 1613, 0,
	1607, 0, 0, 0, 0, 1593, 0, 0, 1604, 1585,
	1586, 0, 1618, 1619, 1620, 1628, 1629, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 1616, 0, 0, 1625, 0, 0, 1635, 1588, 0,
	0, 0, 0, 1615, 1617, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1632, 0, 0, 0, 0, 0, 0, 1602, 1603, 1587,
	0, 0, 0, 0, 1610, 1611, 1612, 1613, 0, 1607,
	0, 0, 0, 0, 1593, 1623, 0, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 1635, 0, 0, 0,
	0, 1633, 1615, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 1622, 1632,
	0, 0, 0, 0, 0, 0, 1602, 1603, 0, 0,
	0, 0, 0, 1610, 1611, 1612, 1613, 0, 0, 0,
	0, 0, 0, 1593, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 1625, 0, 0, 1635, 0, 0, 0, 0,
	1633, 1615, 1617, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 1631, 1622, 1632, 0,
	0, 0, 0, 0, 0, 1602, 1603, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 1599, 1600, 1606, 1627,
	1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592,
	1594, 1595, 0, 0, 0, 0, 2782, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 1585, 1586,
	0, 1618, 1619, 1620, 1628, 1629, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1616, 0, 1626, 0, 0, 0, 0, 1588, 0, 0,
	0, 1624, 0, 0, 1634, 1599, 1600, 1606, 1627, 1605,
	1601, 0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594,
	1595, 0, 0, 0, 0, 2781, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 1599, 1600, 1606, 1627, 1605, 1601,
	0, 1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595,
	0, 0, 2748, 1585, 1586, 0, 1618, 1619, 1620, 1628,
	1629, 1630, 1610, 1611, 1612, 1613, 0, 0, 0, 0,
	0, 0, 1593, 4025, 1621, 1616, 0, 0, 0, 0,
	2719, 0, 1588, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 1635, 0, 0, 0, 0, 0,
	1615, 1617, 0, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 1631, 0, 1632, 0, 0,
	0, 1604, 0, 0, 1602, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2720, 1608, 0, 1585, 1586, 0, 1618, 1619,
	1620, 1628, 1629, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1616, 1633, 0,
	0, 0, 0, 0, 1588, 0, 0, 1610, 1611, 1612,
	1613, 1634, 0, 0, 0, 1622, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 4024, 0, 0, 0, 1607, 1625, 0, 0, 1635,
	0, 0, 0, 1604, 0, 1615, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	1631, 0, 1632, 0, 0, 0, 0, 0, 0, 1602,
	1603, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 1610,
	1611, 1612, 1613, 0, 0, 0, 0, 0, 0, 1593,
	0, 2844, 0, 1633, 2843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 1635, 0, 0, 0, 0, 0, 1615, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 1632, 0, 0, 0, 0, 0,
	0, 1602, 1603, 0, 0, 0, 0, 0, 0, 1624,
	0, 1614, 0, 1599, 1600, 1606, 1627, 1605, 1601, 1623,
	1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0,
	1608, 1609, 0, 0, 0, 2355, 0, 0, 0, 0,
	0, 0, 1585, 1586, 0, 1618, 1619, 1620, 1628, 1629,
	1630, 0, 0, 0, 0, 1633, 1626, 0, 0, 0,
	0, 0, 0, 1621, 1616, 0, 0, 0, 2354, 0,
	0, 1588, 1622, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 1624, 0, 0, 0, 1599, 1600,
	1606, 1627, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590,
	1591, 1592, 1594, 1595, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 1585, 1586, 0, 1618,
	1619, 1620, 1628, 1629, 1630, 0, 1610, 1611, 1612, 1613,
	0, 0, 0, 0, 0, 0, 1593, 1621, 1616, 0,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 1635, 0,
	0, 0, 0, 0, 1615, 1617, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 1631,
	0, 1632, 0, 0, 1604, 0, 1624, 0, 1602, 1603,
	1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596, 1597,
	1589, 1590, 1591, 1592, 1594, 1595, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1610, 1611, 1612, 1613, 0, 0, 0, 0, 0, 1622,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1635, 0, 0, 0, 0, 0, 1615, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 1631, 0, 1632, 0, 0, 0, 0,
	0, 0, 1602, 1603, 0, 0, 0, 0, 1585, 1586,
	1609, 1618, 1619, 1620, 1628, 1629, 1630, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1616, 1608, 0, 0, 0, 1626, 0, 1588, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 1622, 916, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1614, 0, 0, 1599, 1600, 1606,
	1627, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591,
	1592, 1594, 1595, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1610, 1611, 1612, 1613, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 1585, 1586, 1626,
	1618, 1619, 1620, 1628, 1629, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1616,
	0, 1625, 0, 0, 1635, 0, 1588, 0, 0, 0,
	1615, 1617, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 1632, 0, 0,
	0, 0, 0, 0, 1602, 1603, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 1623, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 1608, 0, 0, 0, 1624, 0, 0,
	0, 1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596,
	1597, 1589, 1590, 1591, 1592, 1594, 1595, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 1611, 1612, 1613, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 2850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	1625, 0, 0, 1635, 0, 0, 0, 0, 0, 1615,
	1617, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 1632, 0, 0, 0,
	0, 0, 0, 1602, 1603, 0, 0, 0, 0, 0,
	0, 1626, 1585, 1586, 0, 1618, 1619, 1620, 1628, 1629,
	1630, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1621, 1616, 0, 0, 0, 2845, 0,
	0, 1588, 0, 0, 0, 3176, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1587, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 1599, 1600, 1606, 1627, 1605, 1601, 0,
	1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 1585, 1586, 0, 1618,
	1619, 1620, 1628, 1629, 1630, 0, 1610, 1611, 1612, 1613,
	0, 0, 0, 0, 0, 0, 1593, 1621, 1616, 0,
	1626, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 1635, 0,
	0, 0, 0, 0, 1615, 1617, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 1631,
	0, 1632, 0, 0, 1604, 0, 0, 0, 1602, 1603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 1624, 0,
	0, 0, 1599, 1600, 1606, 1627, 1605, 1601, 0, 1598,
	1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	1610, 1611, 1612, 1613, 0, 0, 0, 0, 0, 1622,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 1635, 0, 0, 0, 0, 0, 1615, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 1631, 0, 1632, 0, 0, 0, 0,
	0, 0, 1602, 1603, 0, 0, 0, 0, 1585, 1586,
	1609, 1618, 1619, 1620, 1628, 1629, 1630, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1616, 1608, 0, 0, 2785, 1626, 0, 1588, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 2812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1614, 0, 0, 1599, 1600, 1606,
	1627, 1605, 1601, 0, 1598, 1596, 1597, 1589, 1590, 1591,
	1592, 1594, 1595, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 1610, 1611, 1612, 1613, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 1585, 1586, 1626,
	1618, 1619, 1620, 1628, 1629, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1616,
	0, 1625, 0, 0, 1635, 0, 1588, 0, 0, 0,
	1615, 1617, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 1632, 0, 0,
	0, 0, 0, 0, 1602, 1603, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 1623, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 1608, 0, 0, 0, 1624, 0, 0,
	0, 1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596,
	1597, 1589, 1590, 1591, 1592, 1594, 1595, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 1611, 1612, 1613, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 1585, 1586, 0, 1618,
	1619, 1620, 1628, 1629, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 1616, 0,
	1625, 0, 0, 1635, 0, 1588, 0, 0, 0, 1615,
	1617, 0, 1634, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 1632, 0, 0, 0,
	0, 0, 0, 1602, 1603, 0, 1587, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 1623, 0, 0, 1604, 0, 0, 0, 0, 0,
	0, 0, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 1611, 1612, 1613, 0, 0, 0, 0, 0, 1624,
	1593, 0, 0, 1599, 1600, 1606, 1627, 1605, 1601, 0,
	1598, 1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 1625,
	0, 0, 1635, 0, 0, 0, 0, 0, 1615, 1617,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 1632, 0, 0, 0, 0,
	0, 0, 1602, 1603, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 0,
	0, 0, 1599, 1600, 1606, 1627, 1605, 1601, 0, 1598,
	1596, 1597, 1589, 1590, 1591, 1592, 1594, 1595, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 1599, 1600, 1606, 1627, 1605, 1601, 0, 1598, 1596,
	1597, 1589, 1590, 1591, 1592, 1594, 1595,
}
var sqlPact = [...]int{

	7431, -1000, -1000, -1000, -1000, 214, -1000, -1000, 213, 210,
	208, 206, 205, 196, 184, 181, -1000, -1000, -1000, -1000,
	-1000, -1000, 179, -1000, -1000, 178, -1000, 177, 175, 174,
	-1000, -1000, 173, -1000, 168, -1000, -1000, -1000, -1000, 167,
	165, 163, 73385, 72915, 73849, 2075, 88817, 77573, 2073, 65883,
	88347, 65413, 87877, 87407, 160, -1000, 86937, 159, 158, 156,
	-1000, 86467, -1000, 1969, -1000, 155, 3776, 54577, 151, 142,
	141, 2330, 137, -1000, 136, 134, -1000, 9928, 1414, -1000,
	133, 132, -1000, 7638, 276, 76639, 129, 128, 2212, 127,
	124, 54106, 121, 119, 2144, 2693, -1000, -1000, 1827, -1000,
	-1000, 118, 115, 113, 111, 109, 107, 106, 105, 104,
	103, -1000, 102, 101, 99, 96, 95, 93, 91, 89,
	-1000, 86, 80, 79, 77, 76, 75, 73, 69, 68,
	67, 65, 64, -1000, 9488, 63, 1707, 1518, 1517, 1514,
	1513, 1512, 940, 62, 61, 56, 53, 51, 50, 49,
	45, 44, -1000, 41, 39, 38, 35, 34, 33, 32,
	31, 143, 30, 25, 23, 18, 15, 2, -1, 2964,
	-1000, 1522, 1497, 25296, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	94385, 89281, -2, -100, -3, -1000, 3003, 975, 45144, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 304, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 505, 1749, 731, -1000, -1000, -1000, 86003,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2072, -43,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 729, -1000, 2067,
	257, 1999, -1000, -1000, -1000, -1000, -1000, 89281, -1000, -1000,
	3439, 3434, 1818, 726, 85539, -1000, 1479, -1000, 888, 28272,
	-1000, 1206, -1000, 28272, 293, -1000, -1000, -1000, -1000, -1000,
	-1000, 3431, 3429, 3428, 3426, -1000, -1000, 64943, 19314, 64473,
	64003, 85069, 18834, 72445, 71975, 84599, 60257, -1000, -1000, -1000,
	1288, -1000, -1000, -1000, -1000, -1000, -1000, -24, 57857, 3246,
	89281, -1000, 292, -1000, -1000, -1000, -1000, -1000, -1000, 38356,
	1060, 37850, 979, 37344, 775, -1000, -1000, -1000, 59777, -1000,
	3424, 3422, 1037, 3421, 2954, 93921, 1623, 3420, 1737, 1123,
	959, 3418, 3417, 3416, 3415, 3413, 3412, 1292, 84129, 2675,
	83659, 1519, 59297, 71505, 73849, 2421, 83189, 1274, 1255, -1000,
	-1000, -1000, -1000, 2778, 2655, 2627, 50834, -1000, -1000, 3411,
	3409, 3408, 3407, 3406, 93457, 1600, 3405, 2255, 3404, 3402,
	3400, 3399, 3396, 3395, 3394, -1000, 71035, 70565, 70095, 3090,
	82719, 69625, 82249, 58817, 36838, 1483, -1000, -1000, -1000, 47038,
	5126, 4973, 81779, 48957, 73849, 73849, -1000, -1000, -1000, -1000,
	-1000, 36332, 561, 35826, 1258, -1000, -1000, 47523, 2614, -1000,
	-1000, -1000, -1000, 35320, 265, 34814, 1027, 89281, -1000, 2674,
	1697, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2050, 1489, 3255, 58337, 1879, 1280, 3020,
	2776, 2773, 1375, 3390, 2315, 2772, 2770, 2764, 2753, 2743,
	1741, 2380, 882, 24790, 2644, 1595, 34308, 1420, 1372, 2708,
	2706, 3268, 1800, 1798, 1808, 63533, 3387, 3386, 2986, 2705,
	2699, 2613, -1000, -1000, -1000, -1000, 1333, -1000, -1000, -1000,
	-1000, -1000, 66811, -1000, -1000, 1158, -1000, -1000, 1158, -1000,
	-1000, -1000, -1000, -1000, 1215, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1522, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2037, -1000, 1780,
	-1000, -1000, 2270, 2980, 2980, 2980, 3055, 469, 457, -1000,
	143, -1000, -1000, 100246, -1000, -1000, 38850, 38850, 38850, 38850,
	38850, 38850, 38850, 1944, -1000, 725, -1000, -1000, 766, -1000,
	724, 590, -1000, -1000, -1000, -1000, -1000, -1000, 723, -1000,
	-1000, -1000, -1000, -1000, -1000, 3246, -1000, 21766, -1000, -1000,
	-1000, 416, 721, 38850, -1000, -1000, 3284, 3282, 904, -1000,
	290, 897, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2673, 719, 718, -1000, 717, 716,
	715, 714, 712, -1000, -1000, -1000, 711, 710, 707, 706,
	705, 701, 698, 693, -1000, 1825, -1000, -1000, -1000, -1000,
	-1000, -1000, 633, 631, 631, 631, -1000, 951, -1000, -1000,
	-1000, 311, 630, 286, 626, 625, 623, 692, 687, 686,
	684, 680, 679, 676, 673, 672, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 950, -1000, -1000, -1000, -1000, -27, 89281, -1000,
	505, -27, -1000, -1000, 670, -1000, 28766, 28766, 28766, -1000,
	-1000, 2065, 38850, -1000, 2495, -1000, -15, -15, 851, 46082,
	-1000, 44188, 851, 403, 774, 50363, -1000, 2612, -1000, -1000,
	669, 275, -1000, -1000, -1000, -1000, 19792, 2611, 89281, 89281,
	73849, 73849, 73849, 2906, 38850, -1000, -1000, 55041, 89281, 74313,
	3193, 55969, 55041, 89281, 2671, -1000, -1000, -1000, 89281, -1000,
	38850, -1000, 3190, 1334, 61203, 3100, -35, -1000, -1000, -1000,
	-1000, -1000, -1000, 2222, 2346, 1077, 2102, 1738, -1000, 28272,
	2946, -1000, -1000, -1000, 273, 19792, -1000, -1000, -1000, -1000,
	-1000, 2115, 2859, 1687, -1000, 2095, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1648, 2858, -1000, 3139, 2857,
	1642, -1000, -1000, 2013, -1000, -1000, 2983, -1000, -1000, 1803,
	2856, -14, -1000, -1000, 2195, -1000, -1000, 1889, -1000, -1000,
	918, 2846, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48479, 47523, 57857, -31, -1000, -1000, -1000, -1000, -44,
	-1000, 18354, 100246, -1000, -1000, -1000, -1000, 1608, 100246, 850,
	-1000, -1000, 2845, -1000, 100246, 843, -1000, -1000, 2842, -1000,
	2647, -1000, -1000, -1000, -1000, 3384, -1000, 3382, 2170, 3380,
	3379, 3377, -1000, 1508, 1819, 3372, -1000, 3371, -1000, -1000,
	-1000, -1000, -1000, -1000, 69155, 2064, -1000, -1000, 68215, -1000,
	2169, -1000, 68685, 958, -1000, 918, 2165, -1000, 920, -1000,
	3369, 3079, 2444, 918, 2164, -1000, -1000, -1000, -1000, -1000,
	52235, -1000, 52235, -1000, 52235, -1000, 1438, -1000, 92993, -15,
	-15, 3246, -1000, -1000, -1000, -1000, -1000, 2837, 3361, 3351,
	3346, -1000, 89281, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	199, 2834, -1000, -1000, 199, 2833, -1000, 199, 2831, -1000,
	76169, -1000, -1000, 2074, 2826, -1000, 195, 2825, -1000, -1000,
	192, 2823, -1000, -1000, -72, 2819, -1000, -1000, 100246, -1000,
	-1000, -1000, -42, -1000, -1000, -1000, 975, -1000, 46553, -1000,
	46553, 81309, 60735, 906, 699, 53635, 100246, -1000, -1000, -1000,
	-1000, 100246, -1000, -1000, -1000, -154, -1000, -1000, 60735, 47523,
	100246, -1000, -1000, -1000, -1000, 100246, -1000, -1000, -1000, 60735,
	68215, -1000, 80839, 67751, -1000, -1000, 1291, 2274, -1000, -1000,
	-1000, 906, 60735, 60735, 60735, -1000, 80369, -1000, -1000, 1850,
	1712, 2989, 1810, 73849, -1000, 1708, -1000, -1000, -1000, 3005,
	-1000, 2645, -1000, 55505, 75705, -1000, 75241, -1000, 74777, -1000,
	73849, -1000, 73849, -1000, 3344, 3341, 3335, -1000, 3334, 2998,
	-1000, 100246, 2996, -1000, 3333, 3097, 2644, 100246, -1000, 2783,
	1504, 1496, 89281, -1000, -1000, 89281, -1000, 89281, -1000, -1000,
	-1000, 1336, -1000, -1000, 2218, -1000, -1000, -1000, -1000, 73849,
	-1000, -1000, -1000, -1000, -1000, -1000, 2643, -1000, 1557, -1000,
	1699, -1000, 1286, -1000, -1000, 200, -1000, -1000, -35, -1000,
	92529, -1000, 2270, -1000, 89281, -1000, 2269, 2631, 2638, 1688,
	2088, 2303, -1000, 33802, 2326, 41320, 2094, 143, -1000, -1000,
	143, 143, 26284, -1000, -1000, 55969, 55969, 19792, 1244, 38850,
	38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850,
	38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850,
	38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850, 38850,
	38850, 38850, 38850, 38850, 2058, 38850, 1155, 38850, 38850, 38850,
	38850, 1659, -1000, -1000, 1770, 535, 1864, -1000, 3234, 3234,
	3234, 1259, 1259, 100405, 100405, 571, 3331, 766, -1000, 38850,
	-1000, 117, 38850, 20272, -1000, 457, 8019, 2208, -1000, 450,
	20778, -1000, -1000, -1000, 21766, 590, 33296, 38850, 943, 100246,
	-1000, -1000, 1727, 3250, 17876, 2634, 2519, 653, 788, 770,
	24284, 23778, 23272, 22766, 733, 38850, 38850, 38850, 38850, 38850,
	38850, 38850, 38850, -1000, -1000, 3261, -1000, 3250, -1000, -1000,
	-1000, -1000, 3250, 1230, 1127, 3250, -1000, 3250, 3250, 3056,
	3056, 32802, 32296, 31790, 41814, 31284, 38850, 22260, 30778, 30272,
	-1000, 89281, -27, 3185, 38850, 228, -1000, 98991, -1000, 228,
	228, 652, -52, 100246, 2385, 2385, 45613, 2049, 1977, 1977,
	1977, -1000, 851, 14023, 851, 79437, 1972, 851, 851, 268,
	302, 448, 43719, 2495, 79437, 745, 646, -4, -5, -7,
	-1000, -1000, -8, -9, -1000, -1000, 73849, 645, 20272, 19792,
	258, 1343, -53, 2401, 2396, 2393, -1000, 2391, 1644, -58,
	1151, -164, -1000, 432, -60, -1000, 1231, 254, 3250, -1000,
	-1000, -1000, -1000, -1000, 3330, 3327, -1000, 946, 642, 637,
	816, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 633,
	631, 631, 631, -1000, 311, 630, 286, 626, 625, 623,
	-1000, -1000, -1000, -1000, 2600, -44, 74313, 841, -61, 1048,
	-35, -1000, -1000, -1000, 61203, 1158, -1000, 1849, -1000, -1000,
	-1000, -1000, -1000, -1000, 1319, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 904, -1000, -1000, -1000, -1000, -1000, -1000, 3243,
	3241, -28, -1000, -1000, 19792, -1000, -39, 1586, 1584, -1000,
	63063, 2178, 2990, 2966, 1418, -1000, 1335, 3054, 66811, 3127,
	3188, 634, -1000, 2597, -1000, -1000, 871, 1540, 1581, 1150,
	66811, 3139, -1000, 55969, -1000, 2381, 3043, 1298, 1295, 1298,
	1298, 1306, -1000, 66811, 1556, 1141, -1000, 1132, -1000, -40,
	3112, 3184, 215, -1000, 2594, 1128, -1000, -1000, 73849, 19792,
	1399, 1389, 1531, 1125, -29, -1000, 3110, 3109, 1124, 1104,
	-1000, 1609, -1000, 60735, 847, 2482, 847, -31, 57857, 89281,
	251, -1000, 117, 38850, 38850, 117, 38850, 117, 3087, -1000,
	-1000, 2816, -1000, -1000, -1000, 3326, 1791, 2252, -1000, -1000,
	-1000, 622, 2163, 2593, 89281, 2389, -32, 73849, -1000, 2815,
	3139, 2162, -1000, -1000, 67281, -1000, 2810, 627, 3325, -1000,
	92065, -1000, 2993, 1257, 2808, 997, 730, 3182, -1000, 730,
	52699, -1000, 89281, -1000, -1000, 89281, -1000, -1000, -1000, 3324,
	-1000, 73849, -1000, -1000, 73849, -1000, 73849, -1000, 73849, 189,
	2802, -1000, -1000, 89281, -1000, 73849, 73849, -1000, 89281, 89281,
	60735, 60735, 1013, 62135, -66, -69, 437, -1000, 79905, 89281,
	995, 62599, 89281, 2935, 906, 47523, -1000, -76, -154, 2481,
	906, 906, 847, -1000, 847, -1000, 73849, 2637, -1000, 906,
	906, 906, -1000, -1000, -1000, -1000, 3322, 3321, -1000, -1000,
	-1000, 917, 73849, 89281, 73849, -1000, -1000, 89281, -1000, 89281,
	-1000, 917, 89281, 917, 89281, 917, 89281, -1000, -1000, -1000,
	-1000, -1000, -1000, 117, 38850, -1000, -1000, 3317, 1469, -1000,
	2636, -1000, 2635, -1000, 21, -1000, -1000, -1000, -1000, -1000,
	1860, 73849, 73849, 73849, 73849, 89281, 73849, -1000, 66811, -1000,
	2269, 2631, -1000, -1000, -1000, -1000, -1000, -1000, 1272, 2022,
	-1000, 2345, -1000, 1359, -1000, -1000, -1000, 100246, 42292, -1000,
	-1000, 100246, 1633, -1000, 40826, 40332, -1000, -1000, 1470, 73849,
	2406, -1000, 2406, -207, -1000, 98622, 2342, 73849, -1000, -1000,
	-1000, -1000, -1000, 865, 1374, 1374, 1161, 1161, 1161, 1161,
	3107, 5638, 402, 5167, 5718, 5718, 4799, 4799, 4799, 4799,
	4799, 5718, 1053, 1259, 1259, 1053, 1053, 1053, 1053, 1053,
	1259, 1259, 1259, 5718, 5718, 5718, 100405, 6541, 7276, 38850,
	38850, 1103, 1766, 535, 6653, 38850, 6421, 6421, 6421, 6421,
	-1000, 1971, -1000, -1000, -1000, -1000, 2586, 621, 41814, 41814,
	-1000, -1000, -1000, -1000, 21272, 38850, -1000, -1000, -1000, -1000,
	29766, -1000, -1000, 98128, -268, 435, -194, -36, -1000, 38850,
	38850, 38850, 434, -1000, 248, 38850, 89281, -1000, 95363, 742,
	-79, -1000, -84, 1266, -1000, 38850, -1000, -1000, 1102, -1000,
	1100, 1097, 1093, -1000, 618, 433, -1000, 239, -1000, 1962,
	617, 615, 38850, -1000, -1000, -1000, -1000, -1000, 98049, -1000,
	-1000, 97970, -1000, -1000, 97611, -1000, -1000, 97532, -1000, -1000,
	-1000, 100087, 95320, 13223, 13173, 4439, 12654, 12218, -89, 429,
	-90, 419, 864, 857, 414, 412, 411, -91, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -105, 410, -1000, 2584,
	-194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 408,
	-1000, 406, -1000, 99865, -194, 405, 6221, -1000, 41814, 41814,
	41814, -1000, 400, -1000, 98734, -1000, 99731, 29272, 29272, 29272,
	399, 99506, 38850, -194, -107, -1000, -110, -1000, -1000, 494,
	-113, 931, 28766, 44673, 19792, -1000, 931, 931, 38850, -1000,
	38850, 2370, -1000, -1000, -1000, 2361, 1607, 2385, 45613, -1000,
	-1000, -1000, -1000, 79437, -1000, 3246, 2530, -1000, 79437, -1000,
	-1000, 89281, 505, -1000, 79437, 79437, 19792, 851, -1000, 851,
	79437, 585, -1000, -1000, -1000, -1000, -1000, 382, 49425, -36,
	236, 19792, 918, -1000, 2387, 2387, 2387, 2387, -1000, -1000,
	89281, 3211, -1000, 1837, -1000, 55969, -1000, 763, 1162, 19792,
	-1000, -1000, -1000, 613, -1000, 3250, 3250, -1000, 3250, 89281,
	92, 28272, -1000, 1158, -1000, -1000, 1393, -1000, 1811, -1000,
	1081, -1000, -1000, -1000, -1000, 28272, -1000, 2632, 89281, 89281,
	73849, -1000, 89281, -1000, 2160, 91601, 2154, 55969, 89281, -1000,
	-1000, 611, 602, 2335, 2318, 991, 89281, 89281, 2294, 91137,
	90673, 89281, 1924, 38850, 2009, 2030, 117, 117, -1000, -1000,
	117, 599, 1236, 73849, 73849, 89281, 73849, 1628, -1000, -1000,
	-1000, -1000, -1000, 66347, -1000, -1000, 3260, 3258, -1000, 1298,
	-1000, -1000, -1000, 1298, 3139, 1614, 89281, 73849, 89281, 1867,
	117, 117, -1000, -1000, 117, 596, 19792, 1797, -1000, 2678,
	89281, 3281, 89281, 89281, 89281, 57393, 2978, 90209, 89281, 89281,
	57393, 1609, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56925,
	1005, 918, 915, 47523, 2450, -1000, -1000, 17398, -1000, 100246,
	100246, -1000, 100246, -1000, 55041, 89281, -1000, 957, 89281, 62599,
	905, 2794, 51771, -44, 906, 60735, 73849, -32, 89281, -1000,
	3139, 2787, 505, 2152, -1000, -1000, 60735, 595, 3314, 3313,
	-1000, 2057, 2150, -1000, -1000, 89745, 2870, 810, 89281, 931,
	45613, 1750, -1000, 49895, 972, 89281, 1721, 85, -1000, -1000,
	-1000, 14, 89281, -1000, 3311, -1000, -1000, 199, 199, 199,
	-1000, 73849, 73849, 2074, -1000, 195, -1000, 192, -1000, -72,
	-1000, -1000, 1013, 1013, 906, -212, 593, -1000, 844, 839,
	48001, 60735, -116, -1000, -1000, -1000, -1000, -1000, 73849, 89281,
	685, 2443, 89281, -118, -1000, 232, 591, -1000, -1000, -1000,
	906, 47523, 2579, -1000, -1000, 924, -1000, 1282, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -16, -44, -44,
	-1000, 917, -1000, 917, -1000, 917, -1000, 100246, -1000, -1000,
	1462, 1458, 89281, -1000, 19792, 89281, 73849, 19792, 73849, 2628,
	2623, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014,
	-1000, 1633, 2011, -1000, 590, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2209, -1000, -33, 26284, 2105, -1000,
	-1000, 73849, -17, 38850, 38850, 5539, 4749, 38850, 41814, 41814,
	-1000, 38850, 4641, -1000, -1000, -1000, -1000, -1000, 2578, 589,
	38850, 55969, 5687, 5494, -1000, 381, 11993, 1053, -1000, 38850,
	-1000, 379, 27778, -1000, 99125, -49, -121, -1000, 14514, -194,
	-123, -1000, -1000, 762, -1000, 2867, -1000, 38850, 99347, 2188,
	1822, 1731, 1481, 3250, 3280, 16920, -1000, 53167, 932, 1985,
	97453, -1000, -1000, -1000, -1000, 55969, 55969, 38850, 38850, -1000,
	38850, 38850, 38850, -1000, -1000, -1000, 3250, 873, -1000, -1000,
	-1000, 873, -1000, -1000, 1298, -1000, 1298, -1000, 38850, -1000,
	-1000, 2576, 38850, -1000, 55969, 55969, 41814, 41814, 41814, 41814,
	41814, 41814, 41814, 41814, 41814, 41814, 41814, 41814, 41814, 41814,
	41814, 41814, 41814, 41814, 41814, 2197, 41814, 3227, 3227, 3227,
	-1000, 2566, 2576, 38850, 38850, 55969, 377, 375, 371, -1000,
	38850, -194, -1000, -1000, 1013, 587, -1000, 2196, -1000, 2518,
	-1000, 38850, -1000, -98, -1000, 2495, -1000, -1000, 2518, 2518,
	-126, 100246, 45613, 45613, -1000, 584, 38850, 2357, -1000, -1000,
	741, -266, -1000, 837, -1000, -1000, -1000, -1000, -1000, 505,
	-1000, -1000, -1000, 219, 79437, 79437, 740, -1000, -128, -1000,
	-1000, -129, -1000, 3181, 370, 19792, -1000, -1000, 2988, -1000,
	-1000, -1000, -1000, -1000, -1000, -44, 1998, 3278, -1000, 3256,
	758, 739, 216, 3250, 367, 365, 364, -44, 89281, -1000,
	-35, -1000, -1000, -1000, 38850, -1000, -1000, 2972, 1092, 1089,
	-1000, -1000, 2780, -1000, 2147, -1000, 977, -1000, 1854, -1000,
	38850, 38850, 583, 582, 3310, 1673, 3309, 992, 2766, 2074,
	2742, 2074, -1000, -1000, 893, -1000, 100246, 570, 569, -1000,
	-39, 1582, 1500, 922, -1000, -1000, 38850, 38850, 78973, -1000,
	395, 2983, -18, -1000, -1000, 1495, 1088, -1000, -1000, -1000,
	-1000, 3139, 1491, 1087, -1000, -1000, -1000, -1000, 921, -1000,
	-1000, 38850, -1000, -40, 1079, 3095, 2142, 73849, 1078, -1000,
	1075, -1000, -1000, -1000, -1000, -1000, -1000, 3103, 2074, 2741,
	1083, -1000, -1000, -1000, -1000, -1000, 56447, -1000, -1000, 2131,
	847, 915, 2570, -1000, 1074, 3308, 73849, 3304, 359, -131,
	-41, 55969, 3173, 2042, 576, 73849, 891, -1000, 3246, -1000,
	-1000, -1000, -1000, 73849, 3166, 2733, 918, 3276, -1000, -1000,
	73849, 2731, 2056, 2139, 2235, 810, 61671, -1000, 918, 1983,
	-71, -1000, 1721, 27272, 2979, -134, -1000, -1000, -1000, 931,
	52699, 45613, 38850, 3303, -139, -1000, -1000, -1000, -1000, -1000,
	189, -1000, -1000, -1000, -1000, -1000, -1000, 78041, 78041, 60735,
	60735, 60735, 906, 89281, 89281, 62599, -1000, 565, 89281, 89281,
	558, -1000, 89281, 89281, 3302, 60735, -1000, -154, 117, -1000,
	1996, 73849, 16442, -1000, -1000, -1000, -1000, -1000, 917, -1000,
	-1000, 1882, 2092, 1882, 1667, 1663, -1000, 2002, -1000, -1000,
	-1000, -1000, 2320, 2994, 19792, 3126, 6421, 38850, 38850, 362,
	5454, 1814, 6421, 38850, 38850, 55969, 4360, -142, 38850, 38850,
	-1000, 38850, 738, 100246, 3275, 38850, 358, 348, -1000, -1000,
	-1000, 3248, -1000, -1000, -1000, 100246, 38850, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 342, -1000, 201, -1000, -1000, -1000,
	94849, -1000, 38850, 341, 3042, -1000, 339, 338, 10767, 497,
	97094, 97015, 96934, 335, -1000, -1000, 329, 327, 100246, 2566,
	100246, -1000, -1000, 912, 912, 1267, 1267, 1267, 1267, 3227,
	1875, 666, 790, 451, 451, 451, 523, 1072, 1072, 451,
	451, 451, 2565, 2254, 555, 6740, -1000, -1000, 100246, 100246,
	326, -1000, -1000, -1000, -194, 324, 1013, -1000, 2506, 3038,
	100246, -1000, 45613, 2506, 2506, -1000, -1000, 1607, 89281, 100246,
	45613, -1000, 2530, -1000, 15003, -1000, 19792, -1000, -1000, -1000,
	-1000, 3246, -1000, 49425, -1000, 554, -1000, 144, 2988, -1000,
	836, -1000, -1000, -1000, 734, 3300, 751, 19792, 322, -1000,
	-1000, -1000, -44, 100246, 89281, 89281, 89281, 2728, -1000, 4062,
	-1000, 991, 96578, -144, -1000, 98622, 38850, 89281, -1000, -1000,
	1635, 2334, 1031, -1000, 3010, 89281, -1000, 89281, -1000, -1000,
	89281, 89281, 73849, 89281, 2709, -145, 100246, -45, -1000, 834,
	-1000, 1279, -1000, 15964, 89281, 73849, 89281, 73849, 2707, -147,
	19792, -1000, 3274, 3271, 2727, 3017, 3270, 89281, -1000, 89281,
	73849, 2934, -1000, -1000, -51, 553, -1000, 832, -1000, -1000,
	827, 915, -1000, 60735, 47523, -1000, 505, -1000, 2435, -1000,
	77103, 2007, 117, -1000, 78509, 3299, 551, -1000, 1995, -1000,
	667, 3139, 117, 73849, -1000, 321, -54, -1000, 983, 19792,
	73849, 2722, 2240, 810, 61671, -1000, 1257, 2303, -1000, -63,
	-1000, 525, 117, 1983, -1000, -71, 100246, -1000, 820, -1000,
	-1000, -152, -1000, -1000, 309, -1000, 2933, 2931, -1000, 2521,
	38850, 550, 549, 89281, 2930, -1000, -1000, -153, 906, -1000,
	2181, -1000, -1000, -1000, -1000, -1000, 19792, 1480, -1000, 547,
	546, -1000, -1000, -1000, -1000, 2994, 6421, 6421, 38850, 38850,
	38850, 6421, 4360, -155, -1000, 6421, 6421, -194, -1000, -1000,
	99125, -1000, -1000, -1000, 100246, -1000, 15486, 1905, -1000, 96420,
	-1000, 26284, -1000, -1000, 38850, 38850, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 41814, 2561, 543, 55969, -1000, -1000,
	308, 929, 38850, 38850, 2495, 929, 929, -1000, -158, -1000,
	-1000, -1000, 3246, 144, -1000, -1000, 3297, 19792, -1000, 60735,
	748, -1000, 3296, -1000, -1000, -1000, -1000, -1000, 89281, -1000,
	89281, -1000, 19792, 89281, 2549, 2123, -1000, -1000, 2283, 542,
	41814, 73849, 821, -1000, 3196, 2505, 1787, 38850, 2105, -163,
	-165, 2120, -1000, -1000, 2108, 38850, -1000, 55969, 540, 2074,
	2074, -166, -168, -1000, -1000, 38850, 1073, 89281, 26778, -1000,
	3294, 2983, -1000, -1000, -1000, -1000, 38850, 1066, -1000, -1000,
	-1000, 3267, 2074, 19792, -1000, 2074, 2074, 3017, 1024, 2205,
	2205, 60735, 47523, -1000, -72, 915, 3158, 1867, 2479, -1000,
	-1000, -1000, -1000, 2268, -1000, -1000, 89281, 2261, 908, -171,
	-1000, 814, 812, -1000, 62599, 905, 869, -1000, -1000, -1000,
	505, -1000, 3266, 538, 89281, 2053, 537, 19792, -1000, 810,
	61671, -1000, 2870, 1721, -1000, 2878, 89281, 2963, -1000, 2303,
	535, -1000, 906, 534, 533, 3141, 3141, -173, 38850, 38850,
	-174, 532, 906, -1000, -81, -1000, 792, 598, -1000, -1000,
	73849, 73849, 38850, 38850, -1000, 6421, 6421, 6421, -1000, 306,
	-1000, -1000, 1983, 3037, -1000, -82, 96260, 96039, 473, 41814,
	55969, -179, -1000, -1000, 89281, 100246, -194, -1000, -1000, -1000,
	474, -1000, -1000, 3293, -1000, -1000, 1898, -1000, -1000, -1000,
	89281, 2138, -1000, 988, 38850, 6740, 529, 38850, -1000, 3155,
	-1000, 2428, 2563, 2435, 527, -1000, -1000, -1000, -1000, -1000,
	982, 1761, -1000, -1000, 100246, 3017, 38850, -1000, -1000, 526,
	522, 100246, 520, 807, 2545, -1000, -1000, -1000, 100246, 508,
	3095, -1000, -1000, -1000, -1000, 2074, 73849, -1000, -181, -1000,
	-1000, 1785, 117, 905, -1000, 1915, 2007, 507, -1000, -1000,
	2025, 2344, -1000, 78509, 43248, 43248, 303, 3147, 869, -1000,
	3233, -1000, 3138, -1000, 38850, -1000, 73849, 38850, 2048, 61671,
	-1000, 2235, -1000, 1203, -182, 89281, 1721, -1000, -1000, 60735,
	60735, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 982, -184, -187, -1000, 60735, -1000, 2181, -1000,
	89281, -1000, 89281, -1000, -1000, -189, -192, -1000, 1843, 38850,
	26284, -1000, -1000, 473, -197, -1000, -103, -1000, 3136, -1000,
	-1000, -1000, -1000, 2721, 2504, 95904, 2153, 89281, 95683, -1000,
	2562, -1000, -1000, 1867, 89281, 2435, 2499, 73849, 987, -198,
	1882, 1882, 38850, 25790, 1914, 38850, -1000, -1000, 3017, -1000,
	2532, 3238, -1000, 2025, 73849, 89281, -1000, 3002, -1000, 2929,
	-1000, -1000, -1000, 2435, 117, -1000, -1000, 117, -209, 983,
	-210, 73849, -1000, 2240, 1365, -1000, 931, -1000, -1000, -211,
	-216, 1787, 982, 931, -217, -1000, -218, -219, -1000, -1000,
	287, 39838, 39838, 39838, -194, -207, -1000, 89281, 506, 2694,
	914, -1000, 2031, 1722, 16, 996, -1000, -1000, 2505, -224,
	-1000, 913, 505, -1000, 38850, 982, -225, -1000, 971, -227,
	-1000, 969, -230, -1000, 2541, -1000, -233, 2074, 909, 3081,
	-1000, -1000, -1000, -1000, 504, -235, -1000, -1000, 2206, -1000,
	1867, 908, -1000, 982, 503, 1787, 500, -1000, 52699, -1000,
	906, 906, 2435, 1787, -1000, 906, -1000, -1000, -1000, 2775,
	-1000, 42770, 2040, 1661, 98487, 2775, 2775, -1000, -1000, 89281,
	3061, -1000, 2035, 2033, 1344, -1000, -1000, -1000, -1000, -1000,
	-1000, 931, -1000, 3060, 2153, 100246, 2435, -1000, 1882, 2477,
	-1000, 1882, 2539, -1000, 1909, -1000, -1000, -1000, 2717, 3231,
	89281, -1000, 89281, 1638, 1616, 3289, 905, 2025, 1787, 38850,
	2435, 38850, -226, -1000, -1000, 1867, 2435, -1000, -1000, 1813,
	3202, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 789,
	-1000, 2915, -1000, 1012, 1833, 1833, -1000, 786, 2031, -1000,
	-1000, 496, -1000, 495, -1000, 1603, -1000, -1000, -236, -1000,
	-1000, 3288, -1000, 2025, -1000, 2435, -238, 1867, -241, -1000,
	931, 1867, 1660, -1000, -1000, 1980, 39344, 38850, -1000, 3215,
	-1000, -1000, 2292, -1000, 38850, 2505, 38850, 38850, 1990, 2028,
	-1000, -1000, 1867, 982, 931, 1787, -1000, 931, -1000, -1000,
	-1000, 100246, -1000, -1000, -1000, 100246, -1000, -246, -249, 51303,
	-1000, -1000, -1000, 931, 1787, -1000, 2435, -1000, 1867, 1055,
	-212, 78041, -1000, 2435, 1867, -1000, 471, -254, 1867, 931,
	38850, -1000, 931, -1000, -257, -1000, 1867, -1000,
}
var sqlPgo = [...]int{

	0, 4053, 4052, 4051, 4049, 4048, 4046, 4045, 4044, 4043,
	4040, 4039, 4038, 4036, 4033, 4032, 4029, 4026, 4024, 4023,
	4022, 4021, 4020, 4018, 4017, 4015, 4008, 4006, 4005, 4001,
	3998, 3997, 3996, 3990, 3989, 3988, 3986, 3985, 3984, 3980,
	3979, 3978, 3977, 3974, 3972, 3968, 3965, 3964, 3960, 3958,
	3956, 3955, 40, 3954, 3953, 3950, 3949, 3948, 3946, 3945,
	3944, 3943, 3942, 3941, 3939, 3938, 3936, 3935, 3934, 3933,
	3932, 43, 3931, 235, 3928, 3922, 3920, 3918, 3917, 3916,
	3914, 3912, 3911, 3908, 3903, 3901, 233, 3900, 128, 3899,
	3898, 3897, 3896, 3891, 232, 3890, 3889, 3888, 3885, 239,
	3881, 3879, 3877, 3876, 3875, 3873, 3872, 3871, 3870, 60,
	127, 3866, 61, 3865, 3864, 3863, 3860, 3859, 3858, 3857,
	3854, 3853, 3848, 214, 3847, 229, 3842, 3841, 3840, 3836,
	3834, 3833, 3831, 3830, 3829, 3824, 3823, 3820, 3819, 3818,
	3809, 3808, 3807, 3806, 3798, 3795, 3794, 3793, 3788, 3787,
	3785, 3784, 3779, 3776, 3775, 3771, 3769, 236, 155, 3764,
	3763, 228, 226, 3762, 3761, 3758, 3752, 3751, 96, 16,
	31, 3748, 3744, 73, 80, 71, 3740, 81, 3739, 94,
	51, 3738, 9, 132, 208, 8062, 198, 3733, 3732, 3731,
	202, 163, 3730, 206, 3728, 3727, 3726, 3725, 70, 64,
	147, 158, 143, 140, 240, 3723, 3720, 76, 54, 42,
	35, 3719, 3718, 3716, 3004, 91, 3715, 223, 205, 135,
	3713, 3712, 3710, 1541, 3702, 33, 3700, 598, 75, 107,
	22, 95, 3699, 125, 23, 3697, 148, 39, 3696, 123,
	74, 63, 8105, 3862, 3694, 110, 52, 93, 696, 151,
	139, 170, 103, 168, 181, 180, 146, 893, 3691, 216,
	3688, 3146, 49, 130, 3682, 3681, 3680, 57, 166, 78,
	3679, 3675, 50, 1, 20, 11, 159, 10, 89, 14,
	3673, 12, 3668, 3667, 3655, 3647, 24, 133, 3638, 237,
	3636, 109, 38, 18, 3634, 34, 178, 3633, 188, 100,
	3632, 3631, 221, 171, 157, 3628, 120, 193, 3625, 3624,
	3623, 3622, 3617, 111, 21, 108, 3616, 3613, 119, 201,
	167, 3608, 48, 3606, 142, 79, 116, 238, 97, 196,
	86, 187, 160, 190, 3605, 3604, 3602, 162, 3601, 3600,
	185, 145, 3599, 3596, 172, 242, 32, 55, 200, 56,
	154, 134, 3594, 173, 3593, 3592, 3591, 241, 149, 182,
	3, 5, 69, 102, 27, 37, 194, 129, 266, 88,
	3590, 5477, 67, 191, 45, 3589, 126, 90, 53, 114,
	118, 225, 65, 3587, 3585, 1497, 3581, 3579, 3576, 3575,
	164, 3573, 3572, 3571, 136, 150, 179, 3566, 82, 59,
	8, 101, 217, 227, 87, 186, 165, 218, 3565, 161,
	3564, 44, 122, 3563, 169, 212, 3561, 3557, 144, 3555,
	124, 712, 46, 113, 3551, 184, 3549, 3547, 3544, 3543,
	3541, 3540, 3539, 141, 197, 3537, 3536, 3535, 117, 156,
	3534, 224, 706, 192, 77, 36, 3533, 83, 2286, 3532,
	121, 203, 62, 3530, 4272, 41, 0, 10259, 8557, 6897,
	9700, 3529, 4058, 3526, 3525, 3524, 176, 115, 3522, 3521,
	3520, 85, 3519, 66, 3518, 3517, 47, 3515, 15, 2,
	6, 19, 17, 1208, 106, 3514, 3512, 84, 105, 98,
	3509, 234, 189, 3507, 3506, 3505, 3504, 72, 3502, 29,
	3501, 26, 3500, 3497, 30, 7, 28, 3496, 3495, 210,
	3492, 211, 3491, 131, 3490, 3139, 112, 3489, 3487, 222,
	104, 3486, 220, 3483, 3087, 3483, 3482, 3481, 13, 3479,
	3478, 204, 153, 177, 3474, 137, 3471, 138, 3470, 3469,
	3468, 215, 3466, 3463, 25, 3462, 4, 3459, 3447, 175,
	2852, 3445, 3443, 58, 3442, 152,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 519,
	519, 21, 33, 22, 34, 15, 520, 520, 520, 520,
	27, 23, 35, 25, 25, 25, 25, 25, 171, 171,
	171, 171, 20, 20, 29, 29, 201, 201, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	518, 518, 203, 203, 202, 197, 197, 521, 521, 204,
	204, 204, 206, 206, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 422, 422, 422, 535, 535, 535, 536,
	536, 537, 537, 537, 537, 537, 41, 41, 41, 41,
	513, 513, 173, 173, 173, 175, 175, 174, 174, 174,
	174, 62, 62, 527, 527, 528, 528, 526, 525, 525,
	529, 529, 529, 172, 172, 172, 108, 108, 108, 108,
	109, 109, 110, 110, 179, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 90, 90, 454, 454, 455, 455,
	167, 167, 168, 168, 168, 168, 169, 169, 170, 170,
	170, 55, 176, 176, 178, 178, 177, 177, 43, 43,
	43, 43, 43, 43, 43, 44, 44, 44, 44, 44,
	45, 45, 45, 45, 45, 45, 46, 46, 46, 46,
	46, 46, 53, 53, 53, 53, 158, 158, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 539, 539, 540,
	540, 541, 541, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 68,
	68, 288, 288, 260, 260, 69, 69, 69, 70, 70,
	71, 71, 57, 57, 511, 511, 303, 303, 413, 413,
	73, 73, 323, 323, 74, 74, 74, 74, 74, 74,
	75, 75, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 83, 83, 83, 84, 84, 84, 81, 81, 81,
	78, 78, 78, 77, 77, 77, 82, 82, 82, 251,
	251, 80, 80, 80, 253, 253, 79, 79, 79, 304,
	304, 85, 85, 85, 85, 261, 86, 86, 86, 86,
	86, 86, 86, 86, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 415, 415, 87,
	87, 87, 383, 383, 91, 91, 91, 338, 338, 92,
	92, 92, 92, 92, 93, 93, 93, 93, 111, 111,
	111, 111, 515, 515, 296, 296, 217, 217, 217, 217,
	101, 101, 101, 101, 102, 102, 102, 103, 103, 163,
	163, 117, 117, 117, 117, 117, 116, 116, 116, 116,
	116, 116, 47, 47, 47, 48, 48, 49, 49, 50,
	50, 51, 51, 52, 52, 52, 52, 52, 119, 119,
	532, 532, 121, 118, 118, 118, 120, 120, 120, 120,
	122, 123, 123, 123, 123, 123, 123, 123, 123, 124,
	124, 447, 447, 312, 312, 445, 445, 463, 463, 446,
	446, 265, 265, 265, 265, 265, 266, 266, 266, 453,
	453, 453, 453, 453, 453, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 164, 164, 165, 166, 166,
	166, 166, 145, 145, 145, 157, 157, 157, 157, 157,
	157, 157, 148, 148, 148, 135, 135, 126, 126, 126,
	126, 126, 130, 130, 130, 130, 130, 130, 130, 130,
	127, 127, 137, 137, 137, 137, 137, 131, 131, 132,
	132, 134, 134, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 128, 128, 128, 128, 139, 139, 139, 139,
	345, 345, 345, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 156, 156, 156, 156, 156, 156,
	530, 530, 531, 531, 152, 152, 152, 152, 152, 152,
	397, 397, 146, 146, 146, 146, 151, 151, 151, 151,
	328, 328, 143, 143, 143, 144, 144, 144, 149, 149,
	150, 147, 147, 153, 153, 153, 153, 129, 129, 129,
	543, 543, 543, 154, 154, 142, 142, 155, 155, 155,
	155, 155, 155, 155, 155, 141, 141, 141, 140, 140,
	140, 140, 133, 512, 512, 509, 509, 509, 509, 509,
	509, 509, 509, 510, 510, 514, 514, 96, 96, 96,
	96, 96, 104, 104, 104, 104, 104, 97, 97, 97,
	97, 97, 99, 99, 98, 98, 98, 98, 63, 63,
	63, 14, 14, 14, 64, 64, 182, 182, 182, 182,
	273, 273, 273, 273, 180, 180, 181, 181, 65, 65,
	544, 544, 544, 522, 522, 522, 523, 523, 523, 523,
	523, 523, 267, 267, 268, 268, 363, 363, 363, 363,
	363, 271, 271, 271, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 274, 274, 205, 205, 205, 277, 278,
	278, 275, 275, 276, 276, 276, 280, 280, 279, 282,
	282, 281, 362, 472, 472, 474, 474, 474, 474, 474,
	474, 474, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 545, 545, 470, 470, 470, 471, 466,
	466, 467, 467, 467, 467, 467, 269, 269, 270, 270,
	270, 270, 468, 469, 294, 294, 400, 473, 473, 475,
	475, 477, 546, 546, 546, 546, 546, 546, 547, 547,
	547, 361, 361, 360, 360, 286, 286, 478, 478, 478,
	478, 479, 479, 479, 479, 479, 482, 481, 480, 480,
	480, 480, 480, 67, 67, 67, 325, 325, 324, 324,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 160, 160, 220, 220, 61,
	61, 61, 12, 12, 12, 524, 524, 524, 66, 66,
	66, 66, 219, 219, 219, 219, 219, 219, 517, 517,
	516, 516, 221, 221, 549, 549, 72, 72, 72, 72,
	72, 72, 72, 416, 416, 417, 417, 60, 60, 60,
	60, 60, 346, 346, 344, 344, 343, 343, 293, 293,
	399, 225, 225, 198, 198, 198, 26, 19, 19, 24,
	24, 37, 37, 40, 40, 36, 36, 38, 38, 32,
	32, 533, 533, 534, 534, 100, 100, 105, 105, 105,
	105, 105, 106, 106, 106, 106, 107, 107, 107, 107,
	115, 115, 159, 159, 159, 159, 159, 159, 159, 42,
	42, 42, 42, 54, 54, 54, 54, 113, 551, 551,
	551, 114, 114, 114, 550, 550, 218, 218, 357, 357,
	358, 358, 552, 552, 359, 359, 359, 359, 212, 211,
	213, 213, 59, 59, 59, 207, 207, 208, 208, 209,
	209, 210, 210, 553, 553, 94, 94, 94, 162, 162,
	259, 259, 259, 353, 353, 353, 287, 287, 231, 231,
	356, 356, 354, 354, 354, 354, 322, 322, 322, 161,
	161, 301, 301, 314, 314, 315, 315, 410, 410, 316,
	112, 112, 185, 185, 183, 183, 183, 183, 183, 183,
	183, 183, 190, 190, 191, 191, 192, 192, 193, 194,
	194, 194, 194, 305, 305, 195, 195, 195, 184, 184,
	184, 186, 186, 186, 186, 186, 186, 186, 189, 189,
	189, 189, 196, 196, 196, 188, 188, 489, 489, 489,
	491, 491, 493, 493, 492, 492, 488, 488, 490, 490,
	548, 548, 327, 327, 327, 284, 285, 283, 283, 291,
	291, 289, 290, 290, 292, 292, 398, 398, 398, 199,
	199, 199, 319, 319, 319, 319, 320, 320, 349, 349,
	347, 347, 347, 347, 348, 348, 350, 350, 350, 351,
	351, 352, 352, 318, 318, 379, 379, 187, 187, 187,
	298, 298, 298, 299, 299, 369, 369, 369, 369, 369,
	369, 370, 370, 368, 368, 368, 368, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 402, 403, 403, 300,
	300, 404, 355, 355, 507, 507, 507, 508, 508, 396,
	396, 405, 405, 405, 405, 405, 405, 394, 394, 395,
	395, 411, 412, 412, 331, 331, 331, 331, 329, 329,
	332, 332, 332, 332, 330, 330, 406, 406, 406, 406,
	321, 321, 407, 407, 407, 407, 408, 364, 365, 365,
	418, 418, 418, 418, 420, 297, 297, 297, 297, 297,
	465, 464, 464, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 434, 434, 434, 434, 434, 434, 434, 434,
	435, 435, 435, 435, 435, 435, 421, 421, 421, 421,
	421, 425, 425, 425, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 426, 426, 431, 431, 432,
	432, 432, 427, 428, 433, 433, 433, 433, 554, 554,
	437, 437, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 423, 423, 423, 430, 430, 430, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	339, 339, 341, 341, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 373, 373, 373, 373, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	483, 483, 483, 483, 483, 483, 483, 483, 375, 375,
	486, 486, 487, 487, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 494, 494, 495, 495, 497, 497, 498,
	498, 499, 500, 500, 500, 501, 502, 502, 496, 496,
	503, 503, 503, 503, 504, 504, 505, 505, 505, 505,
	505, 506, 506, 506, 506, 506, 385, 385, 386, 386,
	392, 392, 392, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 222,
	222, 222, 222, 222, 310, 310, 308, 308, 308, 311,
	311, 309, 309, 307, 307, 306, 306, 382, 382, 380,
	380, 384, 384, 333, 333, 436, 436, 436, 436, 436,
	436, 436, 436, 334, 334, 334, 342, 335, 335, 336,
	336, 336, 336, 336, 376, 377, 337, 337, 337, 378,
	378, 387, 391, 391, 390, 389, 389, 388, 388, 366,
	366, 367, 367, 317, 317, 555, 555, 313, 313, 409,
	409, 409, 409, 263, 263, 302, 302, 262, 262, 254,
	254, 255, 255, 255, 255, 295, 295, 393, 393, 438,
	438, 439, 439, 440, 440, 441, 441, 442, 443, 444,
	381, 381, 241, 240, 228, 229, 239, 238, 237, 227,
	230, 234, 235, 236, 232, 233, 247, 246, 245, 252,
	243, 244, 414, 226, 256, 256, 257, 257, 257, 258,
	258, 258, 258, 223, 223, 224, 224, 248, 248, 249,
	250, 250, 242, 242, 242, 214, 214, 214, 215, 215,
	216, 216, 452, 452, 449, 449, 449, 450, 450, 450,
	451, 451, 451, 451, 448, 448, 448, 448, 448, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 457, 457, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 459, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 462, 462,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 12, 3, 1, 0, 1, 1, 2, 2, 1,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 4,
	3, 3, 4, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	3, 4, 6, 3, 1, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 2, 6, 4,
	7, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 3, 2, 4, 3, 3, 5, 3,
	4, 3, 5, 3, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	3, 6, 6, 3, 11, 14, 0, 2, 4, 3,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 1,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 1, 3, 10, 11, 7, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 5, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	3, 2, 0, 1, 1, 0, 6, 6, 8, 6,
	8, 6, 8, 6, 8, 6, 8, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 2, 3,
	2, 2, 8, 11, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	8, 5, 3, 4, 3, 0, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 508, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -159, -164, -165,
	-166, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -160,
	-161, -162, 31, 30, 91, 75, 140, 115, 123, 178,
	326, 361, 372, 353, -120, -121, 389, -42, -54, -114,
	-113, 68, 116, 348, -4, -12, 28, 44, -44, -45,
	-46, 58, -61, -58, -68, -62, -538, 93, -490, -76,
	-79, -107, -542, 128, 147, 196, -97, -98, 315, -102,
	-103, 355, -105, -106, 357, 148, -49, -48, 142, -183,
	-185, -118, -119, -163, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -156, -139, -140,
	-141, -142, -147, -143, -144, -145, -146, -148, -149, -151,
	-152, -153, -154, -155, 393, -150, 443, 46, 403, 77,
	132, 365, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -57, -59, -60, -63, -64, -65, -72, -66,
	-67, -489, -77, -78, -81, -83, -84, -80, -82, 354,
	-186, -184, 505, 457, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -28, -33, -34, -30, -31, -29, -32,
	-35, -36, -37, -38, -39, -40, -26, -27, -15, -25,
	475, 483, -189, -187, -188, -196, 381, 465, 419, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, -261, 2,
	-243, -248, -249, -250, -242, -214, -459, -462, 4, -456,
	-460, 153, 205, 280, 21, 22, 23, 24, 25, 26,
	28, 29, 40, 41, 43, 42, 44, 45, 46, 50,
	52, 55, 56, 57, 58, 59, 63, 68, 69, 74,
	75, 76, 77, 78, 79, 80, 86, 83, 84, 85,
	88, 90, 91, 92, 94, 96, 97, 105, 106, 107,
	108, 110, 115, 116, 119, 114, 118, 121, 122, 123,
	126, 127, 128, 130, 131, 133, 134, 135, 137, 138,
	140, 141, 142, 145, 143, 426, 144, 146, 147, 148,
	149, 159, 160, 161, 166, 168, 172, 173, 176, 177,
	179, 183, 185, 186, 187, 188, 189, 195, 196, 198,
	199, 200, 201, 206, 207, 211, 208, 217, 221, 222,
	223, 225, 229, 230, 231, 232, 233, 234, 236, 238,
	237, 240, 243, 244, 247, 248, 249, 252, 253, 254,
	255, 257, 258, 261, 259, 262, 260, 264, 265, 266,
	263, 269, 267, 271, 272, 273, 278, 276, 274, 275,
	282, 285, 193, 287, 288, 291, 309, 295, 296, 297,
	300, 301, 304, 307, 308, 310, 311, 312, 313, 314,
	315, 316, 317, 319, 320, 324, 326, 327, 329, 331,
	332, 333, 334, 335, 336, 337, 340, 339, 341, 348,
	353, 350, 351, 352, 354, 355, 356, 357, 359, 360,
	361, 363, 364, 365, 366, 368, 370, 371, 374, 375,
	390, 391, 405, 372, 373, 376, 377, 378, 379, 380,
	384, 382, 383, 385, 386, 387, 389, 392, 393, 395,
	396, 399, 401, 402, 403, 404, 406, 409, 410, 411,
	412, 407, 418, 415, 416, 420, 421, 422, 423, 424,
	425, 427, 429, 437, 438, 440, 443, 444, 445, 435,
	447, 448, 451, 452, 453, 456, 454, 455, 457, 459,
	462, 463, 464, 470, 469, 476, 477, 479, 480, 481,
	35, 47, 48, 51, 53, 64, 65, 66, 70, 111,
	112, 139, 150, 151, 162, 174, 175, 180, 182, 190,
	191, 192, 212, 213, 215, 219, 241, 284, 286, 302,
	306, 321, 322, 323, 325, 338, 367, 397, 408, 413,
	430, 431, 432, 433, 439, 441, 465, 466, 467, 471,
	478, -261, 2, -243, 293, -236, 2, -214, -214, 326,
	27, 2, 27, 320, 383, 421, 423, 2, -515, -296,
	2, 27, -217, -214, 93, 178, 381, -236, 2, -515,
	-296, 24, 2, -214, 2, -218, 2, 372, -214, 508,
	88, 249, 69, 367, 386, -123, 438, -122, 430, 376,
	-124, -447, 2, 269, -214, 508, 508, 508, 27, -226,
	-214, 419, 205, 107, 416, 508, 2, 419, 312, 469,
	382, 107, 335, 205, 445, 376, -524, 363, 181, 458,
	-513, 2, -509, 4, -460, -456, -255, -254, 419, 424,
	107, -250, -242, 498, -249, 508, 508, 508, 2, 222,
	223, 334, 333, 386, 387, 508, 508, 508, 374, 2,
	26, 61, 87, 90, 113, 149, 169, 172, 298, -539,
	258, 309, 332, 385, 418, 427, 440, -523, 404, 63,
	376, -522, -524, 445, 126, -343, 107, 249, 177, 452,
	423, 421, 450, 119, 211, 455, 454, 508, 508, 26,
	61, 72, 90, 126, 149, 169, 172, -541, 309, 332,
	370, 385, 418, 427, 440, 2, 469, 382, 419, 205,
	107, 445, 376, -524, 374, 375, 330, -88, 2, 505,
	31, 30, 389, -179, 419, 216, 2, -214, 508, 508,
	2, 222, 223, 374, 375, 508, 508, 170, -509, 2,
	508, 508, 2, 222, 223, 374, 375, 216, 2, 63,
	378, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 2, -157, 386, 404, 187, 44, 69, 27, 331,
	74, 313, 108, 134, 179, 205, 206, 230, 87, 88,
	-345, 43, 223, 222, 375, -530, 374, -397, 420, 377,
	383, 415, 234, 372, 438, 93, 459, 364, 481, 335,
	336, 143, 4, 107, 269, 388, 430, 249, 371, 316,
	79, 508, -548, 2, 419, -550, 2, 438, 438, 2,
	-550, 2, -550, 2, -550, 2, -551, 438, 478, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, -184, -186, -185, 508,
	508, 508, 508, 508, 508, 508, -157, 386, 2, 69,
	27, -289, -291, 449, 214, 136, 299, -183, -185, 2,
	-489, -445, 2, -371, -463, -373, 496, 497, 489, 417,
	62, 279, 482, -385, 113, 450, 293, -462, -374, -387,
	139, 367, -311, 8, 9, 5, 6, 7, -223, -375,
	-381, 442, 152, 283, -258, 509, 10, 505, -486, -185,
	-386, 36, 182, 60, -449, -257, -224, -421, 215, -256,
	-242, -483, -484, 4, -456, -457, -450, -424, -432, -428,
	-429, -435, -214, -459, 72, 99, 100, 98, 103, 102,
	251, 250, 104, 101, 388, 458, 61, 35, 190, 191,
	219, 284, 192, 70, -485, 127, -458, 212, 213, 397,
	48, 338, 162, 112, 111, 286, 53, 51, 466, -433,
	109, 430, 431, 432, 433, 174, 175, 150, 151, 306,
	323, 413, 439, 441, 180, 241, 95, 171, 210, 194,
	218, 220, 224, 242, 245, 270, 277, 281, 303, 305,
	362, 394, -554, 467, 408, 64, 65, -491, 339, -492,
	-236, -491, 508, 508, 510, 508, -283, -284, -285, 2,
	27, 124, 505, 2, -401, 2, -402, -406, -185, 235,
	-405, 505, -403, 503, -243, 294, -487, 368, -483, -484,
	-223, -242, -257, 4, -456, -458, 507, -286, 505, 107,
	419, 73, 205, -338, 505, -214, 27, 293, 434, 510,
	-383, 505, 293, 170, 296, -214, 2, 2, 390, 2,
	505, -123, 66, 438, 42, 386, -358, 2, -359, -211,
	-212, -213, -411, 221, 329, 337, 484, 481, -445, -532,
	170, 488, 434, -445, -312, 507, 2, 2, 2, 2,
	2, -406, 190, -243, 2, -240, -448, 4, -456, -460,
	-457, -461, -459, 27, 30, 31, 32, 34, 36, 37,
	38, 39, 54, 60, 61, 67, 71, 73, 82, 87,
	93, 98, 99, 101, 100, 102, 103, 104, 113, 117,
	120, 124, 125, 129, 132, 136, 152, 154, 167, 169,
	170, 178, 181, 184, 197, 209, 214, 216, 235, 239,
	246, 250, 251, 279, 283, 289, 293, 294, 298, 299,
	318, 328, 342, 358, 381, 388, 400, 414, 419, 428,
	434, 436, 442, 449, 450, 458, 460, 468, 472, 473,
	474, 475, -462, 72, 2, -406, 190, 2, -245, 190,
	-406, -248, 2, -227, -214, 2, -239, -448, 2, -262,
	190, -243, -244, -248, -246, 2, -248, -252, 2, -214,
	-454, 190, 2, -452, 10, -451, 5, 4, -456, -460,
	-457, 216, 434, 510, -302, -254, -255, -444, 8, -295,
	-214, 507, -371, 2, -112, -99, 2, 167, -371, 190,
	2, -112, 190, 2, -371, 190, 2, -112, 190, 2,
	-527, 2, -454, 2, 2, 440, 2, 90, 190, -214,
	419, 106, 2, 352, -540, 370, 444, 469, 2, 2,
	2, 2, 2, 2, 419, -232, 2, -214, 167, -252,
	190, 2, 382, -549, 339, -454, 190, 2, -246, 2,
	-246, 205, 217, -227, 190, 2, 423, 421, 423, 421,
	170, 2, 216, 2, 216, 2, -407, 2, -408, -402,
	-243, 503, 2, 2, 2, 2, 2, 190, -214, 419,
	106, 2, 233, 2, 2, 2, 2, 2, 2, 2,
	-304, 190, 2, -243, -304, 190, 2, -304, 190, 2,
	-344, 2, 82, -227, 190, 2, -251, 190, 2, -246,
	-253, 190, 2, -252, -455, 190, 2, -454, -371, 2,
	-112, 2, -415, 2, -414, -451, 465, -88, 505, -88,
	505, 386, 505, -454, -243, -243, -371, 2, -112, -99,
	2, -371, 2, -112, 2, -110, -109, -454, 505, 170,
	-371, 2, -112, -99, 2, -371, 2, -112, 2, -179,
	167, 2, 107, 419, -157, 2, 167, 460, 2, 8,
	2, -454, 377, 336, 159, 2, 390, 2, 391, 69,
	-345, 481, 69, 170, 2, 170, 2, -328, 2, 475,
	2, -512, 2, 293, 170, 2, 170, 2, 170, 2,
	170, 2, 170, 2, 333, 387, 223, 2, -112, 472,
	-99, -371, 472, 2, -531, 167, 375, -371, 2, 437,
	232, 144, 170, -328, 2, 170, 2, 170, 2, 5,
	2, 334, 405, 2, 221, 329, 405, 2, -243, -543,
	2, 419, 469, 382, 2, 2, 83, 84, 170, 2,
	170, 2, 170, 481, 2, -321, -406, -357, -358, -357,
	434, -289, -291, -157, 390, 2, -190, -319, -192, 167,
	-347, -348, -193, 246, 154, 289, -194, -327, 27, 124,
	-327, -327, 56, 506, 506, 11, 12, 71, 40, 496,
	497, 498, 499, 165, 500, 501, 494, 495, 493, 486,
	487, 491, 227, 228, 89, 490, 488, 81, 256, 369,
	155, 156, 157, 158, 349, 203, 33, 204, 14, 15,
	16, 32, 298, 245, 482, 194, 394, 489, 17, 18,
	19, 218, 220, 281, 47, 197, -222, -264, -371, -371,
	-371, -371, -371, -371, -371, 305, 505, -317, -366, 503,
	-185, 505, 505, 505, -444, -185, -371, -385, 506, -309,
	505, -185, -385, -380, 505, 367, 503, 505, -388, -371,
	5, 5, 5, 505, 507, -494, 476, 167, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 325, -426, 505, -425, 505, -425, -425,
	470, -423, 505, 483, 477, 505, -423, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	470, 510, -491, -286, 505, -313, -409, -371, 498, -313,
	-313, 293, -306, -371, 95, -331, 224, 270, 171, 242,
	362, 210, -368, 509, -368, -396, 483, -185, -403, -242,
	-185, -405, 505, -401, -396, -89, -444, -73, -86, -94,
	-112, -125, -161, -162, 498, -243, 505, 170, 505, 507,
	-448, 170, -295, -227, -243, -256, -257, -262, 123, -306,
	-509, -295, -217, 37, -382, -418, -419, -465, 509, -464,
	-421, -431, -427, -430, 321, 322, -450, 51, 466, -433,
	215, 4, -456, -458, 212, 213, 397, 48, 338, 162,
	112, 111, 286, 53, 430, 431, 432, 433, 174, 175,
	467, 408, 64, 65, -509, -295, 167, -447, -306, 37,
	-358, 2, 113, -452, 42, -552, 510, 244, -266, 255,
	278, 186, 294, 479, 287, -453, 5, 4, -381, -393,
	113, 249, 215, -438, -440, 8, -439, 9, -441, 496,
	497, -446, -445, 97, 507, -448, -201, 350, 389, -200,
	23, 28, 128, 463, 145, -276, 207, 312, 139, 401,
	453, -519, -520, 373, 425, 426, 85, 287, 389, 350,
	139, -324, -326, 37, 105, 273, 307, 57, 200, 260,
	261, 403, 471, 139, 389, 350, -520, 350, -520, -203,
	401, 453, -519, -520, 373, 350, -202, -276, 139, 509,
	23, 350, 389, 308, -536, -537, 128, 28, 350, 308,
	-516, -488, 475, 139, -109, 236, -109, -302, 510, 510,
	-448, 498, 375, 374, 139, 139, 139, 139, 167, 2,
	2, 279, 2, 2, 2, 172, -522, -541, 2, 2,
	2, -243, 190, -288, 293, -511, -303, 419, -243, 279,
	-245, 190, 2, -248, 469, -516, 279, 37, 505, 2,
	-344, 2, 205, -488, 279, -407, -259, -243, -402, -259,
	389, -236, 37, -368, -368, 139, 2, 2, 2, -214,
	-204, 510, 59, 356, 139, -204, 139, -204, 139, -263,
	190, -262, -204, 139, -204, 510, 139, -204, 510, 139,
	510, 139, 506, 510, -415, -415, -454, -170, 475, 170,
	93, 505, 505, -179, -412, 510, -411, -455, -110, -454,
	-454, -511, -227, 2, -243, 2, 419, 225, -170, -454,
	-454, -454, -447, 27, 391, 2, 333, 387, 84, 391,
	2, -243, 419, 107, 205, 75, -514, 167, -510, 363,
	-509, -243, 107, -243, 107, -243, 107, -243, -243, 2,
	2, 2, 2, 80, 80, 2, 44, -531, 167, 2,
	437, 2, 437, 2, -214, -214, -214, 404, 244, -243,
	167, 419, 205, 419, 205, 107, 419, -204, 510, -218,
	-190, -319, -447, -320, -319, -191, -190, -193, 167, 337,
	454, 273, 392, 229, -348, -347, 27, -371, -352, 161,
	272, -371, -350, -373, 496, 497, -439, -441, -305, 287,
	-184, -184, -184, -292, -398, -371, 328, 205, -420, -418,
	-418, -241, -448, 430, -371, -371, -371, -371, -371, -371,
	-371, -371, -371, -371, -371, -371, -371, -371, -371, -371,
	-371, -371, -371, -371, -371, -371, -371, -371, -371, -371,
	-371, -371, -371, -371, -371, -371, -371, -371, -371, 245,
	194, 394, 47, 197, -371, 434, -371, -371, -371, -371,
	267, 279, 283, 442, 152, 451, 124, 287, -555, 414,
	39, -378, -185, -310, 505, -392, 34, 400, 27, -385,
	505, 2, -366, -371, -367, -307, -306, -306, 506, 468,
	27, 124, 498, 2, 506, 510, 37, 506, -371, -307,
	-384, -380, -306, -391, -390, 472, -339, -340, 480, 263,
	110, 188, 262, -341, 380, -442, 8, -448, 498, -495,
	160, 181, 505, 506, 2, 506, 2, 506, -371, 2,
	506, -371, 2, 506, -371, 2, 506, -371, 2, 506,
	2, -371, -371, -371, -371, -371, -371, -371, -306, 8,
	-442, -442, 430, 430, -442, -442, -442, -434, 321, 247,
	322, 176, 266, 264, 265, 175, -434, -333, 2, -436,
	-306, 4, 480, 263, 110, 188, 262, 380, 5, -333,
	2, -334, 2, -371, -306, -335, -372, -373, 496, 497,
	489, -385, -336, 2, -371, -307, -371, 54, 239, 436,
	-337, -371, 170, -306, -306, 2, -306, 2, -492, 37,
	-306, -298, 510, 170, 37, 4, -298, -298, 505, 506,
	510, -332, 185, 259, 254, -332, -401, -331, 224, -329,
	303, -329, -329, -396, -228, 503, 511, -448, -396, -395,
	-394, 37, -236, 300, -396, -396, 507, 506, -395, 504,
	-507, 505, 508, 508, 508, 508, 508, -243, 505, -306,
	-448, 507, 406, 506, 218, 218, 218, 218, 368, 506,
	434, 475, -88, 295, 506, 510, -297, 36, 503, 507,
	-442, 2, 2, -437, 470, 505, 505, -340, 505, 170,
	-296, -532, 506, 438, -359, -265, 337, 399, 351, 384,
	416, 8, 9, 8, 9, 510, -448, 510, -533, 87,
	434, 73, 376, -362, 190, 73, -466, -230, 87, -467,
	-214, 67, 450, 328, 169, 137, -533, 87, 328, -533,
	87, 87, 389, 404, 56, -406, 40, 40, 27, -112,
	240, 170, 481, 419, 205, 376, 434, -406, -326, -418,
	105, 260, 261, 56, -443, -438, 496, 497, -443, 56,
	-443, -443, -443, 475, -245, -406, 376, 434, 434, 510,
	40, 40, 27, -112, 240, 170, 434, -262, -228, 464,
	41, 464, 434, 41, 376, 434, 510, 41, 41, 434,
	434, -517, -219, 94, 274, 253, 275, -220, -221, 314,
	462, -454, -412, 197, -412, -254, -214, 507, -112, -371,
	-371, -112, -371, -112, 44, 139, 2, -549, 233, 505,
	-269, 279, 170, -295, -413, 216, 510, -303, 139, -325,
	-324, 279, -247, 190, 2, -243, 139, 133, 505, 335,
	2, -229, 190, -215, -214, -344, -207, 422, 139, -323,
	460, -353, -112, 505, 113, 37, -353, -314, -315, -410,
	-316, -230, 505, -236, -214, 2, -243, -304, -304, -304,
	-204, 510, 139, -227, -246, -251, -252, -253, -454, -455,
	-88, -414, 506, 506, 506, -169, 297, -168, -214, 5,
	-179, 460, -268, -363, -362, -470, -471, -466, 245, 205,
	450, 217, 153, -287, -231, -230, 106, -170, -109, 506,
	-412, 197, -170, -170, -412, -412, -243, 167, -170, -170,
	-170, 2, 2, -328, -243, -227, -262, -243, -295, -295,
	-328, -227, -328, -227, -328, -227, -112, -371, 2, 386,
	167, 167, 507, -328, 335, 107, 419, 312, 205, -243,
	-262, -243, -262, -227, -243, -406, -320, -191, 294, 229,
	392, -350, -351, -373, 367, 368, -351, 367, 368, 8,
	9, 8, 9, -195, 396, 282, -304, 510, -198, 38,
	120, 229, -243, 481, 135, -371, -371, 434, -555, 414,
	-378, 135, -371, 267, 283, 442, 152, 451, 124, 287,
	170, 505, -372, -372, 506, -308, -371, -371, 504, 513,
	506, -291, 510, -289, -371, -306, -306, 506, 507, -306,
	-295, 504, 504, 510, 506, -389, -390, 129, -371, 434,
	434, 434, 434, 505, 506, 507, -500, 304, 505, 505,
	-371, 506, 506, 506, 506, 37, 510, 510, 510, 506,
	510, 510, 510, 506, 506, 506, 510, 506, 481, 481,
	506, 506, 506, 506, 510, 506, 510, 506, 170, 506,
	506, -342, 318, 506, 11, 12, 496, 497, 498, 499,
	165, 500, 501, 494, 495, 493, 486, 487, 488, 81,
	256, 369, 14, 15, 16, 218, 197, -372, -372, -372,
	506, -376, -377, 170, 167, 37, -337, -337, -337, 506,
	170, -306, 506, 506, 505, -493, 258, 279, 506, -365,
	-364, 473, -409, -299, 2, -401, -238, -448, -365, -365,
	-306, -371, 224, 224, -330, 460, 293, -332, -401, -395,
	-444, -370, -369, 168, 38, 120, 276, 193, -395, -236,
	-286, -395, -395, -448, -396, -396, -394, 506, -508, -444,
	506, -300, -404, -487, -291, 507, -448, -176, -488, -158,
	5, 283, -158, -158, -158, -295, 24, 319, -418, 503,
	504, 8, -448, 505, -442, -442, -442, -295, 170, -445,
	-358, 448, 78, 337, 430, -445, -200, 350, -230, -230,
	-243, -252, 279, -362, 190, -206, 279, -418, -237, -214,
	505, 505, 229, 229, 460, -230, -237, 229, 190, -230,
	190, -237, -237, -518, 337, 288, -371, 248, 335, 280,
	-201, 350, 389, -112, -112, -112, 505, -532, 460, 123,
	-243, -262, -243, -252, -247, 389, 350, 277, -256, -443,
	-443, -324, 389, 350, -252, -245, -227, -202, -112, -112,
	-112, 505, -228, -203, 350, 5, 190, -230, 5, -214,
	-230, -252, -535, -452, 104, 388, -537, 23, -230, 190,
	-230, -252, -535, -219, -454, 283, 456, -516, -173, 475,
	-109, -167, 201, 498, -513, -214, 469, -214, -267, -270,
	-268, -230, -182, 477, 475, 139, -260, -243, 503, -170,
	-454, -243, -252, 139, -286, 279, -454, 505, 2, 2,
	293, 279, -229, 190, -208, 130, -553, 488, -227, -365,
	-299, -322, -356, 358, 293, -287, 465, -236, -322, -301,
	510, 170, 488, 507, -287, 2, -204, -204, -204, -262,
	-263, -204, -204, -204, -88, -88, -170, 510, 505, 488,
	488, 505, -454, -454, 506, 510, -243, -229, 205, 205,
	-235, -215, 506, 510, 507, 505, -170, -110, 170, -50,
	475, 419, 509, -328, -328, -328, 386, 386, -214, -239,
	-227, -243, -240, -262, 167, 167, 454, -351, 294, 252,
	-398, -199, 285, -243, 509, -371, -371, 135, 135, -371,
	-372, -372, -371, 135, 170, 505, -371, -382, 32, 32,
	506, 510, -367, -371, 506, 468, -291, -291, 506, 498,
	-448, 509, 506, -380, 132, -371, 428, 263, 188, 262,
	-341, 262, -341, -341, -442, 5, -448, 498, -501, -233,
	505, -214, 473, -290, 299, 506, -420, -418, -371, -371,
	-371, -371, -371, -442, -423, -423, -438, -438, -371, -376,
	-371, -420, -418, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, -372, -372, -372, -372, -372, -372, -372, -372,
	-372, -372, 124, 279, 287, -372, -377, -376, -371, -371,
	-418, 506, 506, 506, -306, -88, 505, 258, -318, 181,
	-371, -412, 510, -318, -318, 506, -401, -401, 505, -371,
	224, 504, 510, 512, 488, -286, 507, -394, -395, 504,
	506, 510, 506, 510, -355, 37, 506, -448, -178, -177,
	121, 50, 296, 5, 8, 503, 504, 507, -442, 506,
	506, 506, -295, -371, 434, 434, 139, 279, 462, -472,
	-467, 137, -371, -293, -399, -371, 505, 505, 2, -197,
	128, 389, -534, 2, 460, 139, -204, 139, -204, 479,
	505, 505, 434, 376, 475, -306, -371, -171, 113, -447,
	-520, 509, -520, 509, 376, 434, 376, 434, 475, -306,
	434, -422, 45, 25, 279, -246, 434, 434, -204, 139,
	445, 389, -454, 283, -175, 297, -174, 131, 360, 122,
	231, -412, -173, 170, 434, 2, -247, 2, 506, 506,
	510, -473, 37, 291, 505, 291, -243, -69, 475, -411,
	-444, -245, 37, 139, -516, -416, -417, 5, -243, 139,
	293, 279, -209, 238, -553, -452, -488, -291, -322, -313,
	280, 86, 506, -365, -315, -299, -371, 2, 506, -204,
	-168, -169, -454, -454, -454, -170, -179, -179, -363, -271,
	505, -229, -215, 505, -179, -231, 2, -455, -412, -112,
	297, -243, 498, -328, -278, -277, 312, 287, -278, 367,
	367, 294, 161, 234, -198, -228, -371, -371, 135, 32,
	32, -371, -371, -382, 506, -371, -371, -306, 504, 5,
	-371, 506, 506, 8, -371, 506, 507, -502, -214, -371,
	506, 56, 506, 506, 510, 510, 506, 506, 506, 506,
	506, 506, 506, -377, 170, 124, 287, 505, 506, 506,
	-88, -379, 184, 56, -401, -379, -379, -330, -295, -401,
	-369, -228, 503, -448, -444, -404, 505, 507, -177, 488,
	504, 2, 503, -448, 506, -230, -230, -362, 139, -474,
	87, -476, 71, 153, 93, 279, 283, 450, 328, 67,
	113, 342, -545, 37, 485, 506, 506, 510, -198, -293,
	-295, 279, 411, 113, 279, 113, 106, 445, 74, -230,
	-237, -295, -295, -243, -252, 146, 506, 510, 488, 2,
	498, 498, -252, -247, -252, -245, 146, 506, -228, 5,
	5, 139, -225, 71, 5, -230, -230, -246, 106, 510,
	505, 488, 488, -173, -455, -109, -286, -274, 208, -230,
	-471, -468, -469, 328, -475, -477, 153, 328, -112, -181,
	-180, -214, 5, 2, 505, -269, 297, 504, -325, -112,
	-247, 506, 510, -346, 460, -228, -243, 139, -210, 237,
	-553, -452, -207, -349, -347, -354, 505, 293, -112, -291,
	488, 506, 506, 106, 106, 199, 138, -293, 505, 505,
	-295, 106, 506, -170, -51, -52, 205, 87, 317, -240,
	419, 205, 505, 505, -198, -371, -371, -371, 506, -291,
	-448, 498, -496, 312, 506, -398, -371, -371, -372, 170,
	505, -382, 506, -497, 474, -371, -306, -497, -497, 506,
	-444, 2, -454, 503, 2, -362, -237, -241, -234, -214,
	153, 190, 283, 229, 505, -372, -243, 505, 2, 29,
	-546, 117, 209, -361, -547, 92, 412, 198, -399, -199,
	506, 506, 283, 283, -371, -418, 505, -204, -204, 506,
	506, -371, 434, -447, 91, -445, 2, -520, -371, 434,
	5, -204, -241, -204, -204, -225, 445, -174, -175, -454,
	-109, -173, 37, -275, -276, 197, -473, 229, -234, 229,
	-544, 475, 506, 510, 488, 488, -267, -182, -70, -71,
	435, -411, -286, 5, 505, -214, 293, 505, -228, -553,
	-452, -208, -322, 125, -295, 87, -349, -378, -170, 505,
	505, -272, 76, 88, 114, 189, 173, 206, 404, 409,
	27, -272, 506, -293, -293, 506, 505, -170, 510, 27,
	505, 27, 505, -243, -262, -306, -306, 506, -291, 56,
	510, 506, 506, -372, -382, 506, -498, -499, -233, 504,
	2, -476, -234, 279, 460, -371, -216, 505, -371, 37,
	209, 118, 195, -274, 505, -360, 460, 342, -225, -293,
	505, 505, 505, 488, 170, 505, -422, -204, -246, 506,
	-526, 340, -112, -182, 310, 505, -273, 293, 106, 273,
	-180, -374, -374, 506, 37, -71, 9, 37, -293, -243,
	-293, 293, -452, -209, 454, 280, 506, -237, -322, -455,
	-455, -360, 506, 506, -455, -52, -295, -295, 506, 506,
	-503, 335, 368, 183, -306, -292, 506, 510, 37, 139,
	185, 506, -478, 257, -214, 506, 118, 195, -275, -295,
	-274, 185, -243, -521, 460, 506, -280, -279, -277, -282,
	-281, -277, -306, -445, 91, 310, -306, -225, -529, 171,
	-528, 5, 10, -273, -243, -294, -400, -230, 77, 106,
	-274, -112, -112, 506, -346, 506, -243, -210, 389, -364,
	506, 506, -361, -360, -365, 506, 506, 506, 506, -504,
	-505, 47, 447, 97, -371, -504, -504, -499, -501, 153,
	475, -479, -482, -481, 293, 395, 171, 311, 506, 411,
	471, -546, 506, 475, -286, -371, -360, 506, 510, 465,
	506, 510, 465, 506, 170, 506, -204, -172, 475, 44,
	505, 506, 510, 327, 119, 128, -275, -544, -360, 505,
	-361, 505, -314, -170, -170, -274, -361, -170, -506, 137,
	-505, 324, 166, 367, 324, 166, -506, -506, -234, 52,
	-481, 293, -482, 293, 454, 119, -365, 52, -478, -274,
	-279, 197, -281, 170, 310, 142, -528, 29, -295, -400,
	368, 368, 2, -182, -273, -361, -293, -274, -293, -365,
	-275, -274, 97, 181, 429, 273, 32, 488, -480, 273,
	356, 59, 389, -480, 488, -479, 505, 505, 374, 506,
	2, -273, -274, 506, -275, 506, -365, -275, 367, 301,
	-505, -371, 22, 283, 113, -371, -546, -306, -306, 297,
	-205, 59, 356, -275, -360, -365, -361, -365, 506, 506,
	-169, 505, -365, -361, -274, -275, 434, -169, -274, -275,
	505, 506, -275, -365, -306, -365, 506, -275,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 454, 455, 457, 458, 459, 461, 462, 464, 466,
	468, 469, 470, 472, 473, 475, 476, 477, 478, 479,
	481, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 543, 0, 1132, 1134, 1136,
	1138, 0, 677, 0, 30, 31, 0, -2, 258, 260,
	262, 0, 288, 290, 291, 293, 295, -2, 0, 390,
	391, 393, 395, -2, -2, 0, 837, 839, 0, 530,
	532, 0, 842, 844, 0, 0, 552, 553, 0, 1220,
	-2, 546, 548, 550, 615, 617, 619, 621, 623, 625,
	627, 629, 630, 632, 634, 636, 638, 640, 642, 644,
	646, 647, 649, 651, 653, 655, 657, 659, 661, 663,
	665, 667, 669, 671, -2, 673, -2, -2, 0, -2,
	-2, -2, 1150, 34, 36, 38, 40, 42, 44, 46,
	48, 50, 341, 342, 344, 346, 348, 350, 353, 355,
	357, 1278, 397, 399, 401, 403, 405, 407, 409, 0,
	-2, 1290, 0, 0, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 78, 79, 80, 81, 82, 83, 84,
	85, 64, 65, 67, 68, 69, 73, 74, 76, 62,
	0, 0, 1251, 1253, 1255, 1257, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 456, 460,
	463, 465, 467, 471, 474, 480, 482, 484, 441, 442,
	445, 1910, 1927, 1928, 1929, 1932, 1933, 1934, 1935, 1936,
	1937, 2305, 2386, 2387, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 443, 444, 996, 0, 508, 506, 1903, 509, 2131,
	511, 513, 384, 385, 386, 387, 388, 389, 0, 523,
	517, 522, 524, 526, 527, 528, 529, 503, 501, 0,
	523, 1962, 521, 1130, 1131, 1115, 1116, 2168, 1157, 542,
	-2, -2, -2, 2271, -2, 574, -2, 581, 2275, 2170,
	586, 0, 588, -2, 591, 1133, 1135, 1137, 675, 676,
	1913, 0, 0, 0, 0, 32, 33, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1045, 1046, 1047,
	0, 189, 191, -2, -2, -2, -2, 0, 0, 2204,
	2004, 1871, 1929, 1874, 1869, 259, 261, 263, 264, 0,
	0, 0, 0, 0, 0, 289, 292, 294, -2, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 891,
	883, 884, 1086, 0, 0, 0, 0, 392, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 321, 446, 447, 0,
	1279, 1279, 0, 0, 0, 0, 233, 224, 838, 840,
	841, 0, 0, 0, 0, 531, 533, 0, 0, 219,
	843, 845, 846, 0, 0, 0, 0, 0, 235, 0,
	0, 547, 549, 551, 616, 618, 620, 622, 624, 626,
	628, 631, 633, 635, 637, 639, 641, 643, 645, 648,
	650, 652, 654, 656, 658, 660, 662, 664, 666, 668,
	670, 672, 682, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 762, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 685, 687, 688, 689, 0, 742, 760, 761,
	770, 674, 0, 1036, 1280, 1159, 1140, 1154, 1159, 1142,
	1143, 1144, 1145, 1146, 1151, 1153, 1147, 1148, 1149, 35,
	37, 39, 41, 43, 45, 47, 49, 51, 343, 345,
	347, 349, 351, 354, 356, 358, -2, 1249, 1250, 398,
	400, 402, 404, 406, 408, 410, 534, 0, 536, 0,
	686, -2, 0, 1284, 1284, 1284, 0, 0, 1250, 1248,
	0, 539, 540, 595, 596, 1514, 0, 0, 0, 0,
	0, 0, 0, 1768, 1600, 0, 597, -2, 1631, 1633,
	2246, 2271, 1767, 1635, 1636, 1637, 1638, 1639, 0, 1641,
	1642, 1643, 1644, 1645, 1646, 0, 1648, 0, 1653, 1654,
	1655, 0, 2253, 1848, 1923, -2, 0, 0, 2259, 1919,
	0, 1734, 1671, -2, -2, 1946, 1925, 1446, 1447, 1448,
	1449, 1450, -2, -2, 2288, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 0, 2235, 2254, 2255,
	2260, 2262, 2256, 2243, 1696, 2016, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1473,
	1482, -2, -2, -2, -2, -2, -2, 2247, 2248, 2265,
	2268, 2274, 2279, 2280, 2252, 2261, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 1474, -2, -2, -2, -2, 1267, 2142, 1270,
	996, 1268, 1252, 1254, 0, 1256, 0, 0, 0, 1261,
	1287, 1285, 0, 1328, 1265, 1266, 1346, 1346, 1370, 0,
	1351, 0, 1370, 1279, 1396, 0, 1357, 2160, 1672, 1673,
	0, 1929, 1924, -2, -2, 2286, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 510, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 544, 545, 0, 569,
	0, 573, 2242, -2, 1970, 2179, -2, 577, 1160, 1164,
	1165, 1166, 1167, 0, 0, 0, 0, 0, 583, 0,
	0, 570, 571, 589, 592, 0, 678, 679, 680, 681,
	61, 0, 2254, 1396, 63, 0, 1893, 1954, 1955, 1956,
	1957, 1958, 2287, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2288, 66, 0, 2254, 70, 0, 2254,
	0, -2, 75, 0, 1899, 77, 0, 1896, 86, 0,
	2254, 0, 1868, -2, 0, 172, 1907, 0, 863, 1909,
	-2, 2254, 1044, 236, 237, 1942, 1943, 1950, 1951, 1952,
	1953, 0, 0, 0, 830, 1865, 1870, 831, 1889, 832,
	1875, 0, 265, 266, 267, 268, 269, 0, 270, 2254,
	272, 273, 0, 275, 276, 2254, 278, 279, 0, 281,
	0, 202, 203, 297, 298, 0, 300, 0, 2254, 0,
	0, 0, 306, -2, 322, 0, 319, 0, 310, 311,
	313, 314, 315, 316, 0, 362, 360, 1904, 0, 858,
	2254, 860, 0, 0, 1065, -2, 2254, 1041, 1071, 1067,
	0, -2, 0, 1277, 2254, 1174, 887, 888, 889, 890,
	0, 381, 0, 1187, 0, 1189, 0, 1210, 1402, 1346,
	1346, 0, 323, 324, 325, 326, 327, 2254, 0, 0,
	0, 332, 0, 334, 335, 336, 337, 338, 339, 340,
	161, 2254, 413, 439, 161, 2254, 416, 161, 2254, 419,
	0, 422, 1084, 161, 2254, 425, 161, 2254, 428, 429,
	161, 2254, 433, 434, 436, 2254, 438, 238, 1126, 1127,
	1128, 1129, 0, -2, 497, 1912, -2, 449, 0, 450,
	0, -2, 0, 250, 0, 0, 847, 848, 849, 850,
	851, 854, 855, 856, 857, 1383, 222, 220, 0, 0,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 0,
	0, 554, 0, 0, 683, 684, 0, 0, 694, 695,
	696, 250, 2171, 2139, 2036, 701, 0, 704, 707, -2,
	0, 0, 0, 0, 711, 0, 716, 717, 718, 0,
	720, 836, 722, 0, 0, 724, 0, 728, 0, 731,
	0, 733, 0, 735, -2, -2, -2, 746, -2, 0,
	749, 751, 0, 753, -2, 0, 762, 758, 759, 0,
	0, 0, 0, 778, 779, 0, 784, 0, 787, 788,
	789, 0, 791, 792, 0, 794, 795, 796, 797, 0,
	799, 800, -2, -2, 804, 806, 0, 813, 0, 817,
	0, 821, 0, 690, 691, 161, 1400, 1139, -2, 1141,
	0, -2, 0, 535, 0, 538, 1307, 1235, 1232, 0,
	1304, 1305, 1236, 0, 0, 0, 1243, 0, 1282, 1283,
	0, 0, 0, 1222, 1223, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 1777, 1778, 1781, 1782, 1779, 1780, 1783,
	1784, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1788, 0, 0, 1790, 0, 1792, 0, 0, 0, 0,
	0, 0, 1579, 1581, 1856, 0, 0, 1789, 1519, 1520,
	1521, 1522, 1523, 1558, 1559, 0, 0, 1632, 1853, 1852,
	1634, 0, 1804, 0, 1647, -2, 0, 1768, 1799, 0,
	0, 1656, 1657, 1658, 0, 0, 1804, 0, 0, 1847,
	1668, 1669, 1511, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1460, 1459, 0, 1461, 0, 1462, 1463,
	1470, 1483, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 0, 0, 0, 1828, -2, 0, 0, 0, 0,
	1475, 0, 1269, 0, 0, 1332, 1857, 1861, 1862, 1332,
	1332, 0, 0, 1805, 1393, 1393, 0, 0, 1389, 1389,
	1389, 1387, 1370, 0, 1370, 1380, 0, 1370, 1370, 0,
	-2, 1351, 0, 0, 1380, 0, 1364, 485, 487, 489,
	491, 492, 493, 495, 1397, 1398, 0, 0, 0, 0,
	1930, 0, 0, 0, 0, 0, 1915, 0, 0, 0,
	0, 515, 525, 1279, 0, 1807, 1419, 1423, 0, 1425,
	1426, 1427, 1428, 1429, 0, 0, 1420, -2, 1471, 1473,
	1494, 1947, 1948, 1949, 1454, 1455, 1456, 1457, 1458, 1466,
	1453, 1453, 1453, 1464, 1493, 1485, 1493, 1489, 1440, 1441,
	1476, 1477, 1478, 1479, 0, 519, 0, 0, 0, 0,
	-2, 579, 584, 585, 0, 0, 1162, 0, 1168, 606,
	607, 608, 1170, 1171, 0, 582, 609, 610, 611, 612,
	613, 614, 0, 1877, 1878, 1879, 1880, 1883, 1884, 0,
	0, 580, 599, 587, 0, 593, 87, 1112, 0, 126,
	0, 1112, 1112, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 111, 122, 99, 100, 0, 0, 0, 0,
	0, 71, 1018, 0, 1021, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 110, 0, 105, 89,
	0, 0, 0, 112, 124, 0, 152, 154, 0, 0,
	0, 0, 0, 0, 171, 179, 0, 0, 0, 0,
	1042, 0, 1276, 0, 1383, 2073, 1383, 829, 0, 0,
	1930, 1873, 0, 0, 0, 0, 0, 0, 0, 299,
	301, 0, 303, 304, 305, 0, 1064, 0, 312, 309,
	352, 967, 2254, 0, 0, 379, 374, 0, 376, 0,
	1017, 2254, 1015, 1908, 0, 1039, 0, 0, 0, 1072,
	1939, 1081, 1085, 1176, 0, 383, 0, 1190, 1192, 0,
	0, 1403, 0, 1405, 1406, 0, 329, 330, 331, 0,
	411, 0, 159, 160, 0, 414, 0, 417, 0, 161,
	2254, 1863, 423, 0, 426, 0, 0, 431, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 250, 0, 1382, 0, 1383, 220,
	250, 250, 1383, 556, 1383, 558, 0, 0, 697, 250,
	250, 250, 702, 703, 705, 706, -2, -2, 814, 708,
	709, 781, 0, 0, 0, 780, 721, 0, 823, 2156,
	834, 781, 2004, 781, 2004, 781, 2004, 732, 734, 737,
	773, 745, 750, 0, 0, 755, 763, -2, 0, 765,
	0, 767, 0, 769, 781, 782, 785, 790, 793, 798,
	0, 0, 0, 0, 0, 0, 0, 1035, 0, 1152,
	1307, 1235, 537, 1226, 1306, 1227, 1234, 1237, 0, 0,
	1239, 0, 1241, 0, 1302, 1303, 1310, 1311, 0, 1321,
	1322, 1314, 0, -2, 0, 0, 1317, 1318, 1245, 0,
	1262, 1263, 1264, 1291, 1294, 1095, 0, 2386, 1515, 1414,
	1516, 1517, 1892, 0, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, -2, -2, -2, -2, -2, -2,
	-2, -2, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, -2, -2, -2, 1556, 1557, -2, 1791,
	1793, 0, 1856, 0, -2, 0, -2, -2, -2, -2,
	1576, 0, 1578, 1583, 1585, 1587, 0, 0, 0, 0,
	1855, 1597, 1839, 1840, 0, 0, 1770, 1771, 1772, 1582,
	0, 1601, 1854, 1851, 0, 0, 1803, 1290, 1660, 0,
	0, 0, 0, 1667, 1652, 1801, 0, 1800, 0, 0,
	0, 1811, 0, 1846, 1842, 0, 1890, 1510, 1497, 1498,
	1499, 1500, 1501, 1502, 1512, 0, 1887, 1916, 1922, 1744,
	0, 0, 0, 1697, 1698, 1699, 1700, 1701, 0, 1703,
	1704, 0, 1706, 1707, 0, 1709, 1710, 0, 1712, 1713,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 0, 0, 1716, 0,
	1814, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1718, 0, 1720, 1805, 1825, 0, 0, 1602, 0, 0,
	0, 1768, 0, 1723, 1805, 1833, 0, 0, 0, 0,
	0, 1805, 0, 1838, 0, 1730, 0, 1732, 1271, 0,
	0, 1409, 0, 0, 0, 1860, 1409, 1409, 0, 1327,
	0, 0, 1390, 1391, 1392, 0, 0, 1393, 0, 1384,
	1388, 1385, 1386, 1380, 1343, 0, 0, 1894, 1380, 1349,
	1379, 0, 996, 1369, 1380, 1380, 0, -2, 1353, 1370,
	0, 0, 486, 488, 490, 494, 496, 0, 0, 1290,
	-2, 0, -2, 995, 0, 0, 0, 0, 505, 507,
	0, 0, 499, 0, 502, 0, 1410, 1413, 0, 0,
	1424, 1430, 1431, 0, -2, 0, 0, 1495, 0, 0,
	0, 0, 572, 0, 1161, 1169, 0, 603, 0, 605,
	0, 1881, 1885, 1882, 1886, 0, 594, 0, 0, 0,
	0, 1111, 0, 130, 2254, 0, 163, 0, 0, 960,
	1900, 0, 0, 0, 0, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 1019, 1020,
	1022, 1029, 1031, 0, 1025, 1888, 0, 0, 1026, 0,
	1028, 1030, 1032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 102, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1060, 1058, 1052, 1053, 1054, 1055, 1056, 1057, 0,
	0, -2, 194, 0, 241, 1866, 1876, 0, 852, 853,
	271, 274, 277, 280, 190, 0, 307, 0, 0, 893,
	866, 0, 0, 361, 250, 0, 0, 375, 0, 1013,
	1016, 0, 996, 2254, 1051, 1906, 0, 0, 0, 0,
	1070, 0, 2254, 1895, 1938, 1939, 1178, 1184, 0, 1409,
	0, 1208, 1193, 0, 0, 0, 1208, 1212, 1213, 1215,
	1216, 0, 0, 1404, 0, 333, 440, 161, 161, 161,
	420, 0, 0, 161, 430, 161, 435, 161, 239, 437,
	448, 498, 1279, 1279, 250, 248, 2114, 246, 243, 245,
	0, 0, 0, 894, 896, 897, 898, 899, 0, 1939,
	0, 2062, 1939, 0, 1196, 1198, 0, 216, 223, 221,
	250, 0, 0, 373, 555, 560, 692, 0, 698, 699,
	700, 739, 775, 710, 712, 713, 714, 0, 835, 833,
	723, 781, 726, 781, 729, 781, 748, 752, 757, 764,
	0, 0, 0, 777, 0, 0, 0, 0, 0, 0,
	0, 818, 819, 820, 822, 1401, 1230, 1231, 1233, 0,
	1242, 0, 0, 1316, -2, -2, 1315, 1319, 1320, -2,
	-2, -2, -2, 1238, 0, 1247, 1244, 0, 1301, 1093,
	1094, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1598, 0, -2, 1577, 1580, 1584, 1586, 1588, 0, 0,
	0, 0, 0, 0, 1794, 0, 1796, 1599, 1849, 1852,
	1766, 0, 0, 1289, 1290, 1290, 0, 1666, 0, 1802,
	0, 1809, 1810, 0, 1659, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 1702, 1705, 1708, 1711, 0, 0, 0, 0, 1691,
	0, 0, 0, 1695, 1465, 1451, 0, 1493, 1491, 1492,
	1486, 1493, 1490, 1443, 0, 1442, 0, 1715, 0, 1717,
	1719, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 1606, 1607,
	1722, 1831, 1832, 0, 0, 0, 0, 0, 0, 1728,
	0, 1837, 1729, 1731, 1279, 0, 1272, 0, 1329, 1324,
	1408, 0, 1858, 1383, 1331, 1333, 1859, 1897, 1324, 1324,
	0, 1806, 0, 0, 1374, 0, 0, 0, 1376, 1347,
	0, 0, 1341, 0, 1337, 1338, 1339, 1340, 1348, 996,
	1378, 1350, 1354, 1916, 0, 1380, 0, 1365, 0, 1367,
	1399, 0, 1359, 1362, 0, 0, 1931, 251, 0, 282,
	286, 287, 283, 284, 285, 514, 0, 0, 1808, 0,
	1415, 0, 1421, 0, 0, 0, 0, 518, 0, 568,
	-2, 601, 602, 604, 0, 600, 127, 1112, 0, 0,
	1097, 1099, 0, 132, 2254, 141, 0, 934, 0, 1898,
	0, 0, 0, 0, 0, 1114, 0, 0, 2254, 161,
	2254, 161, 144, 147, 0, 151, 149, 0, 0, 925,
	88, 1112, 0, 91, 95, 103, 0, 0, 0, 109,
	0, 0, 0, 1101, 1105, 0, 0, 1023, 1024, 1027,
	1033, 72, 0, 0, 1103, 1107, 1096, 153, 93, 97,
	104, 0, 1109, 90, 0, 175, 0, 0, 0, 167,
	0, 168, 169, 176, 177, 178, 180, 0, 161, 2254,
	0, 861, 862, 1059, 1037, 1038, 0, 1043, 186, 0,
	1383, 194, 0, 1872, 0, 0, 0, 0, 0, 0,
	892, 978, 0, 0, 0, 0, 367, 363, 0, 372,
	378, 377, 859, 0, 0, 0, -2, 1074, 1068, 1069,
	0, 0, 0, 2254, 1180, 1184, 0, 1183, 1277, 1290,
	382, 1185, 1208, 0, 0, 0, 1195, 1191, 1188, 1409,
	0, 0, 0, 0, 0, 328, 412, 415, 418, 1864,
	161, 424, 427, 432, 451, 452, 225, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 903, 0, 1939, 1939,
	0, 1902, 0, 0, 0, 0, 217, 1383, 0, 557,
	0, 0, 0, 725, 727, 730, 766, 768, 781, 807,
	808, 920, 0, 920, 0, 0, 1240, 0, 1313, 1246,
	1295, 1296, 0, 1095, 0, 1518, 1561, 0, 0, -2,
	0, 0, 1565, 0, 0, 0, -2, 0, 0, 0,
	1795, 1797, 0, 1851, 1661, 0, 0, 0, 1665, 1649,
	1650, 0, 1769, 1812, 1841, 1845, 0, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 0, 1891, 1917, 1921, 1742, 1743,
	1747, 1905, 0, 0, 0, 1674, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 1488, 0, 0, 1813, 1824,
	1826, 1603, 1604, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, -2, -2, -2, 1621, 1622, 1623, -2,
	-2, -2, 0, 0, 0, 1827, 1829, 1830, 1834, 1835,
	0, 1725, 1726, 1727, 1836, 0, 1279, 1273, 1326, 0,
	1407, 1330, 0, 1326, 1326, 1286, 1372, 0, 0, 1395,
	0, 1344, 0, 1345, 0, 1377, 0, 1352, 1355, 1356,
	1366, 0, 1358, 0, 1361, 0, 1661, -2, 252, 254,
	0, 257, 516, 500, 0, 0, 1417, 0, 0, 1468,
	1472, 1496, 520, 1381, 0, 0, 0, 0, 162, 932,
	959, 0, 0, 0, 1088, 1095, 0, 0, 965, 134,
	0, 0, 0, 142, 0, 0, 139, 0, 146, 150,
	0, 0, 0, 0, 0, 0, 106, 107, 108, 0,
	113, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 1092, 0, 0, 182, 0,
	0, 0, 1062, 1063, 192, 0, 195, 0, 198, 199,
	0, 194, 188, 0, 0, 302, 996, 308, 914, 966,
	0, 968, 0, 867, 0, 0, 967, 359, 0, 366,
	0, 1017, 0, 0, 1040, 0, 1073, 1075, 1083, 0,
	0, 0, 1182, 1184, 0, 1175, 1176, 1309, 1186, 1206,
	-2, 1205, 0, 1290, 1214, 1211, 1217, 1218, 0, 421,
	247, 0, 242, 244, 0, 228, 0, 0, 895, 900,
	0, 0, 0, 0, 0, 1197, 1199, 0, 250, 234,
	0, 693, 715, 776, 809, 919, 0, 0, 811, 0,
	0, 1312, 1299, 1300, 1297, 1095, 1563, 1567, 0, 0,
	0, 1569, -2, 0, 1591, -2, -2, 1798, 1850, 1640,
	1290, 1662, 1664, 1651, 1844, 1513, 0, 1749, 1746, 0,
	1733, 0, 1686, 1687, 0, 0, 1690, 1692, 1693, 1694,
	1452, 1445, 1444, 1823, 0, 0, 0, 0, 1724, 1274,
	0, 1738, 0, 0, 1334, 1738, 1738, 1373, 0, 1375,
	1342, 1335, 0, 1917, 1368, 1360, 0, 0, 255, 0,
	1411, 1416, 0, 1422, 1467, 128, 129, 131, 0, 933,
	0, 936, 0, 0, 0, 0, 943, 944, 0, 0,
	0, 0, 0, 953, 0, 982, 992, 0, 1301, 0,
	0, 0, 136, 156, 0, 0, 1113, 0, 0, 161,
	161, 0, 0, 1098, 1100, 0, 0, 0, 0, 116,
	0, 0, 1102, 1106, 1104, 1108, 0, 0, 1110, 173,
	174, 0, 161, 0, 166, 161, 161, 1092, 0, 0,
	0, 0, 0, 187, 240, 194, 0, 922, 0, 978,
	970, 971, 972, 0, 977, 979, 0, 0, 880, 0,
	876, 0, 0, 869, 893, 866, 0, 364, 1014, 1048,
	996, 1066, 0, 0, 0, 0, 0, 0, 1172, 1184,
	0, 1177, 1178, 1208, 1308, 0, 0, 0, 1194, 1309,
	0, 249, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 218, 559, 561, 0, 0, 567, 918,
	0, 0, 0, 0, 1298, 1571, -2, -2, 1592, 0,
	1918, 1920, 1290, 0, 1735, 1292, 0, 0, -2, 0,
	0, 0, 1275, 1258, 0, 1325, 1323, 1259, 1260, 1394,
	0, 1363, 256, 0, 1418, 133, 0, 937, 938, 1901,
	940, 0, 942, 945, 0, 948, 1941, 0, 952, 0,
	961, 983, 0, 914, 0, 988, 989, 990, 1089, 1090,
	994, 0, 135, 137, 155, 1092, 0, 138, 145, 0,
	0, 92, 0, 0, 1997, 119, 117, 115, 94, 0,
	175, 181, 1091, 170, 183, 161, 0, 196, 0, 197,
	200, 0, 0, 866, 921, 0, 969, 0, 980, 981,
	870, 0, 868, 0, 0, 0, 0, 0, 365, 368,
	0, 371, 0, 1076, 0, 1082, 0, 0, 0, 0,
	1179, 1180, 380, 0, 0, 0, 1208, 1219, 227, 0,
	0, 901, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 902, 994, 0, 0, 958, 0, 232, 0, 563,
	0, 565, 0, 810, 812, 0, 0, 1663, 1753, 0,
	0, 1688, 1689, -2, 0, 1629, 1737, 1739, 0, 1336,
	1412, 935, 939, 0, 0, 0, 1000, 0, 0, 954,
	0, 986, 987, 922, 0, 914, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 165, 184, 1092, 193,
	212, 0, 1049, 870, 0, 0, 878, 0, 881, 0,
	877, 874, 875, 914, 0, 369, 370, 0, 0, 1083,
	0, 0, 1181, 1182, 0, 1201, 1202, 1204, 1209, 0,
	0, 992, 994, 1409, 0, 562, 0, 0, 815, 816,
	0, 0, 0, 0, 1748, 1293, 1630, 0, 0, 0,
	0, 947, 1005, 0, 0, 0, 984, 985, 982, 0,
	963, 0, 996, 140, 0, 994, 0, 926, 0, 0,
	929, 0, 0, 120, 1997, 118, 0, 161, 215, 0,
	207, 205, 206, 864, 0, 0, 974, 976, 0, 882,
	922, 880, 1050, 994, 0, 992, 0, 1173, 0, 1203,
	250, 250, 914, 992, 957, 250, 564, 566, 1745, 1765,
	1754, -2, 2215, 2001, 0, 1765, 1765, 1740, 1741, 0,
	0, 949, 1001, 1002, 0, 997, 998, 999, 1940, 950,
	951, 1409, 991, 0, 1000, 157, 914, 923, 0, 0,
	924, 0, 0, 123, 0, 125, 185, 201, 0, 0,
	0, 973, 0, 0, 0, 0, 866, 870, 992, 0,
	914, 0, 1409, 229, 230, 922, 914, 231, 1750, 0,
	0, 1756, 1757, 1758, 1759, 1760, 1751, 1752, 941, 0,
	1003, 0, 1004, 0, 0, 0, 962, 0, 1005, 143,
	927, 0, 930, 0, 121, 0, 210, 211, 0, 975,
	871, 0, 873, 870, 879, 914, 0, 922, 0, 1200,
	1409, 922, 0, 1762, 1763, 0, 0, 0, 1006, 0,
	1009, 1010, 0, 1007, 0, 982, 0, 0, 0, 917,
	872, 865, 922, 994, 1409, 992, 955, 1409, 1761, 1764,
	1755, 946, 1008, 1011, 1012, 993, 964, 0, 0, 0,
	913, 915, 916, 1409, 992, 1079, 914, 956, 922, 0,
	213, 0, 1077, 914, 922, 928, 0, 0, 922, 1409,
	0, 214, 1409, 1080, 0, 1078, 922, 931,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 494, 3, 500, 495, 3,
	505, 506, 498, 496, 510, 497, 507, 499, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 513, 3,
	486, 488, 487, 491, 509, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 503, 3, 504, 501, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 511, 493, 512, 489,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 490, 57829, 492,
	57830, 502, 57831, 508, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1202
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1207
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1217
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1226
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1359
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1363
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1367
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1381
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1432
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1436
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1440
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1446
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1450
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1456
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1465
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1486
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1518
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1529
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1536
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1548
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1555
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1572
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1583
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1602
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1612
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1622
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1642
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1648
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1674
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1679
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1690
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1848
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1993
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1997
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2004
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2088
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2105
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2132
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2262
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = nil
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(), Subdir: sqlDollar[4].union.expr(), From: sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[7].union.asOfClause(), Options: sqlDollar[8].union.kvOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2355
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2416
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2425
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2431
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2436
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2441
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2446
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2451
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2455
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2558
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2584
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2604
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2605
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2607
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2670
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2718
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2758
		{
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			return helpWith(sqllex, "CREATE")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			return unimplemented(sqllex, "create cast")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2764
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2766
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2767
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2768
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2769
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2770
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2772
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2773
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2774
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			return unimplemented(sqllex, "create operator")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			return unimplemented(sqllex, "create publication")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2777
		{
			return unimplemented(sqllex, "create rule")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			return unimplemented(sqllex, "create server")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2779
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2784
		{
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2785
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2789
		{
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2793
		{
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2801
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2802
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2803
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2804
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			return unimplemented(sqllex, "drop server")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2812
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2813
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2817
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2818
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2819
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2821
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2825
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2844
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2894
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2933
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2968
		{

			sqlVAL.union.val = nil
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "DELETE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2995
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2996
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3011
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3020
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3022
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "DROP")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3102
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3208
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3273
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3297
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3305
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "DELETE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3325
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "INSERT")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "INSERT")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3382
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3415
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "GRANT")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3527
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "RESET")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "RESET")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "USE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3601
		{
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			return helpWith(sqllex, "USE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3828
		{
			return unimplemented(sqllex, "set from current")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3837
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3842
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = tree.Low
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = tree.Normal
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = tree.High
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			return helpWith(sqllex, "SHOW")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4009
		{
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4013
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.str = "client_encoding"
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.str = "timezone"
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4077
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4125
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4134
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4241
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = true
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = true
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = false
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4443
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = true
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = false
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = true
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = false
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4548
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4569
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4595
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4638
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4646
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4683
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4706
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4862
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4957
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "RESUME")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5076
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5118
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5133
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = nil
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5154
		{

			sqlVAL.union.val = nil
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5160
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5180
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5185
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 878:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5212
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5226
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5241
		{
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5326
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5329
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5332
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5339
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5355
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5360
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.str = ""
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 931:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5455
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5549
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5563
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5574
		{
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
		}
	case 955:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5670
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5681
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5788
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5789
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5790
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5949
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5958
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5997
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6002
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6005
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = true
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{

			sqlVAL.union.val = true
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = false
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6085
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6099
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6111
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6122
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = nil
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6175
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6176
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6194
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6196
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6198
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6238
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6255
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6273
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6289
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6305
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = false
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = true
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = false
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = true
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = false
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.str = ""
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6410
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6416
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6466
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6472
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6480
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6486
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6504
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6508
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6567
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6575
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6615
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6619
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6620
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6621
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6672
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6673
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6691
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6695
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6723
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6738
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6807
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.str = ""
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.str = ""
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.str = ""
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.str = ""
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6850
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6851
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6974
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = true
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = false
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7415
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = nil
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = false
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = true
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7459
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7526
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7555
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7588
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7647
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7648
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7701
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7703
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7718
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7740
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7745
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7750
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7761
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7773
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7792
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7831
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7841
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7887
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7917
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7950
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = nil
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.str = tree.AstFull
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.str = tree.AstRight
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.str = tree.AstInner
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8069
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8070
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.str = tree.AstHash
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.str = ""
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8132
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8177
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8206
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8219
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8227
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8246
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8256
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8269
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8276
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8325
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = types.Geography
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8362
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8370
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8404
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = nil
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = types.Int2
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = types.Int
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = types.Float4
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = types.Float
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = types.Bool
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = types.Float
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8496
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8502
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8524
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = types.String
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = true
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = false
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = types.Date
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8581
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8595
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8612
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8629
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = true
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = false
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = false
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = types.Interval
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8653
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = nil
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8782
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9160
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9381
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9407
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9431
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9461
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9472
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9473
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9497
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9563
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9711
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9734
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9744
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9759
		{
			return unimplemented(sqllex, "treat")
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9780
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.str = ""
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9934
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10031
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = tree.Any
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = tree.Some
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = tree.All
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = tree.Div
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = tree.LT
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.GT
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = tree.LE
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = tree.GE
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = tree.NE
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = tree.Like
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10393
		{
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10465
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10611
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10789
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10809
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.str = ""
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
