// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:136

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:782
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_LOCALITIES_CHECK = lex.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13083

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1502,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 399,
	-2, 0,
	-1, 74,
	241, 236,
	508, 236,
	-2, 0,
	-1, 87,
	229, 1262,
	243, 1262,
	259, 395,
	386, 395,
	396, 1032,
	432, 395,
	445, 1032,
	492, 1032,
	519, 395,
	545, 1032,
	-2, 0,
	-1, 93,
	132, 1502,
	236, 1502,
	530, 1502,
	531, 1502,
	-2, 0,
	-1, 109,
	150, 1473,
	169, 1473,
	182, 1473,
	239, 1473,
	272, 1473,
	338, 1473,
	348, 1473,
	525, 1473,
	-2, 1444,
	-1, 148,
	158, 889,
	258, 889,
	389, 851,
	450, 851,
	491, 851,
	511, 889,
	513, 851,
	-2, 0,
	-1, 151,
	4, 1504,
	21, 1504,
	22, 1504,
	23, 1504,
	24, 1504,
	25, 1504,
	26, 1504,
	27, 1504,
	29, 1504,
	30, 1504,
	36, 1504,
	41, 1504,
	42, 1504,
	44, 1504,
	45, 1504,
	46, 1504,
	47, 1504,
	48, 1504,
	49, 1504,
	50, 1504,
	51, 1504,
	53, 1504,
	54, 1504,
	55, 1504,
	56, 1504,
	58, 1504,
	59, 1504,
	60, 1504,
	61, 1504,
	62, 1504,
	63, 1504,
	64, 1504,
	68, 1504,
	69, 1504,
	70, 1504,
	71, 1504,
	73, 1504,
	74, 1504,
	75, 1504,
	79, 1504,
	80, 1504,
	81, 1504,
	82, 1504,
	83, 1504,
	84, 1504,
	85, 1504,
	88, 1504,
	89, 1504,
	90, 1504,
	91, 1504,
	92, 1504,
	94, 1504,
	96, 1504,
	97, 1504,
	98, 1504,
	99, 1504,
	100, 1504,
	101, 1504,
	103, 1504,
	104, 1504,
	105, 1504,
	107, 1504,
	108, 1504,
	109, 1504,
	117, 1504,
	118, 1504,
	119, 1504,
	120, 1504,
	121, 1504,
	123, 1504,
	124, 1504,
	125, 1504,
	127, 1504,
	128, 1504,
	129, 1504,
	131, 1504,
	132, 1504,
	133, 1504,
	135, 1504,
	136, 1504,
	137, 1504,
	140, 1504,
	141, 1504,
	142, 1504,
	144, 1504,
	145, 1504,
	147, 1504,
	148, 1504,
	149, 1504,
	151, 1504,
	152, 1504,
	153, 1504,
	154, 1504,
	155, 1504,
	156, 1504,
	157, 1504,
	158, 1504,
	159, 1504,
	160, 1504,
	161, 1504,
	162, 1504,
	163, 1504,
	164, 1504,
	165, 1504,
	166, 1504,
	168, 1504,
	174, 1504,
	175, 1504,
	176, 1504,
	177, 1504,
	181, 1504,
	183, 1504,
	184, 1504,
	188, 1504,
	189, 1504,
	190, 1504,
	191, 1504,
	192, 1504,
	193, 1504,
	194, 1504,
	195, 1504,
	196, 1504,
	197, 1504,
	198, 1504,
	199, 1504,
	200, 1504,
	202, 1504,
	203, 1504,
	205, 1504,
	206, 1504,
	208, 1504,
	209, 1504,
	210, 1504,
	211, 1504,
	212, 1504,
	213, 1504,
	214, 1504,
	215, 1504,
	216, 1504,
	218, 1504,
	219, 1504,
	221, 1504,
	222, 1504,
	223, 1504,
	224, 1504,
	225, 1504,
	229, 1504,
	230, 1504,
	231, 1504,
	232, 1504,
	233, 1504,
	236, 1504,
	237, 1504,
	238, 1504,
	240, 1504,
	242, 1504,
	243, 1504,
	245, 1504,
	247, 1504,
	248, 1504,
	249, 1504,
	251, 1504,
	255, 1504,
	256, 1504,
	257, 1504,
	258, 1504,
	259, 1504,
	260, 1504,
	262, 1504,
	263, 1504,
	264, 1504,
	266, 1504,
	267, 1504,
	269, 1504,
	270, 1504,
	273, 1504,
	277, 1504,
	278, 1504,
	279, 1504,
	282, 1504,
	283, 1504,
	284, 1504,
	285, 1504,
	287, 1504,
	288, 1504,
	289, 1504,
	290, 1504,
	291, 1504,
	292, 1504,
	293, 1504,
	294, 1504,
	295, 1504,
	296, 1504,
	297, 1504,
	298, 1504,
	299, 1504,
	300, 1504,
	301, 1504,
	302, 1504,
	303, 1504,
	304, 1504,
	305, 1504,
	306, 1504,
	307, 1504,
	308, 1504,
	310, 1504,
	312, 1504,
	313, 1504,
	314, 1504,
	315, 1504,
	316, 1504,
	317, 1504,
	318, 1504,
	319, 1504,
	320, 1504,
	321, 1504,
	322, 1504,
	323, 1504,
	325, 1504,
	326, 1504,
	328, 1504,
	330, 1504,
	331, 1504,
	333, 1504,
	334, 1504,
	335, 1504,
	336, 1504,
	337, 1504,
	340, 1504,
	343, 1504,
	344, 1504,
	345, 1504,
	346, 1504,
	349, 1504,
	350, 1504,
	351, 1504,
	353, 1504,
	355, 1504,
	356, 1504,
	357, 1504,
	358, 1504,
	359, 1504,
	360, 1504,
	361, 1504,
	362, 1504,
	363, 1504,
	364, 1504,
	365, 1504,
	366, 1504,
	368, 1504,
	369, 1504,
	370, 1504,
	371, 1504,
	372, 1504,
	373, 1504,
	374, 1504,
	375, 1504,
	376, 1504,
	377, 1504,
	378, 1504,
	379, 1504,
	380, 1504,
	381, 1504,
	382, 1504,
	384, 1504,
	385, 1504,
	387, 1504,
	388, 1504,
	389, 1504,
	390, 1504,
	391, 1504,
	392, 1504,
	393, 1504,
	394, 1504,
	395, 1504,
	396, 1504,
	397, 1504,
	398, 1504,
	400, 1504,
	402, 1504,
	403, 1504,
	404, 1504,
	409, 1504,
	411, 1504,
	412, 1504,
	413, 1504,
	414, 1504,
	415, 1504,
	416, 1504,
	417, 1504,
	418, 1504,
	419, 1504,
	421, 1504,
	422, 1504,
	423, 1504,
	425, 1504,
	426, 1504,
	427, 1504,
	428, 1504,
	429, 1504,
	430, 1504,
	432, 1504,
	433, 1504,
	434, 1504,
	435, 1504,
	436, 1504,
	437, 1504,
	438, 1504,
	439, 1504,
	440, 1504,
	441, 1504,
	442, 1504,
	443, 1504,
	445, 1504,
	446, 1504,
	447, 1504,
	448, 1504,
	449, 1504,
	450, 1504,
	452, 1504,
	453, 1504,
	454, 1504,
	455, 1504,
	456, 1504,
	457, 1504,
	459, 1504,
	460, 1504,
	461, 1504,
	462, 1504,
	463, 1504,
	464, 1504,
	465, 1504,
	466, 1504,
	468, 1504,
	470, 1504,
	471, 1504,
	472, 1504,
	473, 1504,
	474, 1504,
	475, 1504,
	476, 1504,
	477, 1504,
	478, 1504,
	479, 1504,
	480, 1504,
	481, 1504,
	482, 1504,
	483, 1504,
	484, 1504,
	485, 1504,
	487, 1504,
	488, 1504,
	490, 1504,
	491, 1504,
	493, 1504,
	494, 1504,
	495, 1504,
	496, 1504,
	497, 1504,
	498, 1504,
	499, 1504,
	500, 1504,
	501, 1504,
	503, 1504,
	504, 1504,
	505, 1504,
	506, 1504,
	507, 1504,
	509, 1504,
	511, 1504,
	512, 1504,
	513, 1504,
	514, 1504,
	515, 1504,
	516, 1504,
	518, 1504,
	519, 1504,
	520, 1504,
	521, 1504,
	523, 1504,
	524, 1504,
	527, 1504,
	528, 1504,
	529, 1504,
	530, 1504,
	531, 1504,
	532, 1504,
	533, 1504,
	535, 1504,
	538, 1504,
	539, 1504,
	540, 1504,
	541, 1504,
	542, 1504,
	543, 1504,
	545, 1504,
	546, 1504,
	547, 1504,
	548, 1504,
	550, 1504,
	555, 1504,
	556, 1504,
	557, 1504,
	558, 1504,
	559, 1504,
	560, 1504,
	-2, 0,
	-1, 152,
	1, 1359,
	130, 1359,
	247, 1359,
	327, 1359,
	384, 1359,
	393, 1359,
	564, 1359,
	588, 1359,
	-2, 0,
	-1, 154,
	1, 1359,
	588, 1359,
	-2, 0,
	-1, 155,
	1, 1359,
	588, 1359,
	-2, 0,
	-1, 156,
	1, 1359,
	508, 1359,
	588, 1359,
	-2, 0,
	-1, 184,
	150, 1472,
	169, 1472,
	182, 1472,
	239, 1472,
	272, 1472,
	338, 1472,
	348, 1472,
	525, 1472,
	-2, 1447,
	-1, 230,
	4, 1511,
	5, 1511,
	6, 1511,
	7, 1511,
	8, 1511,
	9, 1511,
	10, 1511,
	21, 1511,
	22, 1511,
	23, 1511,
	24, 1511,
	25, 1511,
	26, 1511,
	27, 1511,
	29, 1511,
	30, 1511,
	36, 1511,
	37, 1511,
	41, 1511,
	42, 1511,
	43, 1511,
	44, 1511,
	45, 1511,
	46, 1511,
	47, 1511,
	48, 1511,
	49, 1511,
	50, 1511,
	51, 1511,
	53, 1511,
	54, 1511,
	55, 1511,
	56, 1511,
	58, 1511,
	59, 1511,
	60, 1511,
	61, 1511,
	62, 1511,
	63, 1511,
	64, 1511,
	65, 1511,
	66, 1511,
	67, 1511,
	68, 1511,
	69, 1511,
	70, 1511,
	71, 1511,
	73, 1511,
	74, 1511,
	75, 1511,
	77, 1511,
	79, 1511,
	80, 1511,
	81, 1511,
	82, 1511,
	83, 1511,
	84, 1511,
	85, 1511,
	88, 1511,
	89, 1511,
	90, 1511,
	91, 1511,
	92, 1511,
	94, 1511,
	96, 1511,
	97, 1511,
	98, 1511,
	99, 1511,
	100, 1511,
	101, 1511,
	103, 1511,
	104, 1511,
	105, 1511,
	106, 1511,
	107, 1511,
	108, 1511,
	109, 1511,
	110, 1511,
	111, 1511,
	112, 1511,
	113, 1511,
	114, 1511,
	115, 1511,
	116, 1511,
	117, 1511,
	118, 1511,
	119, 1511,
	120, 1511,
	121, 1511,
	122, 1511,
	123, 1511,
	124, 1511,
	125, 1511,
	126, 1511,
	127, 1511,
	128, 1511,
	129, 1511,
	131, 1511,
	132, 1511,
	133, 1511,
	135, 1511,
	136, 1511,
	137, 1511,
	140, 1511,
	141, 1511,
	142, 1511,
	144, 1511,
	145, 1511,
	147, 1511,
	148, 1511,
	149, 1511,
	151, 1511,
	152, 1511,
	153, 1511,
	154, 1511,
	155, 1511,
	156, 1511,
	157, 1511,
	158, 1511,
	159, 1511,
	160, 1511,
	161, 1511,
	162, 1511,
	163, 1511,
	164, 1511,
	165, 1511,
	166, 1511,
	167, 1511,
	168, 1511,
	174, 1511,
	175, 1511,
	176, 1511,
	177, 1511,
	181, 1511,
	183, 1511,
	184, 1511,
	187, 1511,
	188, 1511,
	189, 1511,
	190, 1511,
	191, 1511,
	192, 1511,
	193, 1511,
	194, 1511,
	195, 1511,
	196, 1511,
	197, 1511,
	198, 1511,
	199, 1511,
	200, 1511,
	202, 1511,
	203, 1511,
	205, 1511,
	206, 1511,
	208, 1511,
	209, 1511,
	210, 1511,
	211, 1511,
	212, 1511,
	213, 1511,
	214, 1511,
	215, 1511,
	216, 1511,
	217, 1511,
	218, 1511,
	219, 1511,
	221, 1511,
	222, 1511,
	223, 1511,
	224, 1511,
	225, 1511,
	229, 1511,
	230, 1511,
	231, 1511,
	232, 1511,
	233, 1511,
	235, 1511,
	236, 1511,
	237, 1511,
	238, 1511,
	240, 1511,
	242, 1511,
	243, 1511,
	244, 1511,
	245, 1511,
	246, 1511,
	247, 1511,
	248, 1511,
	249, 1511,
	250, 1511,
	251, 1511,
	255, 1511,
	256, 1511,
	257, 1511,
	258, 1511,
	259, 1511,
	260, 1511,
	262, 1511,
	263, 1511,
	264, 1511,
	266, 1511,
	267, 1511,
	268, 1511,
	269, 1511,
	270, 1511,
	271, 1511,
	273, 1511,
	277, 1511,
	278, 1511,
	279, 1511,
	280, 1511,
	281, 1511,
	282, 1511,
	283, 1511,
	284, 1511,
	285, 1511,
	287, 1511,
	288, 1511,
	289, 1511,
	290, 1511,
	291, 1511,
	292, 1511,
	293, 1511,
	294, 1511,
	295, 1511,
	296, 1511,
	297, 1511,
	298, 1511,
	299, 1511,
	300, 1511,
	301, 1511,
	302, 1511,
	303, 1511,
	304, 1511,
	305, 1511,
	306, 1511,
	307, 1511,
	308, 1511,
	310, 1511,
	311, 1511,
	312, 1511,
	313, 1511,
	314, 1511,
	315, 1511,
	316, 1511,
	317, 1511,
	318, 1511,
	319, 1511,
	320, 1511,
	321, 1511,
	322, 1511,
	323, 1511,
	324, 1511,
	325, 1511,
	326, 1511,
	327, 1511,
	328, 1511,
	329, 1511,
	330, 1511,
	331, 1511,
	332, 1511,
	333, 1511,
	334, 1511,
	335, 1511,
	336, 1511,
	337, 1511,
	340, 1511,
	344, 1511,
	345, 1511,
	346, 1511,
	349, 1511,
	350, 1511,
	351, 1511,
	352, 1511,
	353, 1511,
	354, 1511,
	355, 1511,
	356, 1511,
	357, 1511,
	358, 1511,
	359, 1511,
	360, 1511,
	361, 1511,
	362, 1511,
	363, 1511,
	364, 1511,
	365, 1511,
	366, 1511,
	368, 1511,
	369, 1511,
	370, 1511,
	371, 1511,
	372, 1511,
	373, 1511,
	374, 1511,
	375, 1511,
	376, 1511,
	377, 1511,
	378, 1511,
	379, 1511,
	380, 1511,
	381, 1511,
	382, 1511,
	384, 1511,
	385, 1511,
	387, 1511,
	388, 1511,
	389, 1511,
	390, 1511,
	391, 1511,
	392, 1511,
	393, 1511,
	394, 1511,
	395, 1511,
	396, 1511,
	397, 1511,
	398, 1511,
	400, 1511,
	402, 1511,
	403, 1511,
	404, 1511,
	409, 1511,
	411, 1511,
	412, 1511,
	413, 1511,
	414, 1511,
	415, 1511,
	416, 1511,
	417, 1511,
	418, 1511,
	419, 1511,
	421, 1511,
	422, 1511,
	423, 1511,
	424, 1511,
	425, 1511,
	426, 1511,
	427, 1511,
	428, 1511,
	429, 1511,
	430, 1511,
	432, 1511,
	433, 1511,
	434, 1511,
	435, 1511,
	436, 1511,
	437, 1511,
	438, 1511,
	439, 1511,
	440, 1511,
	441, 1511,
	442, 1511,
	443, 1511,
	445, 1511,
	446, 1511,
	447, 1511,
	448, 1511,
	449, 1511,
	450, 1511,
	451, 1511,
	452, 1511,
	453, 1511,
	454, 1511,
	455, 1511,
	456, 1511,
	457, 1511,
	458, 1511,
	459, 1511,
	460, 1511,
	461, 1511,
	462, 1511,
	463, 1511,
	464, 1511,
	465, 1511,
	466, 1511,
	468, 1511,
	470, 1511,
	471, 1511,
	472, 1511,
	473, 1511,
	474, 1511,
	475, 1511,
	476, 1511,
	477, 1511,
	478, 1511,
	479, 1511,
	480, 1511,
	481, 1511,
	482, 1511,
	483, 1511,
	484, 1511,
	485, 1511,
	487, 1511,
	488, 1511,
	489, 1511,
	490, 1511,
	491, 1511,
	493, 1511,
	494, 1511,
	495, 1511,
	496, 1511,
	497, 1511,
	498, 1511,
	499, 1511,
	500, 1511,
	501, 1511,
	503, 1511,
	504, 1511,
	505, 1511,
	506, 1511,
	507, 1511,
	509, 1511,
	511, 1511,
	512, 1511,
	513, 1511,
	514, 1511,
	515, 1511,
	516, 1511,
	517, 1511,
	518, 1511,
	519, 1511,
	520, 1511,
	521, 1511,
	523, 1511,
	524, 1511,
	526, 1511,
	527, 1511,
	528, 1511,
	529, 1511,
	530, 1511,
	531, 1511,
	532, 1511,
	533, 1511,
	534, 1511,
	535, 1511,
	538, 1511,
	539, 1511,
	540, 1511,
	541, 1511,
	542, 1511,
	543, 1511,
	545, 1511,
	546, 1511,
	547, 1511,
	548, 1511,
	550, 1511,
	555, 1511,
	556, 1511,
	557, 1511,
	558, 1511,
	559, 1511,
	560, 1511,
	561, 1511,
	569, 1511,
	576, 1511,
	577, 1511,
	578, 1511,
	585, 1511,
	589, 1511,
	-2, 0,
	-1, 729,
	4, 1260,
	21, 1260,
	22, 1260,
	23, 1260,
	24, 1260,
	25, 1260,
	26, 1260,
	27, 1260,
	29, 1260,
	30, 1260,
	36, 1260,
	41, 1260,
	42, 1260,
	44, 1260,
	45, 1260,
	46, 1260,
	47, 1260,
	48, 1260,
	49, 1260,
	50, 1260,
	51, 1260,
	53, 1260,
	54, 1260,
	55, 1260,
	56, 1260,
	58, 1260,
	59, 1260,
	60, 1260,
	61, 1260,
	62, 1260,
	63, 1260,
	64, 1260,
	68, 1260,
	69, 1260,
	70, 1260,
	71, 1260,
	73, 1260,
	74, 1260,
	75, 1260,
	79, 1260,
	80, 1260,
	81, 1260,
	82, 1260,
	83, 1260,
	84, 1260,
	85, 1260,
	88, 1260,
	89, 1260,
	90, 1260,
	91, 1260,
	92, 1260,
	94, 1260,
	96, 1260,
	97, 1260,
	98, 1260,
	99, 1260,
	100, 1260,
	101, 1260,
	103, 1260,
	104, 1260,
	105, 1260,
	107, 1260,
	108, 1260,
	109, 1260,
	117, 1260,
	118, 1260,
	119, 1260,
	120, 1260,
	121, 1260,
	123, 1260,
	124, 1260,
	125, 1260,
	127, 1260,
	128, 1260,
	129, 1260,
	131, 1260,
	132, 1260,
	133, 1260,
	135, 1260,
	136, 1260,
	137, 1260,
	140, 1260,
	141, 1260,
	142, 1260,
	144, 1260,
	145, 1260,
	147, 1260,
	148, 1260,
	149, 1260,
	151, 1260,
	152, 1260,
	153, 1260,
	154, 1260,
	155, 1260,
	156, 1260,
	157, 1260,
	158, 1260,
	159, 1260,
	160, 1260,
	161, 1260,
	162, 1260,
	163, 1260,
	164, 1260,
	165, 1260,
	166, 1260,
	168, 1260,
	174, 1260,
	175, 1260,
	176, 1260,
	177, 1260,
	181, 1260,
	183, 1260,
	184, 1260,
	188, 1260,
	189, 1260,
	190, 1260,
	191, 1260,
	192, 1260,
	193, 1260,
	194, 1260,
	195, 1260,
	196, 1260,
	197, 1260,
	198, 1260,
	199, 1260,
	200, 1260,
	202, 1260,
	203, 1260,
	205, 1260,
	206, 1260,
	208, 1260,
	209, 1260,
	210, 1260,
	211, 1260,
	212, 1260,
	213, 1260,
	214, 1260,
	215, 1260,
	216, 1260,
	218, 1260,
	219, 1260,
	221, 1260,
	222, 1260,
	223, 1260,
	224, 1260,
	225, 1260,
	229, 1260,
	230, 1260,
	231, 1260,
	232, 1260,
	233, 1260,
	236, 1260,
	237, 1260,
	238, 1260,
	240, 1260,
	242, 1260,
	243, 1260,
	245, 1260,
	247, 1260,
	248, 1260,
	249, 1260,
	251, 1260,
	255, 1260,
	256, 1260,
	257, 1260,
	258, 1260,
	259, 1260,
	260, 1260,
	262, 1260,
	263, 1260,
	264, 1260,
	266, 1260,
	267, 1260,
	269, 1260,
	270, 1260,
	273, 1260,
	277, 1260,
	278, 1260,
	279, 1260,
	282, 1260,
	283, 1260,
	284, 1260,
	285, 1260,
	287, 1260,
	288, 1260,
	289, 1260,
	290, 1260,
	291, 1260,
	292, 1260,
	293, 1260,
	294, 1260,
	295, 1260,
	296, 1260,
	297, 1260,
	298, 1260,
	299, 1260,
	300, 1260,
	301, 1260,
	302, 1260,
	303, 1260,
	304, 1260,
	305, 1260,
	306, 1260,
	307, 1260,
	308, 1260,
	310, 1260,
	312, 1260,
	313, 1260,
	314, 1260,
	315, 1260,
	316, 1260,
	317, 1260,
	318, 1260,
	319, 1260,
	320, 1260,
	321, 1260,
	322, 1260,
	323, 1260,
	325, 1260,
	326, 1260,
	328, 1260,
	330, 1260,
	331, 1260,
	333, 1260,
	334, 1260,
	335, 1260,
	336, 1260,
	337, 1260,
	340, 1260,
	344, 1260,
	345, 1260,
	346, 1260,
	349, 1260,
	350, 1260,
	351, 1260,
	353, 1260,
	355, 1260,
	356, 1260,
	357, 1260,
	358, 1260,
	359, 1260,
	360, 1260,
	361, 1260,
	362, 1260,
	363, 1260,
	364, 1260,
	365, 1260,
	366, 1260,
	368, 1260,
	369, 1260,
	370, 1260,
	371, 1260,
	372, 1260,
	373, 1260,
	374, 1260,
	375, 1260,
	376, 1260,
	377, 1260,
	378, 1260,
	379, 1260,
	380, 1260,
	381, 1260,
	382, 1260,
	384, 1260,
	385, 1260,
	387, 1260,
	388, 1260,
	389, 1260,
	390, 1260,
	391, 1260,
	392, 1260,
	393, 1260,
	394, 1260,
	395, 1260,
	396, 1260,
	397, 1260,
	398, 1260,
	400, 1260,
	402, 1260,
	403, 1260,
	404, 1260,
	409, 1260,
	411, 1260,
	412, 1260,
	413, 1260,
	414, 1260,
	415, 1260,
	416, 1260,
	417, 1260,
	418, 1260,
	419, 1260,
	421, 1260,
	422, 1260,
	423, 1260,
	425, 1260,
	426, 1260,
	427, 1260,
	428, 1260,
	429, 1260,
	430, 1260,
	432, 1260,
	433, 1260,
	434, 1260,
	435, 1260,
	436, 1260,
	437, 1260,
	438, 1260,
	439, 1260,
	440, 1260,
	441, 1260,
	442, 1260,
	443, 1260,
	445, 1260,
	446, 1260,
	447, 1260,
	448, 1260,
	449, 1260,
	450, 1260,
	452, 1260,
	453, 1260,
	454, 1260,
	455, 1260,
	456, 1260,
	457, 1260,
	459, 1260,
	460, 1260,
	461, 1260,
	462, 1260,
	463, 1260,
	464, 1260,
	465, 1260,
	466, 1260,
	468, 1260,
	470, 1260,
	471, 1260,
	472, 1260,
	473, 1260,
	474, 1260,
	475, 1260,
	476, 1260,
	477, 1260,
	478, 1260,
	479, 1260,
	480, 1260,
	481, 1260,
	482, 1260,
	483, 1260,
	484, 1260,
	485, 1260,
	487, 1260,
	488, 1260,
	490, 1260,
	491, 1260,
	493, 1260,
	494, 1260,
	495, 1260,
	496, 1260,
	497, 1260,
	498, 1260,
	499, 1260,
	500, 1260,
	501, 1260,
	503, 1260,
	504, 1260,
	505, 1260,
	506, 1260,
	507, 1260,
	509, 1260,
	511, 1260,
	512, 1260,
	513, 1260,
	514, 1260,
	515, 1260,
	516, 1260,
	518, 1260,
	519, 1260,
	520, 1260,
	521, 1260,
	523, 1260,
	524, 1260,
	527, 1260,
	528, 1260,
	529, 1260,
	530, 1260,
	531, 1260,
	532, 1260,
	533, 1260,
	535, 1260,
	538, 1260,
	539, 1260,
	540, 1260,
	541, 1260,
	542, 1260,
	543, 1260,
	545, 1260,
	546, 1260,
	547, 1260,
	548, 1260,
	550, 1260,
	555, 1260,
	556, 1260,
	557, 1260,
	558, 1260,
	559, 1260,
	560, 1260,
	-2, 0,
	-1, 748,
	186, 2295,
	508, 2295,
	568, 2295,
	587, 2295,
	-2, 0,
	-1, 749,
	186, 2401,
	508, 2401,
	568, 2401,
	587, 2401,
	-2, 0,
	-1, 750,
	186, 2282,
	508, 2282,
	568, 2282,
	587, 2282,
	-2, 0,
	-1, 752,
	186, 2533,
	508, 2533,
	568, 2533,
	587, 2533,
	-2, 0,
	-1, 754,
	186, 2574,
	508, 2574,
	568, 2574,
	587, 2574,
	-2, 0,
	-1, 761,
	186, 2428,
	508, 2428,
	568, 2428,
	587, 2428,
	-2, 685,
	-1, 794,
	587, 2231,
	590, 2231,
	-2, 963,
	-1, 795,
	587, 2233,
	590, 2233,
	-2, 964,
	-1, 796,
	587, 2232,
	590, 2232,
	-2, 965,
	-1, 797,
	590, 2158,
	-2, 966,
	-1, 820,
	182, 251,
	-2, 0,
	-1, 844,
	43, 2205,
	-2, 0,
	-1, 845,
	545, 1238,
	-2, 1033,
	-1, 861,
	4, 1640,
	21, 1640,
	22, 1640,
	23, 1640,
	24, 1640,
	25, 1640,
	26, 1640,
	27, 1640,
	29, 1640,
	30, 1640,
	36, 1640,
	41, 1640,
	42, 1640,
	44, 1640,
	45, 1640,
	46, 1640,
	47, 1640,
	48, 1640,
	49, 1640,
	50, 1640,
	51, 1640,
	53, 1640,
	54, 1640,
	55, 1640,
	56, 1640,
	58, 1640,
	59, 1640,
	60, 1640,
	61, 1640,
	62, 1640,
	63, 1640,
	64, 1640,
	68, 1640,
	69, 1640,
	70, 1640,
	71, 1640,
	73, 1640,
	74, 1640,
	75, 1640,
	79, 1640,
	80, 1640,
	81, 1640,
	82, 1640,
	83, 1640,
	84, 1640,
	85, 1640,
	88, 1640,
	89, 1640,
	90, 1640,
	91, 1640,
	92, 1640,
	94, 1640,
	96, 1640,
	97, 1640,
	98, 1640,
	99, 1640,
	100, 1640,
	101, 1640,
	103, 1640,
	104, 1640,
	105, 1640,
	107, 1640,
	108, 1640,
	109, 1640,
	117, 1640,
	118, 1640,
	119, 1640,
	120, 1640,
	121, 1640,
	123, 1640,
	124, 1640,
	125, 1640,
	127, 1640,
	128, 1640,
	129, 1640,
	131, 1640,
	132, 1640,
	133, 1640,
	135, 1640,
	136, 1640,
	137, 1640,
	140, 1640,
	141, 1640,
	142, 1640,
	144, 1640,
	145, 1640,
	147, 1640,
	148, 1640,
	149, 1640,
	151, 1640,
	152, 1640,
	153, 1640,
	154, 1640,
	155, 1640,
	156, 1640,
	157, 1640,
	158, 1640,
	159, 1640,
	160, 1640,
	161, 1640,
	162, 1640,
	163, 1640,
	164, 1640,
	165, 1640,
	166, 1640,
	168, 1640,
	174, 1640,
	175, 1640,
	176, 1640,
	177, 1640,
	181, 1640,
	183, 1640,
	184, 1640,
	188, 1640,
	189, 1640,
	190, 1640,
	191, 1640,
	192, 1640,
	193, 1640,
	194, 1640,
	195, 1640,
	196, 1640,
	197, 1640,
	198, 1640,
	199, 1640,
	200, 1640,
	202, 1640,
	203, 1640,
	205, 1640,
	206, 1640,
	208, 1640,
	209, 1640,
	210, 1640,
	211, 1640,
	212, 1640,
	213, 1640,
	214, 1640,
	215, 1640,
	216, 1640,
	218, 1640,
	219, 1640,
	221, 1640,
	222, 1640,
	223, 1640,
	224, 1640,
	225, 1640,
	229, 1640,
	230, 1640,
	231, 1640,
	232, 1640,
	233, 1640,
	236, 1640,
	237, 1640,
	238, 1640,
	240, 1640,
	242, 1640,
	243, 1640,
	245, 1640,
	247, 1640,
	248, 1640,
	249, 1640,
	251, 1640,
	255, 1640,
	256, 1640,
	257, 1640,
	258, 1640,
	259, 1640,
	260, 1640,
	262, 1640,
	263, 1640,
	264, 1640,
	266, 1640,
	267, 1640,
	269, 1640,
	270, 1640,
	273, 1640,
	277, 1640,
	278, 1640,
	279, 1640,
	282, 1640,
	283, 1640,
	284, 1640,
	285, 1640,
	287, 1640,
	288, 1640,
	289, 1640,
	290, 1640,
	291, 1640,
	292, 1640,
	293, 1640,
	294, 1640,
	295, 1640,
	296, 1640,
	297, 1640,
	298, 1640,
	299, 1640,
	300, 1640,
	301, 1640,
	302, 1640,
	303, 1640,
	304, 1640,
	305, 1640,
	306, 1640,
	307, 1640,
	308, 1640,
	310, 1640,
	312, 1640,
	313, 1640,
	314, 1640,
	315, 1640,
	316, 1640,
	317, 1640,
	318, 1640,
	319, 1640,
	320, 1640,
	321, 1640,
	322, 1640,
	323, 1640,
	325, 1640,
	326, 1640,
	328, 1640,
	330, 1640,
	331, 1640,
	333, 1640,
	334, 1640,
	335, 1640,
	336, 1640,
	337, 1640,
	340, 1640,
	344, 1640,
	345, 1640,
	346, 1640,
	349, 1640,
	350, 1640,
	351, 1640,
	353, 1640,
	355, 1640,
	356, 1640,
	357, 1640,
	358, 1640,
	359, 1640,
	360, 1640,
	361, 1640,
	362, 1640,
	363, 1640,
	364, 1640,
	365, 1640,
	366, 1640,
	368, 1640,
	369, 1640,
	370, 1640,
	371, 1640,
	372, 1640,
	373, 1640,
	374, 1640,
	375, 1640,
	376, 1640,
	377, 1640,
	378, 1640,
	379, 1640,
	380, 1640,
	381, 1640,
	382, 1640,
	384, 1640,
	385, 1640,
	387, 1640,
	388, 1640,
	389, 1640,
	390, 1640,
	391, 1640,
	392, 1640,
	393, 1640,
	394, 1640,
	395, 1640,
	396, 1640,
	397, 1640,
	398, 1640,
	400, 1640,
	402, 1640,
	403, 1640,
	404, 1640,
	409, 1640,
	411, 1640,
	412, 1640,
	413, 1640,
	414, 1640,
	415, 1640,
	416, 1640,
	417, 1640,
	418, 1640,
	419, 1640,
	421, 1640,
	422, 1640,
	423, 1640,
	425, 1640,
	426, 1640,
	427, 1640,
	428, 1640,
	429, 1640,
	430, 1640,
	432, 1640,
	433, 1640,
	434, 1640,
	435, 1640,
	436, 1640,
	437, 1640,
	438, 1640,
	439, 1640,
	440, 1640,
	441, 1640,
	442, 1640,
	443, 1640,
	445, 1640,
	446, 1640,
	447, 1640,
	448, 1640,
	449, 1640,
	450, 1640,
	452, 1640,
	453, 1640,
	454, 1640,
	455, 1640,
	456, 1640,
	457, 1640,
	459, 1640,
	460, 1640,
	461, 1640,
	462, 1640,
	463, 1640,
	464, 1640,
	465, 1640,
	466, 1640,
	468, 1640,
	470, 1640,
	471, 1640,
	472, 1640,
	473, 1640,
	474, 1640,
	475, 1640,
	476, 1640,
	477, 1640,
	478, 1640,
	479, 1640,
	480, 1640,
	481, 1640,
	482, 1640,
	483, 1640,
	484, 1640,
	485, 1640,
	487, 1640,
	488, 1640,
	490, 1640,
	491, 1640,
	493, 1640,
	494, 1640,
	495, 1640,
	496, 1640,
	497, 1640,
	498, 1640,
	499, 1640,
	500, 1640,
	501, 1640,
	503, 1640,
	504, 1640,
	505, 1640,
	506, 1640,
	507, 1640,
	509, 1640,
	511, 1640,
	512, 1640,
	513, 1640,
	514, 1640,
	515, 1640,
	516, 1640,
	518, 1640,
	519, 1640,
	520, 1640,
	521, 1640,
	523, 1640,
	524, 1640,
	527, 1640,
	528, 1640,
	529, 1640,
	530, 1640,
	531, 1640,
	532, 1640,
	533, 1640,
	535, 1640,
	538, 1640,
	539, 1640,
	540, 1640,
	541, 1640,
	542, 1640,
	543, 1640,
	545, 1640,
	546, 1640,
	547, 1640,
	548, 1640,
	550, 1640,
	555, 1640,
	556, 1640,
	557, 1640,
	558, 1640,
	559, 1640,
	560, 1640,
	-2, 0,
	-1, 871,
	259, 399,
	-2, 0,
	-1, 942,
	389, 852,
	450, 852,
	491, 852,
	513, 852,
	-2, 0,
	-1, 943,
	389, 851,
	450, 851,
	491, 851,
	513, 851,
	-2, 791,
	-1, 947,
	1, 903,
	584, 903,
	586, 903,
	588, 903,
	-2, 0,
	-1, 948,
	1, 826,
	584, 826,
	586, 826,
	588, 826,
	-2, 0,
	-1, 949,
	1, 830,
	584, 830,
	586, 830,
	588, 830,
	-2, 0,
	-1, 950,
	1, 962,
	182, 962,
	584, 962,
	586, 962,
	588, 962,
	-2, 0,
	-1, 958,
	1, 857,
	584, 857,
	586, 857,
	588, 857,
	-2, 0,
	-1, 965,
	1, 903,
	584, 903,
	586, 903,
	588, 903,
	-2, 0,
	-1, 966,
	1, 905,
	584, 905,
	586, 905,
	588, 905,
	-2, 0,
	-1, 967,
	1, 908,
	584, 908,
	586, 908,
	588, 908,
	-2, 0,
	-1, 973,
	1, 926,
	584, 926,
	586, 926,
	588, 926,
	-2, 0,
	-1, 974,
	1, 928,
	584, 928,
	586, 928,
	588, 928,
	-2, 0,
	-1, 979,
	1, 956,
	584, 956,
	586, 956,
	588, 956,
	-2, 0,
	-1, 1026,
	169, 1515,
	182, 1515,
	272, 1515,
	338, 1515,
	-2, 1451,
	-1, 1041,
	169, 1514,
	182, 1514,
	272, 1514,
	338, 1514,
	-2, 1448,
	-1, 1068,
	587, 2230,
	-2, 693,
	-1, 1097,
	5, 2222,
	585, 2220,
	-2, 2211,
	-1, 1105,
	5, 2243,
	585, 2240,
	-2, 2231,
	-1, 1106,
	5, 2244,
	585, 2241,
	-2, 2232,
	-1, 1114,
	587, 2228,
	-2, 2210,
	-1, 1115,
	585, 2657,
	-2, 2229,
	-1, 1138,
	585, 2656,
	-2, 2245,
	-1, 1139,
	5, 1715,
	-2, 2627,
	-1, 1140,
	5, 1716,
	-2, 2628,
	-1, 1141,
	5, 1717,
	-2, 2642,
	-1, 1142,
	5, 1718,
	-2, 2606,
	-1, 1143,
	5, 1719,
	-2, 2640,
	-1, 1144,
	5, 1727,
	-2, 2619,
	-1, 1145,
	5, 1714,
	-2, 2615,
	-1, 1146,
	5, 1714,
	-2, 2614,
	-1, 1147,
	5, 1714,
	-2, 2633,
	-1, 1148,
	5, 1725,
	-2, 2608,
	-1, 1149,
	5, 1730,
	-2, 2607,
	-1, 1150,
	5, 1732,
	-2, 2652,
	-1, 1153,
	5, 1754,
	-2, 2645,
	-1, 1154,
	5, 1746,
	-2, 2646,
	-1, 1155,
	5, 1754,
	-2, 2647,
	-1, 1156,
	5, 1750,
	-2, 2648,
	-1, 1157,
	5, 1700,
	-2, 2620,
	-1, 1158,
	5, 1701,
	-2, 2621,
	-1, 1159,
	5, 1702,
	-2, 2609,
	-1, 1187,
	5, 1737,
	-2, 2653,
	-1, 1188,
	5, 1738,
	-2, 2643,
	-1, 1189,
	5, 1739,
	546, 1739,
	-2, 2610,
	-1, 1190,
	5, 1740,
	546, 1740,
	-2, 2611,
	-1, 1227,
	585, 2240,
	-2, 2231,
	-1, 1228,
	585, 2241,
	-2, 2232,
	-1, 1328,
	186, 2574,
	508, 2574,
	568, 2574,
	587, 2574,
	-2, 0,
	-1, 1331,
	1, 671,
	588, 671,
	-2, 1367,
	-1, 1459,
	357, 2206,
	411, 2206,
	452, 2206,
	578, 2206,
	-2, 2196,
	-1, 1470,
	589, 2206,
	-2, 2207,
	-1, 1479,
	1, 1235,
	584, 1235,
	586, 1235,
	588, 1235,
	-2, 1500,
	-1, 1527,
	396, 1032,
	545, 1032,
	-2, 394,
	-1, 1544,
	43, 2204,
	-2, 998,
	-1, 1551,
	1, 1235,
	584, 1235,
	586, 1235,
	588, 1235,
	-2, 1500,
	-1, 1559,
	4, 1260,
	21, 1260,
	22, 1260,
	23, 1260,
	24, 1260,
	25, 1260,
	26, 1260,
	27, 1260,
	29, 1260,
	30, 1260,
	36, 1260,
	41, 1260,
	42, 1260,
	44, 1260,
	45, 1260,
	46, 1260,
	47, 1260,
	48, 1260,
	49, 1260,
	50, 1260,
	51, 1260,
	53, 1260,
	54, 1260,
	55, 1260,
	56, 1260,
	58, 1260,
	59, 1260,
	60, 1260,
	61, 1260,
	62, 1260,
	63, 1260,
	64, 1260,
	68, 1260,
	69, 1260,
	70, 1260,
	71, 1260,
	73, 1260,
	74, 1260,
	75, 1260,
	79, 1260,
	80, 1260,
	81, 1260,
	82, 1260,
	83, 1260,
	84, 1260,
	85, 1260,
	88, 1260,
	89, 1260,
	90, 1260,
	91, 1260,
	92, 1260,
	94, 1260,
	96, 1260,
	97, 1260,
	98, 1260,
	99, 1260,
	100, 1260,
	101, 1260,
	103, 1260,
	104, 1260,
	105, 1260,
	107, 1260,
	108, 1260,
	109, 1260,
	117, 1260,
	118, 1260,
	119, 1260,
	120, 1260,
	121, 1260,
	123, 1260,
	124, 1260,
	125, 1260,
	127, 1260,
	128, 1260,
	129, 1260,
	131, 1260,
	132, 1260,
	133, 1260,
	135, 1260,
	136, 1260,
	137, 1260,
	140, 1260,
	141, 1260,
	142, 1260,
	144, 1260,
	145, 1260,
	147, 1260,
	148, 1260,
	149, 1260,
	151, 1260,
	152, 1260,
	153, 1260,
	154, 1260,
	155, 1260,
	156, 1260,
	157, 1260,
	158, 1260,
	159, 1260,
	160, 1260,
	161, 1260,
	162, 1260,
	163, 1260,
	164, 1260,
	165, 1260,
	166, 1260,
	174, 1260,
	175, 1260,
	176, 1260,
	177, 1260,
	181, 1260,
	183, 1260,
	184, 1260,
	188, 1260,
	189, 1260,
	190, 1260,
	191, 1260,
	192, 1260,
	193, 1260,
	194, 1260,
	195, 1260,
	196, 1260,
	197, 1260,
	198, 1260,
	199, 1260,
	200, 1260,
	202, 1260,
	203, 1260,
	205, 1260,
	206, 1260,
	208, 1260,
	209, 1260,
	210, 1260,
	211, 1260,
	212, 1260,
	213, 1260,
	214, 1260,
	215, 1260,
	216, 1260,
	218, 1260,
	219, 1260,
	221, 1260,
	222, 1260,
	223, 1260,
	224, 1260,
	225, 1260,
	230, 1260,
	231, 1260,
	232, 1260,
	233, 1260,
	236, 1260,
	237, 1260,
	238, 1260,
	240, 1260,
	242, 1260,
	243, 1260,
	245, 1260,
	247, 1260,
	248, 1260,
	249, 1260,
	251, 1260,
	255, 1260,
	256, 1260,
	257, 1260,
	258, 1260,
	259, 1260,
	260, 1260,
	262, 1260,
	263, 1260,
	264, 1260,
	266, 1260,
	267, 1260,
	269, 1260,
	270, 1260,
	273, 1260,
	277, 1260,
	278, 1260,
	279, 1260,
	282, 1260,
	283, 1260,
	284, 1260,
	285, 1260,
	287, 1260,
	288, 1260,
	289, 1260,
	290, 1260,
	291, 1260,
	292, 1260,
	293, 1260,
	294, 1260,
	295, 1260,
	296, 1260,
	297, 1260,
	298, 1260,
	299, 1260,
	300, 1260,
	301, 1260,
	302, 1260,
	303, 1260,
	304, 1260,
	305, 1260,
	306, 1260,
	307, 1260,
	308, 1260,
	310, 1260,
	312, 1260,
	313, 1260,
	314, 1260,
	315, 1260,
	316, 1260,
	317, 1260,
	318, 1260,
	319, 1260,
	320, 1260,
	321, 1260,
	322, 1260,
	323, 1260,
	325, 1260,
	326, 1260,
	330, 1260,
	331, 1260,
	333, 1260,
	334, 1260,
	335, 1260,
	336, 1260,
	337, 1260,
	340, 1260,
	342, 1260,
	344, 1260,
	345, 1260,
	346, 1260,
	349, 1260,
	350, 1260,
	351, 1260,
	353, 1260,
	355, 1260,
	356, 1260,
	357, 1260,
	358, 1260,
	359, 1260,
	360, 1260,
	361, 1260,
	362, 1260,
	363, 1260,
	364, 1260,
	365, 1260,
	366, 1260,
	368, 1260,
	369, 1260,
	370, 1260,
	371, 1260,
	372, 1260,
	373, 1260,
	374, 1260,
	375, 1260,
	376, 1260,
	377, 1260,
	378, 1260,
	379, 1260,
	380, 1260,
	381, 1260,
	382, 1260,
	384, 1260,
	385, 1260,
	387, 1260,
	388, 1260,
	389, 1260,
	390, 1260,
	391, 1260,
	392, 1260,
	393, 1260,
	394, 1260,
	395, 1260,
	396, 1260,
	397, 1260,
	398, 1260,
	400, 1260,
	402, 1260,
	403, 1260,
	404, 1260,
	409, 1260,
	411, 1260,
	412, 1260,
	413, 1260,
	414, 1260,
	415, 1260,
	416, 1260,
	417, 1260,
	418, 1260,
	419, 1260,
	421, 1260,
	422, 1260,
	423, 1260,
	425, 1260,
	426, 1260,
	427, 1260,
	428, 1260,
	429, 1260,
	430, 1260,
	432, 1260,
	433, 1260,
	434, 1260,
	435, 1260,
	436, 1260,
	437, 1260,
	438, 1260,
	439, 1260,
	440, 1260,
	441, 1260,
	442, 1260,
	443, 1260,
	445, 1260,
	446, 1260,
	447, 1260,
	448, 1260,
	449, 1260,
	450, 1260,
	452, 1260,
	453, 1260,
	454, 1260,
	455, 1260,
	456, 1260,
	457, 1260,
	459, 1260,
	460, 1260,
	461, 1260,
	462, 1260,
	463, 1260,
	464, 1260,
	465, 1260,
	466, 1260,
	468, 1260,
	470, 1260,
	471, 1260,
	472, 1260,
	473, 1260,
	474, 1260,
	475, 1260,
	476, 1260,
	477, 1260,
	478, 1260,
	479, 1260,
	480, 1260,
	481, 1260,
	482, 1260,
	483, 1260,
	484, 1260,
	485, 1260,
	487, 1260,
	488, 1260,
	490, 1260,
	491, 1260,
	493, 1260,
	494, 1260,
	495, 1260,
	496, 1260,
	497, 1260,
	498, 1260,
	499, 1260,
	500, 1260,
	501, 1260,
	503, 1260,
	504, 1260,
	505, 1260,
	506, 1260,
	507, 1260,
	509, 1260,
	511, 1260,
	512, 1260,
	513, 1260,
	514, 1260,
	515, 1260,
	516, 1260,
	518, 1260,
	519, 1260,
	520, 1260,
	521, 1260,
	523, 1260,
	524, 1260,
	527, 1260,
	528, 1260,
	529, 1260,
	530, 1260,
	531, 1260,
	532, 1260,
	533, 1260,
	535, 1260,
	538, 1260,
	539, 1260,
	540, 1260,
	541, 1260,
	542, 1260,
	543, 1260,
	545, 1260,
	546, 1260,
	547, 1260,
	548, 1260,
	550, 1260,
	555, 1260,
	556, 1260,
	557, 1260,
	558, 1260,
	559, 1260,
	560, 1260,
	-2, 0,
	-1, 1582,
	1, 539,
	584, 539,
	586, 539,
	588, 539,
	-2, 1471,
	-1, 1585,
	4, 2651,
	11, 2651,
	12, 2651,
	14, 2651,
	15, 2651,
	16, 2651,
	17, 2651,
	18, 2651,
	19, 2651,
	21, 2651,
	22, 2651,
	23, 2651,
	24, 2651,
	25, 2651,
	26, 2651,
	27, 2651,
	29, 2651,
	30, 2651,
	33, 2651,
	34, 2651,
	36, 2651,
	38, 2651,
	41, 2651,
	42, 2651,
	44, 2651,
	45, 2651,
	46, 2651,
	47, 2651,
	48, 2651,
	49, 2651,
	50, 2651,
	51, 2651,
	53, 2651,
	54, 2651,
	55, 2651,
	56, 2651,
	58, 2651,
	59, 2651,
	60, 2651,
	61, 2651,
	62, 2651,
	63, 2651,
	64, 2651,
	67, 2651,
	68, 2651,
	69, 2651,
	70, 2651,
	71, 2651,
	73, 2651,
	74, 2651,
	75, 2651,
	76, 2651,
	79, 2651,
	80, 2651,
	81, 2651,
	82, 2651,
	83, 2651,
	84, 2651,
	85, 2651,
	86, 2651,
	88, 2651,
	89, 2651,
	90, 2651,
	91, 2651,
	92, 2651,
	94, 2651,
	95, 2651,
	96, 2651,
	97, 2651,
	98, 2651,
	99, 2651,
	100, 2651,
	101, 2651,
	103, 2651,
	104, 2651,
	105, 2651,
	106, 2651,
	107, 2651,
	108, 2651,
	109, 2651,
	117, 2651,
	118, 2651,
	119, 2651,
	120, 2651,
	121, 2651,
	123, 2651,
	124, 2651,
	125, 2651,
	127, 2651,
	128, 2651,
	129, 2651,
	131, 2651,
	132, 2651,
	133, 2651,
	135, 2651,
	136, 2651,
	137, 2651,
	140, 2651,
	141, 2651,
	142, 2651,
	144, 2651,
	145, 2651,
	147, 2651,
	148, 2651,
	149, 2651,
	151, 2651,
	152, 2651,
	153, 2651,
	154, 2651,
	155, 2651,
	156, 2651,
	157, 2651,
	158, 2651,
	159, 2651,
	160, 2651,
	161, 2651,
	162, 2651,
	163, 2651,
	164, 2651,
	165, 2651,
	166, 2651,
	170, 2651,
	171, 2651,
	172, 2651,
	173, 2651,
	174, 2651,
	175, 2651,
	176, 2651,
	177, 2651,
	180, 2651,
	181, 2651,
	183, 2651,
	184, 2651,
	187, 2651,
	188, 2651,
	189, 2651,
	190, 2651,
	191, 2651,
	192, 2651,
	193, 2651,
	194, 2651,
	195, 2651,
	196, 2651,
	197, 2651,
	198, 2651,
	199, 2651,
	200, 2651,
	202, 2651,
	203, 2651,
	205, 2651,
	206, 2651,
	208, 2651,
	209, 2651,
	210, 2651,
	211, 2651,
	212, 2651,
	213, 2651,
	214, 2651,
	215, 2651,
	216, 2651,
	217, 2651,
	218, 2651,
	219, 2651,
	220, 2651,
	221, 2651,
	222, 2651,
	223, 2651,
	224, 2651,
	225, 2651,
	227, 2651,
	228, 2651,
	230, 2651,
	231, 2651,
	232, 2651,
	233, 2651,
	235, 2651,
	236, 2651,
	237, 2651,
	238, 2651,
	240, 2651,
	242, 2651,
	243, 2651,
	244, 2651,
	245, 2651,
	246, 2651,
	247, 2651,
	248, 2651,
	249, 2651,
	250, 2651,
	251, 2651,
	253, 2651,
	254, 2651,
	255, 2651,
	256, 2651,
	257, 2651,
	258, 2651,
	259, 2651,
	260, 2651,
	262, 2651,
	263, 2651,
	264, 2651,
	266, 2651,
	267, 2651,
	268, 2651,
	269, 2651,
	270, 2651,
	271, 2651,
	273, 2651,
	277, 2651,
	278, 2651,
	279, 2651,
	282, 2651,
	283, 2651,
	284, 2651,
	285, 2651,
	286, 2651,
	287, 2651,
	288, 2651,
	289, 2651,
	290, 2651,
	291, 2651,
	292, 2651,
	293, 2651,
	294, 2651,
	295, 2651,
	296, 2651,
	297, 2651,
	298, 2651,
	299, 2651,
	300, 2651,
	301, 2651,
	302, 2651,
	303, 2651,
	304, 2651,
	305, 2651,
	306, 2651,
	307, 2651,
	308, 2651,
	310, 2651,
	311, 2651,
	312, 2651,
	313, 2651,
	314, 2651,
	315, 2651,
	316, 2651,
	317, 2651,
	318, 2651,
	319, 2651,
	320, 2651,
	321, 2651,
	322, 2651,
	323, 2651,
	325, 2651,
	326, 2651,
	329, 2651,
	330, 2651,
	331, 2651,
	333, 2651,
	334, 2651,
	335, 2651,
	336, 2651,
	337, 2651,
	340, 2651,
	344, 2651,
	345, 2651,
	346, 2651,
	347, 2651,
	349, 2651,
	350, 2651,
	351, 2651,
	353, 2651,
	355, 2651,
	356, 2651,
	357, 2651,
	358, 2651,
	359, 2651,
	360, 2651,
	361, 2651,
	362, 2651,
	363, 2651,
	364, 2651,
	365, 2651,
	366, 2651,
	368, 2651,
	369, 2651,
	370, 2651,
	371, 2651,
	372, 2651,
	373, 2651,
	374, 2651,
	375, 2651,
	376, 2651,
	377, 2651,
	378, 2651,
	379, 2651,
	380, 2651,
	381, 2651,
	382, 2651,
	384, 2651,
	385, 2651,
	387, 2651,
	388, 2651,
	389, 2651,
	390, 2651,
	391, 2651,
	392, 2651,
	393, 2651,
	394, 2651,
	395, 2651,
	396, 2651,
	397, 2651,
	398, 2651,
	400, 2651,
	402, 2651,
	403, 2651,
	404, 2651,
	409, 2651,
	410, 2651,
	411, 2651,
	412, 2651,
	413, 2651,
	414, 2651,
	415, 2651,
	416, 2651,
	417, 2651,
	418, 2651,
	419, 2651,
	421, 2651,
	422, 2651,
	423, 2651,
	424, 2651,
	425, 2651,
	426, 2651,
	427, 2651,
	428, 2651,
	429, 2651,
	430, 2651,
	431, 2651,
	432, 2651,
	433, 2651,
	434, 2651,
	435, 2651,
	436, 2651,
	437, 2651,
	438, 2651,
	439, 2651,
	440, 2651,
	441, 2651,
	442, 2651,
	443, 2651,
	445, 2651,
	446, 2651,
	447, 2651,
	448, 2651,
	449, 2651,
	450, 2651,
	452, 2651,
	453, 2651,
	454, 2651,
	455, 2651,
	456, 2651,
	457, 2651,
	458, 2651,
	459, 2651,
	460, 2651,
	461, 2651,
	462, 2651,
	463, 2651,
	464, 2651,
	465, 2651,
	466, 2651,
	468, 2651,
	470, 2651,
	471, 2651,
	472, 2651,
	473, 2651,
	474, 2651,
	475, 2651,
	476, 2651,
	477, 2651,
	478, 2651,
	479, 2651,
	480, 2651,
	481, 2651,
	482, 2651,
	483, 2651,
	484, 2651,
	485, 2651,
	487, 2651,
	488, 2651,
	489, 2651,
	490, 2651,
	491, 2651,
	493, 2651,
	494, 2651,
	495, 2651,
	496, 2651,
	497, 2651,
	498, 2651,
	499, 2651,
	500, 2651,
	501, 2651,
	503, 2651,
	504, 2651,
	505, 2651,
	506, 2651,
	507, 2651,
	509, 2651,
	511, 2651,
	512, 2651,
	513, 2651,
	514, 2651,
	515, 2651,
	516, 2651,
	518, 2651,
	519, 2651,
	520, 2651,
	521, 2651,
	523, 2651,
	524, 2651,
	527, 2651,
	528, 2651,
	529, 2651,
	530, 2651,
	531, 2651,
	532, 2651,
	533, 2651,
	535, 2651,
	538, 2651,
	539, 2651,
	540, 2651,
	541, 2651,
	542, 2651,
	543, 2651,
	545, 2651,
	546, 2651,
	547, 2651,
	548, 2651,
	550, 2651,
	555, 2651,
	556, 2651,
	557, 2651,
	558, 2651,
	559, 2651,
	560, 2651,
	561, 2651,
	563, 2651,
	566, 2651,
	567, 2651,
	568, 2651,
	569, 2651,
	570, 2651,
	571, 2651,
	573, 2651,
	574, 2651,
	575, 2651,
	576, 2651,
	577, 2651,
	578, 2651,
	579, 2651,
	580, 2651,
	581, 2651,
	583, 2651,
	586, 2651,
	587, 2651,
	589, 2651,
	590, 2651,
	-2, 0,
	-1, 1590,
	186, 2533,
	508, 2533,
	568, 2533,
	587, 2533,
	-2, 0,
	-1, 1639,
	389, 852,
	450, 852,
	491, 852,
	513, 852,
	-2, 0,
	-1, 1666,
	1, 847,
	584, 847,
	586, 847,
	588, 847,
	-2, 0,
	-1, 1667,
	1, 890,
	584, 890,
	586, 890,
	588, 890,
	-2, 0,
	-1, 1668,
	1, 898,
	584, 898,
	586, 898,
	588, 898,
	-2, 0,
	-1, 1671,
	1, 856,
	584, 856,
	586, 856,
	588, 856,
	-2, 0,
	-1, 1673,
	1, 862,
	584, 862,
	586, 862,
	588, 862,
	-2, 0,
	-1, 1676,
	1, 858,
	584, 858,
	586, 858,
	588, 858,
	-2, 0,
	-1, 1681,
	1, 872,
	584, 872,
	586, 872,
	588, 872,
	-2, 0,
	-1, 1710,
	1, 2596,
	584, 2596,
	586, 2596,
	587, 2596,
	588, 2596,
	-2, 924,
	-1, 1711,
	1, 2530,
	584, 2530,
	586, 2530,
	587, 2530,
	588, 2530,
	-2, 925,
	-1, 1715,
	1, 937,
	584, 937,
	586, 937,
	588, 937,
	-2, 0,
	-1, 1730,
	1, 1362,
	588, 1362,
	-2, 1367,
	-1, 1733,
	169, 1514,
	182, 1514,
	272, 1514,
	338, 1514,
	-2, 1452,
	-1, 1833,
	150, 1473,
	169, 1473,
	182, 1473,
	239, 1473,
	272, 1473,
	338, 1473,
	348, 1473,
	525, 1473,
	-2, 1919,
	-1, 1893,
	586, 2092,
	-2, 0,
	-1, 1928,
	150, 1473,
	169, 1473,
	182, 1473,
	239, 1473,
	272, 1473,
	338, 1473,
	348, 1473,
	525, 1473,
	-2, 1601,
	-1, 1962,
	508, 2530,
	587, 2530,
	590, 2530,
	-2, 0,
	-1, 1979,
	585, 1742,
	-2, 1730,
	-1, 2010,
	186, 2530,
	587, 2530,
	590, 2530,
	-2, 0,
	-1, 2058,
	1, 673,
	588, 673,
	-2, 1367,
	-1, 2184,
	220, 252,
	-2, 2239,
	-1, 2185,
	220, 253,
	-2, 302,
	-1, 2289,
	1, 849,
	584, 849,
	586, 849,
	588, 849,
	-2, 0,
	-1, 2290,
	1, 892,
	584, 892,
	586, 892,
	588, 892,
	-2, 0,
	-1, 2291,
	1, 900,
	584, 900,
	586, 900,
	588, 900,
	-2, 0,
	-1, 2292,
	1, 939,
	584, 939,
	586, 939,
	588, 939,
	-2, 0,
	-1, 2329,
	1, 874,
	584, 874,
	586, 874,
	588, 874,
	-2, 0,
	-1, 2385,
	429, 1541,
	430, 1541,
	-2, 1775,
	-1, 2416,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1795,
	-1, 2417,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1796,
	-1, 2418,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1797,
	-1, 2419,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1798,
	-1, 2420,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1799,
	-1, 2421,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1800,
	-1, 2422,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1801,
	-1, 2423,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1802,
	-1, 2435,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1814,
	-1, 2436,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1815,
	-1, 2437,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1816,
	-1, 2441,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1823,
	-1, 2447,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1827,
	-1, 2449,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1835,
	-1, 2450,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1836,
	-1, 2451,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1837,
	-1, 2452,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1838,
	-1, 2624,
	5, 2243,
	186, 2103,
	585, 2240,
	-2, 2231,
	-1, 2625,
	186, 2104,
	-2, 2602,
	-1, 2626,
	186, 2105,
	-2, 2427,
	-1, 2627,
	186, 2106,
	-2, 2313,
	-1, 2628,
	186, 2107,
	-2, 2367,
	-1, 2629,
	186, 2108,
	-2, 2412,
	-1, 2630,
	186, 2109,
	-2, 2528,
	-1, 2631,
	186, 2110,
	-2, 1902,
	-1, 2702,
	1, 1602,
	2, 1602,
	106, 1602,
	150, 1602,
	169, 1602,
	182, 1602,
	187, 1602,
	204, 1602,
	207, 1602,
	235, 1602,
	239, 1602,
	250, 1602,
	268, 1602,
	272, 1602,
	311, 1602,
	338, 1602,
	342, 1602,
	348, 1602,
	420, 1602,
	424, 1602,
	525, 1602,
	536, 1602,
	552, 1602,
	553, 1602,
	554, 1602,
	564, 1602,
	584, 1602,
	586, 1602,
	588, 1602,
	590, 1602,
	-2, 1601,
	-1, 2715,
	585, 2212,
	-2, 2226,
	-1, 2717,
	1, 319,
	552, 319,
	-2, 1500,
	-1, 2744,
	585, 1741,
	-2, 1731,
	-1, 2921,
	1, 1235,
	584, 1235,
	586, 1235,
	588, 1235,
	-2, 1500,
	-1, 3090,
	343, 1544,
	-2, 2641,
	-1, 3091,
	343, 1545,
	-2, 2513,
	-1, 3095,
	429, 2169,
	430, 2169,
	-2, 1900,
	-1, 3096,
	429, 2173,
	430, 2173,
	-2, 1901,
	-1, 3097,
	429, 2170,
	430, 2170,
	-2, 1900,
	-1, 3098,
	429, 2174,
	430, 2174,
	-2, 1901,
	-1, 3111,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1825,
	-1, 3112,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1829,
	-1, 3118,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1831,
	-1, 3338,
	1, 670,
	584, 670,
	586, 670,
	588, 670,
	-2, 1367,
	-1, 3494,
	43, 2204,
	-2, 999,
	-1, 3499,
	1, 1235,
	584, 1235,
	586, 1235,
	588, 1235,
	-2, 1500,
	-1, 3605,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1833,
	-1, 3612,
	244, 0,
	246, 0,
	329, 0,
	-2, 1852,
	-1, 3680,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1881,
	-1, 3681,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1882,
	-1, 3682,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1883,
	-1, 3686,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1887,
	-1, 3687,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1888,
	-1, 3688,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1889,
	-1, 3735,
	585, 2213,
	-2, 2227,
	-1, 3899,
	587, 2759,
	-2, 1426,
	-1, 3957,
	244, 0,
	246, 0,
	329, 0,
	-2, 1853,
	-1, 3960,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1856,
	-1, 3961,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1858,
	-1, 4053,
	587, 2228,
	-2, 1270,
	-1, 4199,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1857,
	-1, 4200,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1859,
	-1, 4211,
	244, 0,
	-2, 1892,
	-1, 4381,
	244, 0,
	-2, 1893,
	-1, 4563,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 2605,
}

const sqlPrivate = 57344

const sqlLast = 127158

var sqlAct = [...]int{
	266, 4659, 3483, 2986, 4745, 3249, 2999, 4556, 4615, 4544,
	4254, 4438, 4416, 4562, 4303, 3482, 4555, 4408, 4573, 4686,
	4531, 4512, 4459, 4434, 2106, 3940, 4574, 4515, 1220, 4575,
	4334, 2806, 4628, 4240, 2850, 2870, 4310, 4495, 2256, 1491,
	3645, 4155, 2181, 4385, 4561, 4116, 4096, 4049, 4139, 1231,
	4150, 4220, 1051, 3597, 1104, 4259, 2395, 3883, 4137, 4188,
	3360, 4130, 3891, 1304, 1300, 3516, 258, 3826, 2657, 3420,
	4319, 1966, 4050, 3104, 4348, 796, 2265, 1742, 2883, 1293,
	4160, 3510, 4034, 2464, 3846, 2040, 3478, 3864, 759, 2403,
	3363, 3848, 1934, 3468, 1286, 4216, 3557, 1364, 3555, 2975,
	2956, 796, 2114, 3738, 3008, 2945, 3010, 3272, 3292, 3939,
	3021, 3264, 3232, 873, 869, 4, 1042, 3018, 1606, 3253,
	2125, 3001, 2987, 3382, 2396, 1456, 1050, 175, 2972, 4660,
	3996, 2229, 2970, 1903, 2808, 3349, 2175, 2176, 3007, 2695,
	3231, 4386, 3706, 1647, 1879, 2400, 2263, 1841, 1811, 2477,
	3255, 2542, 3088, 3357, 1298, 864, 791, 1463, 1546, 3017,
	260, 2898, 1967, 2949, 2957, 2152, 259, 2171, 2694, 2159,
	2849, 1347, 1211, 2094, 2697, 2038, 1730, 1101, 2098, 1272,
	3299, 2675, 1904, 2533, 2654, 2461, 2384, 2084, 1106, 2367,
	2728, 2365, 3480, 1583, 2980, 2216, 2831, 1295, 2794, 793,
	797, 1549, 4460, 1604, 798, 1333, 3011, 2727, 2536, 1214,
	2684, 690, 2514, 1193, 1874, 2586, 1913, 2665, 2620, 1825,
	175, 2544, 1920, 1744, 676, 1743, 184, 1681, 698, 1923,
	741, 1666, 2215, 1228, 2242, 802, 185, 2366, 1283, 2368,
	1581, 805, 1210, 753, 1486, 1574, 2113, 4616, 2389, 1082,
	2016, 2013, 693, 44, 43, 41, 1216, 32, 30, 28,
	1191, 802, 3141, 1729, 1749, 1497, 701, 805, 936, 956,
	3720, 3135, 3721, 4758, 2029, 3251, 716, 2674, 845, 2029,
	1046, 4748, 2029, 2029, 1108, 3535, 2029, 1223, 1757, 1758,
	1097, 4733, 108, 2029, 4732, 2674, 1342, 1103, 2674, 4722,
	888, 1046, 4704, 2190, 4702, 1151, 4258, 1342, 4258, 3535,
	4647, 1788, 4604, 3525, 2190, 1490, 4605, 4597, 1760, 4595,
	4592, 2674, 2264, 2674, 4593, 4589, 1080, 4559, 4558, 4590,
	4557, 2190, 2190, 3710, 2050, 4552, 4551, 1672, 4542, 2050,
	2050, 4540, 4258, 4537, 1813, 4258, 4510, 4322, 4484, 3526,
	4258, 4477, 2735, 1759, 4476, 2674, 4471, 4470, 2674, 4464,
	4258, 4258, 4430, 2190, 4383, 4365, 4107, 4362, 2735, 3926,
	4017, 2190, 4359, 4312, 1511, 4275, 4258, 4313, 4274, 2190,
	4265, 4264, 2190, 1208, 2190, 4258, 4257, 4227, 4201, 4179,
	4258, 2190, 2735, 2050, 4168, 2190, 3103, 4091, 3535, 1194,
	1194, 2674, 1027, 4074, 3959, 3907, 2190, 2674, 2735, 3552,
	3901, 3862, 1026, 3307, 3552, 3863, 2490, 2491, 2492, 2509,
	2510, 2511, 3202, 3203, 3322, 3730, 3728, 3713, 2015, 3731,
	3729, 2674, 2755, 3629, 3625, 3551, 2512, 2190, 2674, 3552,
	3542, 3321, 3248, 3243, 3543, 3242, 2674, 2674, 1041, 2674,
	3193, 3191, 1036, 2731, 3194, 3192, 3183, 1765, 3181, 3152,
	3184, 3150, 2674, 2674, 1243, 2674, 4485, 3151, 93, 1813,
	1757, 1758, 4387, 1790, 1791, 1792, 1801, 1802, 1803, 1047,
	3025, 2997, 4378, 2996, 2050, 2252, 1195, 2252, 2502, 2190,
	2778, 4366, 1794, 1788, 2674, 2047, 2667, 2498, 2734, 2725,
	1760, 4322, 2735, 2674, 1787, 1789, 2719, 2673, 1250, 1807,
	2190, 2674, 3202, 3203, 2754, 2251, 1197, 1499, 1198, 2252,
	2050, 3710, 2674, 1226, 2666, 4148, 1813, 4107, 4075, 3926,
	1222, 3543, 2873, 2793, 2063, 1759, 2028, 2044, 2047, 2951,
	2189, 230, 2118, 3140, 2893, 1779, 1244, 2791, 1757, 1758,
	1899, 1485, 3809, 3600, 1776, 3576, 1921, 2539, 2164, 1224,
	3527, 1649, 2711, 1780, 2710, 2709, 2708, 2707, 1199, 1196,
	1035, 1034, 2503, 2504, 2505, 2506, 1033, 230, 1760, 3528,
	1613, 1032, 2497, 1031, 1030, 1510, 1029, 1757, 1758, 232,
	1025, 3208, 1024, 1023, 3065, 1490, 1022, 1021, 1020, 1019,
	1018, 1017, 1016, 1015, 1014, 1013, 1012, 1011, 1010, 1009,
	1788, 934, 933, 1759, 932, 931, 930, 1760, 929, 928,
	1757, 1758, 927, 926, 925, 232, 924, 923, 2030, 1782,
	1783, 1784, 1785, 2030, 922, 1810, 2030, 2030, 231, 1765,
	2030, 921, 920, 1813, 919, 2540, 918, 2030, 917, 916,
	1760, 224, 1759, 915, 914, 2507, 2508, 913, 912, 911,
	225, 910, 1779, 909, 908, 907, 906, 905, 904, 903,
	902, 1776, 901, 891, 231, 890, 1798, 886, 885, 1808,
	865, 3208, 186, 879, 878, 1759, 1787, 1789, 2500, 863,
	862, 819, 818, 817, 816, 1505, 808, 3218, 807, 806,
	774, 765, 764, 1804, 763, 1805, 2027, 73, 1781, 868,
	867, 73, 1774, 1775, 747, 254, 39, 1765, 186, 253,
	252, 4162, 251, 250, 74, 3953, 249, 2541, 74, 2538,
	1796, 248, 247, 246, 1309, 1106, 245, 244, 243, 242,
	78, 241, 240, 239, 78, 1780, 1782, 1783, 1784, 1785,
	238, 230, 237, 3525, 236, 235, 1765, 234, 1106, 233,
	1499, 4012, 1106, 3971, 148, 3751, 1812, 3724, 2322, 1810,
	3553, 3295, 3163, 3146, 3137, 3048, 2932, 2739, 1367, 230,
	87, 2716, 1367, 2701, 87, 2092, 3246, 3218, 1806, 1765,
	1309, 2569, 2049, 2555, 2553, 1924, 1947, 4580, 1294, 232,
	2765, 1852, 2983, 1787, 1789, 2028, 1795, 1493, 2047, 2044,
	1346, 1106, 2754, 1106, 1351, 1106, 230, 1810, 1756, 2360,
	871, 1309, 2965, 1353, 871, 3247, 1230, 232, 1244, 1774,
	1775, 1337, 49, 2501, 107, 2259, 49, 1599, 107, 93,
	104, 4252, 3219, 93, 104, 2047, 1459, 1309, 231, 1470,
	1294, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 1810,
	1843, 224, 1780, 1471, 232, 4560, 4539, 1309, 1466, 1786,
	225, 4445, 4375, 1882, 1309, 1461, 231, 2543, 4369, 1617,
	1881, 4390, 1106, 4215, 1106, 4169, 1674, 4147, 1309, 224,
	1781, 1812, 186, 1489, 1106, 1810, 1106, 94, 225, 4022,
	2666, 94, 1885, 4367, 1882, 1498, 1504, 1277, 1280, 3994,
	3993, 1881, 1244, 231, 3987, 1294, 1294, 1799, 3986, 2258,
	186, 3867, 1290, 3985, 4164, 3978, 224, 3977, 1555, 1558,
	3975, 1331, 3219, 1880, 1810, 225, 3970, 3967, 3966, 1099,
	3861, 3755, 1309, 1477, 3754, 3753, 1561, 3734, 1812, 1360,
	3701, 1453, 1458, 3700, 3202, 3203, 3699, 186, 1850, 3621,
	802, 1106, 3616, 3290, 1106, 3239, 805, 3230, 2487, 2488,
	2489, 2513, 2499, 2493, 3201, 2495, 2496, 2494, 2481, 2482,
	2483, 2484, 2485, 2486, 3198, 3197, 1786, 3204, 3205, 3206,
	3207, 3209, 3210, 2537, 175, 175, 1326, 2232, 3195, 1544,
	1488, 3190, 3189, 3188, 1487, 3185, 1603, 1781, 3182, 3202,
	3203, 1618, 3162, 1845, 1844, 3145, 1842, 1499, 3138, 2748,
	1797, 3136, 230, 1586, 1588, 1771, 1772, 1778, 1800, 1777,
	1773, 2998, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 3807, 97, 2702, 1317, 3981, 97, 2526, 1756, 3980,
	2197, 2195, 1843, 1207, 1755, 4752, 4696, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1812, 2967, 4695, 3868, 4661,
	232, 4614, 1337, 3202, 3203, 1337, 3212, 3204, 3205, 3206,
	3207, 3209, 3210, 3244, 3217, 1499, 3313, 4612, 1232, 3647,
	1106, 4502, 4437, 4426, 183, 100, 1106, 103, 183, 100,
	4423, 103, 4422, 4421, 1577, 4402, 4389, 4388, 1049, 1690,
	4363, 4347, 4346, 1761, 1762, 1763, 1764, 1766, 1767, 231,
	230, 2467, 230, 3208, 4332, 4329, 230, 4328, 4323, 4271,
	872, 4248, 224, 4213, 872, 148, 4196, 230, 4195, 148,
	4176, 225, 4175, 1734, 4133, 4108, 1777, 1773, 1598, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 4011, 1047,
	1612, 1575, 3992, 186, 3927, 1728, 3868, 4163, 232, 3921,
	232, 3918, 4391, 3287, 232, 3795, 3794, 3778, 3208, 3777,
	1832, 3775, 3716, 3704, 3611, 232, 1830, 1763, 1764, 1766,
	1767, 3554, 3536, 3502, 2737, 3437, 151, 3395, 3362, 3315,
	151, 1106, 1106, 1106, 3167, 3166, 1623, 1106, 2473, 3161,
	230, 187, 3127, 1640, 1228, 187, 1228, 231, 2944, 231,
	1888, 1887, 1886, 231, 1675, 1883, 1875, 1873, 2746, 3218,
	224, 1367, 224, 2745, 231, 2713, 224, 2706, 2672, 225,
	1106, 225, 3208, 796, 1901, 225, 2551, 224, 1829, 1984,
	796, 1946, 1902, 1309, 1897, 1896, 225, 1895, 232, 1894,
	2966, 2982, 1731, 866, 1893, 1892, 1891, 186, 1223, 1890,
	1223, 1889, 1950, 1870, 1869, 1910, 1868, 1027, 186, 230,
	1739, 1867, 1738, 1963, 3218, 1866, 1865, 1026, 1864, 1733,
	2011, 1863, 1862, 1757, 1758, 1861, 1860, 1859, 1858, 1857,
	1884, 1810, 1856, 1470, 1845, 1831, 1735, 231, 1958, 1752,
	1753, 2075, 2074, 1828, 1823, 2083, 2085, 1325, 2260, 1309,
	224, 230, 1955, 1760, 1248, 1239, 1106, 232, 1951, 225,
	1309, 4136, 4018, 3963, 3750, 1907, 1908, 3727, 3719, 3149,
	3202, 3203, 2704, 4232, 175, 4020, 1580, 230, 1106, 4077,
	1470, 186, 3749, 1844, 1367, 3311, 1810, 1826, 1759, 3202,
	3203, 1876, 1877, 3531, 2083, 1942, 1931, 1194, 2108, 232,
	1348, 4693, 1350, 2083, 3219, 2568, 231, 2554, 2552, 4685,
	2081, 2871, 1047, 4424, 4324, 4315, 2083, 4314, 4167, 224,
	1343, 4110, 4109, 4076, 2056, 232, 4014, 3930, 225, 3929,
	2090, 3928, 3722, 802, 3538, 1337, 3537, 3871, 4320, 805,
	802, 1342, 2055, 1953, 1882, 1924, 805, 1342, 231, 3598,
	186, 1881, 3821, 1726, 4251, 1929, 1639, 3187, 3186, 3219,
	3109, 224, 1349, 2078, 1922, 4370, 2836, 3364, 2854, 1345,
	225, 3792, 1959, 2069, 231, 1007, 1932, 1854, 230, 2007,
	4626, 1648, 1316, 1900, 1691, 3398, 2032, 224, 2257, 3485,
	4368, 3484, 186, 1342, 4311, 4600, 225, 4585, 4572, 3469,
	1926, 1941, 1940, 1939, 2161, 1937, 1936, 1935, 3022, 3429,
	1649, 3547, 1865, 1865, 1309, 1309, 230, 4217, 186, 2281,
	1008, 2177, 3875, 3858, 1367, 3823, 232, 1964, 3818, 3800,
	3573, 3336, 1580, 3251, 1226, 2058, 1226, 1339, 1047, 3208,
	3649, 1222, 2534, 1222, 4267, 4244, 3213, 3211, 3212, 3204,
	3205, 3206, 3207, 3209, 3210, 2879, 1954, 2744, 1496, 3155,
	1503, 1898, 1509, 1978, 232, 1878, 3476, 4581, 1851, 2226,
	1224, 1554, 1224, 2118, 2233, 231, 1482, 2080, 3770, 4594,
	230, 1320, 1276, 2833, 1981, 4591, 2890, 3521, 224, 2054,
	2887, 2885, 4417, 4151, 2146, 1627, 2151, 225, 4509, 2156,
	2052, 3213, 3211, 3212, 3204, 3205, 3206, 3207, 3209, 3210,
	2061, 4399, 3367, 231, 2878, 2079, 1579, 1344, 1309, 186,
	1309, 3787, 1309, 3005, 2086, 2076, 224, 2979, 232, 1597,
	3461, 1602, 2182, 2187, 4582, 225, 858, 4644, 1309, 1309,
	4062, 1611, 2832, 1616, 3592, 2225, 4645, 4060, 4293, 1309,
	1529, 2124, 4064, 1521, 1688, 3340, 3836, 186, 1005, 2779,
	988, 1309, 1670, 1309, 1309, 1309, 1206, 1670, 1689, 4675,
	3206, 3207, 3209, 3210, 1340, 2335, 802, 231, 2333, 1483,
	3124, 1003, 805, 1341, 1001, 2179, 796, 999, 2070, 4747,
	224, 996, 3312, 4286, 2144, 3342, 4277, 2976, 2797, 225,
	2280, 4105, 2267, 4104, 2222, 1673, 3834, 3833, 1106, 3122,
	3825, 3815, 2582, 2795, 3814, 2797, 1488, 1810, 2227, 3812,
	1487, 186, 1350, 2290, 3835, 3811, 2581, 3799, 1667, 2239,
	2795, 3765, 3764, 3465, 3464, 3306, 3160, 1530, 2262, 2143,
	859, 3159, 3158, 2155, 3157, 3113, 2273, 2896, 2895, 2892,
	2881, 2869, 2868, 2864, 1687, 2285, 2863, 2862, 2059, 2841,
	2188, 4268, 4245, 2840, 1669, 2801, 2726, 2448, 1732, 1669,
	2738, 2405, 1579, 2342, 4194, 1625, 1106, 1525, 1106, 3202,
	3203, 2247, 1349, 2838, 2349, 1106, 2291, 1620, 1984, 1984,
	1367, 1668, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2236, 1106,
	2249, 1106, 1106, 1106, 1106, 2208, 2207, 2245, 3364, 2834,
	4027, 1577, 2268, 2244, 2241, 2244, 802, 1567, 4059, 1566,
	3119, 2377, 805, 2257, 1342, 2364, 1350, 1106, 2253, 3574,
	2254, 1106, 1106, 2357, 1326, 2206, 3427, 2834, 2539, 1106,
	1565, 4676, 1564, 1106, 3120, 1106, 1106, 2352, 3125, 993,
	4680, 2277, 2272, 1367, 3397, 2307, 1343, 2786, 1262, 1106,
	1106, 1106, 1106, 1767, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 2289, 4026, 1724, 1621, 1538, 2149, 3028, 2297,
	1047, 1543, 1047, 2087, 2088, 2375, 1349, 2375, 4058, 2115,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2515,
	2516, 2824, 1045, 1106, 1332, 3204, 3205, 3206, 3207, 3209,
	3210, 2329, 1641, 2515, 2531, 1228, 1484, 1912, 3208, 2858,
	2401, 2402, 1367, 2111, 2339, 4078, 2540, 1700, 3086, 3210,
	2463, 1228, 2851, 2852, 1938, 2388, 2471, 2534, 4706, 2577,
	3101, 2851, 2852, 2469, 2373, 4681, 2373, 1106, 1367, 2810,
	4410, 2718, 2116, 2117, 2851, 2852, 2351, 2823, 2623, 2623,
	2637, 2246, 2515, 2361, 2369, 2658, 2660, 3784, 2376, 1223,
	3582, 2664, 2363, 1339, 2362, 1737, 1027, 1686, 2479, 1027,
	1027, 1725, 2112, 2294, 2034, 1223, 2392, 2036, 2298, 2393,
	2394, 1044, 2530, 2041, 3428, 2463, 3843, 2043, 1916, 3581,
	2689, 3062, 2046, 1649, 861, 860, 1649, 4193, 2541, 1324,
	2538, 2543, 2459, 3638, 4644, 2714, 2837, 2348, 1550, 1637,
	2118, 2800, 2889, 2371, 3218, 2288, 4578, 1294, 3773, 3121,
	2800, 1942, 1343, 4103, 3813, 1704, 3810, 899, 3463, 3123,
	4061, 2457, 1978, 1978, 2475, 3425, 1919, 688, 4656, 2891,
	3844, 1309, 1309, 1344, 2888, 4683, 2861, 2528, 2886, 2884,
	4046, 1914, 2813, 1981, 1981, 2681, 3339, 1548, 2839, 3100,
	4412, 2194, 2193, 683, 1194, 1294, 1683, 2358, 4664, 1917,
	2732, 1931, 3414, 3093, 3094, 3782, 2374, 4663, 2374, 4056,
	2724, 3842, 175, 1367, 4042, 2680, 1810, 2579, 3796, 1626,
	1046, 2703, 2580, 3635, 2619, 2583, 2649, 2584, 2585, 2632,
	1340, 1294, 1294, 2662, 4709, 2796, 2774, 4633, 3406, 1341,
	1524, 1047, 1915, 3945, 2768, 2670, 2671, 1984, 2686, 2687,
	2923, 1047, 2682, 1235, 3944, 1047, 3415, 2767, 997, 1337,
	1929, 3068, 856, 1884, 855, 4736, 1527, 4481, 4043, 1339,
	2688, 3518, 2693, 3266, 2334, 2699, 2700, 2332, 2543, 2729,
	2372, 997, 2372, 2543, 997, 1367, 772, 998, 4491, 3219,
	3519, 997, 3407, 2639, 2029, 1233, 4546, 3413, 4547, 1309,
	4236, 3797, 2453, 2872, 2924, 3636, 2776, 2162, 1972, 2099,
	2798, 2747, 2740, 2866, 2100, 1106, 1106, 2865, 1106, 4579,
	4046, 2454, 2770, 1459, 2802, 1226, 2455, 2751, 1876, 1877,
	2460, 2759, 1222, 3405, 4418, 2762, 2750, 2763, 1237, 2350,
	796, 1226, 1309, 1047, 2753, 2922, 2799, 2777, 1222, 1344,
	1470, 1261, 4689, 2782, 4042, 1918, 2769, 3440, 4035, 4432,
	2126, 1224, 1550, 4057, 4682, 2843, 2771, 1622, 3518, 2882,
	3071, 2296, 2784, 1309, 2948, 4033, 3351, 1224, 3341, 1698,
	2812, 737, 2859, 2130, 4037, 1309, 1246, 1309, 2780, 3379,
	2150, 1624, 2138, 983, 2537, 770, 1871, 1043, 2990, 2963,
	1701, 2445, 1309, 2827, 1236, 1064, 1340, 2785, 4043, 2844,
	1342, 2162, 3309, 3019, 2162, 1341, 2842, 1040, 4577, 2815,
	2818, 2174, 2853, 2855, 2856, 2857, 2805, 2101, 2783, 2860,
	3029, 3030, 3211, 3212, 3204, 3205, 3206, 3207, 3209, 3210,
	2127, 3036, 3037, 3038, 2105, 3378, 2139, 1106, 3383, 2927,
	4036, 4411, 4479, 4632, 2929, 2543, 892, 2109, 3941, 994,
	4125, 2158, 3049, 4206, 3050, 880, 2165, 3265, 2867, 4038,
	802, 2172, 2877, 2797, 4039, 2173, 805, 4655, 2959, 4607,
	4529, 809, 4520, 4088, 706, 1470, 2157, 2137, 2816, 4608,
	2099, 4480, 3004, 1294, 983, 2100, 3115, 2470, 175, 3385,
	802, 1106, 3070, 3023, 3046, 2525, 805, 1106, 1106, 984,
	1488, 2456, 3045, 2323, 2930, 3783, 2102, 2107, 1040, 1699,
	2153, 2458, 1822, 2811, 3054, 4041, 3056, 2994, 3058, 2942,
	900, 1978, 3067, 2952, 684, 3026, 1470, 1702, 1470, 2953,
	3031, 4044, 3032, 2992, 2717, 3165, 2131, 1736, 2099, 2116,
	2117, 2685, 1981, 2100, 2359, 3073, 2293, 3075, 4710, 3043,
	2985, 2462, 3384, 1106, 1106, 2698, 2995, 3076, 2443, 1106,
	3078, 2446, 3053, 3006, 3055, 2121, 3057, 1046, 4697, 2154,
	3352, 1323, 1106, 1106, 2166, 4140, 1342, 3651, 1106, 1106,
	3024, 1636, 1638, 2993, 1106, 4135, 3935, 2974, 2287, 2103,
	3066, 3746, 4687, 1251, 4141, 771, 3946, 3594, 2101, 4038,
	984, 685, 2132, 2133, 4039, 3866, 3084, 3052, 1038, 4737,
	983, 4439, 2442, 3051, 4190, 2105, 1654, 1703, 3851, 2122,
	3942, 4576, 4643, 3069, 1747, 4641, 2128, 3849, 3851, 1106,
	1106, 1106, 3389, 4458, 1040, 1106, 2109, 3849, 2030, 4331,
	3116, 4631, 1916, 3081, 773, 1106, 3889, 3092, 769, 3506,
	686, 2214, 687, 1909, 1746, 4041, 2101, 1234, 4040, 1249,
	2120, 1242, 1106, 3083, 3082, 4126, 675, 1741, 2129, 2391,
	2119, 4044, 4357, 2105, 2071, 3148, 4266, 3087, 2388, 3690,
	1039, 3102, 3990, 4715, 3300, 4340, 3387, 2102, 2107, 985,
	1919, 4398, 893, 894, 1746, 3890, 4688, 4047, 3143, 3144,
	2141, 881, 882, 3147, 3853, 2683, 4440, 3829, 3816, 3769,
	1912, 3358, 2068, 3507, 3853, 3498, 3354, 810, 811, 4606,
	3740, 2964, 2958, 1917, 2946, 4349, 984, 3388, 2240, 2234,
	4690, 2228, 2220, 2200, 3761, 3634, 746, 1518, 4350, 3852,
	1253, 3114, 3705, 3139, 3595, 2102, 2107, 3274, 2381, 3852,
	4189, 4496, 1106, 1106, 1106, 1106, 2800, 1745, 1746, 4461,
	2955, 2845, 1106, 1106, 1106, 2340, 2118, 1106, 2817, 2064,
	2103, 4351, 3892, 4156, 3741, 2147, 2943, 1106, 1228, 1367,
	2278, 1264, 4309, 1106, 2134, 1106, 3258, 3259, 2066, 2169,
	985, 1916, 4307, 4247, 1228, 3370, 1671, 1745, 4040, 2444,
	3742, 3366, 3739, 3365, 4138, 3107, 3085, 1972, 1972, 3718,
	3947, 1822, 1367, 2097, 2104, 3263, 3262, 2109, 2142, 1677,
	1676, 2723, 2722, 1747, 1228, 2721, 3154, 1367, 2103, 2067,
	986, 1559, 1223, 4353, 2720, 3241, 3857, 4047, 3847, 1919,
	2950, 4405, 3275, 2167, 1044, 1560, 1984, 4117, 1223, 2760,
	1367, 3260, 3293, 1573, 1914, 2764, 4352, 3280, 813, 812,
	2135, 1745, 1571, 1747, 3565, 1309, 1309, 2095, 3691, 2775,
	1047, 4304, 1917, 3558, 4354, 2109, 3305, 3692, 1223, 1918,
	3991, 895, 896, 987, 2168, 2382, 898, 4191, 1106, 4714,
	883, 884, 3273, 3270, 3948, 2676, 2821, 4255, 3776, 3319,
	3548, 4441, 1106, 2238, 3850, 3472, 4173, 3766, 2096, 3289,
	4652, 2108, 1309, 4436, 3850, 1915, 985, 1984, 814, 815,
	4234, 3027, 2928, 2926, 3277, 3345, 2266, 1630, 4506, 3762,
	2679, 986, 3441, 2846, 2847, 1106, 3346, 3347, 4242, 4499,
	3337, 3294, 1470, 1470, 3268, 2108, 3236, 3237, 3238, 4493,
	3997, 1309, 3707, 2550, 3343, 3286, 1655, 3368, 4406, 3252,
	3372, 3330, 1720, 4524, 4654, 3298, 1337, 3269, 1722, 4596,
	3560, 2678, 3278, 1309, 3267, 1309, 2677, 4172, 3281, 3282,
	1719, 3279, 2344, 4243, 987, 3559, 1717, 3369, 1695, 1693,
	3374, 2161, 1367, 3376, 4571, 2104, 1665, 4425, 4212, 3743,
	2161, 4256, 1663, 1309, 3989, 3856, 3233, 1309, 3310, 3610,
	1661, 3301, 3302, 3303, 3304, 1470, 1055, 3571, 3430, 3355,
	2933, 1659, 745, 2936, 3570, 2938, 4500, 3443, 1918, 3445,
	1309, 3276, 3449, 2140, 3400, 3320, 3455, 1309, 3196, 1309,
	2225, 3126, 3284, 1367, 3285, 4407, 3423, 1657, 1651, 2947,
	796, 3327, 3331, 2104, 2880, 1037, 1646, 986, 1644, 2150,
	1569, 1309, 2835, 2749, 2353, 1949, 3338, 3767, 1226, 2981,
	3438, 1945, 2981, 1309, 3426, 1222, 1723, 3316, 3317, 3359,
	3318, 1608, 3344, 3404, 1226, 3402, 3481, 2148, 2331, 3234,
	1228, 1222, 1572, 3590, 3514, 3589, 1741, 3064, 3490, 3418,
	3063, 1570, 3034, 2370, 1224, 1682, 2302, 3416, 2219, 2549,
	987, 3386, 2199, 2012, 1226, 1309, 1309, 4355, 3396, 3497,
	1224, 1222, 3512, 4356, 3019, 897, 1855, 1619, 2145, 1542,
	1978, 4089, 4090, 3019, 3412, 3410, 3409, 3450, 1309, 3411,
	3442, 3456, 3820, 3819, 1223, 4073, 1294, 3534, 3059, 995,
	1224, 1981, 1721, 3431, 4492, 3467, 4154, 3470, 3439, 3505,
	2149, 3523, 2346, 4095, 1718, 4086, 2345, 4031, 3462, 3458,
	1716, 3452, 1694, 1692, 3565, 3888, 1972, 3879, 1367, 3832,
	1664, 1367, 3513, 3558, 3575, 3817, 1662, 3790, 2843, 3566,
	3561, 3562, 3563, 3564, 1660, 3788, 3768, 3501, 3631, 4629,
	3496, 1978, 3486, 2977, 2969, 1658, 3474, 3511, 3466, 3515,
	802, 4149, 2962, 2954, 1106, 2940, 805, 3508, 2925, 3494,
	1106, 1106, 1981, 3495, 1106, 1106, 1106, 3493, 1106, 2766,
	2761, 1656, 1650, 175, 175, 2198, 2196, 1106, 1984, 1750,
	1645, 2178, 1643, 2163, 1568, 2136, 1106, 3568, 1470, 1954,
	2123, 1106, 3520, 2110, 2051, 3550, 3546, 1367, 2048, 2045,
	2042, 3529, 3532, 3533, 2037, 2035, 1106, 3588, 2330, 3522,
	2031, 2022, 3453, 3585, 1367, 3544, 1203, 2172, 3587, 4620,
	3560, 3567, 3591, 1957, 1984, 1984, 1106, 1106, 3105, 1106,
	1106, 1106, 4645, 3323, 3324, 3559, 2072, 2356, 3079, 3077,
	4534, 4178, 1204, 4171, 1000, 1002, 1004, 1106, 3578, 3613,
	3579, 1106, 3580, 1984, 1984, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 3584, 1106, 3663, 3596, 3664,
	3353, 3569, 4140, 2354, 1106, 1106, 1984, 4170, 4102, 1751,
	3593, 1106, 4023, 3020, 2091, 1523, 2797, 2797, 4342, 2822,
	4335, 4141, 1106, 3900, 733, 2118, 2292, 1285, 2326, 3623,
	3624, 2795, 2819, 1228, 1228, 1714, 1715, 1106, 2237, 3403,
	1226, 1284, 2321, 3106, 3556, 1047, 4533, 1222, 2692, 2355,
	3454, 2299, 4065, 4097, 1642, 3618, 3620, 1757, 1758, 4377,
	2825, 3417, 3998, 3419, 3976, 3381, 1367, 2826, 2848, 3630,
	1754, 1318, 1205, 3736, 1252, 4648, 1224, 3646, 4639, 3702,
	3637, 3639, 3640, 689, 4601, 1757, 1758, 1223, 1223, 3653,
	255, 3451, 2826, 2939, 2328, 3457, 3876, 3828, 789, 3723,
	3661, 1306, 2221, 1329, 3662, 2887, 2401, 3654, 2885, 2894,
	3666, 2876, 846, 1106, 3694, 1760, 3744, 3745, 3668, 3827,
	2874, 2830, 1759, 1285, 2875, 2828, 1285, 4486, 4452, 3703,
	3756, 3757, 3758, 1106, 2829, 2401, 3669, 672, 700, 4446,
	4404, 175, 4326, 3695, 4302, 1835, 4235, 3886, 3878, 1840,
	1759, 3865, 3733, 3641, 3500, 2984, 2663, 2057, 1965, 3566,
	3561, 3562, 3563, 3564, 4684, 4253, 1106, 1106, 3698, 3308,
	3709, 3711, 3712, 4526, 4713, 4448, 3660, 3885, 4527, 1490,
	3202, 3203, 1978, 3714, 3715, 1757, 1758, 4526, 2789, 2790,
	4699, 1629, 4527, 3968, 3725, 2787, 2788, 1628, 4658, 2545,
	3748, 2789, 2186, 1981, 2787, 2578, 1697, 4327, 1106, 1696,
	4287, 4099, 4094, 4093, 3964, 3747, 3642, 3447, 3444, 1849,
	1848, 4665, 4490, 4489, 3726, 4488, 4392, 4305, 1978, 1978,
	4281, 4233, 1309, 4231, 3801, 1309, 3326, 4229, 4128, 3328,
	3329, 4114, 4063, 4019, 3332, 3924, 3333, 3906, 3334, 1981,
	1981, 3860, 1984, 3786, 3779, 3504, 3805, 1978, 1978, 3503,
	3375, 3325, 3061, 3042, 3041, 3772, 3040, 3039, 2968, 2941,
	3822, 2820, 3806, 3808, 2757, 3793, 3824, 2752, 1981, 1981,
	1294, 2742, 2741, 1309, 2730, 2474, 2347, 2327, 3798, 1106,
	1978, 2320, 2319, 3830, 2318, 2317, 2316, 1228, 1106, 2235,
	3902, 2209, 2205, 2843, 2204, 2203, 2202, 3752, 1309, 1309,
	1309, 1981, 2201, 3909, 2025, 3390, 3391, 3893, 3392, 3393,
	3394, 2024, 2023, 1226, 1226, 1309, 2021, 2990, 1956, 1713,
	1222, 1222, 1712, 2225, 3872, 3855, 1652, 1537, 1536, 1535,
	1534, 1309, 1533, 1532, 1531, 1526, 3894, 1367, 1522, 3913,
	1520, 1223, 3873, 3897, 3019, 1519, 1476, 1475, 1474, 1224,
	1224, 3432, 3433, 1473, 3434, 3435, 3436, 3841, 1358, 3839,
	1357, 1367, 1356, 1355, 1106, 1106, 1354, 1322, 3859, 1321,
	1106, 1106, 1984, 1114, 3845, 1106, 1106, 3854, 1106, 3925,
	1271, 1270, 3877, 1106, 1269, 1268, 1267, 1266, 1265, 1263,
	1258, 3896, 1257, 3882, 1106, 1256, 3880, 1255, 1254, 870,
	8, 1186, 2062, 1006, 3359, 992, 3904, 4409, 3903, 4045,
	1106, 3895, 3898, 2343, 1706, 3914, 3915, 3908, 92, 262,
	262, 262, 1528, 678, 679, 3922, 694, 678, 694, 704,
	3923, 832, 744, 3949, 86, 1972, 762, 3920, 3931, 3950,
	3919, 768, 3916, 3958, 2170, 3785, 3962, 962, 262, 3933,
	4523, 1512, 4431, 840, 4508, 3874, 3377, 2897, 3943, 2301,
	1653, 2303, 3288, 2705, 4478, 3972, 3164, 4384, 877, 4205,
	2548, 1228, 1853, 3245, 262, 88, 3932, 1090, 1136, 1228,
	4124, 4123, 4032, 1367, 3771, 1367, 3009, 3938, 4121, 4120,
	1969, 1971, 1228, 1054, 1370, 4545, 2073, 1096, 2089, 2082,
	2743, 2622, 1113, 1309, 1309, 1110, 1972, 1973, 1975, 1112,
	1111, 1974, 1367, 1872, 1109, 1968, 4003, 3884, 2988, 3530,
	3293, 1578, 1576, 964, 2077, 1223, 1978, 2468, 2532, 3153,
	1846, 1070, 1092, 1223, 2529, 1247, 1228, 1081, 1228, 3988,
	1069, 3271, 3250, 3517, 3732, 2380, 1223, 1981, 850, 3199,
	2535, 1238, 2646, 2638, 2634, 3335, 4024, 4025, 2978, 1727,
	1309, 4006, 4219, 1824, 4051, 2989, 4051, 1352, 1074, 2466,
	1367, 1837, 1309, 3131, 2390, 1309, 3524, 1226, 4055, 3995,
	4066, 3291, 4009, 2736, 1222, 4054, 1367, 4002, 4005, 4530,
	1223, 175, 1223, 3650, 4068, 4069, 2213, 4028, 678, 678,
	4010, 4013, 4000, 4001, 1202, 1201, 262, 1245, 1200, 4514,
	4511, 4067, 2160, 1224, 3917, 3479, 2065, 1309, 1309, 2781,
	2478, 3999, 3487, 1086, 4098, 1469, 4100, 3256, 3549, 4004,
	1539, 767, 4260, 4030, 1098, 1809, 2918, 1309, 2917, 4401,
	1338, 1336, 2225, 1335, 1334, 4672, 4735, 4087, 3781, 1367,
	3780, 229, 3099, 3840, 1309, 4118, 1978, 1748, 1740, 226,
	228, 227, 1294, 4129, 4092, 3737, 3297, 4599, 3803, 4115,
	3471, 23, 22, 21, 112, 4101, 42, 1981, 20, 1228,
	150, 4112, 128, 147, 146, 120, 145, 144, 4157, 1309,
	1309, 1309, 4146, 4071, 143, 142, 149, 141, 140, 4106,
	135, 4085, 1367, 139, 4082, 138, 4080, 4051, 4111, 4083,
	137, 136, 134, 132, 1106, 1106, 1106, 4158, 133, 127,
	131, 4177, 130, 129, 126, 125, 4174, 4152, 124, 123,
	4119, 122, 1367, 1223, 4161, 4134, 4113, 1106, 4143, 121,
	1106, 1106, 119, 118, 117, 116, 115, 114, 113, 758,
	1106, 755, 61, 1984, 60, 4159, 111, 110, 1106, 1106,
	19, 1226, 40, 14, 65, 66, 18, 13, 1222, 1226,
	35, 4145, 91, 1367, 102, 1309, 1222, 101, 36, 4166,
	99, 98, 1226, 4180, 4197, 34, 4181, 17, 16, 1222,
	15, 96, 95, 33, 3759, 31, 1367, 1224, 3760, 4192,
	11, 9, 37, 4185, 1106, 1224, 1933, 12, 4183, 5,
	180, 179, 182, 1106, 178, 181, 1365, 90, 1224, 177,
	1464, 1106, 176, 89, 4214, 1984, 1226, 1972, 1226, 29,
	10, 172, 4318, 1222, 1106, 1222, 3870, 1106, 81, 3789,
	4186, 3791, 4202, 174, 173, 171, 170, 169, 82, 79,
	168, 1106, 85, 167, 4238, 80, 4225, 4226, 1367, 84,
	4228, 4208, 1224, 83, 1224, 1309, 27, 6, 2472, 4263,
	1309, 1309, 64, 1972, 1972, 7, 4187, 3572, 105, 106,
	38, 77, 264, 76, 1835, 4239, 75, 26, 63, 4280,
	25, 4246, 213, 212, 211, 210, 4237, 209, 208, 207,
	206, 201, 1972, 1972, 200, 205, 203, 202, 4292, 204,
	4317, 199, 3831, 216, 215, 1367, 4283, 221, 1309, 4308,
	220, 219, 218, 217, 4278, 3481, 1303, 214, 223, 198,
	197, 196, 194, 190, 189, 1972, 1228, 1228, 2645, 193,
	195, 192, 4282, 4284, 191, 188, 222, 4289, 72, 165,
	166, 71, 4336, 4298, 164, 4325, 1106, 1106, 1584, 4297,
	163, 162, 161, 4341, 4051, 4051, 4306, 4301, 4345, 1226,
	160, 159, 4321, 1106, 1984, 158, 1222, 3881, 4364, 70,
	4316, 4337, 1479, 4360, 4361, 24, 4339, 4270, 4072, 4300,
	1223, 1223, 2, 4333, 1, 0, 0, 4296, 0, 4294,
	4081, 4338, 0, 4084, 4161, 1224, 0, 4343, 4358, 1106,
	0, 4344, 1106, 1514, 0, 0, 0, 0, 0, 1228,
	0, 1470, 0, 0, 4373, 4374, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 4397, 1978, 0, 1551,
	4372, 0, 0, 0, 0, 4382, 0, 4051, 3934, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 1981, 0,
	4051, 0, 0, 0, 4393, 4142, 1592, 0, 0, 0,
	1068, 2108, 0, 1223, 0, 1106, 1106, 4419, 0, 4420,
	1605, 4396, 4376, 0, 0, 1106, 1223, 1260, 4435, 0,
	1228, 4413, 0, 1228, 4414, 0, 0, 1309, 0, 262,
	0, 262, 262, 0, 1289, 262, 1299, 1309, 1309, 1978,
	0, 0, 0, 0, 0, 4427, 0, 1319, 4051, 0,
	1294, 4051, 0, 0, 1309, 0, 762, 4443, 4444, 0,
	1981, 4449, 4469, 4429, 1631, 4442, 0, 4455, 1106, 1106,
	4457, 0, 4450, 0, 1223, 0, 4454, 1223, 1106, 4447,
	262, 0, 262, 262, 1289, 4321, 262, 262, 0, 0,
	4462, 4463, 1299, 4465, 0, 0, 0, 0, 4474, 4466,
	4475, 4467, 4468, 262, 0, 1492, 0, 0, 0, 0,
	0, 1972, 0, 4501, 1106, 1106, 4473, 1106, 4472, 0,
	0, 4505, 0, 0, 0, 4483, 1516, 0, 0, 4487,
	0, 0, 0, 0, 0, 0, 4482, 4513, 4516, 0,
	4528, 0, 0, 0, 0, 1541, 0, 0, 1299, 0,
	0, 0, 262, 262, 0, 1289, 1226, 1226, 4503, 4532,
	4550, 4504, 0, 1222, 1222, 4525, 4522, 4518, 0, 0,
	1106, 1106, 1106, 4554, 0, 0, 762, 4553, 262, 262,
	0, 4535, 4517, 0, 0, 4521, 0, 4548, 1978, 0,
	0, 0, 1224, 1224, 0, 4549, 0, 4541, 0, 1948,
	1106, 877, 0, 0, 0, 0, 0, 0, 4583, 1981,
	0, 0, 0, 4588, 0, 4567, 4568, 4570, 0, 4569,
	0, 0, 0, 4295, 0, 0, 0, 0, 0, 0,
	4602, 0, 4584, 0, 0, 0, 0, 0, 0, 1226,
	4609, 1972, 0, 4611, 0, 0, 1222, 4586, 4625, 0,
	4613, 0, 1226, 0, 1106, 0, 0, 0, 4623, 1222,
	0, 0, 4624, 4610, 0, 0, 0, 4630, 0, 0,
	4619, 4617, 4127, 4618, 2019, 1224, 262, 0, 0, 0,
	4621, 4622, 0, 0, 4646, 4144, 4627, 0, 1224, 0,
	4636, 4637, 4642, 4650, 4640, 4638, 262, 0, 0, 0,
	0, 0, 4651, 1228, 0, 1228, 4513, 2108, 4165, 4516,
	1226, 4653, 4667, 1226, 4649, 0, 4662, 1222, 4670, 4668,
	1222, 4679, 2093, 4666, 4435, 3128, 3129, 4532, 0, 4678,
	4677, 4051, 4674, 4051, 4657, 0, 0, 0, 0, 0,
	2019, 0, 4692, 0, 2385, 0, 1224, 4673, 0, 1224,
	4669, 2019, 4671, 0, 0, 4691, 2645, 1223, 4694, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4707, 0, 4700, 4701, 4705, 1106, 1106, 4703, 0, 0,
	0, 0, 0, 0, 1106, 4708, 1106, 1106, 4711, 0,
	0, 4698, 0, 0, 4720, 4717, 4726, 0, 0, 0,
	4729, 4731, 4723, 4730, 4728, 4725, 0, 0, 4724, 0,
	0, 0, 4727, 0, 0, 4738, 0, 4739, 4734, 0,
	0, 0, 4741, 0, 0, 4743, 0, 4744, 2990, 0,
	4746, 0, 4742, 4740, 0, 4749, 0, 2645, 2645, 0,
	0, 0, 0, 1106, 4754, 4750, 4756, 0, 0, 4751,
	4757, 0, 4759, 4760, 4718, 4719, 4746, 4753, 0, 0,
	0, 0, 2191, 4272, 4273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2640,
	0, 0, 0, 4288, 0, 4290, 678, 4291, 0, 0,
	0, 0, 0, 0, 0, 3226, 3227, 3228, 3229, 0,
	0, 4755, 0, 0, 0, 0, 0, 262, 0, 262,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 1289, 262, 0,
	262, 0, 0, 0, 0, 0, 262, 1492, 694, 1757,
	1758, 0, 0, 262, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	1068, 0, 1788, 0, 1068, 0, 0, 0, 0, 1760,
	262, 0, 0, 0, 0, 1757, 1758, 262, 0, 0,
	1451, 0, 0, 1226, 1451, 1226, 0, 0, 0, 0,
	1222, 0, 1222, 0, 0, 1813, 0, 0, 1788, 1584,
	0, 1584, 0, 0, 1759, 1760, 0, 2645, 2645, 2645,
	2645, 0, 1972, 0, 0, 0, 0, 762, 0, 1224,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 1757, 1758, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 1788, 1776,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4428,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 4433,
	1759, 0, 0, 0, 2255, 0, 0, 0, 1765, 0,
	1779, 0, 0, 3609, 0, 0, 0, 0, 2404, 1776,
	1303, 2269, 0, 4453, 0, 0, 0, 0, 0, 0,
	0, 2271, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 2279, 1765, 2282, 2283, 2284, 0, 0,
	0, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3604, 0, 0, 262, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 2546, 0, 0, 1780, 0, 0, 1774, 1775, 0,
	3202, 3203, 0, 3220, 3221, 3222, 0, 0, 0, 0,
	0, 0, 262, 1972, 0, 0, 262, 0, 0, 0,
	0, 0, 262, 4536, 0, 0, 0, 0, 262, 4538,
	1780, 1787, 1789, 0, 0, 0, 0, 0, 0, 1061,
	0, 0, 0, 0, 262, 0, 262, 0, 0, 0,
	678, 0, 262, 1757, 1758, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 762, 0, 1810, 0, 877, 0,
	0, 0, 0, 0, 0, 3217, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 2715, 0, 0, 4598,
	1780, 0, 0, 262, 0, 1289, 262, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 1813,
	762, 0, 0, 0, 0, 0, 0, 262, 1759, 0,
	0, 0, 0, 0, 2300, 0, 0, 0, 0, 262,
	262, 0, 262, 0, 262, 0, 262, 0, 262, 1781,
	0, 0, 0, 0, 0, 0, 0, 3089, 3606, 3607,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 1810, 2336, 0, 0, 2337, 0, 2338, 3208,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	762, 0, 0, 1451, 1786, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 2640, 2640,
	0, 2792, 0, 1812, 0, 1781, 0, 0, 3670, 3671,
	3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681,
	3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 0, 3693,
	2645, 2645, 0, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 3218, 0, 0, 0, 0,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 1780, 0,
	1068, 0, 0, 0, 0, 0, 1451, 0, 0, 0,
	0, 0, 0, 2773, 1303, 0, 0, 1810, 0, 0,
	2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645,
	2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645,
	0, 2645, 0, 678, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 262, 0,
	0, 1757, 1758, 0, 0, 0, 0, 678, 0, 0,
	1810, 0, 0, 0, 262, 0, 678, 0, 2640, 2640,
	2640, 2640, 0, 2019, 1788, 0, 0, 0, 262, 2913,
	3219, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 1299, 0, 0, 0, 0,
	0, 0, 1757, 1758, 1584, 0, 0, 1813, 0, 0,
	0, 0, 2905, 2903, 0, 0, 1759, 0, 0, 2907,
	2909, 2899, 0, 0, 0, 1788, 1779, 0, 0, 0,
	0, 2921, 1760, 1781, 0, 1776, 1451, 0, 0, 0,
	0, 0, 262, 1299, 0, 0, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2756, 0, 1813, 0,
	0, 0, 262, 0, 0, 262, 0, 1759, 0, 262,
	0, 262, 0, 0, 0, 0, 1289, 1779, 262, 262,
	0, 1299, 1299, 2772, 0, 0, 1776, 0, 262, 3603,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 3214, 3215, 3216, 0, 0,
	1765, 0, 3213, 3211, 3212, 3204, 3205, 3206, 3207, 3209,
	3210, 0, 0, 2809, 3035, 0, 0, 0, 0, 0,
	3117, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 1787, 1789, 0,
	262, 1765, 0, 0, 0, 0, 0, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 262, 0, 2901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2915, 0, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 262, 2931, 0, 1780, 0, 0, 0,
	0, 2914, 2906, 2904, 2908, 2910, 2900, 2902, 2916, 0,
	0, 0, 0, 0, 1774, 1775, 2912, 0, 1492, 0,
	0, 262, 0, 262, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2973, 0, 0, 0, 0, 0, 0, 1780, 0, 2919,
	2809, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 3002, 877, 0, 2809, 2809, 0, 0, 1810, 0,
	0, 0, 1451, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 1289, 262, 0, 0, 0, 1492, 0, 1492, 1299,
	262, 0, 0, 1289, 0, 1289, 0, 1289, 0, 1810,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3257, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 262, 262, 1289, 0, 0, 1289,
	0, 262, 0, 0, 262, 1451, 0, 0, 0, 0,
	3283, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3296, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 262, 0, 0, 0, 1812,
	0, 0, 0, 262, 0, 0, 0, 0, 3314, 0,
	0, 2640, 2640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2920, 0, 0, 0, 0, 0,
	0, 0, 0, 2911, 1451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2019, 2019, 0, 0,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2640, 2640, 2640, 2640, 2640, 2640, 2640, 2640, 2640,
	2640, 2640, 2640, 2640, 2640, 2640, 2640, 2640, 2640, 2640,
	2640, 0, 2640, 2019, 0, 0, 0, 0, 0, 1492,
	0, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4211, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 0, 1757, 1758, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2019, 0, 2019, 1788, 0, 0,
	0, 0, 0, 0, 1760, 1788, 0, 0, 0, 0,
	0, 3296, 1760, 0, 0, 1451, 0, 4249, 0, 0,
	0, 0, 0, 0, 2019, 0, 0, 0, 2019, 0,
	1813, 0, 0, 1793, 0, 0, 0, 0, 1813, 1759,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2645, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 678, 0, 0, 0, 0, 678, 0, 0,
	678, 0, 3110, 678, 678, 0, 0, 0, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 2645,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	1492, 73, 0, 1765, 0, 0, 1464, 0, 0, 1365,
	0, 1765, 3459, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 262, 0, 0, 0, 262,
	262, 0, 0, 3491, 0, 0, 4381, 0, 0, 0,
	1787, 1789, 0, 0, 0, 3499, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 2809, 2809,
	262, 0, 3350, 0, 87, 0, 1774, 1775, 2809, 0,
	0, 3361, 0, 0, 0, 3627, 0, 0, 0, 2809,
	3361, 0, 2809, 3361, 0, 0, 3361, 3540, 3541, 0,
	0, 0, 3643, 0, 0, 0, 0, 0, 0, 1780,
	0, 262, 262, 3350, 871, 262, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 93, 104, 3350, 0, 262, 0, 3422,
	3422, 0, 0, 1289, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 2645, 2809,
	0, 2809, 0, 3448, 2809, 3350, 0, 1788, 2809, 3350,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 262,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 262, 3475, 0, 0, 3477, 2809, 1779,
	0, 262, 0, 0, 0, 262, 0, 0, 1299, 0,
	0, 0, 0, 1786, 3735, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 2973, 0,
	0, 1289, 0, 262, 1781, 0, 2809, 0, 678, 0,
	0, 0, 1781, 0, 0, 2809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 2973, 0, 0,
	2973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 0, 1812, 1765, 0, 0, 2733, 0, 0, 0,
	1812, 0, 3577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 97, 0, 0, 3583,
	1793, 0, 1289, 262, 0, 262, 1793, 0, 0, 0,
	0, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 183, 100,
	786, 103, 0, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 230, 0, 0, 1780,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 3648,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 1451, 0, 0, 1793, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 46, 45,
	0, 0, 0, 780, 1451, 0, 0, 0, 0, 787,
	151, 1810, 0, 74, 0, 0, 152, 0, 0, 1451,
	0, 0, 0, 785, 0, 187, 0, 0, 0, 78,
	0, 0, 0, 231, 0, 0, 0, 0, 1793, 0,
	67, 0, 1451, 0, 1793, 0, 224, 48, 0, 154,
	0, 0, 0, 0, 0, 225, 262, 262, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 47, 0, 87,
	0, 784, 0, 0, 3837, 0, 2640, 186, 678, 678,
	1068, 1911, 0, 0, 1781, 3202, 3203, 739, 3220, 3221,
	3222, 0, 0, 0, 1068, 50, 68, 0, 0, 0,
	1492, 1492, 0, 0, 51, 0, 0, 3955, 0, 57,
	0, 0, 782, 155, 1492, 1492, 1492, 0, 0, 0,
	0, 49, 0, 107, 0, 0, 0, 0, 93, 104,
	2640, 0, 0, 3202, 3203, 0, 3220, 3221, 3222, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	3910, 3911, 3912, 0, 0, 3954, 0, 0, 0, 0,
	3217, 0, 0, 0, 0, 0, 0, 1303, 52, 0,
	0, 790, 0, 0, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 0, 4008, 1451, 0, 94, 0, 0, 0,
	0, 762, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 3217, 0,
	4021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 1451, 0, 262, 0, 0,
	0, 0, 0, 0, 777, 0, 0, 0, 0, 0,
	0, 0, 2644, 0, 3208, 0, 0, 3350, 0, 262,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 1053,
	262, 1793, 0, 0, 781, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 262, 0, 0, 0, 2640,
	262, 0, 3208, 0, 0, 0, 0, 0, 738, 0,
	0, 2019, 0, 0, 0, 0, 0, 0, 3224, 2809,
	262, 0, 788, 2019, 0, 0, 2019, 0, 779, 3002,
	3002, 97, 0, 0, 0, 877, 877, 2809, 0, 0,
	0, 2973, 2973, 0, 0, 877, 2809, 0, 53, 0,
	0, 0, 0, 0, 0, 4015, 4016, 0, 0, 0,
	3218, 0, 56, 0, 0, 0, 3224, 59, 262, 0,
	1451, 0, 0, 1451, 0, 776, 69, 0, 0, 0,
	0, 0, 58, 183, 100, 0, 103, 0, 2019, 0,
	54, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	1365, 55, 0, 783, 0, 0, 0, 0, 3218, 0,
	0, 230, 0, 0, 0, 0, 0, 740, 0, 62,
	0, 0, 0, 0, 148, 0, 0, 0, 778, 0,
	4203, 0, 1810, 0, 0, 0, 0, 0, 0, 153,
	0, 3973, 0, 0, 0, 0, 0, 0, 0, 1451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 1451, 0, 0, 1303,
	0, 4203, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 2404, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 262, 3219, 0, 0, 231, 0,
	1492, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 262, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4182, 0, 4184, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 3219, 0, 3, 2404, 0, 2809, 2809,
	0, 3422, 2809, 0, 0, 0, 0, 0, 0, 4053,
	0, 4053, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2809, 0, 3361, 0, 0, 0, 1492, 1492,
	262, 3350, 0, 0, 0, 0, 0, 0, 1451, 0,
	0, 0, 0, 0, 3350, 0, 262, 3350, 0, 262,
	0, 3422, 0, 0, 0, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2809, 4230, 2809, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3214, 3215, 3216, 0, 0, 0, 0, 3213, 3211, 3212,
	3204, 3205, 3206, 3207, 3209, 3210, 0, 2809, 0, 0,
	0, 0, 4131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 1793, 0, 0, 0, 3214, 3215,
	3216, 0, 0, 0, 0, 3213, 3211, 3212, 3204, 3205,
	3206, 3207, 3209, 3210, 0, 0, 0, 0, 0, 0,
	0, 0, 4053, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 4299, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 1793, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 78, 0, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 0, 0, 87, 0, 0, 1793, 0, 1793,
	1793, 1793, 1793, 0, 0, 0, 1314, 0, 0, 0,
	0, 2644, 2644, 0, 0, 2809, 0, 3361, 0, 0,
	4241, 0, 0, 0, 0, 0, 1793, 0, 262, 1053,
	0, 0, 0, 1053, 871, 4261, 0, 4261, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 762,
	0, 0, 1757, 1758, 0, 0, 0, 0, 0, 1451,
	3422, 0, 1289, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 1494, 0, 1500, 1788, 1506, 3350, 0, 262,
	1138, 0, 1760, 1451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 4241,
	1793, 94, 0, 1793, 0, 0, 1793, 2809, 1813, 0,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1759, 0, 0,
	0, 0, 0, 0, 0, 4330, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 1492, 0, 1303,
	1303, 0, 0, 1595, 0, 1600, 0, 0, 0, 4053,
	4053, 0, 0, 0, 0, 1609, 1303, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 262, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 3223,
	0, 2644, 2644, 2644, 2644, 0, 0, 0, 1793, 0,
	1793, 3648, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1451, 0, 1451, 3422, 4395,
	0, 1782, 1783, 1784, 1785, 0, 4241, 0, 0, 0,
	0, 1765, 1678, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 4053, 0, 1451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4053, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4131, 0, 0,
	0, 0, 1451, 0, 1774, 1775, 0, 0, 183, 100,
	0, 103, 0, 4053, 0, 262, 4053, 0, 1451, 0,
	0, 0, 0, 1229, 0, 73, 3361, 0, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 230, 1780, 0, 0,
	0, 0, 74, 0, 872, 0, 0, 0, 0, 148,
	0, 0, 1492, 0, 1492, 0, 0, 0, 78, 0,
	0, 1834, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1451, 0, 0, 232, 0, 4497, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 87, 4261,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 1810,
	151, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2809, 0, 0, 0, 187, 0, 78, 0, 0,
	0, 0, 0, 231, 1451, 0, 0, 0, 871, 0,
	0, 0, 262, 0, 3202, 3203, 224, 3220, 3221, 3222,
	49, 0, 107, 0, 0, 225, 0, 93, 104, 0,
	0, 1786, 0, 0, 1451, 0, 3615, 87, 0, 3648,
	0, 0, 1905, 1905, 1905, 0, 0, 1589, 0, 0,
	0, 0, 1781, 0, 1793, 1793, 1492, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1451, 0, 871, 0, 0,
	0, 0, 0, 262, 0, 94, 0, 0, 0, 3217,
	0, 107, 0, 0, 0, 0, 93, 104, 1451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 2809,
	1451, 0, 0, 0, 0, 0, 4053, 0, 4053, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 3208, 0, 0, 0, 0, 0, 1053,
	0, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 1793, 1793, 0, 2644, 2644, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 3224, 3223, 3223,
	0, 3002, 1793, 1793, 0, 0, 0, 0, 0, 0,
	2809, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3002, 1793, 0, 0, 0,
	0, 0, 183, 100, 0, 103, 0, 0, 1793, 3218,
	0, 0, 3202, 3203, 0, 3220, 3221, 3222, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 3614, 0, 0, 0, 872, 0,
	0, 0, 0, 148, 2644, 2644, 2644, 2644, 2644, 2644,
	2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644,
	2644, 2644, 2644, 2644, 0, 2644, 3223, 3223, 3223, 3223,
	0, 183, 100, 0, 103, 0, 0, 0, 232, 0,
	0, 1810, 0, 0, 0, 0, 0, 3217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1068, 1068, 230,
	0, 1793, 0, 0, 151, 0, 0, 872, 0, 0,
	0, 0, 148, 0, 1229, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 232, 0, 225,
	0, 0, 0, 0, 3219, 0, 0, 0, 1229, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	1229, 1587, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 3208, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 1068, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	1793, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2324,
	186, 0, 0, 0, 0, 3224, 0, 1229, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3218, 0, 3214,
	3215, 3216, 0, 0, 0, 0, 3213, 3211, 3212, 3204,
	3205, 3206, 3207, 3209, 3210, 0, 0, 2379, 0, 2383,
	0, 0, 0, 0, 0, 0, 2397, 0, 0, 0,
	0, 0, 1229, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 1810,
	2447, 0, 2449, 2450, 2451, 2452, 0, 0, 0, 0,
	0, 0, 0, 0, 3202, 3203, 0, 3220, 3221, 3222,
	0, 0, 0, 0, 0, 0, 0, 0, 2476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 2527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2557, 2560, 2563, 2566, 0, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 3219, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 1793, 0, 0, 1793, 3223, 3223, 1793, 3217,
	0, 0, 1793, 2636, 0, 2648, 2650, 2655, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 1793, 1793, 1793, 1793,
	0, 0, 0, 0, 0, 1793, 0, 1793, 0, 0,
	3223, 3223, 3223, 3223, 3223, 3223, 3223, 3223, 3223, 3223,
	3223, 3223, 3223, 3223, 3223, 3223, 3223, 3223, 3223, 3223,
	0, 0, 0, 3223, 0, 0, 1793, 1793, 0, 0,
	0, 0, 0, 3208, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3214, 3215, 3216,
	0, 0, 0, 0, 3213, 3211, 3212, 3204, 3205, 3206,
	3207, 3209, 3210, 3225, 0, 0, 3202, 3203, 0, 3220,
	3221, 3222, 0, 0, 1229, 0, 1229, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 3224, 0, 0,
	0, 1229, 0, 0, 1793, 0, 0, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 1985,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 1794,
	1788, 0, 1793, 0, 0, 0, 0, 1760, 0, 3218,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 3217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 1229,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3208, 2934, 2935, 0, 2937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 1793, 1793, 0, 3219, 0, 1793, 1793, 0, 0,
	1793, 1793, 0, 0, 0, 1793, 0, 0, 0, 1793,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 3224,
	0, 0, 0, 1798, 0, 0, 1808, 0, 0, 2644,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 3218, 0, 0, 1229, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 1796, 0, 0,
	0, 0, 0, 2644, 0, 0, 0, 0, 3060, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3214,
	3215, 3216, 0, 1810, 0, 1806, 3213, 3211, 3212, 3204,
	3205, 3206, 3207, 3209, 3210, 0, 0, 0, 1814, 1815,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 1810, 0, 0, 0, 1229, 0,
	1229, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 708, 0, 1229, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 3111, 3112, 3219, 0, 0, 0,
	3118, 1229, 0, 1229, 1229, 1229, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 3132,
	3133, 0, 0, 0, 0, 2527, 710, 1781, 1793, 1793,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1793, 3223, 2644, 0, 0, 0, 0, 711, 1793, 0,
	0, 1793, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	3142, 0, 0, 0, 0, 0, 0, 0, 0, 3223,
	0, 0, 0, 0, 0, 1812, 3156, 0, 0, 712,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 3168, 0, 0, 1793, 0, 0, 0,
	0, 0, 713, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 1985,
	1229, 3214, 3215, 3216, 714, 0, 0, 715, 3213, 3211,
	3212, 3204, 3205, 3206, 3207, 3209, 3210, 0, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 729, 0,
	0, 0, 3177, 0, 0, 0, 3178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2655, 2655, 2655, 0, 0, 0, 0,
	0, 3223, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 1229, 0, 0, 3261, 0, 0, 0,
	1793, 0, 0, 1793, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 1229, 0, 1794, 1788, 0,
	0, 0, 1229, 0, 0, 1760, 0, 0, 0, 0,
	0, 1229, 0, 0, 1807, 736, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1053,
	1759, 0, 0, 0, 0, 737, 0, 718, 0, 0,
	1779, 0, 0, 1053, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 3380, 0, 0, 0,
	0, 719, 0, 0, 0, 0, 734, 735, 732, 0,
	0, 0, 0, 0, 727, 0, 1793, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 724, 0, 0, 0, 1793, 0, 0,
	0, 1229, 1229, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 707, 1765, 0, 0, 0, 708, 721,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 723, 0, 0, 0, 0, 731,
	0, 1798, 0, 0, 1808, 0, 0, 709, 0, 0,
	0, 1787, 1789, 740, 0, 0, 0, 0, 710, 0,
	0, 0, 0, 0, 725, 0, 0, 1985, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 1229, 0, 0, 0, 0,
	1780, 0, 1793, 0, 0, 0, 1793, 0, 0, 1229,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 714, 0, 0, 715,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 739, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 1229, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 2397, 0, 0, 0, 0,
	0, 3601, 3602, 0, 1786, 3605, 0, 0, 0, 3608,
	0, 0, 0, 0, 0, 0, 0, 0, 3612, 0,
	0, 0, 0, 0, 0, 1781, 0, 3619, 0, 0,
	0, 0, 3261, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 3632, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3655, 3656, 0,
	3657, 3658, 3659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 3665, 0,
	0, 0, 3667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 257, 674, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3696, 3697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 718,
	0, 0, 0, 3708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 3717, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 738, 0, 0, 0,
	2523, 0, 0, 719, 2524, 0, 0, 0, 734, 735,
	732, 0, 0, 0, 0, 0, 727, 1757, 1758, 720,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 2615, 2616, 2617,
	2618, 2611, 2612, 2613, 2614, 0, 0, 0, 0, 1794,
	1788, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 3763, 0, 1807, 0, 0, 0,
	0, 721, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 1813, 3774, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 723, 0, 0, 0,
	0, 731, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 740, 0, 0, 3802, 2591,
	2592, 2593, 2594, 0, 0, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2603, 2604, 2605, 2606, 2599, 2600, 2601, 2602,
	2607, 2608, 2609, 2610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 1229,
	0, 0, 0, 0, 0, 0, 2587, 2588, 2589, 2590,
	2595, 2596, 2597, 2598, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 1808, 0, 0, 0,
	1905, 0, 1229, 1787, 1789, 0, 0, 0, 0, 3905,
	0, 0, 0, 0, 1229, 0, 0, 1229, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 1229, 1229, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3951, 3952, 0, 0, 0,
	0, 3956, 3957, 0, 0, 0, 3960, 3961, 0, 0,
	0, 0, 1229, 0, 3965, 1806, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 3969, 0, 0, 0, 0,
	1115, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 3974, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 1229, 263, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 1229, 0, 263, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 263, 0, 0, 0, 0, 0, 1229, 0, 1229,
	0, 0, 0, 1229, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 3979, 0, 1229, 0,
	0, 1229, 0, 1275, 0, 1275, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1788, 0, 0, 0, 0, 3105, 0, 1760, 0,
	0, 0, 0, 0, 1362, 0, 0, 1807, 1985, 0,
	1468, 0, 0, 0, 0, 4198, 4199, 4200, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 1229, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 2397, 0,
	0, 4209, 4210, 1779, 1229, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 1985, 1985, 0, 0, 0, 4218,
	4221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 1985, 0, 0, 0, 0, 0,
	0, 3106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4262, 0, 1985, 0, 0, 0,
	0, 0, 4269, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 4276, 0, 1765, 1053, 0,
	0, 0, 0, 1229, 1229, 0, 0, 0, 0, 0,
	0, 0, 4285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 1229, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	4400, 0, 0, 4403, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 1053, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 4451, 0, 1781, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 1229, 1229,
	1229, 0, 0, 0, 0, 0, 263, 0, 263, 263,
	0, 0, 263, 0, 1312, 1229, 0, 0, 0, 0,
	2397, 0, 0, 0, 0, 0, 1812, 1943, 0, 4221,
	0, 1229, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 1952, 0, 1468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1312, 263,
	263, 1229, 1312, 263, 263, 0, 1053, 0, 0, 0,
	1312, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 1468, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 1312, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 4566, 4566, 4566, 0, 0, 0, 1312, 0, 263,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 4587, 0, 0, 1312, 263, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 1229, 0, 1229, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 1229, 4566, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 1229, 263, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 4566, 4712, 0, 0,
	0, 0, 0, 0, 0, 4716, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 821, 2211, 0, 0, 1229,
	2218, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 2231, 0, 0, 823, 0, 0, 0, 0,
	824, 0, 0, 0, 0, 0, 0, 0, 2243, 1229,
	2243, 0, 0, 0, 0, 0, 2250, 0, 0, 1229,
	1229, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 825,
	0, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2218, 0, 0,
	2275, 0, 1229, 0, 0, 0, 826, 0, 0, 0,
	0, 827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2295, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 851, 2308, 0, 2310, 0, 2312, 828,
	2314, 0, 2315, 1229, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 1312, 0, 0, 2341, 263, 263, 263, 0, 0,
	0, 0, 0, 263, 0, 1985, 0, 0, 829, 0,
	263, 830, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 853, 0, 0, 0, 0, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1229, 0,
	0, 0, 0, 0, 263, 1229, 0, 0, 0, 0,
	1229, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 1229, 0, 0, 1229, 0,
	0, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 0, 0, 1312, 0, 1229, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 109, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 834, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2712, 0, 0, 0, 0, 843, 0, 0,
	0, 0, 0, 263, 1312, 1312, 263, 0, 738, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	820, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	1229, 835, 0, 1229, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 1229, 109,
	0, 0, 0, 0, 0, 0, 841, 0, 0, 263,
	0, 0, 0, 263, 1229, 0, 0, 0, 0, 263,
	0, 0, 0, 836, 0, 263, 2758, 837, 856, 1275,
	855, 0, 0, 1275, 838, 1275, 0, 0, 0, 0,
	0, 263, 0, 263, 0, 0, 0, 0, 839, 263,
	0, 0, 2231, 848, 0, 0, 0, 0, 1312, 857,
	1312, 854, 1312, 0, 0, 0, 0, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 1312,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 1312,
	263, 0, 1048, 263, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 1312, 1312, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 0, 263,
	0, 263, 0, 263, 0, 263, 0, 0, 1212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 0, 0, 0, 0, 0, 0, 0,
	0, 1468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2218, 0, 0, 0, 0,
	0, 0, 0, 0, 2231, 0, 0, 803, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3044, 0, 3047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 3072, 1468, 3074, 1468,
	0, 0, 0, 0, 0, 3080, 0, 1794, 1788, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 0, 0, 0, 1275,
	0, 1813, 1312, 0, 0, 0, 0, 3108, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 263, 0, 0, 1312, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 263,
	0, 0, 263, 0, 1765, 0, 263, 0, 263, 0,
	0, 0, 0, 0, 0, 263, 263, 0, 0, 0,
	0, 1312, 1312, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 1312, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 263, 0,
	263, 0, 1312, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 109,
	0, 109, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1312, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 1312, 0, 0, 1781, 0, 0, 0, 1275,
	0, 0, 0, 1468, 1468, 0, 0, 263, 0, 263,
	0, 0, 1048, 109, 109, 0, 0, 263, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 109, 0,
	109, 0, 0, 0, 3348, 0, 0, 0, 0, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 263,
	263, 263, 263, 0, 0, 0, 0, 0, 263, 0,
	0, 263, 0, 0, 0, 3399, 3401, 0, 0, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 109, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	261, 261, 0, 0, 261, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 3617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 261, 261, 0, 0, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 3488, 0, 0, 0, 3492,
	0, 0, 803, 0, 0, 0, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 1839,
	0, 261, 261, 0, 0, 0, 0, 0, 0, 0,
	3545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 0, 0, 0, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 3586, 1760, 1468,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 3599, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 1925,
	0, 1928, 1776, 109, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 1312, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 263, 263, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 263,
	0, 1312, 263, 1780, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 263, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 1927, 1312, 1225, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 261, 1927, 261,
	1312, 0, 0, 0, 0, 803, 263, 1312, 0, 1312,
	0, 0, 803, 1312, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 1312, 263, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 1312, 0, 0, 261, 1786, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 2231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2231, 1312, 1312, 0, 0, 0,
	0, 0, 0, 263, 3869, 1799, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 1048, 0, 0, 1312, 2231,
	0, 0, 0, 0, 3887, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	263, 1312, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3936, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 795, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 261, 0, 0, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 1028, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 261, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 261, 1794, 1788, 0, 0, 0, 261, 0, 0,
	1760, 0, 0, 0, 2465, 0, 0, 0, 0, 1807,
	0, 0, 0, 261, 0, 261, 0, 0, 0, 0,
	0, 261, 0, 0, 1048, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 1833, 1759, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 1312, 0, 0, 0,
	0, 0, 261, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4070, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 261,
	2231, 261, 0, 261, 0, 261, 0, 261, 0, 0,
	1212, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 0, 0, 0, 1928, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 2231, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 4153, 0, 1808,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 263, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 1312, 263, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 1312,
	1312, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 4250, 0, 0, 263, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 109,
	1781, 0, 109, 2231, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 109, 0, 0, 0, 0, 0, 109, 1812, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 261, 0, 0, 0, 261, 0,
	261, 4371, 1468, 1312, 0, 1312, 0, 261, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 1312, 1312, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 109, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 1310, 0, 0, 0, 0, 3180,
	0, 0, 0, 261, 0, 0, 0, 263, 0, 0,
	1312, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	1312, 0, 1312, 263, 0, 1312, 263, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 1312, 0, 1368, 0,
	0, 0, 1368, 0, 0, 0, 263, 0, 0, 0,
	1310, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 1312, 4456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 803, 0, 0, 0, 0, 1312, 0, 0,
	263, 0, 2465, 0, 0, 0, 0, 0, 0, 1312,
	263, 0, 0, 0, 1312, 0, 0, 1310, 0, 0,
	261, 0, 803, 1833, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 1312,
	1312, 1312, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 0, 1312, 0, 0, 0, 4507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 261,
	0, 261, 0, 0, 0, 0, 4543, 0, 0, 261,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 261, 261, 261, 0, 1312, 0, 0, 0,
	261, 0, 0, 261, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 1212, 0, 1312, 263, 0, 0, 0,
	1312, 1312, 0, 0, 0, 0, 0, 0, 0, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1369, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 1312, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 1794, 1788,
	0, 0, 0, 0, 263, 263, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 1311, 0, 0, 0,
	0, 1759, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 1311, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 109, 0, 109, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 263, 0, 0, 0, 0, 0,
	795, 1311, 0, 1310, 0, 0, 0, 0, 0, 0,
	109, 109, 0, 109, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 263, 0, 0, 1765, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 1312, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 1225, 0, 0, 1310,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	1310, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1927, 0, 0, 1804,
	0, 1805, 0, 0, 1368, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 1212, 0, 0, 1048, 263,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 109, 109, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 261, 0, 0, 0, 261, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	261, 261, 0, 0, 261, 0, 0, 0, 0, 0,
	263, 1927, 0, 0, 1310, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 1311, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 261, 0, 0, 0, 1310, 0,
	1310, 0, 1310, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 1310, 1310,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 0,
	109, 1310, 0, 1310, 1310, 1310, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 261, 0, 0, 1212, 1212,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 3179, 0, 0, 0, 0,
	0, 0, 261, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 1788, 0,
	0, 0, 0, 1311, 1311, 1760, 0, 0, 0, 0,
	0, 0, 0, 1369, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 1225, 1311, 0, 1311,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1212, 0, 0, 0, 0, 1311, 1311, 0,
	0, 0, 1368, 0, 1782, 1783, 1784, 1785, 1311, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	1311, 0, 1311, 1311, 1311, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 1368, 0, 0, 1212, 0, 261, 0,
	0, 1795, 0, 0, 1212, 0, 0, 0, 0, 261,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 1369, 0, 1786, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	795, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 1310, 0, 0, 0, 1369, 0, 0,
	0, 0, 0, 0, 109, 1310, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	0, 0, 0, 1225, 3176, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 1311, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 1927, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 2465, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 1794, 1788, 261, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 109, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 109, 0, 0, 0, 0, 1368, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 261, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 1310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 0, 1927, 1927,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 261, 261, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 109, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 1310, 0, 1310, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 1804, 0, 1805, 0,
	0, 1927, 0, 1310, 0, 1774, 1775, 1310, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	1310, 0, 0, 0, 0, 0, 261, 1310, 1780, 1310,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 1310, 261, 1927, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 1369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 1310, 1310, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1369, 0, 1310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	0, 261, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1311, 0, 0, 1368, 0,
	0, 1368, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1797, 0, 0, 1311, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 1311,
	0, 0, 3175, 0, 0, 0, 1311, 0, 1311, 0,
	0, 0, 1369, 0, 0, 1927, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1369, 1794, 1788,
	1369, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1369, 0, 0, 0,
	0, 0, 1310, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 1310,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	0, 1310, 1787, 1789, 0, 0, 0, 1368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 1368, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 1310, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 1311, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	1368, 0, 1310, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 1311, 1311,
	0, 0, 0, 0, 0, 0, 0, 1310, 1310, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	1311, 0, 0, 0, 0, 0, 1369, 0, 0, 1368,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	1369, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 1310,
	1310, 1310, 0, 0, 0, 3174, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 1368, 0, 1310, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 1369, 0, 1369, 0, 1368, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1311, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 1311,
	1310, 1310, 0, 1782, 1783, 1784, 1785, 0, 0, 1369,
	0, 1311, 0, 1765, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 1310, 0,
	1798, 0, 0, 1808, 0, 0, 1311, 1311, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 1369, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 1311,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 1310, 1310, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 0, 0, 1311, 0, 0, 0, 0, 1311,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1369, 0, 0, 1311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 2524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 1311, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 1371, 278, 279,
	1372, 1373, 1374, 1311, 1375, 620, 1376, 1377, 1378, 1379,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1380, 625, 290, 291,
	292, 293, 294, 295, 1381, 1382, 0, 296, 626, 627,
	628, 1383, 297, 298, 629, 1384, 1313, 1385, 299, 300,
	301, 302, 303, 304, 305, 0, 1386, 307, 308, 309,
	306, 310, 1387, 311, 0, 312, 313, 314, 315, 316,
	317, 1388, 318, 319, 320, 1170, 321, 322, 323, 1389,
	1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1396, 333, 330, 331, 1397,
	334, 332, 335, 1398, 336, 337, 338, 1399, 1400, 339,
	340, 341, 1401, 342, 343, 1402, 344, 345, 346, 1403,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1404, 268, 1405, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1406, 365, 366, 1407, 1408, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1409, 378, 638, 1410, 639, 379, 1411, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 1412,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1413, 1172, 395, 643, 644, 1414, 645,
	1415, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1416, 409, 411, 410, 1417, 412, 647, 1177, 413, 414,
	1178, 1418, 415, 0, 0, 0, 416, 417, 420, 1419,
	1420, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1421, 270, 1181, 460,
	461, 1422, 648, 462, 649, 464, 465, 1423, 0, 466,
	0, 1424, 1425, 468, 469, 470, 1426, 1427, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1428, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1429, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1430, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1431,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1432, 546, 547, 545, 548, 549, 550,
	1433, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1434, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1435, 578, 579, 0, 575,
	566, 1436, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1437, 588, 661, 662, 663, 664, 1438, 597, 1439,
	589, 590, 591, 665, 592, 666, 1440, 593, 594, 595,
	596, 0, 598, 599, 1441, 1442, 600, 601, 602, 604,
	605, 603, 606, 1443, 607, 1444, 0, 608, 609, 610,
	667, 668, 669, 1445, 612, 611, 613, 670, 1446, 614,
	1447, 1448, 1449, 1450, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1366, 0, 0, 0, 0, 0,
	0, 0, 2690, 0, 0, 0, 0, 0, 0, 0,
	2691, 271, 273, 272, 274, 275, 276, 277, 1371, 278,
	279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378,
	1379, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1380, 625, 290,
	291, 292, 293, 294, 295, 1381, 1382, 0, 296, 626,
	627, 628, 1383, 297, 298, 629, 1384, 1313, 1385, 299,
	300, 301, 302, 303, 304, 305, 0, 1386, 307, 308,
	309, 306, 310, 1387, 311, 0, 312, 313, 314, 315,
	316, 317, 1388, 318, 319, 320, 1170, 321, 322, 323,
	1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1396, 333, 330, 331,
	1397, 334, 332, 335, 1398, 336, 337, 338, 1399, 1400,
	339, 340, 341, 1401, 342, 343, 1402, 344, 345, 346,
	1403, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1404, 268, 1405,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1406, 365, 366, 1407, 1408, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1409, 378, 638, 1410, 639, 379, 1411, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	1412, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1413, 1172, 395, 643, 644, 1414,
	645, 1415, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1416, 409, 411, 410, 1417, 412, 647, 1177, 413,
	414, 1178, 1418, 415, 0, 0, 0, 416, 417, 420,
	1419, 1420, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1421, 270, 1181,
	460, 461, 1422, 648, 462, 649, 464, 465, 1423, 0,
	466, 0, 1424, 1425, 468, 469, 470, 1426, 1427, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1428, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1429, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1430,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1431, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1432, 546, 547, 545, 548, 549,
	550, 1433, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1434,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1435, 578, 579, 0,
	575, 566, 1436, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1437, 588, 661, 662, 663, 664, 1438, 597,
	1439, 589, 590, 591, 665, 592, 666, 1440, 593, 594,
	595, 596, 0, 598, 599, 1441, 1442, 600, 601, 602,
	604, 605, 603, 606, 1443, 607, 1444, 0, 608, 609,
	610, 667, 668, 669, 1445, 612, 611, 613, 670, 1446,
	614, 1447, 1448, 1449, 1450, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 0, 0, 3626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3628,
	271, 273, 272, 274, 275, 276, 277, 1371, 278, 279,
	1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1380, 625, 290, 291,
	292, 293, 294, 295, 1381, 1382, 0, 296, 626, 627,
	628, 1383, 297, 298, 629, 1384, 1313, 1385, 299, 300,
	301, 302, 303, 304, 305, 0, 1386, 307, 308, 309,
	306, 310, 1387, 311, 0, 312, 313, 314, 315, 316,
	317, 1388, 318, 319, 320, 1170, 321, 322, 323, 1389,
	1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1396, 333, 330, 331, 1397,
	334, 332, 335, 1398, 336, 337, 338, 1399, 1400, 339,
	340, 341, 1401, 342, 343, 1402, 344, 345, 346, 1403,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1404, 268, 1405, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1406, 365, 366, 1407, 1408, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1409, 378, 638, 1410, 639, 379, 1411, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 1412,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1413, 1172, 395, 643, 644, 1414, 645,
	1415, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1416, 409, 411, 410, 1417, 412, 647, 1177, 413, 414,
	1178, 1418, 415, 0, 0, 0, 416, 417, 420, 1419,
	1420, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1421, 270, 1181, 460,
	461, 1422, 648, 462, 649, 464, 465, 1423, 0, 466,
	0, 1424, 1425, 468, 469, 470, 1426, 1427, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1428, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1429, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1430, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1431,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1432, 546, 547, 545, 548, 549, 550,
	1433, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1434, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1435, 578, 579, 0, 575,
	566, 1436, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1437, 588, 661, 662, 663, 664, 1438, 597, 1439,
	589, 590, 591, 665, 592, 666, 1440, 593, 594, 595,
	596, 0, 598, 599, 1441, 1442, 600, 601, 602, 604,
	605, 603, 606, 1443, 607, 1444, 0, 608, 609, 610,
	667, 668, 669, 1445, 612, 611, 613, 670, 1446, 614,
	1447, 1448, 1449, 1450, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 1366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4007, 271, 273, 272, 274, 275, 276, 277,
	1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620, 1376,
	1377, 1378, 1379, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1380,
	625, 290, 291, 292, 293, 294, 295, 1381, 1382, 0,
	296, 626, 627, 628, 1383, 297, 298, 629, 1384, 1313,
	1385, 299, 300, 301, 302, 303, 304, 305, 0, 1386,
	307, 308, 309, 306, 310, 1387, 311, 0, 312, 313,
	314, 315, 316, 317, 1388, 318, 319, 320, 1170, 321,
	322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1396, 333,
	330, 331, 1397, 334, 332, 335, 1398, 336, 337, 338,
	1399, 1400, 339, 340, 341, 1401, 342, 343, 1402, 344,
	345, 346, 1403, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1404,
	268, 1405, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1406, 365, 366, 1407, 1408, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1409, 378, 638, 1410, 639, 379, 1411,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 1412, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1413, 1172, 395, 643,
	644, 1414, 645, 1415, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1416, 409, 411, 410, 1417, 412, 647,
	1177, 413, 414, 1178, 1418, 415, 0, 0, 0, 416,
	417, 420, 1419, 1420, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1421,
	270, 1181, 460, 461, 1422, 648, 462, 649, 464, 465,
	1423, 0, 466, 0, 1424, 1425, 468, 469, 470, 1426,
	1427, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1428,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1429, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1430, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1431, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1432, 546, 547, 545,
	548, 549, 550, 1433, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1434, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1435, 578,
	579, 0, 575, 566, 1436, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1437, 588, 661, 662, 663, 664,
	1438, 597, 1439, 589, 590, 591, 665, 592, 666, 1440,
	593, 594, 595, 596, 0, 598, 599, 1441, 1442, 600,
	601, 602, 604, 605, 603, 606, 1443, 607, 1444, 0,
	608, 609, 610, 667, 668, 669, 1445, 612, 611, 613,
	670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616, 671,
	617, 618, 619, 0, 1366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4204, 271, 273, 272, 274, 275, 276, 277, 1371, 278,
	279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378,
	1379, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1380, 625, 290,
	291, 292, 293, 294, 295, 1381, 1382, 0, 296, 626,
	627, 628, 1383, 297, 298, 629, 1384, 1313, 1385, 299,
	300, 301, 302, 303, 304, 305, 0, 1386, 307, 308,
	309, 306, 310, 1387, 311, 0, 312, 313, 314, 315,
	316, 317, 1388, 318, 319, 320, 1170, 321, 322, 323,
	1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1396, 333, 330, 331,
	1397, 334, 332, 335, 1398, 336, 337, 338, 1399, 1400,
	339, 340, 341, 1401, 342, 343, 1402, 344, 345, 346,
	1403, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1404, 268, 1405,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1406, 365, 366, 1407, 1408, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1409, 378, 638, 1410, 639, 379, 1411, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	1412, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1413, 1172, 395, 643, 644, 1414,
	645, 1415, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1416, 409, 411, 410, 1417, 412, 647, 1177, 413,
	414, 1178, 1418, 415, 0, 0, 0, 416, 417, 420,
	1419, 1420, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1421, 270, 1181,
	460, 461, 1422, 648, 462, 649, 464, 465, 1423, 0,
	466, 0, 1424, 1425, 468, 469, 470, 1426, 1427, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1428, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1429, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1430,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1431, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1432, 546, 547, 545, 548, 549,
	550, 1433, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1434,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1435, 578, 579, 0,
	575, 566, 1436, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1437, 588, 661, 662, 663, 664, 1438, 597,
	1439, 589, 590, 591, 665, 592, 666, 1440, 593, 594,
	595, 596, 0, 598, 599, 1441, 1442, 600, 601, 602,
	604, 605, 603, 606, 1443, 607, 1444, 0, 608, 609,
	610, 667, 668, 669, 1445, 612, 611, 613, 670, 1446,
	614, 1447, 1448, 1449, 1450, 615, 616, 671, 617, 618,
	619, 0, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4079, 271,
	273, 272, 274, 275, 276, 277, 1371, 278, 279, 1372,
	1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1380, 625, 290, 291, 292,
	293, 294, 295, 1381, 1382, 0, 296, 626, 627, 628,
	1383, 297, 298, 629, 1384, 1313, 1385, 299, 300, 301,
	302, 303, 304, 305, 0, 1386, 307, 308, 309, 306,
	310, 1387, 311, 0, 312, 313, 314, 315, 316, 317,
	1388, 318, 319, 320, 1170, 321, 322, 323, 1389, 1390,
	1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1396, 333, 330, 331, 1397, 334,
	332, 335, 1398, 336, 337, 338, 1399, 1400, 339, 340,
	341, 1401, 342, 343, 1402, 344, 345, 346, 1403, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1404, 268, 1405, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1406, 365, 366, 1407, 1408, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1409,
	378, 638, 1410, 639, 379, 1411, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 1412, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1413, 1172, 395, 643, 644, 1414, 645, 1415,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1416,
	409, 411, 410, 1417, 412, 647, 1177, 413, 414, 1178,
	1418, 415, 0, 0, 0, 416, 417, 420, 1419, 1420,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1421, 270, 1181, 460, 461,
	1422, 648, 462, 649, 464, 465, 1423, 0, 466, 0,
	1424, 1425, 468, 469, 470, 1426, 1427, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1428, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1429, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1430, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1431, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1432, 546, 547, 545, 548, 549, 550, 1433,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1434, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1435, 578, 579, 0, 575, 566,
	1436, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1437, 588, 661, 662, 663, 664, 1438, 597, 1439, 589,
	590, 591, 665, 592, 666, 1440, 593, 594, 595, 596,
	0, 598, 599, 1441, 1442, 600, 601, 602, 604, 605,
	603, 606, 1443, 607, 1444, 0, 608, 609, 610, 667,
	668, 669, 1445, 612, 611, 613, 670, 1446, 614, 1447,
	1448, 1449, 1450, 615, 616, 671, 617, 618, 619, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3937, 271, 273, 272,
	274, 275, 276, 277, 1371, 278, 279, 1372, 1373, 1374,
	0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1380, 625, 290, 291, 292, 293, 294,
	295, 1381, 1382, 0, 296, 626, 627, 628, 1383, 297,
	298, 629, 1384, 1313, 1385, 299, 300, 301, 302, 303,
	304, 305, 0, 1386, 307, 308, 309, 306, 310, 1387,
	311, 0, 312, 313, 314, 315, 316, 317, 1388, 318,
	319, 320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391,
	1393, 1394, 1395, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1396, 333, 330, 331, 1397, 334, 332, 335,
	1398, 336, 337, 338, 1399, 1400, 339, 340, 341, 1401,
	342, 343, 1402, 344, 345, 346, 1403, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1404, 268, 1405, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1406, 365,
	366, 1407, 1408, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1409, 378, 638,
	1410, 639, 379, 1411, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 1412, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1413, 1172, 395, 643, 644, 1414, 645, 1415, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1416, 409, 411,
	410, 1417, 412, 647, 1177, 413, 414, 1178, 1418, 415,
	0, 0, 0, 416, 417, 420, 1419, 1420, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1421, 270, 1181, 460, 461, 1422, 648,
	462, 649, 464, 465, 1423, 0, 466, 0, 1424, 1425,
	468, 469, 470, 1426, 1427, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1428, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1429,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1430, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1431, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1432, 546, 547, 545, 548, 549, 550, 1433, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1434, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1435, 578, 579, 0, 575, 566, 1436, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1437, 588,
	661, 662, 663, 664, 1438, 597, 1439, 589, 590, 591,
	665, 592, 666, 1440, 593, 594, 595, 596, 0, 598,
	599, 1441, 1442, 600, 601, 602, 604, 605, 603, 606,
	1443, 607, 1444, 0, 608, 609, 610, 667, 668, 669,
	1445, 612, 611, 613, 670, 1446, 614, 1447, 1448, 1449,
	1450, 615, 616, 671, 617, 618, 619, 0, 1366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3644, 271, 273, 272, 274, 275,
	276, 277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375,
	620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 1380, 625, 290, 291, 292, 293, 294, 295, 1381,
	1382, 0, 296, 626, 627, 628, 1383, 297, 298, 629,
	1384, 1313, 1385, 299, 300, 301, 302, 303, 304, 305,
	0, 1386, 307, 308, 309, 306, 310, 1387, 311, 0,
	312, 313, 314, 315, 316, 317, 1388, 318, 319, 320,
	1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394,
	1395, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	1396, 333, 330, 331, 1397, 334, 332, 335, 1398, 336,
	337, 338, 1399, 1400, 339, 340, 341, 1401, 342, 343,
	1402, 344, 345, 346, 1403, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 1404, 268, 1405, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 1406, 365, 366, 1407,
	1408, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 1409, 378, 638, 1410, 639,
	379, 1411, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 1412, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 1413, 1172,
	395, 643, 644, 1414, 645, 1415, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1416, 409, 411, 410, 1417,
	412, 647, 1177, 413, 414, 1178, 1418, 415, 0, 0,
	0, 416, 417, 420, 1419, 1420, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1421, 270, 1181, 460, 461, 1422, 648, 462, 649,
	464, 465, 1423, 0, 466, 0, 1424, 1425, 468, 469,
	470, 1426, 1427, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 1428, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 1429, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 1430, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 1431, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 1432, 546,
	547, 545, 548, 549, 550, 1433, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 1434, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	1435, 578, 579, 0, 575, 566, 1436, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 1437, 588, 661, 662,
	663, 664, 1438, 597, 1439, 589, 590, 591, 665, 592,
	666, 1440, 593, 594, 595, 596, 0, 598, 599, 1441,
	1442, 600, 601, 602, 604, 605, 603, 606, 1443, 607,
	1444, 0, 608, 609, 610, 667, 668, 669, 1445, 612,
	611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615,
	616, 671, 617, 618, 619, 0, 1366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3473, 271, 273, 272, 274, 275, 276, 277,
	1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620, 1376,
	1377, 1378, 1379, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1380,
	625, 290, 291, 292, 293, 294, 295, 1381, 1382, 0,
	296, 626, 627, 628, 1383, 297, 298, 629, 1384, 1313,
	1385, 299, 300, 301, 302, 303, 304, 305, 0, 1386,
	307, 308, 309, 306, 310, 1387, 311, 0, 312, 313,
	314, 315, 316, 317, 1388, 318, 319, 320, 1170, 321,
	322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1396, 333,
	330, 331, 1397, 334, 332, 335, 1398, 336, 337, 338,
	1399, 1400, 339, 340, 341, 1401, 342, 343, 1402, 344,
	345, 346, 1403, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1404,
	268, 1405, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1406, 365, 366, 1407, 1408, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1409, 378, 638, 1410, 639, 379, 1411,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 1412, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1413, 1172, 395, 643,
	644, 1414, 645, 1415, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1416, 409, 411, 410, 1417, 412, 647,
	1177, 413, 414, 1178, 1418, 415, 0, 0, 0, 416,
	417, 420, 1419, 1420, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1421,
	270, 1181, 460, 461, 1422, 648, 462, 649, 464, 465,
	1423, 0, 466, 0, 1424, 1425, 468, 469, 470, 1426,
	1427, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1428,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1429, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1430, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1431, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1432, 546, 547, 545,
	548, 549, 550, 1433, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1434, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1435, 578,
	579, 0, 575, 566, 1436, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1437, 588, 661, 662, 663, 664,
	1438, 597, 1439, 589, 590, 591, 665, 592, 666, 1440,
	593, 594, 595, 596, 0, 598, 599, 1441, 1442, 600,
	601, 602, 604, 605, 603, 606, 1443, 607, 1444, 0,
	608, 609, 610, 667, 668, 669, 1445, 612, 611, 613,
	670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616, 671,
	617, 618, 619, 0, 1366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2547, 271, 273, 272, 274, 275, 276, 277, 1371, 278,
	279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378,
	1379, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 1380, 625, 290,
	291, 292, 293, 294, 295, 1381, 1382, 0, 296, 626,
	627, 628, 1383, 297, 298, 629, 1384, 1313, 1385, 299,
	300, 301, 302, 303, 304, 305, 0, 1386, 307, 308,
	309, 306, 310, 1387, 311, 0, 312, 313, 314, 315,
	316, 317, 1388, 318, 319, 320, 1170, 321, 322, 323,
	1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 1396, 333, 330, 331,
	1397, 334, 332, 335, 1398, 336, 337, 338, 1399, 1400,
	339, 340, 341, 1401, 342, 343, 1402, 344, 345, 346,
	1403, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 1404, 268, 1405,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 1406, 365, 366, 1407, 1408, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 1409, 378, 638, 1410, 639, 379, 1411, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	1412, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 1413, 1172, 395, 643, 644, 1414,
	645, 1415, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 1416, 409, 411, 410, 1417, 412, 647, 1177, 413,
	414, 1178, 1418, 415, 0, 0, 0, 416, 417, 420,
	1419, 1420, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1421, 270, 1181,
	460, 461, 1422, 648, 462, 649, 464, 465, 1423, 0,
	466, 0, 1424, 1425, 468, 469, 470, 1426, 1427, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 1428, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 1429, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 1430,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	1431, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 1432, 546, 547, 545, 548, 549,
	550, 1433, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 1434,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 1435, 578, 579, 0,
	575, 566, 1436, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 1437, 588, 661, 662, 663, 664, 1438, 597,
	1439, 589, 590, 591, 665, 592, 666, 1440, 593, 594,
	595, 596, 0, 598, 599, 1441, 1442, 600, 601, 602,
	604, 605, 603, 606, 1443, 607, 1444, 0, 608, 609,
	610, 667, 668, 669, 1445, 612, 611, 613, 670, 1446,
	614, 1447, 1448, 1449, 1450, 615, 616, 671, 617, 618,
	619, 1462, 0, 1366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2192, 0,
	271, 273, 272, 274, 275, 276, 277, 1371, 278, 279,
	1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1380, 625, 290, 291,
	292, 293, 294, 295, 1381, 1382, 0, 296, 626, 627,
	628, 1383, 297, 298, 629, 1384, 1313, 1385, 299, 300,
	301, 302, 303, 304, 305, 0, 1386, 307, 308, 309,
	306, 310, 1387, 311, 0, 312, 313, 314, 315, 316,
	317, 1388, 318, 319, 320, 1170, 321, 322, 323, 1389,
	1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1396, 333, 330, 331, 1397,
	334, 332, 335, 1398, 336, 337, 338, 1399, 1400, 339,
	340, 341, 1401, 342, 343, 1402, 344, 345, 346, 1403,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1404, 268, 1405, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1406, 365, 366, 1407, 1408, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1409, 378, 638, 1410, 639, 379, 1411, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 1412,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1413, 1172, 395, 643, 644, 1414, 645,
	1415, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1416, 409, 411, 410, 1417, 412, 647, 1177, 413, 414,
	1178, 1418, 415, 0, 0, 0, 416, 417, 420, 1419,
	1420, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1421, 270, 1181, 460,
	461, 1422, 648, 462, 649, 464, 465, 1423, 0, 466,
	0, 1424, 1425, 468, 469, 470, 1426, 1427, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1428, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1429, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1430, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1431,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1432, 546, 547, 545, 548, 549, 550,
	1433, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1434, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1435, 578, 579, 0, 575,
	566, 1436, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1437, 588, 661, 662, 663, 664, 1438, 597, 1439,
	589, 590, 591, 665, 592, 666, 1440, 593, 594, 595,
	596, 0, 598, 599, 1441, 1442, 600, 601, 602, 604,
	605, 603, 606, 1443, 607, 1444, 0, 608, 609, 610,
	667, 668, 669, 1445, 612, 611, 613, 670, 1446, 614,
	1447, 1448, 1449, 1450, 615, 616, 671, 617, 618, 619,
	1363, 0, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1371, 278, 279, 1372,
	1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1380, 625, 290, 291, 292,
	293, 294, 295, 1381, 1382, 0, 296, 626, 627, 628,
	1383, 297, 298, 629, 1384, 1313, 1385, 299, 300, 301,
	302, 303, 304, 305, 0, 1386, 307, 308, 309, 306,
	310, 1387, 311, 0, 312, 313, 314, 315, 316, 317,
	1388, 318, 319, 320, 1170, 321, 322, 323, 1389, 1390,
	1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1396, 333, 330, 331, 1397, 334,
	332, 335, 1398, 336, 337, 338, 1399, 1400, 339, 340,
	341, 1401, 342, 343, 1402, 344, 345, 346, 1403, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1404, 268, 1405, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1406, 365, 366, 1407, 1408, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1409,
	378, 638, 1410, 639, 379, 1411, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 1412, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1413, 1172, 395, 643, 644, 1414, 645, 1415,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1416,
	409, 411, 410, 1417, 412, 647, 1177, 413, 414, 1178,
	1418, 415, 0, 0, 0, 416, 417, 420, 1419, 1420,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1421, 270, 1181, 460, 461,
	1422, 648, 462, 649, 464, 465, 1423, 0, 466, 0,
	1424, 1425, 468, 469, 470, 1426, 1427, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1428, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1429, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1430, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1431, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1432, 546, 547, 545, 548, 549, 550, 1433,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1434, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1435, 578, 579, 0, 575, 566,
	1436, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1437, 588, 661, 662, 663, 664, 1438, 597, 1439, 589,
	590, 591, 665, 592, 666, 1440, 593, 594, 595, 596,
	0, 598, 599, 1441, 1442, 600, 601, 602, 604, 605,
	603, 606, 1443, 607, 1444, 0, 608, 609, 610, 667,
	668, 669, 1445, 612, 611, 613, 670, 1446, 614, 1447,
	1448, 1449, 1450, 615, 616, 671, 617, 618, 619, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1371, 278, 279, 1372, 1373, 1374, 0,
	1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1380, 625, 290, 291, 292, 293, 294, 295,
	1381, 1382, 0, 296, 626, 627, 628, 1383, 297, 298,
	629, 1384, 1313, 1385, 299, 300, 301, 302, 303, 304,
	305, 0, 1386, 307, 308, 309, 306, 310, 1387, 311,
	0, 312, 313, 314, 315, 316, 317, 1388, 318, 319,
	320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393,
	1394, 1395, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1396, 333, 330, 331, 1397, 334, 332, 335, 1398,
	336, 337, 338, 1399, 1400, 339, 340, 341, 1401, 342,
	343, 1402, 344, 345, 346, 1403, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1404, 268, 1405, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1406, 365, 366,
	1407, 1408, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1409, 378, 638, 1410,
	639, 379, 1411, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 1412, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1413,
	1172, 395, 643, 644, 1414, 645, 1415, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1416, 409, 411, 410,
	1417, 412, 647, 1177, 413, 414, 1178, 1418, 415, 0,
	0, 0, 416, 417, 420, 1419, 1420, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1421, 270, 1181, 460, 461, 1422, 648, 462,
	649, 464, 465, 1423, 0, 466, 0, 1424, 1425, 468,
	469, 470, 1426, 1427, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1428, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1429, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1430, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1431, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1432,
	546, 547, 545, 548, 549, 550, 1433, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1434, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1435, 578, 579, 0, 575, 566, 1436, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1437, 588, 661,
	662, 663, 664, 1438, 597, 1439, 589, 590, 591, 665,
	592, 666, 1440, 593, 594, 595, 596, 0, 598, 599,
	1441, 1442, 600, 601, 602, 604, 605, 603, 606, 1443,
	607, 1444, 0, 608, 609, 610, 667, 668, 669, 1445,
	612, 611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450,
	615, 616, 671, 617, 618, 619, 2522, 0, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 2519, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 2520, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 2518, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 2521, 0, 0, 0, 0, 0, 0, 1089,
	2517, 0, 1049, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 230, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 232, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 1585, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 224, 615, 616, 671, 617, 618,
	619, 1063, 0, 225, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 1838, 1836, 0, 0, 1087,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 232, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 1585, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 224, 615,
	616, 671, 617, 618, 619, 1063, 0, 225, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1838,
	3130, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	232, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 1585,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 224, 615, 616, 671, 617, 618, 619, 1063,
	0, 225, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 1838, 1836, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 2651,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 2656, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 2652, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 2653, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	2567, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 2565, 0, 2564, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	2562, 0, 2561, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 2559, 0, 2558, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 2556, 0, 1680, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 1679, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	1052, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	1067, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 4519, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 1067, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 2399, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 2398,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 1089, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 1067, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 4279, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 1067, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 3899, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1906, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 3622, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1906, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	2656, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 1836, 0, 2661, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 2659, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 2647, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 2635, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	2633, 1087, 2624, 2631, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 2627, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 2628,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 2629, 430, 2626, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 2630, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 2625, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 2621, 1087, 2624, 2631,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 2627, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 2628, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 2629, 430, 2626,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 2630, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 2625, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 1844, 0, 1089, 0, 0, 0, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 2378, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 2325, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 1685, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 1615, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	1610, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 1601, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 1596, 1087, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 1508, 1087,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1507,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 1502, 1087, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1501, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	1495, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 1315, 1087, 1105, 1077,
	1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 4565, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 4564, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 1056, 1057,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 4563, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 4565, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 1065, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1062, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 1059, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 4564,
	599, 0, 1066, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1063, 0, 0,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 1089, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 4223, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 4224, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 4222, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1063, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1056, 1057, 1105, 1077,
	1078, 1079, 3097, 3098, 1088, 1089, 0, 0, 0, 1087,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 1093, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 1142, 0, 288, 1149, 289,
	1148, 0, 1159, 290, 291, 292, 293, 294, 295, 1095,
	1128, 1060, 296, 1189, 1190, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 1152, 329, 1146, 1145,
	1065, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1071, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 1084, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 1144, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 1157, 1158, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 1094,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 1072, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1143, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 1073, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1141, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 1188, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 1059, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1153, 1154,
	1155, 1156, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 1083, 593, 594, 595, 596, 0, 598, 599, 0,
	1066, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 1150, 1187, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1063, 0, 0, 0, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 0,
	1056, 1057, 1105, 1077, 1078, 1079, 3095, 3096, 1088, 1089,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1129, 1093, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 1142,
	0, 288, 1149, 289, 1148, 0, 1159, 290, 291, 292,
	293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628,
	0, 297, 298, 1135, 0, 1116, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 1119, 1117,
	1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327, 328,
	1152, 329, 1146, 1145, 1065, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1137,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1071, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1160, 1161, 360, 1084, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1144, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 1157, 1158,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1167, 0, 1094, 379, 0, 380, 381, 382, 383,
	384, 1130, 1131, 1134, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 1172, 395, 1139, 1140, 0, 1100, 0,
	397, 398, 1174, 1132, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 1168, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 1123, 1122,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 1062, 270, 1181, 460, 461,
	1085, 1133, 462, 1147, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 1162, 474, 475, 1072, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 1163, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 1143, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 1073, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 1126,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 1141, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 1188, 569, 570, 571,
	572, 1164, 576, 577, 0, 578, 579, 1059, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 1153, 1154, 1155, 1156, 0, 597, 0, 589,
	590, 591, 1165, 592, 1166, 1083, 593, 594, 595, 596,
	0, 598, 599, 0, 1066, 600, 601, 602, 604, 605,
	603, 606, 1127, 607, 0, 0, 608, 609, 610, 667,
	1150, 1187, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1063,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079,
	1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1129, 1093,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 1142, 0, 288, 1149, 289, 1148, 0,
	1159, 290, 291, 292, 293, 294, 295, 1095, 1128, 1060,
	296, 1189, 1190, 628, 0, 297, 298, 1135, 0, 1116,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324,
	325, 326, 327, 328, 1152, 329, 1146, 1145, 1065, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1137, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1071, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1160, 1161, 360, 1084,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 1144,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 1157, 1158, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 1167, 0, 1094, 379, 0,
	380, 381, 382, 383, 384, 1130, 1131, 1134, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 1172, 395, 1139,
	1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 1168,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 1123, 1122, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1062,
	270, 1181, 460, 461, 1085, 1133, 462, 1147, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 1162, 474, 475,
	1072, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	1163, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 1143, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 1073, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 1126, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 1141, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	1188, 569, 570, 571, 572, 1164, 576, 577, 0, 578,
	579, 1059, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 1153, 1154, 1155, 1156,
	0, 597, 0, 589, 590, 591, 1165, 592, 1166, 1083,
	593, 594, 595, 596, 0, 598, 599, 0, 1066, 600,
	601, 602, 604, 605, 603, 606, 1127, 607, 0, 0,
	608, 609, 610, 667, 1150, 1187, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1063, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 2386, 2387,
	1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 1093, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 1142, 0, 288,
	1149, 289, 1148, 0, 1159, 290, 291, 292, 293, 294,
	295, 1095, 1128, 0, 296, 1189, 1190, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 1152, 329,
	1146, 1145, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1137, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1071,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 1084, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 1144, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 1157, 1158, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 1094, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 1139, 1140, 0, 1100, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 270, 1181, 460, 461, 1085, 1133,
	462, 1147, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 1072, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	1143, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 1073, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 1141, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 1188, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	1153, 1154, 1155, 1156, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 1083, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 1150, 1187,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 2643, 0, 0, 0, 0,
	0, 0, 2641, 2642, 271, 273, 272, 274, 275, 276,
	277, 1089, 278, 279, 0, 1087, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	0, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 3090, 3091, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2088, 271, 273, 272, 274, 275, 276, 277, 1089, 278,
	279, 0, 1087, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	0, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 1060, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 4565,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 1065, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 0, 1132, 0, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 1062, 270, 0,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 1072, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 1073,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 1059,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 4564, 599, 0, 1066, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1049, 0, 1227, 0, 0, 1056, 1057, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 0, 1087,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1213, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 1221,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 230, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 232, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	1585, 668, 669, 0, 612, 611, 613, 670, 1227, 614,
	0, 0, 0, 224, 615, 616, 671, 617, 618, 619,
	0, 0, 225, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 1217, 0, 1930, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1213, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 1221, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 230, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 232, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 1585, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 224, 615,
	616, 671, 617, 618, 619, 0, 0, 225, 0, 0,
	0, 3254, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 1930,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1213, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 1221,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 1209, 0, 1227, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 1217, 0, 1215, 1129, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1213, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 1221,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1227, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 1217, 0, 1215, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 1213, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 1221, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1227, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 1217, 0, 1215,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1227, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 4052, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	1128, 0, 296, 626, 627, 628, 0, 297, 298, 1135,
	0, 1116, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120,
	1124, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1160, 1161,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1167, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1130, 1131, 1134,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 1132,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 1168, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 1123, 1122, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 270, 1181, 460, 461, 0, 1133, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 1162,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 1163, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 1221, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 1126, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 1164, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 1165, 592,
	1166, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 1127, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 2490, 2491, 2492, 2509, 2510,
	2511, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 2512, 0, 620, 0, 1828,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 1813, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 2502, 0, 307,
	308, 309, 306, 310, 0, 311, 2498, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 2503, 2504, 2505, 2506, 361, 362, 363, 635, 0,
	0, 2497, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 2507, 2508, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 2500, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 2501, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	1812, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 1049, 0, 1308, 2487, 2488, 2489,
	2513, 2499, 2493, 0, 2495, 2496, 2494, 2481, 2482, 2483,
	2484, 2485, 2486, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1313,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1170, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1172, 395, 643,
	644, 0, 645, 0, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1177, 413, 414, 1178, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 0,
	0, 1181, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 232, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 1585, 668, 669, 0, 612, 611, 613,
	670, 1582, 614, 1308, 0, 0, 224, 615, 616, 671,
	617, 618, 619, 0, 0, 225, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 186, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1313, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 0, 1181, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 230, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 232, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	1585, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 224, 615, 616, 671, 617, 618, 619,
	1308, 1307, 225, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 186, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1313, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 0, 1181, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1308, 1307, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1607, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1313, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1172, 395,
	643, 644, 0, 645, 0, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 0, 1181, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1308, 1307, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 3539, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 2270, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1308, 2184, 0, 0, 0, 0, 2185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 1607, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 2183,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1308, 1307,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 1607, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1227, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 1591,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 1128, 0, 296, 626, 627,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 270, 1181, 460,
	461, 0, 1133, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1049, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 232, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 1585, 668, 669,
	0, 612, 611, 613, 670, 265, 614, 0, 0, 0,
	224, 615, 616, 671, 617, 618, 619, 0, 0, 225,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 186, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 265, 3003, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 1944, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 265, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 4721, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 3489, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1579, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 265, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 2991, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 265, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 3647, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 889, 614, 794, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 2261, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	801, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 887, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 799, 580, 581, 582, 583, 584, 800, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 792,
	614, 794, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 804, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 801, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 799,
	580, 581, 582, 583, 584, 800, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 1983, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 0, 1989, 0,
	288, 1979, 289, 1995, 0, 2002, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 2005, 2006, 0, 0,
	297, 298, 0, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 1152,
	329, 1993, 1992, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 0, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 1991, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 2000, 2001, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 0, 380, 381, 382, 383, 384,
	0, 0, 0, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 1986, 1987, 0, 1982, 0, 397,
	398, 1174, 0, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 0, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	0, 462, 1994, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 0, 1182,
	473, 1183, 0, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 1976, 486, 487,
	488, 1977, 489, 490, 491, 0, 492, 0, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1990, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 0, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1988, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 2004, 569, 570, 571, 572,
	0, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1996, 1997, 1998, 1999, 0, 597, 0, 589, 590,
	591, 0, 592, 0, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 0, 1980,
	2003, 0, 612, 611, 613, 0, 0, 614, 0, 0,
	794, 0, 615, 616, 0, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 1970, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 801, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 799, 580,
	581, 582, 583, 584, 800, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	794, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 804, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 801, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 2304, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 2305, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 799, 580,
	581, 582, 583, 584, 800, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 2306, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 2053, 614, 1308, 2020, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 804, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1313, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 2017,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1172, 395,
	643, 644, 0, 645, 0, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 0, 1181, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 2018, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 2014, 614, 1308, 2020, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 2017, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 2018, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 794, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	801, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 2009,
	541, 542, 543, 544, 0, 2010, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 799, 580, 581, 582, 583, 584, 800, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	2008, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 794, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 804, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	801, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 1961,
	541, 542, 543, 544, 0, 1962, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 799, 580, 581, 582, 583, 584, 800, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	1960, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 1308, 2020, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 804, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 2017, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 2018, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1308, 1307,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 3838, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1308, 1307, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 3460, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1635, 0, 1308, 1307, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 1634, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 1633, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	1632, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1553, 0, 1308, 1307, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1313, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1552, 641, 642, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 0, 1181, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1513, 0, 1308, 1307, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1481,
	0, 1308, 1307, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1480, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1302, 0,
	1308, 1307, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1313, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1301,
	641, 642, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 0, 1181, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1308, 1307, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1313, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1172, 395,
	643, 644, 0, 645, 0, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 0, 1181, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 1308, 2020, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 2060, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 1308, 1307, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 1308, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 2810,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2807, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2814, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 3016, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 2813, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 3013, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	3015, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 3012, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	2812, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 3014, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 2810,
	297, 298, 629, 0, 0, 2804, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2807, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2814, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 2813, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2803, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	2812, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 2811, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1708, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 1707, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 1711,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 1709, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 1710,
	611, 613, 670, 1455, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1457, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1219, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1452, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1454, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 1219, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1359, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1361, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 1219, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 703, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 702, 276, 277,
	692, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 695, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 696, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 697, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 691, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 692, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 695, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	696, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 697, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 1219, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 3408, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 2961, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 2960,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 2276, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 2217, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 2224, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 2223, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 2210,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2212, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2180, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	1219, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1557, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1556, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1472, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1465, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1467, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1292, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1291, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1282, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1281, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1279, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1278, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1274, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1273,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 673, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 256, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 695, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 696, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 697, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	2313, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	2311, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	2309, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 2230, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 2039, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 2033, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 876,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 875, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 874,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 3016, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	4122, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 760, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1329, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 1327, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 761, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 757, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 1330, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 756, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 760, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1329, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 1327, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 761, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	757, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	1330, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 756, 662, 663, 664, 0,
	597, 0, 589, 1328, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	682, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 681, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 680,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 265,
	3003, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 265, 4132, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 4394, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 4029, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 3804, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 265, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	2696, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 265, 3003, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 3000, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 2286, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 2274, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 760, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 750, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 761, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 757, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 1590, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 756, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1563, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1562, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1547,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1545, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1540, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1517, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1515, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1478, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1460, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1297, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1296, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1288, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1287, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 1241, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 766, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 760, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	750, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	748, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 749, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 761, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 751, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 757, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 752, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	756, 662, 663, 664, 0, 597, 0, 589, 754, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 742, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 743, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 705, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 699,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 677, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3509, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3446, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3424, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3421, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3373, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3371, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 3356, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2971, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 743, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 2248, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 0, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1259, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	1192, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	0, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 0, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 0, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 0, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 1788, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 1794, 1788,
	1759, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	1779, 0, 0, 0, 0, 1807, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 1798, 0, 0, 1808, 1765, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1780, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 1794, 1788,
	0, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 1794,
	1788, 1759, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 1779, 0, 0, 0, 0, 1807, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	4498, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 4494, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 1798, 0, 0, 1808, 1765, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 1798, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 1787, 1789, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1780, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 1794,
	1788, 0, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 1779, 0, 0, 0, 0, 1807, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 4415, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 4380, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 1798, 0, 0, 1808, 1765, 0, 0,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1780, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	1794, 1788, 0, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1781, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760,
	0, 0, 0, 1779, 0, 0, 0, 0, 1807, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1812, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 4379, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 4207, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 1798, 0, 0, 1808, 1765, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 1798, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 1787, 1789, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1780, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 1794, 1788, 0, 0, 1799, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 1781,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 1813, 1812, 0, 0, 0,
	0, 0, 1794, 1788, 1759, 0, 1799, 0, 0, 0,
	1760, 0, 0, 0, 1779, 0, 0, 0, 0, 1807,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 1812, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 4048, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 3984, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 1798, 0, 0, 1808, 1765,
	0, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 1798, 0, 0, 1808,
	0, 0, 0, 0, 0, 0, 1787, 1789, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1780, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 1794, 1788, 0, 0, 1799, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 1813, 1812, 0, 0,
	0, 0, 0, 1794, 1788, 1759, 0, 1799, 0, 0,
	0, 1760, 0, 0, 0, 1779, 0, 0, 0, 0,
	1807, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1812, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 3983, 0, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 3982, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 1798, 0, 0, 1808,
	1765, 0, 0, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 1780, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 1794, 1788, 0, 0, 1799, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 1813, 1812, 0,
	0, 0, 0, 0, 1794, 1788, 1759, 0, 1799, 0,
	0, 0, 1760, 0, 0, 0, 1779, 0, 0, 0,
	0, 1807, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 1812,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 3652, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 3172, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 1798, 0, 0,
	1808, 1765, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 1780, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 1794, 1788, 0, 0, 1799, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 1813, 1812,
	0, 0, 0, 0, 0, 1794, 1788, 1759, 0, 1799,
	0, 0, 0, 1760, 0, 0, 0, 1779, 0, 0,
	0, 0, 1807, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1812, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 3171, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 3170, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 1798, 0,
	0, 1808, 1765, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1780, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 1781, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 1794, 1788, 0, 0, 0, 0, 0,
	1799, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 1812, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 3169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 3134, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 4635, 0, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1798, 0, 0,
	1808, 0, 0, 1807, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 1804, 0, 1805, 0, 0, 1759,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2669, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 2668,
	0, 0, 1760, 1782, 1783, 1784, 1785, 1795, 0, 0,
	0, 1807, 0, 1765, 0, 3234, 0, 0, 1810, 3233,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 4634,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	1798, 0, 0, 1808, 0, 0, 1776, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	1795, 1808, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 1796, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 1786, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1799, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 1795, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 1796, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 1757, 1758, 1780, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1788,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 1795,
	1046, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1788,
	0, 1812, 1798, 0, 0, 1808, 1760, 0, 0, 0,
	0, 0, 1787, 1789, 0, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 1813, 0, 0, 0, 0, 0, 1774, 1775,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 1796, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 1810, 0, 1765, 0, 0, 0, 0,
	0, 3240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 1781, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 1757, 1758, 1799, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1788, 0, 0, 0, 3235, 0,
	0, 1760, 0, 0, 1812, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 3633, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 1810, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1798, 0, 0,
	1808, 0, 0, 1807, 1812, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 1804, 0, 1805, 0, 0, 1759,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 1795, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 1794, 1788,
	1787, 1789, 0, 3173, 0, 0, 1760, 0, 0, 0,
	1786, 0, 0, 0, 0, 1807, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 1781, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 1799, 1780,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	3200, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 1798, 1786, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 1794, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 1810, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1798, 0, 0,
	1808, 0, 0, 1807, 1812, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 1804, 0, 1805, 0, 0, 1759,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 1795, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 0, 1788,
	1787, 1789, 0, 0, 0, 0, 1760, 0, 0, 0,
	1786, 0, 0, 0, 0, 1807, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 1781, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 1799, 1780,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 1798, 1786, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 1799, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 0,
	1760, 1780, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 935,
	0, 983, 0, 0, 0, 1786, 0, 0, 0, 1782,
	1783, 1784, 1785, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 943, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 957, 0, 941, 940, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 1798, 0, 0, 1808,
	0, 0, 0, 0, 0, 959, 1787, 1789, 0, 0,
	0, 942, 0, 0, 0, 0, 945, 0, 0, 0,
	0, 991, 0, 0, 1812, 0, 0, 0, 0, 0,
	954, 955, 1774, 1775, 0, 0, 0, 0, 0, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 984, 947, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 981, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 0, 0, 0, 982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 950,
	0, 0, 0, 0, 0, 0, 0, 939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 951, 952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 960, 958, 0, 0, 1786,
	0, 0, 0, 953, 0, 0, 0, 969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 988, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 946,
	0, 0, 990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 0, 976, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 979, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	989, 970, 0, 0, 963, 961, 0, 966, 0, 0,
	0, 0, 0, 967, 0, 0, 937, 0, 986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 978, 0, 968, 0, 0, 0, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 987, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 975,
}

var sqlPact = [...]int{
	6787, -1000, -1000, -1000, -1000, 171, -1000, -1000, 169, 167,
	166, 164, 162, 155, 154, 153, 151, 150, 149, -1000,
	-1000, -1000, -1000, -1000, -1000, 148, -1000, -1000, 145, -1000,
	144, 143, 138, -1000, -1000, 135, -1000, 134, -1000, -1000,
	-1000, -1000, 132, 131, 127, 91690, 91143, 92230, 2214, 112364,
	98738, 2045, 82419, 111817, 81872, 111270, 2008, 9299, 110723, 2624,
	126, -1000, 110176, 116, 114, 113, -1000, 109629, -1000, 2046,
	-1000, 112, -1000, 6703, 67067, 111, 110, 108, 2359, 106,
	-1000, 105, 104, -1000, -1000, 103, -1000, 11603, 1474, -1000,
	102, 101, -1000, 678, 96557, 96, 95, 2343, 90, 89,
	66520, 87, 85, 2334, 2774, -1000, -1000, 1969, -1000, -1000,
	84, 82, 81, 80, 79, 78, 77, 76, 75, 73,
	71, -1000, 70, 69, 66, 65, 61, -1000, 60, 58,
	56, -1000, 54, -1000, 53, 46, 39, 38, 36, 35,
	34, 31, 30, 28, 27, 26, 24, 23, 126597, -1000,
	-1000, 1847, 1659, 1655, 1652, 1649, 1626, 933, 21, 20,
	19, 18, 17, 16, 15, 14, 13, 12, 11, 10,
	9, 8, 5, 4, 2, 133, -2, -4, -5, -7,
	-12, -17, -18, 2496, -1000, 1752, 1106, 31338, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 119384, 112904, -19, -72, -20, -1000,
	3164, 1051, 54999, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 503, 2055, 740, -1000, -1000, -1000,
	109089, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2209,
	-44, -1000, 1881, -1000, -1000, -1000, -1000, -1000, 739, -1000,
	2207, 322, 2138, -1000, -1000, -1000, 3244, 2338, 3636, 3635,
	3633, 3630, 3628, 118844, 1739, 3627, 2412, 3626, 3625, 3624,
	3623, 3622, 3619, 3618, -1000, 90596, 1007, 90049, 89502, 3269,
	108549, 88955, 108002, 75866, 47064, 1042, 3241, -1000, -1000, -1000,
	-1000, -1000, -1000, 112904, -1000, 1006, -1000, -1000, 3607, 3605,
	2007, 732, 98191, -1000, 1902, -1000, 879, 33060, -1000, 1184,
	-1000, 33060, 236, -1000, -1000, -1000, -1000, -1000, -1000, 3604,
	3601, 3600, 3598, 3596, -1000, -1000, 81325, 24398, 80778, 80231,
	107455, 23839, 88408, 87861, 3591, 3586, 3585, 3584, 106908, 75307,
	1001, 1408, -1000, -1000, -1000, -1000, -1000, -1000, -39, 73071,
	3401, 112904, -1000, 220, -1000, -1000, -1000, -1000, -1000, -1000,
	46478, 903, 45892, 693, 45306, 372, -1000, -1000, -1000, -1000,
	74748, -1000, 106361, 2335, 3583, 3578, 1108, 3576, 3147, 1628,
	3573, 1733, 1188, 3572, 3571, 3570, 3568, 3567, 3566, 3565,
	1384, 105814, 2837, 1405, 105267, 1622, 74189, 996, 87314, 92230,
	2492, 104720, 1345, 1322, -1000, -1000, -1000, -1000, 2948, 2750,
	2741, 1159, -1000, -1000, -1000, -1000, 58289, 7926, 7522, -1000,
	-1000, 9761, 104173, 61074, 92230, 92230, -1000, -1000, -1000, -1000,
	-1000, 44720, 835, 44134, 1004, -1000, -1000, 58846, 2785, -1000,
	-1000, -1000, -1000, 43548, 578, 42962, 877, 112904, -1000, 2835,
	1755, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2269, 1563, 3419,
	2597, 73630, 2017, 1352, 3210, 2946, 2944, 1449, 2936, 3564,
	2504, 2935, 2909, 2898, 2890, 2884, 1248, 2437, 335, 2461,
	30752, 2813, 1638, 42376, 1466, 1452, 2877, 2876, 3434, 1869,
	1925, 2033, 79684, 3560, 3557, 3177, 2874, 2868, 2652, 2856,
	-1000, 2780, 1382, -1000, -1000, -1000, -1000, 1421, -1000, -1000,
	-1000, -1000, 82959, -1000, -1000, 1260, -1000, -1000, 1260, -1000,
	-1000, -1000, -1000, -1000, 1230, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1752, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2370, -1000, 1973,
	-1000, -1000, 2375, 3101, 3101, 3101, 3240, 468, 462, -1000,
	133, -1000, -1000, 125830, -1000, -1000, 47638, 47638, 47638, 47638,
	47638, 47638, 47638, 47638, 2048, -1000, 729, -1000, -1000, 774,
	-1000, 728, 663, 601, -1000, -1000, -1000, -1000, -1000, -1000,
	720, -1000, -1000, -1000, -1000, -1000, -1000, 3401, -1000, 27248,
	-1000, -1000, -1000, 431, 719, 47638, -1000, -1000, 3445, 3444,
	953, -1000, 214, 892, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2834, 717, 714, -1000,
	713, 712, 711, 710, 707, -1000, -1000, -1000, 706, 703,
	701, 700, 696, 691, 689, 688, -1000, 1896, -1000, -1000,
	-1000, -1000, -1000, -1000, 642, 641, 641, 641, -1000, 989,
	-1000, -1000, -1000, 348, 640, 317, 637, 636, 635, -1000,
	686, 684, 681, 680, 679, 674, 672, 670, 669, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 985, -1000, -1000, -1000,
	-1000, -40, 112904, -1000, 503, -40, -1000, -1000, 667, -1000,
	35368, 35368, 35368, -1000, -1000, 2201, 47638, -1000, 2494, -1000,
	-33, -33, 852, 56634, -1000, 53884, 852, 307, 787, 62711,
	-1000, 2775, -1000, -1000, 666, 209, -1000, -1000, -1000, -1000,
	24955, 2769, 112904, 112904, 92230, 92230, 92230, 3556, 3036, 47638,
	-1000, -1000, 70870, 112904, 92770, -1000, -1000, 3350, 67607, 70330,
	112904, 2821, 69790, 3554, -1000, -1000, -1000, -1000, -1000, 3008,
	3550, 3549, 3542, -1000, 112904, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 215, 3007, -1000, -1000, 96010, 215, 3002, -1000,
	215, 3001, -1000, 95470, -1000, -1000, 2110, 2997, -1000, -1000,
	219, 2996, -1000, -1000, -1000, 218, 2995, -1000, -1000, 205,
	-70, 2991, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 125830, -1000, -1000, -1000, 69243, -1000,
	3170, -1000, -1000, 112904, -1000, 47638, -1000, 3349, 1726, 76970,
	3290, -56, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2389,
	2393, 1100, 2228, -1000, 3056, 1307, -1000, 33060, 3135, -1000,
	-1000, -1000, 198, 24955, -1000, -1000, -1000, -1000, -1000, -1000,
	2346, 2990, 1453, -1000, 2224, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2098, 2987, -1000, 2202, 2982, 1915, -1000,
	-1000, 2566, -1000, 3165, -1000, -1000, 1930, 2980, -31, -1000,
	-1000, 2322, -1000, -1000, -1000, -1000, -1000, 1944, -1000, 937,
	2978, -1000, 86767, 60517, 58846, 73071, -50, -1000, -1000, -1000,
	-1000, -195, -1000, 23280, 125830, -1000, -1000, -1000, -1000, 1634,
	125830, 898, -1000, -1000, 2973, -1000, 125830, 897, -1000, -1000,
	2972, -1000, 2820, -1000, -1000, 2296, -1000, -1000, 3540, -1000,
	-1000, 3534, -1000, 3533, 3532, 3530, -1000, 1647, 1875, 3529,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86227, 2199,
	-1000, -1000, 85133, 2816, -1000, 2295, 3289, -1000, 85680, 994,
	-1000, 937, 2294, -1000, 94930, 959, 2292, -1000, 3527, 3266,
	2564, 937, 2291, -1000, -1000, -1000, -1000, -1000, 1003, -1000,
	64343, -1000, 64343, -1000, 1509, -1000, 118304, -33, 92230, 3401,
	-1000, -71, -1000, -1000, -1000, 1051, -1000, 57742, -1000, 57742,
	97644, 76423, 904, 733, 65973, 125830, -1000, -1000, -1000, -1000,
	125830, -1000, -1000, -1000, -268, 2596, -1000, 76423, 59960, 125830,
	-1000, -1000, -1000, -1000, 125830, -1000, -1000, -1000, 76423, 85133,
	-1000, 103626, 84593, -1000, -1000, 1359, 2419, -1000, -1000, -1000,
	76423, 1269, 76423, 76423, 76423, -1000, 103079, -1000, -1000, 2023,
	1243, 3167, 1981, 92230, -1000, 1759, -1000, -1000, -1000, 3201,
	112904, -1000, -1000, 2814, -1000, 68696, 94390, -1000, 93850, -1000,
	93310, -1000, 92230, -1000, 92230, -1000, 3524, 3523, 3522, -1000,
	-1000, 3520, -1000, 3519, 3187, -1000, 766, 41790, 125830, 3173,
	-1000, 3515, 3278, 2813, 125830, -1000, 2976, 1646, 1643, 112904,
	-1000, -1000, 112904, -1000, 112904, -1000, -1000, -1000, 1451, -1000,
	-1000, 2385, -1000, -1000, -1000, -1000, 92230, 1250, -1000, -1000,
	-1000, -1000, -1000, -1000, 2870, 3514, 1525, -1000, 1727, -1000,
	2768, 3159, -1000, 1341, 1642, -1000, -1000, 229, -1000, -1000,
	-56, -1000, 117764, -1000, 2375, -1000, 112904, -1000, 2415, 2804,
	2811, 1630, 2176, 2479, -1000, 41204, 2462, 51082, 2223, 133,
	-1000, -1000, 133, 133, 32486, -1000, -1000, 67607, 67607, 24955,
	1237, 47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638,
	47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638,
	47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638, 47638,
	47638, 47638, 47638, 47638, 47638, 47638, 47638, 2231, 47638, 1229,
	47638, 47638, 47638, 47638, 1874, -1000, -1000, 1955, 536, 1908,
	663, -1000, -1000, -1000, 3404, 3404, 3404, 537, 537, 537,
	126195, 126195, 623, 3513, 774, -1000, 47638, -1000, 97, 57181,
	47638, 25514, -1000, 462, 9604, 2347, -1000, 461, 26100, -1000,
	-1000, -1000, 27248, 601, 40618, 47638, 961, 125830, -1000, -1000,
	1715, 3421, 22722, 2824, 2639, 661, 792, 791, 30166, 29580,
	28994, 28408, 789, 47638, 47638, 47638, 47638, 47638, 47638, 47638,
	47638, -1000, -1000, 3427, -1000, 3421, -1000, -1000, -1000, -1000,
	3421, 1192, 1178, 3421, -1000, 3421, 3421, 10026, 10026, 40044,
	39458, 38872, 51656, 38286, 47638, 27822, 37700, 37114, -1000, 112904,
	-40, 3348, 47638, 310, -1000, 124181, -1000, 310, 310, 653,
	-79, 125830, 2577, 2577, 55544, 2345, 2079, 2079, 2079, -1000,
	852, 18229, 852, 101992, 2096, 852, 852, 196, 232, 457,
	53339, 2494, 101992, 758, 652, -21, -22, -23, -1000, -1000,
	-24, -26, -1000, -1000, 92230, 650, 25514, 24955, 194, 1949,
	-80, 2480, 2471, 2468, -1000, 2467, -1000, 1660, -87, 1228,
	92230, 112904, 3512, -101, -1000, 6312, -88, -1000, 1157, 190,
	3421, -1000, -1000, -1000, -1000, -1000, 3510, 3509, -1000, 981,
	648, 643, 434, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 642, 641, 641, 641, -1000, 348, 640, 317, 637,
	636, 635, -1000, -1000, -1000, -1000, -1000, 2767, 92230, 112904,
	3505, -195, 92770, -76, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 112904, -1000, -1000, -1000, 3502, -1000, 92230, -1000,
	-1000, 92230, 215, 2967, -1000, 92230, -1000, 92230, 210, 2966,
	-1000, -1000, 112904, -1000, 92230, 92230, -1000, 112904, 112904, 112904,
	76423, 76423, 222, -1000, 92230, 864, -96, 1117, -56, -1000,
	-1000, -1000, 1260, -1000, 1840, -1000, -1000, -1000, -1000, -1000,
	-1000, 1369, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	953, -1000, -1000, -1000, -1000, -1000, -1000, 3417, 3410, -43,
	-1000, -1000, 24955, -1000, -57, 1607, 1751, 1227, -1000, 79137,
	2275, 3169, 3499, 2555, 3156, 1505, -1000, 1428, -1000, 3262,
	82959, 3314, 3323, 1287, -1000, 2766, -1000, -1000, 876, 1524,
	1629, 1225, 1221, 82959, 2202, -1000, 67607, -1000, 2533, 3238,
	1356, 1378, 1356, 1356, 1365, -1000, 82959, 1617, 1219, 1218,
	1215, 1795, 1791, -1000, -1000, 1887, -1000, 1214, 1213, 813,
	1781, -1000, -58, 3309, 3313, 1259, -1000, 2758, 1212, -1000,
	-1000, -1000, 3237, 92230, 24955, 1519, 1518, 1514, 1610, 1211,
	-46, -1000, 3297, 1210, 1209, -1000, 5496, -1000, 76423, 1773,
	2955, 2593, 847, 2592, -1000, -1000, -1000, 847, -50, 73071,
	112904, 189, -1000, 97, 47638, 47638, 97, 47638, 97, 3277,
	2952, -1000, -1000, -1000, -1000, -1000, 3497, 1846, 2407, -1000,
	-1000, 633, 2287, 2753, 112904, 2489, -51, 92230, -1000, 68156,
	2950, 71417, 2202, 2285, -1000, -1000, 84046, -1000, 2949, 503,
	2284, -1000, 675, 3496, 2941, -1000, 117224, -1000, 3170, 1171,
	2940, 1061, 676, 3347, -1000, 676, 64883, -1000, 112904, -1000,
	-33, 682, 78057, -103, -105, 445, -1000, 102539, 112904, 1057,
	78597, 112904, 3124, 924, 58846, -1000, 58846, -106, -268, 2591,
	1402, 904, 904, 847, -1000, 847, -1000, 92230, 2810, -1000,
	-1000, 76423, 904, 904, 904, -1000, -1000, -1000, -1000, 3495,
	3494, 3492, 3491, -1000, -1000, 926, 92230, 112904, 92230, -1000,
	188, -1000, 112904, -1000, 112904, 112904, 92230, -1000, 926, 112904,
	926, 112904, 926, 112904, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 97, -1000, -1000, 125830, -1000, 47638, -1000, -1000, 3490,
	1552, -1000, 2808, -1000, 2805, -1000, 7, -1000, -1000, -1000,
	-1000, -1000, -1000, 2021, -1000, -1000, -1000, -1000, 92230, 92230,
	92230, 92230, 112904, 3069, -1000, 112904, 3067, 92230, -1000, -1000,
	82959, -1000, 2415, 2804, -1000, -1000, -1000, -1000, -1000, -1000,
	1632, 2153, -1000, 2441, -1000, 1472, -1000, -1000, -1000, 125830,
	52213, -1000, -1000, 125830, 1654, -1000, 50508, 49934, -1000, -1000,
	1609, 92230, 2495, -1000, 2495, -194, -1000, 10797, 2440, 92230,
	-1000, -1000, -1000, -1000, -1000, 870, 609, 609, 1282, 1282,
	1282, 1282, 3304, 5182, 6171, 277, 13097, 13097, 6473, 6473,
	6473, 6473, 6473, 13097, 4848, 537, 537, 4848, 4848, 4848,
	4848, 4848, 537, 537, 537, 13097, 13097, 13097, 537, 126195,
	126003, 6163, 47638, 47638, 1207, 1890, 536, 5571, 47638, 7681,
	7681, 7681, 7681, -1000, 1512, -1000, -1000, -1000, -1000, 2745,
	627, 51656, 51656, -1000, -1000, -1000, -1000, 26674, 47638, -1000,
	-1000, -1000, -1000, 36528, -1000, -1000, 123462, -322, 435, -1000,
	187, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 432, -125, -47, -1000, 47638, 47638,
	47638, 429, -1000, 186, 47638, 112904, -1000, 17533, 755, -123,
	-1000, -127, 1386, -1000, 47638, -1000, -1000, 1206, -1000, 1204,
	1203, 1198, -1000, 624, 426, -1000, 185, -1000, 2072, 620,
	619, 47638, -1000, -1000, -1000, -1000, -1000, 123421, -1000, -1000,
	123041, -1000, -1000, 123000, -1000, -1000, 122620, -1000, -1000, -1000,
	125565, 16935, 16232, 15344, 8946, 14695, 13739, -128, 422, -130,
	419, 868, 867, 417, 416, 415, -135, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -136,
	412, -1000, 2742, -125, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 399, -1000, 398, -1000, 125373, -125, 388, 8703,
	-1000, 51656, 51656, 51656, 51656, -1000, 381, -1000, 124053, -1000,
	125200, 35954, 35954, 35954, 379, 124935, 47638, -125, -141, -1000,
	-143, -1000, -1000, 498, -144, 951, 35368, 54449, 24955, -1000,
	951, 951, 47638, -1000, 47638, 2456, -1000, -1000, -1000, -1000,
	2455, 1811, 2577, 55544, -1000, -1000, -1000, -1000, 101992, -1000,
	3401, 2598, -1000, 101992, -1000, -1000, 112904, 503, -1000, 101992,
	101992, 24955, 852, -1000, 852, 101992, 587, -1000, -1000, -1000,
	-1000, -1000, 377, 61619, -47, 184, 24955, 937, -1000, -1000,
	2569, 2569, 2569, 2569, -1000, -1000, 112904, 1197, -53, -95,
	-1000, 3374, -1000, 1924, -1000, 67607, -1000, 772, 1078, 24955,
	-1000, -1000, -1000, 614, -1000, 3421, 3421, -1000, 3421, 112904,
	2739, 255, -1000, 238, 71417, 71417, 3489, -1000, -1000, 215,
	-1000, 92230, 215, 215, -1000, 92230, 92230, 2110, -1000, 219,
	-1000, 218, -1000, -1000, -70, -1000, 947, 33060, -1000, 1260,
	-1000, -1000, 1542, -1000, 1865, -1000, 1161, -1000, -1000, -1000,
	-1000, 33060, -1000, 2404, 112904, 112904, 92230, -1000, 112904, -1000,
	2057, 71417, -1000, 2279, 116684, 2274, 67607, 112904, -1000, -1000,
	613, 881, 2438, 2436, 1046, 112904, 112904, 2430, 116144, 115604,
	-1000, 3488, 112904, 1932, 47638, 3235, 2051, 2165, 97, 97,
	-1000, 97, 97, 97, -1000, 612, 1318, 92230, 92230, 112904,
	71417, 92230, 1761, -1000, -1000, -1000, -1000, -1000, 83499, -1000,
	-1000, 3426, 3423, -1000, 1356, -1000, -1000, -1000, 1356, 2202,
	1725, 112904, 71417, 92230, 71417, 115064, 114524, -1000, 1606, 112904,
	1434, -1000, 813, 1933, 97, 97, -1000, 97, 97, 97,
	610, 24955, 1826, -1000, 2817, 112904, 3443, 113984, 3442, 112904,
	112904, 112904, 71417, 3138, 112904, 112904, 71417, 5496, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 72531,
	1068, 937, 1599, 1196, 1195, 82959, 58846, 915, 58846, 2570,
	-1000, -1000, 22164, -1000, 125830, 125830, -1000, 125830, -1000, 68156,
	112904, -1000, 991, 112904, 78597, 905, 2939, 63803, -195, 904,
	76423, 92230, -51, 2489, 112904, -1000, -1000, 2202, 2937, 503,
	2278, -1000, 76423, 3346, 2934, 608, 3487, 3483, -1000, 92230,
	2197, 2276, -1000, -1000, 113444, 2953, 813, 112904, 951, 55544,
	1828, -1000, 62166, 1016, 112904, 1731, 163, -1000, -1000, -1000,
	-8, 112904, -1000, 785, -1000, -1000, 682, 682, 904, -281,
	607, -1000, 838, 836, 59403, 76423, -146, -1000, -1000, -1000,
	-1000, 2274, 92230, 112904, 1252, 2561, 112904, -151, -1000, 183,
	606, -1000, 2928, -1000, -268, -1000, 924, 58846, 2728, 2721,
	-1000, -1000, 946, -1000, 1337, 904, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -34, 112904, -195,
	-195, -52, -53, -1000, 926, -1000, 926, -1000, 926, -1000,
	125830, -1000, -1000, 1550, 1521, 112904, -1000, 24955, 112904, 92230,
	24955, 92230, 2803, 2801, -1000, -1000, -1000, 112904, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1084, -1000, 1654, 2144, -1000,
	601, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2352, -1000, -54, 32486, 857, -1000, -1000, 92230, -36, 47638,
	47638, 5520, 4944, 47638, 51656, 51656, -1000, 47638, 4884, -1000,
	-1000, -1000, -1000, -1000, 2713, 599, 47638, 67607, 8341, 8063,
	-1000, 376, 12394, 4848, -1000, 47638, -1000, 402, -1000, 373,
	34794, -1000, 124482, -68, -152, -1000, 18800, -125, -153, -1000,
	-1000, 770, -1000, 2942, -1000, 47638, 124755, 2330, 1892, 1720,
	1568, 3421, 3441, 21606, -1000, 65428, 958, 2119, 122579, -1000,
	-1000, -1000, -1000, 67607, 67607, 47638, 47638, -1000, 47638, 47638,
	47638, -1000, -1000, -1000, 3421, 858, -1000, -1000, -1000, 858,
	-1000, -1000, 1356, -1000, 1356, -1000, 47638, -1000, -1000, 2710,
	47638, -1000, 67607, 67607, 51656, 51656, 51656, 51656, 51656, 51656,
	51656, 51656, 51656, 51656, 51656, 51656, 51656, 51656, 51656, 51656,
	51656, 51656, 51656, 51656, 2431, 51656, 3399, 3399, 3399, 1329,
	-1000, 2797, 2710, 47638, 47638, 67607, 370, 367, 364, -1000,
	47638, -125, -1000, -1000, 7995, 598, -1000, 2344, -1000, 2638,
	-1000, 47638, -1000, -257, -1000, 2494, -1000, -1000, 2638, 2638,
	-159, 125830, 55544, 55544, -1000, 597, 47638, 2449, -1000, -1000,
	754, -320, -1000, 834, -1000, -1000, -1000, -1000, -1000, 503,
	-1000, -1000, -1000, 180, 101992, 101992, 753, -1000, -160, -1000,
	-1000, -161, -1000, 3344, 361, 24955, -1000, 951, 2557, -1000,
	-1000, -1000, -1000, -1000, -1000, -195, 112904, 112904, 2136, 3440,
	-1000, 3422, 769, 750, 178, 3421, 359, 358, 355, -195,
	112904, 112904, 112904, -1000, -1000, -1000, -1000, 215, -1000, -1000,
	-1000, 210, -1000, -1000, -1000, -1000, 2505, -1000, -56, -1000,
	-1000, -1000, 47638, -1000, -1000, 3168, 1194, 1193, -1000, -1000,
	-1000, -1000, 2737, -1000, 2933, -1000, 2272, -1000, 1010, -1000,
	1877, -1000, 47638, 596, 2559, 594, 592, 3482, 1943, 3481,
	1055, 2932, 2110, 2924, 2110, -1000, -1000, -1000, 883, -1000,
	125830, 2051, -1000, 591, 590, -1000, -57, 1590, 1742, 1189,
	945, -1000, -1000, -1000, -1000, 47638, 47638, 101452, -1000, 452,
	3165, -37, -1000, -1000, -1000, 1597, 1187, 1181, -1000, -1000,
	-1000, -1000, 2202, 1595, 1176, 1173, -1000, -1000, -1000, -1000,
	-1000, 2271, -1000, -1000, 2922, 944, -1000, 2867, 2866, 862,
	112904, -1000, 941, -1000, -1000, -1000, -1000, 47638, -1000, -58,
	1172, 3301, 2270, 92230, -1000, 2110, 2916, 1169, -1000, 1168,
	-1000, -1000, -1000, 3296, 3293, 1174, -1000, -1000, -1000, -1000,
	-1000, 71974, -1000, 112904, 71417, 92230, 1639, 847, -1000, 2382,
	847, 915, 2709, -1000, 2485, 939, 92230, 3479, 354, -175,
	-59, 67607, 3343, -1000, 2155, 581, 92230, 853, -1000, 3401,
	-1000, -1000, -1000, 938, -1000, 3283, 92230, 3340, 2914, 937,
	97, 92230, 3402, -1000, -1000, 3339, 92230, 2912, 2194, 2258,
	2398, 813, 77517, 937, 2109, -69, -1000, 1731, 34208, 3162,
	-176, -1000, -1000, -1000, 951, 64883, 55544, 47638, 3475, -181,
	-1000, -1000, -1000, -1000, -1000, 99285, 99285, 76423, 76423, 76423,
	904, 112904, 112904, 78597, -1000, -1000, 586, 112904, 112904, 584,
	-1000, 112904, 112904, 3473, 76423, -61, 579, -1000, 833, 831,
	829, -1000, -1000, -1000, -1000, -1000, -1000, 924, -1000, -268,
	58846, 97, -1000, 2130, 92230, -1000, 21048, -1000, -1000, -1000,
	-1000, -1000, -1000, 926, -1000, -1000, 1977, 2174, 1977, 1705,
	1694, -1000, -1000, 2143, -1000, -1000, -1000, -1000, 2524, 3139,
	24955, 3276, 7681, 47638, 47638, 576, 6942, 6894, 7681, 47638,
	47638, 67607, 126439, -182, 47638, 47638, -1000, 47638, 749, 125830,
	-1000, 3439, 47638, 352, 351, -1000, -1000, -1000, 3415, -1000,
	-1000, -1000, 125830, 47638, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 350, -1000, 176, -1000, -1000, -1000, 119924, -1000, 47638,
	344, 3234, -1000, 341, 339, 10196, 459, 122199, 122158, 121778,
	337, -1000, -1000, 332, 328, 125830, 2797, 125830, -1000, -1000,
	1062, 1062, 1348, 1348, 1348, 1348, 3399, 501, 411, 1738,
	998, 998, 998, 943, 1329, 1329, 998, 998, 998, 1329,
	2708, 2434, 577, 8915, -1000, -1000, 125830, 125830, 324, -1000,
	-1000, -1000, -125, 323, 7995, -1000, 2633, 3232, 125830, -1000,
	55544, 2633, 2633, -1000, -1000, 1811, 112904, 125830, 55544, -1000,
	2598, -1000, 19369, -1000, 24955, -1000, -1000, -1000, -1000, 3401,
	-1000, 61619, -1000, 573, -1000, 174, -1000, 2557, -1000, 828,
	-1000, -1000, 76423, 76423, -195, -184, -1000, -1000, 748, 3471,
	762, 24955, 313, -1000, -1000, -1000, -195, -195, -195, -1000,
	-1000, -1000, 3123, 125830, 112904, 112904, 1381, 100912, 112904, 2904,
	-1000, 2162, -1000, 1046, 121737, 56089, -1000, 56089, 112904, -1000,
	-1000, -1000, 1762, 1491, 3470, 1102, -1000, 3203, 112904, -1000,
	112904, -1000, -1000, -1000, 112904, 112904, 92230, 112904, -1000, 71417,
	2875, -183, 125830, -62, -1000, 825, -1000, 1347, -1000, 20490,
	112904, 71417, 92230, 112904, 71417, 92230, 2902, 112904, 2004, -1000,
	-1000, 2855, -1000, 2862, -189, 24955, -1000, 3438, 3437, 2900,
	3207, -1000, 112904, 3436, 112904, 92230, 3119, -1000, -1000, -1000,
	-1000, -1000, 1594, 1165, 1163, 915, -63, 560, -1000, 824,
	-1000, -1000, 823, -1000, 915, -1000, 76423, 58846, 3469, 503,
	-1000, 2506, -1000, 97097, 2172, 97, -1000, 3466, 99832, 559,
	-1000, 2129, -1000, 747, -1000, 2348, 71417, 2202, 97, 92230,
	-1000, -1000, 503, 301, -65, -1000, 2954, 1027, 24955, 92230,
	2893, 2400, 813, 77517, -1000, 1171, 2479, -1000, -66, -1000,
	582, 97, 2109, -1000, -69, 125830, -1000, 820, -1000, -192,
	-1000, -1000, 299, -1000, 3118, 3074, -1000, 2644, 56089, 557,
	555, 112904, 3072, -1000, -1000, -197, 2618, 2618, 76423, 58846,
	76423, -1000, 924, 847, -1000, 2411, -1000, -1000, -1000, -1000,
	-1000, 24955, 1515, -1000, 553, 551, -1000, -1000, -1000, -1000,
	3139, 7681, 7681, 47638, 47638, 47638, 7681, 126439, -198, -1000,
	7681, 7681, -125, -1000, -1000, 124482, -1000, -1000, -1000, 125830,
	-1000, 19932, 1982, -1000, 121357, -1000, 32486, -1000, -1000, 47638,
	47638, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 51656,
	2702, 548, 67607, -1000, -1000, 297, 934, 47638, 49360, 2494,
	934, 934, -1000, -199, -1000, -1000, -1000, 3401, 174, -1000,
	-1000, 3465, 24955, -1000, 76423, -1000, -1000, 3461, 760, -1000,
	3459, -1000, -1000, -1000, -1000, -1000, 2590, 3338, -1000, 1778,
	-1000, 112904, -1000, 112904, -1000, 24955, 112904, 2660, 1183, -1000,
	881, 2428, 546, 51656, 92230, 839, -1000, 3365, 2657, -200,
	-1000, 112904, 47638, 112904, -205, -206, 2234, -1000, -1000, 1182,
	47638, -1000, -1000, -1000, 67607, 544, 2110, 2110, -208, -211,
	-1000, -1000, -1000, 47638, 1158, 112904, 33634, -1000, 3458, 3165,
	-1000, -1000, -1000, -1000, -1000, -1000, 112904, -1000, 112904, -1000,
	47638, 1155, -1000, -1000, -1000, 3435, 2110, 24955, 2110, -1000,
	2110, 3207, 1098, 112904, 71417, 92230, -1000, 2372, 2372, 76423,
	58846, -1000, -70, 915, -1000, 3336, 2528, 3455, -1000, -1000,
	-1000, -1000, 2427, -1000, -1000, 112904, 2417, 910, -1000, -213,
	-1000, 819, 817, 78597, 905, 899, -1000, -89, 543, -1000,
	816, -1000, -1000, -1000, -1000, 503, 3334, -1000, 3432, 542,
	540, 112904, 2187, 539, 24955, 3158, 813, 77517, -1000, 2953,
	1731, -1000, 2247, 112904, 3155, -1000, 2479, 536, -1000, 904,
	527, 526, 2534, 2534, -214, 56089, 56089, -219, 525, 904,
	-1000, -221, -1000, -1000, -1000, -1000, -1000, -99, -1000, 875,
	850, -1000, -1000, 92230, 92230, 47638, 47638, -1000, 7681, 7681,
	7681, -1000, 286, -1000, -1000, 2109, 3229, -1000, -108, 121316,
	120936, 5129, 51656, 67607, -222, -1000, -1000, 112904, 125830, -118,
	-1000, 125830, 522, 521, 428, -1000, -1000, -1000, 588, -1000,
	-1000, -1000, 3454, -1000, 100372, 112904, -1000, -1000, 2022, -1000,
	-1000, -1000, 112904, 2254, -1000, -1000, -1000, 1045, 47638, 8915,
	520, 47638, -1000, 3332, -1000, 2497, 2717, 1849, 56089, -1000,
	3139, -1000, 120895, -1000, 1026, 1815, -1000, -1000, -1000, 125830,
	3207, 56089, -1000, -1000, 518, 517, 125830, 515, 815, 2701,
	-1000, -1000, -1000, -1000, -1000, 125830, 508, 3301, -1000, -1000,
	-1000, -1000, 2110, 92230, -1000, -1000, -1000, -1000, -224, -1000,
	-1000, 1842, 97, 1976, 2583, -1000, 2172, 507, -1000, -1000,
	2159, 2477, -1000, 99832, 33060, 33060, 285, 3331, 899, -1000,
	3396, -1000, 3115, 3115, 47638, 3320, 97, -1000, 3402, 56089,
	-1000, 92230, 56089, 2181, 1887, 2377, 77517, -1000, 2398, -1000,
	-1000, -227, 112904, 1731, -1000, -1000, 76423, 76423, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1026,
	-229, -230, -1000, 76423, -1000, -1000, 2411, -1000, 112904, -1000,
	112904, -1000, -1000, -232, -235, -1000, 1941, 47638, 32486, -1000,
	-1000, 5129, -238, -1000, -124, -1000, 3319, 49360, 3453, 3451,
	3450, -1000, -1000, -1000, 1766, -1000, -1000, -1000, 2891, 2631,
	120515, 2354, 112904, 120474, -1000, 2698, -1000, -1000, 2528, 506,
	-1000, -1000, -1000, -1000, 857, 112904, 2528, 2610, 92230, 1032,
	-240, 1977, 1977, 47638, 31912, 2003, 47638, -1000, -1000, 3207,
	-1000, 2666, 3412, -1000, 905, -1000, 2001, 112904, -1000, 3194,
	-1000, 3071, -1000, -1000, -1000, 2506, 97, -1000, -1000, -1000,
	-243, 125830, 97, -1000, 280, -245, 1027, -248, 92230, 1774,
	-1000, 813, -1000, 2400, 951, -1000, -1000, -250, -251, 1849,
	1026, 1933, -256, -1000, -258, -259, -1000, -1000, 279, 48786,
	48786, 48786, -125, -194, -1000, 112904, 504, -1000, -1000, -1000,
	-1000, -1000, 2716, 914, -1000, 2169, 1839, 211, 1056, -1000,
	-1000, 1933, 112904, -1000, -1000, -1000, 913, 503, -1000, 47638,
	1026, -261, -1000, 1014, -266, -1000, 1008, -267, -1000, 2673,
	-1000, -269, 2110, 911, 3268, -1000, -1000, -1000, 2159, 92230,
	-274, -1000, -1000, 2227, -1000, 2528, 910, -1000, -1000, -1000,
	1026, 502, 1849, 486, 1393, 813, -1000, -1000, 1356, 3158,
	3030, 904, 904, 2528, 1849, 896, -1000, 904, -1000, -1000,
	-1000, 2938, -1000, 52770, 2152, 1688, 123880, 2938, 2938, -1000,
	-1000, 112904, 3253, -1000, 2173, 2170, 1484, -1000, -1000, -1000,
	-1000, -1000, -1000, 2657, -276, 3250, 2354, 125830, 2528, -1000,
	1977, 2580, -1000, 1977, 2668, -1000, 1998, -1000, -1000, -1000,
	1611, 3398, 2367, 484, -1000, 112904, 1657, 1648, 3449, 1976,
	2159, 1849, 56089, 2528, 56089, -1000, -1000, 112904, -1000, 1887,
	1311, -1000, -1000, 1933, 2528, 951, 483, -1000, -1000, 1741,
	3361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 811,
	-1000, 3050, -1000, 1077, 2168, 2168, 951, -1000, 803, 2169,
	-1000, -1000, 482, -1000, 471, -1000, 2112, -1000, -1000, -1000,
	-1000, 112904, -1000, -1000, 3418, -1000, 905, -1000, 2528, -282,
	1933, -284, -1000, -195, 1774, -1000, 1486, 896, 1933, -1000,
	1685, -1000, -1000, 2088, 48212, 47638, -1000, 3381, -1000, -1000,
	2447, -1000, -1000, 47638, 2657, 47638, 47638, 63258, -287, -1000,
	2159, 1933, 1026, 896, 1849, 1393, 64883, 951, 896, -1000,
	-1000, -1000, 125830, -1000, -1000, -1000, 125830, -1000, -292, -295,
	-281, 99285, 2081, 2367, 896, 1849, 951, 2528, -1000, -277,
	-1000, 951, 1933, 1151, -305, -1000, -1000, -1000, -1000, 951,
	2528, -1000, 1933, -1000, -1000, -1000, -1000, 470, -1000, -1000,
	1933, 896, 47638, 896, 951, -313, 951, -1000, 1933, -1000,
	-1000,
}

var sqlPgo = [...]int{
	0, 4234, 4232, 4225, 4219, 4215, 4211, 4210, 4202, 4201,
	4200, 4194, 4191, 4190, 4189, 4188, 4186, 4185, 4184, 4181,
	4180, 4179, 4174, 4173, 4172, 4171, 4170, 4169, 4168, 4167,
	4163, 4162, 4161, 4160, 4157, 4154, 4153, 4151, 4149, 4147,
	4146, 4145, 4144, 4141, 4140, 4139, 4138, 4137, 4135, 4134,
	4133, 4132, 4130, 4128, 4127, 4126, 4123, 4121, 4120, 4119,
	4118, 4117, 4116, 59, 4115, 4112, 4107, 4106, 4103, 4099,
	4095, 4093, 4092, 4090, 4089, 4088, 4087, 4086, 4085, 4084,
	4083, 4078, 4076, 4072, 70, 4071, 259, 4070, 4069, 4063,
	4062, 4059, 4057, 4055, 4054, 4052, 4051, 4050, 4049, 258,
	4047, 114, 155, 4046, 4042, 3639, 4041, 4040, 257, 4035,
	4033, 4032, 4031, 265, 4030, 4028, 4027, 4025, 4021, 4020,
	4018, 4017, 4014, 4012, 4010, 118, 203, 4007, 4006, 716,
	4005, 4004, 4003, 4002, 4000, 3997, 3996, 3994, 3992, 3991,
	243, 3989, 255, 3988, 3987, 3986, 3985, 3984, 3983, 3982,
	3979, 3971, 3969, 3968, 3965, 3964, 3963, 3962, 3960, 3959,
	3958, 3953, 3952, 3951, 3950, 3945, 3943, 3940, 3938, 3937,
	3936, 3935, 3934, 3927, 3926, 3925, 3924, 3923, 3922, 3920,
	231, 268, 180, 3918, 3916, 254, 253, 3914, 3913, 3912,
	3911, 3910, 121, 6, 38, 3908, 3907, 93, 91, 84,
	110, 96, 98, 3906, 103, 3905, 113, 61, 3903, 15,
	2, 292, 236, 11975, 226, 3901, 3900, 3899, 239, 189,
	3898, 223, 3897, 3892, 3891, 3890, 3888, 73, 53, 178,
	173, 169, 165, 706, 3886, 153, 99, 81, 62, 41,
	9, 69, 202, 22, 3885, 247, 8, 129, 1, 30,
	3884, 3883, 3881, 3880, 3613, 128, 3879, 252, 230, 161,
	3878, 3876, 3875, 326, 3874, 3872, 46, 3871, 94, 78,
	132, 31, 117, 3870, 141, 33, 3868, 174, 60, 3867,
	157, 97, 89, 12222, 10067, 3865, 125, 79, 131, 66,
	166, 160, 190, 135, 154, 158, 197, 204, 200, 177,
	290, 3863, 234, 3862, 3320, 85, 175, 148, 5179, 3860,
	3859, 3856, 86, 192, 105, 3855, 3854, 74, 11, 14,
	4, 7, 123, 23, 24, 16, 3852, 25, 109, 45,
	21, 3850, 27, 3849, 3848, 3847, 3845, 3844, 49, 159,
	3836, 262, 3833, 116, 56, 47, 3829, 39, 211, 3823,
	217, 119, 3821, 3816, 244, 195, 179, 3814, 68, 212,
	3813, 3811, 3809, 3808, 3807, 133, 3, 122, 3805, 3803,
	142, 3802, 51, 237, 191, 3799, 65, 3798, 3795, 164,
	100, 120, 264, 143, 210, 111, 216, 181, 218, 3794,
	3793, 3792, 184, 3791, 3790, 208, 151, 3789, 3788, 238,
	269, 90, 50, 77, 225, 80, 186, 152, 3785, 194,
	3784, 3783, 263, 176, 205, 12, 17, 104, 138, 3782,
	5, 219, 149, 222, 107, 3781, 6901, 2173, 2906, 3780,
	3777, 140, 112, 83, 130, 147, 249, 71, 3775, 3774,
	2285, 3772, 3771, 3770, 3769, 183, 3768, 3767, 3764, 139,
	168, 229, 3763, 124, 72, 55, 20, 150, 242, 256,
	108, 209, 172, 245, 3762, 3761, 3759, 182, 3758, 76,
	146, 163, 193, 240, 57, 3757, 162, 3755, 145, 939,
	67, 144, 3754, 214, 3753, 3751, 3750, 3749, 3748, 3747,
	3745, 305, 215, 3742, 3741, 3740, 34, 187, 3739, 248,
	221, 170, 92, 52, 3738, 88, 3278, 3737, 284, 3331,
	63, 250, 428, 251, 3736, 3432, 64, 3735, 0, 13899,
	7720, 10540, 13590, 3734, 4122, 3733, 3731, 3730, 206, 134,
	3729, 3728, 3726, 106, 3724, 87, 3722, 3721, 82, 3720,
	37, 18, 19, 29, 26, 297, 54, 3718, 3717, 28,
	137, 126, 3715, 260, 213, 3713, 3712, 3710, 3709, 95,
	3707, 43, 3706, 40, 3705, 3704, 44, 13, 32, 3703,
	3702, 199, 3701, 207, 232, 3700, 156, 3699, 3313, 136,
	3697, 3696, 3695, 48, 58, 246, 102, 3694, 278, 3693,
	3254, 3692, 3691, 42, 3690, 3687, 227, 196, 171, 198,
	3685, 3684, 167, 3674, 3671, 3662, 276, 3658, 3654, 3653,
	36, 3649, 10, 3647, 3645, 201, 3039, 3643, 3642, 35,
	3641, 185,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 31, 32, 32, 33, 34,
	34, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 17, 17, 37, 37, 18, 18, 39, 39,
	19, 19, 40, 40, 585, 585, 597, 597, 22, 22,
	42, 42, 23, 43, 16, 586, 586, 586, 586, 35,
	24, 44, 28, 28, 28, 28, 28, 195, 195, 195,
	195, 21, 21, 38, 38, 230, 230, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 581, 581, 232, 232, 231, 225, 225,
	226, 226, 587, 587, 233, 233, 233, 235, 235, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 480,
	480, 480, 513, 513, 512, 512, 512, 511, 511, 601,
	601, 602, 602, 602, 602, 602, 128, 128, 378, 378,
	378, 52, 52, 52, 52, 52, 576, 576, 197, 197,
	197, 199, 199, 198, 198, 198, 198, 198, 75, 75,
	592, 592, 593, 593, 591, 594, 594, 594, 196, 196,
	196, 124, 124, 124, 124, 124, 124, 125, 125, 126,
	126, 200, 200, 200, 202, 202, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 206, 15, 15, 15, 15,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 104,
	104, 515, 515, 516, 516, 191, 191, 192, 192, 192,
	192, 193, 193, 194, 194, 194, 66, 66, 203, 203,
	205, 205, 204, 204, 204, 204, 204, 54, 54, 54,
	54, 54, 54, 54, 55, 55, 55, 55, 55, 56,
	56, 56, 56, 56, 56, 57, 57, 57, 57, 57,
	57, 64, 64, 64, 64, 64, 182, 182, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 72, 72, 72, 72, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 604, 604, 605, 605, 606, 606,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 81, 81, 340, 340,
	303, 303, 82, 82, 82, 83, 83, 84, 84, 68,
	68, 574, 574, 355, 355, 471, 471, 69, 582, 582,
	582, 584, 584, 583, 583, 86, 86, 377, 377, 87,
	87, 87, 87, 87, 87, 88, 88, 88, 88, 88,
	88, 88, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 96, 96, 96, 96,
	96, 97, 97, 97, 94, 94, 94, 91, 91, 91,
	90, 90, 90, 95, 95, 95, 573, 292, 292, 93,
	93, 93, 92, 92, 92, 356, 356, 98, 98, 98,
	98, 304, 99, 99, 99, 99, 99, 99, 99, 99,
	102, 102, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 473, 473, 100, 100, 100,
	438, 438, 105, 105, 105, 393, 393, 106, 106, 106,
	106, 106, 107, 107, 107, 107, 107, 107, 107, 107,
	127, 127, 127, 127, 127, 127, 127, 578, 578, 348,
	348, 257, 257, 257, 257, 117, 117, 117, 117, 118,
	118, 118, 119, 119, 187, 187, 134, 134, 134, 134,
	134, 133, 133, 133, 133, 133, 133, 58, 58, 58,
	59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
	63, 63, 63, 136, 136, 598, 598, 138, 135, 135,
	135, 137, 137, 137, 137, 139, 140, 140, 140, 140,
	140, 140, 140, 140, 141, 141, 505, 505, 364, 364,
	503, 503, 525, 525, 504, 504, 310, 310, 310, 310,
	310, 311, 311, 311, 514, 514, 514, 514, 514, 514,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 188,
	188, 189, 190, 190, 190, 190, 190, 165, 165, 165,
	181, 181, 181, 181, 181, 181, 181, 168, 168, 168,
	152, 152, 143, 143, 143, 143, 143, 143, 143, 147,
	147, 147, 147, 147, 147, 147, 147, 144, 144, 154,
	154, 154, 154, 154, 148, 148, 149, 149, 149, 149,
	175, 175, 151, 151, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 145, 145, 145, 145, 156, 156, 156,
	156, 400, 400, 400, 180, 180, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 178, 178, 178, 178, 178, 178, 595, 595,
	596, 596, 172, 172, 172, 172, 172, 172, 452, 452,
	166, 166, 166, 166, 171, 171, 171, 171, 174, 174,
	174, 174, 383, 383, 163, 163, 163, 164, 164, 164,
	169, 169, 170, 167, 167, 173, 173, 173, 173, 146,
	146, 146, 146, 608, 608, 608, 176, 176, 162, 162,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 609, 609, 158, 158, 158, 157, 157, 157, 157,
	160, 160, 161, 161, 161, 161, 161, 161, 159, 150,
	179, 575, 575, 571, 571, 571, 571, 571, 571, 571,
	571, 572, 572, 572, 572, 577, 577, 110, 110, 110,
	110, 110, 120, 120, 120, 120, 120, 111, 111, 111,
	111, 111, 113, 113, 112, 112, 112, 112, 76, 76,
	76, 76, 76, 14, 14, 14, 77, 77, 248, 248,
	209, 209, 209, 329, 329, 210, 210, 318, 318, 318,
	318, 207, 207, 208, 208, 78, 78, 610, 610, 610,
	588, 588, 588, 589, 589, 589, 589, 589, 589, 312,
	312, 313, 313, 418, 418, 418, 418, 418, 316, 316,
	316, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	319, 319, 234, 234, 234, 327, 328, 328, 320, 320,
	326, 325, 325, 324, 324, 323, 323, 321, 322, 322,
	322, 331, 331, 330, 333, 333, 332, 417, 534, 534,
	536, 536, 536, 536, 536, 536, 536, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 401,
	401, 611, 611, 532, 532, 532, 533, 528, 528, 529,
	529, 529, 529, 529, 314, 314, 315, 315, 315, 315,
	530, 531, 346, 346, 456, 535, 535, 537, 537, 539,
	612, 612, 612, 612, 612, 612, 613, 613, 613, 416,
	416, 415, 415, 338, 338, 540, 540, 540, 540, 541,
	541, 541, 541, 541, 544, 543, 542, 542, 542, 542,
	542, 80, 80, 80, 380, 380, 379, 379, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 184, 184, 260, 260, 74, 74, 74,
	12, 12, 12, 590, 590, 590, 79, 79, 79, 79,
	79, 79, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 580, 580, 579, 579, 261, 261, 615, 615,
	85, 85, 85, 85, 85, 85, 85, 85, 474, 474,
	475, 475, 73, 73, 73, 73, 73, 402, 402, 399,
	399, 398, 398, 345, 345, 454, 454, 454, 455, 265,
	265, 266, 266, 227, 227, 227, 30, 29, 20, 20,
	25, 25, 26, 26, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 27, 27, 46, 46, 46, 46, 47,
	47, 47, 47, 50, 50, 51, 51, 45, 45, 45,
	45, 48, 48, 41, 41, 599, 599, 600, 600, 116,
	116, 121, 121, 121, 121, 121, 122, 122, 122, 122,
	123, 123, 123, 123, 132, 132, 183, 183, 183, 183,
	183, 183, 183, 53, 53, 53, 53, 65, 65, 65,
	65, 130, 617, 617, 617, 131, 131, 131, 616, 616,
	258, 258, 412, 412, 413, 413, 618, 618, 414, 414,
	414, 414, 414, 251, 250, 252, 252, 253, 253, 71,
	71, 71, 243, 243, 242, 240, 240, 517, 517, 245,
	245, 245, 246, 246, 236, 236, 237, 237, 238, 238,
	239, 239, 249, 249, 619, 619, 108, 108, 108, 186,
	186, 302, 302, 302, 409, 409, 409, 339, 339, 272,
	272, 411, 411, 411, 411, 376, 376, 376, 185, 185,
	353, 353, 366, 366, 367, 367, 468, 468, 368, 114,
	114, 115, 115, 129, 129, 213, 213, 211, 211, 211,
	211, 211, 211, 211, 211, 218, 218, 219, 219, 220,
	220, 221, 222, 222, 222, 222, 357, 357, 223, 223,
	223, 212, 212, 212, 214, 214, 214, 214, 214, 214,
	214, 217, 217, 217, 217, 224, 224, 224, 216, 216,
	551, 551, 551, 553, 553, 555, 555, 554, 554, 550,
	550, 552, 552, 614, 614, 382, 382, 382, 336, 337,
	334, 334, 335, 335, 343, 343, 341, 342, 342, 344,
	344, 453, 453, 453, 228, 228, 228, 373, 373, 373,
	373, 374, 374, 405, 405, 403, 403, 403, 403, 404,
	404, 406, 406, 406, 407, 407, 408, 408, 370, 370,
	371, 371, 372, 372, 372, 372, 434, 434, 215, 215,
	215, 350, 350, 350, 351, 351, 424, 424, 424, 424,
	424, 424, 425, 425, 423, 423, 423, 423, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 458, 459, 459,
	352, 352, 460, 410, 410, 569, 569, 569, 570, 570,
	451, 451, 461, 461, 461, 461, 461, 461, 449, 449,
	450, 450, 469, 470, 470, 386, 386, 386, 386, 384,
	384, 387, 387, 387, 387, 387, 385, 385, 462, 462,
	462, 462, 375, 375, 463, 463, 463, 463, 464, 465,
	465, 466, 466, 419, 420, 420, 476, 476, 476, 476,
	478, 349, 349, 349, 349, 349, 527, 526, 526, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	493, 493, 493, 493, 493, 493, 493, 479, 479, 479,
	479, 479, 483, 483, 483, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 484, 484, 489, 489,
	490, 490, 490, 485, 486, 491, 491, 491, 491, 620,
	620, 495, 495, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 481, 481, 481, 488, 488, 488, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 394, 394, 396, 396, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 428, 428, 428, 428,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 545, 545, 545, 545, 545,
	545, 545, 545, 430, 430, 548, 548, 549, 549, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 556, 556,
	557, 557, 559, 559, 560, 560, 561, 562, 562, 562,
	563, 564, 564, 558, 558, 565, 565, 565, 565, 566,
	566, 567, 567, 567, 567, 567, 568, 568, 568, 568,
	568, 440, 440, 441, 441, 447, 447, 447, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 309, 309, 308, 262, 262, 262, 262,
	262, 262, 362, 362, 360, 360, 360, 363, 363, 361,
	361, 359, 359, 358, 358, 437, 437, 435, 435, 439,
	439, 388, 388, 494, 494, 494, 494, 494, 494, 494,
	494, 389, 389, 389, 397, 390, 390, 391, 391, 391,
	391, 391, 431, 432, 392, 392, 392, 433, 433, 442,
	446, 446, 445, 444, 444, 443, 443, 421, 421, 422,
	422, 369, 369, 621, 621, 365, 365, 467, 467, 467,
	467, 306, 306, 354, 354, 305, 305, 297, 297, 298,
	298, 298, 298, 347, 347, 448, 448, 496, 496, 497,
	497, 498, 498, 499, 499, 500, 501, 502, 436, 436,
	282, 281, 269, 270, 280, 279, 278, 268, 271, 275,
	276, 277, 273, 274, 288, 287, 286, 241, 244, 293,
	294, 294, 296, 296, 295, 295, 284, 285, 472, 267,
	299, 299, 300, 300, 300, 301, 301, 301, 301, 263,
	263, 264, 264, 289, 289, 290, 291, 291, 283, 283,
	283, 254, 254, 254, 255, 255, 256, 256, 510, 510,
	507, 507, 507, 508, 508, 508, 509, 509, 509, 509,
	506, 506, 506, 506, 506, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 519, 519, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 521, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 524, 524,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 9, 6, 8, 4, 4,
	5, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 1, 0, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 3, 4,
	4, 4, 7, 7, 9, 8, 9, 5, 3, 5,
	7, 4, 12, 4, 12, 1, 3, 5, 5, 2,
	5, 3, 6, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 4, 2, 3, 10, 3, 6, 4,
	3, 1, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 1, 12, 3,
	1, 0, 1, 1, 2, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 9, 5, 2,
	6, 4, 7, 7, 7, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 2,
	6, 3, 3, 4, 4, 3, 1, 3, 2, 3,
	3, 1, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 12,
	15, 3, 1, 0, 4, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 588, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -603, 102, -552, -89,
	-92, -123, -607, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 518, 49, 472, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -551, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 585, 533, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 554, 563, -217, -215, -216, -224,
	444, 541, 492, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -304, 2, -284, -289, -290,
	-291, -283, -254, -521, -524, 4, -518, -522, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 500, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 474, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 465, 468, 470, 471, 472, 491, 473, 475, 479,
	480, 481, 482, 476, 477, 490, 484, 485, 487, 488,
	493, 494, 495, 496, 497, 498, 499, 501, 503, 511,
	512, 513, 515, 518, 519, 520, 521, 509, 523, 524,
	527, 528, 529, 532, 530, 531, 533, 535, 538, 539,
	540, 546, 545, 547, 550, 555, 556, 558, 559, 560,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 190, 191, 203, 205,
	213, 214, 215, 237, 238, 240, 245, 267, 333, 335,
	351, 355, 370, 374, 378, 380, 394, 429, 466, 478,
	483, 504, 505, 506, 507, 514, 516, 541, 542, 543,
	548, 557, -304, 2, -284, 342, -277, 2, -254, -254,
	381, 28, 2, 28, 369, 446, 495, 497, 2, -578,
	-348, 2, 28, -257, -254, 102, 201, 444, -277, 2,
	-578, -348, 25, 2, -254, 2, 356, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -606, 358, 388, 432,
	448, 490, 501, 515, 2, 545, 288, 445, 492, 229,
	120, 520, 439, -590, 437, 438, 356, 386, 425, 204,
	534, -258, 2, 434, -254, 288, 2, 588, 94, 278,
	74, 429, 449, -140, 512, -139, 504, 439, -141, -505,
	2, 310, -254, 588, 588, 588, 28, -267, -254, 492,
	229, 439, 120, 488, 588, 2, 492, 361, 545, 445,
	120, 391, 229, 520, 188, 140, 27, 126, 439, -590,
	288, -576, 2, -571, 4, -522, -518, -298, -297, 492,
	498, 120, -291, -283, 578, -290, 588, 588, 588, 2,
	248, 249, 390, 389, 449, 450, 588, 588, 588, 588,
	437, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 347, -604, 358, 388, 448, 490, 494, 501, 515,
	-589, 473, 68, 414, 439, -588, -590, 288, 520, 140,
	-398, 120, 278, 199, 528, 497, 495, 526, 132, 236,
	531, 530, 588, 588, -102, 2, 585, 32, 31, -101,
	-105, 142, 452, -206, 492, 241, 2, -254, 588, 588,
	2, 248, 249, 437, 438, 588, 588, 186, -571, 2,
	588, 588, 2, 248, 249, 437, 438, 241, 2, 68,
	441, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 2, -181, 449, 473, 210,
	47, 46, 74, 28, 387, 79, 362, 121, 148, 521,
	202, 229, 230, 256, 93, 94, -400, 44, 249, 68,
	248, 438, -595, 437, -452, 493, 440, 446, 487, 260,
	434, 512, 102, 535, 426, 560, 391, 392, 485, 404,
	279, 157, 187, 4, 120, 310, 451, 504, 278, 433,
	365, 84, -614, 2, 492, -616, 2, 512, 512, 2,
	-616, 2, -616, 2, -616, 2, -617, 512, 557, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, -212, -214, -213, 588,
	588, 588, 588, 588, 588, 588, -181, 449, 2, 74,
	28, -341, -343, 525, 239, 150, 348, -211, -213, 2,
	-551, -503, 2, -426, -525, -428, 576, 577, 569, 489,
	67, -308, 327, 561, -440, 126, 526, 342, -524, -429,
	-442, 153, 358, 429, -363, 8, 9, 5, 6, 7,
	-263, -430, -436, 517, 167, 332, -301, 589, 10, 585,
	-548, -213, -441, 37, 205, 65, -507, -300, -264, -479,
	240, -299, -283, -545, -546, 4, -518, -519, -508, -482,
	-490, -486, -487, -493, -254, -521, 77, 111, 112, 110,
	115, 114, 281, 280, 116, 113, 451, 534, 66, 36,
	213, 214, 245, 333, 215, 75, -547, 141, -520, 237,
	238, 466, 51, 394, 177, 125, 124, 335, 56, 54,
	542, -491, 122, 504, 505, 506, 507, 190, 191, 58,
	164, 165, 355, 378, 483, 514, 516, 203, 267, 43,
	106, 187, 235, 217, 244, 246, 250, 268, 271, 311,
	324, 329, 352, 354, 424, 458, -620, 543, 478, 69,
	70, -553, 396, -554, -277, -553, 588, 588, 590, 588,
	-334, -336, -337, 2, 28, 138, 585, 2, -457, 2,
	-458, -462, -213, 261, -461, 585, -459, 583, -284, 343,
	-549, 430, -545, -546, -263, -283, -300, 4, -518, -520,
	587, -338, 585, 120, 492, 78, 229, 163, -393, 585,
	-254, 28, 342, 508, 590, -335, 385, -438, 585, 342,
	186, 345, 60, 292, 2, 2, 2, 2, 2, 213,
	-254, 492, 119, 2, 259, 2, 2, 2, 2, 2,
	2, 2, -356, 213, 2, -284, 545, -356, 213, 2,
	-356, 213, 2, -399, 2, 87, -268, 213, 2, -254,
	-292, 213, 2, -287, -289, -296, 213, 2, -294, -254,
	-516, 213, 2, -515, -510, 10, -509, 5, 4, -518,
	-522, -519, -521, 77, -426, 2, -129, 2, 60, -254,
	545, 2, 2, 454, 2, 585, -140, 71, 512, 43,
	449, -413, 2, -414, -250, -251, -252, -469, -253, 247,
	384, 393, 564, 130, 327, 560, -503, -598, 186, 568,
	508, -503, -364, 587, 2, 2, 2, 2, 2, 2,
	-462, 213, -284, 2, -281, -506, 4, -518, -522, -519,
	-523, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 126, 130, 134, 138,
	139, 143, 146, 150, 167, 169, 182, 185, 186, 201,
	204, 207, 220, 234, 239, 241, 261, 265, 272, 280,
	281, 327, 332, 338, 342, 343, 347, 348, 367, 383,
	399, 420, 444, 451, 469, 486, 492, 502, 508, 510,
	517, 525, 526, 534, 536, 544, 549, 551, 552, 553,
	554, -524, 2, -462, 213, 2, -286, 213, -462, -289,
	2, -268, 2, -280, -506, 2, -305, 213, -284, -285,
	-289, -287, 2, 2, 2, 2, 2, -294, 2, -515,
	213, 2, 545, 241, 508, 590, -354, -297, -298, -502,
	8, -347, -254, 587, -426, 2, -129, -113, 2, 182,
	-426, 213, 2, -129, 213, 2, -426, 213, 2, -129,
	213, 2, -592, 2, -515, 213, -254, 2, 292, 2,
	2, 515, 2, 98, 492, 119, 2, 413, -605, 432,
	519, 2, 2, 2, 2, 2, 2, 2, 492, -273,
	2, -254, 182, 476, -294, 213, -295, 2, 445, -615,
	396, -515, 213, 2, 545, -287, 213, 2, -287, 229,
	243, -268, 213, 2, 497, 495, 497, 495, 186, 2,
	241, 2, 241, 2, -463, 2, -464, -458, -465, 583,
	343, -473, 2, -472, -509, 541, -102, 585, -102, 585,
	449, 585, -515, -284, -284, -426, 2, -129, -113, 2,
	-426, 2, -129, 2, -126, -515, -125, 585, 186, -426,
	2, -129, -113, 2, -426, 2, -129, 2, -206, 182,
	2, 120, 492, -181, 2, 182, 536, 2, 8, 2,
	220, -515, 440, 392, 174, 2, 454, 2, 455, 74,
	-400, 560, 74, 186, 2, 186, 2, -383, 2, 554,
	186, 2, 2, -575, 2, 342, 186, 2, 186, 2,
	186, 2, 186, 2, 186, 2, -180, 450, 513, 491,
	389, 249, 2, -129, 551, -113, 249, 248, -426, 551,
	2, -596, 182, 438, -426, 2, 511, 258, 158, 186,
	-383, 2, 186, 2, 186, 2, 5, 2, 390, 474,
	2, 247, 384, 474, 2, -284, -608, 28, 2, 492,
	545, 445, 2, 2, 88, 89, 186, 2, 186, 2,
	200, 186, 2, 186, 492, 560, 2, -375, -462, -412,
	-413, -412, 508, -341, -343, -181, 454, 2, -218, -373,
	-220, 182, -403, -404, -221, 272, 169, 338, -222, -382,
	28, 138, -382, -382, 60, 586, 586, 11, 12, 76,
	41, 576, 577, 578, 579, 180, 580, 581, 574, 575,
	573, 566, 567, 571, 253, 254, 95, 570, 568, 86,
	286, 431, 170, 171, 172, 173, 410, 227, 34, 228,
	14, 15, 16, -308, 33, 347, 271, 561, 217, 458,
	569, 17, 18, 19, 244, 246, 329, 50, 220, -262,
	358, -307, 489, 67, -426, -426, -426, -426, -426, -426,
	-426, -426, 354, 585, -369, -421, 583, -213, 585, 585,
	585, 585, -502, -213, -426, -440, 586, -361, 585, -213,
	-440, -435, 585, 429, 583, 585, -443, -426, 5, 5,
	5, 585, 587, -556, 555, 182, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 380, -484, 585, -483, 585, -483, -483, 546, -481,
	585, 563, 556, 585, -481, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 546, 590,
	-553, -338, 585, -365, -467, -426, 578, -365, -365, 342,
	-358, -426, 106, -386, 250, 311, 187, 268, 424, 235,
	-423, 589, -423, -451, 563, -213, -459, -283, -213, -461,
	585, -457, -451, -103, -502, -86, -99, -108, -129, -142,
	-185, -186, 578, -284, 585, 186, 585, 587, -506, 186,
	-347, -268, -284, -299, -300, -305, 2, 137, -358, -571,
	520, 439, 445, -347, -257, 38, -437, -476, -477, -527,
	589, -526, -479, -489, -485, -488, 370, 374, -508, 54,
	542, -491, 240, 4, -518, -520, 237, 238, 466, 51,
	394, 177, 125, 124, 335, 56, 504, 505, 506, 507,
	190, 191, 58, 543, 478, 69, 70, -571, 520, 439,
	445, -347, 182, -513, 2, -512, -511, 116, 451, -509,
	5, 2, 153, 2, 2, 2, -254, -233, 590, 64,
	418, 153, -356, 213, -233, 153, -233, 153, -306, 213,
	-305, -233, 153, -233, 590, 153, -233, 590, 153, 587,
	590, 153, -513, 2, -399, -505, -358, 38, -413, 2,
	126, -511, -618, 590, 270, -311, 285, 326, 209, 343,
	558, 336, 130, -514, 5, 4, -436, -448, 126, 278,
	240, -496, -498, 8, -497, 9, -499, 576, 577, -504,
	-503, 109, 587, -506, -230, 411, 452, 357, -229, 24,
	29, 142, 231, 314, 539, 159, -324, 232, -321, 361,
	153, 470, 529, -585, -586, 436, 499, 500, 90, 336,
	452, 357, 411, 153, -379, -381, 38, 118, 314, 356,
	61, 224, 290, 291, 472, 548, 153, 452, 357, 411,
	357, 24, 142, -245, -242, 452, -586, 99, 411, 484,
	383, -586, -232, 470, 529, -585, -586, 436, 411, -231,
	-326, -321, 361, 153, 589, 24, 142, 411, 452, 357,
	-601, -602, 29, 411, 357, -579, -550, 554, 153, -462,
	213, -593, -125, 262, 5, 10, -515, -125, -354, 590,
	590, -506, 578, 438, 437, 153, 153, 153, 153, 182,
	327, 2, 2, 2, 2, 2, 188, -588, -606, 2,
	2, -284, 213, -340, 342, -574, -355, 492, -284, 182,
	327, 43, -286, 213, 2, -289, 545, -579, 327, -288,
	213, -284, 38, 585, 327, 2, -399, 2, 229, -550,
	327, -463, -302, -284, -458, -302, 452, -277, 38, -423,
	-284, 586, 590, -473, -473, -515, -194, 554, 186, 102,
	585, 585, -206, -470, 590, -469, 220, -516, -126, -515,
	414, -515, -574, -268, 2, -284, 2, 492, 251, -515,
	-194, 220, -515, -515, -515, -505, 28, 455, 2, -180,
	450, 513, 89, 455, 2, -284, 492, 120, 229, 80,
	-254, -577, 182, -572, 425, 439, 520, -571, -284, 120,
	-284, 120, -284, 120, -284, -284, 2, 2, 2, 2,
	2, 85, 2, -129, -426, 2, 85, 2, 46, -596,
	182, 2, 511, 2, 511, 2, -254, -254, -254, 473,
	270, -284, 493, -609, 2, 186, 182, 2, 492, 229,
	492, 229, 120, 186, 74, 120, 28, 492, 435, -233,
	590, -258, -218, -373, -505, -374, -373, -219, -218, -221,
	182, 393, 530, 314, 456, 255, -404, -403, 28, -426,
	-408, 176, 313, -426, -406, -428, 576, 577, -497, -499,
	-357, 336, -212, -212, -212, -344, -453, -426, 383, 229,
	-478, -476, -476, -282, -506, 504, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, 271, 217, 458, 50, 220, -426, 508, -426,
	-426, -426, -426, 308, 327, 332, 517, 167, 527, 138,
	336, -621, 486, 40, -433, -213, -362, 585, -447, 35,
	469, 28, -440, 585, 2, -421, -426, -422, -309, -307,
	-254, 576, 577, 578, 579, 580, 581, 566, 567, 568,
	14, 15, 16, 571, 575, 573, 574, 180, 95, 570,
	286, 431, 86, 170, 171, 172, 173, 253, 254, 17,
	18, 19, 34, 569, -359, -358, -358, 586, 544, 28,
	138, 578, 2, 586, 590, 38, 586, -426, -359, -439,
	-435, -358, -446, -445, 551, -394, -395, 559, 295, 123,
	211, 293, -396, 443, -500, 8, -506, 578, -557, 175,
	204, 585, 586, 2, 586, 2, 586, -426, 2, 586,
	-426, 2, 586, -426, 2, 586, -426, 2, 586, 2,
	-426, -426, -426, -426, -426, -426, -426, -358, 8, -500,
	-500, 504, 504, -500, -500, -500, -492, 370, 371, 372,
	373, 273, 274, 275, 276, 374, 375, 376, 377, 300,
	301, 302, 303, 296, 297, 298, 299, 304, 305, 306,
	307, 195, 196, 197, 198, 191, 192, 193, 194, -492,
	-388, 2, -494, -358, 4, 559, 295, 123, 211, 293,
	443, 5, -388, 2, -389, 2, -426, -358, -390, -427,
	-428, 576, 577, 569, -308, -440, -391, 2, -426, -359,
	-426, 57, 265, 510, -392, -426, 186, -358, -358, 2,
	-358, 2, -554, 38, -358, -350, 590, 186, 38, 4,
	-350, -350, 585, 586, 590, -387, 208, 289, 284, 243,
	-387, -457, -386, 250, -384, 352, -384, -384, -451, -269,
	583, 591, -506, -451, -450, -449, 38, -277, 349, -451,
	-451, 587, 586, -450, 584, -569, 585, 588, 588, 588,
	588, 588, -284, 585, -358, -506, 587, 475, 2, 586,
	244, 244, 244, 244, 430, 586, 508, -573, -292, -296,
	2, 554, -101, 344, 586, 590, -349, 37, 583, 587,
	-500, 2, 2, -495, 546, 585, 585, -395, 585, 186,
	-573, -296, 2, -348, 590, 508, -254, 2, -284, -356,
	-233, 153, -356, -356, -233, 590, 153, -268, -287, -292,
	-294, -296, -254, -515, -516, -233, -288, -598, 586, 512,
	-414, -310, 393, 468, 412, 447, 488, 8, 9, 8,
	9, 590, -506, 590, -599, 93, 508, 78, 439, -247,
	279, 508, -417, 213, 78, -528, -271, 93, -529, -254,
	72, 526, 383, 185, 151, -599, 93, 383, -599, 93,
	2, 231, 93, 452, 473, 28, 60, -462, 41, 41,
	28, -597, 325, 266, 550, 186, 560, 492, 229, 439,
	508, 508, -462, -381, -476, 118, 290, 291, 60, -501,
	-496, 576, 577, -501, 60, -501, -501, -501, 554, -286,
	-462, 439, 508, 508, 508, 402, 402, -242, 508, 508,
	-619, 568, 402, 590, 41, 41, 28, -597, 325, 266,
	186, 508, -305, -269, 540, 42, 540, 42, 540, 508,
	42, 439, 508, 590, 42, 508, 508, -580, -259, 105,
	320, 283, 321, 97, 317, 96, 316, 103, 318, 104,
	319, 547, 330, 63, 315, 294, 322, -260, -261, 363,
	538, -515, 452, 357, 411, 153, 220, -470, 220, -470,
	-297, -254, 587, -129, -426, -426, -129, -426, -129, 46,
	153, 2, -615, 259, 585, -314, 327, 186, -347, -471,
	241, 590, -355, -571, 153, -512, -380, -379, 327, -288,
	213, 2, 153, -338, 327, 147, 585, 391, 2, 153,
	-270, 213, -255, -254, -399, -236, 496, 153, -377, 536,
	-409, -129, 585, 126, 38, -409, -366, -367, -468, -368,
	-271, 585, -277, -423, -102, -472, 586, 586, 586, -193,
	346, -192, -254, 5, -206, 536, -313, -418, -417, -532,
	-533, -528, 271, 229, 526, 243, 168, -339, -272, -271,
	119, -200, 554, -125, -126, 586, -470, 220, 476, -194,
	-194, -470, -470, -284, 182, -515, -194, -194, -194, 2,
	2, 2, 2, -383, -284, -268, -305, -284, 587, -347,
	-347, -296, -292, -383, -268, -383, -268, -383, -268, -129,
	-426, 2, 449, 182, 182, 587, -383, 391, 120, 492,
	361, 229, -284, -305, -284, -305, -268, 120, -268, 121,
	-284, -462, -374, -219, 343, 255, 456, -406, -407, -428,
	429, 430, -407, 429, 430, 8, 9, 8, 9, -223,
	460, 331, -356, 590, -227, 39, 134, 255, -284, 560,
	149, -426, -426, 508, -621, 486, -433, 149, -426, 308,
	332, 517, 167, 527, 138, 336, 186, 585, -427, -427,
	586, -360, -426, -426, 584, 593, 586, 587, 586, -343,
	590, -341, -426, -358, -358, 586, 587, -358, -347, 584,
	584, 590, 586, -444, -445, 143, -426, 508, 508, 508,
	508, 585, 586, 587, -562, 353, 585, 585, -426, 586,
	586, 586, 586, 38, 590, 590, 590, 586, 590, 590,
	590, 586, 586, 586, 590, 586, 560, 560, 586, 586,
	586, 586, 590, 586, 590, 586, 186, 586, 586, -397,
	367, 586, 11, 12, 576, 577, 578, 579, 180, 580,
	581, 574, 575, 573, 566, 567, 568, 86, 286, 431,
	14, 15, 16, -308, 244, 220, -427, -427, -427, -427,
	586, -431, -432, 186, 182, 38, -392, -392, -392, 586,
	186, -358, 586, 586, 585, -555, 288, 327, 586, -420,
	-419, 552, -467, -351, 2, -457, -279, -506, -420, -420,
	-358, -426, 250, 250, -385, 536, 342, -387, -457, -450,
	-502, -425, -424, 184, 39, 134, 323, 216, -450, -277,
	-338, -450, -450, -506, -451, -451, -449, 586, -570, -502,
	586, -352, -460, -549, -343, 587, -506, -203, -550, -182,
	5, 332, -182, -182, -182, -347, 508, 508, 25, 368,
	-476, 583, 584, 8, -506, 585, -500, -500, -500, -347,
	186, 186, 186, -512, -512, 2, -233, -356, -233, -233,
	-305, -306, -233, -233, -233, -378, 554, -503, -413, 524,
	83, 393, 504, -503, -229, 411, -271, -271, -284, -293,
	-254, 199, 403, -512, 327, -417, 213, -235, 327, -476,
	-278, -254, 585, -401, 556, 255, 255, 536, -271, -278,
	255, 213, -271, 213, -278, 2, -278, -581, 393, 337,
	-426, 60, -322, 277, 391, 328, -230, 411, 452, 357,
	-129, -129, -129, -129, -129, 585, -598, 536, 137, -284,
	-305, -284, -293, -512, -288, 452, 357, 411, 324, -299,
	-501, -501, -379, 452, 357, 411, -293, -512, -286, -512,
	-241, 213, -254, -241, 213, 439, -268, 402, 560, 45,
	-619, -231, -129, -129, -129, -129, -129, 585, -269, -232,
	411, 5, 213, -271, 5, -271, 213, 5, -254, -271,
	-293, -512, -602, 24, 142, -271, -293, -512, -259, -515,
	332, 532, -579, 439, 508, 508, -462, -125, -197, 554,
	-125, -191, 225, 578, -576, -254, 545, -254, -312, -315,
	-313, -271, -209, -210, 556, 554, 153, -303, -284, 583,
	-194, -515, -284, -471, -294, -295, 153, -338, 327, -515,
	38, 153, 585, 2, 2, -287, 342, 327, -270, 213,
	-237, 144, -619, -268, -420, -351, -376, -411, 420, 342,
	-339, 541, -277, -376, -353, 590, 186, 568, 587, -339,
	-466, 578, -102, -102, -194, 590, 585, 568, 568, 585,
	-515, -515, 586, 590, -235, -284, -270, 229, 229, -276,
	-255, 586, 590, 587, 585, -202, 346, -201, 145, 257,
	242, 462, 463, 464, 465, 136, 461, -470, -200, -126,
	186, 186, -61, 554, 492, -194, 589, -254, -383, -383,
	-383, 449, 449, -254, -280, -268, -284, -281, -305, 182,
	182, -268, 530, -407, 343, 282, -453, -228, 562, -284,
	589, -426, -426, 149, 149, -426, -427, -427, -426, 149,
	186, 585, -426, -437, 33, 33, 586, 590, -422, -426,
	-307, 586, 544, -343, -343, 586, 578, -506, 589, 586,
	-435, 146, -426, 502, 295, 211, 293, -396, 293, -396,
	-396, -500, 5, -506, 578, -563, -274, 585, -254, 552,
	-342, 348, 586, -478, -476, -426, -426, -426, -426, -426,
	-500, -481, -481, -496, -496, -426, -431, -426, -478, -476,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	138, 327, 336, -427, -432, -431, -426, -426, -476, 586,
	586, 586, -358, -101, 585, 288, -370, 204, -426, -470,
	590, -370, -370, 586, -457, -457, 585, -426, 250, 584,
	590, 592, 568, -338, 587, -449, -450, 584, 586, 590,
	586, 590, -410, 38, 586, -506, -420, -205, -204, 135,
	53, 107, 133, 332, -347, -347, 345, 5, 8, 583,
	584, 587, -500, 586, 586, 586, -347, -347, -347, -233,
	-233, 119, 314, -426, 508, 508, 60, 220, 153, 327,
	538, -534, -529, 151, -426, 585, 229, 585, 585, 2,
	-225, -226, 142, 452, 24, -600, 2, 536, 153, -233,
	153, -233, 558, -322, 585, 585, 508, 439, -247, 508,
	554, -358, -426, -195, 126, -505, -586, 589, -586, 589,
	439, 508, 508, 439, 508, 508, 327, 153, 554, 166,
	166, 560, -241, 554, -358, 508, -480, 48, 26, 327,
	-287, -233, 153, 508, 508, 520, 452, -515, 332, -293,
	-512, -288, 452, 357, 411, -470, -199, 346, -198, 145,
	422, 136, 257, 222, -470, -197, 186, 241, 554, -288,
	2, 586, 586, 590, -535, 38, 340, 340, 585, -284,
	-82, 554, -469, -502, -582, 554, 43, -286, 38, 153,
	-579, -129, -288, -474, -475, 5, 38, -284, 153, 342,
	327, -238, 264, -619, -510, -550, -343, -376, -365, 328,
	91, 586, -420, -367, -351, -426, 2, 586, -192, -193,
	-515, -515, -515, -194, -206, -206, -418, -316, 585, -270,
	-255, 585, -206, -272, 2, -516, 590, 585, 568, 568,
	568, -200, -470, -125, -129, 346, -284, 578, -383, -328,
	-327, 361, 336, -328, 429, 429, 343, 176, 260, -227,
	-269, -426, -426, 149, 33, 33, -426, -426, -437, 586,
	-426, -426, -358, 584, 5, -426, 586, 586, 8, -426,
	586, 587, -564, -254, -426, 586, 60, 586, 586, 590,
	590, 586, 586, 586, 586, 586, 586, 586, -432, 186,
	138, 336, 585, 586, 586, -101, -434, 207, 60, -457,
	-434, -434, -385, -347, -457, -424, -269, 583, -506, -502,
	-460, 585, 587, -204, 568, -515, -515, 554, 584, 2,
	583, -506, 586, 119, -271, -271, 492, 429, -241, 383,
	-417, 153, -536, 93, -538, 76, 168, 102, 327, 332,
	526, 383, 72, 126, 399, -611, 38, 565, 586, -345,
	-454, -549, 585, -254, -345, -347, 327, 481, 126, 327,
	126, 549, 119, 2, 520, 79, -271, -278, -347, -347,
	-284, -293, -512, 160, 586, 590, 568, 2, 578, 578,
	-293, -512, -288, -293, -512, -286, 153, -241, 359, 166,
	160, 586, -269, 5, 5, 153, -266, 76, -271, 5,
	-271, -287, 119, 439, 508, 508, -197, 590, 585, 568,
	568, -197, -516, -125, 2, -338, -329, 231, -271, -533,
	-530, -531, 383, -537, -539, 168, 383, -129, 2, -208,
	-207, -254, 5, 585, -314, 346, 584, -584, 346, -583,
	117, 136, -512, -380, -129, -288, -338, 586, 590, 147,
	-402, 536, -269, -284, 153, -239, 263, -619, -510, -236,
	-405, -403, 139, 585, 342, -129, -343, 568, 586, 586,
	119, 119, 223, 152, -345, 585, 585, -347, 119, 586,
	-201, -202, -515, -125, -515, -200, -470, -62, -63, 229,
	93, 366, -281, 492, 229, 585, 585, -227, -426, -426,
	-426, 586, -343, -506, 578, -558, 361, 586, -453, -426,
	-426, -427, 186, 585, -437, 586, -559, 553, -426, -371,
	-372, -426, 428, 108, 205, -559, -559, 586, -502, 2,
	-515, 2, 583, 2, 220, 38, 402, -417, -278, -282,
	-275, -254, 168, 213, 332, 549, -401, 255, 585, -427,
	-284, 585, 2, 30, -612, 130, 234, 586, 590, -455,
	-265, -254, -426, -455, 586, 586, 332, 332, 549, -426,
	-476, 585, -233, -233, 586, 586, -426, 508, -505, 100,
	-503, 2, -586, -241, -268, -426, 508, 5, -233, -282,
	-233, -233, -266, 520, -293, -512, -288, -198, -199, -515,
	-125, -197, 38, -319, 233, 2, -535, 255, -275, 255,
	-610, 554, 586, 590, 568, 568, -312, -209, -83, -84,
	509, -469, 590, 585, 568, -338, 38, 5, 585, 585,
	-254, 342, 585, -269, -249, 92, -619, -510, -237, -376,
	328, -347, 93, -405, -433, -194, 585, 585, -317, 81,
	94, 127, 212, 189, 230, 473, 479, 28, -317, 586,
	-345, -345, 586, 585, -194, 586, 590, 28, 585, 28,
	585, -284, -305, -358, -358, 586, -343, 60, 590, 586,
	586, -427, -437, 586, -560, -561, -274, 590, 585, 585,
	453, 584, 2, -241, 383, -254, -538, -275, 327, 536,
	-426, -256, 585, -426, 38, 234, 131, 218, -416, -613,
	101, 482, 221, -454, -227, 586, -415, 536, 399, -266,
	-345, 585, 585, 585, 568, 186, 585, -480, -233, -287,
	586, -591, 397, -129, -323, -324, 220, 585, -318, 342,
	119, 314, -207, -503, -503, 586, 38, -84, 9, -583,
	-584, -426, 38, -129, -474, -345, -284, -345, 342, -243,
	-242, 272, -510, -238, 586, -278, -376, -516, -516, -415,
	586, 586, -516, -63, -347, -347, 586, 586, -565, 391,
	430, 206, -358, -344, 586, 590, 38, -372, 2, 2,
	2, 402, 153, 208, 586, -540, 287, -254, 586, 131,
	218, -319, 585, -228, -455, -319, 208, -284, -587, 536,
	586, -331, -330, -327, -333, -332, -327, -358, -503, 100,
	359, -358, -266, -594, 187, -593, 5, 10, -209, 359,
	-346, -456, -271, 82, 119, -329, -129, 586, -129, 586,
	586, -402, 586, -284, -240, -517, 402, 404, -619, -239,
	-420, 586, 586, -416, -415, -325, -321, 586, 586, 586,
	586, -566, -567, 50, 523, 109, -426, -566, -566, -561,
	-563, 168, 554, -541, -544, -543, 342, 459, 187, 360,
	586, 481, 548, -325, -347, 554, -338, -426, -415, 586,
	590, 541, 586, 590, 541, 586, 186, 586, -233, -196,
	554, 46, -318, -284, 586, 590, 382, 132, 142, -319,
	-610, -415, 585, -416, 585, -246, -245, -619, -496, -249,
	139, -194, -194, -319, -416, -210, 554, -194, -568, 151,
	-567, 379, 181, 429, 379, 181, -568, -568, -275, 55,
	-543, 342, -544, 342, 530, 132, -612, 586, 55, -540,
	-319, -330, 220, -332, 186, 359, 437, -593, 30, -248,
	-247, 585, -456, 430, 430, 2, -323, -318, -416, -345,
	-319, -345, -244, -347, -243, 328, 530, -325, -319, -420,
	109, 204, 503, 314, 33, 568, -542, 314, 418, 64,
	452, -542, -420, 568, -541, 585, 585, 346, -347, 2,
	-209, -319, 586, -325, 586, -240, 452, -210, -325, 429,
	350, -567, -426, 23, 332, 126, -426, -612, -358, -358,
	-193, 585, 586, -318, -325, -415, -210, -416, -246, -366,
	-420, -210, 586, 586, -193, -234, 64, 418, -248, -210,
	-416, -420, -319, -420, -420, -320, -321, 508, 586, -420,
	-319, -325, 585, -325, -210, -358, -210, -420, 586, -420,
	-320,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 542, 543, 545, 546, 547, 549,
	550, 552, 554, 556, 557, 558, 560, 561, 563, 564,
	565, 566, 567, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	636, 638, 0, 1336, 1338, 1340, 1342, 0, 781, 0,
	36, 37, 39, 0, -2, 327, 329, 331, 0, 358,
	360, 361, 363, 365, 366, 367, 369, -2, 0, 475,
	476, 478, 480, -2, 0, 977, 979, 0, 625, 627,
	0, 982, 984, 0, 0, 647, 648, 0, 1443, -2,
	641, 643, 645, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 727, 729, 731, 733, 735, 737, 738, 740,
	742, 744, 745, 747, 748, 750, 752, 754, 756, 758,
	760, 762, 764, 766, 768, 770, 772, 774, -2, 777,
	778, -2, -2, 0, -2, -2, -2, 1354, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 419, 421, 423,
	425, 427, 430, 432, 434, 1501, 482, 484, 486, 488,
	490, 492, 494, 0, -2, 1515, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 103,
	104, 105, 106, 107, 108, 109, 110, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 101, 71, 0, 0, 1474, 1476, 1478, 1480,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 544, 548, 551, 553, 555,
	559, 562, 568, 570, 572, 527, 528, 531, 2206, 2223,
	2224, 2225, 2228, 2229, 2230, 2231, 2232, 2233, 2676, 2758,
	2759, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 529, 530, 1154, 0, 596, 594, 2191, 597,
	2477, 599, 601, 469, 470, 471, 472, 473, 474, 0,
	618, 609, 1513, 619, 621, 622, 623, 624, 591, 589,
	0, 618, 2259, 616, 1334, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 398, 1203, 1204,
	1205, 1319, 1320, 2521, 1361, 0, 227, 637, -2, -2,
	-2, 2641, -2, 669, -2, 676, 2645, 2524, 681, 0,
	683, -2, 686, 1337, 1339, 1341, 779, 780, 2209, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 237, -2, -2, -2, -2, 0, 0,
	2569, 2311, 2159, 2225, 2162, 2157, 328, 330, 332, 333,
	0, 0, 0, 0, 0, 0, 359, 362, 364, 368,
	-2, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1038, 1030, 1031, 1261, 0, 0,
	0, -2, 477, 479, 532, 533, 0, 1502, 1502, 540,
	541, -2, 0, 0, 0, 0, 298, 285, 978, 980,
	981, 0, 0, 0, 0, 626, 628, 0, 0, 266,
	983, 985, 986, 0, 0, 0, 0, 0, 300, 0,
	0, 642, 644, 646, 711, 713, 715, 717, 719, 721,
	723, 725, 728, 730, 732, 734, 736, 739, 741, 743,
	746, 749, 751, 753, 755, 757, 759, 761, 763, 765,
	767, 769, 771, 773, 775, 776, 787, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 880, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	958, 0, 0, 790, 792, 793, 794, 0, 853, 878,
	879, 888, 0, 1194, 1503, 1363, 1344, 1358, 1363, 1346,
	1347, 1348, 1349, 1350, 1355, 1357, 1351, 1352, 1353, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 420, 422,
	424, 426, 428, 431, 433, 435, -2, 1472, 1473, 483,
	485, 487, 489, 491, 493, 495, 629, 0, 631, 0,
	791, -2, 0, 1507, 1507, 1507, 0, 0, 1473, 1471,
	0, 634, 635, 690, 691, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 1863, 0, 692, -2, 1896,
	1898, 2616, 2451, 2641, 2032, 1900, 1901, 1902, 1903, 1904,
	0, 1906, 1907, 1908, 1909, 1910, 1911, 0, 1913, 0,
	1918, 1919, 1920, 0, 2623, 2136, 2219, -2, 0, 0,
	2629, 2215, 0, 1999, 1936, -2, -2, 2242, 2221, 1707,
	1708, 1709, 1710, 1711, -2, -2, 2659, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 0, 2604,
	2624, 2625, 2630, 2632, 2626, 2613, 1961, 2324, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1734, 1743, -2, -2, -2, -2, -2, -2, -2,
	2617, 2618, 2635, 2638, 2644, 2649, 2650, 2622, 2631, 2658,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 1735, -2, -2, -2,
	-2, 1490, 2490, 1493, 1154, 1491, 1475, 1477, 0, 1479,
	0, 0, 0, 1484, 1510, 1508, 0, 1559, 1488, 1489,
	1577, 1577, 1601, 0, 1582, 0, 1601, 1502, 1628, 0,
	1588, 2513, 1937, 1938, 0, 2225, 2220, -2, -2, 2656,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 0,
	598, 600, 0, 0, 0, 617, 1512, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 403, 404, 405, 2624,
	0, 0, 0, 410, 0, 412, 413, 414, 415, 416,
	417, 418, 196, 2624, 500, 525, 0, 196, 2624, 503,
	196, 2624, 506, 0, 509, 1259, 196, 2624, 512, 2187,
	196, 2624, 515, 517, 2195, 196, 2624, 521, 2202, 2200,
	522, 2624, 524, 303, 301, 302, 2238, 2239, 2246, 2247,
	2248, 2249, 2657, 2659, 1330, 1331, 1332, 1333, 0, 1360,
	1260, 639, 640, 0, 664, 0, 668, 2612, -2, 0,
	2533, -2, 672, 1364, 1368, 1369, 1370, 1371, 1372, 0,
	0, 0, 0, 1377, 0, 0, 678, 0, 0, 665,
	666, 684, 687, 0, 782, 783, 784, 785, 786, 70,
	0, 2624, 1628, 72, 0, 2181, 2250, 2251, 2252, 2253,
	2254, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 76, 0, 2624, 81, 0, 2624, 0, -2,
	92, 0, 102, 0, 2184, 111, 0, 2624, 0, 2156,
	-2, 0, 208, 286, 287, 288, 289, 0, 1005, -2,
	2624, 1202, 0, 0, 0, 0, 968, 2153, 2158, 969,
	2177, 970, 2163, 0, 334, 335, 336, 337, 338, 0,
	339, 2624, 341, 342, 0, 344, 345, 2624, 347, 348,
	0, 350, 0, 249, 250, 2624, 372, 374, 0, 376,
	377, 0, 379, 0, 0, 0, 383, -2, 399, 0,
	396, 386, 387, 389, 390, 391, 392, 393, 0, 439,
	437, 2192, 0, 0, -2, 2624, 0, 1002, 0, 0,
	1239, -2, 2624, 1199, 0, 1246, 2624, 1242, 0, -2,
	0, 1500, 2624, 1381, 1034, 1035, 1036, 1037, 1640, 466,
	0, 1408, 0, 1410, 0, 1429, 1634, 1577, 0, 0,
	1639, 0, -2, 585, 2208, -2, 535, 0, 536, 0,
	-2, 0, 315, 0, 0, 987, 988, 989, 990, 991,
	994, 995, 996, 997, 1614, 267, 269, 0, 0, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 0, 0,
	649, 0, 0, 788, 789, 0, 0, 799, 800, 801,
	0, 315, 2525, 2486, 2345, 808, 0, 811, 814, -2,
	0, 0, 0, 0, 818, 0, 823, 824, 825, 0,
	0, 829, 831, 976, 833, 0, 0, 835, 0, 839,
	0, 842, 0, 844, 0, 846, -2, -2, -2, 854,
	855, -2, 860, -2, 0, 864, -2, 0, 867, 0,
	870, -2, 0, 880, 876, 877, 0, 0, 0, 0,
	896, 897, 0, 906, 0, 909, 910, 911, 0, 913,
	914, 0, 916, 917, 918, 919, 0, 0, 922, 923,
	-2, -2, 927, 929, 0, -2, 0, 945, 0, 949,
	0, 0, 957, 0, 0, 795, 796, 196, 1632, 1343,
	-2, 1345, 0, -2, 0, 630, 0, 633, 1532, 1458,
	1455, 0, 1529, 1530, 1459, 0, 0, 0, 1466, 0,
	1505, 1506, 0, 0, 0, 1445, 1446, 0, 0, 0,
	0, 2038, 2039, 2040, 2041, 2054, 2042, 2043, 2053, 2051,
	2052, 2044, 2045, 2050, 2064, 2065, 2055, 2056, 2046, 2059,
	2057, 2058, 2060, 2061, 2062, 2063, 0, 0, 2069, 0,
	2047, 2048, 2049, 2077, 0, 0, 2078, 0, 2080, 0,
	2070, 2066, 2067, 2068, 0, 1842, 1844, 2144, 0, 0,
	0, 2076, 2071, 2072, 1780, 1781, 1782, 1783, 1784, 1817,
	1821, 1822, 0, 0, 1897, 2141, 2140, 1899, 0, 0,
	2092, 0, 1912, -2, 0, 2033, 2087, 0, 0, 1921,
	1922, 1923, 0, 0, 2092, 0, 0, 2135, 1933, 1934,
	1772, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 1720, 0, 1722, 0, 1723, 1724, 1731, 1744,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 2116, -2, 0, 0, 0, 0, 1736, 0,
	1492, 0, 0, 1563, 2145, 2149, 2150, 1563, 1563, 0,
	0, 2093, 1625, 1625, 0, 0, 1620, 1620, 1620, 1618,
	1601, 0, 1601, 1611, 0, 1601, 1601, 0, -2, 1582,
	0, 0, 1611, 0, 1595, 573, 575, 577, 579, 580,
	581, 583, 1629, 1630, 0, 0, 0, 0, 2226, 0,
	0, 0, 0, 0, 2211, 0, 355, 0, 0, 0,
	2579, 2524, -2, 603, 620, 1502, 0, 2095, 1655, 1659,
	0, 1661, 1662, 1663, 1664, 1665, 0, 0, 1656, -2,
	1732, 1734, 1755, 2243, 2244, 2245, 1715, 1716, 1717, 1718,
	1719, 1727, 1714, 1714, 1714, 1725, 1754, 1746, 1754, 1750,
	1700, 1701, 1702, 1737, 1738, 1739, 1740, 0, 2579, 2524,
	-2, 611, 0, 0, 1440, 212, 214, 215, 216, 217,
	218, 400, 0, 407, 408, 409, 0, 496, 0, 194,
	195, 0, 196, 2624, 501, 0, 504, 0, 196, 2624,
	2151, 510, 0, 513, 0, 0, 519, 0, 0, 0,
	0, 0, 196, 1442, 0, 0, 0, 0, -2, 674,
	679, 680, 0, 1366, 0, 1373, 701, 702, 703, 1375,
	1376, 0, 1378, 677, 704, 705, 706, 707, 708, 709,
	0, 2165, 2166, 2167, 2168, 2171, 2172, 0, 0, 675,
	694, 682, 0, 688, 112, 1316, 0, 0, 155, 0,
	1316, 1316, 0, 0, 0, 0, 181, 0, 1073, 0,
	0, 0, 0, 127, 140, 151, 124, 125, 0, 0,
	0, 0, 0, 0, 82, 1176, 0, 1179, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 98, 99, 0, 139, 0, 0, 1405,
	0, 134, 114, 0, 0, 127, 141, 153, 0, 185,
	187, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 219, 0, 0, 0, 1200, 0, 1499, 0, 0,
	2624, 0, 1614, 2393, -2, -2, 267, 1614, 967, 0,
	0, 2226, 2161, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 378, 380, 381, 382, 0, 1238, 0, 388,
	429, 1125, 2624, 0, 0, 456, 451, 0, 453, 0,
	0, 0, 1175, 2624, 1173, 2196, 0, 1197, 0, 1154,
	2624, 2194, 0, 0, 0, 1247, 2235, 1256, 1260, 1395,
	0, 468, 0, 1411, 1413, 0, 0, 1635, 0, 1637,
	1577, 1502, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 273, 0, 1613, 0, 0, 1614, 267,
	2501, 315, 315, 1614, 651, 1614, 653, 0, 0, 802,
	803, 0, 315, 315, 315, 809, 810, 812, 813, -2,
	-2, -2, -2, 815, 816, 903, 0, 0, 0, 902,
	828, 832, 0, 961, 2509, 2524, 2579, 974, 903, 2311,
	903, 2311, 903, 2311, 843, 845, 848, 891, 899, 859,
	866, 0, 861, 865, 868, 871, 0, 873, 881, -2,
	0, 883, 0, 885, 0, 887, 903, 904, 907, 912,
	915, 920, 921, 0, 936, 941, 942, 938, 0, 0,
	0, 0, 0, 0, 952, 953, 0, 0, 960, 1193,
	0, 1356, 1532, 1458, 632, 1449, 1531, 1450, 1457, 1460,
	0, 0, 1462, 0, 1464, 0, 1527, 1528, 1535, 1536,
	0, 1546, 1547, 1539, 0, -2, 0, 0, 1542, 1543,
	1468, 0, 1485, 1486, 1487, 1516, 1519, 1275, 0, 2758,
	1776, 1650, 1777, 1778, 2180, 0, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, -2, -2, -2, -2,
	-2, -2, -2, -2, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, -2, -2, -2, 1818, 1819,
	1820, -2, 2079, 2081, 0, 2144, 0, -2, 0, -2,
	-2, -2, -2, 1839, 0, 1841, 1846, 1848, 1850, 0,
	0, 0, 0, 2143, 1860, 2127, 2128, 0, 0, 2035,
	2036, 2037, 1845, 0, 1864, 2142, 2139, 0, 0, 2073,
	0, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 0, 2091, 1515, 1925, 0, 0,
	0, 0, 1932, 1917, 2089, 0, 2088, 0, 0, 0,
	2099, 0, 2134, 2130, 0, 2178, 1771, 1758, 1759, 1760,
	1761, 1762, 1763, 1773, 0, 2175, 2212, 2218, 2009, 0,
	0, 0, 1962, 1963, 1964, 1965, 1966, 0, 1968, 1969,
	0, 1971, 1972, 0, 1974, 1975, 0, 1977, 1978, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 0,
	0, 1981, 0, 2102, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1983, 0, 1985, 2093, 2113, 0, 0,
	1865, 0, 0, 0, 0, 2033, 0, 1988, 2093, 2121,
	0, 0, 0, 0, 0, 2093, 0, 2126, 0, 1995,
	0, 1997, 1494, 0, 0, 1645, 0, 0, 0, 2148,
	1645, 1645, 0, 1558, 0, 0, 1621, 1622, 1623, 1624,
	0, 0, 1625, 0, 1615, 1619, 1616, 1617, 1611, 1574,
	0, 0, 2182, 1611, 1580, 1610, 0, 1154, 1600, 1611,
	1611, 0, -2, 1584, 1601, 0, 0, 574, 576, 578,
	582, 584, 0, 0, 1515, -2, 0, -2, 317, 1153,
	0, 0, 0, 0, 593, 595, 0, 0, 516, 0,
	608, 0, 587, 0, 590, 0, 1646, 1649, 0, 0,
	1660, 1666, 1667, 0, -2, 0, 0, 1756, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 411, 526, 196,
	498, 0, 196, 196, 507, 0, 0, 196, 518, 196,
	2203, 196, 2201, 304, 523, 1441, 230, 0, 667, 0,
	1365, 1374, 0, 698, 0, 700, 0, 2169, 2173, 2170,
	2174, 0, 689, 0, 0, 0, 0, 1315, 0, 1282,
	0, 0, 159, 2624, 0, 198, 0, 0, 1118, 2188,
	0, 1110, 0, 0, 2331, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 1178, 1180, 1187, 1189, 0, 1183,
	2176, 0, 0, 1184, 0, 1186, 1188, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 1404, 1405, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 2155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1234, 1232, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 0,
	0, -2, 0, 0, 0, 0, 0, 240, 0, 306,
	2154, 2164, 0, 992, 993, 340, 343, 346, 349, 236,
	0, 384, 0, 0, 1040, 1015, 0, 0, 438, 315,
	0, 0, 452, 456, 2205, 1000, 1171, 1174, 0, 1154,
	2624, 1211, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 2624, 2183, 2234, 2235, 1397, 1405, 0, 1645, 0,
	1427, 1414, 0, 0, 0, 1427, 1431, 1432, 1434, 1435,
	0, 0, 1636, 1642, 534, 586, 1502, 1502, 315, 313,
	2454, 311, 308, 310, 0, 0, 0, 1041, 1043, 1044,
	1045, 198, 0, 2235, 1110, 2382, 2235, 0, 1417, 1419,
	0, 261, 0, 270, 1614, 268, 273, 0, 0, 0,
	450, 650, 655, 797, 0, 315, 805, 806, 807, 850,
	893, 901, 940, 817, 819, 820, 821, 0, 0, 975,
	971, 972, 973, 834, 903, 837, 903, 840, 903, 863,
	869, 875, 882, 0, 0, 0, 895, 0, 0, 0,
	0, 0, 0, 0, 946, 947, 948, 950, 955, 954,
	959, 1633, 1453, 1454, 1456, 0, 1465, 0, 0, 1541,
	-2, -2, 1540, 1544, 1545, -2, -2, -2, -2, 1461,
	0, 1470, 1467, 0, 1526, 1273, 1274, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1861, 0, -2, 1840,
	1843, 1847, 1849, 1851, 0, 0, 0, 0, 0, 0,
	2082, 0, 2084, 1862, 2137, 2140, 2075, 0, 2031, 0,
	0, 1514, 1515, 1515, 0, 1931, 0, 2090, 0, 2097,
	2098, 0, 1924, 0, 2131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 0, 1967,
	1970, 1973, 1976, 0, 0, 0, 0, 1956, 0, 0,
	0, 1960, 1726, 1712, 0, 1754, 1752, 1753, 1747, 1754,
	1751, 1704, 0, 1703, 0, 1980, 0, 1982, 1984, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1869, 1870, 1890,
	1987, 2119, 2120, 0, 0, 0, 0, 0, 0, 1993,
	0, 2125, 1994, 1996, 1502, 0, 1495, 0, 1560, 1549,
	1644, 0, 2146, 1614, 1562, 1564, 2147, 2185, 1549, 1549,
	0, 2094, 0, 0, 1605, 0, 0, 0, 1607, 1578,
	0, 0, 1572, 0, 1568, 1569, 1570, 1571, 1579, 1154,
	1609, 1581, 1585, 2212, 0, 1611, 0, 1596, 0, 1598,
	1631, 0, 1590, 1593, 0, 0, 2227, 1645, 0, 351,
	356, 357, 352, 353, 354, 602, 0, 0, 0, 0,
	2096, 0, 1651, 0, 1657, 0, 0, 0, 0, 610,
	0, 0, 0, 213, 1439, 406, 497, 196, 502, 505,
	2152, 196, 511, 514, 520, 226, 0, 663, -2, 696,
	697, 699, 0, 695, 156, 1316, 0, 0, 1278, 1280,
	2199, 1284, 1290, 1293, 0, 161, 2624, 172, 0, 1089,
	0, 2186, 0, 0, 0, 0, 0, 0, 1318, 0,
	0, 2624, 196, 2624, 196, 175, 177, 180, 0, 184,
	182, 0, 1077, 0, 0, 1080, 113, 1316, 0, 0,
	116, 120, 128, 129, 132, 0, 0, 0, 138, 0,
	0, 0, 1295, 1299, 1307, 0, 0, 0, 1181, 1182,
	1185, 1191, 83, 0, 0, 0, 1303, 1305, 1311, 93,
	94, 2624, 2197, 96, 2624, 0, 1277, 0, 0, 0,
	0, 186, 118, 122, 130, 131, 133, 0, 1313, 115,
	0, 211, 0, 0, 201, 196, 2624, 0, 203, 0,
	204, 205, 220, 0, 0, 0, 1003, 1004, 1233, 1195,
	1196, 0, 1201, 0, 0, 0, 0, 1614, 232, 0,
	1614, 240, 0, 2160, 0, 371, 0, 0, 0, 0,
	1039, 1136, 0, 1010, 0, 0, 0, 444, 440, 0,
	449, 455, 454, 460, -2, 0, 0, 0, 0, -2,
	0, 0, 1249, 1243, 1244, 0, 0, 0, 0, 2624,
	1399, 1405, 0, 1500, 1515, 467, 1406, 1427, 0, 0,
	0, 1416, 1412, 1409, 1645, 0, 0, 0, 0, 0,
	1638, 1641, 537, 538, 290, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 1046, 1050, 0, 2235, 2235, 0,
	2190, 0, 0, 0, 0, 271, 0, 274, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 273, 263, 1614,
	0, 0, 652, 0, 0, 804, 0, 827, 836, 838,
	841, 884, 886, 903, 930, 931, 1067, 0, 1067, 0,
	0, 951, 1463, 0, 1538, 1469, 1520, 1521, 0, 1275,
	0, 1779, 1824, 0, 0, -2, 0, 0, 1828, 0,
	0, 0, -2, 0, 0, 0, 2083, 2085, 0, 2139,
	2074, 1926, 0, 0, 0, 1930, 1914, 1915, 0, 2034,
	2100, 2129, 2133, 0, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 0, 2179, 2213, 2217, 2007, 2008, 2012, 2193, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1749, 0, 0, 2101, 2112, 2114, 1866, 1867,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	-2, -2, -2, 1884, 1885, 1886, -2, -2, -2, 1891,
	0, 0, 0, 2115, 2117, 2118, 2122, 2123, 0, 1990,
	1991, 1992, 2124, 0, 1502, 1496, 1557, 0, 1643, 1561,
	0, 1557, 1557, 1509, 1603, 0, 0, 1627, 0, 1575,
	0, 1576, 0, 1608, 0, 1583, 1586, 1587, 1597, 0,
	1589, 0, 1592, 0, 1926, -2, 316, 318, 320, 0,
	323, 324, 0, 0, 605, 606, 604, 588, 0, 0,
	1653, 0, 0, 1729, 1733, 1757, 613, 614, 612, 499,
	508, 228, 0, 1612, 0, 0, 0, 0, 0, 0,
	197, 1087, 1117, 0, 0, 0, 1109, 0, 0, 1123,
	163, 164, 0, 0, 0, 0, 173, 0, 0, 170,
	0, 179, 183, 1074, 0, 0, 0, 0, 1283, 0,
	0, 0, 135, 136, 137, 0, 142, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	1390, 0, 1384, 0, 0, 0, 199, 0, 0, 0,
	1272, 222, 0, 0, 0, 0, 0, 1236, 1237, 1296,
	1300, 1308, 0, 0, 0, 240, 238, 0, 241, 0,
	244, 245, 0, 247, 240, 234, 0, 0, 0, 1154,
	385, 1013, 1124, 0, 1126, 0, 1011, 0, 0, 1125,
	436, 0, 443, 0, 457, 0, 0, 1175, 0, 0,
	1198, 1209, 1154, 0, 1248, 1250, 0, 1258, 0, 0,
	0, 1401, 1405, 0, 1394, 1395, 1534, 1407, 1425, -2,
	0, 0, 1515, 1433, 1430, 1436, 1437, 0, 312, 0,
	307, 309, 0, 293, 0, 0, 1042, 1047, 0, 0,
	0, 0, 0, 1418, 1420, 0, 0, 0, 0, 0,
	0, 262, 273, 1614, 299, 0, 798, 822, 894, 932,
	1066, 0, 0, 934, 0, 0, 1537, 1524, 1525, 1522,
	1275, 1826, 1830, 0, 0, 0, 1832, -2, 0, 1854,
	-2, -2, 2086, 2138, 1905, 1515, 1927, 1929, 1916, 2132,
	1774, 0, 2014, 2011, 0, 1998, 0, 1951, 1952, 0,
	0, 1955, 1957, 1958, 1959, 1713, 1706, 1705, 2111, 0,
	0, 0, 0, 1989, 1497, 0, 2003, 0, 0, 1565,
	2003, 2003, 1604, 0, 1606, 1573, 1566, 0, 2213, 1599,
	1591, 0, 0, 321, 0, 325, 326, 0, 1647, 1652,
	0, 1658, 1728, 229, 157, 158, 1287, 1291, 1288, 0,
	160, 0, 1088, 0, 1091, 0, 0, 0, 0, 1098,
	1110, 0, 0, 0, 0, 0, 1111, 0, 1140, 0,
	1263, 1270, 0, -2, 0, 0, 0, 166, 189, 0,
	0, 190, 1317, 168, 0, 0, 196, 196, 0, 0,
	1279, 1281, 1294, 0, 0, 0, 0, 145, 0, 0,
	1297, 1301, 1309, 1304, 1306, 1312, 0, 97, 0, 1391,
	0, 0, 1314, 209, 210, 0, 196, 0, 196, 202,
	196, 1272, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 233, 305, 240, 373, 0, 1061, 0, 1136, 1128,
	1129, 1130, 0, 1135, 1137, 0, 0, 1027, 1012, 0,
	1023, 0, 0, 1040, 1015, 0, 441, 458, 0, 461,
	0, 464, 1001, 1172, 1206, 1154, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 1403, 1405, 0, 1396, 1397,
	1427, 1533, 0, 0, 0, 1415, 1534, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	275, 0, 276, 277, 278, 264, 265, 654, 656, 0,
	0, 662, 1065, 0, 0, 0, 0, 1523, 1834, -2,
	-2, 1855, 0, 2214, 2216, 1515, 0, 2000, 1517, 0,
	0, -2, 0, 0, 0, 1498, 1481, 0, 1556, 1548,
	1550, 1552, 2512, 2306, 2623, 1482, 1483, 1626, 0, 1594,
	322, 607, 0, 1654, 0, 0, 1289, 162, 0, 1092,
	1093, 2189, 1095, 0, 1097, 1099, 1100, 1101, 0, 1104,
	2237, 0, 1108, 0, 1119, 1141, 0, 1150, 0, 1265,
	1275, 1269, 0, 1267, 1152, 0, 165, 167, 191, 188,
	1272, 0, 169, 178, 0, 0, 117, 0, 0, 2300,
	148, 146, 144, 95, 1276, 119, 0, 211, 221, 1271,
	223, 206, 196, 0, 1298, 1302, 1310, 242, 0, 243,
	246, 0, 0, 1076, 0, 1014, 1127, 0, 1138, 1139,
	1017, 0, 1016, 0, 0, 0, 0, 0, 442, 445,
	0, 448, 0, 0, 0, 0, 0, 1251, 1249, 0,
	1257, 0, 0, 0, 1383, 0, 0, 1398, 1399, 465,
	1421, 0, 0, 1427, 1438, 292, 0, 0, 1048, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1049, 1152,
	0, 0, 1116, 0, 297, 272, 0, 658, 0, 660,
	0, 933, 935, 0, 0, 1928, 2018, 0, 0, 1953,
	1954, -2, 0, 1894, 2002, 2004, 0, 0, 0, 0,
	0, 1567, 1648, 1285, 0, 1292, 1090, 1094, 0, 0,
	0, 1158, 0, 0, 1112, 0, 1144, 1145, 1061, 0,
	1146, 1147, 1148, 1264, 1526, 1270, 1061, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 200, 224, 1272,
	239, 257, 0, 1207, 1015, 1075, 0, 0, 1025, 0,
	1028, 0, 1024, 1021, 1022, 1013, 0, 446, 447, 462,
	0, 463, 0, 1210, 0, 0, 1258, 0, 0, 1386,
	1382, 1405, 1400, 1401, 1645, 1424, 1428, 0, 0, 1150,
	1152, 1072, 0, 657, 0, 0, 943, 944, 0, 0,
	0, 0, 2013, 1518, 1895, 0, 0, 1551, 1553, 1554,
	1555, 1286, 0, 0, 1103, 1163, 0, 0, 0, 1142,
	1143, 1072, 0, 1268, 1266, 1121, 0, 1154, 171, 0,
	1152, 0, 1081, 0, 0, 1084, 0, 0, 149, 2300,
	147, 0, 196, 260, 0, 254, 252, 253, 1017, 0,
	0, 1132, 1134, 0, 1029, 1061, 1027, 459, 1208, 1241,
	1152, 0, 1150, 0, 1393, 1405, 1387, 1388, 0, 1403,
	0, 315, 315, 1061, 1150, 1015, 1071, 315, 659, 661,
	2010, 2030, 2019, -2, 2582, 2307, 0, 2030, 2030, 2005,
	2006, 0, 0, 1105, 1159, 1160, 0, 1155, 1156, 1157,
	2236, 1106, 1107, 1140, 0, 0, 1158, 192, 1061, 1078,
	0, 0, 1079, 0, 0, 152, 0, 154, 225, 248,
	0, 0, 1009, 0, 1131, 0, 0, 0, 0, 1076,
	1017, 1150, 0, 1061, 0, 1379, 1392, 0, 1402, 1383,
	0, 294, 295, 1072, 1061, 1645, 0, 296, 2015, 0,
	0, 2021, 2022, 2023, 2024, 2025, 2016, 2017, 1096, 0,
	1161, 0, 1162, 0, 0, 0, 1645, 1149, 0, 1163,
	176, 1082, 0, 1085, 0, 150, 0, 255, 256, 1006,
	1008, 0, 1133, 1018, 0, 1020, 1015, 1026, 1061, 0,
	1072, 0, 1385, 2198, 1386, 1422, 0, 1015, 1072, 1115,
	0, 2027, 2028, 0, 0, 0, 1164, 0, 1167, 1168,
	0, 1165, 1120, 0, 1140, 0, 0, 0, 0, 1019,
	1017, 1072, 1152, 1015, 1150, 1393, 0, 1645, 1015, 2026,
	2029, 2020, 1102, 1166, 1169, 1170, 1151, 1122, 0, 0,
	258, 0, 1064, 1009, 1015, 1150, 1645, 1061, 1380, 1645,
	1113, 1645, 1069, 0, 0, 1060, 1062, 1063, 1007, 1645,
	1061, 1254, 1072, 1423, 1114, 1083, 1068, 0, 259, 1252,
	1072, 1015, 0, 1015, 1645, 0, 1645, 1255, 1069, 1253,
	1086,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 574, 3, 580, 575, 3,
	585, 586, 578, 576, 590, 577, 587, 579, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 3,
	566, 568, 567, 571, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 583, 3, 584, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 591, 573, 592, 569,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 570, 57909, 572,
	57910, 582, 57911, 588, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1364
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1374
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1377
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1378
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1380
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1381
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1382
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1383
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1384
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1402
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1405
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1406
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1409
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1581
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1704
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1713
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1734
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1742
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1765
		{
		}
	case 127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1766
		{
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1770
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1779
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1796
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1815
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1822
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1850
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1869
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1879
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1889
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1898
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1909
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1915
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1946
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2032
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2075
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2078
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2084
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = nil
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = true
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = false
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2351
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2363
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2402
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2638
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = nil
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = nil
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "alter function")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2919
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2928
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2934
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2939
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2944
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2949
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2954
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = nil
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3061
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3241
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3261
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CREATE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3299
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3303
		{
			return unimplemented(sqllex, "create access method")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return unimplemented(sqllex, "create cast")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3306
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3309
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3310
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3312
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3313
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3315
		{
			return unimplemented(sqllex, "create publication")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3316
		{
			return unimplemented(sqllex, "create rule")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplemented(sqllex, "create server")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3324
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3325
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3329
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3333
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3342
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3343
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3347
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3350
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			return unimplemented(sqllex, "drop server")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3515
		{

			sqlVAL.union.val = nil
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "DELETE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3602
		{
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3628
		{
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3828
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3918
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "DELETE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "INSERT")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "DELETE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4007
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4040
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4133
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "GRANT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "RESET")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "RESET")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "USE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4270
		{
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "USE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4477
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return unimplemented(sqllex, "set from current")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4513
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = tree.Low
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = tree.Normal
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = tree.High
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SHOW")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4688
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4691
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.str = "client_encoding"
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.str = "timezone"
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4760
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4823
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = true
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = true
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = false
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5195
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = true
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = false
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = true
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = false
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5333
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5414
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5422
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5443
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5448
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5457
		{
		}
	case 943:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5466
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5489
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5570
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5577
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5584
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5717
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5831
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "RESUME")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5859
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6001
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6017
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{

			sqlVAL.union.val = nil
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.str = ""
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = nil
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6085
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6089
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6115
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6129
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6146
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6241
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6245
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6251
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6267
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6272
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.str = ""
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6515
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{

			sqlVAL.union.val = true
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = false
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6551
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6653
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6664
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6681
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6691
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6771
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6774
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6932
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6941
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6960
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6975
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6977
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6979
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6981
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6984
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6987
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7042
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = true
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{

			sqlVAL.union.val = true
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = false
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7067
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7081
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7093
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7105
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7115
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7125
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = nil
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7235
		{
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7261
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7263
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7265
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7267
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7309
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7327
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7346
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7363
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7380
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = false
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = true
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = false
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = true
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = false
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7444
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.str = ""
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.str = ""
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7517
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7523
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7748
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7754
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7766
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7772
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7786
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7792
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7809
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7810
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7813
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7814
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7825
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7881
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7910
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7946
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7951
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7964
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7969
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7978
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7980
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8000
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8001
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8029
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8044
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8048
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.str = ""
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{

		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8176
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.str = ""
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.str = ""
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.str = ""
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.str = ""
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8231
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8244
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8245
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8274
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8381
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8476
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8491
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8672
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8777
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = true
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = false
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8847
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = nil
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8861
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = true
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = false
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = false
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = true
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8890
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8894
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8936
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8957
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8962
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8988
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9021
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9076
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9117
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9149
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9186
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9238
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9277
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9287
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9363
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9396
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = nil
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = true
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.str = tree.AstFull
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.str = tree.AstRight
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.str = tree.AstInner
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.str = tree.AstHash
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.str = ""
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9630
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = true
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = false
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = true
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = false
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9692
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9700
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9719
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9721
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9729
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9749
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9810
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9811
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = types.Geography
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9860
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9868
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9894
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9902
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = nil
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = types.Int2
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = types.Int
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = types.Float4
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = types.Float
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9953
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = types.Bool
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = types.Float
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9994
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10000
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10022
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = types.String
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = true
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = false
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = types.Date
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10071
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10079
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10093
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10102
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10110
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10127
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = true
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = false
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = false
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = types.Interval
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10151
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = nil
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10280
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10340
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10489
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10676
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10806
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10915
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10965
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10995
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11006
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11007
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11031
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11097
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11236
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11263
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11268
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11278
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11293
		{
			return unimplemented(sqllex, "treat")
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.str = ""
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11468
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11565
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.Any
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = tree.Some
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = tree.All
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.Div
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.LT
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = tree.GT
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = tree.LE
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = tree.GE
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = tree.NE
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = tree.JSONExists
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Contains
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.ContainedBy
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = tree.LShift
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = tree.RShift
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.Concat
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = tree.JSONFetchVal
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = tree.JSONFetchText
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = tree.JSONFetchValPath
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = tree.JSONFetchTextPath
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = tree.JSONSomeExists
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = tree.JSONAllExists
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = tree.NotRegMatch
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = tree.RegIMatch
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = tree.NotRegIMatch
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = tree.Overlaps
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = tree.Like
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11982
		{
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12151
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12188
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12200
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12433
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.str = ""
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
