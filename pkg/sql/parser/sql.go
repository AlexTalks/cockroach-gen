// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15819

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1912,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	284, 582,
	-2, 0,
	-1, 76,
	8, 1053,
	29, 1053,
	651, 1053,
	652, 1053,
	-2, 0,
	-1, 77,
	8, 1053,
	29, 1053,
	651, 1053,
	652, 1053,
	-2, 0,
	-1, 80,
	1, 1759,
	140, 1759,
	271, 1759,
	359, 1759,
	422, 1759,
	432, 1759,
	632, 1759,
	664, 1759,
	-2, 0,
	-1, 81,
	1, 1759,
	664, 1759,
	-2, 0,
	-1, 87,
	264, 295,
	566, 295,
	-2, 0,
	-1, 101,
	205, 482,
	250, 1633,
	266, 1633,
	284, 482,
	424, 482,
	436, 1376,
	480, 482,
	497, 1376,
	550, 1376,
	579, 482,
	608, 1376,
	-2, 0,
	-1, 108,
	142, 1912,
	259, 1912,
	591, 1912,
	592, 1912,
	-2, 0,
	-1, 126,
	162, 1883,
	183, 1883,
	196, 1883,
	262, 1883,
	298, 1883,
	372, 1883,
	383, 1883,
	585, 1883,
	-2, 1854,
	-1, 169,
	170, 1190,
	282, 1190,
	427, 1151,
	502, 1151,
	549, 1151,
	569, 1190,
	571, 1151,
	-2, 0,
	-1, 174,
	4, 1914,
	21, 1914,
	22, 1914,
	23, 1914,
	24, 1914,
	25, 1914,
	26, 1914,
	27, 1914,
	28, 1914,
	30, 1914,
	31, 1914,
	37, 1914,
	41, 1914,
	43, 1914,
	44, 1914,
	45, 1914,
	47, 1914,
	48, 1914,
	49, 1914,
	50, 1914,
	51, 1914,
	52, 1914,
	53, 1914,
	54, 1914,
	55, 1914,
	57, 1914,
	58, 1914,
	59, 1914,
	60, 1914,
	62, 1914,
	63, 1914,
	64, 1914,
	65, 1914,
	66, 1914,
	67, 1914,
	68, 1914,
	69, 1914,
	73, 1914,
	74, 1914,
	75, 1914,
	76, 1914,
	78, 1914,
	79, 1914,
	80, 1914,
	84, 1914,
	85, 1914,
	86, 1914,
	87, 1914,
	88, 1914,
	89, 1914,
	90, 1914,
	91, 1914,
	94, 1914,
	95, 1914,
	96, 1914,
	97, 1914,
	98, 1914,
	99, 1914,
	101, 1914,
	103, 1914,
	104, 1914,
	105, 1914,
	106, 1914,
	107, 1914,
	108, 1914,
	109, 1914,
	111, 1914,
	112, 1914,
	113, 1914,
	115, 1914,
	116, 1914,
	117, 1914,
	125, 1914,
	126, 1914,
	127, 1914,
	128, 1914,
	129, 1914,
	131, 1914,
	132, 1914,
	133, 1914,
	134, 1914,
	136, 1914,
	137, 1914,
	138, 1914,
	139, 1914,
	141, 1914,
	142, 1914,
	143, 1914,
	144, 1914,
	146, 1914,
	147, 1914,
	148, 1914,
	151, 1914,
	152, 1914,
	153, 1914,
	155, 1914,
	156, 1914,
	157, 1914,
	159, 1914,
	160, 1914,
	161, 1914,
	163, 1914,
	164, 1914,
	165, 1914,
	166, 1914,
	167, 1914,
	168, 1914,
	169, 1914,
	170, 1914,
	171, 1914,
	172, 1914,
	173, 1914,
	174, 1914,
	175, 1914,
	176, 1914,
	177, 1914,
	178, 1914,
	179, 1914,
	180, 1914,
	182, 1914,
	188, 1914,
	189, 1914,
	190, 1914,
	191, 1914,
	195, 1914,
	197, 1914,
	198, 1914,
	199, 1914,
	201, 1914,
	202, 1914,
	205, 1914,
	206, 1914,
	207, 1914,
	208, 1914,
	209, 1914,
	210, 1914,
	211, 1914,
	212, 1914,
	213, 1914,
	214, 1914,
	215, 1914,
	216, 1914,
	217, 1914,
	218, 1914,
	220, 1914,
	221, 1914,
	223, 1914,
	224, 1914,
	226, 1914,
	227, 1914,
	228, 1914,
	229, 1914,
	230, 1914,
	231, 1914,
	232, 1914,
	233, 1914,
	234, 1914,
	235, 1914,
	236, 1914,
	238, 1914,
	239, 1914,
	240, 1914,
	242, 1914,
	243, 1914,
	244, 1914,
	245, 1914,
	246, 1914,
	250, 1914,
	251, 1914,
	252, 1914,
	253, 1914,
	256, 1914,
	257, 1914,
	258, 1914,
	259, 1914,
	260, 1914,
	261, 1914,
	263, 1914,
	265, 1914,
	266, 1914,
	267, 1914,
	269, 1914,
	271, 1914,
	272, 1914,
	273, 1914,
	275, 1914,
	279, 1914,
	280, 1914,
	281, 1914,
	282, 1914,
	283, 1914,
	284, 1914,
	285, 1914,
	287, 1914,
	288, 1914,
	289, 1914,
	291, 1914,
	292, 1914,
	293, 1914,
	295, 1914,
	296, 1914,
	299, 1914,
	300, 1914,
	301, 1914,
	302, 1914,
	303, 1914,
	304, 1914,
	305, 1914,
	308, 1914,
	309, 1914,
	310, 1914,
	311, 1914,
	313, 1914,
	314, 1914,
	315, 1914,
	316, 1914,
	317, 1914,
	318, 1914,
	319, 1914,
	320, 1914,
	321, 1914,
	322, 1914,
	323, 1914,
	324, 1914,
	325, 1914,
	326, 1914,
	327, 1914,
	328, 1914,
	329, 1914,
	330, 1914,
	331, 1914,
	332, 1914,
	333, 1914,
	334, 1914,
	335, 1914,
	337, 1914,
	339, 1914,
	340, 1914,
	341, 1914,
	342, 1914,
	343, 1914,
	344, 1914,
	345, 1914,
	346, 1914,
	347, 1914,
	348, 1914,
	349, 1914,
	350, 1914,
	351, 1914,
	352, 1914,
	353, 1914,
	354, 1914,
	355, 1914,
	357, 1914,
	358, 1914,
	360, 1914,
	362, 1914,
	363, 1914,
	364, 1914,
	365, 1914,
	367, 1914,
	368, 1914,
	369, 1914,
	370, 1914,
	371, 1914,
	374, 1914,
	376, 1914,
	378, 1914,
	379, 1914,
	380, 1914,
	381, 1914,
	384, 1914,
	385, 1914,
	386, 1914,
	388, 1914,
	390, 1914,
	391, 1914,
	392, 1914,
	393, 1914,
	394, 1914,
	395, 1914,
	396, 1914,
	397, 1914,
	398, 1914,
	399, 1914,
	400, 1914,
	401, 1914,
	402, 1914,
	403, 1914,
	405, 1914,
	406, 1914,
	407, 1914,
	408, 1914,
	409, 1914,
	410, 1914,
	411, 1914,
	412, 1914,
	413, 1914,
	414, 1914,
	415, 1914,
	416, 1914,
	417, 1914,
	418, 1914,
	419, 1914,
	421, 1914,
	422, 1914,
	423, 1914,
	425, 1914,
	426, 1914,
	427, 1914,
	428, 1914,
	429, 1914,
	430, 1914,
	431, 1914,
	432, 1914,
	433, 1914,
	434, 1914,
	435, 1914,
	436, 1914,
	437, 1914,
	438, 1914,
	440, 1914,
	442, 1914,
	443, 1914,
	444, 1914,
	450, 1914,
	451, 1914,
	452, 1914,
	454, 1914,
	455, 1914,
	456, 1914,
	457, 1914,
	458, 1914,
	459, 1914,
	460, 1914,
	461, 1914,
	462, 1914,
	463, 1914,
	464, 1914,
	466, 1914,
	467, 1914,
	468, 1914,
	469, 1914,
	470, 1914,
	472, 1914,
	473, 1914,
	474, 1914,
	475, 1914,
	476, 1914,
	477, 1914,
	478, 1914,
	480, 1914,
	481, 1914,
	482, 1914,
	483, 1914,
	484, 1914,
	485, 1914,
	486, 1914,
	487, 1914,
	488, 1914,
	489, 1914,
	490, 1914,
	491, 1914,
	492, 1914,
	493, 1914,
	494, 1914,
	495, 1914,
	497, 1914,
	498, 1914,
	499, 1914,
	500, 1914,
	501, 1914,
	502, 1914,
	504, 1914,
	505, 1914,
	506, 1914,
	507, 1914,
	508, 1914,
	509, 1914,
	510, 1914,
	512, 1914,
	513, 1914,
	514, 1914,
	515, 1914,
	516, 1914,
	517, 1914,
	518, 1914,
	519, 1914,
	521, 1914,
	523, 1914,
	524, 1914,
	525, 1914,
	526, 1914,
	527, 1914,
	528, 1914,
	529, 1914,
	530, 1914,
	531, 1914,
	532, 1914,
	533, 1914,
	534, 1914,
	535, 1914,
	536, 1914,
	537, 1914,
	538, 1914,
	539, 1914,
	540, 1914,
	541, 1914,
	542, 1914,
	543, 1914,
	545, 1914,
	546, 1914,
	548, 1914,
	549, 1914,
	551, 1914,
	552, 1914,
	553, 1914,
	554, 1914,
	555, 1914,
	556, 1914,
	558, 1914,
	559, 1914,
	561, 1914,
	562, 1914,
	563, 1914,
	564, 1914,
	565, 1914,
	567, 1914,
	569, 1914,
	570, 1914,
	571, 1914,
	572, 1914,
	573, 1914,
	574, 1914,
	575, 1914,
	576, 1914,
	578, 1914,
	579, 1914,
	580, 1914,
	581, 1914,
	582, 1914,
	583, 1914,
	584, 1914,
	587, 1914,
	588, 1914,
	589, 1914,
	590, 1914,
	591, 1914,
	592, 1914,
	593, 1914,
	594, 1914,
	595, 1914,
	597, 1914,
	600, 1914,
	601, 1914,
	602, 1914,
	603, 1914,
	604, 1914,
	605, 1914,
	607, 1914,
	608, 1914,
	609, 1914,
	610, 1914,
	611, 1914,
	612, 1914,
	613, 1914,
	614, 1914,
	615, 1914,
	616, 1914,
	617, 1914,
	618, 1914,
	623, 1914,
	624, 1914,
	625, 1914,
	626, 1914,
	627, 1914,
	628, 1914,
	-2, 0,
	-1, 176,
	1, 1759,
	664, 1759,
	667, 1759,
	-2, 0,
	-1, 177,
	1, 1759,
	566, 1759,
	664, 1759,
	667, 1759,
	-2, 0,
	-1, 213,
	162, 1882,
	183, 1882,
	196, 1882,
	262, 1882,
	298, 1882,
	372, 1882,
	383, 1882,
	585, 1882,
	-2, 1857,
	-1, 274,
	4, 1921,
	5, 1921,
	6, 1921,
	7, 1921,
	8, 1921,
	9, 1921,
	10, 1921,
	21, 1921,
	22, 1921,
	23, 1921,
	24, 1921,
	25, 1921,
	26, 1921,
	27, 1921,
	28, 1921,
	30, 1921,
	31, 1921,
	37, 1921,
	38, 1921,
	41, 1921,
	43, 1921,
	44, 1921,
	45, 1921,
	46, 1921,
	47, 1921,
	48, 1921,
	49, 1921,
	50, 1921,
	51, 1921,
	52, 1921,
	53, 1921,
	54, 1921,
	55, 1921,
	57, 1921,
	58, 1921,
	59, 1921,
	60, 1921,
	62, 1921,
	63, 1921,
	64, 1921,
	65, 1921,
	66, 1921,
	67, 1921,
	68, 1921,
	69, 1921,
	70, 1921,
	71, 1921,
	72, 1921,
	73, 1921,
	74, 1921,
	75, 1921,
	76, 1921,
	78, 1921,
	79, 1921,
	80, 1921,
	82, 1921,
	84, 1921,
	85, 1921,
	86, 1921,
	87, 1921,
	88, 1921,
	89, 1921,
	90, 1921,
	91, 1921,
	94, 1921,
	95, 1921,
	96, 1921,
	97, 1921,
	98, 1921,
	99, 1921,
	101, 1921,
	103, 1921,
	104, 1921,
	105, 1921,
	106, 1921,
	107, 1921,
	108, 1921,
	109, 1921,
	111, 1921,
	112, 1921,
	113, 1921,
	114, 1921,
	115, 1921,
	116, 1921,
	117, 1921,
	118, 1921,
	119, 1921,
	120, 1921,
	121, 1921,
	122, 1921,
	123, 1921,
	124, 1921,
	125, 1921,
	126, 1921,
	127, 1921,
	128, 1921,
	129, 1921,
	130, 1921,
	131, 1921,
	132, 1921,
	133, 1921,
	134, 1921,
	135, 1921,
	136, 1921,
	137, 1921,
	138, 1921,
	139, 1921,
	141, 1921,
	142, 1921,
	143, 1921,
	144, 1921,
	146, 1921,
	147, 1921,
	148, 1921,
	151, 1921,
	152, 1921,
	153, 1921,
	155, 1921,
	156, 1921,
	157, 1921,
	159, 1921,
	160, 1921,
	161, 1921,
	163, 1921,
	164, 1921,
	165, 1921,
	166, 1921,
	167, 1921,
	168, 1921,
	169, 1921,
	170, 1921,
	171, 1921,
	172, 1921,
	173, 1921,
	174, 1921,
	175, 1921,
	176, 1921,
	177, 1921,
	178, 1921,
	179, 1921,
	180, 1921,
	181, 1921,
	182, 1921,
	188, 1921,
	189, 1921,
	190, 1921,
	191, 1921,
	195, 1921,
	197, 1921,
	198, 1921,
	199, 1921,
	201, 1921,
	202, 1921,
	204, 1921,
	205, 1921,
	206, 1921,
	207, 1921,
	208, 1921,
	209, 1921,
	210, 1921,
	211, 1921,
	212, 1921,
	213, 1921,
	214, 1921,
	215, 1921,
	216, 1921,
	217, 1921,
	218, 1921,
	220, 1921,
	221, 1921,
	223, 1921,
	224, 1921,
	226, 1921,
	227, 1921,
	228, 1921,
	229, 1921,
	230, 1921,
	231, 1921,
	232, 1921,
	233, 1921,
	234, 1921,
	235, 1921,
	236, 1921,
	237, 1921,
	238, 1921,
	239, 1921,
	240, 1921,
	242, 1921,
	243, 1921,
	244, 1921,
	245, 1921,
	246, 1921,
	250, 1921,
	251, 1921,
	252, 1921,
	253, 1921,
	255, 1921,
	256, 1921,
	257, 1921,
	258, 1921,
	259, 1921,
	260, 1921,
	261, 1921,
	263, 1921,
	265, 1921,
	266, 1921,
	267, 1921,
	268, 1921,
	269, 1921,
	270, 1921,
	271, 1921,
	272, 1921,
	273, 1921,
	274, 1921,
	275, 1921,
	279, 1921,
	280, 1921,
	281, 1921,
	282, 1921,
	283, 1921,
	284, 1921,
	285, 1921,
	287, 1921,
	288, 1921,
	289, 1921,
	291, 1921,
	292, 1921,
	293, 1921,
	294, 1921,
	295, 1921,
	296, 1921,
	297, 1921,
	299, 1921,
	300, 1921,
	301, 1921,
	302, 1921,
	303, 1921,
	304, 1921,
	305, 1921,
	306, 1921,
	307, 1921,
	308, 1921,
	309, 1921,
	310, 1921,
	311, 1921,
	313, 1921,
	314, 1921,
	315, 1921,
	316, 1921,
	317, 1921,
	318, 1921,
	319, 1921,
	320, 1921,
	321, 1921,
	322, 1921,
	323, 1921,
	324, 1921,
	325, 1921,
	326, 1921,
	327, 1921,
	328, 1921,
	329, 1921,
	330, 1921,
	331, 1921,
	332, 1921,
	333, 1921,
	334, 1921,
	335, 1921,
	337, 1921,
	338, 1921,
	339, 1921,
	340, 1921,
	341, 1921,
	342, 1921,
	343, 1921,
	344, 1921,
	345, 1921,
	346, 1921,
	347, 1921,
	348, 1921,
	349, 1921,
	350, 1921,
	351, 1921,
	352, 1921,
	353, 1921,
	354, 1921,
	355, 1921,
	356, 1921,
	357, 1921,
	358, 1921,
	359, 1921,
	360, 1921,
	361, 1921,
	362, 1921,
	363, 1921,
	364, 1921,
	365, 1921,
	366, 1921,
	367, 1921,
	368, 1921,
	369, 1921,
	370, 1921,
	371, 1921,
	374, 1921,
	376, 1921,
	379, 1921,
	380, 1921,
	381, 1921,
	384, 1921,
	385, 1921,
	386, 1921,
	387, 1921,
	388, 1921,
	389, 1921,
	390, 1921,
	391, 1921,
	392, 1921,
	393, 1921,
	394, 1921,
	395, 1921,
	396, 1921,
	397, 1921,
	398, 1921,
	399, 1921,
	400, 1921,
	401, 1921,
	402, 1921,
	403, 1921,
	405, 1921,
	406, 1921,
	407, 1921,
	408, 1921,
	409, 1921,
	410, 1921,
	411, 1921,
	412, 1921,
	413, 1921,
	414, 1921,
	415, 1921,
	416, 1921,
	417, 1921,
	418, 1921,
	419, 1921,
	421, 1921,
	422, 1921,
	423, 1921,
	425, 1921,
	426, 1921,
	427, 1921,
	428, 1921,
	429, 1921,
	430, 1921,
	431, 1921,
	432, 1921,
	433, 1921,
	434, 1921,
	435, 1921,
	436, 1921,
	437, 1921,
	438, 1921,
	440, 1921,
	442, 1921,
	443, 1921,
	444, 1921,
	450, 1921,
	451, 1921,
	452, 1921,
	454, 1921,
	455, 1921,
	456, 1921,
	457, 1921,
	458, 1921,
	459, 1921,
	460, 1921,
	461, 1921,
	462, 1921,
	463, 1921,
	464, 1921,
	466, 1921,
	467, 1921,
	468, 1921,
	469, 1921,
	470, 1921,
	471, 1921,
	472, 1921,
	473, 1921,
	474, 1921,
	475, 1921,
	476, 1921,
	477, 1921,
	478, 1921,
	480, 1921,
	481, 1921,
	482, 1921,
	483, 1921,
	484, 1921,
	485, 1921,
	486, 1921,
	487, 1921,
	488, 1921,
	489, 1921,
	490, 1921,
	491, 1921,
	492, 1921,
	493, 1921,
	494, 1921,
	495, 1921,
	497, 1921,
	498, 1921,
	499, 1921,
	500, 1921,
	501, 1921,
	502, 1921,
	503, 1921,
	504, 1921,
	505, 1921,
	506, 1921,
	507, 1921,
	508, 1921,
	509, 1921,
	510, 1921,
	511, 1921,
	512, 1921,
	513, 1921,
	514, 1921,
	515, 1921,
	516, 1921,
	517, 1921,
	518, 1921,
	519, 1921,
	521, 1921,
	523, 1921,
	524, 1921,
	525, 1921,
	526, 1921,
	527, 1921,
	528, 1921,
	529, 1921,
	530, 1921,
	531, 1921,
	532, 1921,
	533, 1921,
	534, 1921,
	535, 1921,
	536, 1921,
	537, 1921,
	538, 1921,
	539, 1921,
	540, 1921,
	541, 1921,
	542, 1921,
	543, 1921,
	545, 1921,
	546, 1921,
	547, 1921,
	548, 1921,
	549, 1921,
	551, 1921,
	552, 1921,
	553, 1921,
	554, 1921,
	555, 1921,
	556, 1921,
	558, 1921,
	559, 1921,
	561, 1921,
	562, 1921,
	563, 1921,
	564, 1921,
	565, 1921,
	567, 1921,
	569, 1921,
	570, 1921,
	571, 1921,
	572, 1921,
	573, 1921,
	574, 1921,
	575, 1921,
	576, 1921,
	577, 1921,
	578, 1921,
	579, 1921,
	580, 1921,
	581, 1921,
	582, 1921,
	583, 1921,
	584, 1921,
	586, 1921,
	587, 1921,
	588, 1921,
	589, 1921,
	590, 1921,
	591, 1921,
	592, 1921,
	593, 1921,
	594, 1921,
	595, 1921,
	596, 1921,
	597, 1921,
	600, 1921,
	601, 1921,
	602, 1921,
	603, 1921,
	604, 1921,
	605, 1921,
	607, 1921,
	608, 1921,
	609, 1921,
	610, 1921,
	611, 1921,
	612, 1921,
	613, 1921,
	614, 1921,
	615, 1921,
	616, 1921,
	617, 1921,
	618, 1921,
	623, 1921,
	624, 1921,
	625, 1921,
	626, 1921,
	627, 1921,
	628, 1921,
	629, 1921,
	644, 1921,
	651, 1921,
	652, 1921,
	653, 1921,
	661, 1921,
	665, 1921,
	-2, 0,
	-1, 854,
	4, 1631,
	21, 1631,
	22, 1631,
	23, 1631,
	24, 1631,
	25, 1631,
	26, 1631,
	27, 1631,
	28, 1631,
	30, 1631,
	31, 1631,
	37, 1631,
	41, 1631,
	43, 1631,
	44, 1631,
	45, 1631,
	47, 1631,
	48, 1631,
	49, 1631,
	50, 1631,
	51, 1631,
	52, 1631,
	53, 1631,
	54, 1631,
	55, 1631,
	57, 1631,
	58, 1631,
	59, 1631,
	60, 1631,
	62, 1631,
	63, 1631,
	64, 1631,
	65, 1631,
	66, 1631,
	67, 1631,
	68, 1631,
	69, 1631,
	73, 1631,
	74, 1631,
	75, 1631,
	76, 1631,
	78, 1631,
	79, 1631,
	80, 1631,
	84, 1631,
	85, 1631,
	86, 1631,
	87, 1631,
	88, 1631,
	89, 1631,
	90, 1631,
	91, 1631,
	94, 1631,
	95, 1631,
	96, 1631,
	97, 1631,
	98, 1631,
	99, 1631,
	101, 1631,
	103, 1631,
	104, 1631,
	105, 1631,
	106, 1631,
	107, 1631,
	108, 1631,
	109, 1631,
	111, 1631,
	112, 1631,
	113, 1631,
	115, 1631,
	116, 1631,
	117, 1631,
	125, 1631,
	126, 1631,
	127, 1631,
	128, 1631,
	129, 1631,
	131, 1631,
	132, 1631,
	133, 1631,
	134, 1631,
	136, 1631,
	137, 1631,
	138, 1631,
	139, 1631,
	141, 1631,
	142, 1631,
	143, 1631,
	144, 1631,
	146, 1631,
	147, 1631,
	148, 1631,
	151, 1631,
	152, 1631,
	153, 1631,
	155, 1631,
	156, 1631,
	157, 1631,
	159, 1631,
	160, 1631,
	161, 1631,
	163, 1631,
	164, 1631,
	165, 1631,
	166, 1631,
	167, 1631,
	168, 1631,
	169, 1631,
	170, 1631,
	171, 1631,
	172, 1631,
	173, 1631,
	174, 1631,
	175, 1631,
	176, 1631,
	177, 1631,
	178, 1631,
	179, 1631,
	180, 1631,
	182, 1631,
	188, 1631,
	189, 1631,
	190, 1631,
	191, 1631,
	195, 1631,
	197, 1631,
	198, 1631,
	199, 1631,
	201, 1631,
	202, 1631,
	205, 1631,
	206, 1631,
	207, 1631,
	208, 1631,
	209, 1631,
	210, 1631,
	211, 1631,
	212, 1631,
	213, 1631,
	214, 1631,
	215, 1631,
	216, 1631,
	217, 1631,
	218, 1631,
	220, 1631,
	221, 1631,
	223, 1631,
	224, 1631,
	226, 1631,
	227, 1631,
	228, 1631,
	229, 1631,
	230, 1631,
	231, 1631,
	232, 1631,
	233, 1631,
	234, 1631,
	235, 1631,
	236, 1631,
	238, 1631,
	239, 1631,
	240, 1631,
	242, 1631,
	243, 1631,
	244, 1631,
	245, 1631,
	246, 1631,
	250, 1631,
	251, 1631,
	252, 1631,
	253, 1631,
	256, 1631,
	257, 1631,
	258, 1631,
	259, 1631,
	260, 1631,
	261, 1631,
	263, 1631,
	265, 1631,
	266, 1631,
	267, 1631,
	269, 1631,
	271, 1631,
	272, 1631,
	273, 1631,
	275, 1631,
	279, 1631,
	280, 1631,
	281, 1631,
	282, 1631,
	283, 1631,
	284, 1631,
	285, 1631,
	287, 1631,
	288, 1631,
	289, 1631,
	291, 1631,
	292, 1631,
	293, 1631,
	295, 1631,
	296, 1631,
	299, 1631,
	300, 1631,
	301, 1631,
	302, 1631,
	303, 1631,
	304, 1631,
	305, 1631,
	308, 1631,
	309, 1631,
	310, 1631,
	311, 1631,
	313, 1631,
	314, 1631,
	315, 1631,
	316, 1631,
	317, 1631,
	318, 1631,
	319, 1631,
	320, 1631,
	321, 1631,
	322, 1631,
	323, 1631,
	324, 1631,
	325, 1631,
	326, 1631,
	327, 1631,
	328, 1631,
	329, 1631,
	330, 1631,
	331, 1631,
	332, 1631,
	333, 1631,
	334, 1631,
	335, 1631,
	337, 1631,
	339, 1631,
	340, 1631,
	341, 1631,
	342, 1631,
	343, 1631,
	344, 1631,
	345, 1631,
	346, 1631,
	347, 1631,
	348, 1631,
	349, 1631,
	350, 1631,
	351, 1631,
	352, 1631,
	353, 1631,
	354, 1631,
	355, 1631,
	357, 1631,
	358, 1631,
	360, 1631,
	362, 1631,
	363, 1631,
	364, 1631,
	365, 1631,
	367, 1631,
	368, 1631,
	369, 1631,
	370, 1631,
	371, 1631,
	374, 1631,
	376, 1631,
	379, 1631,
	380, 1631,
	381, 1631,
	384, 1631,
	385, 1631,
	386, 1631,
	388, 1631,
	390, 1631,
	391, 1631,
	392, 1631,
	393, 1631,
	394, 1631,
	395, 1631,
	396, 1631,
	397, 1631,
	398, 1631,
	399, 1631,
	400, 1631,
	401, 1631,
	402, 1631,
	403, 1631,
	405, 1631,
	406, 1631,
	407, 1631,
	408, 1631,
	409, 1631,
	410, 1631,
	411, 1631,
	412, 1631,
	413, 1631,
	414, 1631,
	415, 1631,
	416, 1631,
	417, 1631,
	418, 1631,
	419, 1631,
	421, 1631,
	422, 1631,
	423, 1631,
	425, 1631,
	426, 1631,
	427, 1631,
	428, 1631,
	429, 1631,
	430, 1631,
	431, 1631,
	432, 1631,
	433, 1631,
	434, 1631,
	435, 1631,
	436, 1631,
	437, 1631,
	438, 1631,
	440, 1631,
	442, 1631,
	443, 1631,
	444, 1631,
	450, 1631,
	451, 1631,
	452, 1631,
	454, 1631,
	455, 1631,
	456, 1631,
	457, 1631,
	458, 1631,
	459, 1631,
	460, 1631,
	461, 1631,
	462, 1631,
	463, 1631,
	464, 1631,
	466, 1631,
	467, 1631,
	468, 1631,
	469, 1631,
	470, 1631,
	472, 1631,
	473, 1631,
	474, 1631,
	475, 1631,
	476, 1631,
	477, 1631,
	478, 1631,
	480, 1631,
	481, 1631,
	482, 1631,
	483, 1631,
	484, 1631,
	485, 1631,
	486, 1631,
	487, 1631,
	488, 1631,
	489, 1631,
	490, 1631,
	491, 1631,
	492, 1631,
	493, 1631,
	494, 1631,
	495, 1631,
	497, 1631,
	498, 1631,
	499, 1631,
	500, 1631,
	501, 1631,
	502, 1631,
	504, 1631,
	505, 1631,
	506, 1631,
	507, 1631,
	508, 1631,
	509, 1631,
	510, 1631,
	512, 1631,
	513, 1631,
	514, 1631,
	515, 1631,
	516, 1631,
	517, 1631,
	518, 1631,
	519, 1631,
	521, 1631,
	523, 1631,
	524, 1631,
	525, 1631,
	526, 1631,
	527, 1631,
	528, 1631,
	529, 1631,
	530, 1631,
	531, 1631,
	532, 1631,
	533, 1631,
	534, 1631,
	535, 1631,
	536, 1631,
	537, 1631,
	538, 1631,
	539, 1631,
	540, 1631,
	541, 1631,
	542, 1631,
	543, 1631,
	545, 1631,
	546, 1631,
	548, 1631,
	549, 1631,
	551, 1631,
	552, 1631,
	553, 1631,
	554, 1631,
	555, 1631,
	556, 1631,
	558, 1631,
	559, 1631,
	561, 1631,
	562, 1631,
	563, 1631,
	564, 1631,
	565, 1631,
	567, 1631,
	569, 1631,
	570, 1631,
	571, 1631,
	572, 1631,
	573, 1631,
	574, 1631,
	575, 1631,
	576, 1631,
	578, 1631,
	579, 1631,
	580, 1631,
	581, 1631,
	582, 1631,
	583, 1631,
	584, 1631,
	587, 1631,
	588, 1631,
	589, 1631,
	590, 1631,
	591, 1631,
	592, 1631,
	593, 1631,
	594, 1631,
	595, 1631,
	597, 1631,
	600, 1631,
	601, 1631,
	602, 1631,
	603, 1631,
	604, 1631,
	605, 1631,
	607, 1631,
	608, 1631,
	609, 1631,
	610, 1631,
	611, 1631,
	612, 1631,
	613, 1631,
	614, 1631,
	615, 1631,
	616, 1631,
	617, 1631,
	618, 1631,
	623, 1631,
	624, 1631,
	625, 1631,
	626, 1631,
	627, 1631,
	628, 1631,
	-2, 0,
	-1, 873,
	203, 2739,
	566, 2739,
	643, 2739,
	663, 2739,
	-2, 0,
	-1, 874,
	203, 2724,
	566, 2724,
	643, 2724,
	663, 2724,
	-2, 0,
	-1, 876,
	203, 3022,
	566, 3022,
	643, 3022,
	663, 3022,
	-2, 0,
	-1, 879,
	203, 2864,
	566, 2864,
	643, 2864,
	663, 2864,
	-2, 0,
	-1, 880,
	203, 3069,
	566, 3069,
	643, 3069,
	663, 3069,
	-2, 0,
	-1, 888,
	203, 2892,
	566, 2892,
	643, 2892,
	663, 2892,
	-2, 917,
	-1, 904,
	8, 1052,
	29, 1052,
	651, 1052,
	652, 1052,
	-2, 1057,
	-1, 908,
	1, 2797,
	664, 2797,
	667, 2797,
	-2, 1057,
	-1, 909,
	1, 2851,
	664, 2851,
	667, 2851,
	-2, 1057,
	-1, 912,
	1, 2897,
	664, 2897,
	667, 2897,
	-2, 1050,
	-1, 913,
	1, 2954,
	664, 2954,
	667, 2954,
	-2, 1051,
	-1, 914,
	1, 2802,
	664, 2802,
	667, 2802,
	-2, 1054,
	-1, 915,
	1, 2710,
	664, 2710,
	667, 2710,
	-2, 1055,
	-1, 958,
	663, 2667,
	666, 2667,
	-2, 1292,
	-1, 959,
	663, 2669,
	666, 2669,
	-2, 1293,
	-1, 960,
	663, 2668,
	666, 2668,
	-2, 1294,
	-1, 961,
	666, 2591,
	-2, 1295,
	-1, 987,
	196, 329,
	-2, 0,
	-1, 1009,
	46, 2640,
	-2, 0,
	-1, 1010,
	608, 1609,
	-2, 1377,
	-1, 1027,
	4, 2069,
	21, 2069,
	22, 2069,
	23, 2069,
	24, 2069,
	25, 2069,
	26, 2069,
	27, 2069,
	28, 2069,
	30, 2069,
	31, 2069,
	37, 2069,
	41, 2069,
	43, 2069,
	44, 2069,
	45, 2069,
	47, 2069,
	48, 2069,
	49, 2069,
	50, 2069,
	51, 2069,
	52, 2069,
	53, 2069,
	54, 2069,
	55, 2069,
	57, 2069,
	58, 2069,
	59, 2069,
	60, 2069,
	62, 2069,
	63, 2069,
	64, 2069,
	65, 2069,
	66, 2069,
	67, 2069,
	68, 2069,
	69, 2069,
	73, 2069,
	74, 2069,
	75, 2069,
	76, 2069,
	78, 2069,
	79, 2069,
	80, 2069,
	84, 2069,
	85, 2069,
	86, 2069,
	87, 2069,
	88, 2069,
	89, 2069,
	90, 2069,
	91, 2069,
	94, 2069,
	95, 2069,
	96, 2069,
	97, 2069,
	98, 2069,
	99, 2069,
	101, 2069,
	103, 2069,
	104, 2069,
	105, 2069,
	106, 2069,
	107, 2069,
	108, 2069,
	109, 2069,
	111, 2069,
	112, 2069,
	113, 2069,
	115, 2069,
	116, 2069,
	117, 2069,
	125, 2069,
	126, 2069,
	127, 2069,
	128, 2069,
	129, 2069,
	131, 2069,
	132, 2069,
	133, 2069,
	134, 2069,
	136, 2069,
	137, 2069,
	138, 2069,
	139, 2069,
	141, 2069,
	142, 2069,
	143, 2069,
	144, 2069,
	146, 2069,
	147, 2069,
	148, 2069,
	151, 2069,
	152, 2069,
	153, 2069,
	155, 2069,
	156, 2069,
	157, 2069,
	159, 2069,
	160, 2069,
	161, 2069,
	163, 2069,
	164, 2069,
	165, 2069,
	166, 2069,
	167, 2069,
	168, 2069,
	169, 2069,
	170, 2069,
	171, 2069,
	172, 2069,
	173, 2069,
	174, 2069,
	175, 2069,
	176, 2069,
	177, 2069,
	178, 2069,
	179, 2069,
	180, 2069,
	182, 2069,
	188, 2069,
	189, 2069,
	190, 2069,
	191, 2069,
	195, 2069,
	197, 2069,
	198, 2069,
	199, 2069,
	201, 2069,
	202, 2069,
	205, 2069,
	206, 2069,
	207, 2069,
	208, 2069,
	209, 2069,
	210, 2069,
	211, 2069,
	212, 2069,
	213, 2069,
	214, 2069,
	215, 2069,
	216, 2069,
	217, 2069,
	218, 2069,
	220, 2069,
	221, 2069,
	223, 2069,
	224, 2069,
	226, 2069,
	227, 2069,
	228, 2069,
	229, 2069,
	230, 2069,
	231, 2069,
	232, 2069,
	233, 2069,
	234, 2069,
	235, 2069,
	236, 2069,
	238, 2069,
	239, 2069,
	240, 2069,
	242, 2069,
	243, 2069,
	244, 2069,
	245, 2069,
	246, 2069,
	250, 2069,
	251, 2069,
	252, 2069,
	253, 2069,
	256, 2069,
	257, 2069,
	258, 2069,
	259, 2069,
	260, 2069,
	261, 2069,
	263, 2069,
	265, 2069,
	266, 2069,
	267, 2069,
	269, 2069,
	271, 2069,
	272, 2069,
	273, 2069,
	275, 2069,
	279, 2069,
	280, 2069,
	281, 2069,
	282, 2069,
	283, 2069,
	284, 2069,
	285, 2069,
	287, 2069,
	288, 2069,
	289, 2069,
	291, 2069,
	292, 2069,
	293, 2069,
	295, 2069,
	296, 2069,
	299, 2069,
	300, 2069,
	301, 2069,
	302, 2069,
	303, 2069,
	304, 2069,
	305, 2069,
	308, 2069,
	309, 2069,
	310, 2069,
	311, 2069,
	313, 2069,
	314, 2069,
	315, 2069,
	316, 2069,
	317, 2069,
	318, 2069,
	319, 2069,
	320, 2069,
	321, 2069,
	322, 2069,
	323, 2069,
	324, 2069,
	325, 2069,
	326, 2069,
	327, 2069,
	328, 2069,
	329, 2069,
	330, 2069,
	331, 2069,
	332, 2069,
	333, 2069,
	334, 2069,
	335, 2069,
	337, 2069,
	339, 2069,
	340, 2069,
	341, 2069,
	342, 2069,
	343, 2069,
	344, 2069,
	345, 2069,
	346, 2069,
	347, 2069,
	348, 2069,
	349, 2069,
	350, 2069,
	351, 2069,
	352, 2069,
	353, 2069,
	354, 2069,
	355, 2069,
	357, 2069,
	358, 2069,
	360, 2069,
	362, 2069,
	363, 2069,
	364, 2069,
	365, 2069,
	367, 2069,
	368, 2069,
	369, 2069,
	370, 2069,
	371, 2069,
	374, 2069,
	376, 2069,
	379, 2069,
	380, 2069,
	381, 2069,
	384, 2069,
	385, 2069,
	386, 2069,
	388, 2069,
	390, 2069,
	391, 2069,
	392, 2069,
	393, 2069,
	394, 2069,
	395, 2069,
	396, 2069,
	397, 2069,
	398, 2069,
	399, 2069,
	400, 2069,
	401, 2069,
	402, 2069,
	403, 2069,
	405, 2069,
	406, 2069,
	407, 2069,
	408, 2069,
	409, 2069,
	410, 2069,
	411, 2069,
	412, 2069,
	413, 2069,
	414, 2069,
	415, 2069,
	416, 2069,
	417, 2069,
	418, 2069,
	419, 2069,
	421, 2069,
	422, 2069,
	423, 2069,
	425, 2069,
	426, 2069,
	427, 2069,
	428, 2069,
	429, 2069,
	430, 2069,
	431, 2069,
	432, 2069,
	433, 2069,
	434, 2069,
	435, 2069,
	436, 2069,
	437, 2069,
	438, 2069,
	440, 2069,
	442, 2069,
	443, 2069,
	444, 2069,
	450, 2069,
	451, 2069,
	452, 2069,
	454, 2069,
	455, 2069,
	456, 2069,
	457, 2069,
	458, 2069,
	459, 2069,
	460, 2069,
	461, 2069,
	462, 2069,
	463, 2069,
	464, 2069,
	466, 2069,
	467, 2069,
	468, 2069,
	469, 2069,
	470, 2069,
	472, 2069,
	473, 2069,
	474, 2069,
	475, 2069,
	476, 2069,
	477, 2069,
	478, 2069,
	480, 2069,
	481, 2069,
	482, 2069,
	483, 2069,
	484, 2069,
	485, 2069,
	486, 2069,
	487, 2069,
	488, 2069,
	489, 2069,
	490, 2069,
	491, 2069,
	492, 2069,
	493, 2069,
	494, 2069,
	495, 2069,
	497, 2069,
	498, 2069,
	499, 2069,
	500, 2069,
	501, 2069,
	502, 2069,
	504, 2069,
	505, 2069,
	506, 2069,
	507, 2069,
	508, 2069,
	509, 2069,
	510, 2069,
	512, 2069,
	513, 2069,
	514, 2069,
	515, 2069,
	516, 2069,
	517, 2069,
	518, 2069,
	519, 2069,
	521, 2069,
	523, 2069,
	524, 2069,
	525, 2069,
	526, 2069,
	527, 2069,
	528, 2069,
	529, 2069,
	530, 2069,
	531, 2069,
	532, 2069,
	533, 2069,
	534, 2069,
	535, 2069,
	536, 2069,
	537, 2069,
	538, 2069,
	539, 2069,
	540, 2069,
	541, 2069,
	542, 2069,
	543, 2069,
	545, 2069,
	546, 2069,
	548, 2069,
	549, 2069,
	551, 2069,
	552, 2069,
	553, 2069,
	554, 2069,
	555, 2069,
	556, 2069,
	558, 2069,
	559, 2069,
	561, 2069,
	562, 2069,
	563, 2069,
	564, 2069,
	565, 2069,
	567, 2069,
	569, 2069,
	570, 2069,
	571, 2069,
	572, 2069,
	573, 2069,
	574, 2069,
	575, 2069,
	576, 2069,
	578, 2069,
	579, 2069,
	580, 2069,
	581, 2069,
	582, 2069,
	583, 2069,
	584, 2069,
	587, 2069,
	588, 2069,
	589, 2069,
	590, 2069,
	591, 2069,
	592, 2069,
	593, 2069,
	594, 2069,
	595, 2069,
	597, 2069,
	600, 2069,
	601, 2069,
	602, 2069,
	603, 2069,
	604, 2069,
	605, 2069,
	607, 2069,
	608, 2069,
	609, 2069,
	610, 2069,
	611, 2069,
	612, 2069,
	613, 2069,
	614, 2069,
	615, 2069,
	616, 2069,
	617, 2069,
	618, 2069,
	623, 2069,
	624, 2069,
	625, 2069,
	626, 2069,
	627, 2069,
	628, 2069,
	-2, 0,
	-1, 1038,
	284, 582,
	-2, 0,
	-1, 1117,
	203, 1097,
	-2, 0,
	-1, 1118,
	427, 1152,
	502, 1152,
	549, 1152,
	571, 1152,
	-2, 0,
	-1, 1119,
	427, 1151,
	502, 1151,
	549, 1151,
	571, 1151,
	-2, 1070,
	-1, 1123,
	1, 1204,
	660, 1204,
	662, 1204,
	664, 1204,
	667, 1204,
	-2, 0,
	-1, 1125,
	1, 1125,
	660, 1125,
	662, 1125,
	664, 1125,
	667, 1125,
	-2, 0,
	-1, 1126,
	1, 1129,
	660, 1129,
	662, 1129,
	664, 1129,
	667, 1129,
	-2, 0,
	-1, 1127,
	1, 1281,
	196, 1281,
	660, 1281,
	662, 1281,
	664, 1281,
	667, 1281,
	-2, 0,
	-1, 1136,
	1, 1157,
	660, 1157,
	662, 1157,
	664, 1157,
	667, 1157,
	-2, 0,
	-1, 1143,
	1, 1204,
	660, 1204,
	662, 1204,
	664, 1204,
	667, 1204,
	-2, 0,
	-1, 1144,
	1, 1206,
	660, 1206,
	662, 1206,
	664, 1206,
	667, 1206,
	-2, 0,
	-1, 1145,
	1, 1209,
	660, 1209,
	662, 1209,
	664, 1209,
	667, 1209,
	-2, 0,
	-1, 1153,
	1, 1244,
	660, 1244,
	662, 1244,
	664, 1244,
	667, 1244,
	-2, 0,
	-1, 1154,
	1, 1246,
	660, 1246,
	662, 1246,
	664, 1246,
	667, 1246,
	-2, 0,
	-1, 1159,
	1, 1274,
	660, 1274,
	662, 1274,
	664, 1274,
	667, 1274,
	-2, 0,
	-1, 1213,
	183, 1925,
	196, 1925,
	298, 1925,
	372, 1925,
	-2, 1861,
	-1, 1230,
	183, 1924,
	196, 1924,
	298, 1924,
	372, 1924,
	-2, 1858,
	-1, 1259,
	663, 2666,
	-2, 925,
	-1, 1288,
	5, 2658,
	661, 2656,
	-2, 2647,
	-1, 1296,
	5, 2679,
	661, 2676,
	-2, 2667,
	-1, 1297,
	5, 2680,
	661, 2677,
	-2, 2668,
	-1, 1307,
	663, 2664,
	-2, 2646,
	-1, 1308,
	661, 3184,
	-2, 2665,
	-1, 1331,
	5, 2681,
	38, 2681,
	135, 2681,
	643, 2681,
	659, 2681,
	662, 2681,
	663, 2681,
	666, 2681,
	-2, 3183,
	-1, 1332,
	5, 2144,
	-2, 3153,
	-1, 1333,
	5, 2145,
	-2, 3154,
	-1, 1334,
	5, 2146,
	-2, 3169,
	-1, 1335,
	5, 2147,
	-2, 3131,
	-1, 1336,
	5, 2148,
	-2, 3166,
	-1, 1337,
	5, 2156,
	-2, 3144,
	-1, 1338,
	5, 2143,
	-2, 3140,
	-1, 1339,
	5, 2143,
	-2, 3139,
	-1, 1340,
	5, 2143,
	-2, 3159,
	-1, 1341,
	5, 2154,
	-2, 3133,
	-1, 1342,
	5, 2159,
	661, 2171,
	-2, 3132,
	-1, 1343,
	5, 2161,
	-2, 3179,
	-1, 1346,
	5, 2183,
	-2, 3172,
	-1, 1347,
	5, 2175,
	-2, 3173,
	-1, 1348,
	5, 2183,
	-2, 3174,
	-1, 1349,
	5, 2179,
	-2, 3175,
	-1, 1350,
	5, 2127,
	-2, 3145,
	-1, 1351,
	5, 2128,
	-2, 3146,
	-1, 1352,
	5, 2129,
	-2, 3134,
	-1, 1380,
	5, 2166,
	661, 2166,
	-2, 3180,
	-1, 1381,
	5, 2167,
	661, 2167,
	-2, 3170,
	-1, 1382,
	5, 2168,
	609, 2168,
	661, 2168,
	-2, 3135,
	-1, 1383,
	5, 2169,
	609, 2169,
	661, 2169,
	-2, 3136,
	-1, 1421,
	661, 2676,
	-2, 2667,
	-1, 1422,
	661, 2677,
	-2, 2668,
	-1, 1530,
	203, 3069,
	566, 3069,
	643, 3069,
	663, 3069,
	-2, 0,
	-1, 1535,
	1, 901,
	664, 901,
	667, 901,
	-2, 1767,
	-1, 1582,
	1, 1762,
	664, 1762,
	667, 1762,
	-2, 1767,
	-1, 1684,
	392, 2641,
	454, 2641,
	504, 2641,
	653, 2641,
	-2, 2629,
	-1, 1692,
	203, 170,
	291, 170,
	357, 170,
	618, 170,
	-2, 3064,
	-1, 1693,
	203, 171,
	291, 171,
	357, 171,
	618, 171,
	-2, 2787,
	-1, 1694,
	203, 172,
	291, 172,
	357, 172,
	618, 172,
	-2, 2977,
	-1, 1700,
	665, 2641,
	-2, 2643,
	-1, 1703,
	25, 3001,
	241, 3001,
	-2, 0,
	-1, 1724,
	1, 1606,
	459, 1560,
	504, 1560,
	635, 1560,
	640, 1560,
	660, 1606,
	662, 1606,
	664, 1606,
	667, 1606,
	-2, 1910,
	-1, 1730,
	219, 1706,
	241, 1706,
	470, 1706,
	-2, 0,
	-1, 1798,
	46, 2639,
	-2, 1339,
	-1, 1805,
	1, 1606,
	660, 1606,
	662, 1606,
	664, 1606,
	667, 1606,
	-2, 1910,
	-1, 1808,
	436, 1376,
	608, 1376,
	-2, 481,
	-1, 1814,
	4, 1631,
	21, 1631,
	22, 1631,
	23, 1631,
	24, 1631,
	25, 1631,
	26, 1631,
	27, 1631,
	28, 1631,
	30, 1631,
	31, 1631,
	37, 1631,
	41, 1631,
	43, 1631,
	44, 1631,
	45, 1631,
	47, 1631,
	48, 1631,
	49, 1631,
	50, 1631,
	51, 1631,
	52, 1631,
	53, 1631,
	54, 1631,
	55, 1631,
	57, 1631,
	58, 1631,
	59, 1631,
	60, 1631,
	62, 1631,
	63, 1631,
	64, 1631,
	65, 1631,
	66, 1631,
	67, 1631,
	68, 1631,
	69, 1631,
	73, 1631,
	74, 1631,
	75, 1631,
	76, 1631,
	78, 1631,
	79, 1631,
	80, 1631,
	84, 1631,
	85, 1631,
	86, 1631,
	87, 1631,
	88, 1631,
	89, 1631,
	90, 1631,
	91, 1631,
	94, 1631,
	95, 1631,
	96, 1631,
	97, 1631,
	98, 1631,
	99, 1631,
	101, 1631,
	103, 1631,
	104, 1631,
	105, 1631,
	106, 1631,
	107, 1631,
	108, 1631,
	109, 1631,
	111, 1631,
	112, 1631,
	113, 1631,
	115, 1631,
	116, 1631,
	117, 1631,
	125, 1631,
	126, 1631,
	127, 1631,
	128, 1631,
	129, 1631,
	131, 1631,
	132, 1631,
	133, 1631,
	134, 1631,
	136, 1631,
	137, 1631,
	138, 1631,
	139, 1631,
	141, 1631,
	142, 1631,
	143, 1631,
	144, 1631,
	146, 1631,
	147, 1631,
	148, 1631,
	151, 1631,
	152, 1631,
	153, 1631,
	155, 1631,
	156, 1631,
	157, 1631,
	159, 1631,
	160, 1631,
	161, 1631,
	163, 1631,
	164, 1631,
	165, 1631,
	166, 1631,
	167, 1631,
	168, 1631,
	169, 1631,
	170, 1631,
	171, 1631,
	172, 1631,
	173, 1631,
	174, 1631,
	175, 1631,
	176, 1631,
	177, 1631,
	178, 1631,
	179, 1631,
	180, 1631,
	188, 1631,
	189, 1631,
	190, 1631,
	191, 1631,
	195, 1631,
	197, 1631,
	198, 1631,
	199, 1631,
	201, 1631,
	202, 1631,
	205, 1631,
	206, 1631,
	207, 1631,
	208, 1631,
	209, 1631,
	210, 1631,
	211, 1631,
	212, 1631,
	213, 1631,
	214, 1631,
	215, 1631,
	216, 1631,
	217, 1631,
	218, 1631,
	220, 1631,
	221, 1631,
	223, 1631,
	224, 1631,
	226, 1631,
	227, 1631,
	228, 1631,
	229, 1631,
	230, 1631,
	231, 1631,
	232, 1631,
	233, 1631,
	234, 1631,
	235, 1631,
	236, 1631,
	238, 1631,
	239, 1631,
	240, 1631,
	242, 1631,
	243, 1631,
	244, 1631,
	245, 1631,
	246, 1631,
	251, 1631,
	252, 1631,
	253, 1631,
	256, 1631,
	257, 1631,
	258, 1631,
	259, 1631,
	260, 1631,
	261, 1631,
	263, 1631,
	265, 1631,
	266, 1631,
	267, 1631,
	269, 1631,
	271, 1631,
	272, 1631,
	273, 1631,
	275, 1631,
	279, 1631,
	280, 1631,
	281, 1631,
	282, 1631,
	283, 1631,
	284, 1631,
	285, 1631,
	287, 1631,
	288, 1631,
	289, 1631,
	291, 1631,
	292, 1631,
	293, 1631,
	295, 1631,
	296, 1631,
	299, 1631,
	300, 1631,
	301, 1631,
	302, 1631,
	303, 1631,
	304, 1631,
	305, 1631,
	308, 1631,
	309, 1631,
	310, 1631,
	311, 1631,
	313, 1631,
	314, 1631,
	315, 1631,
	316, 1631,
	317, 1631,
	318, 1631,
	319, 1631,
	320, 1631,
	321, 1631,
	322, 1631,
	323, 1631,
	324, 1631,
	325, 1631,
	326, 1631,
	327, 1631,
	328, 1631,
	329, 1631,
	330, 1631,
	331, 1631,
	332, 1631,
	333, 1631,
	334, 1631,
	335, 1631,
	337, 1631,
	339, 1631,
	340, 1631,
	341, 1631,
	342, 1631,
	343, 1631,
	344, 1631,
	345, 1631,
	346, 1631,
	347, 1631,
	348, 1631,
	349, 1631,
	350, 1631,
	351, 1631,
	352, 1631,
	353, 1631,
	354, 1631,
	355, 1631,
	357, 1631,
	358, 1631,
	362, 1631,
	363, 1631,
	364, 1631,
	365, 1631,
	367, 1631,
	368, 1631,
	369, 1631,
	370, 1631,
	371, 1631,
	374, 1631,
	376, 1631,
	377, 1631,
	379, 1631,
	380, 1631,
	381, 1631,
	384, 1631,
	385, 1631,
	386, 1631,
	388, 1631,
	390, 1631,
	391, 1631,
	392, 1631,
	393, 1631,
	394, 1631,
	395, 1631,
	396, 1631,
	397, 1631,
	398, 1631,
	399, 1631,
	400, 1631,
	401, 1631,
	402, 1631,
	403, 1631,
	405, 1631,
	406, 1631,
	407, 1631,
	408, 1631,
	409, 1631,
	410, 1631,
	411, 1631,
	412, 1631,
	413, 1631,
	414, 1631,
	415, 1631,
	416, 1631,
	417, 1631,
	418, 1631,
	419, 1631,
	421, 1631,
	422, 1631,
	423, 1631,
	425, 1631,
	426, 1631,
	427, 1631,
	428, 1631,
	429, 1631,
	430, 1631,
	431, 1631,
	432, 1631,
	433, 1631,
	434, 1631,
	435, 1631,
	436, 1631,
	437, 1631,
	438, 1631,
	440, 1631,
	442, 1631,
	443, 1631,
	444, 1631,
	450, 1631,
	451, 1631,
	452, 1631,
	454, 1631,
	455, 1631,
	456, 1631,
	457, 1631,
	458, 1631,
	459, 1631,
	460, 1631,
	461, 1631,
	462, 1631,
	463, 1631,
	464, 1631,
	466, 1631,
	467, 1631,
	468, 1631,
	469, 1631,
	470, 1631,
	472, 1631,
	473, 1631,
	474, 1631,
	475, 1631,
	476, 1631,
	477, 1631,
	478, 1631,
	480, 1631,
	481, 1631,
	482, 1631,
	483, 1631,
	484, 1631,
	485, 1631,
	486, 1631,
	487, 1631,
	488, 1631,
	489, 1631,
	490, 1631,
	491, 1631,
	492, 1631,
	493, 1631,
	494, 1631,
	495, 1631,
	497, 1631,
	498, 1631,
	499, 1631,
	500, 1631,
	501, 1631,
	502, 1631,
	504, 1631,
	505, 1631,
	506, 1631,
	507, 1631,
	508, 1631,
	509, 1631,
	510, 1631,
	512, 1631,
	513, 1631,
	514, 1631,
	515, 1631,
	516, 1631,
	517, 1631,
	518, 1631,
	519, 1631,
	521, 1631,
	523, 1631,
	524, 1631,
	525, 1631,
	526, 1631,
	527, 1631,
	528, 1631,
	529, 1631,
	530, 1631,
	531, 1631,
	532, 1631,
	533, 1631,
	534, 1631,
	535, 1631,
	536, 1631,
	537, 1631,
	538, 1631,
	539, 1631,
	540, 1631,
	541, 1631,
	542, 1631,
	543, 1631,
	545, 1631,
	546, 1631,
	548, 1631,
	549, 1631,
	551, 1631,
	552, 1631,
	553, 1631,
	554, 1631,
	555, 1631,
	556, 1631,
	558, 1631,
	559, 1631,
	561, 1631,
	562, 1631,
	563, 1631,
	564, 1631,
	565, 1631,
	567, 1631,
	569, 1631,
	570, 1631,
	571, 1631,
	572, 1631,
	573, 1631,
	574, 1631,
	575, 1631,
	576, 1631,
	578, 1631,
	579, 1631,
	580, 1631,
	581, 1631,
	582, 1631,
	583, 1631,
	584, 1631,
	587, 1631,
	588, 1631,
	589, 1631,
	590, 1631,
	591, 1631,
	592, 1631,
	593, 1631,
	594, 1631,
	595, 1631,
	597, 1631,
	600, 1631,
	601, 1631,
	602, 1631,
	603, 1631,
	604, 1631,
	605, 1631,
	607, 1631,
	608, 1631,
	609, 1631,
	610, 1631,
	611, 1631,
	612, 1631,
	613, 1631,
	614, 1631,
	615, 1631,
	616, 1631,
	617, 1631,
	618, 1631,
	623, 1631,
	624, 1631,
	625, 1631,
	626, 1631,
	627, 1631,
	628, 1631,
	-2, 0,
	-1, 1837,
	1, 727,
	660, 727,
	662, 727,
	664, 727,
	667, 727,
	-2, 1881,
	-1, 1840,
	4, 3178,
	11, 3178,
	12, 3178,
	14, 3178,
	15, 3178,
	16, 3178,
	17, 3178,
	18, 3178,
	19, 3178,
	21, 3178,
	22, 3178,
	23, 3178,
	24, 3178,
	25, 3178,
	26, 3178,
	27, 3178,
	28, 3178,
	30, 3178,
	31, 3178,
	34, 3178,
	35, 3178,
	37, 3178,
	39, 3178,
	41, 3178,
	43, 3178,
	44, 3178,
	45, 3178,
	47, 3178,
	48, 3178,
	49, 3178,
	50, 3178,
	51, 3178,
	52, 3178,
	53, 3178,
	54, 3178,
	55, 3178,
	57, 3178,
	58, 3178,
	59, 3178,
	60, 3178,
	62, 3178,
	63, 3178,
	64, 3178,
	65, 3178,
	66, 3178,
	67, 3178,
	68, 3178,
	69, 3178,
	72, 3178,
	73, 3178,
	74, 3178,
	75, 3178,
	76, 3178,
	78, 3178,
	79, 3178,
	80, 3178,
	81, 3178,
	84, 3178,
	85, 3178,
	86, 3178,
	87, 3178,
	88, 3178,
	89, 3178,
	90, 3178,
	91, 3178,
	92, 3178,
	94, 3178,
	95, 3178,
	96, 3178,
	97, 3178,
	98, 3178,
	99, 3178,
	101, 3178,
	102, 3178,
	103, 3178,
	104, 3178,
	105, 3178,
	106, 3178,
	107, 3178,
	108, 3178,
	109, 3178,
	111, 3178,
	112, 3178,
	113, 3178,
	114, 3178,
	115, 3178,
	116, 3178,
	117, 3178,
	125, 3178,
	126, 3178,
	127, 3178,
	128, 3178,
	129, 3178,
	131, 3178,
	132, 3178,
	133, 3178,
	134, 3178,
	136, 3178,
	137, 3178,
	138, 3178,
	139, 3178,
	141, 3178,
	142, 3178,
	143, 3178,
	144, 3178,
	146, 3178,
	147, 3178,
	148, 3178,
	151, 3178,
	152, 3178,
	153, 3178,
	155, 3178,
	156, 3178,
	157, 3178,
	159, 3178,
	160, 3178,
	161, 3178,
	163, 3178,
	164, 3178,
	165, 3178,
	166, 3178,
	167, 3178,
	168, 3178,
	169, 3178,
	170, 3178,
	171, 3178,
	172, 3178,
	173, 3178,
	174, 3178,
	175, 3178,
	176, 3178,
	177, 3178,
	178, 3178,
	179, 3178,
	180, 3178,
	184, 3178,
	185, 3178,
	186, 3178,
	187, 3178,
	188, 3178,
	189, 3178,
	190, 3178,
	191, 3178,
	194, 3178,
	195, 3178,
	197, 3178,
	198, 3178,
	199, 3178,
	201, 3178,
	202, 3178,
	204, 3178,
	205, 3178,
	206, 3178,
	207, 3178,
	208, 3178,
	209, 3178,
	210, 3178,
	211, 3178,
	212, 3178,
	213, 3178,
	214, 3178,
	215, 3178,
	216, 3178,
	217, 3178,
	218, 3178,
	220, 3178,
	221, 3178,
	223, 3178,
	224, 3178,
	226, 3178,
	227, 3178,
	228, 3178,
	229, 3178,
	230, 3178,
	231, 3178,
	232, 3178,
	233, 3178,
	234, 3178,
	235, 3178,
	236, 3178,
	237, 3178,
	238, 3178,
	239, 3178,
	240, 3178,
	241, 3178,
	242, 3178,
	243, 3178,
	244, 3178,
	245, 3178,
	246, 3178,
	248, 3178,
	249, 3178,
	251, 3178,
	252, 3178,
	253, 3178,
	255, 3178,
	256, 3178,
	257, 3178,
	258, 3178,
	259, 3178,
	260, 3178,
	261, 3178,
	263, 3178,
	265, 3178,
	266, 3178,
	267, 3178,
	268, 3178,
	269, 3178,
	270, 3178,
	271, 3178,
	272, 3178,
	273, 3178,
	274, 3178,
	275, 3178,
	277, 3178,
	278, 3178,
	279, 3178,
	280, 3178,
	281, 3178,
	282, 3178,
	283, 3178,
	284, 3178,
	285, 3178,
	287, 3178,
	288, 3178,
	289, 3178,
	291, 3178,
	292, 3178,
	293, 3178,
	294, 3178,
	295, 3178,
	296, 3178,
	297, 3178,
	299, 3178,
	300, 3178,
	301, 3178,
	302, 3178,
	303, 3178,
	304, 3178,
	305, 3178,
	308, 3178,
	309, 3178,
	310, 3178,
	311, 3178,
	312, 3178,
	313, 3178,
	314, 3178,
	315, 3178,
	316, 3178,
	317, 3178,
	318, 3178,
	319, 3178,
	320, 3178,
	321, 3178,
	322, 3178,
	323, 3178,
	324, 3178,
	325, 3178,
	326, 3178,
	327, 3178,
	328, 3178,
	329, 3178,
	330, 3178,
	331, 3178,
	332, 3178,
	333, 3178,
	334, 3178,
	335, 3178,
	337, 3178,
	338, 3178,
	339, 3178,
	340, 3178,
	341, 3178,
	342, 3178,
	343, 3178,
	344, 3178,
	345, 3178,
	346, 3178,
	347, 3178,
	348, 3178,
	349, 3178,
	350, 3178,
	351, 3178,
	352, 3178,
	353, 3178,
	354, 3178,
	355, 3178,
	357, 3178,
	358, 3178,
	361, 3178,
	362, 3178,
	363, 3178,
	364, 3178,
	365, 3178,
	367, 3178,
	368, 3178,
	369, 3178,
	370, 3178,
	371, 3178,
	374, 3178,
	376, 3178,
	379, 3178,
	380, 3178,
	381, 3178,
	382, 3178,
	384, 3178,
	385, 3178,
	386, 3178,
	388, 3178,
	390, 3178,
	391, 3178,
	392, 3178,
	393, 3178,
	394, 3178,
	395, 3178,
	396, 3178,
	397, 3178,
	398, 3178,
	399, 3178,
	400, 3178,
	401, 3178,
	402, 3178,
	403, 3178,
	405, 3178,
	406, 3178,
	407, 3178,
	408, 3178,
	409, 3178,
	410, 3178,
	411, 3178,
	412, 3178,
	413, 3178,
	414, 3178,
	415, 3178,
	416, 3178,
	417, 3178,
	418, 3178,
	419, 3178,
	421, 3178,
	422, 3178,
	423, 3178,
	425, 3178,
	426, 3178,
	427, 3178,
	428, 3178,
	429, 3178,
	430, 3178,
	431, 3178,
	432, 3178,
	433, 3178,
	434, 3178,
	435, 3178,
	436, 3178,
	437, 3178,
	438, 3178,
	440, 3178,
	442, 3178,
	443, 3178,
	444, 3178,
	450, 3178,
	451, 3178,
	452, 3178,
	453, 3178,
	454, 3178,
	455, 3178,
	456, 3178,
	457, 3178,
	458, 3178,
	459, 3178,
	460, 3178,
	461, 3178,
	462, 3178,
	463, 3178,
	464, 3178,
	466, 3178,
	467, 3178,
	468, 3178,
	469, 3178,
	470, 3178,
	471, 3178,
	472, 3178,
	473, 3178,
	474, 3178,
	475, 3178,
	476, 3178,
	477, 3178,
	478, 3178,
	479, 3178,
	480, 3178,
	481, 3178,
	482, 3178,
	483, 3178,
	484, 3178,
	485, 3178,
	486, 3178,
	487, 3178,
	488, 3178,
	489, 3178,
	490, 3178,
	491, 3178,
	492, 3178,
	493, 3178,
	494, 3178,
	495, 3178,
	497, 3178,
	498, 3178,
	499, 3178,
	500, 3178,
	501, 3178,
	502, 3178,
	504, 3178,
	505, 3178,
	506, 3178,
	507, 3178,
	508, 3178,
	509, 3178,
	510, 3178,
	511, 3178,
	512, 3178,
	513, 3178,
	514, 3178,
	515, 3178,
	516, 3178,
	517, 3178,
	518, 3178,
	519, 3178,
	521, 3178,
	523, 3178,
	524, 3178,
	525, 3178,
	526, 3178,
	527, 3178,
	528, 3178,
	529, 3178,
	530, 3178,
	531, 3178,
	532, 3178,
	533, 3178,
	534, 3178,
	535, 3178,
	536, 3178,
	537, 3178,
	538, 3178,
	539, 3178,
	540, 3178,
	541, 3178,
	542, 3178,
	543, 3178,
	545, 3178,
	546, 3178,
	547, 3178,
	548, 3178,
	549, 3178,
	551, 3178,
	552, 3178,
	553, 3178,
	554, 3178,
	555, 3178,
	556, 3178,
	558, 3178,
	559, 3178,
	561, 3178,
	562, 3178,
	563, 3178,
	564, 3178,
	565, 3178,
	567, 3178,
	569, 3178,
	570, 3178,
	571, 3178,
	572, 3178,
	573, 3178,
	574, 3178,
	575, 3178,
	576, 3178,
	578, 3178,
	579, 3178,
	580, 3178,
	581, 3178,
	582, 3178,
	583, 3178,
	584, 3178,
	587, 3178,
	588, 3178,
	589, 3178,
	590, 3178,
	591, 3178,
	592, 3178,
	593, 3178,
	594, 3178,
	595, 3178,
	597, 3178,
	600, 3178,
	601, 3178,
	602, 3178,
	603, 3178,
	604, 3178,
	605, 3178,
	607, 3178,
	608, 3178,
	609, 3178,
	610, 3178,
	611, 3178,
	612, 3178,
	613, 3178,
	614, 3178,
	615, 3178,
	616, 3178,
	617, 3178,
	618, 3178,
	623, 3178,
	624, 3178,
	625, 3178,
	626, 3178,
	627, 3178,
	628, 3178,
	629, 3178,
	631, 3178,
	641, 3178,
	642, 3178,
	643, 3178,
	644, 3178,
	645, 3178,
	646, 3178,
	648, 3178,
	649, 3178,
	650, 3178,
	651, 3178,
	652, 3178,
	653, 3178,
	654, 3178,
	655, 3178,
	656, 3178,
	659, 3178,
	662, 3178,
	663, 3178,
	665, 3178,
	666, 3178,
	-2, 0,
	-1, 1845,
	203, 3022,
	566, 3022,
	643, 3022,
	663, 3022,
	-2, 0,
	-1, 1893,
	203, 1098,
	-2, 3012,
	-1, 1894,
	203, 1099,
	-2, 2795,
	-1, 1895,
	203, 1100,
	-2, 2963,
	-1, 1896,
	203, 1101,
	-2, 3092,
	-1, 1901,
	427, 1152,
	502, 1152,
	549, 1152,
	571, 1152,
	-2, 0,
	-1, 1912,
	1, 1706,
	241, 1706,
	660, 1706,
	662, 1706,
	664, 1706,
	667, 1706,
	-2, 0,
	-1, 1930,
	1, 1147,
	660, 1147,
	662, 1147,
	664, 1147,
	667, 1147,
	-2, 0,
	-1, 1931,
	1, 1191,
	660, 1191,
	662, 1191,
	664, 1191,
	667, 1191,
	-2, 0,
	-1, 1932,
	1, 1199,
	660, 1199,
	662, 1199,
	664, 1199,
	667, 1199,
	-2, 0,
	-1, 1935,
	1, 1156,
	660, 1156,
	662, 1156,
	664, 1156,
	667, 1156,
	-2, 0,
	-1, 1937,
	1, 1162,
	660, 1162,
	662, 1162,
	664, 1162,
	667, 1162,
	-2, 0,
	-1, 1940,
	1, 1158,
	660, 1158,
	662, 1158,
	664, 1158,
	667, 1158,
	-2, 0,
	-1, 1945,
	1, 1172,
	660, 1172,
	662, 1172,
	664, 1172,
	667, 1172,
	-2, 0,
	-1, 1980,
	1, 3001,
	660, 3001,
	662, 3001,
	663, 3001,
	664, 3001,
	667, 3001,
	-2, 0,
	-1, 1985,
	1, 1255,
	660, 1255,
	662, 1255,
	664, 1255,
	667, 1255,
	-2, 0,
	-1, 2005,
	183, 1924,
	196, 1924,
	298, 1924,
	372, 1924,
	-2, 1862,
	-1, 2107,
	162, 1883,
	183, 1883,
	196, 1883,
	262, 1883,
	298, 1883,
	372, 1883,
	383, 1883,
	585, 1883,
	-2, 2348,
	-1, 2154,
	661, 2170,
	-2, 2160,
	-1, 2171,
	662, 2523,
	-2, 0,
	-1, 2208,
	162, 1883,
	183, 1883,
	196, 1883,
	262, 1883,
	298, 1883,
	372, 1883,
	383, 1883,
	585, 1883,
	-2, 2024,
	-1, 2247,
	663, 2667,
	666, 2667,
	-2, 1282,
	-1, 2248,
	663, 2669,
	666, 2669,
	-2, 1283,
	-1, 2249,
	663, 2668,
	666, 2668,
	-2, 1284,
	-1, 2250,
	666, 2591,
	-2, 1285,
	-1, 2286,
	661, 2171,
	-2, 2159,
	-1, 2303,
	203, 3019,
	663, 3019,
	666, 3019,
	-2, 0,
	-1, 2354,
	1, 903,
	664, 903,
	667, 903,
	-2, 1767,
	-1, 2557,
	241, 323,
	-2, 2675,
	-1, 2558,
	241, 324,
	-2, 388,
	-1, 2676,
	1, 1149,
	660, 1149,
	662, 1149,
	664, 1149,
	667, 1149,
	-2, 0,
	-1, 2677,
	1, 1193,
	660, 1193,
	662, 1193,
	664, 1193,
	667, 1193,
	-2, 0,
	-1, 2678,
	1, 1201,
	660, 1201,
	662, 1201,
	664, 1201,
	667, 1201,
	-2, 0,
	-1, 2679,
	1, 1257,
	660, 1257,
	662, 1257,
	664, 1257,
	667, 1257,
	-2, 0,
	-1, 2721,
	1, 1174,
	660, 1174,
	662, 1174,
	664, 1174,
	667, 1174,
	-2, 0,
	-1, 2744,
	1, 1236,
	660, 1236,
	662, 1236,
	664, 1236,
	667, 1236,
	-2, 0,
	-1, 2794,
	477, 1951,
	478, 1951,
	-2, 2204,
	-1, 2827,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2224,
	-1, 2828,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2225,
	-1, 2829,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2226,
	-1, 2830,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2227,
	-1, 2831,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2228,
	-1, 2832,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2229,
	-1, 2833,
	102, 0,
	277, 0,
	278, 0,
	645, 0,
	646, 0,
	-2, 2230,
	-1, 2834,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2231,
	-1, 2846,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2243,
	-1, 2847,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2244,
	-1, 2848,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2245,
	-1, 2852,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2252,
	-1, 2858,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2256,
	-1, 2860,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2264,
	-1, 2861,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2265,
	-1, 2862,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2266,
	-1, 2863,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2267,
	-1, 3040,
	5, 2679,
	203, 2534,
	661, 2676,
	-2, 2667,
	-1, 3041,
	203, 2535,
	-2, 3108,
	-1, 3042,
	203, 2536,
	-2, 2890,
	-1, 3043,
	203, 2537,
	-2, 2758,
	-1, 3044,
	203, 2538,
	-2, 2823,
	-1, 3045,
	203, 2539,
	-2, 2875,
	-1, 3046,
	203, 2540,
	-2, 3015,
	-1, 3047,
	203, 2541,
	-2, 2331,
	-1, 3142,
	1, 2025,
	2, 2025,
	114, 2025,
	162, 2025,
	183, 2025,
	196, 2025,
	204, 2025,
	222, 2025,
	225, 2025,
	255, 2025,
	262, 2025,
	274, 2025,
	294, 2025,
	298, 2025,
	338, 2025,
	372, 2025,
	377, 2025,
	383, 2025,
	465, 2025,
	471, 2025,
	585, 2025,
	598, 2025,
	620, 2025,
	621, 2025,
	622, 2025,
	632, 2025,
	660, 2025,
	662, 2025,
	664, 2025,
	666, 2025,
	667, 2025,
	-2, 2024,
	-1, 3158,
	661, 2648,
	-2, 2662,
	-1, 3160,
	1, 405,
	620, 405,
	667, 405,
	-2, 1910,
	-1, 3225,
	38, 2679,
	135, 2679,
	643, 2679,
	659, 2679,
	662, 2679,
	663, 2679,
	666, 2679,
	-2, 2676,
	-1, 3226,
	38, 2680,
	135, 2680,
	643, 2680,
	659, 2680,
	662, 2680,
	663, 2680,
	666, 2680,
	-2, 2677,
	-1, 3456,
	1, 1606,
	459, 1560,
	504, 1560,
	635, 1560,
	640, 1560,
	660, 1606,
	662, 1606,
	664, 1606,
	667, 1606,
	-2, 1910,
	-1, 3616,
	1, 1240,
	660, 1240,
	662, 1240,
	664, 1240,
	667, 1240,
	-2, 0,
	-1, 3644,
	378, 1954,
	-2, 3167,
	-1, 3645,
	378, 1955,
	-2, 2998,
	-1, 3649,
	477, 2602,
	478, 2602,
	-2, 2329,
	-1, 3650,
	477, 2606,
	478, 2606,
	-2, 2330,
	-1, 3651,
	477, 2603,
	478, 2603,
	-2, 2329,
	-1, 3652,
	477, 2607,
	478, 2607,
	-2, 2330,
	-1, 3666,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2254,
	-1, 3667,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2258,
	-1, 3673,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2260,
	-1, 3922,
	1, 898,
	660, 898,
	662, 898,
	664, 898,
	667, 898,
	-2, 1767,
	-1, 4149,
	46, 2639,
	-2, 1340,
	-1, 4154,
	1, 1606,
	660, 1606,
	662, 1606,
	664, 1606,
	667, 1606,
	-2, 1910,
	-1, 4268,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2262,
	-1, 4275,
	268, 0,
	270, 0,
	361, 0,
	-2, 2281,
	-1, 4344,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2310,
	-1, 4345,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2311,
	-1, 4346,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2312,
	-1, 4350,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2316,
	-1, 4351,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2317,
	-1, 4352,
	14, 0,
	15, 0,
	16, 0,
	641, 0,
	642, 0,
	643, 0,
	-2, 2318,
	-1, 4404,
	661, 2649,
	-2, 2663,
	-1, 4646,
	663, 3285,
	-2, 1836,
	-1, 4705,
	268, 0,
	270, 0,
	361, 0,
	-2, 2282,
	-1, 4708,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2285,
	-1, 4709,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2287,
	-1, 4838,
	663, 2664,
	-2, 1641,
	-1, 5014,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2286,
	-1, 5015,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 2288,
	-1, 5026,
	268, 0,
	-2, 2321,
	-1, 5230,
	268, 0,
	-2, 2322,
	-1, 5463,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	629, 0,
	644, 0,
	-2, 3130,
}

const sqlPrivate = 57344

const sqlLast = 162165

var sqlAct = [...]int16{
	316, 5660, 3414, 5394, 5681, 1511, 5511, 5276, 5518, 4,
	3809, 5534, 5593, 3531, 3376, 5652, 5462, 5091, 5476, 5449,
	5393, 5345, 1037, 10, 5284, 5607, 4135, 5432, 5408, 4688,
	1036, 6, 5384, 5327, 1239, 202, 2554, 5405, 5477, 4834,
	5478, 5543, 5198, 5175, 1567, 2414, 5162, 4136, 5148, 5474,
	1706, 5424, 1414, 4308, 4971, 5234, 4618, 1425, 4966, 4960,
	4929, 5461, 5096, 1503, 4260, 3949, 4894, 1740, 5001, 3882,
	2804, 3500, 5035, 4638, 4630, 2649, 5181, 2385, 4071, 5312,
	4172, 1502, 4541, 3658, 3952, 3285, 810, 3218, 960, 4835,
	4021, 4815, 2875, 4166, 4976, 4601, 2014, 1404, 2214, 2624,
	2336, 4584, 2261, 3955, 2611, 2814, 4394, 4199, 2598, 1231,
	4201, 3520, 4120, 3072, 885, 4125, 1588, 960, 2647, 5031,
	2423, 3488, 4586, 3936, 4127, 4105, 3551, 3517, 2805, 1287,
	3172, 4124, 4117, 4098, 4097, 3415, 3937, 3938, 3858, 3515,
	1863, 3392, 2645, 202, 4407, 3832, 4744, 3824, 822, 3865,
	3790, 3583, 3546, 3224, 3813, 4687, 3532, 2183, 2473, 2543,
	2541, 923, 1681, 3463, 1040, 3405, 2524, 5519, 3976, 1861,
	2435, 3143, 4118, 310, 2243, 2180, 3849, 3789, 4371, 3135,
	1736, 1735, 2157, 2115, 2811, 3137, 2085, 5235, 3642, 2888,
	3545, 1800, 2595, 2500, 3425, 1031, 1506, 881, 2522, 955,
	1288, 3134, 2496, 2542, 1909, 3284, 2504, 3501, 2402, 2518,
	2406, 309, 1292, 1582, 2334, 1550, 3216, 2953, 1297, 3217,
	3178, 1478, 3115, 3069, 2184, 1405, 2944, 2872, 2384, 1481,
	1488, 2381, 1569, 2793, 2776, 858, 2774, 1708, 3815, 3525,
	1838, 3173, 797, 1796, 2527, 3310, 820, 3309, 2200, 5346,
	1803, 2203, 2594, 1112, 5661, 2374, 4128, 1492, 901, 5429,
	1537, 966, 3270, 1484, 2955, 1455, 2149, 1443, 961, 962,
	1458, 2947, 1408, 2193, 1387, 2925, 3036, 1422, 3084, 3002,
	2099, 3124, 2015, 1945, 1260, 213, 2016, 2775, 866, 2691,
	966, 2777, 2551, 1930, 1829, 1242, 1691, 961, 962, 969,
	1010, 214, 877, 129, 1836, 841, 2532, 5535, 5594, 1565,
	1273, 815, 51, 50, 1765, 48, 39, 37, 35, 1385,
	3696, 2021, 950, 1410, 1581, 1996, 3690, 811, 969, 824,
	1134, 1746, 1562, 894, 897, 4385, 5696, 1011, 4386, 5684,
	3114, 3811, 5670, 4078, 5668, 5667, 2314, 5627, 3114, 3114,
	5625, 5095, 3883, 5472, 5095, 2314, 2314, 2314, 5055, 5054,
	5471, 5063, 2314, 3760, 3761, 115, 3778, 3779, 3780, 5565,
	5520, 5502, 2314, 2563, 5521, 3114, 5500, 5497, 5494, 5459,
	3114, 5498, 5495, 2563, 5458, 1295, 4703, 4181, 2563, 5457,
	5447, 5445, 5053, 3556, 5095, 5095, 2346, 5436, 5435, 5403,
	5367, 5095, 5095, 5095, 3189, 5360, 5359, 5350, 5326, 3114,
	3114, 2563, 2563, 5323, 1235, 5305, 3875, 5095, 125, 4919,
	1032, 5232, 5212, 5177, 5114, 3189, 4663, 4460, 2563, 5113,
	5102, 5101, 5094, 2563, 2563, 5095, 5095, 5060, 5059, 5042,
	5058, 5016, 1546, 2563, 3775, 3189, 4780, 1546, 86, 4986,
	1035, 1034, 4954, 3556, 1388, 1388, 4078, 4953, 2343, 2343,
	4889, 4182, 4862, 2599, 3114, 1224, 3114, 87, 4759, 3899,
	4707, 4654, 4760, 1495, 3189, 4194, 2646, 1420, 4648, 4598,
	4491, 4375, 4194, 4599, 4492, 92, 3893, 4459, 1214, 4400,
	2346, 4460, 2343, 4401, 4398, 4378, 4292, 4288, 4399, 3114,
	2563, 3114, 4193, 1235, 1213, 3705, 4194, 3493, 3902, 3760,
	3761, 3706, 3903, 3808, 3806, 1402, 2343, 3114, 3807, 3801,
	3800, 3751, 3749, 3114, 3114, 3752, 3750, 3210, 101, 3738,
	3736, 1282, 126, 3739, 3114, 1230, 3707, 3555, 3542, 3541,
	3114, 3556, 2634, 2634, 1797, 3249, 3766, 3188, 3086, 3114,
	1294, 3189, 3184, 3170, 1440, 2031, 2032, 3114, 2064, 2065,
	2066, 2075, 2076, 2077, 3162, 3113, 2633, 1450, 2563, 3114,
	2634, 1038, 1391, 4078, 1392, 2563, 2346, 3657, 2068, 2062,
	3114, 2031, 2032, 5368, 56, 5236, 124, 2034, 5227, 1389,
	5215, 3556, 108, 121, 4375, 3085, 2346, 4964, 2081, 4919,
	2343, 4863, 4663, 4600, 4593, 3383, 3269, 2428, 2360, 2562,
	3260, 2340, 3493, 2034, 46, 4067, 2087, 274, 1760, 2313,
	3782, 3402, 3179, 2178, 2327, 2033, 1441, 2346, 1733, 4509,
	4263, 4231, 2201, 2511, 1236, 4183, 2053, 3154, 3153, 3152,
	126, 1911, 3151, 3150, 274, 1393, 2050, 1390, 1223, 1222,
	1221, 2033, 5487, 1220, 1441, 4184, 4978, 1219, 109, 1218,
	1217, 1216, 1417, 1212, 3776, 1211, 1210, 1209, 1208, 1207,
	1206, 276, 2031, 2032, 1205, 2064, 2065, 2066, 2075, 2076,
	2077, 1204, 3609, 1739, 1203, 1202, 1201, 1200, 1199, 1198,
	1197, 1196, 3766, 1195, 1194, 2068, 2062, 3114, 276, 1193,
	1192, 1191, 1190, 1177, 2034, 2950, 1110, 1109, 1108, 1107,
	1106, 1105, 1104, 3760, 3761, 2081, 3778, 3779, 3780, 1103,
	1102, 1101, 1100, 1099, 275, 1098, 1097, 1096, 2056, 2057,
	2058, 2059, 1095, 2087, 1215, 1094, 4702, 1093, 2039, 2315,
	1092, 2312, 2033, 268, 1091, 2084, 1936, 1237, 2315, 2315,
	2315, 275, 269, 2053, 1090, 2315, 1089, 1088, 1087, 1086,
	1085, 1084, 1083, 2050, 2039, 2315, 1082, 1081, 1080, 1079,
	1078, 1077, 1076, 1075, 1074, 1073, 1062, 3760, 3761, 1061,
	1060, 2072, 215, 1055, 2982, 2082, 3695, 1054, 1047, 3760,
	3761, 1046, 2061, 2063, 3775, 1045, 1030, 1029, 1028, 986,
	985, 984, 983, 982, 973, 2951, 972, 971, 1406, 215,
	3776, 970, 2078, 932, 2079, 931, 2343, 892, 113, 891,
	890, 2048, 2049, 2343, 2343, 872, 304, 1416, 303, 302,
	301, 3777, 300, 299, 298, 297, 296, 295, 294, 293,
	292, 2070, 1873, 291, 290, 2056, 2057, 2058, 2059, 1759,
	289, 288, 1854, 3528, 287, 2039, 2054, 286, 285, 1513,
	1297, 284, 283, 282, 281, 280, 279, 278, 277, 4764,
	3775, 4719, 4433, 4390, 4235, 4195, 3861, 211, 3718, 116,
	3804, 3701, 120, 4980, 3692, 3586, 3510, 1297, 1297, 1297,
	3277, 2084, 3473, 2952, 3193, 2949, 3766, 2980, 2072, 1442,
	2343, 2343, 2082, 2343, 3159, 2080, 3277, 3141, 2160, 2061,
	2063, 2966, 2766, 1452, 274, 2159, 2387, 1747, 2964, 2345,
	3085, 1739, 1039, 2227, 4181, 3805, 2069, 2126, 169, 2078,
	2204, 2079, 1441, 2117, 1271, 1997, 1591, 2084, 2048, 2049,
	1748, 1297, 1742, 2346, 1711, 2163, 3493, 1297, 1297, 2343,
	2160, 1513, 3236, 2343, 2340, 1508, 1724, 2159, 2070, 2313,
	3766, 2028, 5486, 2084, 1554, 1555, 1556, 1558, 276, 2769,
	3782, 1424, 3766, 2054, 5483, 5460, 1297, 3777, 1297, 5444,
	1297, 5331, 1754, 5224, 5218, 5216, 5086, 2158, 1711, 5239,
	5030, 4984, 4963, 3772, 3773, 3774, 174, 2060, 4742, 1541,
	3771, 3769, 3770, 3762, 3763, 3764, 3765, 3767, 3768, 4741,
	4735, 3085, 1513, 217, 3776, 4734, 4733, 1805, 4726, 4725,
	4723, 275, 2080, 2055, 1701, 4718, 1401, 4715, 4714, 4597,
	1441, 4611, 2031, 2032, 1711, 4592, 1748, 4434, 4403, 4365,
	268, 1711, 1696, 2069, 4364, 1541, 1748, 4363, 4324, 269,
	1297, 4284, 1297, 212, 2084, 2073, 2062, 1711, 216, 4279,
	3856, 3797, 3788, 1737, 2034, 3759, 1297, 2954, 1297, 202,
	202, 3756, 3755, 4497, 3753, 3760, 3761, 1533, 3776, 1033,
	2124, 3748, 1487, 1491, 3747, 3746, 3743, 108, 3742, 3275,
	3776, 2086, 3741, 2087, 1535, 2084, 1810, 1813, 1499, 3737,
	3717, 3700, 2033, 3693, 3691, 3760, 3761, 3543, 3142, 2937,
	2028, 1748, 274, 2117, 2060, 2118, 2614, 2116, 1711, 2570,
	2027, 5690, 2568, 5615, 5614, 1832, 5533, 5531, 1426, 4310,
	5395, 4612, 5310, 5296, 5292, 5291, 5290, 966, 2713, 1297,
	2055, 1877, 1297, 5270, 2119, 5269, 1722, 3769, 3770, 3762,
	3763, 3764, 3765, 3767, 3768, 5267, 1858, 3512, 5238, 2084,
	1584, 1561, 1678, 1683, 5237, 5210, 276, 4979, 2878, 5196,
	5193, 2084, 2073, 2071, 5192, 969, 4507, 5173, 5172, 1527,
	5110, 3777, 3760, 3761, 1734, 2045, 2046, 2052, 2074, 2051,
	2047, 5081, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 2948, 5028, 5011, 5010, 3888, 1798, 4949, 2086, 1686,
	4727, 1418, 4945, 1753, 274, 2039, 1572, 1573, 4942, 275,
	4920, 2035, 2036, 2037, 2038, 2040, 2041, 3802, 3941, 1519,
	1841, 1843, 1718, 4740, 1878, 3198, 4664, 1564, 268, 4495,
	274, 1574, 1575, 4494, 4475, 3777, 3274, 269, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 4474, 3777, 3766, 4472,
	3274, 3850, 3274, 2181, 4381, 4368, 4274, 2104, 276, 2061,
	2063, 1839, 4196, 4158, 4148, 4047, 3987, 215, 3954, 3722,
	3721, 1297, 3716, 3682, 3487, 3485, 3302, 1297, 3766, 1238,
	2071, 2166, 2165, 2164, 276, 2161, 2155, 2884, 2150, 2148,
	1541, 3156, 2045, 2046, 2052, 2074, 2051, 2047, 3149, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 4612, 3112,
	2993, 275, 1830, 2006, 2962, 2103, 2318, 4280, 2226, 2182,
	2175, 2174, 2173, 2054, 2172, 2171, 274, 3853, 2170, 2169,
	268, 2168, 2167, 3772, 3773, 3774, 274, 275, 1954, 269,
	3771, 3769, 3770, 3762, 3763, 3764, 3765, 3767, 3768, 2156,
	2145, 2144, 2143, 1938, 2142, 3766, 268, 1883, 2141, 2140,
	2139, 2138, 2137, 2136, 2135, 269, 3776, 2106, 2134, 3527,
	2133, 2132, 1853, 2131, 2130, 2119, 2105, 2102, 3511, 2097,
	276, 1526, 126, 1447, 1436, 1297, 1297, 1297, 1872, 5241,
	276, 1297, 5240, 4952, 2002, 215, 3776, 4785, 1422, 274,
	1422, 274, 4711, 1688, 2084, 4432, 3770, 3762, 3763, 3764,
	3765, 3767, 3768, 169, 4397, 1591, 3771, 3769, 3770, 3762,
	3763, 3764, 3765, 3767, 3768, 4384, 3704, 1297, 4865, 3147,
	2249, 1513, 5056, 275, 2981, 4787, 202, 4431, 2274, 2249,
	1902, 1513, 1236, 275, 1513, 1711, 2029, 2084, 2031, 2032,
	1835, 2118, 268, 276, 3191, 276, 3886, 2100, 1939, 3760,
	3761, 269, 268, 4187, 2222, 1518, 274, 1551, 1568, 2007,
	4594, 269, 1568, 2380, 1553, 3990, 3377, 2084, 5606, 5300,
	2034, 1816, 5293, 4261, 2230, 4983, 4905, 1998, 4904, 1566,
	2055, 215, 4903, 4902, 4901, 4864, 2003, 4766, 126, 1568,
	126, 215, 126, 1568, 2190, 1568, 275, 2237, 275, 2011,
	4671, 1513, 4670, 2010, 4669, 1214, 4668, 1297, 2033, 4667,
	276, 2162, 2236, 4666, 2005, 268, 1568, 268, 5479, 4665,
	4461, 1213, 4388, 3777, 269, 4387, 269, 4198, 4197, 4080,
	2242, 1297, 5561, 2187, 2188, 2024, 2025, 2979, 5559, 1591,
	4079, 1552, 4076, 1546, 5475, 1237, 126, 126, 2086, 3328,
	4615, 2965, 1388, 3777, 215, 2204, 215, 5182, 2963, 2486,
	1546, 4037, 126, 275, 126, 2160, 2000, 4532, 2417, 4490,
	3745, 1745, 2159, 1752, 2378, 1758, 3744, 3664, 126, 3313,
	126, 2262, 268, 1549, 1188, 3956, 2151, 2152, 1420, 4605,
	1420, 269, 2128, 966, 1901, 2140, 5219, 5217, 2140, 2366,
	2250, 2252, 966, 2299, 3423, 2232, 2544, 3760, 3761, 2250,
	2252, 2235, 274, 5262, 4138, 274, 4137, 1955, 2666, 2351,
	2352, 215, 1546, 2234, 4455, 5085, 4456, 5263, 2211, 1541,
	274, 969, 2599, 1910, 2202, 5176, 2945, 5263, 5508, 1189,
	969, 4961, 2212, 3552, 4106, 1852, 4909, 1857, 126, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 1911, 2545,
	4072, 1871, 2209, 1876, 4591, 1400, 276, 4538, 4529, 276,
	4500, 4226, 3920, 2734, 2031, 2032, 2643, 5032, 1835, 1236,
	2508, 2578, 4849, 3811, 276, 2328, 2179, 4312, 5673, 5105,
	4846, 5653, 3771, 3769, 3770, 3762, 3763, 3764, 3765, 3767,
	3768, 5077, 3710, 274, 2221, 2220, 2034, 2219, 2217, 2216,
	2215, 2206, 1711, 1711, 3390, 5484, 2125, 2154, 2615, 275,
	4069, 1834, 275, 1591, 2354, 3762, 3763, 3764, 3765, 3767,
	3768, 1937, 2176, 2258, 4155, 2485, 2607, 275, 268, 4068,
	2484, 268, 5499, 3311, 2033, 1809, 1729, 269, 1522, 1711,
	269, 1215, 2428, 1483, 3396, 3379, 268, 276, 5496, 4881,
	2350, 4877, 4177, 274, 2492, 269, 4466, 5285, 3394, 4967,
	1887, 5402, 3399, 1417, 2101, 1417, 3585, 215, 1711, 3959,
	215, 4485, 2520, 3524, 2950, 3465, 1866, 4089, 5562, 2481,
	3766, 2490, 2107, 5485, 5108, 215, 2113, 2501, 3924, 5104,
	5083, 2392, 2528, 2393, 3764, 3765, 3767, 3768, 1236, 2495,
	275, 5563, 2030, 2400, 2401, 4255, 5137, 276, 1953, 1173,
	1553, 2495, 4851, 1711, 4551, 1711, 5141, 1711, 2426, 268,
	2495, 2372, 2371, 1779, 3250, 1568, 2380, 3887, 269, 1241,
	2373, 5683, 1772, 2727, 5598, 1711, 1711, 2367, 2725, 5301,
	1186, 5130, 2555, 2560, 2505, 5116, 1184, 2039, 4912, 1711,
	4911, 4549, 1182, 2422, 5540, 1547, 2355, 1952, 215, 2434,
	275, 1711, 930, 4548, 1711, 1711, 1711, 1711, 2394, 2395,
	927, 2231, 1731, 1553, 2951, 2398, 2399, 966, 4540, 268,
	4515, 3521, 2509, 4074, 4514, 4512, 3273, 1552, 269, 2249,
	4550, 1832, 4511, 2626, 5213, 2626, 4499, 2627, 4458, 4457,
	5153, 2547, 2548, 3271, 4845, 3989, 4095, 2493, 2478, 2205,
	1240, 2208, 1297, 126, 4094, 969, 2456, 4039, 215, 3874,
	2529, 3926, 4847, 3715, 2561, 2549, 2638, 3714, 1416, 5106,
	1416, 4073, 3713, 1179, 3712, 2603, 2608, 3668, 5654, 4051,
	3421, 5078, 3420, 3401, 3389, 4035, 2621, 3381, 3370, 1834,
	1552, 1297, 2375, 3956, 1885, 3369, 3357, 2491, 4595, 864,
	1024, 3346, 2952, 2499, 2949, 3344, 2477, 2474, 864, 1951,
	3339, 2667, 4228, 3338, 3273, 3318, 3317, 2545, 2745, 2084,
	3278, 3171, 2859, 2672, 2641, 2259, 1543, 2629, 1297, 2599,
	1297, 3271, 2534, 2004, 1547, 2534, 2218, 1297, 2537, 2998,
	1297, 2664, 2274, 2274, 1591, 2651, 1297, 1297, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297,
	1297, 1297, 2618, 1297, 2997, 1297, 1297, 1297, 1297, 2582,
	1839, 2631, 1839, 2575, 2533, 3192, 2177, 2533, 2816, 4866,
	2494, 1880, 966, 2697, 2192, 5599, 1783, 3204, 4070, 2250,
	2252, 1297, 2494, 2041, 1548, 1297, 1297, 1025, 2597, 2610,
	2377, 2494, 2786, 1297, 3768, 5541, 1469, 1297, 2623, 1297,
	1297, 1570, 1571, 2773, 4807, 2382, 2383, 1591, 2427, 3334,
	969, 2506, 2657, 1297, 1297, 1297, 1297, 1774, 2737, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 2635, 1527, 2636,
	3332, 2376, 1570, 1571, 2764, 1543, 1570, 1571, 1570, 1571,
	2424, 4036, 3055, 1903, 1234, 2662, 2954, 1544, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 1545, 1297, 1570,
	1571, 1934, 4796, 1297, 2196, 2812, 2813, 2945, 809, 2784,
	5009, 4848, 1536, 3177, 3315, 1422, 2676, 4806, 3257, 2420,
	5154, 1022, 1591, 1021, 1732, 2687, 1822, 2755, 1821, 2698,
	921, 1422, 1999, 2784, 5152, 804, 1995, 1881, 2926, 2927,
	2325, 1820, 5150, 1819, 1791, 2874, 2330, 1297, 1591, 1934,
	2332, 2721, 2926, 2942, 2425, 2199, 1775, 2337, 4830, 863,
	3620, 2339, 5140, 1548, 2874, 2342, 2810, 2488, 863, 3604,
	3559, 2798, 2797, 2782, 2194, 3287, 2677, 1911, 2809, 2990,
	1513, 1236, 3358, 1236, 1233, 3368, 2421, 3762, 3763, 3764,
	3765, 3767, 3768, 1911, 2197, 5149, 4823, 2782, 5601, 3161,
	5562, 3039, 3039, 3053, 4843, 2926, 1950, 1965, 3073, 3075,
	2890, 3186, 3301, 2770, 2772, 202, 3083, 2785, 2771, 2778,
	2948, 2530, 2941, 1933, 1931, 5151, 1544, 1214, 1513, 3174,
	1214, 1214, 2732, 3398, 3923, 1971, 1545, 2744, 2195, 3226,
	2719, 2741, 3181, 2801, 3640, 2678, 2802, 2803, 5161, 2222,
	1547, 3395, 919, 3655, 4824, 3253, 2037, 2038, 2040, 2041,
	3157, 4469, 1418, 3129, 1418, 3393, 1525, 1513, 1513, 3397,
	5631, 1933, 3244, 2758, 2009, 2658, 1969, 3826, 3255, 1899,
	3359, 3360, 3623, 865, 1388, 3201, 2780, 2684, 5481, 5600,
	5278, 3406, 865, 1932, 1237, 3300, 1237, 1546, 3290, 2886,
	2628, 4147, 2742, 5602, 4240, 1235, 1886, 2681, 1591, 3203,
	2531, 3206, 2538, 2882, 2939, 1420, 2257, 2675, 3146, 4496,
	2880, 4239, 3256, 3606, 3350, 5662, 2305, 2954, 3242, 2308,
	2436, 1420, 2743, 3362, 5253, 2992, 3120, 4482, 5252, 2783,
	2994, 2995, 3239, 2996, 3254, 966, 2999, 966, 3000, 3001,
	2726, 3200, 1804, 3121, 5610, 2724, 2440, 2274, 928, 1027,
	1026, 2535, 3202, 2783, 928, 3048, 3035, 3064, 3223, 2211,
	1181, 2198, 3128, 3079, 3133, 3247, 1947, 3139, 3140, 3361,
	928, 1543, 3077, 969, 3929, 969, 3110, 3111, 928, 3122,
	1071, 4910, 126, 2162, 3180, 2757, 2348, 966, 1541, 3126,
	3127, 3654, 4513, 2209, 5574, 3175, 2536, 3272, 3679, 2685,
	5008, 3215, 2856, 1802, 3314, 4510, 4301, 2437, 2382, 2383,
	3367, 2781, 4439, 5280, 5604, 2407, 4438, 2754, 4841, 3622,
	2408, 1180, 1591, 2378, 2378, 969, 1546, 4437, 4426, 1782,
	3677, 1236, 3183, 3279, 1711, 2781, 4844, 4795, 4425, 4576,
	3194, 1236, 2512, 4424, 4232, 1236, 4101, 2519, 3176, 1468,
	3241, 4093, 3619, 4298, 3197, 4480, 4033, 1513, 3229, 1548,
	2151, 2152, 3456, 1215, 3400, 2714, 1215, 1215, 4819, 3345,
	5482, 1487, 3337, 1491, 3234, 4820, 974, 3248, 1297, 1297,
	920, 1297, 3276, 1063, 3208, 3316, 4825, 2765, 3825, 3264,
	1417, 2870, 3212, 3240, 3211, 4830, 5585, 1232, 4007, 2428,
	3321, 4577, 805, 981, 1299, 3233, 1417, 5584, 3289, 3418,
	1064, 1290, 3496, 1513, 3169, 3320, 5321, 5633, 3499, 5548,
	3335, 3391, 1544, 2868, 2876, 2441, 2567, 2566, 3998, 4822,
	3251, 4693, 1545, 4823, 4692, 1966, 4233, 4816, 922, 1236,
	4102, 4299, 918, 2409, 1237, 1711, 3647, 3648, 4826, 1882,
	4925, 4575, 5512, 4175, 2107, 3305, 4814, 1711, 2107, 1711,
	4008, 2413, 4174, 3265, 3266, 1711, 4818, 3267, 3268, 3319,
	2513, 3491, 3621, 5313, 3282, 2426, 1711, 1711, 202, 3508,
	2954, 3292, 3295, 3336, 3674, 2854, 5480, 3365, 5314, 2857,
	3999, 4824, 3371, 1048, 806, 3613, 4842, 2442, 2443, 3407,
	4099, 1808, 3375, 1513, 1884, 1513, 1164, 1993, 3468, 2314,
	4006, 3422, 5451, 3470, 5452, 3675, 3457, 3458, 5608, 3680,
	1053, 3341, 3503, 5315, 2438, 5364, 4031, 4029, 1297, 5286,
	5379, 1228, 5603, 3263, 3354, 3355, 1406, 3670, 4817, 3363,
	3997, 4174, 2410, 2415, 3364, 2853, 966, 3380, 3460, 807,
	3373, 808, 2208, 2768, 3471, 1416, 2873, 3387, 2540, 1711,
	3326, 3327, 3329, 3330, 3331, 3333, 5069, 3943, 4558, 3589,
	4030, 1416, 2439, 4558, 3288, 3562, 3563, 2864, 4556, 4028,
	4027, 3411, 4024, 4556, 969, 2756, 1967, 3570, 3571, 3572,
	3573, 3412, 3413, 2449, 5317, 4821, 3581, 3553, 3466, 2683,
	1297, 2865, 126, 3378, 3557, 2720, 1297, 1297, 2866, 5279,
	3461, 3564, 2871, 3565, 3544, 2954, 4074, 3569, 3160, 5316,
	2539, 1297, 3238, 1804, 3550, 1964, 3537, 3549, 3554, 3925,
	1165, 3971, 1546, 2411, 3560, 862, 2458, 5609, 5318, 3539,
	1963, 2445, 4831, 4832, 3535, 1912, 975, 976, 3492, 2431,
	1730, 1970, 1445, 1065, 1066, 2450, 3547, 2489, 2146, 2535,
	3459, 1524, 2505, 2192, 1297, 1297, 3625, 4560, 3627, 2008,
	1297, 3507, 4560, 3884, 1898, 1900, 1164, 3530, 2468, 5611,
	4939, 2487, 1839, 1297, 1297, 3540, 4084, 2418, 3519, 1297,
	1297, 3538, 3970, 1430, 1968, 1297, 2881, 3578, 1072, 5547,
	2509, 1228, 4559, 2680, 2536, 2448, 4481, 4559, 2444, 2516,
	1432, 2432, 4774, 2674, 3594, 4819, 3596, 3977, 3598, 4775,
	3600, 3601, 4820, 2509, 5526, 4689, 3676, 2418, 5021, 5572,
	5413, 5362, 4883, 4825, 3466, 5527, 3678, 5629, 1427, 5003,
	1297, 1297, 1297, 3610, 3931, 3273, 1297, 2464, 3593, 2416,
	830, 4100, 4032, 2196, 2096, 2427, 1297, 2503, 2936, 2855,
	3671, 2430, 3293, 1049, 1050, 3720, 3125, 3138, 3908, 5634,
	4915, 2514, 1235, 1297, 3979, 4314, 4822, 5617, 4951, 5363,
	4694, 4678, 4773, 2196, 4784, 4562, 1433, 2502, 4427, 1451,
	1170, 1169, 3646, 3944, 3932, 4826, 2446, 1449, 1246, 1917,
	1165, 978, 977, 4257, 2199, 3635, 3638, 4585, 5328, 2461,
	5419, 5344, 5195, 4914, 3703, 1434, 4913, 3637, 3636, 2867,
	4636, 2515, 4162, 2194, 4017, 4015, 2497, 3897, 3348, 2869,
	3374, 2798, 2797, 3641, 2199, 3168, 2593, 2189, 1448, 1166,
	1491, 3656, 1439, 2197, 3978, 796, 5144, 3694, 4610, 3663,
	2019, 2731, 4409, 3123, 3698, 3699, 4690, 2018, 2800, 3702,
	1431, 2425, 2429, 2466, 4738, 5513, 1067, 1068, 1297, 1297,
	1297, 1297, 5103, 2197, 5639, 979, 980, 1297, 1297, 1297,
	3231, 2368, 1297, 5049, 3866, 4518, 3235, 2195, 4016, 5002,
	4557, 2412, 2018, 2498, 3669, 4557, 1297, 1422, 1591, 4087,
	3246, 3349, 2315, 5204, 4088, 2013, 3950, 5260, 126, 4637,
	4410, 126, 4544, 126, 4519, 4467, 5319, 4465, 4940, 2506,
	5546, 4354, 5320, 1297, 4163, 1297, 4153, 3946, 3509, 2467,
	3502, 3818, 3819, 2365, 1422, 1226, 3489, 1164, 4411, 1418,
	2622, 4408, 4821, 2616, 2609, 2601, 2577, 2574, 5329, 5189,
	4419, 4297, 1591, 3410, 4451, 1418, 4417, 2790, 1776, 1460,
	1170, 1169, 1228, 871, 2471, 4369, 126, 1422, 3580, 126,
	1591, 5385, 2017, 3116, 1167, 126, 1051, 1052, 4258, 5347,
	3709, 3277, 1513, 2733, 3595, 2361, 3597, 3322, 3599, 4831,
	4832, 3474, 4418, 3353, 3477, 3799, 3479, 4414, 4695, 4639,
	2274, 5525, 2018, 2663, 1591, 1168, 4972, 2017, 3486, 1166,
	1513, 1470, 1227, 3119, 5168, 5166, 2363, 5080, 4590, 3859,
	2198, 1513, 4415, 3962, 3958, 3185, 3900, 3226, 2274, 3957,
	3661, 3639, 3342, 4383, 3823, 3822, 3820, 2459, 2655, 3830,
	1828, 5004, 3628, 1941, 1940, 3630, 2019, 2644, 2469, 3526,
	2198, 2559, 3526, 2572, 126, 1935, 4420, 3118, 3855, 1297,
	3880, 1165, 3117, 2364, 1172, 2465, 4018, 3167, 3740, 3166,
	3165, 1297, 3351, 3209, 3343, 3164, 1814, 3860, 3163, 1233,
	1826, 2019, 3294, 2417, 1171, 4739, 2391, 1070, 4875, 1513,
	4517, 1795, 1815, 4696, 3945, 2274, 2462, 1420, 1428, 5092,
	3794, 3795, 3796, 2460, 3898, 5638, 5273, 1236, 2096, 2791,
	4930, 2470, 1297, 3245, 3905, 3907, 3298, 2017, 4606, 2417,
	3812, 4473, 2620, 3843, 3868, 3869, 3870, 3871, 1513, 4109,
	3864, 4355, 3842, 3995, 1420, 5170, 3921, 3602, 3852, 4462,
	3829, 3848, 4356, 2428, 1167, 3841, 2525, 3914, 3927, 1513,
	5569, 3844, 3845, 3885, 4010, 3827, 3223, 1513, 5067, 1797,
	1429, 4412, 4014, 966, 5330, 5188, 5065, 1420, 1513, 4413,
	4452, 5064, 3828, 4020, 1918, 1168, 5075, 3323, 3324, 1541,
	3584, 910, 3464, 4229, 4223, 3896, 3895, 2463, 3961, 3894,
	3878, 3966, 1297, 1297, 3968, 3877, 4019, 2508, 3876, 2876,
	1591, 969, 3352, 4038, 3847, 2508, 3558, 3947, 3469, 3851,
	3879, 3467, 1513, 5093, 5169, 2648, 2544, 4062, 3834, 911,
	2107, 1170, 1169, 1890, 4416, 4052, 3992, 5076, 5391, 5274,
	4523, 5088, 1513, 3996, 1172, 5087, 4801, 4082, 4800, 5399,
	5382, 4745, 4372, 2961, 3906, 3867, 3904, 1919, 3953, 5052,
	3974, 4428, 1990, 5421, 1171, 2750, 1992, 5573, 1989, 5571,
	4086, 4025, 3915, 5501, 3911, 5303, 1987, 5294, 5062, 5027,
	1166, 4792, 1959, 3890, 3922, 870, 1957, 1513, 1711, 4737,
	1711, 5473, 1417, 4589, 1591, 1929, 3933, 3934, 4528, 4444,
	3930, 960, 1711, 1711, 3791, 4273, 3226, 4224, 1927, 4221,
	4085, 4040, 1827, 2390, 3892, 3754, 3681, 1925, 3960, 1923,
	1921, 3964, 4011, 1914, 3490, 1908, 4463, 1513, 1906, 1417,
	3388, 1824, 4154, 3835, 3980, 5392, 5275, 3382, 3312, 3199,
	2763, 4077, 2759, 2665, 2654, 1422, 2235, 2639, 2307, 3988,
	2229, 4048, 1825, 2225, 4170, 1994, 4168, 1865, 4001, 1069,
	5156, 4799, 1417, 4005, 3792, 1711, 2723, 2689, 4252, 2553,
	4251, 4242, 2523, 2013, 3608, 3607, 3567, 1711, 2779, 1711,
	1946, 4152, 2692, 2573, 4146, 2306, 3833, 3840, 2304, 2129,
	1879, 1384, 2960, 4884, 4531, 4530, 202, 202, 4516, 4888,
	4861, 5381, 4970, 4893, 4879, 4050, 4876, 4812, 4811, 4635,
	4043, 4625, 4547, 4521, 4049, 1167, 4161, 4488, 4486, 4464,
	4054, 4143, 4056, 4157, 3839, 4060, 4151, 4075, 4104, 4066,
	4107, 4179, 4063, 4139, 3522, 3223, 3514, 4091, 1406, 4083,
	1591, 3365, 3506, 1591, 1225, 2241, 1168, 3498, 926, 4167,
	3483, 3481, 3462, 3237, 3232, 2571, 2569, 1416, 4002, 2752,
	2546, 2510, 4003, 4053, 4004, 2447, 2751, 1991, 3587, 1988,
	3588, 4965, 4190, 2433, 966, 1406, 4428, 1986, 1297, 4164,
	4092, 961, 962, 1958, 2419, 1297, 1297, 1956, 5544, 1297,
	1297, 1297, 3320, 1297, 1416, 4227, 1928, 2347, 4230, 4171,
	4111, 4243, 1297, 2274, 4219, 1172, 4144, 2344, 4096, 1926,
	4150, 1297, 969, 4123, 2341, 4149, 1297, 4217, 1924, 2338,
	1922, 1920, 1591, 4222, 1913, 1171, 1907, 1416, 2333, 1905,
	929, 1297, 1823, 2331, 2326, 4178, 2320, 2316, 4176, 1591,
	4294, 3836, 3837, 3838, 4250, 1420, 1397, 4185, 4220, 2274,
	2274, 1297, 1297, 3547, 1297, 1297, 1297, 4188, 4189, 4249,
	2722, 2688, 3547, 2552, 4064, 1255, 5539, 5456, 3659, 2519,
	2022, 3347, 5563, 1398, 2369, 1297, 2357, 2358, 5272, 1297,
	2762, 2274, 2274, 1297, 1297, 1297, 1297, 1297, 1297, 1297,
	1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297, 1297,
	1297, 1297, 1297, 3631, 1297, 4276, 4259, 3632, 3629, 3455,
	5438, 5338, 1297, 1297, 2274, 4327, 4985, 4328, 4900, 1297,
	4236, 4798, 4237, 3548, 4238, 1183, 1185, 4286, 4287, 3928,
	2760, 2386, 1297, 5206, 1781, 3273, 3299, 3273, 5199, 957,
	4211, 3616, 4647, 1422, 1422, 3182, 2748, 1297, 1768, 2619,
	4256, 1454, 3271, 4367, 3296, 4209, 2262, 202, 126, 126,
	2428, 126, 1984, 1985, 4034, 4202, 2679, 1493, 1494, 2717,
	2712, 5437, 2686, 3660, 4852, 2031, 2032, 4895, 3419, 2761,
	1227, 1904, 1591, 5226, 1563, 5090, 899, 2031, 2032, 4746,
	2023, 3303, 4065, 1399, 4405, 1513, 1513, 4724, 3975, 4283,
	4281, 3304, 2812, 4317, 3325, 2026, 1520, 2356, 1453, 5557,
	4293, 1560, 5509, 1513, 1513, 305, 4561, 3480, 2249, 2034,
	1513, 4622, 3396, 4543, 3226, 2274, 3304, 2274, 4309, 2602,
	1417, 1531, 4366, 4316, 2812, 4333, 126, 126, 3394, 126,
	1494, 3984, 3985, 3403, 3986, 2033, 4325, 1297, 4542, 4090,
	4326, 4300, 4302, 4303, 4213, 4330, 1057, 2033, 1494, 5577,
	4358, 902, 902, 4421, 916, 4332, 1236, 4362, 3386, 793,
	3308, 3384, 3306, 4204, 3901, 1297, 4374, 1962, 3881, 5390,
	5089, 5369, 3385, 5336, 3307, 5332, 5271, 5190, 4359, 4203,
	5187, 3910, 5068, 4998, 4633, 3912, 3913, 4624, 4609, 4156,
	3916, 4304, 3917, 3529, 3918, 3495, 3482, 3080, 1297, 1297,
	2353, 2260, 4447, 5605, 4448, 3372, 4169, 4376, 4377, 4044,
	4045, 1728, 4046, 4087, 4323, 1727, 4087, 1721, 4088, 1229,
	2525, 4088, 5637, 3760, 3761, 2031, 2032, 4087, 4389, 2397,
	3259, 1418, 4088, 1420, 1420, 4392, 5355, 4391, 4212, 5576,
	1739, 4402, 4906, 3223, 2396, 3258, 5334, 2521, 4468, 1739,
	1297, 1297, 2271, 1739, 4524, 3146, 1889, 1738, 1297, 2267,
	4716, 1739, 1888, 4396, 4430, 2956, 1406, 3611, 1418, 1237,
	2991, 4379, 4380, 2397, 2396, 1961, 5516, 4632, 1960, 1711,
	1711, 966, 4440, 126, 126, 1416, 4446, 1711, 2250, 2252,
	1711, 1711, 5191, 5131, 4897, 4892, 4891, 4776, 4772, 4771,
	1711, 1418, 4712, 4686, 4247, 1513, 4429, 4305, 4058, 4055,
	4573, 4501, 3614, 4253, 4505, 2123, 4254, 2122, 3634, 969,
	2767, 4563, 4506, 4508, 5622, 5586, 5442, 5373, 5372, 5371,
	5302, 4568, 5246, 5242, 2274, 5164, 5120, 3873, 5057, 4533,
	5051, 5050, 5048, 5047, 4947, 4924, 4545, 4850, 4786, 4770,
	4769, 4659, 4653, 4596, 4493, 4484, 4476, 4244, 1297, 4160,
	4498, 4621, 4526, 4527, 4159, 3891, 3967, 3909, 3615, 3605,
	3577, 4539, 3576, 3575, 3574, 4581, 3513, 3484, 3297, 1711,
	3228, 3196, 3195, 2885, 2753, 1297, 3320, 4215, 2718, 2711,
	2710, 2709, 4640, 1422, 1297, 1704, 4578, 4579, 2708, 2707,
	2617, 4649, 1711, 4555, 4602, 2588, 2587, 1711, 1711, 1711,
	4574, 2586, 4210, 4205, 4206, 4207, 4208, 2585, 1417, 1417,
	4554, 2584, 2583, 2323, 4565, 2322, 2321, 4564, 2319, 4641,
	2240, 2239, 1711, 1983, 1711, 1982, 1915, 1790, 1789, 1766,
	1711, 1788, 1591, 4552, 4588, 1787, 1786, 1785, 1784, 1780,
	1778, 4617, 3407, 1777, 4214, 1715, 1714, 4583, 1580, 1579,
	4587, 4571, 1578, 1577, 4644, 1576, 1523, 1477, 1476, 4616,
	4627, 4608, 4629, 1475, 1591, 1307, 4582, 1297, 1297, 1474,
	4604, 1473, 4660, 1297, 1297, 2274, 1472, 3953, 1297, 1297,
	4643, 1297, 1847, 1471, 1465, 1464, 1297, 1463, 1462, 1461,
	1379, 2359, 1187, 1178, 5277, 4216, 4829, 1297, 1862, 4828,
	4827, 4656, 2749, 2596, 107, 4620, 1773, 3340, 100, 2517,
	4483, 5510, 5618, 1297, 4623, 4626, 5646, 2579, 312, 312,
	312, 2451, 799, 800, 5423, 816, 799, 816, 828, 4642,
	5422, 869, 4645, 5307, 126, 889, 3213, 4651, 4650, 2317,
	896, 896, 896, 896, 4672, 312, 4697, 4658, 4116, 4675,
	4115, 5515, 2455, 312, 1406, 1406, 5160, 991, 4657, 1892,
	4997, 1140, 4674, 4673, 5420, 1763, 1006, 5401, 3969, 3424,
	4680, 1916, 5184, 1416, 1416, 1044, 1422, 4706, 2693, 3854,
	3148, 5361, 312, 1420, 1422, 4683, 4720, 3535, 1591, 1591,
	3719, 1591, 5233, 4676, 4710, 5020, 2274, 2959, 2127, 4743,
	3547, 3803, 1422, 202, 102, 4698, 4691, 1281, 1329, 4938,
	4937, 4813, 1711, 1711, 4470, 4126, 4934, 4933, 2264, 2266,
	1245, 1594, 4103, 3088, 3090, 5450, 2370, 5628, 2262, 2379,
	2153, 3038, 1306, 1344, 1591, 1301, 1302, 2268, 1305, 1303,
	1304, 2147, 1300, 2263, 4631, 1513, 4685, 4145, 3533, 4751,
	4186, 1833, 1831, 1142, 3859, 3144, 2879, 2943, 3708, 1418,
	2120, 1261, 1297, 1283, 2940, 1446, 1272, 3831, 3810, 4173,
	3081, 4393, 2789, 1422, 1016, 1422, 3757, 2946, 1435, 3061,
	3054, 4736, 3050, 3919, 3523, 2001, 5034, 2098, 4781, 4782,
	4783, 3534, 4778, 4779, 1557, 1265, 2877, 2111, 4762, 3686,
	1513, 4789, 4790, 4791, 2799, 4860, 4794, 4180, 3857, 3190,
	1591, 5431, 1513, 4313, 4839, 1513, 3612, 4869, 2592, 1396,
	4872, 1395, 1444, 4748, 4749, 4836, 1394, 4836, 4750, 4754,
	4756, 4753, 5407, 5404, 799, 799, 2507, 4941, 1297, 4805,
	4763, 1591, 312, 4840, 4121, 3994, 4122, 2362, 3252, 4761,
	2889, 4765, 4140, 1277, 4808, 3590, 3591, 1699, 2738, 4245,
	3816, 4607, 4856, 4857, 1792, 5097, 4009, 3132, 1417, 1289,
	4777, 2083, 4793, 4854, 4013, 3451, 1420, 3450, 5266, 1542,
	4810, 1540, 1539, 1538, 1420, 5595, 3409, 3404, 2526, 4479,
	1711, 1711, 4478, 4477, 3226, 1297, 1297, 4804, 4907, 273,
	3653, 2020, 1420, 2012, 270, 272, 271, 3973, 4406, 3863,
	1891, 5507, 4878, 4503, 4747, 4880, 4108, 4870, 27, 4882,
	903, 904, 4752, 1513, 905, 3262, 2271, 2271, 4955, 4061,
	4855, 2389, 4899, 2267, 2267, 1559, 1591, 4454, 26, 25,
	24, 1711, 23, 130, 28, 49, 30, 29, 5, 4081,
	22, 173, 171, 4449, 4973, 148, 168, 4450, 167, 140,
	166, 165, 164, 4802, 4803, 4922, 1711, 1711, 1711, 1711,
	1711, 1711, 1711, 1420, 163, 1420, 162, 170, 4873, 161,
	160, 155, 4890, 159, 158, 4959, 157, 4962, 126, 156,
	1591, 4974, 4853, 1720, 154, 4956, 2310, 152, 4908, 153,
	147, 151, 1297, 1297, 1297, 150, 4487, 149, 4489, 4918,
	146, 145, 144, 4921, 1406, 143, 4917, 4916, 142, 141,
	1591, 139, 172, 3223, 4932, 1297, 4926, 138, 1297, 1297,
	4958, 4923, 4936, 1416, 4944, 4950, 4948, 137, 1297, 218,
	4977, 2274, 136, 135, 134, 4943, 1297, 1297, 133, 132,
	131, 882, 883, 4896, 4975, 4898, 126, 1418, 1418, 4982,
	68, 1417, 67, 127, 128, 1591, 21, 1711, 47, 1417,
	16, 4628, 4988, 72, 4987, 73, 20, 4968, 15, 42,
	105, 119, 5012, 118, 117, 43, 114, 1417, 5005, 5006,
	41, 19, 18, 1513, 17, 112, 111, 110, 4546, 40,
	4996, 38, 13, 11, 44, 4931, 5007, 4990, 2213, 14,
	7, 4994, 210, 207, 206, 209, 205, 1591, 208, 4999,
	104, 204, 106, 5017, 203, 1297, 103, 36, 12, 198,
	4422, 4423, 5180, 4614, 95, 201, 200, 199, 1297, 4677,
	197, 196, 195, 5029, 192, 96, 93, 1297, 4435, 4436,
	194, 99, 2274, 5023, 5043, 4445, 5044, 98, 1417, 193,
	1417, 94, 1297, 97, 34, 1297, 8, 5045, 5040, 5041,
	71, 9, 5000, 4225, 5074, 122, 123, 45, 91, 90,
	89, 88, 33, 70, 32, 267, 1297, 265, 266, 1297,
	264, 263, 188, 243, 2262, 242, 1591, 5071, 241, 5072,
	126, 5100, 1711, 1297, 240, 1711, 1711, 1406, 239, 238,
	237, 236, 1513, 2271, 235, 1406, 230, 5146, 234, 232,
	2267, 231, 5073, 233, 229, 5079, 1416, 5070, 259, 258,
	257, 256, 255, 2417, 1416, 254, 253, 252, 246, 245,
	251, 250, 5119, 1422, 249, 5123, 248, 247, 244, 5124,
	262, 84, 1416, 228, 227, 226, 224, 220, 223, 225,
	222, 221, 219, 5155, 261, 260, 5136, 5122, 191, 85,
	186, 1591, 187, 83, 1711, 5163, 185, 5179, 5117, 184,
	183, 182, 5171, 181, 180, 179, 82, 5200, 5121, 190,
	189, 31, 2, 1, 0, 4836, 5167, 0, 0, 0,
	0, 5133, 0, 5125, 0, 5109, 0, 0, 2794, 0,
	1766, 1297, 1297, 5174, 0, 0, 5186, 5147, 0, 0,
	0, 0, 5158, 1416, 5201, 1416, 2109, 5165, 1297, 2274,
	2114, 2271, 0, 0, 0, 3683, 3684, 0, 2267, 2600,
	0, 0, 5157, 0, 0, 5142, 5143, 5205, 0, 5159,
	0, 2626, 0, 5185, 1513, 1513, 1513, 5203, 0, 1513,
	1513, 1513, 5178, 1513, 1513, 0, 0, 1437, 126, 5202,
	5183, 0, 0, 0, 0, 0, 5208, 5207, 816, 4977,
	0, 0, 1297, 0, 1297, 0, 1297, 0, 2637, 0,
	0, 0, 816, 5209, 0, 5211, 1422, 0, 312, 0,
	0, 0, 0, 0, 0, 1467, 2650, 2652, 0, 1297,
	5221, 1422, 5197, 0, 0, 0, 312, 1418, 312, 312,
	2656, 1498, 312, 1507, 5222, 5223, 5214, 0, 5261, 0,
	5225, 5231, 5259, 0, 1521, 2668, 2669, 2670, 2671, 0,
	0, 126, 889, 1420, 0, 889, 0, 0, 4836, 0,
	5289, 4886, 0, 0, 0, 4123, 126, 5257, 5254, 3056,
	0, 2274, 0, 4836, 5258, 0, 0, 0, 896, 0,
	0, 0, 0, 1422, 1422, 0, 5288, 0, 0, 0,
	126, 5282, 2262, 0, 0, 5281, 0, 0, 0, 5309,
	0, 0, 0, 0, 1422, 5335, 0, 1422, 0, 0,
	312, 1711, 312, 312, 312, 1498, 0, 312, 312, 0,
	0, 1711, 5324, 5325, 5297, 1507, 5311, 0, 0, 5299,
	3784, 3785, 3786, 3787, 4946, 4836, 4836, 1297, 1297, 312,
	0, 1741, 0, 5341, 0, 0, 5343, 1297, 5306, 4957,
	0, 0, 0, 5304, 0, 0, 4836, 1761, 5308, 4836,
	5322, 5348, 0, 0, 0, 0, 1770, 5333, 0, 0,
	0, 0, 0, 4981, 0, 0, 0, 5340, 0, 0,
	0, 0, 0, 1794, 0, 1507, 5349, 0, 0, 0,
	312, 312, 0, 1498, 5356, 5357, 5353, 5358, 5352, 0,
	0, 5351, 0, 1297, 1297, 0, 1420, 1297, 5366, 5183,
	0, 1711, 1513, 0, 1513, 889, 0, 312, 312, 5370,
	1418, 1420, 5354, 5374, 5375, 5376, 5377, 5378, 1418, 1859,
	5406, 5409, 4572, 5380, 0, 0, 0, 0, 1417, 0,
	1867, 126, 5398, 0, 0, 1044, 1418, 0, 0, 0,
	5365, 5388, 5389, 5430, 0, 0, 5397, 5396, 5434, 0,
	0, 0, 0, 0, 0, 0, 0, 5126, 0, 0,
	0, 5455, 5453, 1297, 1297, 1297, 5415, 0, 0, 0,
	0, 5411, 0, 1420, 1420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5439, 0, 1420, 0, 0, 1420, 0, 5443,
	4797, 5446, 0, 1297, 5454, 0, 5410, 1418, 0, 1418,
	5414, 5488, 0, 0, 5066, 0, 0, 0, 312, 0,
	0, 0, 0, 5470, 5469, 5467, 5468, 1711, 5493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5416, 5522, 2417, 312, 0, 0, 0, 0, 5490,
	0, 0, 0, 0, 0, 5532, 0, 5524, 5491, 0,
	5523, 4682, 0, 5489, 1297, 5536, 0, 0, 5506, 0,
	5530, 2475, 1513, 1513, 0, 5514, 2480, 5517, 0, 0,
	5545, 1417, 0, 0, 5529, 5163, 5528, 5504, 0, 0,
	0, 0, 0, 1416, 0, 0, 1417, 5538, 5537, 5564,
	0, 0, 0, 1589, 0, 0, 0, 0, 0, 5551,
	5552, 0, 0, 0, 1297, 2876, 5433, 5560, 5558, 0,
	0, 0, 5556, 0, 5566, 5406, 0, 5570, 5409, 0,
	5555, 5582, 1422, 5568, 1422, 0, 0, 0, 5589, 0,
	0, 5567, 2428, 5581, 0, 0, 5575, 0, 0, 5580,
	0, 0, 2482, 5591, 0, 5587, 0, 0, 1417, 1417,
	5597, 0, 0, 5588, 0, 0, 5542, 0, 5579, 0,
	0, 5590, 5583, 5592, 1513, 0, 0, 0, 0, 1417,
	0, 0, 1417, 0, 4836, 5613, 4836, 0, 0, 5612,
	0, 0, 0, 0, 5621, 5111, 5112, 0, 0, 2476,
	0, 0, 0, 5620, 5596, 0, 1297, 1297, 0, 0,
	5624, 0, 0, 0, 5632, 1297, 1297, 5630, 0, 0,
	5644, 5623, 5635, 0, 0, 5649, 0, 0, 5648, 5619,
	5650, 5640, 5655, 0, 0, 5659, 5132, 5658, 5134, 5626,
	5135, 10, 5664, 5666, 5663, 5665, 1416, 0, 5669, 6,
	5657, 0, 799, 202, 0, 0, 0, 0, 0, 0,
	126, 1416, 5672, 0, 1513, 5675, 5671, 5674, 5651, 5678,
	0, 5682, 5656, 312, 5676, 312, 5680, 5679, 0, 312,
	5677, 5689, 0, 0, 0, 0, 0, 0, 5685, 0,
	5686, 1297, 1741, 1498, 1507, 312, 5687, 312, 2238, 5692,
	5682, 5698, 5694, 0, 0, 312, 0, 816, 5695, 0,
	5697, 0, 0, 0, 312, 0, 0, 0, 0, 126,
	0, 0, 126, 1416, 1416, 5688, 4859, 5433, 5641, 5642,
	0, 0, 1420, 0, 1420, 5691, 2324, 0, 0, 4868,
	0, 0, 4871, 5295, 1416, 0, 0, 1416, 5061, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 3408, 0, 0, 0, 3760,
	3761, 0, 3778, 3779, 3780, 0, 0, 0, 3643, 0,
	0, 0, 0, 0, 2271, 0, 0, 0, 0, 0,
	889, 2267, 4278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5337, 0, 5693, 5339, 3535, 0, 0, 0,
	0, 2271, 2271, 0, 0, 0, 0, 0, 2267, 2267,
	0, 0, 0, 0, 0, 0, 0, 0, 896, 0,
	896, 0, 4269, 4270, 0, 0, 0, 3535, 2472, 0,
	896, 896, 2883, 0, 0, 4211, 0, 0, 0, 2487,
	3775, 0, 0, 0, 0, 0, 0, 0, 2109, 0,
	4209, 3056, 3056, 0, 126, 0, 2489, 0, 126, 0,
	4202, 0, 0, 0, 0, 0, 0, 1418, 5298, 2271,
	0, 0, 0, 0, 0, 0, 2267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3561, 0, 0, 0,
	2483, 0, 0, 0, 0, 2486, 0, 3568, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 1417, 0, 1417,
	0, 0, 0, 1720, 0, 4334, 4335, 4336, 4337, 4338,
	4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348,
	4349, 4350, 4351, 4352, 4353, 0, 4357, 5440, 0, 0,
	2479, 5441, 3766, 0, 0, 0, 0, 0, 0, 4213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2488, 0,
	3617, 0, 2228, 0, 4203, 312, 0, 2031, 2032, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5243,
	5244, 5245, 0, 0, 5247, 5248, 5249, 0, 5250, 5251,
	0, 2062, 0, 86, 0, 0, 3782, 0, 0, 2034,
	1418, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 87, 0, 0, 1418, 3056, 3056, 3056, 3056,
	0, 0, 0, 4212, 0, 0, 0, 312, 2087, 0,
	92, 0, 0, 0, 0, 0, 0, 2033, 312, 0,
	3776, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	2271, 2485, 1416, 0, 1416, 0, 2484, 2267, 0, 0,
	0, 312, 0, 312, 4200, 0, 0, 799, 0, 312,
	0, 0, 0, 101, 0, 0, 0, 1418, 1418, 0,
	0, 889, 0, 0, 0, 1044, 2407, 0, 0, 0,
	0, 2408, 0, 0, 0, 0, 2388, 0, 1418, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 5145,
	0, 0, 0, 0, 0, 0, 1038, 1498, 312, 0,
	126, 2084, 0, 0, 0, 0, 0, 5503, 0, 56,
	5505, 124, 0, 0, 889, 0, 0, 108, 121, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 2690,
	2039, 0, 0, 0, 312, 0, 312, 0, 312, 0,
	312, 0, 312, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 4215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2728,
	0, 0, 2729, 0, 2730, 0, 0, 4210, 4205, 4206,
	4207, 4208, 0, 109, 2061, 2063, 0, 3777, 0, 312,
	312, 312, 312, 312, 2409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5417, 0, 5418,
	0, 0, 2413, 0, 0, 0, 308, 0, 0, 4214,
	869, 0, 0, 0, 889, 2031, 2032, 2271, 0, 0,
	0, 0, 0, 0, 2267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2054, 2062,
	0, 0, 0, 0, 2407, 0, 0, 2034, 0, 2408,
	2564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4216, 0, 0, 2271, 2271, 0, 0, 0, 0, 0,
	2267, 2267, 0, 0, 0, 0, 2087, 0, 0, 0,
	314, 0, 0, 2410, 2415, 2033, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 2271, 2271, 0, 5643, 0,
	0, 0, 2267, 2267, 0, 2031, 2032, 0, 0, 2891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 2271, 2062,
	0, 0, 0, 113, 0, 2267, 0, 2034, 0, 3772,
	3773, 3774, 0, 0, 0, 0, 3771, 3769, 3770, 3762,
	3763, 3764, 3765, 3767, 3768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 5553, 5554, 0,
	0, 0, 2409, 0, 2411, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 799, 0, 2053, 3082, 0, 0,
	2413, 0, 211, 0, 116, 0, 2050, 120, 2039, 0,
	312, 0, 0, 0, 0, 2055, 1418, 0, 1418, 799,
	0, 0, 0, 0, 0, 0, 312, 0, 799, 0,
	0, 0, 0, 3983, 0, 0, 0, 0, 2418, 274,
	312, 0, 2031, 2032, 0, 0, 0, 1039, 2271, 2271,
	0, 2271, 0, 169, 0, 2267, 2267, 0, 2267, 0,
	312, 1507, 2061, 2063, 0, 4701, 2062, 312, 0, 312,
	1741, 0, 312, 0, 2034, 0, 0, 0, 0, 5616,
	0, 2410, 2415, 2086, 0, 1720, 0, 0, 2056, 2057,
	2058, 2059, 0, 276, 0, 3981, 0, 0, 2039, 0,
	2416, 0, 0, 2087, 0, 0, 0, 0, 1259, 0,
	0, 0, 2033, 0, 0, 0, 312, 1507, 0, 312,
	816, 174, 816, 0, 0, 0, 2054, 0, 0, 312,
	0, 0, 312, 0, 0, 0, 3227, 0, 217, 0,
	0, 0, 312, 312, 0, 3982, 275, 312, 0, 312,
	0, 2815, 2061, 2063, 1498, 0, 312, 312, 0, 1507,
	1507, 3243, 0, 0, 0, 268, 312, 0, 1720, 1720,
	0, 0, 2411, 0, 269, 0, 0, 0, 212, 0,
	0, 2048, 2049, 216, 0, 2042, 2043, 2035, 2036, 2037,
	2038, 2040, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 2084, 3056, 3056,
	896, 896, 0, 0, 896, 896, 2054, 0, 0, 0,
	0, 2405, 0, 3286, 0, 2039, 2418, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 2412, 0, 2957, 0, 0, 86, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 87, 0, 2271, 0,
	0, 0, 0, 4112, 4113, 2267, 0, 0, 0, 2061,
	2063, 0, 0, 2403, 92, 0, 3356, 0, 2416, 0,
	0, 0, 0, 2055, 0, 889, 0, 2084, 0, 0,
	889, 3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056,
	3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056,
	3056, 0, 3056, 0, 0, 0, 312, 101, 0, 0,
	0, 0, 0, 2404, 0, 0, 4192, 0, 0, 0,
	0, 0, 0, 2054, 0, 3158, 3416, 1741, 4218, 0,
	0, 0, 0, 1720, 1720, 1720, 1720, 2060, 0, 0,
	0, 2086, 2458, 0, 0, 0, 0, 0, 0, 0,
	1038, 0, 0, 0, 0, 0, 0, 0, 312, 3472,
	0, 0, 0, 2055, 0, 124, 0, 0, 0, 0,
	0, 108, 121, 2031, 2032, 0, 1252, 0, 0, 2075,
	2076, 2077, 0, 0, 2468, 0, 0, 0, 0, 1741,
	0, 0, 312, 0, 0, 3416, 0, 2062, 0, 2271,
	0, 0, 0, 312, 2084, 2034, 2267, 0, 0, 0,
	2412, 0, 0, 0, 3518, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 3286, 0, 799, 0, 0, 0,
	5026, 2086, 0, 0, 2087, 1044, 3286, 109, 0, 0,
	0, 0, 0, 2033, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 0, 0, 2464, 2053, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	1498, 312, 0, 0, 0, 3261, 0, 0, 0, 0,
	2055, 3592, 312, 0, 0, 0, 1498, 0, 1498, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2461, 0, 5082, 0, 0,
	2271, 0, 0, 0, 0, 0, 0, 2267, 0, 2051,
	2047, 0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 0, 0, 0, 0, 0, 2056, 2057, 2058, 2059,
	312, 312, 312, 312, 1498, 0, 2039, 1498, 2086, 0,
	312, 0, 0, 0, 0, 312, 0, 0, 0, 2466,
	0, 0, 0, 0, 0, 0, 3187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 113, 0, 2072,
	0, 0, 0, 2082, 312, 0, 0, 0, 0, 0,
	2061, 2063, 0, 0, 0, 0, 0, 0, 0, 2457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1459,
	0, 0, 0, 0, 0, 2467, 0, 0, 0, 2048,
	2049, 0, 0, 0, 0, 0, 0, 1482, 0, 1482,
	1482, 0, 0, 925, 0, 0, 211, 0, 116, 2070,
	0, 120, 2035, 2036, 2037, 2038, 2040, 2041, 2454, 0,
	2471, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 1039, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2271, 0,
	5230, 0, 0, 0, 0, 2267, 0, 0, 0, 0,
	2452, 0, 1741, 0, 1684, 1459, 0, 0, 1700, 925,
	0, 0, 0, 2459, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 2469, 2084, 0, 1259, 1259, 1259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2465, 0, 0, 0, 174, 5265, 0, 0, 0,
	2453, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	275, 5287, 2462, 0, 0, 0, 1675, 0, 87, 2460,
	0, 925, 925, 0, 0, 2060, 0, 2470, 0, 268,
	0, 0, 0, 0, 0, 0, 92, 0, 269, 0,
	0, 0, 212, 0, 0, 0, 0, 216, 0, 0,
	4553, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4566, 4567, 0, 0, 0, 0, 0, 215, 0,
	0, 4569, 0, 0, 0, 2271, 0, 0, 0, 101,
	0, 0, 2267, 2073, 0, 0, 0, 0, 0, 0,
	3760, 3761, 312, 3778, 3779, 3780, 0, 0, 0, 0,
	0, 0, 0, 2463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4277, 0, 0, 0, 0, 0, 2086,
	0, 0, 1038, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 799, 56, 0, 124, 0, 799,
	0, 0, 799, 108, 121, 799, 799, 0, 0, 0,
	0, 799, 0, 0, 799, 1720, 1720, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 3775, 0, 4655, 312, 0, 0, 5425, 2650, 4661,
	4662, 0, 0, 0, 0, 312, 2271, 0, 1741, 0,
	0, 0, 0, 2267, 0, 0, 0, 0, 0, 0,
	0, 2071, 3760, 3761, 2458, 3778, 3779, 3780, 0, 109,
	0, 0, 0, 816, 0, 0, 2074, 2051, 2047, 0,
	2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0,
	3760, 3761, 0, 3778, 3779, 3780, 0, 0, 312, 0,
	0, 0, 312, 312, 0, 0, 2468, 0, 1720, 1720,
	1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720,
	1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720, 0, 1720,
	0, 0, 0, 3766, 0, 0, 3286, 3286, 312, 0,
	3939, 3942, 0, 3775, 0, 0, 0, 3286, 0, 2238,
	0, 0, 0, 0, 0, 0, 0, 0, 3286, 2238,
	0, 3286, 2238, 0, 0, 2238, 0, 0, 3939, 0,
	0, 3775, 0, 0, 0, 2464, 0, 0, 0, 0,
	312, 312, 3942, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3942, 0, 312, 0, 3782, 0, 0,
	4012, 3942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2271, 4023, 0, 4023, 0, 0, 113,
	2267, 0, 0, 0, 0, 0, 1498, 2461, 0, 0,
	0, 0, 0, 0, 0, 3766, 0, 0, 0, 0,
	0, 3776, 0, 4767, 4768, 3817, 0, 0, 0, 0,
	3286, 0, 3286, 0, 4059, 3286, 3942, 0, 0, 3286,
	0, 0, 0, 3766, 0, 0, 0, 0, 0, 0,
	0, 0, 5426, 0, 0, 0, 3942, 0, 211, 889,
	116, 2466, 3783, 120, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3782,
	0, 1498, 0, 0, 0, 274, 3056, 3862, 312, 0,
	0, 0, 2084, 1039, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 312, 3782, 0, 4114,
	1482, 0, 4119, 3286, 0, 2271, 312, 2467, 0, 1700,
	0, 3889, 2267, 3776, 1507, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	312, 0, 0, 0, 0, 3518, 0, 0, 1498, 0,
	312, 3776, 2471, 3286, 0, 799, 0, 0, 0, 0,
	0, 0, 3286, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 3056, 0, 0, 0, 0, 3777, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 2650, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 268, 4234, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 212, 2459, 0, 0, 0, 216,
	0, 0, 2084, 0, 0, 4241, 2469, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 1498, 312, 0, 312,
	1844, 1259, 0, 2465, 0, 1498, 0, 0, 1498, 1675,
	0, 0, 3343, 0, 0, 0, 0, 4989, 0, 4991,
	4992, 4993, 0, 4995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2462, 0, 0, 312, 0, 0,
	3777, 2460, 0, 0, 0, 0, 0, 0, 0, 2470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5427, 0, 0, 3760, 3761, 0, 3778, 3779, 3780,
	3772, 3773, 3774, 0, 0, 0, 4311, 3771, 3769, 3770,
	3762, 3763, 3764, 3765, 3767, 3768, 2901, 2902, 2903, 2920,
	2921, 2922, 0, 0, 0, 0, 0, 0, 5046, 0,
	0, 0, 0, 0, 0, 2463, 3056, 2923, 0, 5428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2581,
	0, 3862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 3775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2606,
	0, 0, 3056, 4370, 2913, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 2909, 0, 0, 0, 312, 312,
	0, 2067, 3772, 3773, 3774, 0, 0, 3056, 0, 3771,
	3769, 3770, 3762, 3763, 3764, 3765, 3767, 3768, 0, 0,
	0, 0, 0, 799, 0, 0, 4395, 799, 0, 0,
	3772, 3773, 3774, 0, 0, 799, 0, 3771, 3769, 3770,
	3762, 3763, 3764, 3765, 3767, 3768, 0, 0, 0, 0,
	0, 0, 0, 5138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3766, 0, 0,
	0, 0, 0, 312, 0, 0, 2914, 2915, 2916, 2917,
	0, 0, 0, 0, 0, 0, 2908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4246, 0, 0,
	1589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 2032, 0, 2064,
	2065, 2066, 2075, 2076, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	2062, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 2606, 2739, 2740, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 889, 0, 0, 0, 2918,
	2919, 0, 0, 0, 0, 0, 0, 2087, 0, 4290,
	0, 0, 0, 0, 0, 3776, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4306, 2053, 0, 0,
	4520, 0, 0, 4522, 2911, 0, 4525, 2050, 0, 0,
	0, 0, 0, 0, 4023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 3942,
	0, 312, 0, 2067, 0, 816, 816, 1507, 0, 0,
	1259, 0, 0, 0, 1675, 0, 0, 0, 0, 2056,
	2057, 2058, 2059, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 312, 3518, 0, 0, 3518,
	2238, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 4619, 0, 3416, 0, 0, 312, 0, 0,
	0, 312, 0, 312, 0, 0, 0, 0, 312, 4404,
	0, 0, 2072, 0, 0, 0, 2082, 0, 0, 0,
	0, 0, 3777, 2061, 2063, 0, 0, 3286, 312, 0,
	0, 0, 2650, 0, 0, 0, 0, 0, 0, 1044,
	3286, 2912, 0, 2078, 0, 2079, 0, 1675, 0, 0,
	0, 0, 2048, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 312, 0, 0, 0, 3942, 0,
	0, 3243, 0, 0, 0, 0, 0, 2054, 0, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1459, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 925, 1675, 0,
	1720, 0, 0, 0, 0, 0, 4721, 2069, 0, 0,
	1459, 0, 0, 1459, 0, 0, 0, 0, 2084, 0,
	2067, 0, 0, 1482, 3230, 0, 2067, 0, 1482, 0,
	1482, 0, 2067, 0, 3772, 3773, 3774, 925, 925, 0,
	0, 3771, 3769, 3770, 3762, 3763, 3764, 3765, 3767, 3768,
	0, 0, 0, 2898, 2899, 2900, 2924, 2910, 2904, 0,
	2906, 2907, 2905, 2892, 2893, 2894, 2895, 2896, 2897, 0,
	0, 312, 0, 0, 0, 0, 0, 1741, 2060, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	1507, 1507, 1507, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 2067, 1507, 1507, 1507, 2073, 312, 1507, 0,
	945, 0, 0, 0, 1684, 0, 2067, 0, 0, 0,
	0, 2067, 0, 3286, 3286, 0, 3939, 0, 1675, 4023,
	3286, 943, 0, 0, 0, 0, 0, 0, 4838, 0,
	4838, 1741, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3286, 0, 2238, 946, 0, 0, 3939, 0,
	1741, 1741, 312, 3942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 3942, 1700, 312, 3942,
	0, 312, 4874, 0, 0, 0, 0, 4023, 0, 2067,
	4023, 0, 0, 0, 4023, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 3286, 0, 3286, 312, 954, 0, 0,
	0, 0, 0, 0, 2071, 0, 0, 0, 3416, 1720,
	0, 0, 0, 944, 0, 0, 2045, 2046, 2052, 2074,
	2051, 2047, 0, 2044, 2042, 2043, 2035, 2036, 2037, 2038,
	2040, 2041, 1675, 0, 1720, 0, 0, 4729, 0, 0,
	0, 4728, 0, 0, 2191, 3286, 3286, 0, 0, 0,
	0, 3518, 3518, 0, 0, 0, 86, 0, 3939, 0,
	0, 0, 0, 0, 0, 0, 0, 938, 0, 0,
	0, 312, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 312, 0, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 0, 0, 2067, 2067, 2067, 2067, 2067,
	2067, 2067, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 2067, 101, 0, 4758, 0,
	0, 0, 0, 925, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 2032, 0, 2064, 2065, 2066,
	2075, 2076, 2077, 0, 0, 0, 953, 0, 0, 1038,
	0, 4788, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 56, 0, 124, 0, 2034, 3060, 0, 0,
	108, 121, 1700, 0, 1700, 0, 4395, 2081, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2053, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 2050, 0, 3286, 2238, 935,
	2238, 0, 1244, 4619, 0, 0, 109, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5098, 0, 5098, 0, 0, 0, 0, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4023, 1741, 0, 0, 0, 1741, 0, 1498,
	0, 1259, 0, 0, 863, 0, 0, 2056, 2057, 2058,
	2059, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	949, 0, 0, 0, 0, 0, 3942, 0, 312, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4619, 0, 0, 4838, 0,
	2072, 1741, 0, 0, 2082, 3286, 0, 0, 0, 312,
	0, 2061, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 934, 5194, 0, 0, 0, 0, 947, 0,
	0, 0, 0, 0, 0, 1741, 113, 0, 0, 0,
	2048, 2049, 0, 0, 0, 0, 0, 1589, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 312, 312, 0, 0, 865, 0,
	0, 0, 0, 0, 0, 2054, 0, 5018, 0, 0,
	936, 0, 0, 0, 0, 0, 0, 0, 4311, 0,
	0, 0, 0, 0, 0, 211, 0, 116, 0, 0,
	120, 0, 0, 0, 0, 0, 0, 0, 951, 952,
	0, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5018, 4023, 5256, 0, 0, 0, 0, 0,
	0, 4619, 274, 0, 0, 0, 0, 0, 0, 0,
	1039, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 4838, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4838, 0, 0, 0,
	0, 0, 0, 0, 2815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 816, 0, 174, 0, 2060, 0, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4838, 4838,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 2055, 0, 0, 0, 0, 0, 0, 4838,
	0, 312, 4838, 2815, 0, 0, 0, 0, 268, 0,
	0, 0, 2238, 0, 0, 0, 0, 269, 0, 0,
	0, 212, 1675, 1741, 2073, 1741, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	1675, 0, 0, 1700, 1700, 0, 0, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1507,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5386, 1675, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 5098,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3286, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 1259,
	0, 0, 0, 2067, 0, 307, 307, 795, 0, 0,
	0, 1259, 2071, 0, 0, 0, 2606, 0, 0, 0,
	312, 0, 0, 0, 2045, 2046, 2052, 2074, 2051, 2047,
	0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041,
	0, 0, 0, 0, 4311, 2067, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 2067, 2067, 2067, 2067, 2067, 2067,
	2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067,
	2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067,
	2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067, 2067,
	0, 0, 0, 0, 0, 2067, 0, 2067, 2067, 2067,
	2067, 0, 2031, 2032, 0, 0, 0, 0, 0, 3060,
	3060, 0, 0, 0, 1516, 0, 0, 86, 0, 0,
	1675, 0, 0, 0, 2067, 0, 2062, 0, 0, 4619,
	0, 0, 0, 0, 2034, 0, 87, 0, 0, 0,
	0, 1244, 1244, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 925, 2033, 0, 0, 2067, 0, 3286, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 4838, 0, 4838,
	0, 0, 1741, 2050, 0, 1690, 0, 101, 0, 0,
	0, 1716, 0, 0, 1675, 2067, 0, 0, 2067, 0,
	0, 2067, 0, 0, 2067, 0, 0, 0, 0, 0,
	2067, 2067, 2067, 2067, 2067, 2067, 2067, 0, 0, 0,
	1743, 0, 1749, 0, 1755, 0, 0, 0, 0, 0,
	1038, 0, 2031, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 4272, 0, 0, 124, 3286, 0, 0, 0,
	0, 108, 121, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 3416, 2034, 2056, 2057, 2058, 2059, 0,
	1700, 0, 0, 0, 0, 2039, 0, 3286, 0, 2067,
	0, 0, 3781, 0, 3060, 3060, 3060, 3060, 0, 0,
	2067, 3416, 2067, 2087, 1850, 0, 1855, 2067, 0, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 1874, 2053, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2061,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 2054, 2031, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 2057, 2058, 2059, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 2062, 0,
	0, 0, 1675, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 2061,
	2063, 0, 0, 0, 2084, 2053, 0, 113, 0, 0,
	0, 0, 0, 2031, 2032, 2050, 2064, 2065, 2066, 2075,
	2076, 2077, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	0, 0, 0, 0, 0, 0, 2068, 2062, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 2081, 0, 0, 0,
	0, 2121, 0, 2054, 2060, 0, 211, 0, 116, 0,
	0, 120, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 2053, 0, 0, 2056, 2057, 2058,
	2059, 0, 0, 274, 2050, 0, 0, 2039, 0, 0,
	0, 1039, 1675, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 2086, 0,
	0, 2061, 2063, 0, 0, 0, 0, 0, 0, 2185,
	2185, 2185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 2056, 2057, 2058, 2059,
	2048, 2049, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 217, 0, 2060, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 3031, 3032, 3033,
	3034, 3027, 3028, 3029, 3030, 2054, 0, 0, 0, 268,
	2055, 925, 2067, 2067, 0, 2067, 0, 0, 269, 2072,
	0, 0, 212, 2082, 0, 0, 0, 216, 0, 0,
	2061, 2063, 0, 0, 0, 0, 2051, 2047, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 215, 0,
	2078, 0, 2079, 0, 0, 0, 0, 0, 0, 2048,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 2070,
	0, 0, 0, 0, 0, 0, 2084, 3007, 3008, 3009,
	3010, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 2606, 0,
	0, 3019, 3020, 3021, 3022, 3015, 3016, 3017, 3018, 3023,
	3024, 3025, 3026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 2080, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 1586, 0, 0,
	0, 0, 2055, 0, 1698, 2084, 0, 0, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0,
	0, 0, 0, 0, 0, 3003, 3004, 3005, 3006, 3011,
	3012, 3013, 3014, 2067, 2067, 0, 3060, 3060, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3781, 3781, 0, 0, 2067, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 2060, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2055, 1675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 1849, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 1675, 0, 0, 0, 0, 3060,
	3060, 3060, 3060, 3060, 3060, 3060, 3060, 3060, 3060, 3060,
	3060, 3060, 3060, 3060, 3060, 3060, 3060, 3060, 3060, 0,
	3060, 3781, 3781, 3781, 3781, 0, 0, 0, 0, 2086,
	0, 0, 311, 311, 311, 0, 0, 0, 2051, 2047,
	0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 311,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 967, 0, 925, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 1675, 1675,
	0, 1675, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0,
	2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0,
	0, 0, 0, 0, 3732, 0, 0, 0, 3733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 0,
	0, 0, 2606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 0, 0, 2715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 925, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2746, 0, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 2788, 0, 2792, 0, 0, 0, 2067, 2067,
	0, 2806, 0, 0, 1244, 0, 0, 0, 0, 0,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 0, 2858, 0, 2860,
	2861, 2862, 2863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2223, 0, 0, 0,
	0, 0, 0, 0, 0, 2887, 0, 0, 0, 0,
	0, 0, 2233, 0, 1698, 0, 1675, 2108, 0, 0,
	0, 2938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2968, 2971, 2974,
	2977, 0, 0, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 3052, 1698, 3063, 3065, 3070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 0, 2031, 2032, 0, 2064, 2065,
	2066, 2075, 2076, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 2062,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 1675, 0, 0, 2081, 0,
	0, 2067, 2067, 0, 0, 2067, 3781, 3781, 2067, 0,
	0, 0, 2067, 0, 0, 0, 2087, 0, 0, 2067,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 2053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 1675, 0, 0,
	0, 0, 0, 0, 0, 2067, 2067, 2067, 2067, 2067,
	0, 0, 0, 0, 0, 0, 2067, 0, 2067, 0,
	0, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781,
	3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781,
	3781, 0, 0, 0, 3781, 1259, 0, 2067, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 1675, 0, 2056, 2057,
	2058, 2059, 0, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 2082, 0, 0, 0, 0,
	2067, 0, 2061, 2063, 0, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 2078, 0, 2079, 0, 0, 0, 0, 0,
	0, 2048, 2049, 0, 2590, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 2070, 2613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2054, 0, 2625, 849,
	2625, 0, 0, 0, 0, 0, 2632, 0, 0, 0,
	0, 2067, 2067, 0, 0, 0, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 2660, 0, 0, 0, 0,
	0, 0, 3475, 3476, 0, 3478, 2069, 0, 835, 0,
	311, 0, 311, 311, 0, 0, 311, 2084, 2682, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2699, 0, 2701, 0, 2703, 0, 2705,
	0, 2706, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 2735, 2736, 838, 0,
	0, 0, 0, 0, 311, 0, 311, 311, 311, 0,
	0, 311, 311, 2055, 0, 0, 0, 0, 0, 2031,
	2032, 0, 0, 839, 831, 0, 2067, 2067, 0, 0,
	0, 2067, 2067, 967, 0, 2067, 2067, 0, 0, 0,
	2067, 0, 0, 2062, 2067, 2073, 0, 840, 0, 2067,
	0, 2034, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3603, 0, 3060, 0, 0, 0, 0, 864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 2086, 0, 0, 311, 311, 0, 0, 0, 2033,
	0, 0, 0, 0, 1423, 0, 0, 854, 0, 0,
	2053, 0, 0, 0, 0, 0, 0, 0, 0, 3442,
	2050, 311, 311, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2089, 0, 0, 3432, 3430, 0, 0, 0, 0,
	0, 3060, 3434, 3436, 3426, 1244, 0, 0, 0, 0,
	0, 851, 0, 2071, 0, 0, 0, 0, 0, 4267,
	0, 0, 0, 0, 0, 2045, 2046, 2052, 2074, 2051,
	2047, 0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 0, 2056, 2057, 2058, 2059, 2934, 3452, 3666, 3667,
	2935, 0, 2039, 0, 3673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 311, 3687, 3688, 0, 0, 0, 0, 2938,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	842, 0, 0, 0, 0, 0, 0, 3155, 311, 0,
	0, 0, 0, 0, 2067, 2067, 2061, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 843, 3697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 2049, 0, 0, 0,
	3711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	2054, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 859, 860, 0, 857, 0, 0, 0, 0,
	2067, 2067, 2067, 0, 852, 0, 0, 845, 0, 0,
	3428, 2067, 2067, 3781, 3060, 0, 0, 0, 0, 0,
	2067, 3444, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3443, 3433, 3431, 3435, 3437,
	3427, 3429, 3445, 3447, 0, 846, 0, 853, 0, 0,
	0, 2084, 0, 3439, 3441, 3449, 847, 0, 0, 3781,
	3060, 3070, 3070, 3070, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 2067, 856, 0, 0,
	2185, 0, 0, 0, 2067, 3060, 0, 0, 0, 0,
	3453, 0, 2067, 865, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 2067, 850, 2067, 0, 0, 3821,
	0, 2060, 0, 0, 0, 0, 2067, 0, 833, 0,
	0, 0, 0, 834, 0, 0, 0, 2207, 0, 1419,
	0, 0, 0, 311, 0, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	2207, 311, 0, 0, 0, 0, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 0, 835, 0, 967, 0,
	0, 0, 0, 0, 0, 0, 0, 836, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	837, 0, 0, 311, 0, 2086, 0, 3781, 0, 0,
	0, 0, 311, 0, 0, 0, 3446, 0, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 3781, 1244, 0, 2067, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 3781, 0, 0, 0, 0, 3494,
	0, 839, 831, 0, 0, 0, 0, 0, 0, 0,
	2613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3454, 0, 0, 0, 840, 3972, 0, 0, 0,
	832, 3438, 3440, 2051, 2047, 3448, 2044, 2042, 2043, 2035,
	2036, 2037, 2038, 2040, 2041, 0, 0, 864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3579, 0, 3582, 0,
	0, 0, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075,
	2076, 2077, 0, 0, 0, 0, 4041, 4042, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 2062, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 2081, 0, 0, 851,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 3624, 1698, 3626,
	1698, 0, 0, 2033, 0, 0, 0, 3633, 0, 0,
	0, 0, 0, 2067, 2053, 0, 0, 0, 0, 311,
	0, 0, 0, 967, 2050, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3662, 0, 0, 0, 0, 0, 0, 842, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 862,
	0, 843, 311, 0, 1423, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 2056, 2057, 2058, 2059,
	0, 0, 0, 0, 0, 311, 2039, 311, 0, 0,
	0, 0, 0, 311, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 863, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	859, 860, 0, 857, 0, 1423, 0, 0, 0, 2072,
	0, 0, 852, 2082, 0, 845, 0, 0, 0, 0,
	2061, 2063, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	2078, 0, 2079, 0, 0, 311, 0, 0, 0, 2048,
	2049, 0, 0, 0, 0, 0, 0, 0, 967, 0,
	311, 0, 311, 846, 311, 853, 311, 0, 311, 2070,
	0, 0, 2806, 0, 847, 0, 0, 0, 0, 4264,
	4265, 0, 0, 4268, 2054, 0, 0, 4271, 0, 0,
	848, 0, 0, 0, 0, 856, 4275, 0, 0, 0,
	0, 0, 0, 0, 0, 4282, 0, 0, 0, 0,
	3821, 865, 0, 311, 311, 311, 311, 311, 0, 0,
	0, 0, 0, 850, 0, 4295, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4318, 4319, 0, 4320, 4321,
	4322, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 4329,
	0, 0, 0, 4331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4360, 4361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 4373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1423, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1698, 0, 0, 0, 1419, 2275, 0, 0, 0, 0,
	0, 4453, 1423, 0, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 3935, 0, 0, 0, 4471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 967, 0, 967, 0, 0, 311, 0, 0, 0,
	0, 2071, 0, 4502, 0, 0, 0, 3991, 3993, 0,
	0, 2613, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0,
	2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3735, 0,
	311, 0, 0, 967, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 311, 4534, 4535, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 311, 0, 0,
	0, 311, 0, 311, 0, 0, 0, 0, 0, 0,
	311, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 2062, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 311,
	0, 2033, 2185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2053, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 4141, 0, 0, 0, 311, 0, 2185,
	0, 0, 0, 0, 0, 0, 0, 0, 4652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 2056, 2057, 2058, 2059, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 4699, 4700, 0, 0, 1423, 0, 4704, 4705, 0,
	0, 0, 4708, 4709, 0, 0, 0, 0, 0, 0,
	4713, 0, 967, 0, 0, 0, 0, 0, 0, 0,
	0, 4717, 0, 0, 4248, 0, 1698, 2072, 0, 0,
	0, 2082, 0, 0, 0, 0, 0, 4722, 2061, 2063,
	1423, 0, 1423, 0, 1423, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 2078, 0,
	2079, 0, 1423, 1423, 4262, 0, 0, 2048, 2049, 0,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 1423, 0,
	0, 1423, 1423, 1423, 1423, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	2031, 2032, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 2062, 311, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 311, 0, 0, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 2069, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 2084, 0, 0, 1244, 0, 0, 0,
	0, 2053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 311, 311, 311, 311, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2275,
	2275, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	4266, 0, 4887, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 2057, 2058, 2059, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4927,
	4928, 0, 0, 0, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 2054, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 0, 0, 0, 1423, 5013, 5014, 5015, 0,
	0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044, 2042,
	2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0, 2806,
	0, 0, 5024, 5025, 0, 0, 3734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5033, 5036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 2613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4603, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 4613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 2613, 0,
	2613, 0, 5099, 0, 0, 4634, 0, 0, 0, 0,
	0, 5107, 0, 1419, 0, 0, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 1423, 5115, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2207, 0, 0, 0,
	5127, 0, 0, 5129, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 5139, 0, 967,
	0, 4679, 0, 0, 2275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3089, 0,
	0, 0, 0, 0, 0, 2031, 2032, 0, 2064, 2065,
	2066, 2075, 2076, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 311, 311, 2068, 2062,
	0, 0, 0, 3087, 0, 0, 0, 2034, 3091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3092, 1423, 311, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 2051, 2047, 2053, 2044, 2042, 2043,
	2035, 2036, 2037, 2038, 2040, 2041, 2050, 0, 0, 0,
	0, 0, 3093, 0, 311, 311, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 2207, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 2032, 0, 0, 0, 311,
	0, 3094, 0, 0, 0, 0, 0, 0, 3095, 0,
	0, 0, 0, 0, 0, 0, 5264, 0, 2062, 0,
	5268, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3096, 1423, 0, 0, 0, 0, 0, 2056, 2057,
	2058, 2059, 0, 0, 1423, 2087, 1423, 0, 2039, 0,
	0, 0, 1423, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 1423, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 3097, 0, 2082, 0, 0, 0, 4858,
	0, 0, 2061, 2063, 0, 0, 0, 0, 0, 0,
	0, 3098, 311, 0, 0, 2613, 0, 0, 0, 0,
	0, 3099, 2078, 0, 2079, 0, 0, 0, 0, 0,
	967, 2048, 2049, 0, 3672, 317, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 1423, 3100, 0, 0,
	0, 2070, 2806, 0, 0, 0, 0, 2056, 2057, 2058,
	2059, 5036, 0, 0, 311, 0, 2054, 2039, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 2032, 0, 0, 2080, 0, 0, 1244, 0,
	0, 2061, 2063, 959, 0, 0, 0, 0, 2613, 0,
	0, 0, 0, 0, 0, 2062, 2069, 0, 0, 4969,
	0, 0, 0, 2034, 0, 0, 0, 2084, 3101, 0,
	2048, 2049, 959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 2087, 311, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 2054, 0, 5466, 5466, 5466,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 0, 0, 0, 0, 2060, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	3102, 3103, 0, 0, 0, 0, 0, 5492, 0, 0,
	0, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3109,
	0, 3665, 0, 0, 0, 2073, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3105, 0, 0, 0, 2056, 2057, 2058, 2059, 5466, 0,
	0, 0, 0, 0, 2039, 3106, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 3107, 0, 5084,
	0, 0, 0, 0, 0, 0, 0, 0, 5578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2061, 2063,
	0, 0, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3108, 1419, 1419, 0, 0, 0, 2048, 2049, 0,
	0, 0, 0, 2071, 1423, 1423, 0, 0, 0, 0,
	0, 1308, 0, 0, 0, 2045, 2046, 2052, 2074, 2051,
	2047, 0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 0, 2054, 0, 0, 2613, 0, 0, 0, 0,
	2086, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	5466, 5636, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 313, 313, 313, 967, 0, 0,
	0, 0, 0, 0, 1423, 0, 2625, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 2275, 0, 0,
	0, 1423, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 5220, 1698, 0, 0, 2275, 0, 0, 2051, 2047,
	0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 2275, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 992, 0,
	0, 0, 0, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 2032, 0, 2064, 2065,
	2066, 2075, 2076, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 2086, 2068, 2062,
	0, 0, 0, 0, 0, 0, 994, 2034, 1008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 995, 2087, 1423, 0, 311,
	996, 0, 0, 0, 0, 2033, 0, 0, 5342, 0,
	0, 311, 0, 0, 0, 311, 2053, 311, 0, 0,
	0, 0, 311, 1017, 0, 0, 2050, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 0, 0, 0, 1015, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 2047, 0, 2044, 2042,
	2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0, 0,
	0, 990, 988, 0, 0, 1423, 0, 1423, 0, 0,
	0, 1423, 0, 0, 0, 0, 0, 0, 311, 1423,
	1423, 0, 0, 0, 0, 998, 0, 0, 0, 5400,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 2057,
	2058, 2059, 1019, 0, 0, 0, 0, 864, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 5448, 0, 0,
	0, 2072, 0, 0, 1423, 2082, 1423, 0, 0, 0,
	0, 0, 2061, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 2079, 0, 0, 0, 0, 1018,
	0, 2048, 2049, 0, 0, 0, 0, 0, 0, 1013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 0, 0, 0, 0, 0, 1423, 0, 0,
	1423, 0, 0, 0, 0, 1419, 2054, 0, 0, 0,
	0, 0, 0, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 0, 0,
	0, 1592, 0, 0, 0, 2080, 0, 0, 999, 1712,
	2275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 2069, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 1000, 0, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 2207, 1712, 2207, 0, 2275, 2275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 863, 2275, 2275,
	0, 0, 311, 0, 0, 311, 0, 2060, 0, 1712,
	987, 0, 0, 1009, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 2275, 1712, 2055, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1007, 0, 0, 0, 0, 0,
	1423, 1423, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 1003, 1022, 0,
	1021, 0, 0, 0, 1004, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 1423,
	1005, 2086, 0, 0, 0, 1014, 0, 0, 0, 0,
	0, 1023, 0, 0, 1020, 311, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2275, 0, 2275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 2071, 313, 313, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 2045, 2046, 2052, 2074, 2051,
	2047, 0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 1595, 313, 313,
	313, 0, 0, 313, 313, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1423, 1423, 0, 0,
	0, 0, 0, 0, 1423, 0, 311, 1423, 1423, 1595,
	0, 0, 0, 0, 0, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 313, 0, 0,
	0, 1298, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 2275, 0, 0, 86, 1595, 53, 52, 0, 0,
	0, 0, 1595, 313, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 80, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 92, 311, 0, 0, 0, 1423, 0, 0, 0,
	0, 0, 74, 0, 0, 2248, 0, 0, 0, 55,
	1423, 176, 0, 0, 2248, 0, 0, 0, 0, 1423,
	1712, 0, 2207, 0, 1423, 1423, 1423, 0, 0, 0,
	0, 54, 0, 311, 101, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 1423, 0, 0, 0, 0, 0, 1423, 0, 1423,
	0, 0, 57, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 0, 313, 0, 0, 64, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 311, 311,
	56, 1423, 124, 0, 0, 0, 0, 0, 108, 121,
	313, 0, 2275, 0, 0, 0, 0, 76, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 0, 1423, 1423, 311, 1423, 0,
	0, 0, 0, 2275, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	1423, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 2207, 2207, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2207, 0, 311, 2207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 1712, 0,
	1423, 0, 1423, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 313, 0, 1423, 0, 0,
	0, 0, 60, 0, 0, 0, 1595, 0, 0, 0,
	0, 313, 313, 313, 0, 0, 0, 0, 0, 63,
	0, 313, 0, 1712, 66, 0, 311, 0, 1423, 0,
	313, 0, 0, 0, 78, 0, 1595, 0, 0, 0,
	0, 0, 65, 211, 0, 116, 0, 0, 120, 0,
	0, 0, 0, 0, 61, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 313, 62, 0, 1712, 0,
	1712, 0, 1712, 0, 313, 0, 0, 1423, 1423, 0,
	274, 0, 0, 0, 311, 0, 0, 0, 69, 0,
	1712, 1712, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 1712, 0, 0, 1712,
	1712, 1712, 1712, 1423, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 2248, 0, 0, 0, 0, 0,
	0, 0, 0, 1423, 1423, 1423, 1423, 1423, 1423, 1423,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 1423, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 1423, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 212,
	0, 0, 0, 0, 216, 0, 0, 0, 2275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 3, 0,
	0, 0, 1423, 0, 1423, 0, 0, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2207, 0, 2207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1423, 0, 0, 0, 0, 0,
	0, 313, 0, 1595, 1595, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 1592, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 1423, 313, 0, 0, 0, 0, 1423,
	0, 313, 1423, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 313,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 1595, 1592, 1595, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 1595, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 0, 1423, 0,
	1595, 1423, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 1595, 1595, 1595, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076, 2077,
	313, 0, 313, 0, 313, 0, 313, 0, 313, 0,
	313, 0, 0, 0, 2068, 2062, 2275, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 1713, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 313, 313, 313, 313, 313,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 1423, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 2275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	1423, 1423, 0, 0, 2056, 2057, 2058, 2059, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 1423, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 1713,
	0, 2082, 0, 0, 0, 0, 0, 0, 2061, 2063,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2078, 1712,
	2079, 0, 0, 0, 0, 0, 0, 2048, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 1423, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 313, 0, 313, 0, 0, 313, 0,
	0, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1712, 2084, 1712, 0, 0, 0, 0, 0,
	1712, 0, 313, 0, 0, 313, 0, 0, 0, 0,
	0, 1712, 1712, 0, 0, 313, 0, 0, 313, 0,
	1595, 0, 0, 0, 0, 0, 0, 0, 313, 313,
	0, 0, 0, 313, 1423, 313, 0, 0, 0, 0,
	0, 0, 313, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 1423,
	0, 1423, 0, 0, 0, 0, 1593, 2086, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1595, 0, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044, 2042,
	2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 3730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1593, 0, 0, 0, 0, 0, 86, 0, 53, 52,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 1595, 0, 0, 0,
	0, 55, 0, 176, 0, 0, 0, 0, 1595, 0,
	1595, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 0, 54, 313, 0, 101, 1595, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 313, 0, 0,
	0, 0, 0, 0, 57, 75, 0, 0, 313, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 64,
	0, 0, 0, 0, 5647, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 124, 0, 0, 0, 0, 0,
	108, 121, 0, 1592, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 1713, 1713, 0, 313, 313, 313, 313,
	0, 0, 0, 0, 1593, 0, 313, 0, 0, 0,
	0, 313, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	1713, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 313, 0, 0, 1592, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 1713, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 1713, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 1713, 1713, 1713, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076,
	2077, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 2062, 0, 0, 0,
	0, 63, 0, 0, 2034, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 2081, 78, 0, 0, 0,
	0, 0, 0, 0, 65, 211, 0, 116, 0, 0,
	120, 0, 5513, 2087, 0, 0, 61, 0, 0, 0,
	177, 0, 2033, 0, 0, 1592, 0, 0, 62, 0,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 2050, 0, 1593, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 1595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 1712, 0, 1712, 0, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 959, 1712, 1712, 0,
	0, 0, 0, 0, 174, 2056, 2057, 2058, 2059, 0,
	0, 0, 0, 1595, 79, 2039, 0, 0, 1593, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 313, 0, 0, 0, 0, 0, 269, 2072, 0,
	1712, 212, 2082, 0, 0, 1595, 216, 0, 0, 2061,
	2063, 0, 1712, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 1595, 2078,
	0, 2079, 0, 1593, 0, 0, 0, 0, 2048, 2049,
	0, 0, 0, 0, 313, 0, 0, 0, 313, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 1592, 0, 0, 1592, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 2062, 0, 0, 0,
	0, 0, 2080, 0, 2034, 0, 313, 313, 0, 0,
	313, 0, 0, 0, 0, 2081, 0, 313, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 2087, 2084, 0, 0, 1592, 0, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 2057, 2058, 2059, 0,
	0, 0, 2073, 0, 313, 2039, 0, 0, 0, 1595,
	0, 1595, 0, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 313, 1595, 1595, 0, 0, 1595, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 2072, 0,
	0, 0, 2082, 0, 0, 0, 313, 0, 0, 2061,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 2078,
	0, 2079, 0, 2248, 0, 1713, 1595, 0, 2048, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	1595, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3729, 0, 0,
	0, 1595, 0, 313, 1595, 313, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 313, 2084, 0, 0, 0, 1713, 0,
	1713, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 1712, 0, 0, 0, 0,
	1595, 0, 1712, 0, 2060, 1712, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 2031, 2032, 0,
	2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 2062, 0, 0, 1712, 0, 0, 0, 2086, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 0, 0, 0, 1712, 0, 0,
	0, 0, 1712, 1712, 1712, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 1712, 2053, 1712,
	0, 0, 0, 0, 0, 1712, 0, 1592, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	2071, 0, 0, 0, 0, 1595, 0, 0, 0, 1592,
	0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 2057, 2058, 2059, 0, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 2061, 2063, 0, 0, 0, 0,
	0, 0, 0, 1592, 1592, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 2079, 0, 0, 0,
	0, 0, 0, 2048, 2049, 0, 313, 1712, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 1595, 0, 2070, 0, 0, 0, 0, 1595, 1592,
	0, 1595, 1595, 0, 0, 0, 0, 0, 2054, 0,
	0, 1595, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 1592, 0, 313, 2069, 313,
	0, 0, 0, 1593, 313, 0, 0, 0, 0, 2084,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 1595, 1595,
	1595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 1595, 0, 1595, 0, 0, 0, 2060,
	313, 1595, 0, 1595, 0, 1712, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 1712, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 0, 0,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1595,
	1595, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	1592, 1593, 1712, 1595, 1595, 0, 0, 2045, 2046, 2052,
	2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036, 2037,
	2038, 2040, 2041, 0, 0, 1595, 0, 0, 5387, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 1713, 0, 0, 0, 1593, 0, 0, 313, 0,
	0, 0, 0, 1713, 1713, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 313, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 1595, 0, 0, 0, 0, 1712, 0, 0,
	1712, 1712, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 1595, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 1712,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 313, 0,
	0, 1593, 1595, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 2062, 0, 0, 0,
	0, 1595, 0, 1593, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 0, 0, 1595, 0, 1595, 0,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 2057, 2058, 2059, 0,
	0, 0, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 0, 0,
	0, 0, 0, 1595, 0, 0, 1595, 1595, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 2072, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 2061,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 2078,
	0, 2079, 0, 0, 0, 313, 0, 0, 2048, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 1595, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 2031, 2032, 0,
	2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0, 0,
	313, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 2062, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 2069, 0, 0, 0, 2033, 0, 0,
	0, 0, 1712, 0, 2084, 0, 0, 0, 2053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	1713, 1713, 0, 0, 0, 0, 0, 0, 1713, 0,
	0, 1713, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 313,
	0, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 2057, 2058, 2059, 0, 0, 0, 0, 0, 2087,
	2039, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	1713, 0, 2073, 0, 0, 0, 0, 313, 0, 2053,
	0, 0, 1595, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 1595, 1713, 0, 0, 0, 0, 1713, 1713,
	1713, 0, 0, 2072, 0, 0, 0, 2082, 2086, 0,
	0, 0, 0, 0, 2061, 2063, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 1713, 0, 0, 0, 0,
	0, 1713, 0, 1593, 2078, 0, 2079, 0, 0, 0,
	0, 0, 0, 2048, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 1593, 0, 0, 313, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2054, 0,
	0, 2039, 1595, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0,
	0, 0, 0, 5383, 2072, 0, 313, 2080, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 2084,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 1593,
	1593, 0, 1593, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 0,
	0, 0, 0, 1713, 1713, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 1713, 0, 0, 2071, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2046, 2052,
	2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036, 2037,
	2038, 2040, 2041, 0, 0, 0, 0, 0, 5283, 0,
	0, 0, 0, 0, 2086, 0, 0, 1593, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075,
	2076, 2077, 0, 0, 0, 0, 0, 1713, 1713, 1713,
	1713, 1713, 1713, 1713, 0, 0, 2068, 2062, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 2071, 0, 0, 0,
	0, 1593, 0, 2033, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2053, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2050, 0, 0, 0, 0, 5229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 2056, 2057, 2058, 2059,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	2061, 2063, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 1713, 0, 0, 1713, 1713, 0, 0,
	2078, 0, 2079, 0, 0, 0, 0, 0, 0, 2048,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 1713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0,
	2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0,
	0, 0, 1713, 0, 5228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 1596, 329, 330, 1597, 1598,
	1599, 0, 1600, 739, 1601, 1602, 1603, 331, 1604, 332,
	333, 334, 1362, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 1605, 744, 344,
	345, 346, 347, 348, 349, 350, 1606, 1607, 0, 351,
	745, 746, 747, 1608, 352, 353, 748, 1609, 1676, 1610,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 1611,
	363, 364, 365, 362, 366, 367, 1612, 368, 1713, 369,
	370, 371, 372, 373, 374, 375, 1613, 376, 377, 378,
	1363, 379, 380, 381, 1614, 1615, 1617, 1616, 1618, 1619,
	1620, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 1621, 392, 394, 388, 390, 1622, 393, 391, 395,
	396, 1623, 397, 398, 399, 1624, 1625, 400, 401, 402,
	1626, 403, 404, 405, 1627, 406, 407, 408, 1628, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 1629, 318, 1630,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 1631, 428, 429, 430, 1632, 431, 432, 1633,
	1364, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 1634, 445, 757, 1635, 758,
	446, 1636, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1366, 454, 455, 456, 1637, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	1638, 1365, 762, 465, 548, 466, 763, 764, 1639, 765,
	1640, 467, 468, 470, 1367, 766, 1368, 469, 471, 472,
	1369, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 1641, 481, 483, 482, 1642, 485, 767, 484,
	1370, 486, 487, 1371, 1643, 488, 489, 490, 491, 492,
	493, 496, 1644, 1645, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1372, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1373, 540, 528, 1646, 320, 1374, 542, 543,
	544, 545, 1647, 768, 546, 769, 549, 550, 1648, 0,
	551, 0, 552, 1649, 1650, 554, 555, 556, 1651, 1652,
	557, 558, 770, 1375, 559, 1376, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	1653, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 1654, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 1655, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 1656, 618, 619, 617, 620, 621, 1377, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 1657, 648, 649, 647, 650, 651, 652, 1658,
	653, 778, 654, 634, 635, 655, 656, 1378, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 1659, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	1660, 685, 686, 0, 680, 671, 1661, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 1662, 695, 782, 783,
	784, 785, 1663, 707, 1664, 696, 698, 699, 700, 701,
	786, 702, 787, 1665, 703, 704, 705, 706, 697, 708,
	709, 1666, 1667, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1668, 719, 1669, 0, 720, 721, 722, 788,
	789, 790, 1670, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1671, 1672, 1673, 1674, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 0, 3130, 0, 0, 0, 0,
	0, 0, 0, 0, 3131, 321, 322, 324, 323, 325,
	326, 327, 328, 1596, 329, 330, 1597, 1598, 1599, 0,
	1600, 739, 1601, 1602, 1603, 331, 1604, 332, 333, 334,
	1362, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 1605, 744, 344, 345, 346,
	347, 348, 349, 350, 1606, 1607, 0, 351, 745, 746,
	747, 1608, 352, 353, 748, 1609, 1676, 1610, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 1611, 363, 364,
	365, 362, 366, 367, 1612, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 1613, 376, 377, 378, 1363, 379,
	380, 381, 1614, 1615, 1617, 1616, 1618, 1619, 1620, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 1621,
	392, 394, 388, 390, 1622, 393, 391, 395, 396, 1623,
	397, 398, 399, 1624, 1625, 400, 401, 402, 1626, 403,
	404, 405, 1627, 406, 407, 408, 1628, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 1629, 318, 1630, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	1631, 428, 429, 430, 1632, 431, 432, 1633, 1364, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 1634, 445, 757, 1635, 758, 446, 1636,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 1366, 454, 455, 456, 1637, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 1638, 1365,
	762, 465, 548, 466, 763, 764, 1639, 765, 1640, 467,
	468, 470, 1367, 766, 1368, 469, 471, 472, 1369, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	1641, 481, 483, 482, 1642, 485, 767, 484, 1370, 486,
	487, 1371, 1643, 488, 489, 490, 491, 492, 493, 496,
	1644, 1645, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1372, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1373, 540, 528, 1646, 320, 1374, 542, 543, 544, 545,
	1647, 768, 546, 769, 549, 550, 1648, 0, 551, 0,
	552, 1649, 1650, 554, 555, 556, 1651, 1652, 557, 558,
	770, 1375, 559, 1376, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 1653, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 1654, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 1655, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 1656,
	618, 619, 617, 620, 621, 1377, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	1657, 648, 649, 647, 650, 651, 652, 1658, 653, 778,
	654, 634, 635, 655, 656, 1378, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 1659, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 1660, 685,
	686, 0, 680, 671, 1661, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 1662, 695, 782, 783, 784, 785,
	1663, 707, 1664, 696, 698, 699, 700, 701, 786, 702,
	787, 1665, 703, 704, 705, 706, 697, 708, 709, 1666,
	1667, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	1668, 719, 1669, 0, 720, 721, 722, 788, 789, 790,
	1670, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1671, 1672, 1673, 1674, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 4289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4291,
	321, 322, 324, 323, 325, 326, 327, 328, 1596, 329,
	330, 1597, 1598, 1599, 0, 1600, 739, 1601, 1602, 1603,
	331, 1604, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	1605, 744, 344, 345, 346, 347, 348, 349, 350, 1606,
	1607, 0, 351, 745, 746, 747, 1608, 352, 353, 748,
	1609, 1676, 1610, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 1611, 363, 364, 365, 362, 366, 367, 1612,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 1613,
	376, 377, 378, 1363, 379, 380, 381, 1614, 1615, 1617,
	1616, 1618, 1619, 1620, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 1621, 392, 394, 388, 390, 1622,
	393, 391, 395, 396, 1623, 397, 398, 399, 1624, 1625,
	400, 401, 402, 1626, 403, 404, 405, 1627, 406, 407,
	408, 1628, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	1629, 318, 1630, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 1631, 428, 429, 430, 1632,
	431, 432, 1633, 1364, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 1634, 445,
	757, 1635, 758, 446, 1636, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 1366, 454, 455, 456,
	1637, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 1638, 1365, 762, 465, 548, 466, 763,
	764, 1639, 765, 1640, 467, 468, 470, 1367, 766, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 1641, 481, 483, 482, 1642,
	485, 767, 484, 1370, 486, 487, 1371, 1643, 488, 489,
	490, 491, 492, 493, 496, 1644, 1645, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1646, 320,
	1374, 542, 543, 544, 545, 1647, 768, 546, 769, 549,
	550, 1648, 0, 551, 0, 552, 1649, 1650, 554, 555,
	556, 1651, 1652, 557, 558, 770, 1375, 559, 1376, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 1653, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 1654,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 1655, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 1656, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 1657, 648, 649, 647, 650,
	651, 652, 1658, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 1659, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 1660, 685, 686, 0, 680, 671, 1661,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 1662,
	695, 782, 783, 784, 785, 1663, 707, 1664, 696, 698,
	699, 700, 701, 786, 702, 787, 1665, 703, 704, 705,
	706, 697, 708, 709, 1666, 1667, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1668, 719, 1669, 0, 720,
	721, 722, 788, 789, 790, 1670, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1671, 1672,
	1673, 1674, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4757, 321,
	322, 324, 323, 325, 326, 327, 328, 1596, 329, 330,
	1597, 1598, 1599, 0, 1600, 739, 1601, 1602, 1603, 331,
	1604, 332, 333, 334, 1362, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 1605,
	744, 344, 345, 346, 347, 348, 349, 350, 1606, 1607,
	0, 351, 745, 746, 747, 1608, 352, 353, 748, 1609,
	1676, 1610, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 1611, 363, 364, 365, 362, 366, 367, 1612, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 1613, 376,
	377, 378, 1363, 379, 380, 381, 1614, 1615, 1617, 1616,
	1618, 1619, 1620, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 1621, 392, 394, 388, 390, 1622, 393,
	391, 395, 396, 1623, 397, 398, 399, 1624, 1625, 400,
	401, 402, 1626, 403, 404, 405, 1627, 406, 407, 408,
	1628, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 1629,
	318, 1630, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 1631, 428, 429, 430, 1632, 431,
	432, 1633, 1364, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 1634, 445, 757,
	1635, 758, 446, 1636, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1366, 454, 455, 456, 1637,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 1638, 1365, 762, 465, 548, 466, 763, 764,
	1639, 765, 1640, 467, 468, 470, 1367, 766, 1368, 469,
	471, 472, 1369, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 1641, 481, 483, 482, 1642, 485,
	767, 484, 1370, 486, 487, 1371, 1643, 488, 489, 490,
	491, 492, 493, 496, 1644, 1645, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1372, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1373, 540, 528, 1646, 320, 1374,
	542, 543, 544, 545, 1647, 768, 546, 769, 549, 550,
	1648, 0, 551, 0, 552, 1649, 1650, 554, 555, 556,
	1651, 1652, 557, 558, 770, 1375, 559, 1376, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 1653, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 1654, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 1655, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 1656, 618, 619, 617, 620, 621, 1377,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 1657, 648, 649, 647, 650, 651,
	652, 1658, 653, 778, 654, 634, 635, 655, 656, 1378,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	1659, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 1660, 685, 686, 0, 680, 671, 1661, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 1662, 695,
	782, 783, 784, 785, 1663, 707, 1664, 696, 698, 699,
	700, 701, 786, 702, 787, 1665, 703, 704, 705, 706,
	697, 708, 709, 1666, 1667, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1668, 719, 1669, 0, 720, 721,
	722, 788, 789, 790, 1670, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1671, 1672, 1673,
	1674, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4755, 321, 322,
	324, 323, 325, 326, 327, 328, 1596, 329, 330, 1597,
	1598, 1599, 0, 1600, 739, 1601, 1602, 1603, 331, 1604,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 1605, 744,
	344, 345, 346, 347, 348, 349, 350, 1606, 1607, 0,
	351, 745, 746, 747, 1608, 352, 353, 748, 1609, 1676,
	1610, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	1611, 363, 364, 365, 362, 366, 367, 1612, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 1613, 376, 377,
	378, 1363, 379, 380, 381, 1614, 1615, 1617, 1616, 1618,
	1619, 1620, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 1621, 392, 394, 388, 390, 1622, 393, 391,
	395, 396, 1623, 397, 398, 399, 1624, 1625, 400, 401,
	402, 1626, 403, 404, 405, 1627, 406, 407, 408, 1628,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 1629, 318,
	1630, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 1631, 428, 429, 430, 1632, 431, 432,
	1633, 1364, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 1634, 445, 757, 1635,
	758, 446, 1636, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1366, 454, 455, 456, 1637, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 1638, 1365, 762, 465, 548, 466, 763, 764, 1639,
	765, 1640, 467, 468, 470, 1367, 766, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 1641, 481, 483, 482, 1642, 485, 767,
	484, 1370, 486, 487, 1371, 1643, 488, 489, 490, 491,
	492, 493, 496, 1644, 1645, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1646, 320, 1374, 542,
	543, 544, 545, 1647, 768, 546, 769, 549, 550, 1648,
	0, 551, 0, 552, 1649, 1650, 554, 555, 556, 1651,
	1652, 557, 558, 770, 1375, 559, 1376, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 1653, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 1654, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 1655, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 1656, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 1657, 648, 649, 647, 650, 651, 652,
	1658, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 1659,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 1660, 685, 686, 0, 680, 671, 1661, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 1662, 695, 782,
	783, 784, 785, 1663, 707, 1664, 696, 698, 699, 700,
	701, 786, 702, 787, 1665, 703, 704, 705, 706, 697,
	708, 709, 1666, 1667, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1668, 719, 1669, 0, 720, 721, 722,
	788, 789, 790, 1670, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1671, 1672, 1673, 1674,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5019, 321, 322, 324, 323, 325, 326, 327, 328, 1596,
	329, 330, 1597, 1598, 1599, 0, 1600, 739, 1601, 1602,
	1603, 331, 1604, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 1605, 744, 344, 345, 346, 347, 348, 349, 350,
	1606, 1607, 0, 351, 745, 746, 747, 1608, 352, 353,
	748, 1609, 1676, 1610, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 1611, 363, 364, 365, 362, 366, 367,
	1612, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	1613, 376, 377, 378, 1363, 379, 380, 381, 1614, 1615,
	1617, 1616, 1618, 1619, 1620, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 1621, 392, 394, 388, 390,
	1622, 393, 391, 395, 396, 1623, 397, 398, 399, 1624,
	1625, 400, 401, 402, 1626, 403, 404, 405, 1627, 406,
	407, 408, 1628, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 1629, 318, 1630, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 1631, 428, 429, 430,
	1632, 431, 432, 1633, 1364, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 1634,
	445, 757, 1635, 758, 446, 1636, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 1366, 454, 455,
	456, 1637, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 1638, 1365, 762, 465, 548, 466,
	763, 764, 1639, 765, 1640, 467, 468, 470, 1367, 766,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 1641, 481, 483, 482,
	1642, 485, 767, 484, 1370, 486, 487, 1371, 1643, 488,
	489, 490, 491, 492, 493, 496, 1644, 1645, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 1646,
	320, 1374, 542, 543, 544, 545, 1647, 768, 546, 769,
	549, 550, 1648, 0, 551, 0, 552, 1649, 1650, 554,
	555, 556, 1651, 1652, 557, 558, 770, 1375, 559, 1376,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 1653, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	1654, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 1655,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 1656, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 1657, 648, 649, 647,
	650, 651, 652, 1658, 653, 778, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 1659, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 1660, 685, 686, 0, 680, 671,
	1661, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	1662, 695, 782, 783, 784, 785, 1663, 707, 1664, 696,
	698, 699, 700, 701, 786, 702, 787, 1665, 703, 704,
	705, 706, 697, 708, 709, 1666, 1667, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1668, 719, 1669, 0,
	720, 721, 722, 788, 789, 790, 1670, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1671,
	1672, 1673, 1674, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4867, 321, 322, 324, 323, 325, 326,
	327, 328, 1596, 329, 330, 1597, 1598, 1599, 0, 1600,
	739, 1601, 1602, 1603, 331, 1604, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 1605, 744, 344, 345, 346, 347,
	348, 349, 350, 1606, 1607, 0, 351, 745, 746, 747,
	1608, 352, 353, 748, 1609, 1676, 1610, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 1611, 363, 364, 365,
	362, 366, 367, 1612, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 1613, 376, 377, 378, 1363, 379, 380,
	381, 1614, 1615, 1617, 1616, 1618, 1619, 1620, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 1621, 392,
	394, 388, 390, 1622, 393, 391, 395, 396, 1623, 397,
	398, 399, 1624, 1625, 400, 401, 402, 1626, 403, 404,
	405, 1627, 406, 407, 408, 1628, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 1629, 318, 1630, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 1631,
	428, 429, 430, 1632, 431, 432, 1633, 1364, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 1634, 445, 757, 1635, 758, 446, 1636, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	1366, 454, 455, 456, 1637, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 1638, 1365, 762,
	465, 548, 466, 763, 764, 1639, 765, 1640, 467, 468,
	470, 1367, 766, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 1641,
	481, 483, 482, 1642, 485, 767, 484, 1370, 486, 487,
	1371, 1643, 488, 489, 490, 491, 492, 493, 496, 1644,
	1645, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1646, 320, 1374, 542, 543, 544, 545, 1647,
	768, 546, 769, 549, 550, 1648, 0, 551, 0, 552,
	1649, 1650, 554, 555, 556, 1651, 1652, 557, 558, 770,
	1375, 559, 1376, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 1653, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 1654, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 1655, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 1656, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 1657,
	648, 649, 647, 650, 651, 652, 1658, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 1659, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 1660, 685, 686,
	0, 680, 671, 1661, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 1662, 695, 782, 783, 784, 785, 1663,
	707, 1664, 696, 698, 699, 700, 701, 786, 702, 787,
	1665, 703, 704, 705, 706, 697, 708, 709, 1666, 1667,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1668,
	719, 1669, 0, 720, 721, 722, 788, 789, 790, 1670,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1671, 1672, 1673, 1674, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4681, 321, 322, 324,
	323, 325, 326, 327, 328, 1596, 329, 330, 1597, 1598,
	1599, 0, 1600, 739, 1601, 1602, 1603, 331, 1604, 332,
	333, 334, 1362, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 1605, 744, 344,
	345, 346, 347, 348, 349, 350, 1606, 1607, 0, 351,
	745, 746, 747, 1608, 352, 353, 748, 1609, 1676, 1610,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 1611,
	363, 364, 365, 362, 366, 367, 1612, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 1613, 376, 377, 378,
	1363, 379, 380, 381, 1614, 1615, 1617, 1616, 1618, 1619,
	1620, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 1621, 392, 394, 388, 390, 1622, 393, 391, 395,
	396, 1623, 397, 398, 399, 1624, 1625, 400, 401, 402,
	1626, 403, 404, 405, 1627, 406, 407, 408, 1628, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 1629, 318, 1630,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 1631, 428, 429, 430, 1632, 431, 432, 1633,
	1364, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 1634, 445, 757, 1635, 758,
	446, 1636, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1366, 454, 455, 456, 1637, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	1638, 1365, 762, 465, 548, 466, 763, 764, 1639, 765,
	1640, 467, 468, 470, 1367, 766, 1368, 469, 471, 472,
	1369, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 1641, 481, 483, 482, 1642, 485, 767, 484,
	1370, 486, 487, 1371, 1643, 488, 489, 490, 491, 492,
	493, 496, 1644, 1645, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1372, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1373, 540, 528, 1646, 320, 1374, 542, 543,
	544, 545, 1647, 768, 546, 769, 549, 550, 1648, 0,
	551, 0, 552, 1649, 1650, 554, 555, 556, 1651, 1652,
	557, 558, 770, 1375, 559, 1376, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	1653, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 1654, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 1655, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 1656, 618, 619, 617, 620, 621, 1377, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 1657, 648, 649, 647, 650, 651, 652, 1658,
	653, 778, 654, 634, 635, 655, 656, 1378, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 1659, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	1660, 685, 686, 0, 680, 671, 1661, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 1662, 695, 782, 783,
	784, 785, 1663, 707, 1664, 696, 698, 699, 700, 701,
	786, 702, 787, 1665, 703, 704, 705, 706, 697, 708,
	709, 1666, 1667, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 1668, 719, 1669, 0, 720, 721, 722, 788,
	789, 790, 1670, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1671, 1672, 1673, 1674, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4307,
	321, 322, 324, 323, 325, 326, 327, 328, 1596, 329,
	330, 1597, 1598, 1599, 0, 1600, 739, 1601, 1602, 1603,
	331, 1604, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	1605, 744, 344, 345, 346, 347, 348, 349, 350, 1606,
	1607, 0, 351, 745, 746, 747, 1608, 352, 353, 748,
	1609, 1676, 1610, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 1611, 363, 364, 365, 362, 366, 367, 1612,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 1613,
	376, 377, 378, 1363, 379, 380, 381, 1614, 1615, 1617,
	1616, 1618, 1619, 1620, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 1621, 392, 394, 388, 390, 1622,
	393, 391, 395, 396, 1623, 397, 398, 399, 1624, 1625,
	400, 401, 402, 1626, 403, 404, 405, 1627, 406, 407,
	408, 1628, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	1629, 318, 1630, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 1631, 428, 429, 430, 1632,
	431, 432, 1633, 1364, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 1634, 445,
	757, 1635, 758, 446, 1636, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 1366, 454, 455, 456,
	1637, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 1638, 1365, 762, 465, 548, 466, 763,
	764, 1639, 765, 1640, 467, 468, 470, 1367, 766, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 1641, 481, 483, 482, 1642,
	485, 767, 484, 1370, 486, 487, 1371, 1643, 488, 489,
	490, 491, 492, 493, 496, 1644, 1645, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1646, 320,
	1374, 542, 543, 544, 545, 1647, 768, 546, 769, 549,
	550, 1648, 0, 551, 0, 552, 1649, 1650, 554, 555,
	556, 1651, 1652, 557, 558, 770, 1375, 559, 1376, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 1653, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 1654,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 1655, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 1656, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 1657, 648, 649, 647, 650,
	651, 652, 1658, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 1659, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 1660, 685, 686, 0, 680, 671, 1661,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 1662,
	695, 782, 783, 784, 785, 1663, 707, 1664, 696, 698,
	699, 700, 701, 786, 702, 787, 1665, 703, 704, 705,
	706, 697, 708, 709, 1666, 1667, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1668, 719, 1669, 0, 720,
	721, 722, 788, 789, 790, 1670, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1671, 1672,
	1673, 1674, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4110, 321, 322, 324, 323, 325, 326, 327,
	328, 1596, 329, 330, 1597, 1598, 1599, 0, 1600, 739,
	1601, 1602, 1603, 331, 1604, 332, 333, 334, 1362, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 1605, 744, 344, 345, 346, 347, 348,
	349, 350, 1606, 1607, 0, 351, 745, 746, 747, 1608,
	352, 353, 748, 1609, 1676, 1610, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 1611, 363, 364, 365, 362,
	366, 367, 1612, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 1613, 376, 377, 378, 1363, 379, 380, 381,
	1614, 1615, 1617, 1616, 1618, 1619, 1620, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 1621, 392, 394,
	388, 390, 1622, 393, 391, 395, 396, 1623, 397, 398,
	399, 1624, 1625, 400, 401, 402, 1626, 403, 404, 405,
	1627, 406, 407, 408, 1628, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 1629, 318, 1630, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 1631, 428,
	429, 430, 1632, 431, 432, 1633, 1364, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 1634, 445, 757, 1635, 758, 446, 1636, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 1366,
	454, 455, 456, 1637, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 1638, 1365, 762, 465,
	548, 466, 763, 764, 1639, 765, 1640, 467, 468, 470,
	1367, 766, 1368, 469, 471, 472, 1369, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 1641, 481,
	483, 482, 1642, 485, 767, 484, 1370, 486, 487, 1371,
	1643, 488, 489, 490, 491, 492, 493, 496, 1644, 1645,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1372, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1373, 540,
	528, 1646, 320, 1374, 542, 543, 544, 545, 1647, 768,
	546, 769, 549, 550, 1648, 0, 551, 0, 552, 1649,
	1650, 554, 555, 556, 1651, 1652, 557, 558, 770, 1375,
	559, 1376, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 1653, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 1654, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 1655, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 1656, 618, 619,
	617, 620, 621, 1377, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 1657, 648,
	649, 647, 650, 651, 652, 1658, 653, 778, 654, 634,
	635, 655, 656, 1378, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 1659, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 1660, 685, 686, 0,
	680, 671, 1661, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 1662, 695, 782, 783, 784, 785, 1663, 707,
	1664, 696, 698, 699, 700, 701, 786, 702, 787, 1665,
	703, 704, 705, 706, 697, 708, 709, 1666, 1667, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1668, 719,
	1669, 0, 720, 721, 722, 788, 789, 790, 1670, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1671, 1672, 1673, 1674, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2958, 321, 322, 324, 323,
	325, 326, 327, 328, 1596, 329, 330, 1597, 1598, 1599,
	0, 1600, 739, 1601, 1602, 1603, 331, 1604, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 1605, 744, 344, 345,
	346, 347, 348, 349, 350, 1606, 1607, 0, 351, 745,
	746, 747, 1608, 352, 353, 748, 1609, 1676, 1610, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 1611, 363,
	364, 365, 362, 366, 367, 1612, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 1613, 376, 377, 378, 1363,
	379, 380, 381, 1614, 1615, 1617, 1616, 1618, 1619, 1620,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	1621, 392, 394, 388, 390, 1622, 393, 391, 395, 396,
	1623, 397, 398, 399, 1624, 1625, 400, 401, 402, 1626,
	403, 404, 405, 1627, 406, 407, 408, 1628, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 1629, 318, 1630, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 1631, 428, 429, 430, 1632, 431, 432, 1633, 1364,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 1634, 445, 757, 1635, 758, 446,
	1636, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 1366, 454, 455, 456, 1637, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 1638,
	1365, 762, 465, 548, 466, 763, 764, 1639, 765, 1640,
	467, 468, 470, 1367, 766, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 1641, 481, 483, 482, 1642, 485, 767, 484, 1370,
	486, 487, 1371, 1643, 488, 489, 490, 491, 492, 493,
	496, 1644, 1645, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1646, 320, 1374, 542, 543, 544,
	545, 1647, 768, 546, 769, 549, 550, 1648, 0, 551,
	0, 552, 1649, 1650, 554, 555, 556, 1651, 1652, 557,
	558, 770, 1375, 559, 1376, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 1653,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 1654, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 1655, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	1656, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 1657, 648, 649, 647, 650, 651, 652, 1658, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 1659, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 1660,
	685, 686, 0, 680, 671, 1661, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 1662, 695, 782, 783, 784,
	785, 1663, 707, 1664, 696, 698, 699, 700, 701, 786,
	702, 787, 1665, 703, 704, 705, 706, 697, 708, 709,
	1666, 1667, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1668, 719, 1669, 0, 720, 721, 722, 788, 789,
	790, 1670, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1671, 1672, 1673, 1674, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	1587, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2565, 321,
	322, 324, 323, 325, 326, 327, 328, 1596, 329, 330,
	1597, 1598, 1599, 0, 1600, 739, 1601, 1602, 1603, 331,
	1604, 332, 333, 334, 1362, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 1605,
	744, 344, 345, 346, 347, 348, 349, 350, 1606, 1607,
	0, 351, 745, 746, 747, 1608, 352, 353, 748, 1609,
	1676, 1610, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 1611, 363, 364, 365, 362, 366, 367, 1612, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 1613, 376,
	377, 378, 1363, 379, 380, 381, 1614, 1615, 1617, 1616,
	1618, 1619, 1620, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 1621, 392, 394, 388, 390, 1622, 393,
	391, 395, 396, 1623, 397, 398, 399, 1624, 1625, 400,
	401, 402, 1626, 403, 404, 405, 1627, 406, 407, 408,
	1628, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 1629,
	318, 1630, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 1631, 428, 429, 430, 1632, 431,
	432, 1633, 1364, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 1634, 445, 757,
	1635, 758, 446, 1636, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1366, 454, 455, 456, 1637,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 1638, 1365, 762, 465, 548, 466, 763, 764,
	1639, 765, 1640, 467, 468, 470, 1367, 766, 1368, 469,
	471, 472, 1369, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 1641, 481, 483, 482, 1642, 485,
	767, 484, 1370, 486, 487, 1371, 1643, 488, 489, 490,
	491, 492, 493, 496, 1644, 1645, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1372, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1373, 540, 528, 1646, 320, 1374,
	542, 543, 544, 545, 1647, 768, 546, 769, 549, 550,
	1648, 0, 551, 0, 552, 1649, 1650, 554, 555, 556,
	1651, 1652, 557, 558, 770, 1375, 559, 1376, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 1653, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 1654, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 1655, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 1656, 618, 619, 617, 620, 621, 1377,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 1657, 648, 649, 647, 650, 651,
	652, 1658, 653, 778, 654, 634, 635, 655, 656, 1378,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	1659, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 1660, 685, 686, 0, 680, 671, 1661, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 1662, 695,
	782, 783, 784, 785, 1663, 707, 1664, 696, 698, 699,
	700, 701, 786, 702, 787, 1665, 703, 704, 705, 706,
	697, 708, 709, 1666, 1667, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1668, 719, 1669, 0, 720, 721,
	722, 788, 789, 790, 1670, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1671, 1672, 1673,
	1674, 734, 735, 792, 736, 737, 738, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 1596, 329, 330, 1597, 1598, 1599, 0, 1600,
	739, 1601, 1602, 1603, 331, 1604, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 1605, 744, 344, 345, 346, 347,
	348, 349, 350, 1606, 1607, 0, 351, 745, 746, 747,
	1608, 352, 353, 748, 1609, 1676, 1610, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 1611, 363, 364, 365,
	362, 366, 367, 1612, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 1613, 376, 377, 378, 1363, 379, 380,
	381, 1614, 1615, 1617, 1616, 1618, 1619, 1620, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 1621, 392,
	394, 388, 390, 1622, 393, 391, 395, 396, 1623, 397,
	398, 399, 1624, 1625, 400, 401, 402, 1626, 403, 404,
	405, 1627, 406, 407, 408, 1628, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 1629, 318, 1630, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 1631,
	428, 429, 430, 1632, 431, 432, 1633, 1364, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 1634, 445, 757, 1635, 758, 446, 1636, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	1366, 454, 455, 456, 1637, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 1638, 1365, 762,
	465, 548, 466, 763, 764, 1639, 765, 1640, 467, 468,
	470, 1367, 766, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 1641,
	481, 483, 482, 1642, 485, 767, 484, 1370, 486, 487,
	1371, 1643, 488, 489, 490, 491, 492, 493, 496, 1644,
	1645, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1646, 320, 1374, 542, 543, 544, 545, 1647,
	768, 546, 769, 549, 550, 1648, 0, 551, 0, 552,
	1649, 1650, 554, 555, 556, 1651, 1652, 557, 558, 770,
	1375, 559, 1376, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 1653, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 1654, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 1655, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 1656, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 1657,
	648, 649, 647, 650, 651, 652, 1658, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 1659, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 1660, 685, 686,
	0, 680, 671, 1661, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 1662, 695, 782, 783, 784, 785, 1663,
	707, 1664, 696, 698, 699, 700, 701, 786, 702, 787,
	1665, 703, 704, 705, 706, 697, 708, 709, 1666, 1667,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1668,
	719, 1669, 0, 720, 721, 722, 788, 789, 790, 1670,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1671, 1672, 1673, 1674, 734, 735, 792, 736,
	737, 738, 2933, 0, 1296, 1268, 1269, 1270, 1266, 1267,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 2930,
	329, 330, 0, 0, 0, 0, 0, 1322, 1284, 0,
	0, 331, 0, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 740, 1335, 0, 342, 1342, 343,
	1341, 0, 1352, 344, 345, 346, 347, 348, 349, 350,
	1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352, 353,
	1328, 0, 1309, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1363, 379, 380, 381, 1312, 1310,
	1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385, 386,
	1345, 387, 389, 1339, 1338, 1256, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 2931,
	0, 400, 1330, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1262, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1353, 1354,
	423, 1275, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1337, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1364, 433, 434, 435, 1350, 1351,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1360, 0, 1285, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1323, 1324, 1327, 547, 1366, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1365, 762, 465, 548, 466,
	1332, 1333, 0, 1291, 0, 467, 468, 470, 1367, 1325,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1361, 484, 1370, 486, 487, 1371, 0, 488,
	489, 490, 491, 492, 493, 496, 1316, 1315, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 1253,
	320, 1374, 542, 543, 544, 545, 1276, 1326, 546, 1340,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1375, 559, 1376,
	1355, 560, 561, 1263, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1356, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1336, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 1264, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 1319, 653, 778, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 1334,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1381, 674, 675, 676, 677, 1357,
	681, 682, 683, 684, 0, 685, 686, 1250, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1346, 1347, 1348, 1349, 0, 707, 0, 696,
	698, 699, 700, 701, 1358, 702, 1359, 1274, 703, 704,
	705, 706, 697, 708, 709, 0, 1257, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1320, 719, 0, 0,
	720, 721, 722, 788, 1343, 1380, 2929, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 0, 0,
	0, 1247, 1248, 2932, 0, 0, 0, 0, 0, 0,
	0, 1280, 2928, 0, 1238, 1278, 1296, 1268, 1269, 1270,
	1266, 1267, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 1322,
	1284, 0, 0, 331, 0, 332, 333, 334, 1362, 335,
	336, 337, 338, 339, 340, 341, 740, 1335, 0, 342,
	1342, 343, 1341, 0, 1352, 344, 345, 346, 347, 348,
	349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0,
	352, 353, 1328, 0, 1309, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1363, 379, 380, 381,
	1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384,
	385, 386, 1345, 387, 389, 1339, 1338, 1256, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 1330, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 1262, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	1353, 1354, 423, 1275, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 1337, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1364, 433, 434, 435,
	1350, 1351, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 1360, 0, 1285, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1323, 1324, 1327, 547, 1366,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 1365, 762, 465,
	548, 466, 1332, 1333, 0, 1291, 0, 467, 468, 470,
	1367, 1325, 1368, 469, 471, 472, 1369, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 1361, 484, 1370, 486, 487, 1371,
	0, 488, 489, 490, 491, 492, 493, 496, 1316, 1315,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1372, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1373, 540,
	528, 1253, 320, 1374, 542, 543, 544, 545, 1276, 1326,
	546, 1340, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1375,
	559, 1376, 1355, 560, 561, 1263, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 1356, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 1336, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1377, 622, 623, 624, 625, 626, 1264,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 274, 648,
	649, 647, 650, 651, 652, 1319, 653, 778, 654, 634,
	635, 655, 656, 1378, 657, 658, 659, 660, 661, 662,
	663, 1334, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 1381, 674, 675, 676,
	677, 1357, 681, 682, 683, 684, 0, 685, 686, 1250,
	680, 671, 276, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 1346, 1347, 1348, 1349, 0, 707,
	0, 696, 698, 699, 700, 701, 1358, 702, 1359, 1274,
	703, 704, 705, 706, 697, 708, 709, 0, 1257, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 1320, 719,
	0, 0, 720, 721, 722, 1840, 1343, 1380, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 268, 734, 735, 792, 736, 737,
	738, 1254, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1249, 0, 0, 0,
	0, 0, 0, 1247, 1248, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 2112, 2110, 0, 0, 1278, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 274, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 276, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 1840, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 268, 734, 735, 792, 736, 737, 738,
	1254, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 1296, 1268, 1269, 1270, 1266, 1267,
	1279, 0, 2112, 3685, 0, 0, 1278, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 1322, 1284, 0,
	0, 331, 0, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 740, 1335, 0, 342, 1342, 343,
	1341, 0, 1352, 344, 345, 346, 347, 348, 349, 350,
	1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352, 353,
	1328, 0, 1309, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1363, 379, 380, 381, 1312, 1310,
	1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385, 386,
	1345, 387, 389, 1339, 1338, 1256, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1330, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 1262, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1353, 1354,
	423, 1275, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 1337, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1364, 433, 434, 435, 1350, 1351,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1360, 0, 1285, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1323, 1324, 1327, 547, 1366, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1365, 762, 465, 548, 466,
	1332, 1333, 0, 1291, 0, 467, 468, 470, 1367, 1325,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 1361, 484, 1370, 486, 487, 1371, 0, 488,
	489, 490, 491, 492, 493, 496, 1316, 1315, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 1253,
	320, 1374, 542, 543, 544, 545, 1276, 1326, 546, 1340,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1375, 559, 1376,
	1355, 560, 561, 1263, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1356, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 1336, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 1264, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 274, 648, 649, 647,
	650, 651, 652, 1319, 653, 778, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 1334,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 1381, 674, 675, 676, 677, 1357,
	681, 682, 683, 684, 0, 685, 686, 1250, 680, 671,
	276, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 1346, 1347, 1348, 1349, 0, 707, 0, 696,
	698, 699, 700, 701, 1358, 702, 1359, 1274, 703, 704,
	705, 706, 697, 708, 709, 0, 1257, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1320, 719, 0, 0,
	720, 721, 722, 1840, 1343, 1380, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 268, 734, 735, 792, 736, 737, 738, 1254,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 0, 0,
	0, 1247, 1248, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 2112, 2110, 0, 0, 1278, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	3066, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 3071, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 3067,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 3068, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 2978, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 2976, 0, 2975, 1278, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 2973, 0, 2972, 1278, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 2970, 0, 2969,
	1278, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 2967,
	0, 1944, 1278, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1943, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 1243, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 1258, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	5412, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	1258, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 0, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 2808, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 2807, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 0,
	0, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 5118, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 1258, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 0, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 1258, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 0, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 4646, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 2186, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 1280, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 2186, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 1280, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 4285, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 3071, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 0, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 2110, 0, 3076,
	1278, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 3074, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 3062, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 3051, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 3049, 0, 3040,
	3047, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 3043, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 3044, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 3045, 506, 3042, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 3046, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 3041, 738, 1254, 0, 0, 0, 0, 3037,
	0, 3040, 3047, 1269, 1270, 1266, 1267, 1279, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 3043, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 3044, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 3045, 506, 3042, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	3046, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 3041, 738, 1254, 0, 0, 0,
	0, 0, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 0, 0, 0, 0, 0, 0, 2118, 0,
	1280, 0, 0, 0, 1278, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	2787, 329, 330, 0, 0, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 2747, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 2716, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 1949,
	0, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 1875, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 1870, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 1856, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 1851, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 1757,
	0, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1756, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 1751, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1750, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 1744, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 1717, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 1689, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 1693, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 1694, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 1692, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 1517,
	0, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 0, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 0, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 5465, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 5464, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 1247, 1248, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 5463, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 1251, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	5465, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 1256, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 1253, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	1250, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 5464, 709, 0, 1257,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1254, 0, 0, 0, 0, 0, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 1249, 0, 0,
	0, 0, 0, 0, 1247, 1248, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 1251, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 5038, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	1256, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 5039, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 1253, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 1263, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	5037, 626, 1264, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 1250, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 1257, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 1254, 0, 0, 0, 0, 0,
	0, 1296, 1268, 1269, 1270, 3651, 3652, 1279, 0, 1249,
	0, 0, 0, 0, 0, 0, 1247, 1248, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 1367, 1325, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 1374, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	708, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1254, 0, 0, 0,
	0, 0, 0, 1296, 1268, 1269, 1270, 3649, 3650, 1279,
	0, 1249, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 1286,
	1321, 1251, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 1256, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 1262, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 1253, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 1263, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 1250, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 1257, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1254, 0,
	0, 0, 0, 0, 0, 1296, 1268, 1269, 1270, 1266,
	1267, 1279, 0, 1249, 0, 0, 0, 0, 0, 0,
	1247, 1248, 321, 322, 324, 323, 325, 326, 327, 328,
	1280, 329, 330, 0, 1278, 0, 0, 0, 1322, 1284,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 1335, 0, 342, 1342,
	343, 1341, 0, 1352, 344, 345, 346, 347, 348, 349,
	350, 1286, 1321, 1251, 351, 1382, 1383, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 1345, 387, 389, 1339, 1338, 1256, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 1330, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 1262, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 1275, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 1337, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 1350,
	1351, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 1285, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 1332, 1333, 0, 1291, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	1253, 320, 1374, 542, 543, 544, 545, 1276, 1326, 546,
	1340, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 1263, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 1336, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 1264, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	1334, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 1381, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 1250, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 1346, 1347, 1348, 1349, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 1274, 703,
	704, 705, 706, 697, 708, 709, 0, 1257, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 1343, 1380, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1254, 0, 0, 0, 0, 0, 0, 1296, 1268, 1269,
	1270, 1266, 1267, 1279, 0, 1249, 0, 0, 0, 0,
	0, 0, 2795, 2796, 321, 322, 324, 323, 325, 326,
	327, 328, 1280, 329, 330, 0, 1278, 0, 0, 0,
	1322, 1284, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 1335, 0,
	342, 1342, 343, 1341, 0, 1352, 344, 345, 346, 347,
	348, 349, 350, 1286, 1321, 0, 351, 1382, 1383, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 1345, 387, 389, 1339, 1338, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 1262, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 1275, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 1337, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 1350, 1351, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 1285, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 1332, 1333, 0, 1291, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 0, 320, 1374, 542, 543, 544, 545, 1276,
	1326, 546, 1340, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 1263, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 1336, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	1264, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 1334, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 1381, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 1346, 1347, 1348, 1349, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	1274, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 1343, 1380, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 1296,
	1268, 1269, 1270, 1266, 1267, 1279, 0, 3059, 0, 0,
	0, 0, 0, 0, 3057, 3058, 321, 322, 324, 323,
	325, 326, 327, 328, 1280, 329, 330, 0, 1278, 0,
	0, 0, 1322, 1284, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	1335, 0, 342, 1342, 343, 1341, 0, 1352, 344, 345,
	346, 347, 348, 349, 350, 1286, 1321, 0, 351, 1382,
	1383, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 1345, 387, 389, 1339, 1338,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 1330, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	1262, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 1275, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 1337, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 1350, 1351, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 1285, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 1332, 1333, 0, 1291, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 0, 320, 1374, 542, 543, 544,
	545, 1276, 1326, 546, 1340, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 1336, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 3644, 3645, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 1334, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 1381,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 1346, 1347, 1348,
	1349, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 1274, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 788, 1343,
	1380, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 2382, 2383, 321, 322,
	324, 323, 325, 326, 327, 328, 1280, 329, 330, 0,
	1278, 0, 0, 0, 1322, 1284, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 0, 1335, 0, 342, 1342, 343, 1341, 0, 1352,
	344, 345, 346, 347, 348, 349, 350, 1286, 1321, 1251,
	351, 1382, 1383, 747, 0, 352, 353, 1328, 0, 1309,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 5465, 1312, 1310, 1311, 1318, 1314,
	1313, 1317, 382, 383, 384, 385, 386, 1345, 387, 389,
	1339, 1338, 1256, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 1330,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 1262, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 1353, 1354, 423, 1275, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 1337, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 1350, 1351, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 1360, 0,
	1285, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1323, 1324, 1327, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 1332, 1333, 0,
	1291, 0, 467, 468, 470, 0, 1325, 0, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 1361,
	484, 1370, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 1316, 1315, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 1253, 320, 0, 542,
	543, 544, 545, 1276, 1326, 546, 1340, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 1355, 560, 561,
	1263, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 1356, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	1336, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 1264, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	1319, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 1334, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 1381, 674, 675, 676, 677, 1357, 681, 682, 683,
	684, 0, 685, 686, 1250, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 1346,
	1347, 1348, 1349, 0, 707, 0, 696, 698, 699, 700,
	701, 1358, 702, 1359, 1274, 703, 704, 705, 706, 697,
	5464, 709, 0, 1257, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 1320, 719, 0, 0, 720, 721, 722,
	788, 1343, 1380, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 3078, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 1248,
	321, 322, 324, 323, 325, 326, 327, 328, 1280, 329,
	330, 0, 1278, 0, 0, 0, 1322, 1284, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 1335, 0, 342, 1342, 343, 1341,
	0, 1352, 344, 345, 346, 347, 348, 349, 350, 0,
	1321, 0, 351, 1382, 1383, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 1345,
	387, 389, 1339, 1338, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 1330, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	1275, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	1337, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 1350, 1351, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 1285, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 1332,
	1333, 0, 1291, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 0, 320,
	1374, 542, 543, 544, 545, 1276, 1326, 546, 1340, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 1336, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 1264, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 1334, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 1381, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 1346, 1347, 1348, 1349, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 1274, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 1343, 1380, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	1719, 0, 1296, 1268, 1269, 1270, 1266, 1267, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	1280, 0, 0, 0, 1278, 1322, 1284, 0, 0, 331,
	0, 332, 333, 334, 1362, 335, 336, 337, 338, 339,
	340, 341, 740, 1335, 0, 342, 1342, 343, 1341, 0,
	1352, 344, 345, 346, 347, 348, 349, 350, 0, 1321,
	0, 351, 1382, 1383, 747, 0, 352, 353, 1328, 0,
	1309, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318,
	1314, 1313, 1317, 382, 383, 384, 385, 386, 1345, 387,
	389, 1339, 1338, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	1330, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1353, 1354, 423, 1275,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 1337,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1364, 433, 434, 435, 1350, 1351, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1360,
	0, 1285, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1323, 1324, 1327, 547, 1366, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1365, 762, 465, 548, 466, 1332, 1333,
	0, 1291, 0, 467, 468, 470, 1367, 1325, 1368, 469,
	471, 472, 1369, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1361, 484, 1370, 486, 487, 1371, 0, 488, 489, 490,
	491, 492, 493, 496, 1316, 1315, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1372, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1373, 540, 528, 0, 320, 1374,
	542, 543, 544, 545, 1276, 1326, 546, 1340, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1375, 559, 1376, 1355, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1356, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 1336, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1377,
	622, 623, 624, 625, 626, 1264, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1319, 653, 778, 654, 634, 635, 655, 656, 1378,
	657, 658, 659, 660, 661, 662, 663, 1334, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 1381, 674, 675, 676, 677, 1357, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	1346, 1347, 1348, 1349, 0, 707, 0, 696, 698, 699,
	700, 701, 1358, 702, 1359, 1274, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1320, 719, 0, 0, 720, 721,
	722, 788, 1343, 1380, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1238, 0, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 1280,
	0, 0, 1322, 1278, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 1321, 0, 351, 745,
	746, 747, 0, 352, 353, 1328, 0, 1309, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 1312, 1310, 1311, 1318, 1314, 1313, 1317,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 1353, 1354, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 1360, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1323, 1324,
	1327, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 1367, 1325, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 1407, 481, 483, 482, 0, 485, 1361, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 1316, 1315, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 0, 320, 1374, 542, 543, 544,
	545, 0, 1326, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 1413, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 1355, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	1356, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 777, 1415, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 274, 648, 649, 647, 650, 651, 652, 1319, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 1357, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 276, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 1358,
	702, 1359, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 1320, 719, 0, 0, 720, 721, 722, 1840, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 268, 734, 735,
	792, 736, 737, 738, 1421, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 1411, 0, 2210, 1322, 0, 0,
	0, 331, 0, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 1321, 0, 351, 745, 746, 747, 0, 352, 353,
	1328, 0, 1309, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1363, 379, 380, 381, 1312, 1310,
	1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 1353, 1354,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1364, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 1360, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 1323, 1324, 1327, 547, 1366, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 1365, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 1367, 1325,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 1407, 481, 483, 482,
	0, 485, 1361, 484, 1370, 486, 487, 1371, 0, 488,
	489, 490, 491, 492, 493, 496, 1316, 1315, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 0,
	320, 1374, 542, 543, 544, 545, 0, 1326, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 1413, 554,
	555, 556, 0, 0, 557, 558, 770, 1375, 559, 1376,
	1355, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 1356, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 777, 1415, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 274, 648, 649, 647,
	650, 651, 652, 1319, 653, 778, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 1357,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	276, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 1358, 702, 1359, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 1320, 719, 0, 0,
	720, 721, 722, 1840, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 268, 734, 735, 792, 736, 737, 738, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3814, 0, 1421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 2210, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 331, 0, 332, 333, 334, 1362, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 1321, 0, 351, 745, 746, 747, 0, 352,
	353, 1328, 0, 1309, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 1363, 379, 380, 381, 1312,
	1310, 1311, 1318, 1314, 1313, 1317, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 1353,
	1354, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 1364, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 1360, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1323, 1324, 1327, 547, 1366, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 1365, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 1367,
	1325, 1368, 469, 471, 472, 1369, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 1407, 481, 483,
	482, 0, 485, 1361, 484, 1370, 486, 487, 1371, 0,
	488, 489, 490, 491, 492, 493, 496, 1316, 1315, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 1372,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 1373, 540, 528,
	0, 320, 1374, 542, 543, 544, 545, 0, 1326, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 1413,
	554, 555, 556, 0, 0, 557, 558, 770, 1375, 559,
	1376, 1355, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 1356, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 1377, 622, 623, 624, 625, 626, 777, 1415,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 1319, 653, 778, 654, 634, 635,
	655, 656, 1378, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	1357, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 1358, 702, 1359, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 1320, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	0, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	1403, 0, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	1411, 0, 1409, 0, 0, 1322, 0, 0, 0, 331,
	0, 332, 333, 334, 1362, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 1321,
	0, 351, 745, 746, 747, 0, 352, 353, 1328, 0,
	1309, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318,
	1314, 1313, 1317, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1353, 1354, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1364, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1360,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1323, 1324, 1327, 547, 1366, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1365, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 1367, 1325, 1368, 469,
	471, 472, 1369, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 1407, 481, 483, 482, 0, 485,
	1361, 484, 1370, 486, 487, 1371, 0, 488, 489, 490,
	491, 492, 493, 496, 1316, 1315, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1372, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1373, 540, 528, 0, 320, 1374,
	542, 543, 544, 545, 0, 1326, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 1413, 554, 555, 556,
	0, 0, 557, 558, 770, 1375, 559, 1376, 1355, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1356, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1377,
	622, 623, 624, 625, 626, 777, 1415, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1319, 653, 778, 654, 634, 635, 655, 656, 1378,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 1357, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 1358, 702, 1359, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1320, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 1411, 0, 1409,
	1322, 0, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 1321, 0, 351, 745, 746, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 1407,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 0, 320, 1374, 542, 543, 544, 545, 0,
	1326, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 1413, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	777, 1415, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 1411, 0, 1409, 1322, 0, 0, 0, 331,
	0, 332, 333, 334, 1362, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 1321,
	0, 351, 745, 746, 747, 0, 352, 353, 1328, 0,
	1309, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1363, 379, 380, 381, 1312, 1310, 1311, 1318,
	1314, 1313, 1317, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 1353, 1354, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1364, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 1360,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1323, 1324, 1327, 547, 1366, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 1365, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 1367, 1325, 1368, 469,
	471, 472, 1369, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	1361, 484, 1370, 486, 487, 1371, 0, 488, 489, 490,
	491, 492, 493, 496, 1316, 1315, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1372, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1373, 540, 528, 0, 320, 1374,
	542, 543, 544, 545, 0, 1326, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1375, 559, 1376, 1355, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 1356, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1377,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 1319, 653, 778, 654, 634, 635, 655, 656, 1378,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 1357, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 1358, 702, 1359, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 1320, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 1421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 4837,
	1322, 0, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 1321, 0, 351, 745, 746, 747,
	0, 352, 353, 1328, 0, 1309, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 1312, 1310, 1311, 1318, 1314, 1313, 1317, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 1353, 1354, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 1360, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1323, 1324, 1327, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1367, 1325, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 1361, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 1316,
	1315, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 0, 320, 1374, 542, 543, 544, 545, 0,
	1326, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 1355, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 1356, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	777, 1415, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1319, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 1357, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 1358, 702, 1359,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 1320,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 2901, 2902, 2903, 2920, 2921, 2922, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 2923, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 2102, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	2087, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	2913, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	2909, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 2914, 2915, 2916, 2917, 424, 425, 426, 754,
	0, 0, 2908, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 2918, 2919, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	2911, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 2912, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 2086, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 1710, 2898,
	2899, 2900, 2924, 2910, 2904, 0, 2906, 2907, 2905, 2892,
	2893, 2894, 2895, 2896, 2897, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	1362, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 1676, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1363, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1364, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 1366, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 1365,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 1367, 766, 1368, 469, 471, 472, 1369, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 1370, 486,
	487, 1371, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1372, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1373, 540, 528, 0, 0, 1374, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 1375, 559, 1376, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1377, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	274, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 1378, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 276, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 1840, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 268, 734, 735, 792,
	736, 737, 738, 0, 1837, 269, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 215, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 1362, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 1676, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1363, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1364, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 1366,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 1365, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	1367, 766, 1368, 469, 471, 472, 1369, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 1370, 486, 487, 1371,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1372, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1373, 540,
	528, 0, 0, 1374, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1375,
	559, 1376, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1377, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 274, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 1378, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 276, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 1840, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 268, 734, 735, 792, 736, 737,
	738, 1710, 1709, 269, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 215, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 1676,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 1367, 766, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 0, 0, 1374, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1710, 1709, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 1864, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 1362, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 1676, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1363, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1364, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 1366,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 1365, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	1367, 766, 1368, 469, 471, 472, 1369, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 1370, 486, 487, 1371,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1372, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1373, 540,
	528, 0, 0, 1374, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1375,
	559, 1376, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1377, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 1378, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1710, 1709, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 4191, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 1676,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 1367, 766, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 0, 0, 1374, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 2653, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1710, 2557, 0, 0,
	0, 0, 2558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 1864, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 1362, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 1676, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1363, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1364, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 1366,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 1365, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	1367, 766, 1368, 469, 471, 472, 1369, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 2556,
	483, 482, 0, 485, 767, 484, 1370, 486, 487, 1371,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1372, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1373, 540,
	528, 0, 0, 1374, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1375,
	559, 1376, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1377, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 1378, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 1710, 1709, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 1864, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 1362, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 1676,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 1363, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 1364, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 1366, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 1365, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 1367, 766, 1368, 469, 471,
	472, 1369, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 1370, 486, 487, 1371, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 1372, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 1373, 540, 528, 0, 0, 1374, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 1375, 559, 1376, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 1377, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 1378, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 0, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 1238, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 1846, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	274, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 276, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 1840, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 268, 734, 735, 792,
	736, 737, 738, 0, 0, 269, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 215, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 315, 3417,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	2224, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 5645, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 1834, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 3225, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 4142, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 0, 2279, 0,
	342, 2286, 343, 2285, 0, 2294, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 2297, 2298, 0,
	0, 352, 353, 0, 0, 1676, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 1345, 387, 389, 2283, 2282, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 0, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 0, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 2281, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 2292, 2293, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 0, 0, 0, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 0, 0, 0, 547,
	1366, 454, 455, 456, 3219, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1365, 3221,
	465, 548, 466, 2276, 2277, 0, 2272, 0, 467, 468,
	470, 1367, 0, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 0, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 0, 0, 1374, 542, 543, 544, 545, 0,
	0, 546, 2284, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 3220,
	1375, 559, 1376, 0, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	2269, 574, 575, 576, 2270, 577, 578, 579, 0, 580,
	0, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 2280, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	0, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 0, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 2278, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 2296, 674, 675,
	676, 677, 0, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 2288, 2289, 2290, 2291, 0,
	707, 0, 696, 698, 699, 700, 701, 0, 702, 0,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 0, 2287, 2295, 3222,
	724, 725, 723, 726, 727, 730, 728, 729, 0, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 0, 736,
	737, 738, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 3214, 739, 0, 2265, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 3225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	3536, 0, 0, 0, 0, 331, 0, 332, 333, 334,
	1362, 335, 336, 337, 338, 339, 340, 341, 0, 2279,
	0, 342, 2286, 343, 2285, 0, 2294, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 2297, 2298,
	0, 0, 352, 353, 0, 0, 1676, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1363, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 1345, 387, 389, 2283, 2282, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1330, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 0,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 0, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 2281, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1364, 433,
	434, 435, 2292, 2293, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 0, 0, 0, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 0, 0, 0,
	547, 1366, 454, 455, 456, 3219, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 1365,
	3221, 465, 548, 466, 2276, 2277, 0, 2272, 0, 467,
	468, 470, 1367, 0, 1368, 469, 471, 472, 1369, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 0, 484, 1370, 486,
	487, 1371, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1372, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1373, 540, 528, 0, 0, 1374, 542, 543, 544, 545,
	0, 0, 546, 2284, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	3220, 1375, 559, 1376, 0, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 2269, 574, 575, 576, 2270, 577, 578, 579, 0,
	580, 0, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 2280, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1377, 622, 623, 624, 625,
	626, 0, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 0,
	654, 634, 635, 655, 656, 1378, 657, 658, 659, 660,
	661, 662, 663, 2278, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 2296, 674,
	675, 676, 677, 0, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 2288, 2289, 2290, 2291,
	0, 707, 0, 696, 698, 699, 700, 701, 0, 702,
	0, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 0, 2287, 2295,
	3222, 724, 725, 723, 726, 727, 730, 728, 729, 0,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 0,
	736, 737, 738, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 2265,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 315, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	4310, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 1421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 2640, 1322, 0, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	1321, 0, 351, 745, 746, 747, 0, 352, 353, 1328,
	0, 1309, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 1312, 1310, 1311,
	1318, 1314, 1313, 1317, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 1353, 1354, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	1360, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1323, 1324, 1327, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 1367, 1325, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 1361, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 1316, 1315, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 0, 320,
	1374, 542, 543, 544, 545, 0, 1326, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 1355,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 1356, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1319, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 1357, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 1358, 702, 1359, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 1320, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 2273, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 332, 333, 334,
	1362, 335, 336, 337, 338, 339, 340, 341, 0, 2279,
	0, 342, 2286, 343, 2285, 0, 2294, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 2297, 2298,
	0, 0, 352, 353, 0, 0, 1676, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 1363, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 1345, 387, 389, 2283, 2282, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 1330, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 0,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 2281, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 1364, 433,
	434, 435, 2292, 2293, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 0, 0, 0, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 0, 0, 0,
	547, 1366, 454, 455, 456, 3219, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 1365,
	3221, 465, 548, 466, 2276, 2277, 0, 2272, 0, 467,
	468, 470, 1367, 0, 1368, 469, 471, 472, 1369, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 0, 484, 1370, 486,
	487, 1371, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 1372, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	1373, 540, 528, 0, 0, 1374, 542, 543, 544, 545,
	0, 0, 546, 2284, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	3220, 1375, 559, 1376, 0, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 2269, 574, 575, 576, 2270, 577, 578, 579, 0,
	580, 0, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 2280, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 1377, 622, 623, 624, 625,
	626, 0, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 0,
	654, 634, 635, 655, 656, 1378, 657, 658, 659, 660,
	661, 662, 663, 2278, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 2296, 674,
	675, 676, 677, 0, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 2288, 2289, 2290, 2291,
	0, 707, 0, 696, 698, 699, 700, 701, 0, 702,
	0, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 0, 2287, 2295,
	3222, 724, 725, 723, 726, 727, 730, 728, 729, 0,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 0,
	736, 737, 738, 1059, 0, 958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 2265,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 965,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 1056, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 1058, 0, 680,
	671, 963, 687, 688, 689, 690, 691, 964, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	2247, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 4443, 329, 330, 0, 0,
	0, 0, 0, 739, 968, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 2254, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 2255, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 2256, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 4442, 632, 641, 642, 643, 644,
	646, 645, 0, 2251, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 2253, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 4441, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 2247, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	2302, 329, 330, 0, 0, 0, 0, 0, 739, 968,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 2254,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 2255, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 2256, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 2301,
	632, 641, 642, 643, 644, 646, 645, 0, 2303, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 2253, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 2300, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	2247, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 2246, 329, 330, 0, 0,
	0, 0, 0, 739, 968, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 2254, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 2255, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 2256, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 2245, 632, 641, 642, 643, 644,
	646, 645, 0, 2251, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 2253, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 2244, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 956, 0, 958, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 968,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 965, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 963, 687, 688, 689, 690, 691, 964,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 958, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 968, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 965, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 320, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 963, 687,
	688, 689, 690, 691, 964, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 3225, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	0, 968, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 0, 2279, 0,
	342, 2286, 343, 2285, 0, 2294, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 2297, 2298, 0,
	0, 352, 353, 0, 0, 1676, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 1345, 387, 389, 2283, 2282, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 1330, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 0, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 0, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 2281, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 2292, 2293, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 0, 0, 0, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 0, 0, 0, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1365, 0,
	465, 548, 466, 2276, 2277, 0, 2272, 0, 467, 468,
	470, 1367, 0, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 0, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 0, 0, 1374, 542, 543, 544, 545, 0,
	0, 546, 2284, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 0,
	1375, 559, 1376, 0, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	2269, 574, 575, 576, 2270, 577, 578, 579, 0, 580,
	0, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 2280, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	0, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 0, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 2278, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 2296, 674, 675,
	676, 677, 0, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 2288, 2289, 2290, 2291, 0,
	707, 0, 696, 698, 699, 700, 701, 0, 702, 0,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 0, 2287, 2295, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 0, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 0, 736,
	737, 738, 3205, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 2265, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 2247,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 968, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 2254, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 2255, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	2256, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 320, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 2694, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 2695, 632, 641, 642, 643, 644, 646,
	645, 0, 2251, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 2253, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 2696, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 2273, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 331, 0, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 0, 2279, 0, 342, 2286, 343,
	2285, 0, 2294, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 2297, 2298, 0, 0, 352, 353,
	0, 0, 1676, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1363, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	1345, 387, 389, 2283, 2282, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 1330, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 0, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 2281, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1364, 433, 434, 435, 2292, 2293,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 0, 0, 0, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 0, 0, 0, 547, 1366, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 1365, 0, 465, 548, 466,
	2276, 2277, 0, 2272, 0, 467, 468, 470, 1367, 0,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 0, 484, 1370, 486, 487, 1371, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 0,
	0, 1374, 542, 543, 544, 545, 0, 0, 546, 2284,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 0, 1375, 559, 1376,
	0, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 2269, 574, 575,
	576, 2270, 577, 578, 579, 0, 580, 0, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 2280, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 0, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 0, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 2278,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 2296, 674, 675, 676, 677, 0,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 2288, 2289, 2290, 2291, 0, 707, 0, 696,
	698, 699, 700, 701, 0, 702, 0, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 0, 2287, 2295, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 0, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 0, 736, 737, 738, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 2265, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 320, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 968, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 924, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 1710, 1709, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4684, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 1362, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	1676, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 1363, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 1364, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 1366, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 1365, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 1367, 766, 1368, 469,
	471, 472, 1369, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 1370, 486, 487, 1371, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 1372, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 1373, 540, 528, 0, 0, 1374,
	542, 543, 544, 545, 4570, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 1375, 559, 1376, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 1377,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 1378,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 0, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 3618, 0, 1710,
	1709, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 1676, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 1367, 766, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 0, 0, 1374, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 0, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 2576, 0, 1710, 1709, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 1362, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 1676, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 1363, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 1364, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1767, 760, 761, 547, 1366,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 1365, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	1367, 766, 1368, 469, 471, 472, 1369, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 1370, 486, 487, 1371,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	1372, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 1373, 540,
	528, 0, 0, 1374, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 1375,
	559, 1376, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 1377, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 1378, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 0, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 2311, 0, 1710, 1709, 0, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 1362, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 1676, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 1363, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 1364, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 1366, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 1365, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 1367, 766, 1368,
	469, 471, 472, 1369, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 1370, 486, 487, 1371, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 1372, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 1373, 540, 528, 0, 0,
	1374, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 1375, 559, 1376, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	1377, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	1378, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 0, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 1897, 0,
	1710, 1709, 0, 0, 0, 0, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 1362, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 1676, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	1363, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 1894, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	1364, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 1366, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 1365, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 1367, 766, 1368, 469, 471, 472,
	1369, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	1370, 486, 487, 1371, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 1372, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 1373, 540, 528, 0, 0, 1374, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 1375, 559, 1376, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 1895, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 1377, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 1893, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 1378, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 1896, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 0, 0, 0, 0, 734,
	735, 792, 736, 737, 738, 1764, 0, 1710, 1709, 0,
	0, 0, 0, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 1362,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 1676, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 1363, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 1364, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1767, 760, 761, 547,
	1366, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 1365, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 1367, 766, 1368, 469, 471, 472, 1369, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 1370, 486, 487,
	1371, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 1372, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 1373,
	540, 528, 0, 0, 1374, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	1375, 559, 1376, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 1377, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 1378, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 1705, 0, 1710, 1709, 0, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 1676, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1363, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1364, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 1366, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 1365, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 1367, 766,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 1370, 486, 487, 1371, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 0,
	0, 1374, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1375, 559, 1376,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 1703, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 0,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 1710,
	1709, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 1676, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 1367, 766, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 0, 0, 1374, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1710, 1709, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 1362, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 1676, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 1363, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 1364, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 1366, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 1365, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 1367, 766,
	1368, 469, 471, 472, 1369, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 1370, 486, 487, 1371, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 1372, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 1373, 540, 528, 0,
	0, 1374, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 1375, 559, 1376,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 1377, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 1378, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1710,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 1362, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 1676, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 1363,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 1364,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 1366, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	1365, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 1367, 766, 1368, 469, 471, 472, 1369,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 1370,
	486, 487, 1371, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 1372, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 1373, 540, 528, 0, 0, 1374, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 1375, 559, 1376, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 1377, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 1378, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 315, 0, 0, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 3287, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	4134, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 3291, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 4133, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	3290, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	4130, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 4132, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 4129, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	3289, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 4131, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 3287, 352, 353, 748, 0, 0, 3281, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 3283, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 3291, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 3290, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 3280, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 3289, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 3288, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1979, 0, 315, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 1978, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	1976, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 1981,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 1977, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 1980, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 1975,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 1973, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	1974, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1680, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1682, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 1413, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1677, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 1679,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 1413, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1583, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1585, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 1413, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 827, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 825, 327, 328, 814,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	817, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 823,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 819, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 826, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 813,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 814, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 817, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 818, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 819, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 812, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 315, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 814, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 817, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 0, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 818, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 819, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 315, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 814, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 817, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 4580, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 819, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 315, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	1413, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 315, 0, 0, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 4000, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 3505, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 3504, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 814, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 817,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 818, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 819, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 3207, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 2661, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 2605, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 2604, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 2589, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 2591, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 2580,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 315, 0, 0, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 2550, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	1413, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1812, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1811, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1702, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 318, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 319, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 320, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1695, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 318, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 1697, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 319, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 320, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1685, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 318, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	319, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	320, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1501,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 318,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	1500, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 319, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 320, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1490, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1489, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1486, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 318, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1485, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 319, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 320, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	1480, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	318, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1479, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 319, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 320, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1457, 0, 315,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 318, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1456, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 319, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 320, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 794, 0, 315, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 318, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 319, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 320, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 306, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 315, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 817,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 818, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 819, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 315, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 2704, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 2702, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 315, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 2700, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 2612, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 315, 0,
	0, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 318, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 2335, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 319, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 320, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 315, 0, 0, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 318, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 2329, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 319,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 320,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1043, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	1042, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 1041, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 917, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 906, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 915, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 908, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 914, 432, 910, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 911, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 909, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 912, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 913, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 907, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 900, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 906, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 915, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	908, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 914, 432, 910, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 911, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 909, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 912, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 913, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 907, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 315,
	0, 0, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 4133, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 759, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 4935, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1528, 0, 315, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 1531, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 1529, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 0, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 888,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 887, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	886, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 1532, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 884, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1528, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 1531, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 1529, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 759, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 888, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 887, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 886, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	1532, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 884, 783, 784, 785, 0, 707, 0, 696, 1530,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 895, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 893, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 803, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 802, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 801, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 3417, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 5255, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 3940, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 4809, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 4504, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 3145, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 3136, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 3417, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 3497, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 2489, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	887, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 886, 632, 641, 642,
	643, 644, 3366, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	884, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 2673, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 2659, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1868,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1860, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 878, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	874, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 879, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 888, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 887, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 886,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 1845, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 884, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	1818, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1817, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1801, 0, 315,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 739, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 740,
	741, 0, 342, 742, 343, 743, 0, 744, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 745,
	746, 747, 0, 352, 353, 748, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 0,
	382, 383, 384, 385, 386, 0, 387, 389, 749, 750,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	751, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 752, 753, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 754, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 755, 756, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 757, 0, 758, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1799, 760,
	761, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 762, 465, 548, 466, 763, 764, 0, 765, 0,
	467, 468, 470, 0, 766, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 767, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 768, 546, 769, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 770, 0, 559, 0, 771, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 772, 574, 575, 576, 773, 577, 578, 579,
	774, 580, 775, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 776, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 777, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 0, 653,
	778, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 779, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 780,
	674, 675, 676, 677, 781, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 782, 783, 784,
	785, 0, 707, 0, 696, 698, 699, 700, 701, 786,
	702, 787, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 788, 789,
	790, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	791, 731, 732, 733, 1793, 0, 315, 0, 734, 735,
	792, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 739,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 740, 741, 0, 342,
	742, 343, 743, 0, 744, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 745, 746, 747, 0,
	352, 353, 748, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 382, 383, 384,
	385, 386, 0, 387, 389, 749, 750, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 751, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	752, 753, 423, 0, 0, 0, 0, 0, 0, 0,
	424, 425, 426, 754, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	755, 756, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 757, 0, 758, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 759, 760, 761, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 762, 465,
	548, 466, 763, 764, 0, 765, 0, 467, 468, 470,
	0, 766, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 767, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 768,
	546, 769, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 770, 0,
	559, 0, 771, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 772,
	574, 575, 576, 773, 577, 578, 579, 774, 580, 775,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 776, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 777,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 0, 653, 778, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 779, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 780, 674, 675, 676,
	677, 781, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 782, 783, 784, 785, 0, 707,
	0, 696, 698, 699, 700, 701, 786, 702, 787, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 788, 789, 790, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 791, 731, 732,
	733, 1771, 0, 315, 0, 734, 735, 792, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 740, 741, 0, 342, 742, 343, 743,
	0, 744, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 745, 746, 747, 0, 352, 353, 748,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 0, 382, 383, 384, 385, 386, 0,
	387, 389, 749, 750, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 751, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 752, 753, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	754, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 755, 756, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	757, 0, 758, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1769, 760, 761, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 762, 465, 548, 466, 763,
	764, 0, 765, 0, 467, 468, 470, 0, 766, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 767, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 768, 546, 769, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 770, 0, 559, 0, 771,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 772, 574, 575, 576,
	773, 577, 578, 579, 774, 580, 775, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 776, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 777, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 0, 653, 778, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 779, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 780, 674, 675, 676, 677, 781, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 782, 783, 784, 785, 0, 707, 0, 696, 698,
	699, 700, 701, 786, 702, 787, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 788, 789, 790, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 791, 731, 732, 733, 1762, 0,
	315, 0, 734, 735, 792, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 1723, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 1687, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 353,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 368, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 493, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 521, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 622, 623, 624, 625, 626, 777, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 640, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 651, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 782, 783, 784, 785, 0, 707, 0, 696,
	698, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 1534,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 887,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 637,
	638, 639, 630, 631, 633, 886, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 884,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 1505, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 1504, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 1497, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 1496, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	315, 0, 0, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 1438, 329, 330, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	740, 741, 0, 342, 742, 343, 743, 0, 744, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	745, 746, 747, 0, 352, 353, 748, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	0, 382, 383, 384, 385, 386, 0, 387, 389, 749,
	750, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 751, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 752, 753, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 754, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 755, 756, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 757, 0, 758,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 759,
	760, 761, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 762, 465, 548, 466, 763, 764, 0, 765,
	0, 467, 468, 470, 0, 766, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 767, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 768, 546, 769, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 770, 0, 559, 0, 771, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 772, 574, 575, 576, 773, 577, 578,
	579, 774, 580, 775, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 776,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 777, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 0,
	653, 778, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 779, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	780, 674, 675, 676, 677, 781, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 782, 783,
	784, 785, 0, 707, 0, 696, 698, 699, 700, 701,
	786, 702, 787, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 788,
	789, 790, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 791, 731, 732, 733, 898, 0, 315, 0, 734,
	735, 792, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 878, 0, 315, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 324, 323, 325, 326, 327, 328, 0,
	329, 330, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 331, 0, 332, 333, 334, 0, 335, 336, 337,
	338, 339, 340, 341, 740, 741, 0, 342, 742, 343,
	743, 0, 744, 344, 345, 346, 347, 348, 349, 350,
	0, 0, 0, 351, 745, 746, 747, 0, 352, 874,
	748, 0, 0, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 0, 0, 363, 364, 365, 362, 366, 367,
	0, 873, 0, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 381, 0, 0,
	0, 0, 0, 0, 0, 382, 383, 384, 385, 386,
	0, 387, 389, 749, 750, 0, 392, 394, 388, 390,
	0, 393, 391, 395, 396, 0, 397, 398, 399, 0,
	0, 400, 401, 402, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 751, 411, 412, 413, 415,
	417, 414, 416, 418, 419, 420, 421, 422, 752, 753,
	423, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	426, 754, 0, 0, 0, 427, 0, 428, 429, 430,
	0, 431, 432, 0, 0, 433, 434, 435, 755, 756,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 0,
	445, 757, 0, 758, 446, 0, 447, 448, 449, 450,
	451, 452, 453, 759, 760, 761, 547, 0, 454, 455,
	456, 0, 457, 458, 459, 460, 461, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 762, 465, 548, 466,
	763, 764, 0, 765, 0, 467, 468, 470, 0, 766,
	0, 469, 471, 472, 0, 473, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 483, 482,
	0, 485, 767, 484, 0, 486, 487, 0, 0, 488,
	489, 490, 491, 492, 879, 496, 0, 0, 494, 495,
	497, 498, 0, 499, 500, 502, 505, 501, 503, 504,
	506, 519, 520, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 522, 0, 888, 0, 523,
	524, 525, 526, 527, 534, 536, 537, 532, 533, 535,
	538, 539, 541, 529, 530, 531, 0, 540, 528, 0,
	0, 0, 542, 543, 544, 545, 0, 768, 546, 769,
	549, 550, 0, 0, 551, 0, 552, 0, 0, 554,
	555, 556, 0, 0, 557, 558, 770, 0, 559, 0,
	771, 560, 561, 553, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 572, 573, 772, 574, 575,
	576, 773, 577, 578, 579, 774, 580, 775, 581, 582,
	0, 583, 584, 585, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 776, 594, 595, 597, 596, 598, 0,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	603, 604, 606, 0, 607, 608, 609, 610, 605, 611,
	612, 613, 614, 615, 616, 0, 618, 619, 617, 620,
	621, 0, 887, 623, 624, 625, 626, 875, 627, 0,
	628, 629, 637, 638, 639, 630, 631, 633, 886, 632,
	641, 642, 643, 644, 646, 645, 0, 648, 649, 647,
	650, 876, 652, 0, 653, 778, 654, 634, 635, 655,
	656, 0, 657, 658, 659, 660, 661, 662, 663, 779,
	0, 664, 0, 665, 666, 667, 668, 669, 670, 672,
	636, 673, 678, 679, 780, 674, 675, 676, 677, 781,
	681, 682, 683, 684, 0, 685, 686, 0, 680, 671,
	0, 687, 688, 689, 690, 691, 692, 0, 693, 694,
	0, 695, 884, 783, 784, 785, 0, 707, 0, 696,
	880, 699, 700, 701, 786, 702, 787, 0, 703, 704,
	705, 706, 697, 708, 709, 0, 0, 710, 711, 712,
	714, 716, 717, 713, 715, 718, 0, 719, 0, 0,
	720, 721, 722, 788, 789, 790, 0, 724, 725, 723,
	726, 727, 730, 728, 729, 791, 731, 732, 733, 867,
	0, 315, 0, 734, 735, 792, 736, 737, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	324, 323, 325, 326, 327, 328, 0, 329, 330, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 331, 0,
	332, 333, 334, 0, 335, 336, 337, 338, 339, 340,
	341, 740, 741, 0, 342, 742, 343, 743, 0, 744,
	344, 345, 346, 347, 348, 349, 350, 0, 0, 0,
	351, 745, 746, 747, 0, 352, 353, 748, 0, 0,
	0, 354, 355, 356, 357, 358, 359, 360, 361, 0,
	0, 363, 364, 365, 362, 366, 367, 0, 368, 0,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 381, 0, 0, 0, 0, 0,
	0, 0, 382, 383, 384, 385, 386, 0, 387, 389,
	749, 750, 0, 392, 394, 388, 390, 0, 393, 391,
	395, 396, 0, 397, 398, 399, 0, 0, 400, 401,
	402, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 751, 411, 412, 413, 415, 417, 414, 416,
	418, 419, 420, 421, 422, 752, 753, 423, 0, 0,
	0, 0, 0, 0, 0, 424, 425, 426, 754, 0,
	0, 0, 427, 0, 428, 429, 430, 0, 431, 432,
	0, 0, 433, 434, 435, 755, 756, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 0, 445, 757, 0,
	758, 446, 0, 447, 448, 449, 450, 451, 452, 453,
	759, 760, 761, 547, 0, 454, 455, 456, 0, 457,
	458, 459, 460, 461, 0, 0, 0, 0, 462, 463,
	464, 0, 0, 762, 465, 548, 466, 763, 764, 0,
	765, 0, 467, 468, 470, 0, 766, 0, 469, 471,
	472, 0, 473, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 483, 482, 0, 485, 767,
	484, 0, 486, 487, 0, 0, 488, 489, 490, 491,
	492, 493, 496, 0, 0, 494, 495, 497, 498, 0,
	499, 500, 502, 505, 501, 503, 504, 506, 519, 520,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 522, 0, 521, 0, 523, 524, 525, 526,
	527, 534, 536, 537, 532, 533, 535, 538, 539, 541,
	529, 530, 531, 0, 540, 528, 0, 0, 0, 542,
	543, 544, 545, 0, 768, 546, 769, 549, 550, 0,
	0, 551, 0, 552, 0, 0, 554, 555, 556, 0,
	0, 557, 558, 770, 0, 559, 0, 771, 560, 561,
	553, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 572, 573, 772, 574, 575, 576, 773, 577,
	578, 579, 774, 580, 775, 581, 582, 0, 583, 584,
	585, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	776, 594, 595, 597, 596, 598, 0, 599, 0, 600,
	601, 602, 0, 0, 0, 0, 0, 603, 604, 606,
	0, 607, 608, 609, 610, 605, 611, 612, 613, 614,
	615, 616, 0, 618, 619, 617, 620, 621, 0, 622,
	623, 624, 625, 626, 777, 627, 0, 628, 629, 868,
	638, 639, 630, 631, 633, 640, 632, 641, 642, 643,
	644, 646, 645, 0, 648, 649, 647, 650, 651, 652,
	0, 653, 778, 654, 634, 635, 655, 656, 0, 657,
	658, 659, 660, 661, 662, 663, 779, 0, 664, 0,
	665, 666, 667, 668, 669, 670, 672, 636, 673, 678,
	679, 780, 674, 675, 676, 677, 781, 681, 682, 683,
	684, 0, 685, 686, 0, 680, 671, 0, 687, 688,
	689, 690, 691, 692, 0, 693, 694, 0, 695, 782,
	783, 784, 785, 0, 707, 0, 696, 698, 699, 700,
	701, 786, 702, 787, 0, 703, 704, 705, 706, 697,
	708, 709, 0, 0, 710, 711, 712, 714, 716, 717,
	713, 715, 718, 0, 719, 0, 0, 720, 721, 722,
	788, 789, 790, 0, 724, 725, 723, 726, 727, 730,
	728, 729, 791, 731, 732, 733, 829, 0, 315, 0,
	734, 735, 792, 736, 737, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 740, 741,
	0, 342, 742, 343, 743, 0, 744, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 745, 746,
	747, 0, 352, 353, 748, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 0, 382,
	383, 384, 385, 386, 0, 387, 389, 749, 750, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 751,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 752, 753, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 754, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 755, 756, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 757, 0, 758, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 759, 760, 761,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	762, 465, 548, 466, 763, 764, 0, 765, 0, 467,
	468, 470, 0, 766, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 767, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 768, 546, 769, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	770, 0, 559, 0, 771, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 772, 574, 575, 576, 773, 577, 578, 579, 774,
	580, 775, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 776, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 777, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 0, 653, 778,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 779, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 780, 674,
	675, 676, 677, 781, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 782, 783, 784, 785,
	0, 707, 0, 696, 698, 699, 700, 701, 786, 702,
	787, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 788, 789, 790,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 791,
	731, 732, 733, 821, 0, 315, 0, 734, 735, 792,
	736, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 324, 323, 325, 326, 327, 328,
	0, 329, 330, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 331, 0, 332, 333, 334, 0, 335, 336,
	337, 338, 339, 340, 341, 740, 741, 0, 342, 742,
	343, 743, 0, 744, 344, 345, 346, 347, 348, 349,
	350, 0, 0, 0, 351, 745, 746, 747, 0, 352,
	353, 748, 0, 0, 0, 354, 355, 356, 357, 358,
	359, 360, 361, 0, 0, 363, 364, 365, 362, 366,
	367, 0, 368, 0, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 381, 0,
	0, 0, 0, 0, 0, 0, 382, 383, 384, 385,
	386, 0, 387, 389, 749, 750, 0, 392, 394, 388,
	390, 0, 393, 391, 395, 396, 0, 397, 398, 399,
	0, 0, 400, 401, 402, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 751, 411, 412, 413,
	415, 417, 414, 416, 418, 419, 420, 421, 422, 752,
	753, 423, 0, 0, 0, 0, 0, 0, 0, 424,
	425, 426, 754, 0, 0, 0, 427, 0, 428, 429,
	430, 0, 431, 432, 0, 0, 433, 434, 435, 755,
	756, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	0, 445, 757, 0, 758, 446, 0, 447, 448, 449,
	450, 451, 452, 453, 759, 760, 761, 547, 0, 454,
	455, 456, 0, 457, 458, 459, 460, 461, 0, 0,
	0, 0, 462, 463, 464, 0, 0, 762, 465, 548,
	466, 763, 764, 0, 765, 0, 467, 468, 470, 0,
	766, 0, 469, 471, 472, 0, 473, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 483,
	482, 0, 485, 767, 484, 0, 486, 487, 0, 0,
	488, 489, 490, 491, 492, 493, 496, 0, 0, 494,
	495, 497, 498, 0, 499, 500, 502, 505, 501, 503,
	504, 506, 519, 520, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 522, 0, 521, 0,
	523, 524, 525, 526, 527, 534, 536, 537, 532, 533,
	535, 538, 539, 541, 529, 530, 531, 0, 540, 528,
	0, 0, 0, 542, 543, 544, 545, 0, 768, 546,
	769, 549, 550, 0, 0, 551, 0, 552, 0, 0,
	554, 555, 556, 0, 0, 557, 558, 770, 0, 559,
	0, 771, 560, 561, 553, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 572, 573, 772, 574,
	575, 576, 773, 577, 578, 579, 774, 580, 775, 581,
	582, 0, 583, 584, 585, 0, 586, 587, 588, 589,
	590, 591, 592, 593, 776, 594, 595, 597, 596, 598,
	0, 599, 0, 600, 601, 602, 0, 0, 0, 0,
	0, 603, 604, 606, 0, 607, 608, 609, 610, 605,
	611, 612, 613, 614, 615, 616, 0, 618, 619, 617,
	620, 621, 0, 622, 623, 624, 625, 626, 777, 627,
	0, 628, 629, 637, 638, 639, 630, 631, 633, 640,
	632, 641, 642, 643, 644, 646, 645, 0, 648, 649,
	647, 650, 651, 652, 0, 653, 778, 654, 634, 635,
	655, 656, 0, 657, 658, 659, 660, 661, 662, 663,
	779, 0, 664, 0, 665, 666, 667, 668, 669, 670,
	672, 636, 673, 678, 679, 780, 674, 675, 676, 677,
	781, 681, 682, 683, 684, 0, 685, 686, 0, 680,
	671, 0, 687, 688, 689, 690, 691, 692, 0, 693,
	694, 0, 695, 782, 783, 784, 785, 0, 707, 0,
	696, 698, 699, 700, 701, 786, 702, 787, 0, 703,
	704, 705, 706, 697, 708, 709, 0, 0, 710, 711,
	712, 714, 716, 717, 713, 715, 718, 0, 719, 0,
	0, 720, 721, 722, 788, 789, 790, 0, 724, 725,
	723, 726, 727, 730, 728, 729, 791, 731, 732, 733,
	798, 0, 315, 0, 734, 735, 792, 736, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 4165, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 887, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 886, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 884, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 4057, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 4026, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 4022, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 3965, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 3963, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 3951, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 3948, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 3516, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	868, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 2630, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 0, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 446, 0, 447, 448, 449, 450, 451, 452,
	453, 1466, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 627, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 315, 0, 0,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 740, 741, 0,
	342, 742, 343, 743, 0, 744, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 745, 746, 747,
	0, 352, 353, 748, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 0, 382, 383,
	384, 385, 386, 0, 387, 389, 749, 750, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 751, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 752, 753, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 754, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 755, 756, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 757, 0, 758, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 759, 760, 761, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 762,
	465, 548, 466, 763, 764, 0, 765, 0, 467, 468,
	470, 0, 766, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 767, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	768, 546, 769, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 770,
	0, 559, 0, 771, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	772, 574, 575, 576, 773, 577, 578, 579, 774, 580,
	775, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 776, 594, 595, 1386,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	777, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 0, 653, 778, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 779, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 780, 674, 675,
	676, 677, 781, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 782, 783, 784, 785, 0,
	707, 0, 696, 698, 699, 700, 701, 786, 702, 787,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 788, 789, 790, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 791, 731,
	732, 733, 315, 0, 0, 0, 734, 735, 792, 736,
	737, 738, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 324, 323, 325, 326, 327, 328, 0, 329, 330,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 331,
	0, 332, 333, 334, 0, 335, 336, 337, 338, 339,
	340, 341, 740, 741, 0, 342, 742, 343, 743, 0,
	744, 344, 345, 346, 347, 348, 349, 350, 0, 0,
	0, 351, 745, 746, 747, 0, 352, 353, 748, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 0, 363, 364, 365, 362, 366, 367, 0, 368,
	0, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 381, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 386, 0, 387,
	389, 749, 750, 0, 392, 394, 388, 390, 0, 393,
	391, 395, 396, 0, 397, 398, 399, 0, 0, 400,
	401, 402, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 751, 411, 412, 413, 415, 417, 414,
	416, 418, 419, 420, 421, 422, 752, 753, 423, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 754,
	0, 0, 0, 427, 0, 428, 429, 430, 0, 431,
	432, 0, 0, 433, 434, 435, 755, 756, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 0, 445, 757,
	0, 758, 0, 0, 447, 448, 449, 450, 451, 452,
	453, 759, 760, 761, 547, 0, 454, 455, 456, 0,
	457, 458, 459, 460, 461, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 762, 465, 548, 466, 763, 764,
	0, 765, 0, 467, 468, 470, 0, 766, 0, 469,
	471, 472, 0, 473, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 483, 482, 0, 485,
	767, 484, 0, 486, 487, 0, 0, 488, 489, 490,
	491, 492, 493, 496, 0, 0, 494, 495, 497, 498,
	0, 499, 500, 502, 505, 501, 503, 504, 506, 519,
	520, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 522, 0, 521, 0, 523, 524, 525,
	526, 527, 534, 536, 537, 532, 533, 535, 538, 539,
	541, 529, 530, 531, 0, 540, 528, 0, 0, 0,
	542, 543, 544, 545, 0, 768, 546, 769, 549, 550,
	0, 0, 551, 0, 552, 0, 0, 554, 555, 556,
	0, 0, 557, 558, 770, 0, 559, 0, 771, 560,
	561, 553, 562, 563, 564, 0, 566, 567, 568, 569,
	570, 571, 0, 572, 573, 772, 574, 575, 576, 773,
	577, 578, 579, 774, 580, 775, 581, 582, 0, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 0, 592,
	593, 776, 594, 595, 597, 596, 598, 0, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 603, 604,
	606, 0, 607, 608, 609, 610, 605, 611, 612, 613,
	614, 615, 616, 0, 618, 619, 617, 620, 621, 0,
	622, 623, 624, 625, 626, 777, 0, 0, 628, 629,
	637, 638, 639, 630, 631, 633, 640, 632, 641, 642,
	643, 644, 646, 645, 0, 648, 649, 647, 650, 651,
	652, 0, 653, 778, 654, 634, 635, 655, 656, 0,
	657, 658, 659, 660, 661, 662, 663, 779, 0, 664,
	0, 665, 666, 667, 668, 669, 670, 672, 636, 673,
	678, 679, 780, 674, 675, 676, 677, 781, 681, 682,
	683, 684, 0, 685, 686, 0, 680, 671, 0, 687,
	688, 689, 690, 691, 692, 0, 693, 694, 0, 695,
	782, 783, 784, 785, 0, 707, 0, 696, 698, 699,
	700, 701, 786, 702, 787, 0, 703, 704, 705, 706,
	697, 708, 709, 0, 0, 710, 711, 712, 714, 716,
	717, 713, 715, 718, 0, 719, 0, 0, 720, 721,
	722, 788, 789, 790, 0, 724, 725, 723, 726, 727,
	730, 728, 729, 791, 731, 732, 733, 1807, 0, 1512,
	0, 734, 735, 792, 736, 737, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 324, 323,
	325, 326, 327, 328, 0, 329, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 332, 333,
	334, 0, 335, 336, 337, 338, 339, 340, 341, 0,
	0, 0, 342, 0, 343, 0, 0, 0, 344, 345,
	346, 347, 348, 349, 350, 0, 0, 0, 351, 0,
	0, 0, 0, 352, 353, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 0, 363,
	364, 365, 362, 366, 367, 0, 368, 0, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 381, 0, 0, 0, 0, 0, 0, 1514,
	382, 383, 384, 385, 386, 0, 387, 389, 0, 0,
	0, 392, 394, 388, 390, 0, 393, 391, 395, 396,
	0, 397, 398, 399, 0, 0, 400, 401, 402, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	0, 411, 412, 413, 415, 417, 414, 416, 418, 419,
	420, 421, 422, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 424, 425, 426, 0, 0, 0, 0,
	427, 0, 428, 429, 430, 0, 431, 432, 0, 0,
	433, 434, 435, 0, 0, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 0, 445, 0, 0, 0, 446,
	0, 447, 448, 449, 450, 451, 452, 453, 1806, 0,
	0, 547, 0, 454, 455, 456, 0, 457, 458, 459,
	460, 461, 0, 0, 0, 0, 462, 463, 464, 0,
	0, 0, 465, 548, 466, 0, 0, 0, 0, 0,
	467, 468, 470, 0, 0, 0, 469, 471, 472, 0,
	473, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 483, 482, 0, 485, 0, 484, 0,
	486, 487, 0, 0, 488, 489, 490, 491, 492, 493,
	496, 0, 0, 494, 495, 497, 498, 0, 499, 500,
	502, 505, 501, 503, 504, 506, 519, 520, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	522, 0, 521, 0, 523, 524, 525, 526, 527, 534,
	536, 537, 532, 533, 535, 538, 539, 541, 529, 530,
	531, 0, 540, 528, 0, 0, 0, 542, 543, 544,
	545, 0, 0, 546, 0, 549, 550, 0, 0, 551,
	0, 552, 0, 0, 554, 555, 556, 0, 0, 557,
	558, 0, 0, 559, 0, 0, 560, 561, 553, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	572, 573, 0, 574, 575, 576, 0, 577, 578, 579,
	0, 580, 0, 581, 582, 0, 583, 584, 585, 0,
	586, 587, 588, 589, 590, 591, 592, 593, 0, 594,
	595, 597, 596, 598, 0, 599, 0, 600, 601, 602,
	0, 0, 0, 0, 0, 603, 604, 606, 0, 607,
	608, 609, 610, 605, 611, 612, 613, 614, 615, 616,
	0, 618, 619, 617, 620, 621, 0, 622, 623, 624,
	625, 626, 0, 627, 0, 628, 629, 637, 638, 639,
	630, 631, 633, 640, 632, 641, 642, 643, 644, 646,
	645, 0, 648, 649, 647, 650, 651, 652, 1515, 653,
	0, 654, 634, 635, 655, 656, 0, 657, 658, 659,
	660, 661, 662, 663, 0, 0, 664, 0, 665, 666,
	667, 668, 669, 670, 672, 636, 673, 678, 679, 0,
	674, 675, 676, 677, 0, 681, 682, 683, 684, 0,
	685, 686, 0, 680, 671, 0, 687, 688, 689, 690,
	691, 692, 0, 693, 694, 0, 695, 0, 0, 0,
	0, 0, 707, 0, 696, 698, 699, 700, 701, 0,
	702, 0, 0, 703, 704, 705, 706, 697, 708, 709,
	0, 0, 710, 711, 712, 714, 716, 717, 713, 715,
	718, 0, 719, 0, 0, 720, 721, 722, 0, 0,
	0, 0, 724, 725, 723, 726, 727, 730, 728, 729,
	0, 731, 732, 733, 1726, 0, 1512, 0, 734, 735,
	0, 736, 737, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 324, 323, 325, 326, 327,
	328, 0, 329, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 332, 333, 334, 0, 335,
	336, 337, 338, 339, 340, 341, 0, 0, 0, 342,
	0, 343, 0, 0, 0, 344, 345, 346, 347, 348,
	349, 350, 0, 0, 0, 351, 0, 0, 0, 0,
	352, 353, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 361, 0, 0, 363, 364, 365, 362,
	366, 367, 0, 368, 0, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 381,
	0, 0, 0, 0, 0, 0, 1514, 382, 383, 384,
	385, 386, 0, 387, 389, 0, 0, 0, 392, 394,
	388, 390, 0, 393, 391, 395, 396, 0, 397, 398,
	399, 0, 0, 400, 401, 402, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 0, 411, 412,
	413, 415, 417, 414, 416, 418, 419, 420, 421, 422,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	424, 425, 426, 0, 0, 0, 0, 427, 0, 428,
	429, 430, 0, 431, 432, 0, 0, 433, 434, 435,
	0, 0, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 0, 445, 0, 0, 0, 446, 0, 447, 448,
	449, 450, 451, 452, 453, 1725, 0, 0, 547, 0,
	454, 455, 456, 0, 457, 458, 459, 460, 461, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 0, 465,
	548, 466, 0, 0, 0, 0, 0, 467, 468, 470,
	0, 0, 0, 469, 471, 472, 0, 473, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	483, 482, 0, 485, 0, 484, 0, 486, 487, 0,
	0, 488, 489, 490, 491, 492, 493, 496, 0, 0,
	494, 495, 497, 498, 0, 499, 500, 502, 505, 501,
	503, 504, 506, 519, 520, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 522, 0, 521,
	0, 523, 524, 525, 526, 527, 534, 536, 537, 532,
	533, 535, 538, 539, 541, 529, 530, 531, 0, 540,
	528, 0, 0, 0, 542, 543, 544, 545, 0, 0,
	546, 0, 549, 550, 0, 0, 551, 0, 552, 0,
	0, 554, 555, 556, 0, 0, 557, 558, 0, 0,
	559, 0, 0, 560, 561, 553, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 572, 573, 0,
	574, 575, 576, 0, 577, 578, 579, 0, 580, 0,
	581, 582, 0, 583, 584, 585, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 0, 594, 595, 597, 596,
	598, 0, 599, 0, 600, 601, 602, 0, 0, 0,
	0, 0, 603, 604, 606, 0, 607, 608, 609, 610,
	605, 611, 612, 613, 614, 615, 616, 0, 618, 619,
	617, 620, 621, 0, 622, 623, 624, 625, 626, 0,
	627, 0, 628, 629, 637, 638, 639, 630, 631, 633,
	640, 632, 641, 642, 643, 644, 646, 645, 0, 648,
	649, 647, 650, 651, 652, 1515, 653, 0, 654, 634,
	635, 655, 656, 0, 657, 658, 659, 660, 661, 662,
	663, 0, 0, 664, 0, 665, 666, 667, 668, 669,
	670, 672, 636, 673, 678, 679, 0, 674, 675, 676,
	677, 0, 681, 682, 683, 684, 0, 685, 686, 0,
	680, 671, 0, 687, 688, 689, 690, 691, 692, 0,
	693, 694, 0, 695, 0, 0, 0, 0, 0, 707,
	0, 696, 698, 699, 700, 701, 0, 702, 0, 0,
	703, 704, 705, 706, 697, 708, 709, 0, 0, 710,
	711, 712, 714, 716, 717, 713, 715, 718, 0, 719,
	0, 0, 720, 721, 722, 0, 0, 0, 0, 724,
	725, 723, 726, 727, 730, 728, 729, 0, 731, 732,
	733, 1510, 0, 1512, 0, 734, 735, 0, 736, 737,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 324, 323, 325, 326, 327, 328, 0, 329,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 332, 333, 334, 0, 335, 336, 337, 338,
	339, 340, 341, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 344, 345, 346, 347, 348, 349, 350, 0,
	0, 0, 351, 0, 0, 0, 0, 352, 353, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 0, 363, 364, 365, 362, 366, 367, 0,
	368, 0, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 381, 0, 0, 0,
	0, 0, 0, 1514, 382, 383, 384, 385, 386, 0,
	387, 389, 0, 0, 0, 392, 394, 388, 390, 0,
	393, 391, 395, 396, 0, 397, 398, 399, 0, 0,
	400, 401, 402, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 0, 411, 412, 413, 415, 417,
	414, 416, 418, 419, 420, 421, 422, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 424, 425, 426,
	0, 0, 0, 0, 427, 0, 428, 429, 430, 0,
	431, 432, 0, 0, 433, 434, 435, 0, 0, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 0, 445,
	0, 0, 0, 446, 0, 447, 448, 449, 450, 451,
	452, 453, 1509, 0, 0, 547, 0, 454, 455, 456,
	0, 457, 458, 459, 460, 461, 0, 0, 0, 0,
	462, 463, 464, 0, 0, 0, 465, 548, 466, 0,
	0, 0, 0, 0, 467, 468, 470, 0, 0, 0,
	469, 471, 472, 0, 473, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 483, 482, 0,
	485, 0, 484, 0, 486, 487, 0, 0, 488, 489,
	490, 491, 492, 493, 496, 0, 0, 494, 495, 497,
	498, 0, 499, 500, 502, 505, 501, 503, 504, 506,
	519, 520, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 522, 0, 521, 0, 523, 524,
	525, 526, 527, 534, 536, 537, 532, 533, 535, 538,
	539, 541, 529, 530, 531, 0, 540, 528, 0, 0,
	0, 542, 543, 544, 545, 0, 0, 546, 0, 549,
	550, 0, 0, 551, 0, 552, 0, 0, 554, 555,
	556, 0, 0, 557, 558, 0, 0, 559, 0, 0,
	560, 561, 553, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 572, 573, 0, 574, 575, 576,
	0, 577, 578, 579, 0, 580, 0, 581, 582, 0,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 0, 594, 595, 597, 596, 598, 0, 599,
	0, 600, 601, 602, 0, 0, 0, 0, 0, 603,
	604, 606, 0, 607, 608, 609, 610, 605, 611, 612,
	613, 614, 615, 616, 0, 618, 619, 617, 620, 621,
	0, 622, 623, 624, 625, 626, 0, 627, 0, 628,
	629, 637, 638, 639, 630, 631, 633, 640, 632, 641,
	642, 643, 644, 646, 645, 0, 648, 649, 647, 650,
	651, 652, 1515, 653, 0, 654, 634, 635, 655, 656,
	0, 657, 658, 659, 660, 661, 662, 663, 0, 0,
	664, 0, 665, 666, 667, 668, 669, 670, 672, 636,
	673, 678, 679, 0, 674, 675, 676, 677, 0, 681,
	682, 683, 684, 0, 685, 686, 0, 680, 671, 0,
	687, 688, 689, 690, 691, 692, 0, 693, 694, 0,
	695, 0, 0, 0, 0, 0, 707, 0, 696, 698,
	699, 700, 701, 0, 702, 0, 0, 703, 704, 705,
	706, 697, 708, 709, 0, 0, 710, 711, 712, 714,
	716, 717, 713, 715, 718, 0, 719, 0, 0, 720,
	721, 722, 0, 0, 0, 0, 724, 725, 723, 726,
	727, 730, 728, 729, 0, 731, 732, 733, 2349, 0,
	1512, 0, 734, 735, 0, 736, 737, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 324,
	323, 325, 326, 327, 328, 0, 329, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 332,
	333, 334, 0, 335, 336, 337, 338, 339, 340, 341,
	0, 0, 0, 342, 0, 343, 0, 0, 0, 344,
	345, 346, 347, 348, 349, 350, 0, 0, 0, 351,
	0, 0, 0, 0, 352, 353, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 361, 0, 0,
	363, 364, 365, 362, 366, 367, 0, 368, 0, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 381, 0, 0, 0, 0, 0, 0,
	1514, 382, 383, 384, 385, 386, 0, 387, 389, 0,
	0, 0, 392, 394, 388, 390, 0, 393, 391, 395,
	396, 0, 397, 398, 399, 0, 0, 400, 401, 402,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 0, 411, 412, 413, 415, 417, 414, 416, 418,
	419, 420, 421, 422, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 0, 0, 0,
	0, 427, 0, 428, 429, 430, 0, 431, 432, 0,
	0, 433, 434, 435, 0, 0, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 0, 445, 0, 0, 0,
	446, 0, 447, 448, 449, 450, 451, 452, 453, 0,
	0, 0, 547, 0, 454, 455, 456, 0, 457, 458,
	459, 460, 461, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 0, 465, 548, 466, 0, 0, 0, 0,
	0, 467, 468, 470, 0, 0, 0, 469, 471, 472,
	0, 473, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 483, 482, 0, 485, 0, 484,
	0, 486, 487, 0, 0, 488, 489, 490, 491, 492,
	493, 496, 0, 0, 494, 495, 497, 498, 0, 499,
	500, 502, 505, 501, 503, 504, 506, 519, 520, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 522, 0, 521, 0, 523, 524, 525, 526, 527,
	534, 536, 537, 532, 533, 535, 538, 539, 541, 529,
	530, 531, 0, 540, 528, 0, 0, 0, 542, 543,
	544, 545, 0, 0, 546, 0, 549, 550, 0, 0,
	551, 0, 552, 0, 0, 554, 555, 556, 0, 0,
	557, 558, 0, 0, 559, 0, 0, 560, 561, 553,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 572, 573, 0, 574, 575, 576, 0, 577, 578,
	579, 0, 580, 0, 581, 582, 0, 583, 584, 585,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 0,
	594, 595, 597, 596, 598, 0, 599, 0, 600, 601,
	602, 0, 0, 0, 0, 0, 603, 604, 606, 0,
	607, 608, 609, 610, 605, 611, 612, 613, 614, 615,
	616, 0, 618, 619, 617, 620, 621, 0, 622, 623,
	624, 625, 626, 0, 627, 0, 628, 629, 637, 638,
	639, 630, 631, 633, 640, 632, 641, 642, 643, 644,
	646, 645, 0, 648, 649, 647, 650, 651, 652, 1515,
	653, 0, 654, 634, 635, 655, 656, 0, 657, 658,
	659, 660, 661, 662, 663, 0, 0, 664, 0, 665,
	666, 667, 668, 669, 670, 672, 636, 673, 678, 679,
	0, 674, 675, 676, 677, 0, 681, 682, 683, 684,
	0, 685, 686, 0, 680, 671, 0, 687, 688, 689,
	690, 691, 692, 0, 693, 694, 0, 695, 0, 0,
	0, 0, 0, 707, 0, 696, 698, 699, 700, 701,
	0, 702, 0, 0, 703, 704, 705, 706, 697, 708,
	709, 0, 0, 710, 711, 712, 714, 716, 717, 713,
	715, 718, 0, 719, 0, 0, 720, 721, 722, 0,
	0, 0, 0, 724, 725, 723, 726, 727, 730, 728,
	729, 0, 731, 732, 733, 2309, 0, 1512, 0, 734,
	735, 0, 736, 737, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 324, 323, 325, 326,
	327, 328, 0, 329, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 332, 333, 334, 0,
	335, 336, 337, 338, 339, 340, 341, 0, 0, 0,
	342, 0, 343, 0, 0, 0, 344, 345, 346, 347,
	348, 349, 350, 0, 0, 0, 351, 0, 0, 0,
	0, 352, 353, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 359, 360, 361, 0, 0, 363, 364, 365,
	362, 366, 367, 0, 368, 0, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	381, 0, 0, 0, 0, 0, 0, 1514, 382, 383,
	384, 385, 386, 0, 387, 389, 0, 0, 0, 392,
	394, 388, 390, 0, 393, 391, 395, 396, 0, 397,
	398, 399, 0, 0, 400, 401, 402, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 0, 411,
	412, 413, 415, 417, 414, 416, 418, 419, 420, 421,
	422, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 424, 425, 426, 0, 0, 0, 0, 427, 0,
	428, 429, 430, 0, 431, 432, 0, 0, 433, 434,
	435, 0, 0, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 0, 445, 0, 0, 0, 446, 0, 447,
	448, 449, 450, 451, 452, 453, 0, 0, 0, 547,
	0, 454, 455, 456, 0, 457, 458, 459, 460, 461,
	0, 0, 0, 0, 462, 463, 464, 0, 0, 0,
	465, 548, 466, 0, 0, 0, 0, 0, 467, 468,
	470, 0, 0, 0, 469, 471, 472, 0, 473, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 483, 482, 0, 485, 0, 484, 0, 486, 487,
	0, 0, 488, 489, 490, 491, 492, 493, 496, 0,
	0, 494, 495, 497, 498, 0, 499, 500, 502, 505,
	501, 503, 504, 506, 519, 520, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 522, 0,
	521, 0, 523, 524, 525, 526, 527, 534, 536, 537,
	532, 533, 535, 538, 539, 541, 529, 530, 531, 0,
	540, 528, 0, 0, 0, 542, 543, 544, 545, 0,
	0, 546, 0, 549, 550, 0, 0, 551, 0, 552,
	0, 0, 554, 555, 556, 0, 0, 557, 558, 0,
	0, 559, 0, 0, 560, 561, 553, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 572, 573,
	0, 574, 575, 576, 0, 577, 578, 579, 0, 580,
	0, 581, 582, 0, 583, 584, 585, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 0, 594, 595, 597,
	596, 598, 0, 599, 0, 600, 601, 602, 0, 0,
	0, 0, 0, 603, 604, 606, 0, 607, 608, 609,
	610, 605, 611, 612, 613, 614, 615, 616, 0, 618,
	619, 617, 620, 621, 0, 622, 623, 624, 625, 626,
	0, 627, 0, 628, 629, 637, 638, 639, 630, 631,
	633, 640, 632, 641, 642, 643, 644, 646, 645, 0,
	648, 649, 647, 650, 651, 652, 1515, 653, 0, 654,
	634, 635, 655, 656, 0, 657, 658, 659, 660, 661,
	662, 663, 0, 0, 664, 0, 665, 666, 667, 668,
	669, 670, 672, 636, 673, 678, 679, 0, 674, 675,
	676, 677, 0, 681, 682, 683, 684, 0, 685, 686,
	0, 680, 671, 0, 687, 688, 689, 690, 691, 692,
	0, 693, 694, 0, 695, 0, 0, 0, 0, 0,
	707, 0, 696, 698, 699, 700, 701, 0, 702, 0,
	0, 703, 704, 705, 706, 697, 708, 709, 0, 0,
	710, 711, 712, 714, 716, 717, 713, 715, 718, 0,
	719, 0, 0, 720, 721, 722, 0, 0, 0, 0,
	724, 725, 723, 726, 727, 730, 728, 729, 1512, 731,
	732, 733, 0, 0, 0, 0, 734, 735, 0, 736,
	737, 738, 0, 0, 0, 321, 322, 324, 323, 325,
	326, 327, 328, 0, 329, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 332, 333, 334,
	0, 335, 336, 337, 338, 339, 340, 341, 0, 0,
	0, 342, 0, 343, 0, 0, 0, 344, 345, 346,
	347, 348, 349, 350, 0, 0, 0, 351, 0, 0,
	0, 0, 352, 353, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 359, 360, 361, 0, 0, 363, 364,
	365, 362, 366, 367, 0, 368, 0, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 381, 0, 0, 0, 0, 0, 0, 1514, 382,
	383, 384, 385, 386, 0, 387, 389, 0, 0, 0,
	392, 394, 388, 390, 0, 393, 391, 395, 396, 0,
	397, 398, 399, 0, 0, 400, 401, 402, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 0,
	411, 412, 413, 415, 417, 414, 416, 418, 419, 420,
	421, 422, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 424, 425, 426, 0, 0, 0, 0, 427,
	0, 428, 429, 430, 0, 431, 432, 0, 0, 433,
	434, 435, 0, 0, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 0, 445, 0, 0, 0, 446, 0,
	447, 448, 449, 450, 451, 452, 453, 0, 0, 0,
	547, 0, 454, 455, 456, 0, 457, 458, 459, 460,
	461, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	0, 465, 548, 466, 0, 0, 0, 0, 0, 467,
	468, 470, 0, 0, 0, 469, 471, 472, 0, 473,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 483, 482, 0, 485, 0, 484, 0, 486,
	487, 0, 0, 488, 489, 490, 491, 492, 493, 496,
	0, 0, 494, 495, 497, 498, 0, 499, 500, 502,
	505, 501, 503, 504, 506, 519, 520, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 522,
	0, 521, 0, 523, 524, 525, 526, 527, 534, 536,
	537, 532, 533, 535, 538, 539, 541, 529, 530, 531,
	0, 540, 528, 0, 0, 0, 542, 543, 544, 545,
	0, 0, 546, 0, 549, 550, 0, 0, 551, 0,
	552, 0, 0, 554, 555, 556, 0, 0, 557, 558,
	0, 0, 559, 0, 0, 560, 561, 553, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 572,
	573, 0, 574, 575, 576, 0, 577, 578, 579, 0,
	580, 0, 581, 582, 0, 583, 584, 585, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 0, 594, 595,
	597, 596, 598, 0, 599, 0, 600, 601, 602, 0,
	0, 0, 0, 0, 603, 604, 606, 0, 607, 608,
	609, 610, 605, 611, 612, 613, 614, 615, 616, 0,
	618, 619, 617, 620, 621, 0, 622, 623, 624, 625,
	626, 0, 627, 0, 628, 629, 637, 638, 639, 630,
	631, 633, 640, 632, 641, 642, 643, 644, 646, 645,
	0, 648, 649, 647, 650, 651, 652, 1515, 653, 0,
	654, 634, 635, 655, 656, 0, 657, 658, 659, 660,
	661, 662, 663, 0, 0, 664, 0, 665, 666, 667,
	668, 669, 670, 672, 636, 673, 678, 679, 0, 674,
	675, 676, 677, 0, 681, 682, 683, 684, 0, 685,
	686, 0, 680, 671, 0, 687, 688, 689, 690, 691,
	692, 0, 693, 694, 0, 695, 0, 0, 0, 0,
	0, 707, 0, 696, 698, 699, 700, 701, 0, 702,
	0, 0, 703, 704, 705, 706, 697, 708, 709, 0,
	0, 710, 711, 712, 714, 716, 717, 713, 715, 718,
	0, 719, 0, 0, 720, 721, 722, 0, 0, 0,
	0, 724, 725, 723, 726, 727, 730, 728, 729, 0,
	731, 732, 733, 0, 0, 0, 0, 734, 735, 0,
	736, 737, 738, 2031, 2032, 0, 2064, 2065, 2066, 2075,
	2076, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 2062, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2081, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 2068, 2062, 2033, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	2031, 2032, 0, 2064, 2065, 2066, 2075, 2076, 2077, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 2068, 2062, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 2057, 2058, 2059,
	0, 2087, 0, 0, 0, 0, 2039, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 2072,
	0, 2039, 0, 2082, 0, 0, 0, 0, 0, 0,
	2061, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2078, 0, 2079, 0, 0, 0, 0, 0, 0, 2048,
	2049, 0, 0, 0, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 2070,
	0, 0, 0, 2056, 2057, 2058, 2059, 0, 0, 0,
	0, 0, 0, 2039, 2054, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 2054,
	2082, 0, 0, 2080, 0, 0, 0, 2061, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 2078, 0, 2079,
	0, 0, 0, 0, 0, 2084, 2048, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0,
	2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0,
	0, 0, 0, 0, 5022, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 0, 0, 0, 0, 0, 4833,
	0, 0, 0, 0, 0, 2031, 2032, 0, 2064, 2065,
	2066, 2075, 2076, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 2062,
	0, 0, 0, 0, 0, 0, 0, 2034, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	2045, 2046, 2052, 2074, 2051, 2047, 0, 2044, 2042, 2043,
	2035, 2036, 2037, 2038, 2040, 2041, 2087, 0, 0, 0,
	0, 4732, 0, 0, 0, 2033, 0, 2031, 2032, 0,
	2064, 2065, 2066, 2075, 2076, 2077, 2053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 0, 0,
	2068, 2062, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 2068, 2062, 2033, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 2053, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 2057,
	2058, 2059, 0, 2087, 0, 0, 0, 0, 2039, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 2061, 2063, 0, 0, 0, 0, 0, 0,
	2056, 2057, 2058, 2059, 0, 0, 0, 0, 0, 0,
	2039, 0, 2078, 0, 2079, 0, 0, 0, 0, 0,
	0, 2048, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 0, 0, 0, 2056, 2057, 2058, 2059, 0,
	0, 0, 0, 2072, 0, 2039, 2054, 2082, 0, 0,
	0, 0, 0, 0, 2061, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2078, 0, 2079, 0, 0, 0,
	0, 0, 0, 2048, 2049, 0, 0, 0, 2072, 0,
	0, 0, 2082, 0, 0, 2080, 0, 0, 0, 2061,
	2063, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 0, 2054, 2078,
	0, 2079, 0, 0, 0, 0, 0, 2084, 2048, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 2055, 0, 0, 0, 0,
	2031, 2032, 0, 2064, 2065, 2066, 2075, 2076, 2077, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 2062, 0, 0, 2073, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 2086, 0, 0, 0, 0, 0, 0,
	2033, 0, 2073, 2071, 0, 0, 0, 0, 0, 0,
	0, 2053, 0, 0, 0, 2045, 2046, 2052, 2074, 2051,
	2047, 2050, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040,
	2041, 0, 0, 0, 0, 0, 4731, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2046, 2052,
	2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036, 2037,
	2038, 2040, 2041, 2056, 2057, 2058, 2059, 0, 4730, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0,
	0, 0, 0, 4315, 0, 0, 2072, 0, 2031, 2032,
	2082, 2064, 2065, 2066, 2075, 2076, 2077, 2061, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2062, 0, 0, 0, 0, 2078, 0, 2079,
	2034, 0, 0, 0, 0, 0, 2048, 2049, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2070, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2054, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 2031,
	2032, 0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 2068, 2062, 0, 0, 0, 0, 0, 0,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 2072, 0, 0, 0, 2082, 2033,
	0, 0, 0, 0, 0, 2061, 2063, 0, 2055, 0,
	2053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 2057, 2058, 2059, 0, 0, 0, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 2072, 0, 0, 2071, 2082,
	0, 0, 0, 0, 0, 0, 2061, 2063, 0, 0,
	2045, 2046, 2052, 2074, 2051, 2047, 0, 2044, 2042, 2043,
	2035, 2036, 2037, 2038, 2040, 2041, 2078, 0, 2079, 0,
	0, 3727, 0, 0, 0, 2048, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2054, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 2062, 0, 2073, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 2080,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 0, 0, 2087, 2086, 0, 0, 0, 0, 0,
	0, 2084, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 2032, 0, 2064, 2065, 2066, 2075, 2076, 2077,
	0, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 2062, 2071, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 2055, 2045, 2046,
	2052, 2074, 2051, 2047, 2081, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 0, 2056, 2057, 2058, 2059, 3726,
	0, 0, 2087, 0, 0, 2039, 0, 0, 0, 2073,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 2072, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 2061,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 2079, 0, 0, 0, 0, 0, 0, 2048, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 2056, 2057, 2058, 2059, 0, 0,
	0, 0, 0, 2054, 2039, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	2046, 2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035,
	2036, 2037, 2038, 2040, 2041, 0, 0, 0, 0, 0,
	3725, 0, 0, 0, 0, 0, 0, 2072, 0, 0,
	0, 2082, 2080, 0, 0, 0, 0, 0, 2061, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 2078, 0,
	2079, 0, 0, 0, 2084, 0, 0, 2048, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 2031, 2032, 0, 2064, 2065, 2066,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 2528, 0,
	0, 0, 0, 0, 2060, 0, 0, 2068, 2062, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2081, 0, 0,
	2055, 2080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 2069, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 2073, 2084, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 2529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 0, 0, 0, 0, 0, 2056, 2057, 2058,
	2059, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0,
	2072, 0, 0, 3724, 2082, 0, 0, 2086, 0, 0,
	0, 2061, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 2079, 0, 0, 0, 0, 0, 0,
	2048, 2049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2052, 2074, 2051, 2047, 0, 2044, 2042,
	2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 0, 0,
	3689, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 2031, 2032, 0, 2064, 2065, 2066, 2075,
	2076, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 2062, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 0, 2053, 0, 0, 0, 2428, 0,
	0, 0, 2031, 2032, 2050, 2064, 2065, 2066, 2075, 2076,
	2077, 0, 0, 0, 0, 0, 0, 2530, 0, 0,
	0, 0, 0, 0, 2073, 2068, 2062, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 2426, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 0, 0, 2056, 2057, 2058, 2059,
	0, 0, 0, 2050, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 0, 2071, 2082, 0, 0, 0, 0, 0, 0,
	2061, 2063, 0, 0, 2045, 2046, 2052, 2074, 2051, 2047,
	0, 2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041,
	2078, 0, 2079, 0, 0, 2056, 2057, 2058, 2059, 2048,
	2049, 0, 0, 0, 0, 2039, 5550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 2061,
	2063, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 2078,
	0, 2079, 0, 2080, 0, 0, 0, 0, 2048, 2049,
	0, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 2069, 0, 0, 0, 2070, 0,
	0, 2081, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 2427, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5549, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 3792, 0, 0, 0, 0, 0, 0,
	3791, 0, 0, 0, 2060, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 2070, 0, 0, 0, 2086, 0,
	0, 0, 0, 2045, 2046, 2052, 2074, 2051, 2047, 2054,
	2044, 2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2062, 0, 0, 0, 0, 3659, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 2069,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 2045, 2046, 2052, 2074, 2051, 2047, 2033, 2044,
	2042, 2043, 2035, 2036, 2037, 2038, 2040, 2041, 0, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 3660, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 5128, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 4885, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 4536, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 4537, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 2070, 0, 0, 0, 0, 0,
	3798, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 3793, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 4296, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 3728, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 3758, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 2068, 2062, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 2053,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 0, 0,
	0, 2039, 0, 0, 2070, 0, 0, 0, 0, 2642,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 0, 0,
	0, 0, 0, 0, 2048, 2049, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 2032,
	0, 2064, 2065, 2066, 2075, 2076, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 2062, 0, 0, 0, 0, 0, 2080, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	2084, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 0, 0, 2073, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 2086, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 2072, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 2061, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 2079, 1111, 0,
	1164, 0, 0, 0, 2048, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 2054,
	0, 0, 0, 1135, 0, 1117, 1116, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 0, 0, 0, 0, 0, 1137,
	0, 0, 0, 0, 0, 1118, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 1176, 0, 1147, 2080, 0,
	0, 0, 0, 0, 0, 0, 1132, 1133, 0, 0,
	0, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 1165, 1123, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 1129, 1130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1138, 1136,
	0, 0, 0, 0, 2086, 0, 1131, 0, 0, 0,
	0, 1148, 0, 0, 1170, 1169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1173, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 2046,
	2052, 2074, 2051, 2047, 0, 2044, 2042, 2043, 2035, 2036,
	2037, 2038, 2040, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1122, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1120, 0, 0, 0, 0, 1156, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 1154,
	0, 0, 0, 0, 0, 0, 0, 1174, 1149, 0,
	0, 1141, 1139, 0, 0, 0, 1144, 0, 0, 0,
	0, 0, 0, 0, 1145, 0, 0, 1113, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 1158,
	0, 1146, 1128, 0, 0, 0, 0, 1143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1172, 0,
	0, 0, 0, 0, 0, 0, 1150, 0, 1151, 0,
	0, 0, 0, 0, 0, 0, 0, 1126, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155,
}

var sqlPact = [...]int32{
	15434, -1000, -1000, -1000, -1000, -1000, -1000, 204, -1000, -1000,
	203, 202, 201, 200, 199, 198, 197, 194, 193, 190,
	187, -1000, -1000, 186, 180, 179, 176, -1000, -1000, 175,
	174, -1000, 173, -1000, -1000, 172, -1000, 171, 170, 169,
	-1000, -1000, 168, -1000, 166, -1000, -1000, -1000, -1000, 165,
	164, 162, 111799, 111182, 112414, 2658, 140758, 121653, 2186, 98237,
	140141, 97620, 139524, 2549, 11367, 138907, 3151, 161, -1000, 138290,
	156, 155, 153, -1000, 121036, 137673, 118570, 117953, 2082, 86440,
	1898, 1890, -1000, 151, 149, -1000, 8682, 82113, 147, 143,
	142, 140, 2564, 139, -1000, 138, 137, -1000, 136, 135,
	-1000, 14625, 1848, -1000, 134, 133, 132, -1000, 418, 117336,
	131, 127, 124, 2681, 123, 119, 79651, 116, 115, 112,
	2571, 3275, -1000, -1000, 2397, -1000, -1000, 111, 110, 109,
	108, 107, 106, 105, 104, 103, 102, 98, 97, 96,
	95, -1000, 94, 93, 92, 90, 80, -1000, 76, 73,
	71, -1000, 68, -1000, 63, 62, 61, 59, 58, 57,
	56, 55, 48, 47, 46, 45, 44, 43, 42, 161536,
	-1000, -1000, 39, -1000, 1961, 1880, 1874, 1868, 1034, 38,
	37, 36, 35, 30, 29, 27, 26, 25, 24, 23,
	22, 21, 20, 17, 10, 6, 5, 4, 3, 2,
	1, -1, 148, -3, -4, -5, -7, -11, -14, -15,
	-16, 3123, 3980, -1000, 2002, 1287, 1358, 35551, 3375, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 149983, 141373,
	-17, -92, -19, -1000, 3724, 1024, 64708, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 308, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 467, 2800, 733, -1000, -1000,
	-1000, 137056, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2655, -12, 98852, -1000, 2419, -1000, -1000, -1000, -1000, -1000,
	732, -1000, 2651, 2607, 364, 2599, 98852, -1000, -1000, -1000,
	3824, 3733, 110565, 2831, 4287, 4286, 4285, 4283, 4282, 149368,
	1989, 2917, 4281, 4274, 4269, 4267, 4261, 4256, 4255, -1000,
	109948, 1165, 109331, 108714, 3845, 136441, 108097, 135824, 152449, 54607,
	1227, 3822, -1000, -1000, -1000, -1000, -1000, -1000, 141373, -1000,
	1160, -1000, -1000, 4254, 2344, 730, 120419, -1000, -1000, 135207,
	2190, -1000, -1000, -1000, 975, 1274, 38079, 38079, 38079, 304,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3834, -1000, -1000,
	-1000, -1000, 141373, 3168, 3168, 1470, 1501, 1501, 3168, 3168,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4253, 4251,
	4250, 4247, 4246, -1000, -1000, -1000, 1745, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 97003, 27778, 96386, 95769, 107480, 134590,
	53975, 106863, 106246, 91450, 4244, 4243, 53343, 62188, 3978, 133973,
	151832, 3976, 3972, 1158, 2417, 1638, -1000, -1000, -1000, -1000,
	-1000, -1000, -38, 85825, 4043, 141373, -1000, 279, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52711, 915, 52079, 980, 51447,
	616, 133356, -1000, -1000, -1000, -1000, -1000, 90823, 3730, -1000,
	132739, 1657, 2830, 4241, 4238, 1278, 4237, 3709, 1969, 4236,
	4235, 4234, 4233, 4229, 4226, 4225, 1674, 132122, 3085, 131505,
	1996, 151215, 2235, 1157, 105629, 112414, 3016, 130888, 1668, 1653,
	-1000, -1000, -1000, -1000, 3509, 3268, 3228, 1320, -1000, -1000,
	-1000, -1000, -1000, 68462, 8846, 7229, -1000, -1000, 11965, 130271,
	71587, 112414, 112414, -1000, -1000, -1000, -1000, -1000, -1000, 50815,
	850, 50183, 1154, 129654, -1000, -1000, 69087, 3334, 1209, -1000,
	-1000, -1000, -1000, -1000, 129037, 49551, 840, 48919, 1139, 141373,
	-1000, 3374, 2089, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2692, 1788, 4044, 3172, 90196, 2357, 1535,
	3782, 3506, 3503, 1651, 2412, 3501, 4224, 2987, 3217, 3498,
	3497, 3495, 3486, 3473, 1802, 2972, 744, 2961, 34919, 3364,
	1970, 48287, 1717, 1635, 3464, 3460, 4063, 3914, 2402, 2285,
	2354, 2313, 95152, 4223, 4221, 3748, 3454, 3446, 3224, 3444,
	2253, -1000, 3332, 1666, 272, -1000, -1000, -1000, -1000, -1000,
	-1000, 272, 1584, -1000, -1000, -1000, -1000, -1000, 100082, -1000,
	-1000, 1745, -1000, -1000, -1000, 1457, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2002, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2862, -1000, 2352, -1000, -1000,
	-1000, 2899, 3721, 3721, 3721, 3821, 458, 448, -1000, 148,
	918, 1250, -1000, -1000, 160847, -1000, -1000, 55239, 55239, 55239,
	55239, 55239, 55239, 55239, 55239, 2555, -1000, 728, -1000, -1000,
	808, -1000, 726, 664, 606, -1000, -1000, -1000, -1000, -1000,
	-1000, 725, -1000, -1000, -1000, -1000, -1000, -1000, 4031, -1000,
	30990, -1000, -1000, -1000, 456, 724, 55239, -1000, -1000, 4102,
	4100, 1075, -1000, 264, 989, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3373,
	723, 722, -1000, 720, 719, 717, 713, 712, -1000, 711,
	-1000, 710, 709, 708, 707, 703, 701, 700, 699, -1000,
	2431, -1000, -1000, -1000, -1000, -1000, -1000, 638, 637, 637,
	637, -1000, 1128, 635, 698, -1000, 326, 634, 284, 632,
	631, 630, -1000, 681, 680, 678, 677, 674, 673, 671,
	670, 669, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1143,
	-1000, -1000, -1000, -1000, 1530, -43, 141373, -1000, 602, -43,
	-1000, -1000, 668, -1000, 39361, 39361, 39361, -1000, -1000, 2650,
	55239, -1000, 2739, -1000, -33, -33, 944, 66583, -1000, 63440,
	944, 913, 821, 72829, -1000, 3330, -1000, -1000, 667, 260,
	-1000, -1000, -1000, -1000, 28403, 3327, 141373, 141373, 141373, 112414,
	112414, 112414, 141373, 4219, 4218, 3477, 55239, -1000, -1000, 81496,
	154294, 113029, 1449, -40, -1000, -1000, 3952, 85200, 80881, 3372,
	154294, 3369, 3325, 153683, 89569, 293, 3552, -1000, -1000, 665,
	4216, -1000, -1000, -1000, -1000, -1000, 3551, 4214, 4213, 4211,
	141373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2630, 3549,
	-1000, -42, -1000, 116719, 2630, 3548, -1000, -42, 2630, 3543,
	-1000, -42, 116104, -1000, -1000, 2630, 3534, -1000, -1000, 288,
	3529, -1000, -1000, 287, 3522, -1000, -1000, 256, -90, 3512,
	-1000, -1000, -1000, -1000, -1000, -1000, 160847, -1000, -1000, -1000,
	153066, -1000, 3755, -1000, 141373, -1000, 55239, -1000, -1000, 3951,
	1884, 3752, 3865, -1000, -1000, -58, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2879, 2895, 1241, 2701, -1000, 3614, 1847,
	38079, 3694, -1000, -1000, -1000, -1000, -1000, 253, 28403, 3235,
	-1000, -1000, 141373, -1000, 141373, 3168, 3168, -1000, -1000, -1000,
	4056, 4055, 3168, 3168, 141373, 141373, -1000, -1000, -1000, -1000,
	-1000, -1000, -58, -1000, 6279, 3499, 1676, -1000, 2682, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2447, 3488,
	-1000, 2371, 3480, 2391, -1000, -1000, 6746, -1000, 5446, -1000,
	157672, 1493, -1000, -1000, -1000, -1000, 2493, 3476, -32, -1000,
	-1000, 2507, -1000, 4035, 3311, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 157283, -1000, 1982, -1000,
	-1000, 2390, 2356, -1000, 1385, 3475, -1000, 3165, 3165, 105012,
	3547, 70962, 69087, 85825, -57, -1000, -1000, -1000, -1000, -1000,
	-91, -1000, 27145, 160847, -1000, -1000, -1000, -1000, 2131, 160847,
	957, -1000, -1000, 3471, -1000, 160847, 954, -1000, -1000, 3470,
	-1000, 2970, -1000, 3367, -1000, -1000, -1000, 2778, 88942, 2777,
	1079, -1000, 104397, 2401, 4210, -1000, 4209, -1000, -1000, 4205,
	-1000, 4199, 4194, 4193, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 103780, 2649, -1000, -1000, 1558, 1030, 92075, -1000, 2776,
	3863, -1000, 103163, 1148, -1000, 1057, 2775, -1000, 1648, 115489,
	1077, 2774, -1000, 4188, 3827, 3062, 1057, 2771, -1000, -1000,
	-1000, -1000, -1000, 1082, -1000, 74059, -1000, 74059, -1000, 1876,
	-1000, 148753, -33, 112414, 4031, -1000, -96, -1000, -1000, -1000,
	1024, -1000, 67834, -1000, 67834, 119802, 92075, 1030, 3324, 77784,
	160527, -1000, 1074, -1000, -1000, 160847, -1000, -1000, -1000, 2964,
	-1000, -190, 3164, -1000, 92075, 70337, 3321, 2955, -1000, 160847,
	-1000, -1000, -1000, -1000, 160847, -1000, -1000, -1000, 92075, 1558,
	-1000, 128420, 102546, -1000, -1000, 1615, 2918, -1000, -1000, -1000,
	69087, 3320, 1397, 92075, 92075, 92075, 92075, -1000, 127803, -1000,
	-1000, 2395, 1754, 3751, 2385, 112414, -1000, 2239, -1000, -1000,
	-1000, 3767, 3545, 141373, -1000, -1000, 3366, -1000, 84585, 3366,
	114874, -1000, 114259, -1000, 113644, -1000, 112414, -1000, 112414, -1000,
	4187, 4186, 4179, -1000, -1000, 4178, -1000, 4177, 3760, -1000,
	1136, 47655, 160847, 3759, -1000, 4176, 2271, 3364, 160847, -1000,
	3544, 1866, 1861, 141373, -1000, -1000, 141373, -1000, 141373, -1000,
	-1000, -1000, 2669, 1783, -1000, -1000, 2877, -1000, -1000, -1000,
	1071, -1000, -1000, 112414, 112414, 112414, 112414, 112414, 1831, -1000,
	47023, 3728, -1000, -1000, 3443, 4172, 1957, -1000, 2225, -1000,
	3319, 3731, -1000, 3317, 1604, 2094, 249, 4106, 249, -1000,
	-1000, 303, -1000, -1000, 148138, -1000, 2899, -1000, 141373, -1000,
	2864, 3357, 3362, 1934, 2668, 3009, -1000, 46391, 2957, 59031,
	2678, 148, -1000, -1000, 148, 148, 36815, -1000, -1000, 38079,
	918, 85200, 85200, 28403, 1526, 55239, 55239, 55239, 55239, 55239,
	55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239,
	55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239,
	55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239, 55239,
	55239, 2438, 55239, 1446, 55239, 55239, 55239, 55239, 2432, -1000,
	-1000, 2202, 507, 2364, 664, -1000, -1000, -1000, 4004, 4004,
	4004, 570, 570, 570, 161267, 161267, 636, 4171, 808, -1000,
	55239, -1000, 121, 67198, 55239, 29030, -1000, 448, 11054, 2909,
	-1000, 447, 29692, -1000, -1000, -1000, 30990, 606, 45729, 55239,
	1037, 160847, -1000, -1000, 1673, 4047, 26512, 3383, 3211, 663,
	916, 909, 34257, 33595, 32933, 32271, 895, 782, 55239, 55239,
	55239, 55239, 55239, 55239, 55239, 55239, -1000, -1000, 4052, -1000,
	4047, -1000, -1000, 659, -1000, 4047, 4047, -1000, 4047, 1512,
	1467, 4047, -1000, 4047, 4047, 10098, 10098, 45097, 44465, 43833,
	59663, 43201, 55239, 31639, 42569, 41937, -1000, 61559, 141373, -43,
	3948, 141373, 55239, 345, -1000, 13794, -1000, 345, 345, 658,
	-97, 160847, 2937, 2937, 65333, 2769, 2569, 2569, 2569, -1000,
	944, 20776, 944, 125958, 2573, 944, 944, 244, 299, 446,
	62815, 2739, 125343, 779, 647, -21, -22, -25, -1000, -1000,
	-26, -27, -1000, -1000, 112414, 640, 29030, 28403, 241, 2277,
	-98, 3000, 2997, 2992, 2991, -1000, 2989, 2648, -1000, -1000,
	-1000, 2126, -109, 1445, 112414, 141373, 1987, -1000, -1000, -1000,
	-1000, 85825, -44, 85825, 141373, 3727, 112414, -70, -1000, 154294,
	6667, -115, -1000, 1426, 231, 4047, -1000, -1000, -1000, 4170,
	4169, -1000, 574, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 638, 637, 637, 637, -1000, 1128, 635, 326, 634,
	284, 632, 631, 630, -1000, -1000, -1000, -1000, -1000, 3316,
	112414, 141373, 1891, 83970, 101929, -90, 113029, 154294, -39, -1000,
	-1000, -1000, -1000, 112414, -1000, -1000, 112414, -1000, 75293, -1000,
	141373, -1000, -1000, -1000, 4168, -1000, 112414, 112414, 2630, 3469,
	-1000, 112414, -1000, 112414, 286, 3468, -1000, -1000, 141373, -1000,
	112414, 112414, -1000, 141373, 141373, 141373, 154294, 154294, 277, -1000,
	112414, 918, -117, 1284, -58, -1000, -1000, -1000, -1000, 1745,
	-1000, 1903, -1000, -1000, -1000, -1000, -1000, -1000, 1652, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1075, -1000, -1000,
	-1000, -1000, 4026, 4011, -56, -1000, -1000, 28403, -1000, 2236,
	-1000, -1000, -1000, -1000, 141373, 141373, -1000, -1000, 141373, 141373,
	-1000, -1000, -60, 1921, 601, 1444, -1000, 94535, 2852, 3734,
	4166, 3054, 3716, 1871, -1000, 1763, 625, -1000, 3842, 100082,
	3909, 3921, 1472, -1000, 3315, -1000, -1000, -1000, 971, 1944,
	2087, 1440, 1439, 100082, 2371, -1000, 85200, -1000, 3051, 3820,
	1501, 1505, 1501, 1501, 1528, 1507, -1000, 100082, 2074, 1437,
	1434, 2760, 1429, 2071, 1425, 3607, -1000, -1000, 2641, 2725,
	-1000, -1000, -1000, -1000, 1909, 3125, -1000, 2890, 1474, 1474,
	141373, -1000, 1420, -1000, -1000, 1820, 1919, -1000, -1000, 127188,
	1960, -1000, 1419, 1412, 142603, 3966, 2862, 2557, 843, 2351,
	-1000, 1484, 1411, 3314, -1000, -1000, -61, 3908, 3919, 1472,
	-1000, -1000, 3307, 1408, -1000, 1118, -1000, -1000, -1000, 3817,
	112414, 28403, 1743, 1729, 1747, 2066, 1407, -45, -1000, 3878,
	1867, -1000, 3985, 92075, -1000, 2802, 1797, -1000, 1558, 1558,
	122268, 141373, -1000, -1000, -1000, 3781, 3779, -1000, -1000, 1406,
	1404, -1000, 1120, 11561, 3661, -1000, 154294, 1120, 1120, 2346,
	3467, 3131, 1776, -1000, 3160, 931, 3157, -1000, -1000, -1000,
	931, -57, 85825, 141373, 229, -1000, 121, 55239, 55239, 121,
	55239, 121, -1000, 3848, 3466, 3947, -1000, 3465, 4165, 624,
	-1000, -1000, 2914, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	623, 2767, 3301, 141373, 280, -1000, 112414, -1000, 3946, 126573,
	-1000, 3462, 154294, 2371, 2761, -1000, -1000, 101314, -1000, 3457,
	2377, 467, 2759, -1000, 727, 4164, 3451, -1000, 147523, -1000,
	3755, 1357, 3449, 1205, 718, 3944, -1000, 718, 75919, -1000,
	141373, -1000, -33, 5993, 93305, -123, -124, 445, -1000, 141373,
	141373, 3676, 2383, 2380, -1000, 1041, 69087, -1000, 69087, -125,
	-1000, -190, 3155, 1718, 69087, -1000, 1030, -159, 931, -1000,
	931, -1000, 112414, 3360, -1000, 92075, 69087, -1000, 1030, 1030,
	1030, 1030, -1000, -1000, -1000, -1000, 4162, 4161, 4160, 4158,
	-1000, -1000, 1056, 112414, 141373, 112414, -1000, 3129, 1767, -1000,
	222, -1000, 154294, -1000, 154294, 141373, 112414, -1000, -1000, 1056,
	141373, 1056, 141373, 1056, 141373, 1056, 1056, -1000, -1000, -1000,
	-1000, -1000, 121, -1000, -1000, 160847, -1000, 55239, -1000, -1000,
	1720, 4157, 1902, -1000, 3359, -1000, 3358, -1000, 19, -1000,
	-1000, 4049, 2220, -1000, 4097, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4156, 3722, 160847, -1000, 88315, 2112,
	-1000, -1000, -1000, -1000, 112414, 112414, 112414, 112414, 141373, 3660,
	-1000, 141373, 3654, 3659, 112414, -1000, 4104, -1000, -1000, 100082,
	-1000, 2864, 3357, -1000, -1000, -1000, -1000, -1000, -1000, 1910,
	2618, -1000, 2942, -1000, 1815, -1000, -1000, -1000, 160847, 60295,
	-1000, -1000, 160847, 2159, -1000, 58399, 57767, -1000, -1000, 1968,
	112414, 3007, -1000, 3007, -89, -1000, 158327, 2941, 112414, -56,
	38079, -1000, -1000, -1000, -1000, -1000, 969, 1683, 1683, 1447,
	1447, 1447, 1447, 3856, 6264, 6481, 5986, 6832, 6832, 9841,
	9841, 9841, 9841, 9841, 6832, 1021, 570, 570, 1021, 1021,
	1021, 1021, 1021, 570, 570, 570, 6832, 6832, 6832, 570,
	161267, 160947, 14140, 55239, 55239, 1401, 2183, 507, 13913, 55239,
	10003, 10003, 10003, 10003, -1000, 2339, -1000, -1000, -1000, -1000,
	3293, 622, 59663, 59663, -1000, -1000, -1000, -1000, 30341, 55239,
	-1000, -1000, -1000, -1000, 41275, -1000, -1000, 156980, -344, 442,
	-1000, 221, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 441, -86, 120, -1000, 55239,
	55239, 55239, 439, -1000, 218, 55239, 141373, -1000, 17701, 776,
	-155, -1000, -126, 1568, -1000, 55239, -1000, -1000, 1398, -1000,
	1396, 1391, 1387, -1000, 621, 438, -1000, 215, -1000, 2567,
	619, 618, 55239, -1000, -1000, -1000, -1000, -1000, 156861, -1000,
	-1000, 156548, -1000, -1000, 156387, -1000, -1000, 156159, -1000, -1000,
	-1000, -1000, -1000, 160427, 17381, 16330, 14654, 10092, 12930, 12222,
	-132, 437, -133, 4047, 430, 426, 424, 968, 962, 423,
	422, 419, -140, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -141, 412, -1000, 3292, -86,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 410, -1000,
	409, -1000, 160107, -86, 403, 7451, -1000, 59663, 59663, 59663,
	59663, 400, -1000, 158007, -1000, 160007, 40643, 40643, 40643, 399,
	159687, 55239, -86, -142, -1000, -143, -1000, -1000, -1000, -1000,
	566, -148, -1000, -149, 1083, 39361, 64081, 28403, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1083, 1083, 55239, -1000, 55239, 2951, -1000, -1000, -1000, -1000,
	2950, 1980, 2937, 65333, -1000, -1000, -1000, -1000, 125958, -1000,
	4031, 3368, -1000, 125958, -1000, -1000, 141373, 602, -1000, 125958,
	125958, 28403, 944, -1000, -1000, 141373, 600, 944, 125958, 675,
	-1000, -1000, -1000, -1000, -1000, 398, 78409, 120, 213, 28403,
	1057, -1000, -1000, 3069, 3069, 3069, 3069, 3069, 112414, -1000,
	-1000, 154294, 1383, -55, -150, 3147, 3144, 3139, -57, 85825,
	-57, -91, 141373, -47, 3932, -270, -1000, 2458, -1000, 85200,
	-1000, 807, 1197, 28403, -1000, -1000, -1000, -1000, 4047, 154294,
	3291, 283, 3138, 3135, 3134, -1000, 2640, 98852, 266, -90,
	154294, -1000, 293, -154, -1000, -1000, 83343, 79024, -1000, 2572,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4155, -1000, 2630,
	-1000, -1000, 112414, 2630, 2630, -1000, 112414, 112414, 2630, -1000,
	288, -1000, 287, -1000, -1000, -90, -1000, 1070, 38079, -1000,
	1745, -1000, -1000, 1730, -1000, 2387, -1000, 1389, -1000, -1000,
	38079, -1000, 3684, -1000, 1977, -1000, -1000, -1000, -1000, 2480,
	141373, 141373, 112414, -1000, 123498, 141373, -1000, 2540, 154294, -1000,
	2758, 146908, 2737, 146293, 85200, -1000, -1000, 617, 981, 2940,
	2935, 1201, 141373, 141373, 2934, 145678, 145063, -1000, 4154, 141373,
	2450, 55239, 123498, 3814, 2604, 6091, 121, 121, -1000, 121,
	-1000, -1000, 615, 1337, 112414, 112414, 141373, 154294, 112414, 2226,
	-1000, -1000, -1000, -1000, -1000, 100697, -1000, -1000, 1501, -1000,
	-1000, -1000, 1501, -1000, 1501, 2371, 2196, 141373, 154294, 112414,
	-1000, -1000, -1000, -1000, 141373, 141373, 154294, 2638, 2712, 2637,
	3119, -1000, -1000, -1000, -1000, -1000, -1000, 154294, 144448, 2330,
	143833, 2328, 2327, -1000, -1000, -1000, 2275, 2318, 2499, 2058,
	141373, -1000, -1000, -1000, -1000, -1000, 1533, -1000, 843, 1381,
	3288, 55239, 55239, 2516, 121, 121, -1000, 121, 614, 28403,
	-1000, 1515, -1000, 3410, 141373, 4094, 143218, 4093, 141373, 141373,
	141373, 154294, 3719, 141373, -51, -1000, 1476, -1000, 3985, -1000,
	919, -1000, -159, -54, -93, -1000, 917, 906, -91, 2344,
	141373, 154294, -1000, 142603, 11561, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2477, 3084, 1213, 141373, 1385, -1000, -1000, 2053,
	1378, 1370, 100082, 2471, 2048, 2157, 154294, 69087, 1042, 69087,
	3074, -1000, -1000, 25879, -1000, 160847, 160847, -1000, 160847, -1000,
	82728, 92075, 92075, 141373, -1000, 76544, 141373, 93920, 1012, 3448,
	74676, -91, 1030, 1558, 3382, 1885, -93, 613, 141373, -1000,
	-1000, 2371, 3441, 467, 2757, -1000, 154294, 1146, 3940, 3438,
	612, 4152, 4147, -1000, 112414, 2635, 2755, -1000, -1000, 141988,
	3474, 843, 141373, 1083, 65333, 2266, -1000, 72214, 1179, 141373,
	2187, 258, -1000, -1000, -1000, -8, 141373, -1000, 820, -1000,
	-1000, 5993, 5993, 1030, 69712, -160, -1000, 212, 611, 905,
	904, -1000, 5713, -1000, -190, -1000, 92075, 1041, 69087, 3286,
	-190, 3133, 3284, -1000, -1000, 1069, 1030, 1452, 3132, 1030,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -34, -1000, 2046, 2153, 141373, -90, -90, -66,
	-1000, -1000, 211, -55, -1000, 1056, -1000, 1056, -1000, 1056,
	-1000, -1000, -1000, 160847, -1000, -1000, -1000, 1900, 1883, 141373,
	-1000, 3355, -1000, 141373, -1000, -1000, 4145, -1000, -1000, 28403,
	141373, 112414, 28403, 112414, 3354, 3352, -1000, -1000, -1000, 141373,
	-1000, -1000, 141373, -1000, -1000, -1000, -1000, -1000, -1000, 1244,
	-1000, 2159, 2615, -1000, 606, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2860, -1000, -1000, 36815, 863, -1000,
	-1000, 112414, -35, -56, 55239, 55239, 13239, 11528, 55239, 59663,
	59663, -1000, 55239, 9701, -1000, -1000, -1000, -1000, -1000, 3282,
	605, 55239, 85200, 7339, 5758, -1000, 397, 661, 1021, -1000,
	55239, -1000, 7982, -1000, 389, 40011, -1000, 158747, 31, -165,
	-1000, 21424, -86, -166, -1000, -1000, 802, -1000, 3562, -1000,
	55239, 159587, 2820, 2312, 2177, 1914, 4047, 4092, 25246, -1000,
	77169, 1087, 2582, 155731, -1000, -1000, -1000, -1000, 85200, 85200,
	55239, 55239, -1000, 55239, 55239, 55239, -1000, -1000, -1000, 4047,
	386, -1000, -1000, 961, -1000, -1000, -1000, 961, -1000, -1000,
	1501, -1000, 1501, -1000, 55239, -1000, -1000, 3281, 55239, -1000,
	85200, 85200, 59663, 59663, 59663, 59663, 59663, 59663, 59663, 59663,
	59663, 59663, 59663, 59663, 59663, 59663, 59663, 59663, 59663, 59663,
	59663, 59663, 2962, 59663, 4002, 4002, 4002, 1616, -1000, 3348,
	3281, 55239, 55239, 85200, 385, 382, 377, -1000, 55239, -86,
	-1000, -1000, 9697, 604, -1000, 2841, -1000, 141373, -1000, 3210,
	-1000, 55239, -1000, -185, -1000, 2739, -1000, -1000, 3210, 3210,
	-167, 160847, 65333, 65333, -1000, 603, 55239, 2949, -1000, -1000,
	775, -331, -1000, 902, -1000, -1000, -1000, -1000, -1000, -1000,
	899, -1000, 602, -1000, -1000, -1000, 210, 125958, 600, -1000,
	141373, 125958, 764, -1000, -168, -1000, -1000, -173, -1000, 125343,
	376, 28403, -1000, 1083, 2985, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2978, -270, 154294, 154294, 2045, 2040, 2030, -57,
	-91, 2598, -1000, 3222, 4091, -1000, 4046, 788, 755, 209,
	375, -90, 154294, 154294, 2029, 2018, 2014, 80266, 3276, 154294,
	-1000, -1000, -1000, 76544, 85200, -1000, 85200, -1000, -1000, -1000,
	-1000, 2630, -1000, -1000, -1000, 286, -1000, -1000, -1000, -1000,
	3017, -1000, -58, -1000, -1000, -1000, 55239, -1000, 1022, -1000,
	-1000, 3732, 599, 1363, 1362, -1000, -175, -1000, 897, -1000,
	-1000, -1000, -1000, -1000, 3265, -1000, 3434, -1000, 2748, -1000,
	1186, 2746, 2178, -1000, 55239, 598, 3061, 595, 583, 4144,
	2392, 4143, 1203, 3433, 2630, 3432, 2630, -1000, -1000, -1000,
	963, -1000, 160847, -182, -1000, 2604, -1000, 582, 578, -1000,
	-60, 1833, 585, 1360, 1068, -1000, -1000, 55239, 55239, 124728,
	-1000, 511, 3744, -36, -1000, -1000, -1000, 2007, 1356, 1349,
	-1000, -1000, -1000, -1000, -1000, 2371, 1994, 1348, 1344, -1000,
	-1000, -1000, -1000, -1000, -1000, 3402, 3023, 2709, -1000, -1000,
	-1000, -1000, 2745, -1000, 141373, -1000, 3428, 141373, 3187, 843,
	141373, 3744, 3237, 1066, -1000, 3395, 3394, 959, 141373, 55239,
	55239, 159267, 159167, -1000, 1065, -1000, -1000, 55239, -1000, -61,
	-1000, 1342, 3876, 2743, 112414, -1000, 2630, 3427, 1327, -1000,
	1315, -1000, -1000, -1000, 3873, 3857, 1340, 1867, 92075, 69087,
	2611, -1000, 3847, 2595, 4012, 3985, 69087, -1000, 122268, 92075,
	92075, -1000, -1000, -1000, 4012, -1000, -1000, -1000, -1000, 87688,
	-1000, -1000, 1120, 141373, 154294, 112414, 2137, -1000, -1000, 98852,
	99467, 141373, 3131, -90, 931, -1000, 2616, 931, 1042, 3270,
	-1000, 2944, -1000, -1000, 1062, 373, -62, -1000, 1345, 4141,
	367, -183, -63, 85200, -1000, -1000, -1000, -1000, 2737, 112414,
	141373, 1359, 3058, 141373, 141373, 3939, -1000, 2664, 657, 112414,
	948, -1000, 4031, -1000, -1000, -1000, 141373, 39361, 122268, -1000,
	3855, 112414, 3938, 3426, 1057, 112414, 121, 112414, 4062, -1000,
	-1000, 3935, 112414, 3424, 2633, 2740, 2900, 843, 92690, 1057,
	2579, -72, -1000, 2187, 38711, 3725, -184, -1000, -1000, -1000,
	1083, 75919, 65333, 55239, 4140, -191, -1000, -1000, -1000, -1000,
	-1000, 92075, 1030, 141373, 141373, 4139, 92075, 92075, 92075, -64,
	575, -1000, 896, 890, 886, -1000, -1000, -1000, -1000, -1000,
	-1000, 883, 881, 879, 877, -1000, -1000, 1041, -1000, -1000,
	-190, 69087, 1041, 69087, 121, -1000, 2590, -1000, 112414, 69087,
	-1000, 24613, 141373, 3129, -1000, 87055, -1000, -1000, -1000, -1000,
	-1000, 1056, 4088, -91, -1000, -1000, -1000, -1000, 2518, 2676,
	2518, 2147, 2144, -1000, -1000, -1000, 2592, -1000, -1000, -1000,
	-1000, 2998, 3708, 28403, 3844, 10003, 55239, 55239, 6354, 702,
	352, 10003, 55239, 55239, 85200, 8973, -192, 55239, 55239, -1000,
	55239, 752, 160847, -1000, 4087, 55239, 366, 365, -1000, -1000,
	-1000, 4042, -1000, -1000, -1000, 160847, 55239, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 363, -1000, 208, -1000, -1000, -1000,
	150598, -1000, 55239, 358, 3813, -1000, 357, 356, 544, 8195,
	155686, 155614, 155029, 354, -1000, -1000, -1000, 353, 348, 160847,
	3348, 160847, -1000, -1000, 1171, 1171, 1458, 1458, 1458, 1458,
	4002, 766, 1094, 498, 778, 778, 778, 1064, 1616, 1616,
	778, 778, 778, 1616, 3266, 2905, 572, 7479, -1000, -1000,
	160847, 160847, 347, -1000, -1000, -1000, -86, 336, 9697, -1000,
	-1000, 3206, 3805, 160847, -1000, 65333, 3206, 3206, -1000, -1000,
	1980, 141373, 160847, 65333, -1000, 3368, -1000, 22708, 22069, -1000,
	28403, -1000, -1000, -194, -1000, 85200, -1000, -1000, -1000, 4031,
	-1000, 78409, -1000, -1000, 206, -1000, 2985, -1000, 864, -1000,
	-1000, 92075, 92075, 4138, 4137, -1000, 4084, 4083, 2543, 4082,
	3069, -1000, -270, -176, 141373, 141373, 141373, -1000, 2594, -1000,
	747, 4136, 786, 28403, -1000, -90, -90, 141373, 141373, 141373,
	3258, 112414, 141373, 1976, 154294, -90, -1000, -1000, -1000, -1000,
	-1000, -1000, 3674, 160847, 3345, 3198, 3196, 141373, 141373, -1000,
	123498, 38079, 1647, 124113, 141373, 3423, -1000, 3422, -1000, 1201,
	2546, 154957, 65958, -1000, 65958, 141373, -1000, -1000, -1000, -1000,
	2149, 1575, 4135, 1262, -1000, 3770, 141373, -1000, 141373, -1000,
	-1000, -1000, 123498, -1000, 141373, 141373, 112414, 141373, -1000, 154294,
	3407, -200, 160847, -65, -1000, 862, -1000, 1436, -1000, 23980,
	141373, 154294, 112414, 141373, 154294, 112414, 141373, -1000, 3021, 3421,
	1178, 141373, -1000, 3419, 141373, 1176, -1000, -1000, 141373, 2527,
	-1000, -1000, 3393, -1000, 160847, 158847, 121, 55239, 3406, -202,
	28403, -1000, 4081, 4080, 3418, 3776, -1000, 141373, 4079, 141373,
	112414, 3671, -1000, -1000, -1000, -1000, 861, 860, 859, 855,
	853, 4001, 122268, -1000, 1044, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1983, 1314, 1312, 2629, 2626,
	2580, -66, 2471, 1042, -67, 559, -1000, 1042, -1000, 92075,
	69087, 4133, 2173, 76544, 55239, 55239, -1000, 3048, -1000, 119185,
	93920, 2688, -1000, -1000, 557, 141373, 141373, 551, -1000, 121,
	-1000, 4132, 123498, 546, -1000, 2587, -1000, 743, -1000, -1000,
	254, -210, 154294, 2371, 121, 112414, -1000, 467, 1039, 467,
	330, -69, -1000, 3492, 1191, 28403, 112414, 3417, 2908, 843,
	92690, -1000, 1357, 3009, -1000, -71, -1000, 506, 121, 2579,
	-1000, -72, 160847, -1000, 852, 329, -1000, 3669, -1000, -1000,
	-213, -1000, -1000, 3688, 3688, 92075, 69087, 92075, 92075, 92075,
	69087, 92075, -1000, 1041, 3934, -1000, -190, -1000, 2829, 1030,
	1030, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28403,
	1940, -1000, 543, 542, -1000, -1000, -1000, -1000, 3708, 10003,
	10003, 55239, 55239, 55239, 10003, 8973, -221, -1000, 10003, 10003,
	-86, -1000, -1000, 158747, -1000, -1000, -1000, 160847, -1000, 23347,
	2521, -1000, 154912, -1000, 36815, -1000, -1000, 55239, 55239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 59663, 3256, 541,
	85200, -1000, -1000, 328, 1076, 55239, 57135, 2739, 1076, 1076,
	-1000, -223, -1000, -1000, -1000, 4031, -1000, 4031, 206, -1000,
	141373, -1000, -1000, -1000, 28403, -1000, 92075, -1000, -1000, -1000,
	-1000, -1000, 4131, 4130, 2707, 4129, 4128, -1000, -1000, -1000,
	3437, -174, -207, -208, -1000, 783, -1000, 4126, -1000, 237,
	235, 234, 154294, 3255, 158, 3120, 3115, -90, -1000, 121,
	-1000, -1000, -1000, -1000, -1000, -1000, 3107, 3933, -1000, 2314,
	-1000, 141373, 141373, -1000, 141373, -1000, 28403, 141373, 3184, 1355,
	-1000, 981, 2928, 530, 59663, 1229, 112414, 984, 3193, 3189,
	-1000, 3929, 3801, 3149, -230, -1000, 141373, 55239, 141373, -231,
	-232, 2696, -1000, -1000, 1228, 1343, 55239, 1223, -1000, -1000,
	-1000, 85200, 519, 2630, 2630, -1000, -233, -238, -1000, -1000,
	-1000, 55239, 1309, 141373, 37447, -1000, 4124, 3744, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 141373, 141373, -1000, -1000,
	-1000, 141373, 3744, 141373, -1000, 55239, -1000, 158427, 55239, 1305,
	-1000, -1000, -1000, 4078, 2630, 28403, 2630, -1000, 2630, 3776,
	1256, 92075, 55239, 1665, 69087, 69087, -1000, -1000, -1000, 2660,
	141373, 154294, 112414, 1724, 1724, 3344, -1000, -1000, -1000, 2611,
	2611, -1000, -75, 1042, -1000, 1823, -1000, 160847, 160847, 2520,
	4123, -1000, -1000, -1000, -1000, 2926, -1000, -1000, -1000, 141373,
	2925, 3161, 65958, 517, 516, 141373, 1033, -1000, -239, 93920,
	1012, 1010, -1000, 74059, -1000, -1000, -1000, -1000, 467, 3931,
	-1000, 3012, 3928, -1000, 4077, 513, 509, 141373, 2625, 508,
	28403, 3720, 843, 92690, -1000, 3474, 2187, -1000, 2733, 141373,
	3713, -1000, 3009, 507, 1030, 504, 1030, -1000, -240, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1368, 1041,
	-76, -1000, 956, 955, -1000, -1000, -1000, -1000, 112414, 112414,
	55239, 55239, -1000, 10003, 10003, 10003, -1000, 321, -1000, -1000,
	2579, 3799, -1000, -78, 20092, 19537, 7963, 59663, 85200, -241,
	-1000, -1000, 141373, 160847, -81, -1000, 160847, 503, 497, 483,
	-1000, -1000, -1000, 742, 739, -1000, -1000, -1000, -1000, 4121,
	-1000, -1000, -1000, 154294, 154294, 154294, 4120, -1000, 154294, 154294,
	154294, -90, 154294, 154294, 1930, 1926, -1000, 122883, 141373, -1000,
	-1000, 2178, 2199, -1000, -1000, 141373, 2738, -1000, -1000, -1000,
	1035, 55239, 7479, 59663, 494, 55239, -1000, 484, 482, 3927,
	3623, -1000, 3042, 3278, 2261, 65958, -1000, 3708, -1000, 19416,
	-1000, 1189, 2280, -1000, -1000, -1000, -1000, 160847, 59663, 3776,
	65958, -1000, -1000, 475, 474, 160847, 473, 849, 3254, -1000,
	-1000, -1000, -1000, -91, -91, -1000, -1000, 160847, 121, 160847,
	472, 3876, -1000, -1000, -1000, -1000, 2630, 112414, -1000, 160847,
	-1000, -1000, -1000, -1000, 846, -1000, -1000, -1000, 1303, -1000,
	-1000, -1000, -1000, -1000, 4118, 3252, 98852, -1000, -247, 2369,
	85200, -1000, 1012, -1000, -1000, 2688, 471, -1000, 1025, 2577,
	2577, -249, 65958, 65958, -254, 2621, 3011, -1000, 319, 3926,
	1010, -1000, 4027, -1000, 1083, -1000, 3924, 121, 3664, -1000,
	121, -1000, 4062, 65958, -1000, 112414, 65958, 2624, 2427, 2871,
	92690, -1000, 2900, -1000, -1000, -255, 141373, 2187, -1000, -1000,
	92075, -1000, -1000, 4022, -1000, 2829, -1000, 141373, -1000, 141373,
	-1000, -1000, -256, -257, -1000, 2491, 55239, 36815, -1000, -1000,
	7963, -262, -1000, -83, -1000, 3922, 57135, 4117, 4116, 4115,
	-1000, -1000, -1000, -270, -270, -270, -1000, -90, -90, -90,
	-90, -90, 141373, 141373, -1000, 2278, -1000, 2737, -1000, -1000,
	3416, -1000, 3204, 470, 19111, 7479, 2848, 141373, 18206, 2371,
	2371, -1000, 3920, 3277, -1000, -1000, 2516, 469, -1000, -1000,
	-1000, -1000, 863, 141373, 1025, 3203, 112414, 7479, 1193, -263,
	2518, 2518, 55239, 36183, 2525, -1000, 55239, -1000, -1000, 3776,
	69087, 154294, -1000, 154294, 2623, -1000, 3239, 7398, -1000, 2621,
	141373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1189, -264, -265, -1000, -1000, 3764, -1000,
	3663, 3048, 121, -1000, -1000, -1000, 121, -1000, 4114, 1039,
	317, -271, 1191, -272, 112414, 2260, -1000, 843, -1000, 2908,
	1083, 3597, -1000, -273, -1000, -1000, -1000, -278, -283, -1000,
	-1000, 313, 56503, 56503, 56503, -86, -89, -1000, 141373, 468,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 157, 150, -1000,
	-1000, 3289, 933, -1000, 900, 2164, 312, 1198, 300, -10,
	-1000, -1000, -1000, 3149, -1000, 141373, -1000, -1000, -1000, 933,
	467, -1000, 55239, 1189, -284, -1000, 1175, -285, -1000, 1159,
	-286, -1000, 3250, -1000, -291, 2630, -1000, -270, 277, 1724,
	1036, 3843, 2589, 7398, -1000, 4061, 92690, -1000, -1000, -1000,
	2866, -292, -1000, -1000, 2261, 1189, 2516, 2772, -1000, 2520,
	1033, -1000, -1000, -1000, -1000, 1189, 466, 2261, 465, 1705,
	843, -1000, -1000, 1501, 3720, 3596, 1524, 1030, -1000, -1000,
	-1000, 3505, -1000, 60927, 2694, 2132, 157761, 3505, 3505, -1000,
	-1000, 154294, 154294, 141373, 1025, 3830, -1000, 920, 914, 1689,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1083, -293,
	-1000, 2848, 160847, 1025, -1000, 2518, 3099, -1000, 2518, 3246,
	-1000, 2524, -1000, -1000, -1000, -1000, 3244, -1000, 1999, 3998,
	-1000, -1000, 3895, 55239, -1000, -1000, -1000, -1000, -1000, -1000,
	1025, 141373, 2516, 2261, 1025, 2119, 2108, 4113, 1012, 2621,
	2261, 65958, 2516, 65958, 2468, -1000, 141373, -1000, 2427, 1504,
	-1000, 1865, -1000, -1000, 2161, 3959, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -90, -90, -1000, -1000, 845, -1000, 3610,
	-1000, 1217, 2365, 2365, -1000, -1000, 900, -1000, -1000, 463,
	-1000, 462, -1000, 154294, 2586, -1000, -1000, -1000, 160847, -1000,
	-1000, 1025, 2516, 1083, -1000, 4112, -1000, 2621, -1000, 2516,
	-312, 1025, -315, 2535, -1000, -1000, -91, 2260, -1000, 1846,
	75919, 2130, -1000, -1000, 2574, 55871, 55239, -1000, 3988, -1000,
	-1000, 2929, -1000, 3149, 55239, 55239, 277, 73444, 16986, 1083,
	1025, 1352, -1000, 2866, 1025, 1189, 1083, 2261, 1911, 843,
	1705, 75919, -279, -1000, -1000, -1000, 160847, -1000, -1000, -1000,
	-1000, -317, -318, -1000, -93, 122268, -325, -1000, -1000, -1000,
	1352, 1083, -1000, 1092, -1000, -1000, 1083, 2261, 1352, 2516,
	-1000, -1000, 2275, 154294, 2468, -279, -1000, 2516, 1295, -323,
	-1000, -1000, 1352, -1000, 1352, 2516, -1000, 1025, -1000, 1911,
	-1000, -1000, -1000, 460, -1000, -1000, -1000, 1025, 1083, -1000,
	55239, 1083, 1352, -326, 1352, -1000, 2516, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 4993, 4992, 9, 4991, 4990, 4989, 4986, 4985, 4984,
	4983, 4981, 4980, 4979, 4976, 4973, 158, 4972, 4970, 4969,
	4968, 4965, 4964, 4962, 4961, 4960, 4959, 4958, 4957, 4956,
	4955, 4954, 4953, 4951, 4950, 4948, 4947, 4946, 4944, 4941,
	4940, 4939, 4938, 4937, 4936, 4935, 4932, 4931, 4930, 4929,
	4928, 4924, 4923, 4921, 4919, 4918, 4916, 4914, 4911, 4910,
	4909, 4908, 4904, 4898, 4895, 4893, 4892, 4891, 4890, 4888,
	4887, 4885, 4884, 4883, 4882, 4881, 4880, 4879, 4878, 4877,
	4876, 4875, 4873, 4872, 68, 4871, 4870, 4866, 4864, 4863,
	4861, 4859, 4857, 4851, 4850, 4846, 4845, 4844, 4842, 4841,
	4840, 4837, 4836, 4835, 4834, 4833, 4832, 76, 4829, 318,
	4828, 4827, 4826, 4824, 4822, 4821, 4820, 4818, 4816, 4815,
	4814, 4813, 4812, 4810, 317, 4809, 30, 195, 4808, 4804,
	22, 4803, 4802, 316, 4801, 4799, 4797, 4796, 4795, 331,
	4794, 4792, 4791, 4790, 4786, 365, 4785, 4784, 4783, 4781,
	4780, 4779, 140, 169, 4778, 4776, 614, 4775, 4773, 4770,
	4768, 4766, 4764, 4763, 303, 306, 4762, 4760, 4752, 302,
	197, 4751, 315, 4750, 4749, 4748, 4744, 4743, 4742, 4739,
	4737, 4727, 4722, 4721, 4719, 4718, 4715, 4712, 4711, 4710,
	4707, 4705, 4701, 4700, 4699, 4697, 4694, 4689, 4686, 4684,
	4683, 4681, 4680, 4679, 4677, 4676, 4674, 4662, 4661, 4660,
	4659, 4658, 4656, 4655, 4652, 4651, 293, 253, 149, 4650,
	4648, 4647, 4646, 4645, 4644, 313, 312, 4643, 4642, 4640,
	4639, 4638, 3866, 4637, 4635, 4631, 4625, 4624, 4621, 4620,
	4618, 4616, 135, 2, 108, 4613, 4611, 125, 122, 101,
	126, 110, 107, 4610, 4609, 144, 4608, 164, 137, 4607,
	136, 123, 26, 47, 418, 301, 531, 285, 4606, 4605,
	4604, 291, 234, 4603, 286, 4601, 4600, 4599, 4593, 4592,
	4589, 83, 64, 244, 4588, 165, 4587, 4586, 166, 198,
	210, 208, 206, 202, 741, 65, 111, 93, 73, 54,
	19, 90, 249, 21, 254, 1, 12, 308, 4585, 307,
	11, 167, 8, 42, 4583, 4582, 4581, 4579, 4265, 127,
	4578, 311, 288, 194, 4577, 4575, 4571, 934, 4569, 4565,
	66, 258, 473, 141, 139, 205, 152, 4564, 187, 203,
	56, 4561, 185, 84, 4560, 4559, 116, 105, 10589, 9542,
	4558, 4557, 162, 81, 104, 6266, 211, 173, 241, 1228,
	151, 196, 191, 4556, 63, 4555, 181, 180, 212, 200,
	4553, 99, 4552, 3895, 100, 214, 186, 6846, 4550, 4548,
	4547, 112, 4546, 121, 4544, 4537, 79, 33, 4, 3,
	168, 46, 45, 20, 4536, 29, 155, 60, 37, 4533,
	28, 4532, 4526, 4522, 4521, 59, 4519, 57, 190, 4518,
	4516, 320, 4513, 109, 70, 39, 4511, 67, 267, 4509,
	278, 154, 4508, 4507, 220, 229, 230, 221, 263, 4504,
	113, 275, 4499, 4497, 4496, 4495, 4494, 325, 157, 13,
	156, 4491, 4487, 178, 4486, 72, 287, 236, 4485, 80,
	4484, 4483, 207, 71, 170, 321, 204, 281, 147, 273,
	222, 276, 4482, 4480, 4479, 223, 4478, 4477, 271, 217,
	4476, 4474, 257, 330, 103, 58, 15, 193, 96, 282,
	94, 233, 188, 4472, 239, 176, 4471, 175, 4470, 106,
	4469, 324, 213, 260, 49, 24, 7, 115, 131, 4468,
	10, 280, 189, 248, 145, 4467, 8864, 2162, 2988, 284,
	4466, 177, 150, 92, 146, 183, 310, 102, 4465, 4464,
	3745, 4463, 4461, 4460, 4458, 226, 4457, 4456, 255, 179,
	201, 4455, 171, 251, 4453, 128, 89, 62, 27, 238,
	97, 323, 138, 272, 225, 294, 4452, 4451, 4450, 224,
	4448, 118, 142, 243, 4447, 240, 304, 74, 4444, 153,
	4443, 184, 2601, 82, 182, 4442, 266, 4441, 4440, 4439,
	4438, 4437, 4436, 4435, 4433, 279, 4432, 4431, 4430, 44,
	232, 4429, 231, 264, 309, 98, 77, 228, 114, 4567,
	129, 2594, 237, 50, 5, 4427, 955, 4426, 3241, 75,
	4425, 0, 15451, 11337, 14431, 4424, 4423, 14075, 4421, 6340,
	4420, 4419, 4418, 256, 85, 4417, 4416, 4415, 124, 4414,
	95, 4411, 4410, 91, 4409, 32, 18, 25, 40, 38,
	550, 385, 4408, 4407, 52, 159, 34, 4404, 319, 274,
	4401, 4398, 4397, 4395, 119, 4392, 55, 4390, 53, 4386,
	4381, 61, 16, 41, 4380, 4379, 252, 192, 3819, 199,
	174, 4378, 130, 4372, 4371, 289, 86, 160, 4369, 4368,
	296, 247, 245, 120, 4367, 300, 4366, 235, 4365, 78,
	36, 4364, 4361, 283, 134, 133, 69, 292, 163, 48,
	4360, 4357, 4356, 4352, 219, 4351, 4350, 4348, 4339, 4336,
	132, 172, 4333, 87, 4330, 4324, 4321, 51, 259, 216,
	4317, 6, 4316, 4312, 4311, 270, 265, 314, 215, 262,
	4310, 4309, 209, 4308, 4307, 4306, 305, 4304, 4303, 3864,
	332, 4302, 43, 4300, 4299, 4296, 17, 4294, 4293, 250,
	3628, 4292, 4291, 14, 4290, 227,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	670, 670, 670, 671, 671, 672, 672, 672, 28, 56,
	58, 58, 477, 477, 21, 22, 22, 22, 22, 673,
	673, 673, 673, 41, 29, 57, 34, 34, 34, 34,
	34, 245, 245, 245, 245, 27, 27, 52, 52, 291,
	291, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 669, 669, 293, 293, 292, 278, 278, 279, 279,
	280, 280, 674, 674, 294, 294, 294, 295, 295, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 563,
	563, 563, 594, 594, 594, 594, 596, 596, 721, 721,
	722, 722, 722, 722, 722, 155, 155, 451, 451, 451,
	72, 72, 72, 72, 72, 659, 659, 247, 247, 247,
	249, 249, 248, 248, 248, 248, 248, 248, 248, 248,
	96, 96, 97, 97, 286, 286, 285, 285, 285, 285,
	285, 285, 285, 680, 680, 679, 717, 717, 678, 678,
	681, 681, 681, 246, 246, 246, 93, 93, 114, 114,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	153, 153, 690, 690, 690, 250, 250, 250, 252, 252,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 257, 19, 19, 134, 134,
	134, 134, 134, 134, 134, 129, 129, 598, 598, 599,
	599, 241, 241, 242, 242, 242, 242, 243, 243, 244,
	244, 244, 87, 87, 254, 254, 256, 256, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 78, 78,
	85, 85, 85, 85, 85, 85, 85, 85, 218, 218,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 92, 92, 92, 92, 92, 103,
	103, 691, 691, 692, 692, 710, 696, 696, 697, 697,
	700, 700, 700, 701, 701, 701, 701, 701, 709, 709,
	709, 709, 709, 703, 702, 704, 704, 705, 705, 707,
	707, 707, 707, 707, 708, 708, 708, 708, 708, 708,
	708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
	708, 695, 711, 712, 712, 713, 713, 714, 714, 714,
	122, 122, 122, 716, 716, 715, 715, 698, 698, 699,
	699, 67, 706, 706, 724, 724, 68, 69, 70, 71,
	693, 693, 723, 723, 723, 723, 723, 723, 723, 723,
	723, 723, 723, 723, 723, 723, 723, 723, 723, 725,
	725, 726, 726, 727, 727, 727, 727, 727, 727, 727,
	727, 727, 727, 727, 727, 727, 727, 727, 727, 727,
	727, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	104, 104, 409, 409, 372, 372, 105, 105, 105, 106,
	106, 107, 107, 89, 89, 89, 656, 656, 657, 663,
	728, 728, 554, 554, 553, 553, 109, 109, 450, 450,
	110, 110, 110, 110, 110, 110, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 120, 120, 120, 120, 120, 121, 121, 121, 118,
	118, 118, 115, 115, 115, 113, 113, 113, 119, 119,
	119, 662, 358, 358, 117, 117, 117, 116, 116, 116,
	425, 425, 426, 428, 427, 123, 123, 123, 123, 373,
	124, 124, 124, 124, 124, 124, 124, 124, 127, 127,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 556, 556, 5, 5, 284, 284, 283,
	283, 283, 283, 6, 6, 6, 289, 289, 288, 287,
	125, 125, 125, 518, 518, 130, 130, 130, 466, 466,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 666, 666, 418, 418, 321, 321, 321,
	321, 143, 143, 143, 143, 144, 144, 144, 144, 145,
	145, 227, 227, 161, 161, 161, 161, 160, 160, 160,
	160, 160, 160, 160, 160, 79, 79, 79, 80, 80,
	81, 81, 82, 82, 83, 83, 84, 84, 84, 84,
	84, 164, 164, 33, 33, 33, 33, 165, 165, 718,
	718, 167, 163, 163, 163, 163, 163, 163, 163, 162,
	162, 166, 166, 166, 166, 168, 170, 170, 170, 170,
	170, 169, 169, 169, 169, 169, 171, 171, 588, 588,
	436, 436, 586, 586, 610, 610, 587, 587, 379, 379,
	379, 379, 379, 380, 380, 380, 597, 597, 597, 597,
	597, 597, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	228, 228, 228, 229, 229, 234, 234, 235, 235, 235,
	236, 236, 236, 233, 233, 233, 230, 230, 231, 231,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	239, 239, 237, 237, 238, 238, 730, 730, 729, 729,
	240, 240, 240, 240, 240, 199, 199, 199, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 437, 437, 202, 202, 202, 186, 186, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 253, 253, 253,
	253, 253, 179, 179, 179, 179, 179, 179, 179, 179,
	180, 180, 180, 174, 174, 188, 188, 188, 188, 188,
	181, 181, 182, 182, 182, 183, 183, 183, 183, 210,
	210, 185, 185, 185, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 175, 175, 175, 175, 190, 190, 190,
	190, 473, 473, 473, 216, 216, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 213, 213, 213, 213, 213, 213, 682, 682,
	683, 683, 683, 206, 206, 206, 206, 206, 206, 534,
	534, 200, 200, 200, 200, 205, 205, 205, 205, 208,
	208, 208, 208, 456, 456, 197, 197, 197, 198, 198,
	198, 203, 203, 215, 204, 410, 410, 201, 201, 207,
	207, 207, 207, 209, 209, 209, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 177, 177, 177, 177,
	178, 178, 178, 178, 211, 211, 196, 196, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 731,
	731, 192, 192, 192, 191, 191, 191, 191, 194, 194,
	195, 195, 195, 195, 195, 195, 195, 193, 184, 214,
	664, 664, 660, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 661, 661, 661, 661, 661, 665, 665, 135, 135,
	135, 135, 135, 135, 135, 146, 146, 146, 146, 146,
	146, 146, 149, 149, 136, 136, 136, 136, 136, 136,
	136, 139, 139, 137, 137, 137, 137, 138, 138, 98,
	98, 98, 98, 98, 18, 18, 18, 99, 99, 312,
	312, 262, 262, 262, 397, 397, 263, 263, 387, 387,
	387, 387, 258, 258, 259, 259, 260, 261, 261, 100,
	100, 732, 732, 732, 675, 675, 675, 676, 676, 676,
	676, 676, 676, 381, 381, 382, 382, 498, 498, 498,
	498, 498, 385, 385, 385, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 395, 396, 396, 388, 388, 394,
	393, 393, 392, 392, 391, 391, 389, 390, 390, 390,
	399, 399, 398, 401, 401, 400, 497, 619, 619, 621,
	621, 621, 621, 621, 621, 621, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 474, 474, 733, 733, 734, 735, 617,
	617, 617, 618, 613, 613, 614, 614, 614, 614, 614,
	383, 383, 384, 384, 384, 384, 615, 616, 416, 416,
	538, 620, 620, 622, 622, 624, 736, 736, 736, 736,
	736, 736, 737, 737, 737, 496, 496, 495, 495, 494,
	494, 407, 407, 625, 625, 625, 625, 626, 626, 626,
	626, 626, 629, 628, 627, 627, 627, 627, 627, 102,
	102, 102, 453, 453, 452, 452, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 223, 223, 324, 324, 324, 95,
	95, 95, 15, 15, 15, 15, 15, 15, 15, 339,
	339, 16, 16, 16, 16, 677, 677, 677, 101, 101,
	101, 101, 101, 101, 405, 405, 405, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 668, 668, 667, 667, 325, 325, 739,
	739, 108, 108, 108, 108, 108, 108, 108, 108, 557,
	557, 558, 558, 94, 94, 94, 94, 94, 475, 475,
	472, 472, 471, 471, 415, 415, 536, 536, 536, 537,
	329, 329, 330, 330, 281, 281, 281, 476, 476, 476,
	36, 35, 26, 26, 30, 30, 31, 31, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 32, 32, 60,
	60, 60, 60, 61, 61, 61, 61, 64, 64, 65,
	65, 59, 59, 59, 59, 62, 62, 55, 55, 66,
	66, 66, 66, 66, 684, 686, 686, 685, 685, 689,
	689, 689, 689, 689, 689, 687, 687, 360, 360, 688,
	688, 719, 719, 720, 720, 142, 142, 147, 147, 147,
	147, 147, 148, 148, 148, 148, 150, 150, 150, 150,
	159, 159, 219, 219, 219, 219, 219, 219, 219, 73,
	73, 86, 86, 157, 741, 741, 741, 158, 158, 158,
	220, 220, 220, 220, 221, 221, 222, 222, 740, 740,
	322, 322, 491, 491, 492, 492, 742, 742, 493, 493,
	493, 493, 493, 315, 314, 316, 316, 317, 317, 91,
	91, 91, 303, 303, 302, 305, 305, 304, 306, 306,
	307, 307, 300, 300, 600, 600, 309, 309, 309, 310,
	310, 296, 296, 297, 297, 298, 298, 299, 299, 313,
	313, 595, 595, 743, 743, 133, 133, 133, 226, 226,
	371, 371, 371, 484, 484, 484, 408, 408, 336, 336,
	490, 490, 490, 490, 490, 449, 449, 449, 225, 225,
	423, 423, 439, 439, 440, 440, 550, 550, 441, 140,
	140, 141, 141, 156, 156, 266, 266, 264, 264, 264,
	264, 264, 264, 264, 264, 271, 271, 272, 272, 273,
	273, 274, 275, 275, 275, 275, 429, 429, 276, 276,
	276, 265, 265, 265, 267, 267, 267, 267, 267, 267,
	267, 270, 270, 270, 270, 277, 277, 277, 269, 269,
	636, 636, 636, 638, 638, 640, 640, 639, 639, 635,
	635, 637, 637, 738, 738, 455, 455, 455, 404, 406,
	402, 402, 403, 403, 413, 413, 411, 412, 412, 414,
	414, 535, 535, 535, 282, 282, 282, 446, 446, 446,
	446, 447, 447, 480, 480, 478, 478, 478, 478, 479,
	479, 481, 481, 481, 482, 482, 483, 483, 443, 443,
	444, 444, 445, 445, 445, 445, 514, 514, 268, 268,
	268, 420, 420, 420, 421, 421, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 505, 505, 503,
	503, 503, 503, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 540, 541, 541, 422, 422, 542, 487, 487,
	488, 488, 485, 485, 486, 486, 489, 489, 654, 654,
	654, 655, 655, 533, 533, 543, 543, 543, 543, 543,
	543, 529, 529, 530, 530, 531, 531, 532, 532, 551,
	552, 552, 459, 459, 459, 459, 457, 457, 460, 460,
	460, 460, 460, 458, 458, 544, 544, 544, 544, 448,
	448, 224, 224, 545, 545, 545, 545, 546, 547, 547,
	548, 548, 499, 500, 500, 559, 559, 559, 559, 561,
	419, 419, 419, 419, 419, 612, 611, 611, 560, 560,
	560, 560, 560, 560, 560, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 576, 576, 576,
	576, 576, 576, 576, 562, 562, 562, 562, 562, 562,
	562, 566, 566, 566, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 567, 567, 572, 572, 573,
	573, 573, 568, 569, 574, 574, 574, 574, 744, 744,
	578, 578, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 564, 564, 564, 571, 571, 571, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	467, 467, 469, 469, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 508, 508, 508, 508, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 630, 630, 630, 630, 630, 630,
	630, 630, 510, 510, 633, 633, 634, 634, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 641,
	641, 642, 642, 644, 644, 645, 645, 646, 647, 647,
	647, 648, 649, 649, 643, 643, 650, 650, 650, 650,
	651, 651, 652, 652, 652, 652, 652, 653, 653, 653,
	653, 653, 520, 520, 521, 521, 527, 527, 527, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 378, 378, 377, 326, 326, 326,
	326, 326, 326, 434, 434, 432, 432, 432, 435, 435,
	433, 433, 431, 431, 430, 430, 517, 517, 515, 515,
	519, 519, 461, 461, 577, 577, 577, 577, 577, 577,
	577, 577, 462, 462, 462, 470, 463, 463, 464, 464,
	464, 464, 464, 511, 512, 465, 465, 465, 513, 513,
	522, 526, 526, 525, 524, 524, 523, 523, 501, 501,
	502, 502, 442, 442, 745, 745, 438, 438, 549, 549,
	549, 549, 606, 606, 375, 375, 424, 424, 374, 374,
	366, 366, 367, 367, 367, 367, 417, 417, 528, 528,
	579, 579, 580, 580, 581, 581, 582, 582, 583, 584,
	585, 516, 516, 347, 346, 333, 334, 345, 344, 343,
	332, 335, 340, 341, 342, 337, 338, 354, 353, 352,
	301, 308, 359, 361, 361, 364, 364, 365, 363, 362,
	362, 349, 350, 351, 555, 331, 368, 368, 369, 369,
	369, 370, 370, 370, 370, 327, 327, 328, 328, 355,
	355, 356, 357, 357, 348, 348, 348, 318, 318, 318,
	319, 319, 320, 320, 593, 593, 590, 590, 590, 591,
	591, 591, 694, 592, 592, 592, 592, 589, 589, 589,
	589, 589, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 602, 602, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 604, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 609, 609,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	12, 3, 5, 4, 1, 3, 3, 3, 3, 2,
	4, 4, 4, 1, 1, 2, 1, 4, 1, 0,
	3, 3, 0, 4, 6, 0, 6, 4, 4, 4,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 3, 3, 0, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	4, 2, 0, 1, 0, 1, 1, 0, 1, 3,
	1, 3, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 0, 1, 2, 2,
	2, 1, 1, 1, 4, 5, 1, 1, 1, 1,
	3, 3, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 1, 2, 1, 1, 3, 0, 1, 4, 0,
	4, 6, 3, 1, 3, 2, 1, 3, 2, 1,
	3, 5, 1, 2, 1, 0, 6, 6, 6, 8,
	1, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 4, 3, 1, 2, 3,
	2, 2, 2, 4, 6, 3, 1, 2, 2, 7,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 11, 11, 6, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 10, 13, 10, 13, 5,
	8, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 1,
	2, 2, 2, 9, 2, 1, 0, 1, 1, 0,
	1, 2, 0, 2, 2, 0, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 3, 6, 8, 3, 3, 3, 4, 8,
	6, 4, 5, 5, 5, 5, 3, 0, 1, 1,
	1, 1, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 5, 7, 4, 2, 6, 4, 3, 2,
	3, 4, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 7, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 5, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	5, 6, 5, 5, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	3, 2, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 11,
	12, 10, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 8, 11, 5, 4, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 2, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 1, 2, 3, 0, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 2, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 15,
	17, 3, 1, 0, 4, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 3, 0,
	1, 3, 0, 3, 1, 3, 1, 2, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 2, 2, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 664, -3, -220, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -219, -228, -229, -230, -231, -240, -224, -221,
	-222, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -223,
	-225, -226, 33, 32, 107, 85, 166, 138, 148, 219,
	418, 470, 482, 435, 153, 458, 440, -166, -167, 504,
	-73, -86, -158, -157, 78, 139, 183, 322, 450, 588,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-723, 110, -637, -112, -116, -150, -114, -727, 174, 240,
	-136, -137, -138, 400, -144, -145, 461, -147, -148, -149,
	464, 175, -81, -80, 168, -264, -266, -163, -162, -164,
	-227, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-210, -184, -185, -186, -187, -188, -189, -193, -213, -190,
	-191, -192, -195, -194, -196, -201, -197, -198, -199, -200,
	-202, -203, -205, -206, -207, -208, -209, -211, -212, 510,
	-204, -214, -182, -215, 578, 527, 87, 474, 21, -8,
	-9, -10, -11, -12, -13, -14, -18, -17, -66, -5,
	-6, -20, -97, -91, -94, -98, -99, -100, -108, -101,
	-102, -103, -636, -113, -115, -118, -120, -121, -117, -119,
	-122, 459, 635, -267, -265, 661, 640, 595, -179, -23,
	-28, -24, -25, -27, -29, -26, -30, -31, -32, -51,
	-56, -53, -54, -52, -55, -57, -58, -59, -60, -61,
	-62, -63, -64, -65, -35, -41, -42, -36, -37, -38,
	-39, -40, -43, -44, -45, -46, -47, -48, -49, -50,
	-21, -22, -34, -67, -68, -70, -69, -71, 622, 631,
	-270, -268, -269, -277, 496, 603, 550, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, -373, 2, -349, -355, -356,
	-357, -348, -318, -604, -609, 4, -601, -607, 182, 250,
	360, 21, 22, 24, 23, 25, 26, 27, 28, 30,
	31, 41, 43, 44, 45, 47, 48, 49, 50, 51,
	52, 53, 57, 59, 63, 64, 65, 66, 67, 68,
	69, 73, 78, 79, 84, 85, 86, 87, 88, 89,
	90, 91, 97, 94, 95, 96, 98, 99, 101, 103,
	104, 105, 106, 107, 108, 109, 111, 112, 113, 115,
	116, 117, 125, 126, 127, 128, 129, 131, 138, 132,
	139, 142, 136, 141, 137, 143, 144, 146, 147, 148,
	151, 152, 153, 155, 156, 157, 159, 160, 161, 163,
	164, 166, 167, 168, 171, 169, 172, 170, 173, 174,
	175, 176, 177, 180, 188, 189, 190, 195, 197, 198,
	199, 201, 202, 205, 206, 207, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 220, 224, 226, 227, 228,
	229, 230, 231, 232, 238, 239, 240, 242, 243, 244,
	245, 246, 251, 252, 253, 257, 259, 265, 266, 271,
	267, 272, 273, 275, 279, 280, 281, 282, 283, 284,
	285, 287, 289, 288, 293, 291, 295, 296, 299, 300,
	301, 302, 303, 304, 308, 309, 305, 310, 311, 313,
	314, 317, 315, 318, 319, 316, 320, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, 321,
	322, 337, 335, 339, 340, 341, 342, 343, 358, 353,
	354, 355, 347, 348, 344, 349, 345, 346, 350, 351,
	357, 352, 362, 363, 364, 365, 368, 236, 258, 370,
	371, 374, 376, 393, 379, 380, 381, 384, 385, 388,
	391, 392, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 405, 406, 408, 409, 410, 412, 413, 414,
	416, 418, 419, 421, 422, 423, 425, 426, 427, 428,
	429, 430, 431, 432, 434, 435, 437, 436, 438, 440,
	442, 443, 444, 450, 451, 458, 452, 454, 455, 456,
	457, 459, 460, 461, 462, 463, 464, 468, 466, 467,
	469, 470, 472, 473, 474, 475, 476, 478, 480, 481,
	485, 486, 489, 487, 507, 508, 530, 482, 483, 484,
	488, 490, 491, 492, 493, 495, 494, 499, 497, 498,
	500, 501, 502, 504, 506, 509, 510, 512, 513, 514,
	515, 516, 517, 518, 521, 523, 524, 525, 526, 527,
	528, 549, 529, 531, 535, 536, 537, 538, 532, 533,
	548, 540, 541, 542, 543, 545, 546, 551, 552, 553,
	554, 555, 556, 558, 559, 561, 569, 582, 570, 571,
	572, 573, 575, 578, 579, 580, 581, 567, 583, 584,
	587, 588, 589, 593, 590, 594, 591, 592, 595, 597,
	600, 601, 602, 609, 607, 608, 610, 611, 613, 614,
	612, 616, 617, 618, 623, 624, 626, 627, 628, 37,
	54, 55, 58, 60, 62, 74, 75, 76, 80, 133,
	134, 165, 178, 179, 191, 208, 209, 221, 223, 233,
	234, 235, 256, 260, 261, 263, 269, 292, 367, 369,
	386, 390, 407, 411, 415, 417, 433, 477, 505, 519,
	534, 539, 562, 563, 564, 565, 574, 576, 603, 604,
	605, 615, 625, -373, 2, -349, 377, -342, 2, -318,
	-318, 418, 29, 2, 29, 406, 498, 553, 555, 2,
	-666, -418, 546, 2, 29, -321, -318, 110, 219, 496,
	-342, 2, -666, 219, -418, 26, 546, 2, -318, 2,
	391, 177, 205, 23, 28, 71, 82, 105, 151, 176,
	200, -726, 393, 426, 480, 500, 548, 559, 575, 2,
	608, 314, 497, 550, 250, 128, 580, 488, -677, 485,
	486, 391, 424, 472, 222, 596, -322, 2, 482, -318,
	314, 2, 664, 101, 79, 477, 501, -169, 2, 304,
	570, -170, -171, -168, 562, -588, 488, 472, 337, -318,
	664, 664, 664, 29, -331, 2, -318, -331, 2, -232,
	2, -331, -729, -239, -238, -237, 22, 451, 190, 285,
	203, 241, 342, 421, 201, 51, -232, 2, 550, 250,
	488, 128, 546, -353, 653, -355, -740, 2, 570, -740,
	2, 664, 664, 2, 550, 397, 608, 497, 205, 128,
	430, 250, 580, 49, 151, 28, 73, 556, 639, 488,
	-677, 636, 637, 314, 135, -659, 2, -658, 4, -607,
	-601, -367, -366, 550, 556, 128, -357, -348, 653, -356,
	664, 664, 664, 664, 2, 272, 273, 428, 427, 501,
	502, 29, 664, 664, 664, 664, 664, 485, 177, 2,
	176, -691, 23, 28, 71, 100, 105, 135, 200, 393,
	426, 500, 548, 552, 559, 575, -676, 529, 73, 488,
	-675, -677, 382, 314, 580, 151, -471, 128, 304, 217,
	589, 555, 553, 586, 142, 259, 592, 591, 664, 664,
	664, -127, 2, 661, 33, 32, -126, -130, 153, 504,
	-257, 550, 264, 2, -318, 664, 664, 664, 2, 272,
	273, 485, 486, 29, 664, 664, 203, -658, 546, 2,
	664, 664, 664, 2, 29, 272, 273, 485, 486, 264,
	2, 73, 491, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 2, -217, 501, 529, 229, 50, 49, 79, 29,
	425, 84, 398, 129, 135, 160, 581, 220, 546, 250,
	251, 280, 100, 101, -473, 47, 273, 73, 272, 486,
	-682, 485, -534, 551, 490, 498, 545, 91, 285, 482,
	570, 572, 110, 597, 473, 628, 430, 431, 543, 444,
	540, 305, 169, 204, 4, 128, 337, 472, 503, 289,
	288, 582, 562, 304, 481, 401, 89, 664, -738, 2,
	550, 570, 2, -740, 2, -740, 2, -741, 570, 625,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, 664, 664, 664, 664, 664, 664, 664,
	664, 664, 664, -265, -267, -266, 664, 664, 664, 664,
	664, 664, 664, 664, -217, 501, 2, 79, 29, 29,
	-411, -413, 585, 262, 162, 383, -264, -266, 2, -636,
	582, 501, -586, 2, -506, -610, -508, 651, 652, 644,
	547, 72, -377, 359, 629, -520, 135, 586, 377, -609,
	-509, -522, 165, 393, 477, -435, 8, 9, 5, 6,
	7, -327, -510, -516, 577, 181, 366, -370, 665, 10,
	661, -633, -266, -521, 38, 223, 70, -590, -369, -328,
	-562, 263, -368, -348, -630, -631, 4, -601, -602, -591,
	-565, -573, -572, -569, -568, -570, -576, -318, -604, 82,
	119, 120, 118, 123, 122, 307, 306, 124, 121, 503,
	596, 71, 37, 233, 234, 269, 367, 235, 80, -632,
	152, -603, 260, 261, 519, 55, 433, 191, 134, 133,
	369, 60, 58, 604, -574, 130, 562, 563, 564, 565,
	208, 209, 62, 178, 179, 390, 415, 539, 574, 576,
	221, 292, 46, 114, 204, 255, 237, 268, 270, 274,
	294, 297, 338, 356, 361, 387, 389, 471, 511, -744,
	605, 534, 74, 75, 196, -638, 436, -639, -342, -638,
	664, 664, 666, 664, -402, -404, -406, 2, 29, 149,
	661, 2, -539, 2, -540, -544, -266, 286, -543, 661,
	-541, 659, -349, 378, -634, 478, -630, -631, -327, -348,
	-369, 4, -601, -603, 663, -407, 661, 128, 488, 550,
	83, 250, 100, 176, 205, -466, 661, -318, 29, 377,
	566, 666, -666, -418, -403, 423, -518, 661, 377, 380,
	203, 380, -666, 64, 98, -716, 233, 2, -715, -355,
	318, 2, 2, 2, 2, 2, 233, -318, 550, 127,
	284, 2, 2, 2, 2, 2, 2, 2, -427, 233,
	2, -425, -355, 608, -428, 233, 2, -425, -426, 233,
	2, -425, -472, 2, 93, -332, 233, 2, -318, -358,
	233, 2, -353, -364, 233, 2, -361, -318, -596, 233,
	2, -594, 4, -601, 124, 503, -506, 2, -156, 2,
	64, -318, 608, 2, 507, 2, 661, -169, 2, 76,
	570, 46, 501, -170, 2, -492, 2, -493, -314, -315,
	-316, -551, -317, 271, 422, 432, 632, 140, 359, 628,
	-718, 203, 643, 566, -586, -586, -586, -436, 663, -234,
	57, -331, -730, -729, -730, -584, 29, -579, 8, -580,
	651, 652, -584, -584, -730, -730, 2, 2, 2, 2,
	2, -491, -492, 2, -544, 233, -349, 2, -346, -589,
	4, -601, -607, -602, -608, -604, 29, 32, 33, 34,
	36, 38, 39, 40, 42, 61, 70, 71, 77, 81,
	83, 93, 100, 110, 118, 119, 121, 120, 122, 123,
	124, 135, 140, 145, 149, 150, 154, 158, 162, 181,
	183, 196, 200, 203, 219, 222, 225, 241, 254, 262,
	264, 286, 290, 298, 306, 307, 359, 366, 372, 377,
	378, 382, 383, 404, 420, 439, 465, 496, 503, 522,
	544, 550, 560, 566, 568, 577, 585, 586, 596, 598,
	606, 619, 620, 621, 622, -609, 82, 2, -544, 233,
	2, -352, 233, -544, -355, 2, -715, 2, -332, 2,
	-506, -670, 558, 172, 452, 2, -374, 233, -349, -351,
	-355, -353, 2, 485, -598, 2, -593, 10, -592, 5,
	4, -601, -607, -602, 2, 2, -506, 2, -509, 2,
	-520, 29, -361, 2, -594, 233, 2, 29, 29, 608,
	423, 264, 566, 666, -424, -366, -367, -585, 4, 8,
	-417, -318, 663, -506, 2, -156, -139, 2, 196, -506,
	233, 2, -156, 233, 2, -506, 233, 2, -156, 233,
	2, -318, 2, -678, 2, -717, -598, 233, 98, 233,
	-318, 2, 205, -725, 480, 579, 318, 2, 2, 575,
	2, 105, 550, 127, 2, 2, 2, 2, 2, 2,
	2, 550, -337, 2, -318, 196, -553, 264, -361, 233,
	-362, 2, 497, -739, 436, -594, 233, 2, 456, 608,
	-353, 233, 2, -353, 250, 266, -332, 233, 2, 555,
	553, 555, 553, 203, 2, 264, 2, 264, 2, -545,
	2, -546, -540, -547, 659, 378, -556, 2, -555, -592,
	603, -127, 661, -127, 661, 501, 661, -598, -349, -349,
	-506, 2, -156, -139, 2, -506, 2, -156, 2, -318,
	2, -153, -598, -152, 661, 203, 597, -318, 2, -506,
	2, -156, -139, 2, -506, 2, -156, 2, -257, 196,
	2, 128, 550, -217, 2, 196, 598, 2, 8, 2,
	241, -253, -598, 490, 188, 431, 601, 2, 507, 2,
	508, 79, -473, 628, 79, 203, 2, 203, 2, -456,
	2, 622, 423, 203, 2, 2, -664, 2, 377, 220,
	203, 2, 203, 2, 203, 2, 203, 2, 203, 2,
	-216, 502, 571, 549, 427, 273, 2, -156, 619, -139,
	273, 272, -506, 619, 2, -683, 196, 486, -506, 2,
	569, 282, 170, 203, -456, 2, 203, 2, 203, 2,
	5, 2, 43, 428, 530, 2, 271, 422, 530, 2,
	528, 2, -349, 550, 608, 497, 128, 205, 29, 2,
	485, 177, 2, 2, 94, 95, 203, 2, 203, 2,
	218, 203, 2, 444, 203, 550, -437, 663, -437, 628,
	2, -448, -544, -491, 566, -411, -413, -217, 507, 2,
	-271, -446, -273, 196, -478, -479, -274, 298, 183, 372,
	-275, -455, 29, 149, -455, -455, 64, 662, 662, -718,
	582, 11, 12, 81, 43, 651, 652, 653, 654, 194,
	655, 656, 649, 650, 648, 641, 642, 646, 277, 278,
	102, 645, 643, 92, 312, 479, 184, 185, 186, 187,
	453, 248, 35, 249, 14, 15, 16, -377, 34, 382,
	297, 629, 237, 511, 644, 17, 18, 19, 268, 270,
	361, 54, 241, -326, 393, -376, 547, 72, -506, -506,
	-506, -506, -506, -506, -506, -506, 389, 661, -442, -501,
	659, -266, 661, 661, 661, 661, -585, -266, -506, -520,
	662, -433, 661, -266, -520, -515, 661, 477, 659, 661,
	-523, -506, 5, 5, 5, 661, 663, -641, 623, 196,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 417, -567, 661, -566,
	661, -566, -566, -578, 609, 661, 661, -564, 661, 631,
	624, 661, -564, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 609, 556, 666, -638,
	-487, 661, 661, -438, -549, -506, 653, -438, -438, 377,
	-430, -506, 114, -459, 274, 338, 204, 294, 471, 255,
	-503, 665, -503, -533, 631, -266, -541, -348, -266, -543,
	661, -539, -533, -128, -585, -109, -124, -133, -156, -172,
	-225, -226, 653, -349, 661, 203, 661, 663, -589, 203,
	-417, -332, -361, -349, -368, -369, -374, -343, -318, 2,
	2, 148, -430, -660, 580, 488, 29, 4, -607, -601,
	-367, 497, -366, 550, 128, 177, 205, -596, -321, 566,
	39, -517, -559, -560, -612, 665, -611, -562, -571, 407,
	411, -591, 263, 4, -601, -603, 260, 261, 519, 55,
	433, 191, 134, 133, 369, 60, 58, 604, 562, 563,
	564, 565, 208, 209, 62, 605, 534, 74, 75, -660,
	580, 488, 29, 497, 196, -596, 196, 203, -596, 2,
	-598, 2, -294, 666, 69, 462, 165, -698, 661, 2,
	165, 2, 2, 2, -318, -294, 165, 666, -427, 233,
	-294, 165, -294, 165, -375, 233, -374, -294, 165, -294,
	666, 165, -294, 666, 165, 663, 666, 165, -596, 2,
	-472, -588, -430, 39, -492, 2, 135, 4, 5, -742,
	666, 296, -380, 311, 358, 228, 378, 626, 370, 140,
	-597, 5, 4, -516, -528, 135, 304, 263, -579, -581,
	9, -582, 651, 652, -587, -586, 117, 663, -589, -235,
	258, 41, -331, -331, -730, -730, 8, 8, -730, -730,
	-331, -331, -291, 454, 504, 392, -290, 25, 30, 153,
	252, 343, 601, 171, -392, 253, 459, -389, 397, 165,
	523, 590, -670, -673, 484, 558, 172, 452, 96, 370,
	504, 392, 454, 165, -452, -454, 39, 126, 343, 391,
	65, 244, 316, 317, 527, 460, 615, 165, 504, 392,
	454, -706, 454, 504, 392, -693, -708, 343, 66, 467,
	533, 239, 526, 617, 177, 495, 293, 359, 108, 478,
	541, 394, 392, -16, -307, 25, 153, -309, -302, 504,
	30, -673, 106, 454, 640, 635, 459, 403, 542, 420,
	-673, -670, 291, -672, 618, 357, -293, 523, 590, -670,
	-477, -673, 484, 454, -292, 359, 616, -394, -389, 397,
	165, 665, 25, 153, 454, 504, 392, -721, -722, 30,
	-585, 2, -289, 241, -288, 25, -284, -283, 25, 153,
	504, 593, -165, -145, -164, 459, 504, -165, 2, 454,
	392, -667, -339, -635, 241, 622, 165, -339, -339, -544,
	233, -687, 196, 2, -680, -152, 287, 5, 10, -598,
	-152, -424, 666, 666, -589, 653, 486, 485, 165, 165,
	165, 165, 273, 196, 359, -717, 2, 359, 622, -710,
	2, -355, -726, 2, 2, 2, 2, 2, 2, 2,
	-349, 233, -409, 377, -656, -657, -728, 550, -244, 622,
	-598, 359, 46, -352, 233, 2, -355, 608, -667, 359,
	-675, -354, 233, -349, 39, 661, 359, 2, -472, 2,
	250, -635, 359, -545, -371, -349, -540, -371, 504, -342,
	39, -503, -349, 662, 666, -556, -556, -598, -244, 203,
	661, -257, 622, 622, 273, -552, 666, -551, 241, -599,
	-598, -153, -598, 457, 203, 273, -598, -656, -332, 2,
	-349, 2, 550, 275, -152, 203, 241, -244, -598, -598,
	-598, -598, -588, 29, 508, 2, -216, 502, 571, 95,
	508, 2, -349, 550, 128, 250, 85, -687, 196, 2,
	-318, -665, 196, -661, 472, 488, 580, -660, -665, -349,
	128, -349, 128, -349, 128, -349, -349, 2, 2, 2,
	2, 2, 90, 2, -156, -506, 2, 90, 2, 49,
	524, -683, 196, 2, 569, 2, 569, 2, -318, -318,
	-318, 372, 529, 296, 622, -349, -349, -352, -350, -355,
	-355, 490, 551, 581, 486, 177, -506, 2, 98, -731,
	2, 203, 196, 2, 550, 250, 550, 250, 128, 203,
	79, 128, 29, 203, 550, 483, 663, 4, -294, 666,
	-322, -271, -446, -588, -447, -446, -272, -271, -274, 196,
	432, 591, 343, 509, 279, -479, -478, 29, -506, -483,
	190, 342, -506, -481, -508, 651, 652, -580, -582, -429,
	370, -265, -265, -265, -414, -535, -506, 420, 250, -587,
	-718, -561, -559, -559, -347, -589, 562, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, 297, 237, 511, 54, 241, -506, 566,
	-506, -506, -506, -506, 335, 359, 366, 577, 181, 587,
	149, 370, -745, 544, 42, -513, -266, -434, 661, -527,
	36, 522, 29, -520, 661, 2, -501, -506, -502, -378,
	-376, -318, 651, 652, 653, 654, 655, 656, 641, 642,
	643, 14, 15, 16, 646, 650, 648, 649, 194, 102,
	645, 312, 479, 92, 184, 185, 186, 187, 277, 278,
	17, 18, 19, 35, 644, -431, -430, -430, 662, 606,
	29, 149, 653, 2, 662, 666, 39, 662, -506, -431,
	-519, -515, -430, -526, -525, 619, -467, -468, 627, 321,
	131, 231, 319, -469, 493, -583, 8, -589, 653, -642,
	189, 222, 661, 662, 2, 662, 2, 662, -506, 2,
	662, -506, 2, 662, -506, 2, 662, -506, 2, 662,
	2, 662, 2, -506, -506, -506, -506, -506, -506, -506,
	-430, 8, -583, 661, -583, -583, -583, 562, 562, -583,
	-583, -583, -575, 407, 408, 409, 410, 299, 300, 301,
	302, 411, 412, 413, 414, 327, 328, 329, 330, 323,
	324, 325, 326, 331, 332, 333, 334, 213, 214, 215,
	216, 209, 210, 211, 212, -575, -461, 2, -577, -430,
	4, 627, 321, 131, 231, 319, 493, 5, -461, 2,
	-462, 2, -506, -430, -463, -507, -508, 651, 652, 644,
	-377, -464, 2, -506, -431, -506, 61, 290, 568, -465,
	-506, 203, -430, -430, 2, -430, 2, -509, 2, -639,
	39, -488, -318, -430, -420, 666, 203, 39, -606, 4,
	-605, 44, 66, 108, 137, 144, 177, 239, 257, 267,
	293, 394, 466, 467, 495, 526, 541, 573, 617, 505,
	-420, -420, 661, 662, 666, -460, 226, 315, 310, 266,
	-460, -539, -459, 274, -457, 387, -457, -457, -533, -333,
	659, 668, -589, -533, -530, -529, 39, -342, 384, -533,
	-533, 663, 662, -532, -531, 39, -342, 660, -654, 661,
	664, 664, 664, 664, 664, -349, 661, -430, -589, 663,
	531, 2, 662, 268, 268, 268, 268, 268, 377, 478,
	662, 566, -662, -358, -364, 498, 551, 206, -424, 666,
	-424, -417, 98, -716, 622, -596, -126, 379, 662, 666,
	-419, 38, 659, 663, -583, 2, 2, -468, 661, 203,
	-662, -364, 551, 498, 206, 2, -666, 546, -418, -596,
	566, -715, -716, -699, 662, -701, -709, -694, -703, 241,
	386, 256, 606, -590, -559, 4, -601, -318, 2, -427,
	-355, -294, 165, -428, -426, -294, 666, 165, -332, -353,
	-358, -361, -364, -318, -594, -596, -294, -354, -718, 662,
	570, -493, -379, 432, 521, 455, 499, 546, 9, 9,
	666, -589, -236, 487, 343, -331, -331, -331, -331, 666,
	-719, 100, 566, 83, 661, 488, -311, 305, 566, -497,
	233, 83, -613, 100, -335, -614, -318, 77, 586, 420,
	200, 163, -719, 100, 420, -719, 100, 2, 252, 100,
	504, 529, 661, 29, 64, -544, 43, 43, 29, -671,
	-672, 291, 203, 628, 550, 250, 488, 566, 566, -544,
	-454, -559, 126, 316, 317, 64, -584, -584, 64, -584,
	-584, -584, 622, -584, 622, -352, -544, 488, 566, 566,
	-724, -708, 462, 504, 566, 488, 566, 144, 377, 366,
	495, 137, 267, 293, -528, -528, -318, 566, 442, 540,
	442, 540, 494, -302, -304, -170, 494, 540, 305, 566,
	566, -170, 29, -217, 463, 135, -743, 643, 442, 291,
	-672, 566, 203, 666, 43, 43, 29, -671, 203, 566,
	616, -374, -333, 602, 45, 602, 45, 602, 566, 45,
	488, 566, 666, 45, -286, -285, 504, -288, -598, -287,
	341, -283, -656, -656, -243, -242, -318, 5, -417, 79,
	566, 566, -16, 504, -668, -323, 113, 349, 309, 350,
	104, 346, 103, 345, 111, 347, 112, 348, 610, 362,
	611, 363, 68, 344, 320, 351, 525, 352, 614, 364,
	-324, -325, 156, 399, 600, 128, -594, -16, -16, 504,
	392, 454, 165, -688, 241, 29, -677, 241, -552, 241,
	-552, -366, -318, 663, -156, -506, -506, -156, -506, -156,
	49, 165, 39, 165, 2, 661, 284, 661, -383, 359,
	203, -417, -553, 666, -349, 39, -243, 381, 165, -594,
	-453, -452, 359, -354, 233, 2, 165, -739, -407, 359,
	159, 661, 430, 2, 165, -334, 233, -319, -318, -472,
	-296, 554, 165, -450, 598, -484, -156, 661, 135, 39,
	-484, -439, -440, -550, -441, -335, 661, -342, -503, -127,
	-555, 662, 662, 662, -257, -408, -336, -335, 127, 434,
	434, -250, 622, -152, -153, 662, 666, -552, 241, 532,
	-153, -598, -244, -244, -552, -552, -349, 196, -598, -152,
	-244, -244, -244, -244, 2, 2, 2, 2, -456, -349,
	-332, -374, -349, -360, 241, 29, 663, -596, -596, -364,
	-365, -363, -318, -358, -456, -332, -456, -332, -456, -332,
	-456, -456, -156, -506, 529, 2, 501, 196, 196, 663,
	-456, 8, -410, 465, 5, 2, 99, -598, 2, 430,
	128, 550, 397, 250, -349, -374, -349, -374, -332, 128,
	-332, 129, 128, -349, 4, -544, -447, -272, 378, 279,
	509, -481, -482, -508, 477, 478, -482, 477, 478, 8,
	9, 8, 9, -276, 513, 365, -426, 666, -281, 40,
	145, 279, -349, -587, 628, 161, -506, -506, 566, -745,
	544, -513, 161, -506, 335, 366, 577, 181, 587, 149,
	370, 203, 661, -507, -507, 662, -432, -506, -506, 660,
	670, 662, 663, 662, -413, 666, -411, -506, -430, -430,
	662, 663, -430, -417, 660, 660, 666, 662, -524, -525,
	154, -506, 566, 566, 566, 566, 661, 662, 663, -647,
	388, 661, 661, -506, 662, 662, 662, 662, 39, 666,
	666, 666, 662, 666, 666, 666, 662, 662, 662, 666,
	-583, 662, 662, 662, 628, 628, 662, 662, 662, 662,
	666, 662, 666, 662, 203, 662, 662, -470, 404, 662,
	11, 12, 651, 652, 653, 654, 194, 655, 656, 649,
	650, 648, 641, 642, 643, 92, 312, 479, 14, 15,
	16, -377, 268, 241, -507, -507, -507, -507, 662, -511,
	-512, 203, 196, 39, -465, -465, -465, 662, 203, -430,
	662, 662, 661, -640, 314, 359, 662, 666, 662, -500,
	-499, 620, -549, -421, 2, -539, -344, -589, -500, -500,
	-430, -506, 274, 274, -458, 598, 377, -460, -539, -530,
	-585, -505, -504, 198, 40, 145, 353, 354, 355, 236,
	199, -530, -342, -487, -530, -530, -589, -533, -342, -485,
	661, -533, -529, 662, -655, -585, 662, -422, -542, -634,
	-413, 663, -589, -254, -635, -218, 5, 366, -218, -218,
	-218, -218, -349, -596, 566, 566, 241, 241, 241, -424,
	-417, 26, -686, 622, 405, -559, 659, 660, 8, -589,
	-583, -596, 203, 203, 241, 241, 241, 377, -666, 203,
	-594, -294, 662, 666, -694, -703, -709, -703, 386, 2,
	-294, -427, -294, -294, -374, -375, -294, -294, -294, -451,
	622, -586, -492, 584, 88, 432, 562, -586, 125, 487,
	-290, 454, 504, -335, -335, -349, -261, -260, -258, -318,
	5, -359, -318, 217, 443, -594, 359, -497, 233, -295,
	359, 233, -343, -559, 661, -474, 624, 279, 279, 598,
	-335, -343, 279, 233, -335, 233, -343, 2, -343, -669,
	432, 371, -506, -259, -258, 64, -390, 303, 430, 360,
	-291, 454, 504, 392, -156, -156, -156, 661, -718, 598,
	148, -349, -374, -349, -359, -594, -354, 504, 392, 454,
	356, -368, -584, -584, -584, -452, 504, 392, 454, -359,
	-594, -352, -318, -359, -594, 377, 366, 377, 137, 267,
	-594, -301, 233, -318, 442, -301, 233, 442, 442, 442,
	442, 217, 443, 488, -332, 442, 628, 48, -743, 566,
	203, -506, -506, -292, -156, -156, -156, 661, -333, -293,
	-477, 454, 5, 233, -335, 5, -335, 233, 5, -318,
	-335, -359, -594, -722, 25, 153, -335, 666, 283, 264,
	622, -679, 204, 485, 437, -289, 643, -244, 666, 643,
	643, -359, -594, -323, 399, -680, 366, 5, 10, 594,
	-332, -667, -339, 488, 566, 566, -544, -684, -685, 219,
	470, 488, 473, -596, -152, -247, 622, -152, -241, 245,
	653, -659, -598, -598, -318, -696, -697, -700, -701, -318,
	-381, -384, -382, -335, -498, -497, -617, -618, -613, 297,
	250, 586, 266, 182, 100, -262, -263, 624, 622, 165,
	-372, -349, 659, -244, -657, -554, 182, 496, 661, -361,
	-362, 165, -407, 359, -594, 608, 39, 165, 661, 2,
	2, -353, 377, 359, -334, 233, -297, 155, -743, -332,
	-500, -421, -449, -490, 465, 377, -408, 603, -342, -449,
	-423, 666, 203, 643, 663, -408, -548, 653, -127, -127,
	-244, 661, -598, 662, 666, 663, 661, 643, 643, -252,
	381, -251, 157, 281, 265, 515, 516, 517, 518, 147,
	514, 132, 340, 246, 556, 489, 607, -552, -598, -250,
	-153, 203, -552, 241, 203, -82, 622, -244, 550, 241,
	-244, 665, 488, 473, -318, 663, -456, -456, -456, 501,
	501, -318, 196, -417, 2, -345, -589, -332, -349, -346,
	-374, 196, 196, -332, -332, 591, -482, 378, 308, -535,
	-282, 630, -349, 665, -506, -506, 161, 161, -506, -507,
	-507, -506, 161, 203, 661, -506, -517, 34, 34, 662,
	666, -502, -506, -376, 662, 606, -413, -413, 662, 653,
	-589, 665, 662, -515, 158, -506, 560, 321, 231, 319,
	-469, 319, -469, -469, -583, 5, -589, 653, -648, -338,
	661, -318, 620, -412, 383, 662, -561, -559, -506, -506,
	-506, -506, -506, -583, 662, -564, -564, -579, -579, -506,
	-511, -506, -561, -559, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, 149, 359, 370, -507, -512, -511,
	-506, -506, -559, 662, 662, 662, -430, -126, 661, 314,
	-318, -443, 222, -506, -552, 666, -443, -443, 662, -539,
	-539, 661, -506, 274, 660, 666, 669, 643, 643, -487,
	663, -529, -485, -486, -489, -318, -530, 660, 662, 666,
	662, 666, -532, 662, -589, -500, -256, -255, 146, 57,
	115, 143, 366, 374, 202, 227, 429, 161, 197, 155,
	268, -686, -596, -596, 488, 488, 488, 380, 219, 5,
	8, 659, 660, 663, 662, -596, -596, 488, 488, 488,
	-660, 580, 488, 29, 203, -596, -701, -703, -703, -294,
	-294, 127, 343, -506, -233, 622, 624, 566, 566, 662,
	666, 643, 64, 241, 165, 359, 600, 359, -614, 163,
	-619, -506, 661, 250, 661, 661, 2, -278, -279, -280,
	153, 504, 25, -720, 2, 598, 165, -294, 165, -294,
	626, 662, 666, -390, 661, 661, 566, 488, -311, 566,
	622, -430, -506, -245, 135, -588, -673, 665, -673, 665,
	488, 566, 566, 488, 566, 566, 176, 257, 366, 359,
	-318, 165, -318, 233, -743, -318, -673, -673, 241, 622,
	180, 180, 628, -301, -506, -506, 196, 566, 622, -430,
	566, -563, 52, 27, 359, -353, -294, 165, 566, 566,
	580, 504, -285, -598, -152, -248, 157, 469, 147, 281,
	246, 49, 380, -680, -152, -242, -598, -598, -680, -598,
	366, -16, -359, -594, -354, 504, 392, 454, -666, -666,
	219, -364, -688, -552, -249, 381, -248, -552, -247, 203,
	264, 622, 662, 666, 135, 643, 2, 662, 662, 666,
	666, -620, -295, -349, -334, 250, 250, -341, -319, 39,
	374, 374, 661, -349, -105, 622, -551, -585, -340, -318,
	-438, -243, 46, -352, 39, 165, -667, -354, -156, -354,
	-557, -558, 5, 39, -349, 165, 377, 359, -298, 289,
	-743, -593, -635, -413, -449, -438, 360, 97, 662, -500,
	-440, -421, -506, 2, 662, -598, -244, -257, -336, 2,
	-599, -598, -598, 666, 661, 643, 643, 643, 643, 643,
	643, 643, -250, -552, -152, -250, -153, -156, 381, -349,
	-152, 653, -359, -360, 653, -456, 5, -396, -395, 397,
	370, -396, 477, 477, 378, 190, 285, -281, -333, -506,
	-506, 161, 34, 34, -506, -506, -517, 662, -506, -506,
	-430, 660, 5, -506, 662, 662, 8, -506, 662, 663,
	-649, -318, -506, 662, 64, 662, 662, 666, 666, 662,
	662, 662, 662, 662, 662, 662, -512, 203, 149, 370,
	661, 662, 662, -126, -514, 225, 64, -539, -514, -514,
	-458, -417, -539, -504, -333, 659, -333, 659, -589, 662,
	666, -559, -585, -542, 663, -255, 643, -598, -598, 2,
	2, 5, 5, 429, 359, 366, 5, -218, -686, -686,
	622, -364, -364, -364, 380, 660, 2, 659, -589, -364,
	-364, -364, 203, -662, -364, 551, 206, -596, 127, 196,
	230, 230, -335, -335, -260, -586, 550, 477, -301, 420,
	-497, 165, 165, -621, 100, -623, 81, 182, 110, 359,
	366, 586, 420, 77, 135, 377, 439, -733, -734, -735,
	39, 633, 634, 662, -415, -536, -634, 661, -318, -415,
	-417, 359, 537, 135, 377, 359, 135, 377, 616, 127,
	2, 580, 84, -335, -343, -258, -417, -417, -349, -359,
	-594, 173, 662, 666, 643, 2, 653, 653, -359, -594,
	-354, -359, -594, -352, -318, 257, 165, 603, -301, 165,
	-301, 603, -301, 395, 180, 566, -156, -506, 173, 662,
	-333, 5, 5, 165, -330, 81, -335, 5, -335, -353,
	127, 643, 643, 643, 643, 643, 31, -680, -242, 622,
	488, 566, 566, 377, 377, 380, -684, -685, -247, 666,
	661, -247, -599, -152, 2, 467, -700, -506, -506, -397,
	252, -335, -618, -615, -616, 420, -498, -622, -624, 182,
	420, -385, 661, -334, -319, 661, -156, 2, -261, 661,
	-383, 381, 660, 203, 662, -594, -453, -156, -354, -407,
	-405, 622, -407, 662, 666, 159, -475, 598, -333, -349,
	165, -299, 288, -743, -593, -296, -480, -478, 150, 661,
	377, -156, -413, 643, 662, 127, 662, -251, -252, -598,
	-152, -598, -598, -598, -152, -598, -250, -690, 39, -552,
	-83, -84, 250, 100, 402, -244, -244, -346, 550, 250,
	661, 661, -281, -506, -506, -506, 662, -413, -589, 653,
	-643, 397, 662, -535, -506, -506, -507, 203, 661, -517,
	662, -644, 621, -506, -444, -445, -506, 475, 116, 223,
	-644, -644, 662, -585, -585, -489, -598, 2, 2, 366,
	2, 2, 2, 566, 566, 566, 659, 2, 203, 203,
	203, -596, 203, 203, 241, 241, -156, 241, 39, 442,
	-497, -343, -343, -347, -340, 182, 233, 366, 616, -474,
	279, 661, -507, 591, -349, 661, 2, 232, 232, 31,
	64, -736, 140, 254, 662, 666, -537, -329, -318, -506,
	-537, 662, 662, 366, 591, 366, 616, -506, 591, -559,
	661, -294, -294, 662, 662, -506, 566, -588, 107, -586,
	2, -673, -301, -417, -417, -673, -332, -506, 196, -506,
	566, 5, -294, -347, -294, -294, -330, 580, -598, -506,
	577, 181, -152, -152, 376, -359, -594, -354, -689, 551,
	498, 581, 490, 206, 476, -689, 196, -248, -249, -247,
	-692, 505, -391, -392, 2, -620, 279, -340, 279, 243,
	164, -415, 661, 661, -417, -732, 622, 662, -381, -262,
	-106, -107, 567, -551, -663, -371, -407, 39, 343, 127,
	39, 5, 661, 661, -318, 377, 661, -333, -313, 98,
	-743, -593, -297, -449, 360, -417, 100, -480, -513, -244,
	661, -244, 662, 556, -250, 666, 29, 661, 29, 661,
	-349, -374, -430, -430, 662, -413, 64, 666, 662, 662,
	-507, -517, 662, -645, -646, -338, 666, 661, 661, 506,
	660, 660, 2, -596, -596, -596, 2, -596, -596, -596,
	-596, -596, 488, 488, -301, 420, -318, -614, -623, -340,
	359, -263, 598, 622, -506, -507, -320, 661, -506, 661,
	661, 39, 135, 254, 141, 238, -496, -737, 109, 538,
	242, -536, -281, 662, -495, 598, 439, -507, -330, -415,
	661, 661, 661, 643, 203, -156, 661, -563, -294, -353,
	643, 566, 2, 203, -666, 662, -679, -702, -703, -262,
	661, -263, -386, 86, 101, 136, 232, 207, 251, 529,
	535, 29, -386, 662, -415, -415, 662, -387, 377, 127,
	343, 662, 39, -107, 9, -500, 39, -156, 127, -156,
	-557, -415, -349, -415, 377, -303, -302, 298, -593, -298,
	662, -343, -449, -599, -585, 4, -84, -417, -417, 662,
	662, -650, 430, 478, 224, -430, -414, 662, 666, 39,
	-445, 2, 2, 2, -686, -686, -686, -364, -364, 442,
	-295, 165, 226, 662, -625, 313, -318, 662, -453, -453,
	39, 141, 238, -393, -389, 661, -282, -537, -263, 226,
	-349, -674, 598, 662, -399, -398, -395, -401, -400, -395,
	-430, -586, 107, 395, -430, -330, -152, -596, -596, 377,
	-681, 204, -704, -705, -707, 39, 284, 573, 621, -708,
	-387, -416, -538, -335, -495, 662, 662, 87, 127, -397,
	-156, -156, 2, -405, 662, 662, -475, 662, -349, -300,
	-600, 442, 444, -743, -299, -500, 150, 662, 662, 662,
	662, -651, -652, 54, 583, 117, -506, -651, -651, -646,
	-648, 203, 203, 182, -494, 631, -626, -629, -628, 638,
	512, 204, 396, 662, 537, 615, 662, 662, -736, -417,
	-494, -407, -506, -495, 662, 666, 603, 662, 666, 603,
	662, 203, 662, -294, -686, -294, -689, -246, 622, 49,
	-714, -711, 53, 466, -707, -695, 5, -593, -312, -311,
	662, 666, -496, -495, -393, 419, 142, 153, -391, -732,
	-495, 661, -496, 661, -310, -309, -743, -579, -313, 150,
	360, 591, -244, -653, 163, -652, 416, 195, 477, 416,
	195, -653, -653, -596, -596, -340, -263, 59, -628, 638,
	-629, 638, 591, 142, -500, 662, -625, -263, -398, 241,
	-400, 203, 395, 203, 485, -680, 31, 44, -506, -263,
	-538, -393, -496, -263, 478, 478, 2, -262, -387, -496,
	-415, -393, -415, -306, -307, -308, -417, -303, 360, 591,
	504, 117, 222, 561, 343, 34, 643, -627, 343, 462,
	69, 504, -627, -626, 661, 661, -596, 381, -713, -263,
	-393, -500, 2, -387, -393, 662, -263, 662, -595, 392,
	-300, 504, -439, 477, 385, -652, -506, 24, 366, 135,
	-736, -430, -430, -294, -243, 661, -712, 158, -3, -711,
	-500, -263, -476, 359, 616, -312, -263, -495, -500, -496,
	-305, -304, 494, -743, -310, -439, -500, 662, 662, -243,
	667, -476, -500, 616, -500, -496, -476, -393, -594, -306,
	-500, -388, -389, 566, 662, -476, -476, -393, -263, -305,
	661, -263, -500, -430, -500, -476, 662, -476, -388,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1750,
	1752, 730, 731, 733, 734, 735, 737, 738, 740, 742,
	744, 745, 746, 748, 749, 751, 752, 753, 754, 755,
	757, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 853, 855, 0,
	1732, 1734, 1736, 1738, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 422, 424,
	426, 428, 0, 460, 462, 463, 465, 467, 468, 470,
	472, -2, 0, 656, 657, 659, 661, 663, -2, 0,
	1308, 1310, 1312, 0, 841, 843, 0, 1315, 1317, 1319,
	0, 0, 865, 866, 0, 1853, -2, 857, 859, 861,
	863, 942, 944, 946, 948, 950, 952, 954, 956, 958,
	960, 962, 963, 965, 967, 969, 971, 973, 974, 976,
	978, 980, 981, 983, 984, 986, 988, 990, 992, 994,
	996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, -2,
	1015, 1016, 1017, 1019, -2, 0, -2, -2, 1746, 52,
	54, 56, 58, 60, 62, 64, 66, 68, 70, 72,
	74, 76, 78, 601, 603, 605, 607, 609, 612, 614,
	616, 618, 1911, 665, 667, 669, 671, 673, 675, 677,
	679, 0, 0, -2, 1925, 0, 0, 0, 1110, 80,
	81, 82, 83, 84, 85, 86, 87, 88, 89, 149,
	150, 151, 152, 153, 154, 155, 156, 93, 94, 95,
	97, 98, 99, 100, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	146, 147, 91, 120, 121, 122, 123, 124, 0, 0,
	1884, 1886, 1888, 1890, -2, 0, 0, 8, 12, 14,
	16, 18, 20, 22, 24, 26, 28, 30, 32, 36,
	38, 40, 42, 1751, 1753, 732, 736, 739, 741, 743,
	747, 750, 756, 758, 760, 715, 716, 719, 2641, 2659,
	2660, 2661, 2664, 2665, 2666, 2667, 2668, 2669, 3203, 3284,
	3285, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930,
	2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940,
	2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950,
	2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960,
	2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970,
	2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980,
	2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000,
	3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020,
	3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
	3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040,
	3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050,
	3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060,
	3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070,
	3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080,
	3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090,
	3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100,
	3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3129,
	3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139,
	3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149,
	3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159,
	3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169,
	3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179,
	3180, 3181, 3182, 717, 718, 1502, 0, 799, 797, 2624,
	800, 2952, 802, 804, 650, 651, 652, 653, 654, 655,
	0, 834, 3057, 815, 1923, 835, 837, 838, 839, 840,
	794, 792, 0, 839, 834, 2697, 3057, 832, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 581, 1565, 1566, 1567, 1715, 1716, 3008, 1761,
	0, 286, 854, -2, -2, 3167, -2, 896, 897, -2,
	-2, 911, 915, 906, 3172, 0, 3011, 2993, -2, 918,
	1733, 1735, 1737, 1020, 1021, 1022, 2645, 1026, 1024, 1036,
	1037, 1040, 0, 1057, -2, 0, 2693, 2975, -2, -2,
	1058, 1059, -2, -2, -2, -2, 1038, 1039, 0, 0,
	0, 0, 0, 2061, 2062, 2628, 1763, 1755, 1758, 1756,
	1757, 47, 49, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 296, -2, -2,
	-2, -2, 0, 0, 3063, 2756, 2592, 2661, 2595, 2590,
	423, 425, 427, 429, 430, 0, 0, 0, 0, 0,
	0, 0, 461, 464, 466, 469, 471, -2, 0, 473,
	0, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 1374, 1375, 1632, 0, 0, 0, -2, 658, 660,
	662, 720, 721, 0, 1912, 1912, 728, 729, -2, 0,
	0, 0, 0, 384, 375, 1309, 1311, 1313, 1314, 0,
	0, 0, 0, 0, 842, 844, 0, 0, 3057, 347,
	1316, 1318, 1320, 1321, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 858, 860, 862, 864, 943, 945, 947,
	949, 951, 953, 955, 957, 959, 961, 964, 966, 968,
	970, 972, 975, 977, 979, 982, 985, 987, 989, 991,
	993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011,
	1013, 1014, 1065, 0, 0, 0, 0, -2, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1180,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	0, 1277, 0, 0, 1068, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 0, 1153, 1178, 1179, 1189, 1018, 0, 1545,
	1913, 1763, 1740, 1741, 1742, 1747, 1749, 1743, 1744, 1745,
	53, 55, 57, 59, 61, 63, 65, 67, 69, 71,
	73, 75, 77, 79, 602, 604, 606, 608, 610, 613,
	615, 617, 619, -2, 1882, 1883, 666, 668, 670, 672,
	674, 676, 678, 680, 845, 0, 848, 0, 1070, 847,
	-2, 0, 1917, 1917, 1917, 0, 0, 1883, 1881, 0,
	0, 0, 851, 852, 922, 923, 2204, 0, 0, 0,
	0, 0, 0, 0, 0, 2464, 2292, 0, 924, -2,
	2325, 2327, 3141, 2924, 3167, 2463, 2329, 2330, 2331, 2332,
	2333, 0, 2335, 2336, 2337, 2338, 2339, 2340, 0, 2342,
	0, 2347, 2348, 2349, 0, 3148, 2567, 2655, -2, 0,
	0, 3155, 2651, 0, 2430, 2365, -2, -2, 2678, 2657,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, -2, -2, 3186,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 0, 3129, 3149, 3150, 3156, 3158, 3151, 3138, 2390,
	2772, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2163, 2172, -2, -2, -2, -2,
	-2, -2, -2, 3142, 3143, 3161, 3164, 3171, 3176, 3177,
	3147, 3157, 3185, 3187, 3188, 3189, 3190, 3191, 3192, 3193,
	3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 2164,
	-2, -2, -2, -2, 0, 1900, 2968, 1903, 2009, 1901,
	1885, 1887, 0, 1889, 0, 0, 0, 1894, 1920, 1918,
	0, 1969, 1898, 1899, 1992, 1992, 2024, 0, 1997, 0,
	2024, 1912, 2055, 0, 2003, 2998, 2366, 2367, 0, 2661,
	2656, -2, -2, 3183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 801, 803, 0,
	0, 0, 0, 834, 833, 1922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 3149, 542, 543, 546,
	0, 584, 585, 586, 587, 588, 3149, 0, 0, 0,
	0, 594, 595, 596, 597, 598, 599, 600, 256, 3149,
	685, 714, 710, 0, 256, 3149, 688, 713, 256, 3149,
	691, 712, 0, 694, 1630, 256, 3149, 697, 2620, 256,
	3149, 700, 702, 256, 3149, 706, 2635, 2633, 707, 0,
	709, 276, 272, 273, 274, 275, 1726, 1727, 1728, 1729,
	0, 1760, 1631, 856, 0, 882, 0, 894, 895, 3137,
	-2, 0, 3022, 899, 900, -2, 902, 1764, 1768, 1769,
	1770, 1771, 1772, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 889, 890, 909, 910, 916, 919, 0, 1029,
	1025, 1041, 0, 1056, 0, 1057, 1057, 2609, 2600, 2601,
	0, 0, 1057, 1057, 0, 0, 1060, 1061, 1062, 1063,
	1064, 1754, -2, 90, 0, 3149, 2055, 92, 0, 2614,
	2687, 2688, 2689, 2690, 2691, 3184, 3204, 3205, 3206, 3207,
	3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217,
	3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227,
	3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237,
	3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247,
	3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257,
	3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267,
	3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277,
	3278, 3279, 3280, 3281, 3282, 3283, 3186, 96, 0, 3149,
	101, 0, 3149, 0, -2, 125, 561, 126, 0, 148,
	0, 176, -2, -2, -2, 157, 0, 3149, 0, 2589,
	-2, 0, 268, -2, 0, 785, 387, 388, 2674, 2675,
	2683, 2684, 2685, 2686, 376, 377, 0, 776, 0, 885,
	2464, 0, 0, 1346, -2, 0, 1558, 1560, 1560, 0,
	-2, 0, 0, 0, 1297, 2586, 2591, 1298, 1299, 2610,
	1300, 2596, 0, 431, 432, 433, 434, 435, 0, 436,
	3149, 438, 439, 0, 441, 442, 3149, 444, 445, 0,
	447, 0, 449, 0, 311, 328, 326, 3149, 0, 3149,
	475, 478, 0, 582, 0, 579, 0, 563, 564, 0,
	566, 0, 0, 0, 571, 572, 574, 575, 576, 577,
	578, 0, 623, 621, 2625, 641, 401, 0, -2, 3149,
	0, 1343, 0, 0, 1610, -2, 0, 1551, -2, 0,
	1617, 3149, 1613, 0, -2, 0, 1910, 3149, 1781, 1378,
	1379, 1380, 1381, 2069, 647, 0, 1817, 0, 1819, 0,
	1839, 2063, 1992, 0, 0, 2068, 0, -2, 773, 2644,
	-2, 723, 0, 724, 0, -2, 0, 401, 0, 0,
	1324, 1326, 1327, 1329, 1330, 1333, 1334, 1335, 1336, 0,
	1338, 2041, 348, 350, 0, 0, 0, 0, 1323, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 0, 641,
	867, 0, 0, 1066, 1067, 0, 0, 1085, 1086, 1087,
	0, 0, 401, -2, -2, -2, -2, 1096, 0, 1104,
	1107, -2, 0, 0, 0, 0, 1114, 0, 1119, 1120,
	1121, 0, -2, 0, 1128, 1130, 1307, 1133, 0, 1307,
	0, 1135, 0, 1139, 0, 1142, 0, 1144, 0, 1146,
	-2, -2, -2, 1154, 1155, -2, 1160, -2, 0, 1164,
	-2, 0, 1167, 0, 1170, -2, 0, 1180, 1176, 1177,
	0, 0, 0, 0, 1197, 1198, 0, 1207, 0, 1210,
	1211, 1212, 0, 0, 1217, 1218, 0, 1220, 1221, 1222,
	1224, 1225, 1226, 0, 3096, 3019, 2756, 2804, 0, 1235,
	-2, 2793, 1245, 1247, 0, -2, 0, 1263, 0, 1267,
	0, 0, 1276, 0, 0, 0, 1069, 0, 1078, 1079,
	1080, 256, 2059, 1739, 0, -2, 0, 846, 0, 850,
	1942, 1868, 1865, 0, 1939, 1940, 1869, 0, 0, 0,
	1876, 0, 1915, 1916, 0, 0, 0, 1855, 1856, 0,
	0, 0, 0, 0, 0, 2469, 2470, 2471, 2472, 2485,
	2473, 2474, 2484, 2482, 2483, 2475, 2476, 2481, 2495, 2496,
	2486, 2487, 2477, 2490, 2488, 2489, 2491, 2492, 2493, 2494,
	0, 0, 2500, 0, 2478, 2479, 2480, 2508, 0, 0,
	2509, 0, 2511, 0, 2501, 2497, 2498, 2499, 0, 2271,
	2273, 2575, 0, 0, 0, 2507, 2502, 2503, 2209, 2210,
	2211, 2212, 2213, 2246, 2250, 2251, 0, 0, 2326, 2572,
	2571, 2328, 0, 0, 2523, 0, 2341, -2, 0, 2464,
	2518, 0, 0, 2350, 2351, 2352, 0, 0, 2523, 0,
	0, 2566, 2362, 2363, 2201, 0, 0, 2432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2150, 2149, 0, 2151,
	0, 2152, 2153, 0, -2, 0, 0, 2173, 0, 0,
	0, 0, 2177, 0, 0, 0, 0, 0, 0, 0,
	2547, -2, 0, 0, 0, 0, 2165, 0, 0, 1902,
	0, 0, 0, 1973, 2576, 2580, 2581, 1973, 1973, 0,
	0, 2524, 2052, 2052, 0, 0, 2047, 2047, 2047, 2045,
	2024, 0, 2024, 2034, 0, 2024, 2024, 0, -2, 1997,
	0, 0, 2038, 0, 2018, 761, 763, 765, 767, 768,
	769, 771, 2056, 2057, 0, 0, 0, 0, 2662, 0,
	0, 0, 0, 0, 0, 2647, 0, 0, 2619, 456,
	457, 0, 0, 0, 3076, 3011, 0, -2, -2, -2,
	-2, 3019, 0, 0, 2756, 2793, 2804, 806, 836, 0,
	1912, 0, 2526, 2084, 2088, 0, 2090, 2091, 2092, 0,
	0, 2085, 2184, 2679, 2680, 2681, 2144, 2145, 2146, 2147,
	2148, 2156, 2143, 2143, 2143, 2154, -2, 2161, 2183, 2175,
	2183, 2179, 2127, 2128, 2129, 2166, 2167, 2168, 2169, 0,
	3076, 3011, 0, -2, 0, 818, 0, 0, 0, 1850,
	338, 339, 540, 0, 254, 255, 0, 545, 0, 583,
	0, 590, 591, 592, 0, 681, 0, 0, 256, 3149,
	686, 0, 689, 0, 256, 3149, 2584, 695, 0, 698,
	0, 0, 704, 0, 0, 0, 0, 0, 256, 1852,
	0, 0, 0, 0, -2, 904, 912, 913, 914, 0,
	1766, 0, 1773, 933, 934, 935, 1775, 1776, 0, 1778,
	907, 936, 937, 938, 939, 940, 941, 0, 2598, 2599,
	2604, 2605, 0, 0, 905, 926, 908, 0, 920, 1032,
	1027, 1028, 1042, 1043, 0, 0, 2602, 2603, 0, 0,
	1048, 1049, 158, 1712, 0, 0, 209, 0, 1712, 1712,
	0, 0, 0, 0, 237, 0, 0, 1412, 0, 0,
	0, 0, 176, 194, 205, 170, 171, 172, 0, 0,
	0, 0, 0, 0, 102, 1524, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 1540, 1543, 0, 0, 0,
	0, 555, 0, 529, 0, 0, 552, 560, 0, 0,
	516, 517, 518, 519, 0, 0, 524, 0, 0, 0,
	0, 530, 0, 128, 129, 0, 0, 134, 135, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 1814, 0,
	184, 176, 0, 0, 175, 177, 160, 0, 0, 176,
	180, 195, 207, 0, 243, 0, 183, 245, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 278, 0,
	0, 313, 783, 0, 786, 0, 775, 777, 641, 641,
	0, 0, 883, 887, 888, 0, 0, 884, 886, 0,
	0, 1552, 0, 0, 0, 1909, 0, 0, 0, 0,
	3149, 1710, 0, 1693, 0, 2041, 2852, -2, -2, 348,
	2041, 1296, 0, 0, 2662, 2594, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 0, 337, 0, 0, 0,
	480, 485, 0, 573, 562, 565, 567, 568, 569, 611,
	1471, 3149, 0, 0, 645, 636, 0, 640, 0, 0,
	644, 0, 0, 1523, 3149, 1521, 2629, 0, 1549, 0,
	1609, 1502, 3149, 2627, 0, 0, 0, 1618, 2671, 1627,
	1631, 1802, 0, 649, 0, 1820, 1822, 0, 0, 2064,
	0, 2066, 1992, 1912, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 1337, 357, 0, 2040, 0, 0,
	389, 2041, 348, 2981, 0, 1322, 401, 401, 2041, 869,
	2041, 871, 0, 0, 1088, 0, 0, 1091, 401, 401,
	401, 401, 1102, 1103, 1105, 1106, -2, -2, -2, -2,
	1108, 1109, 1204, 0, 0, 0, 1203, 1708, 0, 1124,
	1127, 1131, 0, 1280, 2993, 3011, 3076, 1305, 1132, 1204,
	2756, 1204, 2756, 1204, 2756, 1204, 1204, 1148, 1192, 1200,
	1159, 1166, 0, 1161, 1165, 1168, 1171, 0, 1173, 1181,
	0, -2, 0, 1184, 0, 1186, 0, 1188, 1204, 1205,
	1208, 0, 1216, 1219, 0, 1227, 1228, 1229, 1230, 2642,
	1231, 1232, 1233, 1234, -2, 0, 1238, 1239, 0, 0,
	1254, 1259, 1260, 1256, 0, 0, 0, 0, 0, 0,
	1270, 1271, 0, 0, 0, 1279, 0, 1081, 1544, 0,
	1748, 1942, 1868, 849, 1859, 1941, 1860, 1867, 1870, 0,
	0, 1872, 0, 1874, 0, 1937, 1938, 1945, 1946, 0,
	1956, 1957, 1949, 0, -2, 0, 0, 1952, 1953, 1878,
	0, 1895, 1896, 1897, 1926, 1929, 1646, 0, 3284, 892,
	0, 2205, 2079, 2206, 2207, 2613, 0, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, -2, -2, -2,
	-2, -2, -2, -2, -2, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, -2, -2, -2, 2247,
	2248, 2249, -2, 2510, 2512, 0, 2575, 0, -2, 0,
	-2, -2, -2, -2, 2268, 0, 2270, 2275, 2277, 2279,
	0, 0, 0, 0, 2574, 2289, 2558, 2559, 0, 0,
	2466, 2467, 2468, 2274, 0, 2293, 2573, 2570, 0, 0,
	2504, 0, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 0, 2522, 1925, 2354, 0,
	0, 0, 0, 2361, 2346, 2520, 0, 2519, 0, 0,
	0, 2530, 0, 2565, 2561, 0, 2611, 2200, 2187, 2188,
	2189, 2190, 2191, 2192, 2202, 0, 2608, 2648, 2654, 2440,
	0, 0, 0, 2391, 2392, 2393, 2394, 2395, 0, 2397,
	2398, 0, 2400, 2401, 0, 2403, 2404, 0, 2406, 2407,
	2408, 2409, 2410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 0, 0, 2412, 0, 2533,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2414,
	0, 2416, 2524, 2544, 0, 0, 2294, 0, 0, 0,
	0, 0, 2419, 2524, 2552, 0, 0, 0, 0, 0,
	2524, 0, 2557, 0, 2426, 0, 2428, 1111, 1112, 1904,
	0, 0, 2010, 0, 2074, 0, 0, 0, 2579, 2582,
	2583, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118,
	3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128,
	2074, 2074, 0, 1968, 0, 0, 2048, 2049, 2050, 2051,
	0, 0, 2052, 0, 2042, 2046, 2043, 2044, 2034, 1989,
	0, 0, 2615, 2034, 1995, 2033, 0, 2009, 2023, 2034,
	2034, 0, -2, 1999, 2037, 0, 2012, 2024, 0, 0,
	762, 764, 766, 770, 772, 0, 0, 1925, -2, 0,
	-2, 403, 1501, 0, 0, 0, 0, 0, 0, 796,
	798, 0, 0, 701, 0, 0, 0, 0, 1286, 0,
	1288, 1289, 0, 1291, 0, 1696, 790, 0, 793, 0,
	2075, 2078, 0, 0, 2089, 2093, 2094, 2185, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 3057, 0, 829,
	0, 544, 256, 0, 548, 549, 0, 0, 497, 498,
	499, 500, 502, 2682, 503, -2, -2, 0, 593, 256,
	711, 683, 0, 256, 256, 692, 0, 0, 256, 703,
	256, 2636, 256, 2634, 277, 708, 1851, 289, 0, 891,
	0, 1765, 1774, 0, 930, 0, 932, 0, 2606, 2607,
	0, 921, 0, 1030, 0, 1044, 1045, 1046, 1047, 0,
	0, 0, 0, 1711, 0, 0, 1656, 0, 0, 213,
	3149, 0, 258, 0, 0, 1464, 2621, 0, 1454, 0,
	0, 2780, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	173, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 1526, 1528, 1535, 1537, 0, 1531, 1532, 0, 1534,
	1536, 1538, 0, 1541, 0, 0, 0, 0, 0, 0,
	551, 553, 554, 529, 0, 0, 0, 0, 0, 0,
	0, 522, 523, 525, 526, 527, 528, 0, 0, 0,
	0, 0, 0, 136, 140, 1561, 3017, 0, 0, 0,
	0, 1562, 1563, 1564, 1790, 1791, 0, 1813, 1814, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	182, 0, 2588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 314, 0, 787, 0, 788,
	0, 778, 401, 780, 781, 397, 394, 396, 782, 0,
	0, 0, 1554, 0, 1605, 1603, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 0, 0, 0, 0, -2, 1556, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	392, 2587, 2597, 0, 1331, 1332, 437, 440, 443, 446,
	295, 0, 0, 0, 477, 487, 0, 1384, 1356, 0,
	0, 622, 401, 641, 643, 0, 399, 2927, 2640, 1341,
	1519, 1522, 0, 1502, 3149, 1573, 0, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 3149, 2616, 2670, 2671,
	1804, 1814, 0, 2074, 0, 1837, 1823, 0, 0, 0,
	1837, 1841, 1842, 1844, 1845, 0, 0, 2065, 2071, 722,
	774, 1912, 1912, 401, 0, 0, 1826, 1828, 0, 0,
	0, 340, 0, 351, 2041, 349, 0, 357, 0, 0,
	2041, 348, 0, 635, 868, 873, 401, 0, 0, 401,
	1092, 1093, 1094, 1095, 1150, 1194, 1202, 1258, 1113, 1115,
	1116, 1117, 0, 1122, 0, 0, 0, 1306, 1301, 1302,
	1303, 2637, 2633, 1304, 1134, 1204, 1137, 1204, 1140, 1204,
	1143, 1145, 1163, 1169, 1182, 1175, 1183, 0, 0, 0,
	1196, 0, 1214, 0, 1223, 1237, -2, 1242, 1243, 0,
	0, 0, 0, 0, 0, 0, 1264, 1265, 1266, 1268,
	1273, 1272, 0, 1278, 1082, 2060, 1863, 1864, 1866, 0,
	1875, 0, 0, 1951, -2, -2, 1950, 1954, 1955, -2,
	-2, -2, -2, 1871, 0, 1880, 1877, 0, 1936, 1644,
	1645, 0, 0, 893, 0, 0, -2, -2, 0, 0,
	0, 2290, 0, -2, 2269, 2272, 2276, 2278, 2280, 0,
	0, 0, 0, 0, 0, 2513, 0, 2515, 2291, 2568,
	2571, 2506, 0, 2462, 0, 0, 1924, 1925, 1925, 0,
	2360, 0, 2521, 0, 2528, 2529, 0, 2353, 0, 2562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2364,
	0, 0, 0, 0, 2396, 2399, 2402, 2405, 0, 0,
	0, 0, 2385, 0, 0, 0, 2389, 2155, 2141, 0,
	0, 2158, 2162, 2183, 2181, 2182, 2176, 2183, 2180, 2131,
	0, 2130, 0, 2411, 0, 2413, 2415, 0, 0, 2417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2297, 2298, 2299, 2319, 2418, 2550,
	2551, 0, 0, 0, 0, 0, 0, 2424, 0, 2556,
	2425, 2427, 1912, 0, 1905, 0, 2008, 0, 1970, 1959,
	2073, 0, 2577, 2041, 1972, 1974, 2578, 2618, 1959, 1959,
	0, 2525, 0, 0, 2028, 0, 0, 0, 2030, 1993,
	0, 0, 1987, 0, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1994, 2009, 2032, 1996, 2000, 2648, 0, 2012, 2036,
	0, 2034, 0, 2019, 0, 2021, 2058, 0, 2005, 2038,
	0, 0, 2663, 2074, 0, 450, 458, 459, 451, 452,
	453, 454, 0, 1696, 0, 0, 0, 0, 0, 1287,
	1290, 0, 814, 0, 0, 2527, 0, 2080, 0, 2086,
	0, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 541, 547, 0, 0, 496, 0, 495, 501, 589,
	682, 256, 687, 690, 2585, 256, 696, 699, 705, 285,
	0, 881, -2, 928, 929, 931, 0, 927, 1035, 1031,
	210, 1712, 0, 0, 0, 1652, 0, 1367, 0, 1362,
	1363, 1654, 2632, 1658, 1664, 1667, 0, 215, 3149, 227,
	0, 3149, 0, 1428, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 3149, 256, 3149, 256, 231, 233, 236,
	0, 242, 238, 0, 1364, 0, 1416, 0, 0, 1419,
	159, 1712, 0, 0, 162, 166, 178, 0, 0, 0,
	192, 0, 0, 0, 1669, 1673, 1681, 0, 0, 0,
	1529, 1530, 1533, 1539, 1542, 103, 0, 0, 0, 1677,
	1679, 1685, 556, 557, 558, 0, 0, 0, 520, 521,
	127, 130, 3149, 2630, 0, 132, 3149, 0, 141, 1814,
	0, 0, 0, 0, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 164, 168, 179, 0, 1687, 161,
	181, 0, 271, 0, 0, 261, 256, 3149, 0, 263,
	0, 264, 265, 279, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 784, 0, 779, 0, 0,
	0, 1344, 1345, 1604, 0, 1547, 1548, 323, 324, 0,
	1559, 1553, 0, 0, 0, 0, 0, 1689, 1690, 0,
	0, 0, 1710, 1705, 2041, 291, 0, 2041, 299, 0,
	2593, 0, 327, 336, 474, 0, 486, 488, 490, 0,
	0, 0, 1383, 1482, 1385, 1387, 1388, 1389, 258, 0,
	2671, 1454, 2839, 2671, 0, 0, 1351, 0, 0, 0,
	628, 624, 0, 633, 637, 638, 0, 0, 0, -2,
	0, 0, 0, 0, -2, 0, 0, 0, 1620, 1614,
	1615, 0, 0, 0, 0, 3149, 1806, 1814, 0, 1910,
	1925, 648, 1815, 1837, 0, 0, 0, 1825, 1821, 1818,
	2074, 0, 0, 0, 0, 0, 2067, 2070, 725, 726,
	378, 0, 401, 0, 0, 0, 0, 0, 0, 355,
	0, 358, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 0, 0, 0, 373, 374, 357, 390, 342,
	2041, 0, 357, 0, 0, 870, 0, 1083, 0, 0,
	1090, 0, 0, 1708, 1126, 0, 1136, 1138, 1141, 1185,
	1187, 1204, 0, 1215, 1241, 1248, 2617, 1249, 1406, 0,
	1406, 0, 0, 1269, 1275, 1873, 0, 1948, 1879, 1930,
	1931, 0, 1646, 0, 2208, 2253, 0, 0, -2, 0,
	0, 2257, 0, 0, 0, -2, 0, 0, 0, 2514,
	2516, 0, 2570, 2505, 2355, 0, 0, 0, 2359, 2343,
	2344, 0, 2465, 2531, 2560, 2564, 0, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 0, 2612, 2649, 2653, 2438, 2439,
	2443, 2626, 0, 0, 0, 2368, 0, 0, 0, 0,
	0, 0, 0, 0, 2157, 2174, 2178, 0, 0, 2532,
	2543, 2545, 2295, 2296, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, -2, -2, -2, 2313, 2314, 2315,
	-2, -2, -2, 2320, 0, 0, 0, 2546, 2548, 2549,
	2553, 2554, 0, 2421, 2422, 2423, 2555, 0, 1912, 1906,
	2011, 1967, 0, 2072, 1971, 0, 1967, 1967, 1919, 2026,
	0, 0, 2054, 0, 1990, 0, 1991, 0, 0, 2031,
	0, 1998, 2035, 0, 2014, 2016, 2001, 2002, 2020, 0,
	2004, 0, 2007, 2355, -2, 402, 404, 406, 0, 409,
	410, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 805, 1696, 1696, 0, 0, 0, 807, 0, 791,
	0, 0, 2082, 0, 2186, 820, 822, 0, 0, 0,
	0, 3076, 3011, 0, 0, 819, 550, 493, 494, 684,
	693, 287, 0, 2039, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 257, 0, 1463, 0,
	1426, 0, 0, 1453, 0, 0, 1469, 217, 218, 219,
	0, 0, 0, 0, 229, 0, 0, 225, 0, 235,
	241, 240, 0, 1413, 0, 0, 0, 0, 1657, 0,
	0, 0, 189, 190, 191, 0, 196, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 0, 138, 0, 0, 0, 143, 144, 0, 0,
	1796, 1797, 0, 1784, 186, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 1643, 281, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 303, 305, 0,
	0, 0, 0, 325, 0, 398, 393, 395, 1546, 1607,
	1608, 1555, 1670, 1674, 1682, 0, 0, 0, 0, 0,
	839, 1709, 0, 299, 297, 0, 300, 299, 293, 0,
	0, 0, 0, 0, 0, 0, 570, 1354, 1470, 0,
	0, 1472, 1390, 1394, 0, 2671, 2671, 0, 2623, 0,
	1352, 0, 0, 1471, 620, 0, 627, 0, 642, 2622,
	0, 0, 0, 1523, 0, 0, 1550, 1502, 1576, 1502,
	0, 1619, 1621, 0, 1629, 0, 0, 0, 1808, 1814,
	0, 1801, 1802, 1944, 1816, 1835, -2, 0, 0, 1925,
	1843, 1840, 1846, 1847, 0, 0, 381, 0, 1827, 1829,
	0, 1325, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 357, 354, 344, 2041, 385, 0, 401,
	401, 1118, 1707, 1123, 2638, 1195, 1213, 1250, 1405, 0,
	0, 1252, 0, 0, 1947, 1934, 1935, 1932, 1646, 2255,
	2259, 0, 0, 0, 2261, -2, 0, 2283, -2, -2,
	2517, 2569, 2334, 1925, 2356, 2358, 2345, 2563, 2203, 0,
	2445, 2442, 0, 2429, 0, 2380, 2381, 0, 0, 2384,
	2386, 2387, 2388, 2142, 2133, 2132, 2542, 0, 0, 0,
	0, 2420, 1907, 0, 2434, 0, 0, 1975, 2434, 2434,
	2027, 0, 2029, 1988, 1976, 0, 1985, 0, 2649, 2013,
	0, 2017, 2022, 2006, 0, 407, 0, 411, 412, 413,
	414, 416, 0, 0, 0, 0, 0, 455, 808, 809,
	0, 0, 0, 0, 1695, 2076, 2081, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 830, 288, 0,
	1033, 1034, 211, 212, 1368, 1366, 1661, 1665, 1662, 0,
	214, 0, 0, 1427, 0, 1430, 0, 0, 0, 0,
	1437, 1454, 0, 0, 0, 0, 0, 0, 1456, 0,
	1455, 0, 0, 1486, 0, 1634, 1641, 0, -2, 0,
	0, 0, 221, 247, 0, 0, 0, 0, 250, 1713,
	223, 0, 0, 256, 256, 1365, 0, 0, 1653, 1655,
	1668, 0, 0, 0, 0, 199, 0, 0, 1671, 1675,
	1683, 1678, 1680, 1686, 559, 515, 0, 0, 133, 142,
	1787, 0, 0, 0, 1798, 0, 185, 0, 0, 0,
	1688, 269, 270, 0, 256, 0, 256, 262, 256, 1643,
	0, 0, 0, 0, 0, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 1691, 1692, 290, 0,
	0, 292, 391, 299, 476, 484, 489, 491, 492, 1415,
	0, 1482, 1474, 1475, 1476, 0, 1386, 1481, 1483, 0,
	0, 1391, 0, 0, 0, 0, 1371, 1353, 0, 1384,
	1356, 0, 625, 0, 400, 1342, 1520, 1568, 1502, 0,
	1571, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 1810, 1814, 0, 1803, 1804, 1837, 1943, 0, 0,
	0, 1824, 1944, 0, 401, 0, 401, 359, 0, 360,
	361, 362, 369, 370, 371, 372, 343, 346, 0, 357,
	872, 874, 0, 0, 880, 1084, 1089, 1404, 0, 0,
	0, 0, 1933, 2263, -2, -2, 2284, 0, 2650, 2652,
	1925, 0, 2431, 1927, 0, 0, -2, 0, 0, 0,
	1908, 1891, 0, 1966, 1958, 1960, 1962, 2996, 2751, 3148,
	1892, 1893, 2053, 0, 0, 2015, 408, 417, 418, 0,
	420, 421, 810, 0, 0, 0, 0, 2083, 0, 0,
	0, 817, 0, 0, 0, 0, 1023, 0, 0, 1663,
	216, 0, 0, 1431, 1432, 1434, 0, 1436, 1438, 1439,
	1356, 0, 1443, 0, 2673, 0, 1448, 1451, 1452, 0,
	0, 1465, 1487, 0, 1496, 0, 1636, 1646, 1640, 0,
	1638, 1498, 0, 220, 249, 222, 251, 246, 0, 1643,
	0, 224, 234, 0, 0, 163, 0, 0, 2744, 202,
	200, 198, 131, 137, 139, 145, 1650, 188, 0, 165,
	0, 271, 280, 1642, 282, 266, 256, 0, 302, 304,
	306, 307, 308, 309, 0, 1672, 1676, 1684, 0, 1699,
	1700, 1701, 1702, 1703, 0, 0, 0, 301, 0, 0,
	0, 483, 1356, 1414, 1355, 1473, 0, 1484, 1356, 0,
	0, 0, 0, 0, 0, 1358, 0, 1357, 0, 0,
	626, 629, 0, 632, 2074, 639, 0, 0, 0, 1575,
	0, 1622, 1620, 0, 1628, 0, 0, 0, 1783, 0,
	0, 1805, 1806, 646, 1830, 0, 0, 1837, 1848, 380,
	0, 383, 356, 0, 345, 0, 876, 0, 878, 0,
	1251, 1253, 0, 0, 2357, 2449, 0, 0, 2382, 2383,
	-2, 0, 2323, 2433, 2435, 0, 0, 0, 0, 0,
	1977, 1986, 419, 1696, 1696, 1696, 2077, 824, 825, 827,
	821, 823, 0, 0, 1659, 0, 1666, 258, 1429, 1433,
	0, 1440, 0, 0, 0, 1444, 1506, 0, 0, 1523,
	1523, 1457, 0, 0, 1490, 1491, 1411, 0, 1492, 1493,
	1494, 1635, 1936, 1641, 1356, 0, 0, 248, 253, 0,
	0, 0, 0, 0, 0, 187, 0, 260, 283, 1643,
	0, 0, 1704, 0, 0, 298, 332, 506, 504, 1358,
	0, 1485, 1392, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1393, 1498, 0, 0, 1462, 1369, 0, 1372,
	0, 1354, 0, 630, 631, 634, 0, 1569, 0, 1576,
	0, 0, 1629, 0, 0, 1793, 1782, 1814, 1807, 1808,
	2074, 0, 1838, 0, 352, 353, 875, 0, 0, 1261,
	1262, 0, 0, 0, 0, 2444, 1928, 2324, 0, 0,
	1961, 1963, 1964, 1965, 811, 812, 813, 0, 0, 1660,
	228, 0, 1500, 1442, 1511, 0, 0, 0, 0, 0,
	1458, 1488, 1489, 1486, 1410, 0, 1639, 1637, 1467, 1500,
	1502, 226, 0, 1498, 0, 1420, 0, 0, 1423, 0,
	0, 203, 2744, 201, 0, 256, 789, 1696, 256, 0,
	335, 0, 539, 505, 507, 0, 0, 511, 512, 513,
	1350, 0, 1478, 1480, 1496, 1498, 1411, 0, 1373, 1415,
	1371, 1570, 1574, 1572, 1612, 1498, 0, 1496, 0, 1800,
	1814, 1794, 1795, 0, 1810, 0, 0, 401, 877, 879,
	2441, 2461, 2450, -2, 3079, 2752, 0, 2461, 2461, 2436,
	2437, 0, 0, 0, 1356, 0, 1445, 1507, 1508, 0,
	1503, 1504, 1505, 2672, 1446, 1447, 1449, 1450, 2074, 0,
	1497, 1506, 252, 1356, 1417, 0, 0, 1418, 0, 0,
	206, 0, 208, 284, 1694, 1697, 0, 310, 0, 0,
	479, 537, 0, 0, 508, 509, 531, 510, 1347, 1349,
	1356, 0, 1411, 1496, 1356, 0, 0, 0, 1356, 1358,
	1496, 0, 1411, 0, 1789, 1799, 0, 1809, 1783, 0,
	1833, 0, 382, 2446, 0, 0, 2452, 2453, 2454, 2455,
	2456, 2447, 2448, 826, 828, 1435, 1441, 0, 1509, 0,
	1510, 0, 0, 0, 1466, 1495, 1511, 232, 1421, 0,
	1424, 0, 204, 0, 0, 330, 331, 536, 532, 1477,
	1479, 1356, 1411, 2074, 1359, 0, 1361, 1358, 1370, 1411,
	0, 1356, 0, 1812, 1788, 1792, 2631, 1793, 1831, 0,
	0, 0, 2458, 2459, 0, 0, 0, 1512, 0, 1515,
	1516, 0, 1513, 1486, 0, 0, 256, 0, 1912, 2074,
	1356, 1649, 1360, 1350, 1356, 1498, 2074, 1496, 1786, 1814,
	1800, 0, 2074, 2457, 2460, 2451, 1499, 1514, 1517, 1518,
	1468, 0, 0, 1698, 333, 0, 0, 538, 533, 534,
	1649, 2074, 1461, 0, 1648, 1348, 2074, 1496, 1649, 1411,
	1779, 1785, 0, 0, 1789, 2074, 1834, 1408, 0, 0,
	535, 1459, 1649, 1647, 1649, 1411, 1625, 1356, 1811, 1786,
	1832, 1422, 1407, 0, 334, 1460, 1623, 1356, 2074, 1780,
	0, 2074, 1649, 0, 1649, 1626, 1408, 1624, 1425,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 649, 3, 655, 650, 3,
	661, 662, 653, 651, 666, 652, 663, 654, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 670, 667,
	641, 643, 642, 646, 665, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 659, 3, 660, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 668, 648, 669, 644,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 645, 57984, 647,
	57985, 657, 57986, 658, 57987, 664, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1706
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1809
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1914
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1929
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2065
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2078
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2091
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2127
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2161
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2215
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2223
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2259
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2270
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2282
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = false
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2323
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2385
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2421
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2429
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2440
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2450
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2460
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2469
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2480
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2486
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2512
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2517
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2608
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2652
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2662
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2671
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2723
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = true
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = false
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3106
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = nil
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3733
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3742
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3748
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3753
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3758
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3790
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3866
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3880
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3952
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3956
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4098
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4119
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4124
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4129
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "CREATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4163
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4187
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = true
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = false
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = true
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = false
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4283
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4318
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "create window function")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4390
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4525
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4526
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = true
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = false
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4576
		{
			return unimplemented(sqllex, "create access method")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplemented(sqllex, "create cast")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplemented(sqllex, "create publication")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplemented(sqllex, "create rule")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplemented(sqllex, "create server")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4595
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4596
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4599
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4600
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplemented(sqllex, "drop server")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4623
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4701
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4748
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4766
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4799
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.str = ""
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4817
		{

			sqlVAL.union.val = nil
		}
	case 646:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "DELETE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4845
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4856
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4881
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "DROP")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5082
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5157
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5181
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5189
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "DELETE")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "INSERT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "DELETE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "INSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5379
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5412
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5504
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "GRANT")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5705
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5718
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			return helpWith(sqllex, "RESET")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "RESET")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "USE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5796
		{
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "USE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5820
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5864
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5918
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5928
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5936
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5974
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5980
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6041
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			return unimplemented(sqllex, "set from current")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6079
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6088
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6105
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.Low
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.Normal
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.High
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = true
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = false
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = true
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = false
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = false
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6437
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = int64(1)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = int64(1)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = int64(1)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6492
		{
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6493
		{
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6501
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6506
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.str = "client_encoding"
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.str = "timezone"
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6592
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6621
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6737
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6746
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6752
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6766
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6777
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6829
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6882
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6962
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = true
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = false
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6998
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7000
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7017
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7044
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7068
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7112
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7117
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7119
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7123
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7138
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7143
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7174
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7184
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = true
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = false
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7207
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7228
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7236
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7246
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7279
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7284
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7289
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7323
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7328
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7333
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7338
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7343
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7376
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7398
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7438
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7446
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7467
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7477
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7490
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7513
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7591
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7601
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7749
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7920
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7934
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8090
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8126
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8141
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8169
		{

			sqlVAL.union.val = nil
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8175
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.str = ""
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8185
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = nil
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8208
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8212
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8248
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8261
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8275
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8332
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.str = ""
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8621
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{

			sqlVAL.union.val = true
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = false
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8783
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8821
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8904
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8906
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8907
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9076
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9085
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9093
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9134
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9165
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.str = ""
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = true
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{

			sqlVAL.union.val = true
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = false
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9290
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9304
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9316
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9328
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9339
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9350
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = false
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = true
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = true
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = nil
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9525
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9527
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9529
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9533
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9568
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9586
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9605
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9622
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9639
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9643
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = false
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = true
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = false
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9703
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9717
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.str = ""
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.str = ""
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = true
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = false
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = false
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9784
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9790
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10015
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10021
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10033
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10039
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10053
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10059
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10118
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = true
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = false
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.str = ""
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10217
		{
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10218
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10221
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10222
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10233
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10329
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10333
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10334
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10335
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10378
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10402
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10409
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10421
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10462
		{
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10464
		{
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.str = ""
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.str = ""
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10595
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{

		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10632
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.str = ""
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.str = ""
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.str = ""
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.str = ""
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10687
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10713
		{
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10958
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10973
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11117
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11152
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11215
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11275
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = true
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = false
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11329
		{
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = nil
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11343
		{
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = true
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = false
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = false
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = true
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11372
		{
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11373
		{
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11376
		{
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11377
		{
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11430
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11435
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11494
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11588
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11589
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11620
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11622
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11637
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11659
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11669
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11706
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11737
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11779
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11789
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11835
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11865
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = nil
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = true
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = false
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.str = tree.AstFull
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.str = tree.AstRight
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.str = tree.AstInner
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12079
		{
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12080
		{
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.str = tree.AstHash
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.str = ""
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12190
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12196
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12206
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = true
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = false
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = true
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = false
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12268
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12276
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12277
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12295
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12297
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12305
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12318
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12325
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12374
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12384
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12385
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = types.Geography
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12434
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12442
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12478
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = nil
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = types.Int2
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = types.Int
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = types.Float4
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = types.Float
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12521
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12529
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12537
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = types.Bool
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12551
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = types.Float
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12570
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12576
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12598
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = types.String
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = true
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = false
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = types.Date
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12647
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12655
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12669
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12678
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12686
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12703
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = true
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = false
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = false
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = types.Interval
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12727
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12811
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12826
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = nil
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12856
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12893
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12916
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13065
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13073
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13195
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13272
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13294
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13402
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13410
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13498
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13506
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13511
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13513
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13525
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13529
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13537
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13546
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13553
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13557
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13561
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13584
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13588
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13592
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13595
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13606
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13607
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13622
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13631
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13684
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13697
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13719
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13776
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13780
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13796
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13800
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13808
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13812
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13827
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13854
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13863
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13868
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13873
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13878
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13883
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13888
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13897
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13898
		{
			return unimplemented(sqllex, "treat")
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13919
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13930
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13934
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13961
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13971
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13979
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13983
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13987
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14014
		{
			sqlVAL.str = ""
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14024
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14030
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14038
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14060
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14073
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14101
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14105
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14109
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14113
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14120
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14129
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14133
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14137
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14141
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14146
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14159
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14163
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14170
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14190
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14206
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14207
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14208
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14209
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14210
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14211
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14212
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14214
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14215
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14216
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14219
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14221
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14222
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14223
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14224
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14225
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14226
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14227
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14228
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14229
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14230
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14231
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14232
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14233
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14234
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14235
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14237
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14238
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14239
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14241
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14246
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14262
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14271
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14272
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14299
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14328
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14334
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14338
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14345
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14351
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14361
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14371
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14391
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14395
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14418
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14426
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14439
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14443
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14460
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14464
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14468
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14472
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14476
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14482
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14488
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14494
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14498
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14502
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14508
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14520
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14527
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14543
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14547
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14554
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14560
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14564
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14571
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14577
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14586
		{
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14587
		{
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14591
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14601
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14610
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14614
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14618
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14630
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14640
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14663
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14671
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14694
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14703
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14707
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14711
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14715
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14721
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14740
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14744
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14756
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14760
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14769
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14780
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14789
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14797
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14814
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14899
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14907
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14911
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14917
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14927
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14933
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14940
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14967
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14974
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14978
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14982
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14996
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15000
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15004
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15017
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15026
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15044
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15057
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15064
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15089
		{
			sqlVAL.str = ""
		}
	case 2672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15095
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15099
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
