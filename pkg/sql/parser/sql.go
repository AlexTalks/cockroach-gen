// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:973
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15629

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1892,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	283, 575,
	-2, 0,
	-1, 75,
	8, 1040,
	29, 1040,
	648, 1040,
	649, 1040,
	-2, 0,
	-1, 76,
	8, 1040,
	29, 1040,
	648, 1040,
	649, 1040,
	-2, 0,
	-1, 78,
	1, 1739,
	139, 1739,
	270, 1739,
	358, 1739,
	421, 1739,
	431, 1739,
	629, 1739,
	661, 1739,
	-2, 0,
	-1, 79,
	1, 1739,
	661, 1739,
	-2, 0,
	-1, 85,
	263, 291,
	565, 291,
	-2, 0,
	-1, 99,
	204, 476,
	249, 1613,
	265, 1613,
	283, 476,
	423, 476,
	435, 1356,
	479, 476,
	496, 1356,
	549, 1356,
	578, 476,
	605, 1356,
	-2, 0,
	-1, 106,
	141, 1892,
	258, 1892,
	589, 1892,
	590, 1892,
	-2, 0,
	-1, 124,
	161, 1863,
	182, 1863,
	195, 1863,
	261, 1863,
	297, 1863,
	371, 1863,
	382, 1863,
	584, 1863,
	-2, 1834,
	-1, 166,
	169, 1174,
	281, 1174,
	426, 1135,
	501, 1135,
	548, 1135,
	568, 1174,
	570, 1135,
	-2, 0,
	-1, 171,
	4, 1894,
	21, 1894,
	22, 1894,
	23, 1894,
	24, 1894,
	25, 1894,
	26, 1894,
	27, 1894,
	28, 1894,
	30, 1894,
	31, 1894,
	37, 1894,
	41, 1894,
	43, 1894,
	44, 1894,
	45, 1894,
	47, 1894,
	48, 1894,
	49, 1894,
	50, 1894,
	51, 1894,
	52, 1894,
	53, 1894,
	54, 1894,
	55, 1894,
	57, 1894,
	58, 1894,
	59, 1894,
	60, 1894,
	62, 1894,
	63, 1894,
	64, 1894,
	65, 1894,
	66, 1894,
	67, 1894,
	68, 1894,
	69, 1894,
	73, 1894,
	74, 1894,
	75, 1894,
	76, 1894,
	78, 1894,
	79, 1894,
	80, 1894,
	84, 1894,
	85, 1894,
	86, 1894,
	87, 1894,
	88, 1894,
	89, 1894,
	90, 1894,
	91, 1894,
	94, 1894,
	95, 1894,
	96, 1894,
	97, 1894,
	98, 1894,
	100, 1894,
	102, 1894,
	103, 1894,
	104, 1894,
	105, 1894,
	106, 1894,
	107, 1894,
	108, 1894,
	110, 1894,
	111, 1894,
	112, 1894,
	114, 1894,
	115, 1894,
	116, 1894,
	124, 1894,
	125, 1894,
	126, 1894,
	127, 1894,
	128, 1894,
	130, 1894,
	131, 1894,
	132, 1894,
	133, 1894,
	135, 1894,
	136, 1894,
	137, 1894,
	138, 1894,
	140, 1894,
	141, 1894,
	142, 1894,
	143, 1894,
	145, 1894,
	146, 1894,
	147, 1894,
	150, 1894,
	151, 1894,
	152, 1894,
	154, 1894,
	155, 1894,
	156, 1894,
	158, 1894,
	159, 1894,
	160, 1894,
	162, 1894,
	163, 1894,
	164, 1894,
	165, 1894,
	166, 1894,
	167, 1894,
	168, 1894,
	169, 1894,
	170, 1894,
	171, 1894,
	172, 1894,
	173, 1894,
	174, 1894,
	175, 1894,
	176, 1894,
	177, 1894,
	178, 1894,
	179, 1894,
	181, 1894,
	187, 1894,
	188, 1894,
	189, 1894,
	190, 1894,
	194, 1894,
	196, 1894,
	197, 1894,
	198, 1894,
	200, 1894,
	201, 1894,
	204, 1894,
	205, 1894,
	206, 1894,
	207, 1894,
	208, 1894,
	209, 1894,
	210, 1894,
	211, 1894,
	212, 1894,
	213, 1894,
	214, 1894,
	215, 1894,
	216, 1894,
	217, 1894,
	219, 1894,
	220, 1894,
	222, 1894,
	223, 1894,
	225, 1894,
	226, 1894,
	227, 1894,
	228, 1894,
	229, 1894,
	230, 1894,
	231, 1894,
	232, 1894,
	233, 1894,
	234, 1894,
	235, 1894,
	237, 1894,
	238, 1894,
	239, 1894,
	241, 1894,
	242, 1894,
	243, 1894,
	244, 1894,
	245, 1894,
	249, 1894,
	250, 1894,
	251, 1894,
	252, 1894,
	255, 1894,
	256, 1894,
	257, 1894,
	258, 1894,
	259, 1894,
	260, 1894,
	262, 1894,
	264, 1894,
	265, 1894,
	266, 1894,
	268, 1894,
	270, 1894,
	271, 1894,
	272, 1894,
	274, 1894,
	278, 1894,
	279, 1894,
	280, 1894,
	281, 1894,
	282, 1894,
	283, 1894,
	284, 1894,
	286, 1894,
	287, 1894,
	288, 1894,
	290, 1894,
	291, 1894,
	292, 1894,
	294, 1894,
	295, 1894,
	298, 1894,
	299, 1894,
	300, 1894,
	301, 1894,
	302, 1894,
	303, 1894,
	304, 1894,
	307, 1894,
	308, 1894,
	309, 1894,
	310, 1894,
	312, 1894,
	313, 1894,
	314, 1894,
	315, 1894,
	316, 1894,
	317, 1894,
	318, 1894,
	319, 1894,
	320, 1894,
	321, 1894,
	322, 1894,
	323, 1894,
	324, 1894,
	325, 1894,
	326, 1894,
	327, 1894,
	328, 1894,
	329, 1894,
	330, 1894,
	331, 1894,
	332, 1894,
	333, 1894,
	334, 1894,
	336, 1894,
	338, 1894,
	339, 1894,
	340, 1894,
	341, 1894,
	342, 1894,
	343, 1894,
	344, 1894,
	345, 1894,
	346, 1894,
	347, 1894,
	348, 1894,
	349, 1894,
	350, 1894,
	351, 1894,
	352, 1894,
	353, 1894,
	354, 1894,
	356, 1894,
	357, 1894,
	359, 1894,
	361, 1894,
	362, 1894,
	363, 1894,
	364, 1894,
	366, 1894,
	367, 1894,
	368, 1894,
	369, 1894,
	370, 1894,
	373, 1894,
	375, 1894,
	377, 1894,
	378, 1894,
	379, 1894,
	380, 1894,
	383, 1894,
	384, 1894,
	385, 1894,
	387, 1894,
	389, 1894,
	390, 1894,
	391, 1894,
	392, 1894,
	393, 1894,
	394, 1894,
	395, 1894,
	396, 1894,
	397, 1894,
	398, 1894,
	399, 1894,
	400, 1894,
	401, 1894,
	402, 1894,
	404, 1894,
	405, 1894,
	406, 1894,
	407, 1894,
	408, 1894,
	409, 1894,
	410, 1894,
	411, 1894,
	412, 1894,
	413, 1894,
	414, 1894,
	415, 1894,
	416, 1894,
	417, 1894,
	418, 1894,
	420, 1894,
	421, 1894,
	422, 1894,
	424, 1894,
	425, 1894,
	426, 1894,
	427, 1894,
	428, 1894,
	429, 1894,
	430, 1894,
	431, 1894,
	432, 1894,
	433, 1894,
	434, 1894,
	435, 1894,
	436, 1894,
	437, 1894,
	439, 1894,
	441, 1894,
	442, 1894,
	443, 1894,
	449, 1894,
	450, 1894,
	451, 1894,
	453, 1894,
	454, 1894,
	455, 1894,
	456, 1894,
	457, 1894,
	458, 1894,
	459, 1894,
	460, 1894,
	461, 1894,
	462, 1894,
	463, 1894,
	465, 1894,
	466, 1894,
	467, 1894,
	468, 1894,
	469, 1894,
	471, 1894,
	472, 1894,
	473, 1894,
	474, 1894,
	475, 1894,
	476, 1894,
	477, 1894,
	479, 1894,
	480, 1894,
	481, 1894,
	482, 1894,
	483, 1894,
	484, 1894,
	485, 1894,
	486, 1894,
	487, 1894,
	488, 1894,
	489, 1894,
	490, 1894,
	491, 1894,
	492, 1894,
	493, 1894,
	494, 1894,
	496, 1894,
	497, 1894,
	498, 1894,
	499, 1894,
	500, 1894,
	501, 1894,
	503, 1894,
	504, 1894,
	505, 1894,
	506, 1894,
	507, 1894,
	508, 1894,
	509, 1894,
	511, 1894,
	512, 1894,
	513, 1894,
	514, 1894,
	515, 1894,
	516, 1894,
	517, 1894,
	518, 1894,
	520, 1894,
	522, 1894,
	523, 1894,
	524, 1894,
	525, 1894,
	526, 1894,
	527, 1894,
	528, 1894,
	529, 1894,
	530, 1894,
	531, 1894,
	532, 1894,
	533, 1894,
	534, 1894,
	535, 1894,
	536, 1894,
	537, 1894,
	538, 1894,
	539, 1894,
	540, 1894,
	541, 1894,
	542, 1894,
	544, 1894,
	545, 1894,
	547, 1894,
	548, 1894,
	550, 1894,
	551, 1894,
	552, 1894,
	553, 1894,
	554, 1894,
	555, 1894,
	557, 1894,
	558, 1894,
	560, 1894,
	561, 1894,
	562, 1894,
	563, 1894,
	564, 1894,
	566, 1894,
	568, 1894,
	569, 1894,
	570, 1894,
	571, 1894,
	572, 1894,
	573, 1894,
	574, 1894,
	575, 1894,
	577, 1894,
	578, 1894,
	579, 1894,
	580, 1894,
	581, 1894,
	582, 1894,
	583, 1894,
	586, 1894,
	587, 1894,
	588, 1894,
	589, 1894,
	590, 1894,
	591, 1894,
	592, 1894,
	593, 1894,
	595, 1894,
	598, 1894,
	599, 1894,
	600, 1894,
	601, 1894,
	602, 1894,
	603, 1894,
	605, 1894,
	606, 1894,
	607, 1894,
	608, 1894,
	609, 1894,
	610, 1894,
	611, 1894,
	612, 1894,
	613, 1894,
	614, 1894,
	615, 1894,
	620, 1894,
	621, 1894,
	622, 1894,
	623, 1894,
	624, 1894,
	625, 1894,
	-2, 0,
	-1, 173,
	1, 1739,
	661, 1739,
	664, 1739,
	-2, 0,
	-1, 174,
	1, 1739,
	565, 1739,
	661, 1739,
	664, 1739,
	-2, 0,
	-1, 210,
	161, 1862,
	182, 1862,
	195, 1862,
	261, 1862,
	297, 1862,
	371, 1862,
	382, 1862,
	584, 1862,
	-2, 1837,
	-1, 271,
	4, 1901,
	5, 1901,
	6, 1901,
	7, 1901,
	8, 1901,
	9, 1901,
	10, 1901,
	21, 1901,
	22, 1901,
	23, 1901,
	24, 1901,
	25, 1901,
	26, 1901,
	27, 1901,
	28, 1901,
	30, 1901,
	31, 1901,
	37, 1901,
	38, 1901,
	41, 1901,
	43, 1901,
	44, 1901,
	45, 1901,
	46, 1901,
	47, 1901,
	48, 1901,
	49, 1901,
	50, 1901,
	51, 1901,
	52, 1901,
	53, 1901,
	54, 1901,
	55, 1901,
	57, 1901,
	58, 1901,
	59, 1901,
	60, 1901,
	62, 1901,
	63, 1901,
	64, 1901,
	65, 1901,
	66, 1901,
	67, 1901,
	68, 1901,
	69, 1901,
	70, 1901,
	71, 1901,
	72, 1901,
	73, 1901,
	74, 1901,
	75, 1901,
	76, 1901,
	78, 1901,
	79, 1901,
	80, 1901,
	82, 1901,
	84, 1901,
	85, 1901,
	86, 1901,
	87, 1901,
	88, 1901,
	89, 1901,
	90, 1901,
	91, 1901,
	94, 1901,
	95, 1901,
	96, 1901,
	97, 1901,
	98, 1901,
	100, 1901,
	102, 1901,
	103, 1901,
	104, 1901,
	105, 1901,
	106, 1901,
	107, 1901,
	108, 1901,
	110, 1901,
	111, 1901,
	112, 1901,
	113, 1901,
	114, 1901,
	115, 1901,
	116, 1901,
	117, 1901,
	118, 1901,
	119, 1901,
	120, 1901,
	121, 1901,
	122, 1901,
	123, 1901,
	124, 1901,
	125, 1901,
	126, 1901,
	127, 1901,
	128, 1901,
	129, 1901,
	130, 1901,
	131, 1901,
	132, 1901,
	133, 1901,
	134, 1901,
	135, 1901,
	136, 1901,
	137, 1901,
	138, 1901,
	140, 1901,
	141, 1901,
	142, 1901,
	143, 1901,
	145, 1901,
	146, 1901,
	147, 1901,
	150, 1901,
	151, 1901,
	152, 1901,
	154, 1901,
	155, 1901,
	156, 1901,
	158, 1901,
	159, 1901,
	160, 1901,
	162, 1901,
	163, 1901,
	164, 1901,
	165, 1901,
	166, 1901,
	167, 1901,
	168, 1901,
	169, 1901,
	170, 1901,
	171, 1901,
	172, 1901,
	173, 1901,
	174, 1901,
	175, 1901,
	176, 1901,
	177, 1901,
	178, 1901,
	179, 1901,
	180, 1901,
	181, 1901,
	187, 1901,
	188, 1901,
	189, 1901,
	190, 1901,
	194, 1901,
	196, 1901,
	197, 1901,
	198, 1901,
	200, 1901,
	201, 1901,
	203, 1901,
	204, 1901,
	205, 1901,
	206, 1901,
	207, 1901,
	208, 1901,
	209, 1901,
	210, 1901,
	211, 1901,
	212, 1901,
	213, 1901,
	214, 1901,
	215, 1901,
	216, 1901,
	217, 1901,
	219, 1901,
	220, 1901,
	222, 1901,
	223, 1901,
	225, 1901,
	226, 1901,
	227, 1901,
	228, 1901,
	229, 1901,
	230, 1901,
	231, 1901,
	232, 1901,
	233, 1901,
	234, 1901,
	235, 1901,
	236, 1901,
	237, 1901,
	238, 1901,
	239, 1901,
	241, 1901,
	242, 1901,
	243, 1901,
	244, 1901,
	245, 1901,
	249, 1901,
	250, 1901,
	251, 1901,
	252, 1901,
	254, 1901,
	255, 1901,
	256, 1901,
	257, 1901,
	258, 1901,
	259, 1901,
	260, 1901,
	262, 1901,
	264, 1901,
	265, 1901,
	266, 1901,
	267, 1901,
	268, 1901,
	269, 1901,
	270, 1901,
	271, 1901,
	272, 1901,
	273, 1901,
	274, 1901,
	278, 1901,
	279, 1901,
	280, 1901,
	281, 1901,
	282, 1901,
	283, 1901,
	284, 1901,
	286, 1901,
	287, 1901,
	288, 1901,
	290, 1901,
	291, 1901,
	292, 1901,
	293, 1901,
	294, 1901,
	295, 1901,
	296, 1901,
	298, 1901,
	299, 1901,
	300, 1901,
	301, 1901,
	302, 1901,
	303, 1901,
	304, 1901,
	305, 1901,
	306, 1901,
	307, 1901,
	308, 1901,
	309, 1901,
	310, 1901,
	312, 1901,
	313, 1901,
	314, 1901,
	315, 1901,
	316, 1901,
	317, 1901,
	318, 1901,
	319, 1901,
	320, 1901,
	321, 1901,
	322, 1901,
	323, 1901,
	324, 1901,
	325, 1901,
	326, 1901,
	327, 1901,
	328, 1901,
	329, 1901,
	330, 1901,
	331, 1901,
	332, 1901,
	333, 1901,
	334, 1901,
	336, 1901,
	337, 1901,
	338, 1901,
	339, 1901,
	340, 1901,
	341, 1901,
	342, 1901,
	343, 1901,
	344, 1901,
	345, 1901,
	346, 1901,
	347, 1901,
	348, 1901,
	349, 1901,
	350, 1901,
	351, 1901,
	352, 1901,
	353, 1901,
	354, 1901,
	355, 1901,
	356, 1901,
	357, 1901,
	358, 1901,
	359, 1901,
	360, 1901,
	361, 1901,
	362, 1901,
	363, 1901,
	364, 1901,
	365, 1901,
	366, 1901,
	367, 1901,
	368, 1901,
	369, 1901,
	370, 1901,
	373, 1901,
	375, 1901,
	378, 1901,
	379, 1901,
	380, 1901,
	383, 1901,
	384, 1901,
	385, 1901,
	386, 1901,
	387, 1901,
	388, 1901,
	389, 1901,
	390, 1901,
	391, 1901,
	392, 1901,
	393, 1901,
	394, 1901,
	395, 1901,
	396, 1901,
	397, 1901,
	398, 1901,
	399, 1901,
	400, 1901,
	401, 1901,
	402, 1901,
	404, 1901,
	405, 1901,
	406, 1901,
	407, 1901,
	408, 1901,
	409, 1901,
	410, 1901,
	411, 1901,
	412, 1901,
	413, 1901,
	414, 1901,
	415, 1901,
	416, 1901,
	417, 1901,
	418, 1901,
	420, 1901,
	421, 1901,
	422, 1901,
	424, 1901,
	425, 1901,
	426, 1901,
	427, 1901,
	428, 1901,
	429, 1901,
	430, 1901,
	431, 1901,
	432, 1901,
	433, 1901,
	434, 1901,
	435, 1901,
	436, 1901,
	437, 1901,
	439, 1901,
	441, 1901,
	442, 1901,
	443, 1901,
	449, 1901,
	450, 1901,
	451, 1901,
	453, 1901,
	454, 1901,
	455, 1901,
	456, 1901,
	457, 1901,
	458, 1901,
	459, 1901,
	460, 1901,
	461, 1901,
	462, 1901,
	463, 1901,
	465, 1901,
	466, 1901,
	467, 1901,
	468, 1901,
	469, 1901,
	470, 1901,
	471, 1901,
	472, 1901,
	473, 1901,
	474, 1901,
	475, 1901,
	476, 1901,
	477, 1901,
	479, 1901,
	480, 1901,
	481, 1901,
	482, 1901,
	483, 1901,
	484, 1901,
	485, 1901,
	486, 1901,
	487, 1901,
	488, 1901,
	489, 1901,
	490, 1901,
	491, 1901,
	492, 1901,
	493, 1901,
	494, 1901,
	496, 1901,
	497, 1901,
	498, 1901,
	499, 1901,
	500, 1901,
	501, 1901,
	502, 1901,
	503, 1901,
	504, 1901,
	505, 1901,
	506, 1901,
	507, 1901,
	508, 1901,
	509, 1901,
	510, 1901,
	511, 1901,
	512, 1901,
	513, 1901,
	514, 1901,
	515, 1901,
	516, 1901,
	517, 1901,
	518, 1901,
	520, 1901,
	522, 1901,
	523, 1901,
	524, 1901,
	525, 1901,
	526, 1901,
	527, 1901,
	528, 1901,
	529, 1901,
	530, 1901,
	531, 1901,
	532, 1901,
	533, 1901,
	534, 1901,
	535, 1901,
	536, 1901,
	537, 1901,
	538, 1901,
	539, 1901,
	540, 1901,
	541, 1901,
	542, 1901,
	544, 1901,
	545, 1901,
	546, 1901,
	547, 1901,
	548, 1901,
	550, 1901,
	551, 1901,
	552, 1901,
	553, 1901,
	554, 1901,
	555, 1901,
	557, 1901,
	558, 1901,
	560, 1901,
	561, 1901,
	562, 1901,
	563, 1901,
	564, 1901,
	566, 1901,
	568, 1901,
	569, 1901,
	570, 1901,
	571, 1901,
	572, 1901,
	573, 1901,
	574, 1901,
	575, 1901,
	576, 1901,
	577, 1901,
	578, 1901,
	579, 1901,
	580, 1901,
	581, 1901,
	582, 1901,
	583, 1901,
	585, 1901,
	586, 1901,
	587, 1901,
	588, 1901,
	589, 1901,
	590, 1901,
	591, 1901,
	592, 1901,
	593, 1901,
	594, 1901,
	595, 1901,
	598, 1901,
	599, 1901,
	600, 1901,
	601, 1901,
	602, 1901,
	603, 1901,
	605, 1901,
	606, 1901,
	607, 1901,
	608, 1901,
	609, 1901,
	610, 1901,
	611, 1901,
	612, 1901,
	613, 1901,
	614, 1901,
	615, 1901,
	620, 1901,
	621, 1901,
	622, 1901,
	623, 1901,
	624, 1901,
	625, 1901,
	626, 1901,
	641, 1901,
	648, 1901,
	649, 1901,
	650, 1901,
	658, 1901,
	662, 1901,
	-2, 0,
	-1, 848,
	4, 1611,
	21, 1611,
	22, 1611,
	23, 1611,
	24, 1611,
	25, 1611,
	26, 1611,
	27, 1611,
	28, 1611,
	30, 1611,
	31, 1611,
	37, 1611,
	41, 1611,
	43, 1611,
	44, 1611,
	45, 1611,
	47, 1611,
	48, 1611,
	49, 1611,
	50, 1611,
	51, 1611,
	52, 1611,
	53, 1611,
	54, 1611,
	55, 1611,
	57, 1611,
	58, 1611,
	59, 1611,
	60, 1611,
	62, 1611,
	63, 1611,
	64, 1611,
	65, 1611,
	66, 1611,
	67, 1611,
	68, 1611,
	69, 1611,
	73, 1611,
	74, 1611,
	75, 1611,
	76, 1611,
	78, 1611,
	79, 1611,
	80, 1611,
	84, 1611,
	85, 1611,
	86, 1611,
	87, 1611,
	88, 1611,
	89, 1611,
	90, 1611,
	91, 1611,
	94, 1611,
	95, 1611,
	96, 1611,
	97, 1611,
	98, 1611,
	100, 1611,
	102, 1611,
	103, 1611,
	104, 1611,
	105, 1611,
	106, 1611,
	107, 1611,
	108, 1611,
	110, 1611,
	111, 1611,
	112, 1611,
	114, 1611,
	115, 1611,
	116, 1611,
	124, 1611,
	125, 1611,
	126, 1611,
	127, 1611,
	128, 1611,
	130, 1611,
	131, 1611,
	132, 1611,
	133, 1611,
	135, 1611,
	136, 1611,
	137, 1611,
	138, 1611,
	140, 1611,
	141, 1611,
	142, 1611,
	143, 1611,
	145, 1611,
	146, 1611,
	147, 1611,
	150, 1611,
	151, 1611,
	152, 1611,
	154, 1611,
	155, 1611,
	156, 1611,
	158, 1611,
	159, 1611,
	160, 1611,
	162, 1611,
	163, 1611,
	164, 1611,
	165, 1611,
	166, 1611,
	167, 1611,
	168, 1611,
	169, 1611,
	170, 1611,
	171, 1611,
	172, 1611,
	173, 1611,
	174, 1611,
	175, 1611,
	176, 1611,
	177, 1611,
	178, 1611,
	179, 1611,
	181, 1611,
	187, 1611,
	188, 1611,
	189, 1611,
	190, 1611,
	194, 1611,
	196, 1611,
	197, 1611,
	198, 1611,
	200, 1611,
	201, 1611,
	204, 1611,
	205, 1611,
	206, 1611,
	207, 1611,
	208, 1611,
	209, 1611,
	210, 1611,
	211, 1611,
	212, 1611,
	213, 1611,
	214, 1611,
	215, 1611,
	216, 1611,
	217, 1611,
	219, 1611,
	220, 1611,
	222, 1611,
	223, 1611,
	225, 1611,
	226, 1611,
	227, 1611,
	228, 1611,
	229, 1611,
	230, 1611,
	231, 1611,
	232, 1611,
	233, 1611,
	234, 1611,
	235, 1611,
	237, 1611,
	238, 1611,
	239, 1611,
	241, 1611,
	242, 1611,
	243, 1611,
	244, 1611,
	245, 1611,
	249, 1611,
	250, 1611,
	251, 1611,
	252, 1611,
	255, 1611,
	256, 1611,
	257, 1611,
	258, 1611,
	259, 1611,
	260, 1611,
	262, 1611,
	264, 1611,
	265, 1611,
	266, 1611,
	268, 1611,
	270, 1611,
	271, 1611,
	272, 1611,
	274, 1611,
	278, 1611,
	279, 1611,
	280, 1611,
	281, 1611,
	282, 1611,
	283, 1611,
	284, 1611,
	286, 1611,
	287, 1611,
	288, 1611,
	290, 1611,
	291, 1611,
	292, 1611,
	294, 1611,
	295, 1611,
	298, 1611,
	299, 1611,
	300, 1611,
	301, 1611,
	302, 1611,
	303, 1611,
	304, 1611,
	307, 1611,
	308, 1611,
	309, 1611,
	310, 1611,
	312, 1611,
	313, 1611,
	314, 1611,
	315, 1611,
	316, 1611,
	317, 1611,
	318, 1611,
	319, 1611,
	320, 1611,
	321, 1611,
	322, 1611,
	323, 1611,
	324, 1611,
	325, 1611,
	326, 1611,
	327, 1611,
	328, 1611,
	329, 1611,
	330, 1611,
	331, 1611,
	332, 1611,
	333, 1611,
	334, 1611,
	336, 1611,
	338, 1611,
	339, 1611,
	340, 1611,
	341, 1611,
	342, 1611,
	343, 1611,
	344, 1611,
	345, 1611,
	346, 1611,
	347, 1611,
	348, 1611,
	349, 1611,
	350, 1611,
	351, 1611,
	352, 1611,
	353, 1611,
	354, 1611,
	356, 1611,
	357, 1611,
	359, 1611,
	361, 1611,
	362, 1611,
	363, 1611,
	364, 1611,
	366, 1611,
	367, 1611,
	368, 1611,
	369, 1611,
	370, 1611,
	373, 1611,
	375, 1611,
	378, 1611,
	379, 1611,
	380, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	387, 1611,
	389, 1611,
	390, 1611,
	391, 1611,
	392, 1611,
	393, 1611,
	394, 1611,
	395, 1611,
	396, 1611,
	397, 1611,
	398, 1611,
	399, 1611,
	400, 1611,
	401, 1611,
	402, 1611,
	404, 1611,
	405, 1611,
	406, 1611,
	407, 1611,
	408, 1611,
	409, 1611,
	410, 1611,
	411, 1611,
	412, 1611,
	413, 1611,
	414, 1611,
	415, 1611,
	416, 1611,
	417, 1611,
	418, 1611,
	420, 1611,
	421, 1611,
	422, 1611,
	424, 1611,
	425, 1611,
	426, 1611,
	427, 1611,
	428, 1611,
	429, 1611,
	430, 1611,
	431, 1611,
	432, 1611,
	433, 1611,
	434, 1611,
	435, 1611,
	436, 1611,
	437, 1611,
	439, 1611,
	441, 1611,
	442, 1611,
	443, 1611,
	449, 1611,
	450, 1611,
	451, 1611,
	453, 1611,
	454, 1611,
	455, 1611,
	456, 1611,
	457, 1611,
	458, 1611,
	459, 1611,
	460, 1611,
	461, 1611,
	462, 1611,
	463, 1611,
	465, 1611,
	466, 1611,
	467, 1611,
	468, 1611,
	469, 1611,
	471, 1611,
	472, 1611,
	473, 1611,
	474, 1611,
	475, 1611,
	476, 1611,
	477, 1611,
	479, 1611,
	480, 1611,
	481, 1611,
	482, 1611,
	483, 1611,
	484, 1611,
	485, 1611,
	486, 1611,
	487, 1611,
	488, 1611,
	489, 1611,
	490, 1611,
	491, 1611,
	492, 1611,
	493, 1611,
	494, 1611,
	496, 1611,
	497, 1611,
	498, 1611,
	499, 1611,
	500, 1611,
	501, 1611,
	503, 1611,
	504, 1611,
	505, 1611,
	506, 1611,
	507, 1611,
	508, 1611,
	509, 1611,
	511, 1611,
	512, 1611,
	513, 1611,
	514, 1611,
	515, 1611,
	516, 1611,
	517, 1611,
	518, 1611,
	520, 1611,
	522, 1611,
	523, 1611,
	524, 1611,
	525, 1611,
	526, 1611,
	527, 1611,
	528, 1611,
	529, 1611,
	530, 1611,
	531, 1611,
	532, 1611,
	533, 1611,
	534, 1611,
	535, 1611,
	536, 1611,
	537, 1611,
	538, 1611,
	539, 1611,
	540, 1611,
	541, 1611,
	542, 1611,
	544, 1611,
	545, 1611,
	547, 1611,
	548, 1611,
	550, 1611,
	551, 1611,
	552, 1611,
	553, 1611,
	554, 1611,
	555, 1611,
	557, 1611,
	558, 1611,
	560, 1611,
	561, 1611,
	562, 1611,
	563, 1611,
	564, 1611,
	566, 1611,
	568, 1611,
	569, 1611,
	570, 1611,
	571, 1611,
	572, 1611,
	573, 1611,
	574, 1611,
	575, 1611,
	577, 1611,
	578, 1611,
	579, 1611,
	580, 1611,
	581, 1611,
	582, 1611,
	583, 1611,
	586, 1611,
	587, 1611,
	588, 1611,
	589, 1611,
	590, 1611,
	591, 1611,
	592, 1611,
	593, 1611,
	595, 1611,
	598, 1611,
	599, 1611,
	600, 1611,
	601, 1611,
	602, 1611,
	603, 1611,
	605, 1611,
	606, 1611,
	607, 1611,
	608, 1611,
	609, 1611,
	610, 1611,
	611, 1611,
	612, 1611,
	613, 1611,
	614, 1611,
	615, 1611,
	620, 1611,
	621, 1611,
	622, 1611,
	623, 1611,
	624, 1611,
	625, 1611,
	-2, 0,
	-1, 867,
	202, 2704,
	565, 2704,
	640, 2704,
	660, 2704,
	-2, 0,
	-1, 868,
	202, 2690,
	565, 2690,
	640, 2690,
	660, 2690,
	-2, 0,
	-1, 870,
	202, 2987,
	565, 2987,
	640, 2987,
	660, 2987,
	-2, 0,
	-1, 873,
	202, 2829,
	565, 2829,
	640, 2829,
	660, 2829,
	-2, 0,
	-1, 874,
	202, 3034,
	565, 3034,
	640, 3034,
	660, 3034,
	-2, 0,
	-1, 882,
	202, 2857,
	565, 2857,
	640, 2857,
	660, 2857,
	-2, 906,
	-1, 898,
	8, 1039,
	29, 1039,
	648, 1039,
	649, 1039,
	-2, 1044,
	-1, 902,
	1, 2762,
	661, 2762,
	664, 2762,
	-2, 1044,
	-1, 903,
	1, 2816,
	661, 2816,
	664, 2816,
	-2, 1044,
	-1, 906,
	1, 2862,
	661, 2862,
	664, 2862,
	-2, 1037,
	-1, 907,
	1, 2919,
	661, 2919,
	664, 2919,
	-2, 1038,
	-1, 908,
	1, 2767,
	661, 2767,
	664, 2767,
	-2, 1041,
	-1, 909,
	1, 2676,
	661, 2676,
	664, 2676,
	-2, 1042,
	-1, 949,
	660, 2633,
	663, 2633,
	-2, 1272,
	-1, 950,
	660, 2635,
	663, 2635,
	-2, 1273,
	-1, 951,
	660, 2634,
	663, 2634,
	-2, 1274,
	-1, 952,
	663, 2557,
	-2, 1275,
	-1, 978,
	195, 325,
	-2, 0,
	-1, 1000,
	46, 2606,
	-2, 0,
	-1, 1001,
	605, 1589,
	-2, 1357,
	-1, 1018,
	4, 2035,
	21, 2035,
	22, 2035,
	23, 2035,
	24, 2035,
	25, 2035,
	26, 2035,
	27, 2035,
	28, 2035,
	30, 2035,
	31, 2035,
	37, 2035,
	41, 2035,
	43, 2035,
	44, 2035,
	45, 2035,
	47, 2035,
	48, 2035,
	49, 2035,
	50, 2035,
	51, 2035,
	52, 2035,
	53, 2035,
	54, 2035,
	55, 2035,
	57, 2035,
	58, 2035,
	59, 2035,
	60, 2035,
	62, 2035,
	63, 2035,
	64, 2035,
	65, 2035,
	66, 2035,
	67, 2035,
	68, 2035,
	69, 2035,
	73, 2035,
	74, 2035,
	75, 2035,
	76, 2035,
	78, 2035,
	79, 2035,
	80, 2035,
	84, 2035,
	85, 2035,
	86, 2035,
	87, 2035,
	88, 2035,
	89, 2035,
	90, 2035,
	91, 2035,
	94, 2035,
	95, 2035,
	96, 2035,
	97, 2035,
	98, 2035,
	100, 2035,
	102, 2035,
	103, 2035,
	104, 2035,
	105, 2035,
	106, 2035,
	107, 2035,
	108, 2035,
	110, 2035,
	111, 2035,
	112, 2035,
	114, 2035,
	115, 2035,
	116, 2035,
	124, 2035,
	125, 2035,
	126, 2035,
	127, 2035,
	128, 2035,
	130, 2035,
	131, 2035,
	132, 2035,
	133, 2035,
	135, 2035,
	136, 2035,
	137, 2035,
	138, 2035,
	140, 2035,
	141, 2035,
	142, 2035,
	143, 2035,
	145, 2035,
	146, 2035,
	147, 2035,
	150, 2035,
	151, 2035,
	152, 2035,
	154, 2035,
	155, 2035,
	156, 2035,
	158, 2035,
	159, 2035,
	160, 2035,
	162, 2035,
	163, 2035,
	164, 2035,
	165, 2035,
	166, 2035,
	167, 2035,
	168, 2035,
	169, 2035,
	170, 2035,
	171, 2035,
	172, 2035,
	173, 2035,
	174, 2035,
	175, 2035,
	176, 2035,
	177, 2035,
	178, 2035,
	179, 2035,
	181, 2035,
	187, 2035,
	188, 2035,
	189, 2035,
	190, 2035,
	194, 2035,
	196, 2035,
	197, 2035,
	198, 2035,
	200, 2035,
	201, 2035,
	204, 2035,
	205, 2035,
	206, 2035,
	207, 2035,
	208, 2035,
	209, 2035,
	210, 2035,
	211, 2035,
	212, 2035,
	213, 2035,
	214, 2035,
	215, 2035,
	216, 2035,
	217, 2035,
	219, 2035,
	220, 2035,
	222, 2035,
	223, 2035,
	225, 2035,
	226, 2035,
	227, 2035,
	228, 2035,
	229, 2035,
	230, 2035,
	231, 2035,
	232, 2035,
	233, 2035,
	234, 2035,
	235, 2035,
	237, 2035,
	238, 2035,
	239, 2035,
	241, 2035,
	242, 2035,
	243, 2035,
	244, 2035,
	245, 2035,
	249, 2035,
	250, 2035,
	251, 2035,
	252, 2035,
	255, 2035,
	256, 2035,
	257, 2035,
	258, 2035,
	259, 2035,
	260, 2035,
	262, 2035,
	264, 2035,
	265, 2035,
	266, 2035,
	268, 2035,
	270, 2035,
	271, 2035,
	272, 2035,
	274, 2035,
	278, 2035,
	279, 2035,
	280, 2035,
	281, 2035,
	282, 2035,
	283, 2035,
	284, 2035,
	286, 2035,
	287, 2035,
	288, 2035,
	290, 2035,
	291, 2035,
	292, 2035,
	294, 2035,
	295, 2035,
	298, 2035,
	299, 2035,
	300, 2035,
	301, 2035,
	302, 2035,
	303, 2035,
	304, 2035,
	307, 2035,
	308, 2035,
	309, 2035,
	310, 2035,
	312, 2035,
	313, 2035,
	314, 2035,
	315, 2035,
	316, 2035,
	317, 2035,
	318, 2035,
	319, 2035,
	320, 2035,
	321, 2035,
	322, 2035,
	323, 2035,
	324, 2035,
	325, 2035,
	326, 2035,
	327, 2035,
	328, 2035,
	329, 2035,
	330, 2035,
	331, 2035,
	332, 2035,
	333, 2035,
	334, 2035,
	336, 2035,
	338, 2035,
	339, 2035,
	340, 2035,
	341, 2035,
	342, 2035,
	343, 2035,
	344, 2035,
	345, 2035,
	346, 2035,
	347, 2035,
	348, 2035,
	349, 2035,
	350, 2035,
	351, 2035,
	352, 2035,
	353, 2035,
	354, 2035,
	356, 2035,
	357, 2035,
	359, 2035,
	361, 2035,
	362, 2035,
	363, 2035,
	364, 2035,
	366, 2035,
	367, 2035,
	368, 2035,
	369, 2035,
	370, 2035,
	373, 2035,
	375, 2035,
	378, 2035,
	379, 2035,
	380, 2035,
	383, 2035,
	384, 2035,
	385, 2035,
	387, 2035,
	389, 2035,
	390, 2035,
	391, 2035,
	392, 2035,
	393, 2035,
	394, 2035,
	395, 2035,
	396, 2035,
	397, 2035,
	398, 2035,
	399, 2035,
	400, 2035,
	401, 2035,
	402, 2035,
	404, 2035,
	405, 2035,
	406, 2035,
	407, 2035,
	408, 2035,
	409, 2035,
	410, 2035,
	411, 2035,
	412, 2035,
	413, 2035,
	414, 2035,
	415, 2035,
	416, 2035,
	417, 2035,
	418, 2035,
	420, 2035,
	421, 2035,
	422, 2035,
	424, 2035,
	425, 2035,
	426, 2035,
	427, 2035,
	428, 2035,
	429, 2035,
	430, 2035,
	431, 2035,
	432, 2035,
	433, 2035,
	434, 2035,
	435, 2035,
	436, 2035,
	437, 2035,
	439, 2035,
	441, 2035,
	442, 2035,
	443, 2035,
	449, 2035,
	450, 2035,
	451, 2035,
	453, 2035,
	454, 2035,
	455, 2035,
	456, 2035,
	457, 2035,
	458, 2035,
	459, 2035,
	460, 2035,
	461, 2035,
	462, 2035,
	463, 2035,
	465, 2035,
	466, 2035,
	467, 2035,
	468, 2035,
	469, 2035,
	471, 2035,
	472, 2035,
	473, 2035,
	474, 2035,
	475, 2035,
	476, 2035,
	477, 2035,
	479, 2035,
	480, 2035,
	481, 2035,
	482, 2035,
	483, 2035,
	484, 2035,
	485, 2035,
	486, 2035,
	487, 2035,
	488, 2035,
	489, 2035,
	490, 2035,
	491, 2035,
	492, 2035,
	493, 2035,
	494, 2035,
	496, 2035,
	497, 2035,
	498, 2035,
	499, 2035,
	500, 2035,
	501, 2035,
	503, 2035,
	504, 2035,
	505, 2035,
	506, 2035,
	507, 2035,
	508, 2035,
	509, 2035,
	511, 2035,
	512, 2035,
	513, 2035,
	514, 2035,
	515, 2035,
	516, 2035,
	517, 2035,
	518, 2035,
	520, 2035,
	522, 2035,
	523, 2035,
	524, 2035,
	525, 2035,
	526, 2035,
	527, 2035,
	528, 2035,
	529, 2035,
	530, 2035,
	531, 2035,
	532, 2035,
	533, 2035,
	534, 2035,
	535, 2035,
	536, 2035,
	537, 2035,
	538, 2035,
	539, 2035,
	540, 2035,
	541, 2035,
	542, 2035,
	544, 2035,
	545, 2035,
	547, 2035,
	548, 2035,
	550, 2035,
	551, 2035,
	552, 2035,
	553, 2035,
	554, 2035,
	555, 2035,
	557, 2035,
	558, 2035,
	560, 2035,
	561, 2035,
	562, 2035,
	563, 2035,
	564, 2035,
	566, 2035,
	568, 2035,
	569, 2035,
	570, 2035,
	571, 2035,
	572, 2035,
	573, 2035,
	574, 2035,
	575, 2035,
	577, 2035,
	578, 2035,
	579, 2035,
	580, 2035,
	581, 2035,
	582, 2035,
	583, 2035,
	586, 2035,
	587, 2035,
	588, 2035,
	589, 2035,
	590, 2035,
	591, 2035,
	592, 2035,
	593, 2035,
	595, 2035,
	598, 2035,
	599, 2035,
	600, 2035,
	601, 2035,
	602, 2035,
	603, 2035,
	605, 2035,
	606, 2035,
	607, 2035,
	608, 2035,
	609, 2035,
	610, 2035,
	611, 2035,
	612, 2035,
	613, 2035,
	614, 2035,
	615, 2035,
	620, 2035,
	621, 2035,
	622, 2035,
	623, 2035,
	624, 2035,
	625, 2035,
	-2, 0,
	-1, 1029,
	283, 575,
	-2, 0,
	-1, 1107,
	202, 1083,
	-2, 0,
	-1, 1108,
	426, 1136,
	501, 1136,
	548, 1136,
	570, 1136,
	-2, 0,
	-1, 1109,
	426, 1135,
	501, 1135,
	548, 1135,
	570, 1135,
	-2, 1057,
	-1, 1113,
	1, 1188,
	657, 1188,
	659, 1188,
	661, 1188,
	664, 1188,
	-2, 0,
	-1, 1115,
	1, 1110,
	657, 1110,
	659, 1110,
	661, 1110,
	664, 1110,
	-2, 0,
	-1, 1116,
	1, 1114,
	657, 1114,
	659, 1114,
	661, 1114,
	664, 1114,
	-2, 0,
	-1, 1117,
	1, 1261,
	195, 1261,
	657, 1261,
	659, 1261,
	661, 1261,
	664, 1261,
	-2, 0,
	-1, 1125,
	1, 1141,
	657, 1141,
	659, 1141,
	661, 1141,
	664, 1141,
	-2, 0,
	-1, 1132,
	1, 1188,
	657, 1188,
	659, 1188,
	661, 1188,
	664, 1188,
	-2, 0,
	-1, 1133,
	1, 1190,
	657, 1190,
	659, 1190,
	661, 1190,
	664, 1190,
	-2, 0,
	-1, 1134,
	1, 1193,
	657, 1193,
	659, 1193,
	661, 1193,
	664, 1193,
	-2, 0,
	-1, 1142,
	1, 1224,
	657, 1224,
	659, 1224,
	661, 1224,
	664, 1224,
	-2, 0,
	-1, 1143,
	1, 1226,
	657, 1226,
	659, 1226,
	661, 1226,
	664, 1226,
	-2, 0,
	-1, 1148,
	1, 1254,
	657, 1254,
	659, 1254,
	661, 1254,
	664, 1254,
	-2, 0,
	-1, 1200,
	182, 1905,
	195, 1905,
	297, 1905,
	371, 1905,
	-2, 1841,
	-1, 1216,
	182, 1904,
	195, 1904,
	297, 1904,
	371, 1904,
	-2, 1838,
	-1, 1245,
	660, 2632,
	-2, 914,
	-1, 1274,
	5, 2624,
	658, 2622,
	-2, 2613,
	-1, 1282,
	5, 2645,
	658, 2642,
	-2, 2633,
	-1, 1283,
	5, 2646,
	658, 2643,
	-2, 2634,
	-1, 1291,
	660, 2630,
	-2, 2612,
	-1, 1292,
	658, 3147,
	-2, 2631,
	-1, 1315,
	5, 2647,
	38, 2647,
	134, 2647,
	640, 2647,
	656, 2647,
	659, 2647,
	660, 2647,
	663, 2647,
	-2, 3146,
	-1, 1316,
	5, 2110,
	-2, 3116,
	-1, 1317,
	5, 2111,
	-2, 3117,
	-1, 1318,
	5, 2112,
	-2, 3132,
	-1, 1319,
	5, 2113,
	-2, 3094,
	-1, 1320,
	5, 2114,
	-2, 3129,
	-1, 1321,
	5, 2122,
	-2, 3107,
	-1, 1322,
	5, 2109,
	-2, 3103,
	-1, 1323,
	5, 2109,
	-2, 3102,
	-1, 1324,
	5, 2109,
	-2, 3122,
	-1, 1325,
	5, 2120,
	-2, 3096,
	-1, 1326,
	5, 2125,
	-2, 3095,
	-1, 1327,
	5, 2127,
	-2, 3142,
	-1, 1330,
	5, 2149,
	-2, 3135,
	-1, 1331,
	5, 2141,
	-2, 3136,
	-1, 1332,
	5, 2149,
	-2, 3137,
	-1, 1333,
	5, 2145,
	-2, 3138,
	-1, 1334,
	5, 2095,
	-2, 3108,
	-1, 1335,
	5, 2096,
	-2, 3109,
	-1, 1336,
	5, 2097,
	-2, 3097,
	-1, 1364,
	5, 2132,
	-2, 3143,
	-1, 1365,
	5, 2133,
	-2, 3133,
	-1, 1366,
	5, 2134,
	606, 2134,
	-2, 3098,
	-1, 1367,
	5, 2135,
	606, 2135,
	-2, 3099,
	-1, 1405,
	658, 2642,
	-2, 2633,
	-1, 1406,
	658, 2643,
	-2, 2634,
	-1, 1512,
	202, 3034,
	565, 3034,
	640, 3034,
	660, 3034,
	-2, 0,
	-1, 1517,
	1, 890,
	661, 890,
	664, 890,
	-2, 1747,
	-1, 1564,
	1, 1742,
	661, 1742,
	664, 1742,
	-2, 1747,
	-1, 1666,
	391, 2607,
	453, 2607,
	503, 2607,
	650, 2607,
	-2, 2595,
	-1, 1672,
	202, 166,
	290, 166,
	356, 166,
	615, 166,
	-2, 3029,
	-1, 1673,
	202, 167,
	290, 167,
	356, 167,
	615, 167,
	-2, 2752,
	-1, 1674,
	202, 168,
	290, 168,
	356, 168,
	615, 168,
	-2, 2942,
	-1, 1680,
	662, 2607,
	-2, 2609,
	-1, 1683,
	25, 2966,
	240, 2966,
	-2, 0,
	-1, 1705,
	1, 1586,
	458, 1540,
	503, 1540,
	632, 1540,
	637, 1540,
	657, 1586,
	659, 1586,
	661, 1586,
	664, 1586,
	-2, 1890,
	-1, 1711,
	218, 1686,
	240, 1686,
	469, 1686,
	-2, 0,
	-1, 1779,
	46, 2605,
	-2, 1319,
	-1, 1786,
	1, 1586,
	657, 1586,
	659, 1586,
	661, 1586,
	664, 1586,
	-2, 1890,
	-1, 1789,
	435, 1356,
	605, 1356,
	-2, 475,
	-1, 1795,
	4, 1611,
	21, 1611,
	22, 1611,
	23, 1611,
	24, 1611,
	25, 1611,
	26, 1611,
	27, 1611,
	28, 1611,
	30, 1611,
	31, 1611,
	37, 1611,
	41, 1611,
	43, 1611,
	44, 1611,
	45, 1611,
	47, 1611,
	48, 1611,
	49, 1611,
	50, 1611,
	51, 1611,
	52, 1611,
	53, 1611,
	54, 1611,
	55, 1611,
	57, 1611,
	58, 1611,
	59, 1611,
	60, 1611,
	62, 1611,
	63, 1611,
	64, 1611,
	65, 1611,
	66, 1611,
	67, 1611,
	68, 1611,
	69, 1611,
	73, 1611,
	74, 1611,
	75, 1611,
	76, 1611,
	78, 1611,
	79, 1611,
	80, 1611,
	84, 1611,
	85, 1611,
	86, 1611,
	87, 1611,
	88, 1611,
	89, 1611,
	90, 1611,
	91, 1611,
	94, 1611,
	95, 1611,
	96, 1611,
	97, 1611,
	98, 1611,
	100, 1611,
	102, 1611,
	103, 1611,
	104, 1611,
	105, 1611,
	106, 1611,
	107, 1611,
	108, 1611,
	110, 1611,
	111, 1611,
	112, 1611,
	114, 1611,
	115, 1611,
	116, 1611,
	124, 1611,
	125, 1611,
	126, 1611,
	127, 1611,
	128, 1611,
	130, 1611,
	131, 1611,
	132, 1611,
	133, 1611,
	135, 1611,
	136, 1611,
	137, 1611,
	138, 1611,
	140, 1611,
	141, 1611,
	142, 1611,
	143, 1611,
	145, 1611,
	146, 1611,
	147, 1611,
	150, 1611,
	151, 1611,
	152, 1611,
	154, 1611,
	155, 1611,
	156, 1611,
	158, 1611,
	159, 1611,
	160, 1611,
	162, 1611,
	163, 1611,
	164, 1611,
	165, 1611,
	166, 1611,
	167, 1611,
	168, 1611,
	169, 1611,
	170, 1611,
	171, 1611,
	172, 1611,
	173, 1611,
	174, 1611,
	175, 1611,
	176, 1611,
	177, 1611,
	178, 1611,
	179, 1611,
	187, 1611,
	188, 1611,
	189, 1611,
	190, 1611,
	194, 1611,
	196, 1611,
	197, 1611,
	198, 1611,
	200, 1611,
	201, 1611,
	204, 1611,
	205, 1611,
	206, 1611,
	207, 1611,
	208, 1611,
	209, 1611,
	210, 1611,
	211, 1611,
	212, 1611,
	213, 1611,
	214, 1611,
	215, 1611,
	216, 1611,
	217, 1611,
	219, 1611,
	220, 1611,
	222, 1611,
	223, 1611,
	225, 1611,
	226, 1611,
	227, 1611,
	228, 1611,
	229, 1611,
	230, 1611,
	231, 1611,
	232, 1611,
	233, 1611,
	234, 1611,
	235, 1611,
	237, 1611,
	238, 1611,
	239, 1611,
	241, 1611,
	242, 1611,
	243, 1611,
	244, 1611,
	245, 1611,
	250, 1611,
	251, 1611,
	252, 1611,
	255, 1611,
	256, 1611,
	257, 1611,
	258, 1611,
	259, 1611,
	260, 1611,
	262, 1611,
	264, 1611,
	265, 1611,
	266, 1611,
	268, 1611,
	270, 1611,
	271, 1611,
	272, 1611,
	274, 1611,
	278, 1611,
	279, 1611,
	280, 1611,
	281, 1611,
	282, 1611,
	283, 1611,
	284, 1611,
	286, 1611,
	287, 1611,
	288, 1611,
	290, 1611,
	291, 1611,
	292, 1611,
	294, 1611,
	295, 1611,
	298, 1611,
	299, 1611,
	300, 1611,
	301, 1611,
	302, 1611,
	303, 1611,
	304, 1611,
	307, 1611,
	308, 1611,
	309, 1611,
	310, 1611,
	312, 1611,
	313, 1611,
	314, 1611,
	315, 1611,
	316, 1611,
	317, 1611,
	318, 1611,
	319, 1611,
	320, 1611,
	321, 1611,
	322, 1611,
	323, 1611,
	324, 1611,
	325, 1611,
	326, 1611,
	327, 1611,
	328, 1611,
	329, 1611,
	330, 1611,
	331, 1611,
	332, 1611,
	333, 1611,
	334, 1611,
	336, 1611,
	338, 1611,
	339, 1611,
	340, 1611,
	341, 1611,
	342, 1611,
	343, 1611,
	344, 1611,
	345, 1611,
	346, 1611,
	347, 1611,
	348, 1611,
	349, 1611,
	350, 1611,
	351, 1611,
	352, 1611,
	353, 1611,
	354, 1611,
	356, 1611,
	357, 1611,
	361, 1611,
	362, 1611,
	363, 1611,
	364, 1611,
	366, 1611,
	367, 1611,
	368, 1611,
	369, 1611,
	370, 1611,
	373, 1611,
	375, 1611,
	376, 1611,
	378, 1611,
	379, 1611,
	380, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	387, 1611,
	389, 1611,
	390, 1611,
	391, 1611,
	392, 1611,
	393, 1611,
	394, 1611,
	395, 1611,
	396, 1611,
	397, 1611,
	398, 1611,
	399, 1611,
	400, 1611,
	401, 1611,
	402, 1611,
	404, 1611,
	405, 1611,
	406, 1611,
	407, 1611,
	408, 1611,
	409, 1611,
	410, 1611,
	411, 1611,
	412, 1611,
	413, 1611,
	414, 1611,
	415, 1611,
	416, 1611,
	417, 1611,
	418, 1611,
	420, 1611,
	421, 1611,
	422, 1611,
	424, 1611,
	425, 1611,
	426, 1611,
	427, 1611,
	428, 1611,
	429, 1611,
	430, 1611,
	431, 1611,
	432, 1611,
	433, 1611,
	434, 1611,
	435, 1611,
	436, 1611,
	437, 1611,
	439, 1611,
	441, 1611,
	442, 1611,
	443, 1611,
	449, 1611,
	450, 1611,
	451, 1611,
	453, 1611,
	454, 1611,
	455, 1611,
	456, 1611,
	457, 1611,
	458, 1611,
	459, 1611,
	460, 1611,
	461, 1611,
	462, 1611,
	463, 1611,
	465, 1611,
	466, 1611,
	467, 1611,
	468, 1611,
	469, 1611,
	471, 1611,
	472, 1611,
	473, 1611,
	474, 1611,
	475, 1611,
	476, 1611,
	477, 1611,
	479, 1611,
	480, 1611,
	481, 1611,
	482, 1611,
	483, 1611,
	484, 1611,
	485, 1611,
	486, 1611,
	487, 1611,
	488, 1611,
	489, 1611,
	490, 1611,
	491, 1611,
	492, 1611,
	493, 1611,
	494, 1611,
	496, 1611,
	497, 1611,
	498, 1611,
	499, 1611,
	500, 1611,
	501, 1611,
	503, 1611,
	504, 1611,
	505, 1611,
	506, 1611,
	507, 1611,
	508, 1611,
	509, 1611,
	511, 1611,
	512, 1611,
	513, 1611,
	514, 1611,
	515, 1611,
	516, 1611,
	517, 1611,
	518, 1611,
	520, 1611,
	522, 1611,
	523, 1611,
	524, 1611,
	525, 1611,
	526, 1611,
	527, 1611,
	528, 1611,
	529, 1611,
	530, 1611,
	531, 1611,
	532, 1611,
	533, 1611,
	534, 1611,
	535, 1611,
	536, 1611,
	537, 1611,
	538, 1611,
	539, 1611,
	540, 1611,
	541, 1611,
	542, 1611,
	544, 1611,
	545, 1611,
	547, 1611,
	548, 1611,
	550, 1611,
	551, 1611,
	552, 1611,
	553, 1611,
	554, 1611,
	555, 1611,
	557, 1611,
	558, 1611,
	560, 1611,
	561, 1611,
	562, 1611,
	563, 1611,
	564, 1611,
	566, 1611,
	568, 1611,
	569, 1611,
	570, 1611,
	571, 1611,
	572, 1611,
	573, 1611,
	574, 1611,
	575, 1611,
	577, 1611,
	578, 1611,
	579, 1611,
	580, 1611,
	581, 1611,
	582, 1611,
	583, 1611,
	586, 1611,
	587, 1611,
	588, 1611,
	589, 1611,
	590, 1611,
	591, 1611,
	592, 1611,
	593, 1611,
	595, 1611,
	598, 1611,
	599, 1611,
	600, 1611,
	601, 1611,
	602, 1611,
	603, 1611,
	605, 1611,
	606, 1611,
	607, 1611,
	608, 1611,
	609, 1611,
	610, 1611,
	611, 1611,
	612, 1611,
	613, 1611,
	614, 1611,
	615, 1611,
	620, 1611,
	621, 1611,
	622, 1611,
	623, 1611,
	624, 1611,
	625, 1611,
	-2, 0,
	-1, 1818,
	1, 716,
	657, 716,
	659, 716,
	661, 716,
	664, 716,
	-2, 1861,
	-1, 1821,
	4, 3141,
	11, 3141,
	12, 3141,
	14, 3141,
	15, 3141,
	16, 3141,
	17, 3141,
	18, 3141,
	19, 3141,
	21, 3141,
	22, 3141,
	23, 3141,
	24, 3141,
	25, 3141,
	26, 3141,
	27, 3141,
	28, 3141,
	30, 3141,
	31, 3141,
	34, 3141,
	35, 3141,
	37, 3141,
	39, 3141,
	41, 3141,
	43, 3141,
	44, 3141,
	45, 3141,
	47, 3141,
	48, 3141,
	49, 3141,
	50, 3141,
	51, 3141,
	52, 3141,
	53, 3141,
	54, 3141,
	55, 3141,
	57, 3141,
	58, 3141,
	59, 3141,
	60, 3141,
	62, 3141,
	63, 3141,
	64, 3141,
	65, 3141,
	66, 3141,
	67, 3141,
	68, 3141,
	69, 3141,
	72, 3141,
	73, 3141,
	74, 3141,
	75, 3141,
	76, 3141,
	78, 3141,
	79, 3141,
	80, 3141,
	81, 3141,
	84, 3141,
	85, 3141,
	86, 3141,
	87, 3141,
	88, 3141,
	89, 3141,
	90, 3141,
	91, 3141,
	92, 3141,
	94, 3141,
	95, 3141,
	96, 3141,
	97, 3141,
	98, 3141,
	100, 3141,
	101, 3141,
	102, 3141,
	103, 3141,
	104, 3141,
	105, 3141,
	106, 3141,
	107, 3141,
	108, 3141,
	110, 3141,
	111, 3141,
	112, 3141,
	113, 3141,
	114, 3141,
	115, 3141,
	116, 3141,
	124, 3141,
	125, 3141,
	126, 3141,
	127, 3141,
	128, 3141,
	130, 3141,
	131, 3141,
	132, 3141,
	133, 3141,
	135, 3141,
	136, 3141,
	137, 3141,
	138, 3141,
	140, 3141,
	141, 3141,
	142, 3141,
	143, 3141,
	145, 3141,
	146, 3141,
	147, 3141,
	150, 3141,
	151, 3141,
	152, 3141,
	154, 3141,
	155, 3141,
	156, 3141,
	158, 3141,
	159, 3141,
	160, 3141,
	162, 3141,
	163, 3141,
	164, 3141,
	165, 3141,
	166, 3141,
	167, 3141,
	168, 3141,
	169, 3141,
	170, 3141,
	171, 3141,
	172, 3141,
	173, 3141,
	174, 3141,
	175, 3141,
	176, 3141,
	177, 3141,
	178, 3141,
	179, 3141,
	183, 3141,
	184, 3141,
	185, 3141,
	186, 3141,
	187, 3141,
	188, 3141,
	189, 3141,
	190, 3141,
	193, 3141,
	194, 3141,
	196, 3141,
	197, 3141,
	198, 3141,
	200, 3141,
	201, 3141,
	203, 3141,
	204, 3141,
	205, 3141,
	206, 3141,
	207, 3141,
	208, 3141,
	209, 3141,
	210, 3141,
	211, 3141,
	212, 3141,
	213, 3141,
	214, 3141,
	215, 3141,
	216, 3141,
	217, 3141,
	219, 3141,
	220, 3141,
	222, 3141,
	223, 3141,
	225, 3141,
	226, 3141,
	227, 3141,
	228, 3141,
	229, 3141,
	230, 3141,
	231, 3141,
	232, 3141,
	233, 3141,
	234, 3141,
	235, 3141,
	236, 3141,
	237, 3141,
	238, 3141,
	239, 3141,
	240, 3141,
	241, 3141,
	242, 3141,
	243, 3141,
	244, 3141,
	245, 3141,
	247, 3141,
	248, 3141,
	250, 3141,
	251, 3141,
	252, 3141,
	254, 3141,
	255, 3141,
	256, 3141,
	257, 3141,
	258, 3141,
	259, 3141,
	260, 3141,
	262, 3141,
	264, 3141,
	265, 3141,
	266, 3141,
	267, 3141,
	268, 3141,
	269, 3141,
	270, 3141,
	271, 3141,
	272, 3141,
	273, 3141,
	274, 3141,
	276, 3141,
	277, 3141,
	278, 3141,
	279, 3141,
	280, 3141,
	281, 3141,
	282, 3141,
	283, 3141,
	284, 3141,
	286, 3141,
	287, 3141,
	288, 3141,
	290, 3141,
	291, 3141,
	292, 3141,
	293, 3141,
	294, 3141,
	295, 3141,
	296, 3141,
	298, 3141,
	299, 3141,
	300, 3141,
	301, 3141,
	302, 3141,
	303, 3141,
	304, 3141,
	307, 3141,
	308, 3141,
	309, 3141,
	310, 3141,
	311, 3141,
	312, 3141,
	313, 3141,
	314, 3141,
	315, 3141,
	316, 3141,
	317, 3141,
	318, 3141,
	319, 3141,
	320, 3141,
	321, 3141,
	322, 3141,
	323, 3141,
	324, 3141,
	325, 3141,
	326, 3141,
	327, 3141,
	328, 3141,
	329, 3141,
	330, 3141,
	331, 3141,
	332, 3141,
	333, 3141,
	334, 3141,
	336, 3141,
	337, 3141,
	338, 3141,
	339, 3141,
	340, 3141,
	341, 3141,
	342, 3141,
	343, 3141,
	344, 3141,
	345, 3141,
	346, 3141,
	347, 3141,
	348, 3141,
	349, 3141,
	350, 3141,
	351, 3141,
	352, 3141,
	353, 3141,
	354, 3141,
	356, 3141,
	357, 3141,
	360, 3141,
	361, 3141,
	362, 3141,
	363, 3141,
	364, 3141,
	366, 3141,
	367, 3141,
	368, 3141,
	369, 3141,
	370, 3141,
	373, 3141,
	375, 3141,
	378, 3141,
	379, 3141,
	380, 3141,
	381, 3141,
	383, 3141,
	384, 3141,
	385, 3141,
	387, 3141,
	389, 3141,
	390, 3141,
	391, 3141,
	392, 3141,
	393, 3141,
	394, 3141,
	395, 3141,
	396, 3141,
	397, 3141,
	398, 3141,
	399, 3141,
	400, 3141,
	401, 3141,
	402, 3141,
	404, 3141,
	405, 3141,
	406, 3141,
	407, 3141,
	408, 3141,
	409, 3141,
	410, 3141,
	411, 3141,
	412, 3141,
	413, 3141,
	414, 3141,
	415, 3141,
	416, 3141,
	417, 3141,
	418, 3141,
	420, 3141,
	421, 3141,
	422, 3141,
	424, 3141,
	425, 3141,
	426, 3141,
	427, 3141,
	428, 3141,
	429, 3141,
	430, 3141,
	431, 3141,
	432, 3141,
	433, 3141,
	434, 3141,
	435, 3141,
	436, 3141,
	437, 3141,
	439, 3141,
	441, 3141,
	442, 3141,
	443, 3141,
	449, 3141,
	450, 3141,
	451, 3141,
	452, 3141,
	453, 3141,
	454, 3141,
	455, 3141,
	456, 3141,
	457, 3141,
	458, 3141,
	459, 3141,
	460, 3141,
	461, 3141,
	462, 3141,
	463, 3141,
	465, 3141,
	466, 3141,
	467, 3141,
	468, 3141,
	469, 3141,
	470, 3141,
	471, 3141,
	472, 3141,
	473, 3141,
	474, 3141,
	475, 3141,
	476, 3141,
	477, 3141,
	478, 3141,
	479, 3141,
	480, 3141,
	481, 3141,
	482, 3141,
	483, 3141,
	484, 3141,
	485, 3141,
	486, 3141,
	487, 3141,
	488, 3141,
	489, 3141,
	490, 3141,
	491, 3141,
	492, 3141,
	493, 3141,
	494, 3141,
	496, 3141,
	497, 3141,
	498, 3141,
	499, 3141,
	500, 3141,
	501, 3141,
	503, 3141,
	504, 3141,
	505, 3141,
	506, 3141,
	507, 3141,
	508, 3141,
	509, 3141,
	510, 3141,
	511, 3141,
	512, 3141,
	513, 3141,
	514, 3141,
	515, 3141,
	516, 3141,
	517, 3141,
	518, 3141,
	520, 3141,
	522, 3141,
	523, 3141,
	524, 3141,
	525, 3141,
	526, 3141,
	527, 3141,
	528, 3141,
	529, 3141,
	530, 3141,
	531, 3141,
	532, 3141,
	533, 3141,
	534, 3141,
	535, 3141,
	536, 3141,
	537, 3141,
	538, 3141,
	539, 3141,
	540, 3141,
	541, 3141,
	542, 3141,
	544, 3141,
	545, 3141,
	546, 3141,
	547, 3141,
	548, 3141,
	550, 3141,
	551, 3141,
	552, 3141,
	553, 3141,
	554, 3141,
	555, 3141,
	557, 3141,
	558, 3141,
	560, 3141,
	561, 3141,
	562, 3141,
	563, 3141,
	564, 3141,
	566, 3141,
	568, 3141,
	569, 3141,
	570, 3141,
	571, 3141,
	572, 3141,
	573, 3141,
	574, 3141,
	575, 3141,
	577, 3141,
	578, 3141,
	579, 3141,
	580, 3141,
	581, 3141,
	582, 3141,
	583, 3141,
	586, 3141,
	587, 3141,
	588, 3141,
	589, 3141,
	590, 3141,
	591, 3141,
	592, 3141,
	593, 3141,
	595, 3141,
	598, 3141,
	599, 3141,
	600, 3141,
	601, 3141,
	602, 3141,
	603, 3141,
	605, 3141,
	606, 3141,
	607, 3141,
	608, 3141,
	609, 3141,
	610, 3141,
	611, 3141,
	612, 3141,
	613, 3141,
	614, 3141,
	615, 3141,
	620, 3141,
	621, 3141,
	622, 3141,
	623, 3141,
	624, 3141,
	625, 3141,
	626, 3141,
	628, 3141,
	638, 3141,
	639, 3141,
	640, 3141,
	641, 3141,
	642, 3141,
	643, 3141,
	645, 3141,
	646, 3141,
	647, 3141,
	648, 3141,
	649, 3141,
	650, 3141,
	651, 3141,
	652, 3141,
	653, 3141,
	656, 3141,
	659, 3141,
	660, 3141,
	662, 3141,
	663, 3141,
	-2, 0,
	-1, 1826,
	202, 2987,
	565, 2987,
	640, 2987,
	660, 2987,
	-2, 0,
	-1, 1874,
	202, 1084,
	-2, 2977,
	-1, 1875,
	202, 1085,
	-2, 2760,
	-1, 1876,
	202, 1086,
	-2, 2928,
	-1, 1881,
	426, 1136,
	501, 1136,
	548, 1136,
	570, 1136,
	-2, 0,
	-1, 1892,
	1, 1686,
	240, 1686,
	657, 1686,
	659, 1686,
	661, 1686,
	664, 1686,
	-2, 0,
	-1, 1909,
	1, 1131,
	657, 1131,
	659, 1131,
	661, 1131,
	664, 1131,
	-2, 0,
	-1, 1910,
	1, 1175,
	657, 1175,
	659, 1175,
	661, 1175,
	664, 1175,
	-2, 0,
	-1, 1911,
	1, 1183,
	657, 1183,
	659, 1183,
	661, 1183,
	664, 1183,
	-2, 0,
	-1, 1914,
	1, 1140,
	657, 1140,
	659, 1140,
	661, 1140,
	664, 1140,
	-2, 0,
	-1, 1916,
	1, 1146,
	657, 1146,
	659, 1146,
	661, 1146,
	664, 1146,
	-2, 0,
	-1, 1919,
	1, 1142,
	657, 1142,
	659, 1142,
	661, 1142,
	664, 1142,
	-2, 0,
	-1, 1924,
	1, 1156,
	657, 1156,
	659, 1156,
	661, 1156,
	664, 1156,
	-2, 0,
	-1, 1959,
	1, 2966,
	657, 2966,
	659, 2966,
	660, 2966,
	661, 2966,
	664, 2966,
	-2, 0,
	-1, 1963,
	1, 1235,
	657, 1235,
	659, 1235,
	661, 1235,
	664, 1235,
	-2, 0,
	-1, 1983,
	182, 1904,
	195, 1904,
	297, 1904,
	371, 1904,
	-2, 1842,
	-1, 2085,
	161, 1863,
	182, 1863,
	195, 1863,
	261, 1863,
	297, 1863,
	371, 1863,
	382, 1863,
	584, 1863,
	-2, 2314,
	-1, 2146,
	659, 2489,
	-2, 0,
	-1, 2182,
	161, 1863,
	182, 1863,
	195, 1863,
	261, 1863,
	297, 1863,
	371, 1863,
	382, 1863,
	584, 1863,
	-2, 1996,
	-1, 2221,
	660, 2633,
	663, 2633,
	-2, 1262,
	-1, 2222,
	660, 2635,
	663, 2635,
	-2, 1263,
	-1, 2223,
	660, 2634,
	663, 2634,
	-2, 1264,
	-1, 2224,
	663, 2557,
	-2, 1265,
	-1, 2248,
	658, 2137,
	-2, 2125,
	-1, 2280,
	202, 2984,
	660, 2984,
	663, 2984,
	-2, 0,
	-1, 2331,
	1, 892,
	661, 892,
	664, 892,
	-2, 1747,
	-1, 2534,
	240, 319,
	-2, 2641,
	-1, 2535,
	240, 320,
	-2, 383,
	-1, 2651,
	1, 1133,
	657, 1133,
	659, 1133,
	661, 1133,
	664, 1133,
	-2, 0,
	-1, 2652,
	1, 1177,
	657, 1177,
	659, 1177,
	661, 1177,
	664, 1177,
	-2, 0,
	-1, 2653,
	1, 1185,
	657, 1185,
	659, 1185,
	661, 1185,
	664, 1185,
	-2, 0,
	-1, 2654,
	1, 1237,
	657, 1237,
	659, 1237,
	661, 1237,
	664, 1237,
	-2, 0,
	-1, 2695,
	1, 1158,
	657, 1158,
	659, 1158,
	661, 1158,
	664, 1158,
	-2, 0,
	-1, 2718,
	1, 1220,
	657, 1220,
	659, 1220,
	661, 1220,
	664, 1220,
	-2, 0,
	-1, 2766,
	476, 1931,
	477, 1931,
	-2, 2170,
	-1, 2799,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2190,
	-1, 2800,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2191,
	-1, 2801,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2192,
	-1, 2802,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2193,
	-1, 2803,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2194,
	-1, 2804,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2195,
	-1, 2805,
	101, 0,
	276, 0,
	277, 0,
	642, 0,
	643, 0,
	-2, 2196,
	-1, 2806,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2197,
	-1, 2818,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2209,
	-1, 2819,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2210,
	-1, 2820,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2211,
	-1, 2824,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2218,
	-1, 2830,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2222,
	-1, 2832,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2230,
	-1, 2833,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2231,
	-1, 2834,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2232,
	-1, 2835,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2233,
	-1, 3009,
	5, 2645,
	202, 2500,
	658, 2642,
	-2, 2633,
	-1, 3010,
	202, 2501,
	-2, 3071,
	-1, 3011,
	202, 2502,
	-2, 2855,
	-1, 3012,
	202, 2503,
	-2, 2723,
	-1, 3013,
	202, 2504,
	-2, 2788,
	-1, 3014,
	202, 2505,
	-2, 2840,
	-1, 3015,
	202, 2506,
	-2, 2980,
	-1, 3016,
	202, 2507,
	-2, 2297,
	-1, 3109,
	1, 1997,
	2, 1997,
	113, 1997,
	161, 1997,
	182, 1997,
	195, 1997,
	203, 1997,
	221, 1997,
	224, 1997,
	254, 1997,
	261, 1997,
	273, 1997,
	293, 1997,
	297, 1997,
	337, 1997,
	371, 1997,
	376, 1997,
	382, 1997,
	464, 1997,
	470, 1997,
	584, 1997,
	596, 1997,
	617, 1997,
	618, 1997,
	619, 1997,
	629, 1997,
	657, 1997,
	659, 1997,
	661, 1997,
	663, 1997,
	664, 1997,
	-2, 1996,
	-1, 3122,
	658, 2614,
	-2, 2628,
	-1, 3124,
	1, 400,
	617, 400,
	664, 400,
	-2, 1890,
	-1, 3162,
	658, 2136,
	-2, 2126,
	-1, 3193,
	38, 2645,
	134, 2645,
	640, 2645,
	656, 2645,
	659, 2645,
	660, 2645,
	663, 2645,
	-2, 2642,
	-1, 3194,
	38, 2646,
	134, 2646,
	640, 2646,
	656, 2646,
	659, 2646,
	660, 2646,
	663, 2646,
	-2, 2643,
	-1, 3424,
	1, 1586,
	458, 1540,
	503, 1540,
	632, 1540,
	637, 1540,
	657, 1586,
	659, 1586,
	661, 1586,
	664, 1586,
	-2, 1890,
	-1, 3608,
	377, 1934,
	-2, 3130,
	-1, 3609,
	377, 1935,
	-2, 2963,
	-1, 3613,
	476, 2568,
	477, 2568,
	-2, 2295,
	-1, 3614,
	476, 2572,
	477, 2572,
	-2, 2296,
	-1, 3615,
	476, 2569,
	477, 2569,
	-2, 2295,
	-1, 3616,
	476, 2573,
	477, 2573,
	-2, 2296,
	-1, 3630,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2220,
	-1, 3631,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2224,
	-1, 3637,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2226,
	-1, 3881,
	1, 887,
	657, 887,
	659, 887,
	661, 887,
	664, 887,
	-2, 1747,
	-1, 4108,
	46, 2605,
	-2, 1320,
	-1, 4113,
	1, 1586,
	657, 1586,
	659, 1586,
	661, 1586,
	664, 1586,
	-2, 1890,
	-1, 4225,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2228,
	-1, 4232,
	267, 0,
	269, 0,
	360, 0,
	-2, 2247,
	-1, 4300,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2276,
	-1, 4301,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2277,
	-1, 4302,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2278,
	-1, 4306,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2282,
	-1, 4307,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2283,
	-1, 4308,
	14, 0,
	15, 0,
	16, 0,
	638, 0,
	639, 0,
	640, 0,
	-2, 2284,
	-1, 4356,
	658, 2615,
	-2, 2629,
	-1, 4600,
	660, 3248,
	-2, 1816,
	-1, 4659,
	267, 0,
	269, 0,
	360, 0,
	-2, 2248,
	-1, 4662,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2251,
	-1, 4663,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2253,
	-1, 4791,
	660, 2630,
	-2, 1621,
	-1, 4966,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2252,
	-1, 4967,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	236, 0,
	240, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 2254,
	-1, 4978,
	267, 0,
	-2, 2287,
	-1, 5182,
	267, 0,
	-2, 2288,
	-1, 5415,
	54, 0,
	236, 0,
	296, 0,
	510, 0,
	626, 0,
	641, 0,
	-2, 3093,
}

const sqlPrivate = 57344

const sqlLast = 159089

var sqlAct = [...]int16{
	313, 5612, 5346, 5604, 5633, 1493, 4095, 5345, 3768, 3327,
	5545, 3382, 3499, 5470, 5486, 5228, 5043, 1027, 6, 1028,
	10, 5236, 5401, 1225, 199, 5559, 5414, 5428, 5297, 5463,
	4, 5279, 4787, 5384, 2531, 1549, 5336, 4642, 5430, 4094,
	5429, 5150, 5360, 1721, 5127, 5376, 5357, 2391, 4572, 5426,
	4265, 1281, 5114, 1686, 5100, 3252, 5495, 5186, 5413, 4923,
	4912, 3838, 2574, 4918, 4881, 3468, 5048, 2776, 2362, 4844,
	4217, 4987, 3908, 4131, 4953, 4592, 5133, 1409, 4584, 5264,
	4788, 804, 2188, 2623, 4022, 1483, 951, 4492, 2625, 3622,
	4768, 2313, 3186, 1844, 3041, 3253, 2847, 4125, 4928, 1217,
	3972, 4079, 4555, 2235, 3343, 4540, 1992, 4064, 3911, 4538,
	3519, 1388, 2400, 2600, 3914, 951, 1570, 4084, 4158, 1285,
	2786, 879, 4983, 3488, 1476, 4160, 3895, 3192, 2621, 2289,
	199, 3456, 4083, 4076, 4057, 4086, 4056, 2777, 1273, 3383,
	3897, 3485, 816, 3896, 3136, 1274, 4359, 1663, 3814, 3791,
	3783, 3483, 3774, 3751, 4641, 4698, 3514, 3550, 1031, 3772,
	2518, 2587, 3500, 2520, 2157, 3431, 3356, 2480, 2429, 5471,
	2412, 3935, 2217, 4326, 4077, 2783, 5187, 3102, 1716, 3750,
	2132, 2063, 2860, 3606, 2093, 3513, 3900, 1398, 2571, 1781,
	3393, 2925, 946, 1717, 1022, 3821, 1488, 1389, 2478, 2927,
	307, 2519, 2474, 875, 2456, 2460, 3469, 2452, 1278, 2379,
	1889, 3185, 1564, 1490, 1532, 1283, 1462, 1842, 2311, 2383,
	2844, 3082, 3184, 3038, 3142, 2916, 2158, 2361, 2358, 1551,
	2765, 2748, 1819, 2746, 852, 306, 2177, 3137, 1784, 1688,
	3493, 1777, 2570, 2504, 2174, 5381, 3277, 1102, 5298, 5613,
	2351, 3278, 4087, 1519, 3238, 1439, 1442, 2919, 1392, 2127,
	1547, 123, 2167, 1473, 953, 3091, 1246, 3051, 3005, 1427,
	1371, 2897, 2077, 210, 1406, 211, 1993, 1994, 860, 952,
	2747, 2971, 2749, 1228, 1924, 1909, 957, 2528, 871, 1810,
	3101, 1001, 127, 953, 113, 835, 2509, 1280, 1671, 5487,
	1544, 1817, 1746, 3104, 5546, 1259, 809, 50, 952, 49,
	47, 38, 36, 34, 1369, 957, 3660, 1563, 1394, 941,
	1974, 960, 1999, 3654, 1123, 1401, 1727, 2291, 805, 4340,
	818, 5622, 4341, 3770, 1002, 2291, 2009, 2010, 5648, 2291,
	3839, 2291, 3081, 5424, 1720, 175, 5423, 895, 5636, 5620,
	960, 1221, 4037, 3081, 84, 1485, 52, 51, 5619, 791,
	2040, 5007, 3081, 814, 5015, 2291, 5579, 5577, 2012, 5012,
	5047, 5047, 2291, 85, 2291, 5011, 5517, 78, 5472, 4140,
	2540, 5454, 5473, 5452, 2323, 3081, 5449, 3081, 5446, 5411,
	5450, 90, 5447, 2540, 5410, 5409, 5399, 2065, 2540, 3524,
	5047, 5397, 73, 5388, 5387, 5047, 2011, 5047, 5047, 54,
	1915, 173, 1221, 5355, 5010, 5006, 1854, 5047, 1835, 1404,
	5319, 888, 891, 5312, 3153, 5311, 1386, 3081, 5302, 3081,
	53, 5278, 2540, 99, 5275, 2540, 5257, 5184, 5047, 5164,
	4871, 3153, 5129, 4617, 5066, 5065, 4415, 5054, 2540, 2540,
	5053, 2540, 5005, 5046, 5047, 4905, 1210, 5047, 1528, 2320,
	4994, 56, 74, 4968, 2540, 4938, 4906, 3153, 4839, 3524,
	4037, 57, 3081, 1201, 1222, 1200, 63, 4732, 2009, 2010,
	4815, 79, 4661, 4608, 3081, 1528, 3153, 4153, 3831, 55,
	4602, 122, 2622, 4141, 4153, 4552, 4446, 106, 119, 4553,
	4447, 4414, 2040, 4351, 4349, 4415, 75, 4352, 4350, 106,
	2012, 4333, 4249, 2320, 2575, 3081, 2540, 3178, 2017, 4330,
	4245, 2323, 4152, 3861, 3081, 3858, 4153, 3862, 1216, 3721,
	3722, 3852, 3739, 3740, 3741, 1424, 3767, 3762, 3669, 2065,
	3081, 3081, 58, 3761, 3670, 3712, 1778, 3081, 2011, 3713,
	2320, 3710, 4657, 3702, 3148, 3711, 3700, 3703, 3461, 2031,
	3081, 3671, 3523, 107, 4037, 3081, 3524, 3053, 2028, 1372,
	1372, 1400, 2039, 2041, 3510, 3509, 3217, 2540, 2610, 2610,
	3081, 1373, 2323, 3152, 3134, 3126, 2320, 3153, 3081, 2540,
	3080, 2609, 1434, 3621, 3081, 2610, 3081, 1375, 2323, 1376,
	5320, 1728, 271, 1729, 5188, 5179, 5167, 3524, 4330, 1729,
	3736, 1729, 3052, 4916, 4871, 2323, 2320, 4816, 4617, 4554,
	4547, 3334, 3237, 2405, 2337, 2539, 3228, 4655, 2303, 2687,
	2317, 3461, 3081, 1425, 4018, 2290, 2032, 3353, 3143, 2153,
	2009, 2010, 1425, 1714, 4464, 76, 4220, 4189, 2175, 2467,
	2034, 2035, 2036, 2037, 4142, 1891, 273, 3118, 3117, 3116,
	2017, 3115, 3114, 1377, 2040, 1374, 1209, 1208, 1207, 1206,
	1205, 1204, 2012, 1203, 4143, 2954, 1199, 1198, 1197, 1196,
	3721, 3722, 1195, 3739, 3740, 3741, 1194, 3721, 3722, 1193,
	1192, 4716, 271, 3659, 1191, 1190, 3576, 45, 1189, 1188,
	1187, 2065, 1186, 4656, 1185, 1184, 1183, 1182, 272, 1181,
	2011, 3727, 1180, 1179, 2039, 2041, 1166, 2062, 1100, 2292,
	1099, 2031, 1098, 111, 1097, 1096, 265, 2292, 1095, 1094,
	2028, 2292, 1093, 2292, 1092, 266, 1091, 1090, 1089, 1088,
	1741, 59, 1087, 2026, 2027, 1086, 273, 1085, 1084, 1083,
	1082, 1081, 1080, 1079, 1078, 1077, 1076, 2292, 62, 1075,
	1074, 3736, 1073, 65, 2292, 212, 2292, 1072, 3478, 1071,
	1070, 1069, 1068, 77, 1067, 1066, 1065, 1064, 2032, 1053,
	1052, 64, 208, 1051, 114, 3743, 1046, 118, 1045, 4229,
	1735, 1858, 1038, 60, 1729, 1037, 1036, 174, 272, 1021,
	1020, 1019, 4930, 2033, 2320, 61, 977, 2320, 976, 975,
	974, 1257, 2034, 2035, 2036, 2037, 973, 964, 963, 271,
	962, 961, 2017, 3245, 923, 2320, 922, 68, 4673, 3737,
	2320, 271, 886, 166, 3721, 3722, 2320, 3739, 3740, 3741,
	885, 1839, 884, 866, 301, 166, 300, 299, 298, 297,
	172, 296, 295, 1495, 1283, 212, 294, 4235, 4385, 2062,
	293, 292, 3727, 291, 290, 1501, 289, 288, 287, 3727,
	286, 2064, 285, 273, 284, 2320, 2039, 2041, 283, 282,
	281, 1283, 1283, 1283, 280, 273, 279, 278, 1426, 3496,
	277, 276, 275, 274, 4345, 4193, 4154, 3817, 1720, 3682,
	3665, 171, 1436, 271, 3656, 2026, 2027, 3553, 3765, 271,
	2062, 271, 3441, 2178, 3157, 3736, 3052, 214, 5439, 2038,
	3123, 2323, 3108, 2738, 2952, 272, 5438, 1573, 2938, 3204,
	1224, 1283, 2936, 2303, 1691, 2320, 3743, 272, 1283, 1283,
	2032, 3245, 1495, 265, 2006, 2033, 3461, 1705, 2364, 1536,
	1537, 1538, 266, 3766, 4140, 265, 209, 273, 1523, 2317,
	2322, 213, 2201, 273, 266, 273, 2290, 1283, 2741, 1283,
	1740, 1283, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 1691,
	3737, 2104, 212, 5191, 5170, 3, 1425, 3737, 1975, 5168,
	1723, 1540, 2320, 2135, 212, 1408, 3738, 2135, 2922, 5435,
	2134, 1523, 2095, 1495, 2134, 5412, 4452, 5396, 1786, 272,
	5283, 5176, 4982, 2064, 5038, 272, 3727, 272, 1681, 4936,
	1734, 2062, 4915, 1676, 1917, 1691, 4741, 265, 3052, 4932,
	2138, 1385, 1691, 265, 2133, 265, 266, 4696, 1718, 3480,
	4695, 1283, 266, 1283, 266, 4689, 4688, 4687, 1691, 199,
	199, 4680, 4679, 1425, 1668, 4677, 4672, 1283, 4669, 1283,
	4668, 2062, 4551, 1467, 1470, 4565, 212, 2095, 2062, 4546,
	4389, 4388, 212, 2102, 212, 2590, 4387, 1515, 3721, 3722,
	4355, 2038, 4321, 4320, 4319, 1402, 4241, 1517, 1480, 4236,
	3743, 1791, 1794, 3812, 271, 3758, 3749, 3720, 2923, 3717,
	3716, 3714, 3709, 3708, 3707, 3704, 3701, 2033, 1691, 2029,
	2025, 3681, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 3664, 271, 1566, 3243, 1660, 1665, 3657, 1283, 3655,
	1813, 1283, 3511, 1797, 3737, 3109, 2097, 1703, 2909, 2006,
	2005, 2547, 2545, 5642, 5567, 5566, 5485, 3738, 273, 5483,
	1410, 4267, 5347, 4566, 3738, 957, 3733, 3734, 3735, 1509,
	5262, 1554, 1555, 3732, 3730, 3731, 3723, 3724, 3725, 3726,
	3728, 3729, 5248, 5244, 5243, 2064, 273, 3242, 5242, 1715,
	5222, 5221, 2096, 1023, 2094, 5193, 2924, 5219, 2921, 4462,
	960, 5190, 5189, 1696, 3721, 3722, 5162, 1779, 2850, 1546,
	272, 5148, 5145, 1556, 1557, 1699, 5144, 5125, 5124, 5062,
	5033, 84, 4980, 1026, 1025, 2062, 4963, 4962, 265, 1859,
	1822, 1824, 4901, 4897, 2009, 2010, 4894, 266, 272, 4872,
	85, 4715, 4694, 271, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 4618, 4450, 1543, 4449, 265, 4430, 90, 2856,
	271, 4429, 4427, 3763, 1523, 266, 2012, 212, 3242, 4336,
	3727, 4324, 4231, 2082, 1820, 4155, 4117, 1283, 3479, 4107,
	3998, 2029, 2025, 1283, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 271, 271, 212, 1222, 273, 3946, 3913,
	99, 3846, 3844, 3686, 2011, 3242, 3685, 3680, 3646, 3455,
	1984, 3738, 3453, 3270, 273, 2141, 2140, 3733, 3734, 3735,
	2139, 4931, 2136, 2128, 3732, 3730, 3731, 3723, 3724, 3725,
	3726, 3728, 3729, 3731, 3723, 3724, 3725, 3726, 3728, 3729,
	2126, 5192, 2953, 1029, 271, 3164, 3163, 273, 273, 272,
	2009, 2010, 3120, 1933, 3113, 3079, 55, 2084, 122, 2934,
	4566, 1864, 2081, 2295, 106, 119, 272, 265, 271, 2200,
	2926, 2156, 2150, 2149, 2148, 1980, 266, 2147, 1834, 2146,
	2145, 2144, 2012, 2143, 265, 2142, 3727, 2123, 2122, 1283,
	1283, 1283, 2121, 266, 1853, 1283, 2120, 2119, 273, 272,
	272, 2118, 1406, 2117, 1406, 2116, 212, 2115, 2114, 2113,
	2112, 2111, 2110, 2109, 2108, 2097, 2017, 265, 265, 1573,
	2011, 2083, 273, 3495, 2080, 2075, 266, 266, 1811, 199,
	107, 1283, 1508, 271, 2223, 1495, 1431, 1420, 4904, 4737,
	4665, 4384, 2253, 2223, 1882, 1495, 4348, 4339, 1495, 1691,
	272, 2007, 3668, 1401, 3155, 1401, 212, 212, 2009, 2010,
	2155, 3111, 1918, 5008, 2204, 1816, 4739, 4383, 265, 1985,
	2096, 3733, 3734, 3735, 272, 3842, 2078, 266, 3732, 3730,
	3731, 3723, 3724, 3725, 3726, 3728, 3729, 273, 4146, 2164,
	2012, 1976, 265, 2196, 4818, 4548, 1535, 3328, 1981, 3721,
	3722, 266, 2920, 5558, 3737, 1550, 2357, 212, 1989, 1201,
	1988, 1200, 5252, 1495, 5245, 1533, 4935, 2210, 5431, 1283,
	3949, 4855, 4854, 2137, 1550, 2216, 4853, 1983, 2011, 4852,
	1550, 212, 2017, 4851, 4817, 2211, 3166, 4718, 1222, 272,
	1550, 4625, 1550, 1283, 4624, 4623, 2205, 1404, 4622, 1404,
	4621, 1573, 2002, 2003, 2161, 2162, 2185, 265, 1550, 3809,
	4620, 2247, 1500, 1548, 4619, 4416, 266, 4343, 4342, 2236,
	2209, 1534, 5513, 2442, 4157, 4156, 5134, 2355, 4569, 2394,
	3296, 4039, 4038, 4027, 5511, 2062, 1528, 4218, 1528, 5427,
	111, 2951, 2178, 2129, 2130, 2937, 212, 2135, 4483, 2935,
	3988, 1978, 2302, 3706, 2134, 3705, 1523, 2307, 1529, 3628,
	2309, 3281, 2226, 2329, 1531, 2276, 2314, 2343, 3391, 2206,
	2316, 2226, 4445, 5171, 4559, 2319, 1881, 2224, 5169, 1177,
	4097, 5215, 4096, 2208, 957, 4410, 2224, 4411, 2328, 1528,
	3915, 2186, 1890, 957, 2176, 2118, 2118, 5214, 2231, 208,
	2106, 114, 1934, 2575, 118, 2349, 2348, 5128, 2282, 1550,
	2357, 2285, 2183, 5460, 4913, 1222, 3520, 4065, 4859, 960,
	5215, 3738, 1891, 2522, 4545, 1726, 4489, 1733, 960, 1739,
	5037, 4480, 1178, 4455, 1372, 4184, 271, 3879, 2708, 2464,
	2619, 2521, 2555, 2305, 1030, 2154, 3770, 1384, 2642, 1400,
	166, 1400, 4984, 4269, 2591, 2917, 5605, 5057, 5029, 5625,
	2461, 3341, 2405, 2195, 5436, 2194, 2193, 2191, 2190, 2189,
	2180, 3674, 3162, 1691, 1691, 2151, 2325, 3725, 3726, 3728,
	3729, 2062, 2131, 4114, 1573, 2331, 2103, 2583, 1790, 1525,
	273, 1710, 2232, 1504, 1815, 4802, 1466, 2441, 2465, 1833,
	5451, 1838, 2440, 4799, 3279, 3721, 3722, 5448, 4831, 4828,
	1691, 4136, 3347, 3345, 4421, 1852, 5237, 1857, 171, 1868,
	4919, 3330, 3350, 5354, 4048, 3918, 2476, 4440, 2327, 3492,
	3552, 1847, 2008, 5515, 214, 2352, 5514, 2403, 5060, 1691,
	5437, 2437, 272, 2446, 1015, 2448, 5056, 5035, 4212, 2457,
	5089, 3883, 2718, 1816, 4804, 4002, 2715, 1227, 4502, 1760,
	265, 3218, 5093, 1175, 1712, 2505, 2532, 2537, 1173, 266,
	2451, 1171, 3433, 209, 921, 5635, 5253, 1530, 213, 2922,
	5082, 1753, 5068, 1916, 1691, 2701, 1691, 2451, 1691, 3730,
	3731, 3723, 3724, 3725, 3726, 3728, 3729, 2350, 5550, 1024,
	1162, 918, 1932, 2699, 4864, 2756, 1691, 1691, 2371, 2372,
	5492, 2451, 4863, 2344, 1931, 2375, 2376, 2716, 4500, 4499,
	1691, 4491, 3885, 2015, 2016, 2018, 2019, 2399, 1535, 3241,
	2411, 3255, 1691, 3241, 4501, 1691, 1691, 1691, 1226, 4470,
	1526, 4469, 4467, 4466, 4454, 3239, 4413, 2717, 4412, 3239,
	1527, 2614, 2369, 4054, 2370, 4053, 3990, 2967, 5165, 2223,
	3830, 1016, 3679, 2354, 2377, 2378, 3678, 2966, 2526, 2754,
	2524, 2525, 3677, 3676, 3632, 957, 1813, 2434, 2602, 2923,
	2602, 1283, 2603, 2449, 3389, 3721, 3722, 3727, 1535, 3388,
	3489, 2579, 2506, 3368, 3366, 3352, 2643, 3340, 3332, 2538,
	3321, 3843, 2487, 1534, 2353, 5058, 5030, 2584, 3320, 2756,
	960, 5606, 1866, 3308, 3307, 2462, 4424, 3306, 3286, 3948,
	1283, 2597, 858, 3285, 3246, 2640, 1930, 4798, 2433, 2447,
	3135, 2788, 2831, 2430, 2233, 2455, 1220, 2013, 2014, 2015,
	2016, 2018, 2019, 3986, 1982, 4800, 3915, 2634, 1013, 2617,
	1012, 4549, 2511, 3258, 2510, 2511, 1283, 2510, 1283, 2514,
	2647, 2152, 2332, 1534, 858, 1283, 3736, 2924, 1283, 2921,
	2253, 2253, 1573, 2754, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	2558, 1283, 2552, 1283, 1283, 1283, 1283, 2404, 2607, 2594,
	2522, 3024, 3156, 1820, 2627, 1820, 4961, 2575, 5551, 2450,
	1764, 2672, 1815, 3721, 3722, 2755, 1219, 2226, 3584, 1283,
	5493, 2586, 4749, 1283, 1283, 1222, 2450, 1222, 1528, 2401,
	2019, 1283, 2224, 2192, 2599, 1283, 1755, 1283, 1283, 957,
	2758, 3283, 2752, 2633, 5105, 1573, 1713, 3727, 2745, 2740,
	2450, 1283, 1283, 1283, 1283, 1509, 2605, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 2611, 2062, 2612, 2397, 2247,
	2247, 3729, 4819, 4186, 960, 2359, 2360, 2784, 2785, 1529,
	1913, 3302, 2727, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 3172, 1283, 1552, 1553, 2753, 1283, 3141, 3300,
	1552, 1553, 1883, 2402, 4023, 1913, 2730, 3987, 2651, 1406,
	1552, 1553, 1552, 1553, 2917, 4760, 1573, 2898, 2899, 2755,
	2662, 2926, 2659, 1518, 1453, 1406, 1861, 1168, 1552, 1553,
	3225, 2898, 2914, 2573, 2398, 1756, 2736, 1221, 5092, 2638,
	3587, 1283, 1573, 1402, 1803, 1402, 1802, 5553, 1801, 1973,
	1800, 2695, 857, 3257, 1977, 2652, 1772, 2444, 2962, 1948,
	1401, 5514, 4801, 2782, 4020, 3737, 2770, 2769, 3309, 2846,
	2846, 3527, 1018, 1017, 1495, 2781, 1401, 3008, 3008, 3022,
	1910, 2898, 5113, 4019, 3042, 3044, 3311, 3571, 4759, 1891,
	1328, 3050, 3150, 1929, 857, 3727, 2196, 5230, 199, 1891,
	2753, 2742, 1912, 2862, 3125, 2744, 803, 2743, 2750, 2757,
	1525, 3319, 3145, 1201, 1276, 2773, 1201, 1201, 2774, 2775,
	3096, 2913, 3349, 2507, 2653, 1495, 3882, 1912, 2729, 2359,
	2360, 3269, 2706, 798, 2854, 3121, 3194, 3604, 3313, 2693,
	2656, 2852, 4796, 915, 2660, 1950, 2062, 3346, 3344, 1911,
	3619, 1862, 5554, 2920, 1404, 2650, 5433, 3348, 4198, 1507,
	1529, 3088, 2512, 5583, 1495, 1495, 3310, 1987, 2964, 3212,
	1404, 1879, 1944, 2965, 5552, 859, 2968, 2185, 2969, 2970,
	3357, 3268, 1222, 2604, 3312, 5562, 4197, 3586, 4530, 2858,
	2413, 4451, 1222, 1867, 3573, 3240, 1222, 4106, 1530, 3372,
	5614, 2515, 2926, 3174, 1062, 1573, 4960, 2513, 2911, 5205,
	919, 2508, 5204, 3737, 5106, 919, 2417, 859, 1170, 3256,
	3583, 919, 3723, 3724, 3725, 3726, 3728, 3729, 5104, 3087,
	5232, 2700, 3738, 4437, 4862, 4255, 5102, 4025, 1785, 1218,
	3966, 3282, 4468, 3207, 4465, 4394, 4393, 3957, 919, 2698,
	4531, 3095, 3017, 3100, 2253, 2247, 3106, 3107, 3033, 3046,
	1523, 1526, 3168, 3004, 3048, 913, 957, 4748, 957, 3077,
	3078, 1527, 3089, 5556, 3191, 3199, 2414, 3093, 3094, 3158,
	3206, 3203, 2726, 2183, 3171, 4024, 1222, 3149, 2137, 5101,
	3139, 1525, 3144, 4392, 2062, 3214, 3428, 1372, 3618, 1783,
	4529, 960, 3967, 960, 4378, 4377, 1400, 2405, 1573, 3958,
	3183, 4258, 1865, 2468, 1153, 4376, 4783, 3110, 2475, 5103,
	1691, 957, 1400, 4256, 1054, 4190, 3147, 1945, 4060, 3215,
	4052, 3721, 3722, 1763, 3984, 3367, 3888, 3170, 3177, 1214,
	3585, 3351, 3247, 3140, 3305, 3643, 3318, 3284, 5434, 3165,
	1926, 1055, 3965, 5526, 4776, 3232, 960, 3209, 3429, 3956,
	4435, 3198, 2129, 2130, 1495, 3201, 4794, 3202, 5537, 3424,
	2544, 2543, 3221, 2247, 2737, 2355, 2355, 3641, 3213, 1530,
	3738, 3289, 2403, 3216, 4797, 1283, 1283, 3179, 1283, 3180,
	5536, 3244, 3386, 3176, 2418, 3223, 3208, 3133, 3342, 3732,
	3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 3427, 3611,
	3612, 4777, 3303, 3721, 3722, 3138, 3739, 3740, 3741, 1495,
	4021, 5585, 3288, 5500, 3467, 4647, 2426, 3464, 2728, 4191,
	3219, 4646, 4061, 2408, 3273, 5464, 4234, 1154, 4877, 3224,
	2469, 4134, 1526, 4133, 2658, 3580, 3326, 1452, 3287, 2291,
	4058, 1691, 1527, 3459, 2384, 1789, 3980, 2688, 5560, 2385,
	1971, 3222, 3304, 1691, 5432, 1691, 2419, 2420, 5238, 1528,
	5403, 1691, 5404, 199, 3169, 2517, 4025, 3250, 1946, 3316,
	3260, 3263, 1691, 1691, 3322, 2926, 3358, 965, 2427, 5331,
	3982, 5555, 2828, 2415, 3736, 2409, 3902, 2926, 5316, 3231,
	3503, 3436, 5021, 914, 3981, 3476, 3438, 3979, 1495, 799,
	1495, 3978, 3515, 3727, 972, 3975, 3329, 3210, 3294, 3295,
	3297, 3298, 3299, 3301, 3314, 3315, 5231, 2166, 3390, 4133,
	3324, 3638, 1283, 3425, 3426, 3530, 3531, 2516, 2425, 3331,
	3518, 2416, 3338, 1785, 4795, 2407, 3517, 3538, 3539, 3540,
	3723, 3724, 3725, 3726, 3728, 3729, 3521, 3930, 3439, 3233,
	3234, 916, 3639, 3235, 3236, 912, 3644, 3884, 3363, 2461,
	3634, 2845, 1942, 1863, 1169, 856, 3537, 5561, 4783, 2124,
	957, 2386, 1892, 5273, 1711, 3471, 1947, 3379, 3380, 3381,
	3376, 3377, 3548, 1056, 1057, 3727, 3525, 1159, 1158, 2390,
	1429, 800, 1283, 3532, 3434, 3533, 3241, 2465, 1283, 1283,
	2422, 1414, 2445, 2694, 3512, 960, 4776, 2170, 3929, 5563,
	4769, 1063, 3261, 1283, 3547, 5478, 2853, 1416, 5499, 3840,
	2443, 3737, 3124, 4043, 4891, 4772, 5479, 4955, 4767, 3562,
	5265, 3564, 4773, 3566, 3507, 2655, 1155, 2465, 4771, 4643,
	1528, 2395, 3460, 4778, 5266, 1411, 801, 2512, 802, 3589,
	2649, 3591, 2404, 1506, 2459, 3475, 1283, 1283, 2173, 3743,
	1949, 1986, 1283, 4777, 2826, 1878, 1880, 2421, 2829, 2472,
	2387, 2392, 3522, 3508, 3498, 1283, 1283, 2168, 3528, 5267,
	1820, 1283, 1283, 3506, 2458, 3592, 4775, 1283, 3594, 1943,
	3487, 4059, 2513, 1417, 5314, 2166, 5581, 2171, 3545, 4973,
	4726, 4436, 2062, 3737, 824, 4779, 3983, 4727, 1039, 5524,
	4770, 3554, 3903, 3555, 3561, 3936, 3563, 5365, 3565, 4833,
	3567, 3568, 1418, 2453, 2825, 2074, 2908, 3684, 3434, 3092,
	3867, 2470, 1283, 1283, 1283, 1044, 5586, 3105, 1283, 3560,
	3505, 2169, 5315, 3577, 1221, 4271, 966, 967, 1283, 5569,
	5269, 4903, 4867, 2423, 2170, 4632, 3635, 4736, 2402, 4513,
	4379, 2388, 1435, 3640, 3325, 1283, 4509, 1415, 1433, 3599,
	4725, 1156, 3938, 3642, 4648, 5268, 4507, 4954, 4214, 3610,
	3785, 2471, 3667, 3602, 2062, 2170, 5280, 5371, 3738, 2454,
	4509, 1897, 5296, 5147, 5270, 5096, 1058, 1059, 4866, 4865,
	4507, 4590, 1157, 4121, 4564, 2173, 3601, 3600, 4033, 4031,
	1402, 3856, 3370, 3132, 2462, 2395, 2569, 2163, 1432, 3620,
	2770, 2769, 3605, 1423, 3090, 790, 1402, 3662, 3663, 3658,
	1996, 2292, 3666, 1997, 1996, 2705, 2173, 5465, 4644, 5498,
	3627, 2772, 3937, 1991, 2171, 2406, 2345, 4310, 4692, 5591,
	5055, 5001, 4774, 3822, 4518, 2168, 3556, 1283, 1283, 1283,
	1283, 1161, 4892, 4032, 4046, 4511, 1283, 1283, 1283, 4047,
	3738, 1283, 3890, 3371, 2172, 2171, 2842, 2393, 5156, 3633,
	3909, 1160, 5212, 1283, 1406, 1573, 5281, 4772, 4591, 4511,
	4495, 4471, 5477, 4422, 4773, 4420, 4122, 4784, 4785, 4112,
	4510, 969, 968, 2342, 3905, 4778, 3477, 3470, 2840, 2762,
	1283, 3457, 1283, 2598, 2592, 2585, 3777, 3778, 2577, 2169,
	2554, 1406, 3891, 2551, 4510, 3361, 4254, 5141, 1757, 4956,
	1444, 4406, 3262, 3083, 865, 1401, 4325, 5337, 2827, 1573,
	4215, 3245, 1222, 1996, 5299, 1995, 2707, 4593, 4775, 1995,
	2338, 1406, 3375, 4924, 1573, 3732, 3730, 3731, 3723, 3724,
	3725, 3726, 3728, 3729, 3454, 3760, 1495, 4779, 4649, 1454,
	5120, 3673, 1401, 3086, 5118, 970, 971, 1040, 1041, 5032,
	3921, 3917, 3290, 3916, 2253, 3625, 2340, 3099, 1573, 3603,
	2639, 4338, 3782, 2631, 3793, 3781, 1920, 1919, 1495, 2620,
	3784, 2549, 1401, 1914, 3779, 1412, 4372, 3131, 3130, 1495,
	3789, 3129, 3802, 3128, 3859, 3194, 2253, 3085, 2389, 1997,
	3836, 2172, 3084, 1997, 4539, 3127, 3811, 1809, 1807, 1404,
	3733, 3734, 3735, 2341, 1061, 4544, 1776, 3732, 3730, 3731,
	3723, 3724, 3725, 3726, 3728, 3729, 1219, 1283, 1795, 4861,
	4034, 3816, 2172, 4517, 3373, 2368, 5225, 4311, 1995, 1283,
	4882, 2763, 2836, 4650, 1796, 3266, 1404, 1413, 4312, 4693,
	2394, 3442, 5271, 3787, 3445, 2074, 3447, 1495, 5272, 4560,
	5590, 5044, 3904, 2253, 4428, 2596, 2837, 3857, 4508, 3755,
	3756, 3757, 904, 2838, 4068, 2405, 1404, 2843, 3794, 5040,
	1283, 4417, 5282, 2247, 1778, 2481, 2394, 3864, 3866, 3771,
	5521, 3841, 4508, 5122, 4774, 3880, 1495, 5019, 3820, 5017,
	3808, 3954, 5016, 3551, 3892, 3893, 3873, 3886, 3494, 3432,
	905, 3494, 1523, 4187, 2247, 2247, 4181, 1495, 3815, 1495,
	3860, 3786, 3969, 5140, 3971, 3855, 3919, 4407, 3854, 3923,
	3853, 3792, 3799, 3191, 3824, 3825, 3826, 3827, 3869, 4784,
	4785, 3871, 3872, 1283, 1283, 1898, 3875, 2464, 3876, 3989,
	3877, 1573, 3291, 3292, 957, 2464, 3806, 3834, 3807, 3829,
	4035, 1400, 4003, 1495, 3374, 3833, 3832, 3526, 4013, 3798,
	1042, 1043, 5121, 3847, 3848, 5045, 3849, 3906, 3835, 1495,
	3920, 3437, 2247, 3925, 4030, 3951, 3927, 3435, 2624, 960,
	3912, 3850, 2521, 3823, 3569, 1871, 3788, 5039, 1400, 5343,
	1495, 3800, 5226, 5027, 4045, 4041, 3863, 3803, 3804, 4754,
	4753, 4005, 5351, 4007, 5334, 4699, 4011, 3801, 3865, 4479,
	4017, 3933, 3976, 4327, 2933, 864, 5004, 3870, 1400, 4380,
	1968, 2722, 5373, 1970, 3874, 1967, 5525, 5523, 5453, 5255,
	5246, 3881, 5014, 4979, 4745, 1495, 1691, 4691, 1691, 2209,
	4543, 2367, 1573, 4036, 5028, 3999, 3985, 4418, 3955, 951,
	1691, 1691, 2697, 1965, 3194, 3970, 4044, 3889, 1808, 1806,
	4399, 1938, 1936, 3752, 1908, 1060, 4230, 1906, 4182, 1904,
	1902, 3953, 4179, 1900, 2839, 1495, 3795, 3796, 3797, 3991,
	4113, 3851, 3715, 3939, 2841, 1894, 5344, 1888, 1886, 5227,
	2479, 1805, 3968, 1406, 3645, 3458, 3947, 3339, 3333, 4127,
	4129, 3280, 3960, 3167, 2735, 2731, 2641, 2630, 2615, 2284,
	3964, 4082, 2203, 1691, 2199, 1972, 1846, 2664, 5108, 2530,
	4752, 3753, 4209, 4102, 4208, 1691, 4200, 1691, 1991, 4063,
	3575, 4066, 3574, 199, 199, 3535, 2751, 1925, 4012, 2667,
	3994, 2384, 2932, 2550, 1401, 2283, 2385, 4001, 4049, 4111,
	4000, 3515, 2281, 2107, 4029, 1860, 4014, 3961, 4026, 1368,
	3515, 3962, 5425, 3963, 4105, 4834, 4482, 4481, 4120, 4516,
	4838, 4814, 4138, 2247, 4149, 4040, 5333, 4922, 4917, 4004,
	4843, 4827, 4765, 4042, 1573, 4050, 4764, 1573, 4589, 4579,
	4498, 4473, 3191, 4443, 4441, 3316, 4419, 4185, 4116, 4110,
	4188, 4098, 3490, 3482, 3474, 3466, 3451, 3449, 3430, 3205,
	3200, 2548, 2546, 2523, 2724, 4128, 2466, 917, 2424, 2410,
	2396, 2723, 1283, 1969, 4201, 1966, 4051, 953, 4055, 1283,
	1283, 5496, 4380, 1283, 1283, 1283, 4177, 1283, 1404, 4123,
	3288, 4070, 952, 2324, 2321, 2696, 1283, 2253, 4062, 957,
	4103, 4175, 4130, 1964, 2318, 1283, 4109, 4180, 2315, 2310,
	1283, 1937, 1935, 4108, 1907, 2308, 1573, 1905, 2386, 1903,
	1901, 2304, 1241, 1899, 2297, 1283, 2293, 4251, 4126, 4207,
	5491, 4135, 2250, 1573, 960, 1893, 2390, 1887, 1885, 5408,
	4144, 1804, 2000, 2253, 2253, 1283, 1283, 920, 1283, 1283,
	1283, 1232, 4015, 4206, 4147, 4148, 2241, 2475, 2215, 4204,
	2663, 3623, 2529, 3369, 5515, 2346, 1283, 5224, 4210, 2734,
	1283, 4211, 2253, 2253, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
	1283, 1283, 1283, 1283, 4178, 1283, 3595, 4283, 3596, 4284,
	4233, 2334, 2335, 1283, 1283, 2253, 3593, 1222, 3423, 4216,
	1283, 4243, 4244, 5390, 5290, 4937, 2247, 2387, 2392, 2732,
	1381, 1283, 4850, 4194, 2236, 4195, 4751, 4196, 3516, 3887,
	2363, 4323, 1406, 1406, 948, 1762, 1283, 199, 3241, 4213,
	1400, 1172, 1174, 3241, 5158, 3267, 1212, 1382, 1153, 5151,
	3146, 4137, 1749, 4601, 3239, 1438, 2691, 2405, 2654, 3264,
	1475, 2001, 2247, 2247, 2595, 3624, 2686, 2733, 1573, 1474,
	2784, 4274, 5389, 1214, 1962, 1963, 2661, 4805, 4357, 4016,
	4845, 1495, 1495, 1401, 1401, 3387, 1213, 4238, 4240, 2009,
	2010, 2247, 2247, 1884, 5178, 2009, 2010, 1545, 893, 2784,
	4289, 5042, 1495, 1495, 4322, 4250, 4700, 2223, 2388, 1495,
	3271, 4266, 4678, 3194, 2253, 1402, 2253, 3934, 4273, 4257,
	4259, 4260, 3272, 1213, 2247, 3293, 302, 2012, 2004, 4344,
	4261, 2333, 4318, 1502, 1437, 4281, 1283, 1542, 5509, 4282,
	5461, 4373, 4494, 4512, 3448, 3272, 4576, 4288, 4286, 1048,
	2578, 4329, 1402, 4280, 4314, 1475, 1513, 3942, 3347, 2011,
	1475, 3345, 2395, 2489, 1283, 2011, 1383, 4493, 3354, 5529,
	3335, 1154, 3337, 896, 896, 910, 3276, 1404, 1404, 787,
	3274, 4315, 1402, 1941, 4334, 4335, 3336, 5342, 5321, 5288,
	3275, 5284, 5223, 5142, 5139, 5020, 4950, 1283, 1283, 4587,
	4578, 4331, 4332, 4563, 2499, 4354, 4402, 4115, 4403, 3497,
	3463, 3450, 3049, 2330, 2234, 5557, 5041, 3323, 1709, 3940,
	1708, 4046, 3943, 3944, 2393, 3945, 4047, 1702, 1215, 3837,
	2481, 5589, 2247, 2247, 4346, 2247, 3721, 3722, 4046, 5286,
	4475, 1283, 1283, 4047, 1720, 2009, 2010, 5528, 4046, 1283,
	4404, 3191, 4670, 4047, 4405, 2928, 1153, 4423, 2374, 3227,
	2477, 2373, 3226, 5307, 4856, 4382, 1720, 1720, 1870, 3941,
	1691, 1691, 1719, 2495, 1869, 3578, 1720, 2963, 1691, 4395,
	2374, 1214, 2373, 3995, 3996, 2226, 3997, 4401, 5468, 1691,
	1691, 4456, 4586, 5143, 4374, 4375, 4386, 5083, 1940, 1691,
	2224, 1939, 4847, 4442, 1495, 4444, 4842, 957, 4841, 4527,
	4514, 4728, 4724, 4461, 4463, 4390, 4391, 4723, 4666, 4640,
	4460, 4381, 4400, 4262, 4009, 4006, 3581, 2101, 4522, 1400,
	1400, 1159, 1158, 2253, 1571, 2492, 2100, 3598, 2739, 5574,
	4484, 4496, 960, 4490, 5538, 4477, 4478, 5394, 4347, 5325,
	5324, 5323, 5254, 5198, 5194, 5116, 4448, 1283, 5072, 5009,
	5003, 4453, 5002, 5000, 4505, 2389, 4999, 4997, 4899, 4575,
	4876, 4515, 4803, 4738, 4722, 4721, 4613, 4506, 1691, 1154,
	1155, 4607, 4550, 4439, 1283, 3288, 4594, 4497, 4431, 2497,
	4532, 4533, 1406, 1283, 4119, 4118, 3926, 3868, 4603, 3582,
	3572, 1691, 3544, 3543, 3542, 3541, 1691, 1691, 1691, 3481,
	4556, 3452, 3265, 3196, 3160, 3159, 2857, 2725, 2692, 2685,
	2684, 2683, 2682, 2681, 2593, 4542, 2564, 4519, 2563, 2562,
	1691, 4595, 1691, 4570, 4571, 4503, 2561, 2560, 1691, 2559,
	1573, 2300, 4537, 1401, 3358, 4541, 3503, 2299, 2298, 2296,
	2214, 2213, 2247, 1961, 1960, 2498, 4598, 1895, 1771, 3515,
	3912, 1770, 1769, 1768, 4610, 1767, 4528, 1766, 1765, 1761,
	4525, 1573, 1759, 1758, 1283, 1283, 1695, 4536, 1694, 4597,
	1283, 1283, 2253, 1562, 4562, 1283, 1283, 1561, 1283, 4526,
	2502, 4558, 1560, 1283, 4614, 1559, 1558, 1505, 1461, 1460,
	1459, 1458, 1457, 1456, 1283, 1455, 1449, 1448, 4577, 1447,
	2250, 2250, 1446, 1445, 1363, 1156, 2336, 1176, 1167, 5229,
	1283, 4574, 4782, 4628, 4580, 4781, 4581, 4780, 4583, 2721,
	2572, 4634, 105, 1754, 2241, 2241, 4626, 1404, 3362, 1159,
	1158, 4629, 4596, 98, 1211, 2473, 1157, 4438, 4599, 5462,
	5570, 4605, 5598, 4604, 1402, 2556, 2482, 4627, 3364, 4651,
	4612, 4611, 5375, 2490, 5374, 5259, 3181, 2294, 4075, 4074,
	5467, 2486, 5112, 982, 2500, 4652, 4949, 1129, 5372, 1744,
	997, 1406, 4664, 5353, 3928, 4660, 3392, 2666, 1155, 1406,
	1896, 2496, 4697, 1573, 1573, 5136, 1573, 2668, 199, 4637,
	3365, 2247, 3810, 1406, 3112, 1161, 5313, 4674, 3683, 2236,
	5185, 4972, 4645, 2931, 1691, 1691, 2105, 3764, 100, 1267,
	1313, 4890, 2493, 4889, 4766, 1160, 4425, 4636, 4085, 2491,
	4705, 4886, 1401, 4885, 2238, 2240, 1573, 2501, 1231, 1576,
	1401, 3055, 3057, 5402, 2347, 5580, 2356, 3161, 3007, 4630,
	1495, 1290, 1287, 2242, 1401, 2244, 1289, 1288, 2243, 2125,
	4639, 1286, 2237, 4585, 4104, 3501, 4535, 1283, 4145, 1814,
	1812, 1131, 2851, 2915, 3672, 2098, 1247, 1269, 1406, 2912,
	1406, 1430, 1258, 4713, 3790, 3769, 4730, 4731, 4132, 1400,
	4690, 4353, 2761, 1007, 3718, 2918, 1419, 4708, 4710, 3030,
	3023, 3019, 3878, 3491, 1979, 1495, 1291, 4986, 2076, 3502,
	4813, 2494, 4792, 1539, 1251, 1573, 2849, 1495, 4755, 4756,
	1495, 2089, 4822, 1156, 4793, 4825, 1404, 3650, 2771, 1401,
	4139, 1401, 3813, 4701, 1404, 4758, 4704, 4702, 4703, 1283,
	4707, 4706, 1573, 4809, 4810, 3154, 5383, 4806, 1404, 4270,
	3579, 4714, 2568, 1380, 1157, 4717, 1379, 1428, 309, 309,
	309, 1378, 793, 794, 5359, 810, 793, 810, 822, 4761,
	5356, 863, 2463, 4893, 4080, 883, 4081, 2339, 3220, 2861,
	890, 890, 890, 890, 4099, 1263, 3557, 4763, 3558, 1679,
	3815, 4746, 309, 2712, 1691, 1691, 2250, 4857, 3194, 1283,
	1283, 4202, 4807, 3775, 4846, 4561, 4848, 1773, 5049, 4757,
	1275, 2061, 3419, 1161, 1035, 3418, 2202, 5218, 4729, 1524,
	2241, 309, 1522, 1404, 4829, 1404, 4830, 1495, 1521, 1520,
	4832, 2384, 4907, 1160, 5547, 3360, 2385, 4849, 4808, 3355,
	1573, 2503, 4434, 1402, 1402, 1691, 4840, 4433, 4432, 270,
	3617, 1998, 1990, 4925, 267, 269, 268, 3932, 4358, 4883,
	3819, 1701, 1872, 4750, 5459, 4789, 4458, 4789, 4826, 4067,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 27, 1400, 4823,
	897, 898, 4874, 899, 3230, 2366, 1400, 1541, 4875, 4812,
	4409, 26, 25, 4908, 1573, 4870, 24, 23, 4926, 4873,
	1400, 128, 4821, 4858, 48, 4824, 1283, 1283, 1283, 4911,
	29, 4914, 28, 5, 2250, 22, 170, 2247, 168, 145,
	165, 4869, 164, 4868, 1573, 137, 163, 162, 161, 1283,
	160, 4878, 1283, 1283, 159, 167, 3191, 4888, 2241, 4884,
	158, 157, 1283, 4900, 4920, 2253, 4957, 4958, 2365, 4902,
	1283, 1283, 4896, 4934, 4929, 152, 156, 155, 2386, 154,
	153, 4895, 151, 149, 4942, 150, 144, 1573, 4946, 1691,
	4927, 148, 793, 793, 147, 1400, 2390, 1400, 146, 143,
	309, 142, 4733, 4734, 4735, 141, 140, 4940, 4948, 139,
	138, 4910, 4964, 4939, 136, 169, 1495, 135, 4742, 4743,
	4744, 134, 215, 4747, 133, 132, 131, 130, 2431, 4951,
	4959, 129, 876, 2436, 877, 67, 66, 4969, 125, 126,
	1573, 21, 46, 16, 71, 72, 20, 15, 1283, 41,
	103, 117, 116, 115, 42, 112, 40, 19, 18, 17,
	110, 1283, 4995, 109, 4996, 108, 39, 37, 4981, 13,
	1283, 11, 43, 2187, 14, 2253, 7, 2387, 2392, 207,
	204, 203, 206, 4582, 2247, 1283, 4975, 202, 1283, 5026,
	205, 102, 2236, 201, 104, 4992, 4993, 200, 101, 2405,
	35, 12, 195, 5132, 4568, 93, 1283, 198, 2438, 1283,
	197, 196, 194, 193, 192, 189, 1573, 94, 91, 191,
	97, 96, 1691, 1283, 190, 1691, 1691, 92, 5052, 95,
	33, 8, 70, 9, 1495, 4952, 4183, 120, 121, 5098,
	44, 89, 5075, 88, 5023, 5076, 5024, 87, 86, 32,
	4631, 2541, 5022, 69, 2394, 2432, 5071, 31, 264, 5031,
	5025, 262, 263, 261, 260, 1406, 185, 240, 2388, 239,
	238, 237, 236, 235, 234, 233, 3647, 3648, 232, 227,
	231, 229, 228, 230, 226, 256, 255, 254, 253, 5088,
	252, 5107, 251, 1573, 2247, 250, 1691, 5123, 5074, 5115,
	249, 243, 5061, 5073, 5152, 242, 5063, 5064, 5069, 2087,
	5119, 5126, 5131, 2092, 248, 5077, 1401, 2382, 5094, 5095,
	247, 246, 2395, 1402, 245, 244, 241, 4082, 5078, 5013,
	259, 82, 225, 1283, 1283, 224, 5085, 223, 221, 217,
	220, 222, 219, 218, 5084, 5157, 5086, 5109, 5087, 5153,
	1283, 2253, 5110, 5111, 216, 258, 5117, 5135, 5138, 257,
	188, 83, 183, 184, 81, 182, 181, 180, 179, 5161,
	178, 5163, 5155, 5130, 177, 176, 1495, 1495, 1495, 2380,
	80, 1495, 1495, 1495, 2393, 1495, 1495, 2602, 187, 5137,
	186, 30, 2, 1, 0, 5154, 5099, 5149, 0, 0,
	0, 0, 5160, 5159, 1283, 0, 1283, 0, 1283, 5213,
	1404, 4929, 0, 0, 0, 0, 0, 0, 1406, 5097,
	0, 305, 0, 5173, 0, 0, 0, 5174, 5175, 2381,
	0, 1283, 5166, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 5177, 0, 0, 0, 5211, 0, 0, 0,
	0, 0, 4789, 0, 5183, 0, 0, 0, 3745, 3746,
	3747, 3748, 0, 0, 0, 5241, 0, 0, 0, 1401,
	2247, 0, 0, 0, 0, 0, 0, 0, 2236, 0,
	0, 0, 0, 2253, 1401, 5210, 0, 0, 0, 5209,
	5206, 0, 0, 0, 2428, 1406, 1406, 5263, 5233, 0,
	0, 5240, 0, 0, 0, 2443, 0, 0, 0, 5234,
	0, 0, 1402, 0, 0, 5287, 1406, 0, 0, 1406,
	1402, 0, 2445, 1691, 5261, 2389, 0, 5276, 5277, 0,
	0, 0, 0, 1691, 1402, 0, 0, 2536, 0, 2787,
	0, 5249, 0, 0, 0, 5251, 1401, 1401, 5293, 1283,
	1283, 5295, 0, 0, 0, 4836, 2439, 0, 0, 1283,
	5256, 2442, 1400, 1404, 0, 0, 5258, 1401, 0, 0,
	1401, 0, 5274, 0, 0, 5260, 5300, 0, 1404, 5285,
	0, 0, 0, 5309, 0, 5310, 5135, 0, 5250, 5195,
	5196, 5197, 0, 5292, 5199, 5200, 5201, 0, 5202, 5203,
	5301, 0, 2247, 5304, 0, 4789, 2435, 0, 0, 1402,
	0, 1402, 5308, 5350, 0, 1283, 1283, 5318, 5306, 1283,
	4789, 5305, 1421, 1691, 1495, 0, 1495, 5326, 5327, 5328,
	5322, 4898, 2929, 810, 0, 0, 0, 5303, 0, 0,
	1404, 1404, 0, 5317, 2444, 0, 4909, 810, 0, 0,
	5358, 5361, 5332, 309, 0, 0, 0, 5340, 5341, 0,
	1451, 1404, 0, 5382, 1404, 0, 0, 5386, 0, 0,
	4933, 309, 5349, 309, 309, 5348, 1479, 309, 1489, 5405,
	0, 5407, 4789, 4789, 5363, 1283, 1283, 1283, 5385, 1503,
	0, 5367, 0, 0, 0, 0, 0, 883, 0, 0,
	883, 0, 0, 4789, 0, 0, 4789, 0, 0, 5362,
	0, 0, 0, 5366, 0, 1400, 5368, 0, 5391, 0,
	0, 0, 5395, 890, 0, 1283, 0, 0, 5398, 3122,
	1400, 5406, 5440, 0, 0, 2441, 0, 0, 0, 0,
	2440, 0, 5422, 0, 5419, 5420, 0, 5445, 5421, 1691,
	0, 0, 309, 0, 309, 309, 1479, 0, 309, 309,
	0, 5441, 0, 309, 2394, 0, 5476, 1489, 0, 0,
	0, 5442, 5474, 0, 2250, 0, 0, 0, 0, 5475,
	0, 309, 5488, 1722, 0, 5484, 1283, 0, 0, 5482,
	0, 5466, 1400, 1400, 1495, 1495, 5458, 0, 2241, 1742,
	5443, 5456, 5469, 5508, 0, 2250, 2250, 5481, 1751, 5115,
	0, 5489, 5497, 1400, 5480, 0, 1400, 0, 5490, 5516,
	5018, 0, 5519, 0, 0, 1775, 0, 1489, 0, 2241,
	2241, 0, 309, 309, 0, 1479, 1283, 5369, 5510, 5370,
	0, 5512, 5494, 0, 5507, 0, 5503, 5504, 0, 5531,
	5518, 0, 5533, 5535, 1406, 5358, 1406, 883, 5361, 309,
	309, 5534, 5543, 5522, 5520, 0, 5527, 5455, 5541, 0,
	5457, 1840, 0, 2250, 0, 0, 0, 5532, 0, 0,
	0, 0, 1848, 5540, 0, 0, 5542, 1035, 5544, 5549,
	5539, 0, 3229, 0, 0, 0, 1495, 2241, 0, 5385,
	0, 0, 5548, 0, 0, 1401, 0, 1401, 0, 0,
	5571, 5564, 5572, 0, 5573, 0, 5565, 0, 0, 5576,
	5578, 0, 0, 0, 0, 0, 0, 0, 1283, 1283,
	5329, 5330, 0, 0, 0, 5584, 0, 1283, 1283, 0,
	0, 5575, 5582, 0, 0, 4361, 0, 0, 0, 5603,
	5602, 5596, 5592, 5608, 5587, 0, 0, 5610, 6, 5607,
	10, 5615, 0, 5618, 199, 5611, 5617, 5616, 309, 5609,
	5601, 5600, 0, 0, 0, 0, 5623, 0, 3503, 5621,
	0, 0, 5624, 0, 5628, 0, 1495, 5626, 0, 5629,
	0, 5630, 5634, 0, 309, 5627, 5632, 5631, 5637, 1404,
	5638, 1404, 4362, 5641, 0, 5639, 5640, 5505, 5506, 3503,
	0, 0, 0, 1283, 0, 0, 5643, 0, 5647, 5644,
	5649, 5634, 5646, 5650, 0, 0, 0, 0, 0, 0,
	4363, 5593, 5594, 4360, 0, 0, 0, 0, 0, 0,
	0, 4789, 4371, 4789, 0, 0, 0, 0, 4369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4170, 0, 4226, 4227, 0, 5595, 2766,
	0, 84, 0, 0, 2250, 0, 1402, 0, 4168, 0,
	0, 0, 0, 0, 4370, 0, 0, 0, 4161, 4366,
	85, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 0, 0, 0, 0, 5645, 90, 5568,
	0, 0, 0, 0, 4367, 0, 0, 2855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5247, 0,
	99, 1400, 0, 1400, 0, 4290, 4291, 4292, 4293, 4294,
	4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304,
	4305, 4306, 4307, 4308, 4309, 0, 4313, 4172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 1029, 0, 1701, 4163, 793, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 5289, 122, 0,
	5291, 0, 4162, 0, 106, 119, 0, 3025, 309, 0,
	309, 0, 0, 0, 309, 0, 0, 0, 0, 1402,
	0, 2009, 2010, 0, 0, 0, 0, 1722, 1479, 1489,
	309, 0, 309, 2212, 1402, 0, 0, 0, 1443, 0,
	309, 0, 810, 4364, 0, 2040, 0, 0, 0, 309,
	0, 4365, 0, 2012, 0, 0, 0, 2250, 0, 0,
	0, 4171, 1484, 0, 0, 0, 0, 0, 0, 0,
	107, 2301, 0, 0, 0, 0, 0, 2009, 2010, 0,
	0, 2241, 2065, 309, 0, 0, 0, 0, 0, 0,
	309, 2011, 0, 0, 0, 0, 1402, 1402, 0, 4170,
	0, 2040, 2031, 2250, 2250, 0, 4368, 0, 0, 2012,
	0, 2028, 0, 0, 4168, 0, 0, 1402, 0, 0,
	1402, 0, 0, 883, 4161, 0, 0, 2241, 2241, 0,
	0, 0, 2250, 2250, 311, 0, 0, 0, 2065, 0,
	1666, 0, 5392, 1680, 1484, 0, 5393, 2011, 1443, 0,
	0, 0, 0, 5377, 0, 0, 2241, 2241, 0, 0,
	0, 890, 0, 890, 0, 2250, 0, 0, 0, 0,
	4224, 0, 0, 890, 890, 0, 0, 0, 0, 0,
	2489, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	4174, 0, 0, 4172, 0, 0, 0, 1484, 1484, 0,
	0, 2499, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 4163, 0, 0, 4169, 4164, 4165, 4166, 4167,
	0, 2873, 2874, 2875, 2892, 2893, 2894, 0, 4162, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 2041, 2017,
	0, 1684, 2895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2250, 2250, 0, 2250, 4173, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 2027, 0, 208,
	2495, 114, 0, 0, 118, 0, 0, 2241, 2241, 2065,
	2241, 0, 0, 0, 0, 0, 1747, 4171, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 0, 2885,
	0, 2032, 0, 0, 0, 0, 271, 309, 2881, 0,
	0, 309, 0, 0, 1030, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 4159, 1245,
	0, 0, 2492, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 3776, 0, 0, 1843, 0, 2032, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 5378, 0, 0,
	309, 0, 2062, 0, 0, 0, 2497, 309, 171, 0,
	2886, 2887, 2888, 2889, 0, 0, 0, 0, 0, 0,
	2880, 0, 0, 309, 214, 309, 3805, 0, 0, 793,
	0, 309, 272, 0, 0, 1873, 0, 0, 0, 0,
	0, 3818, 0, 883, 0, 0, 0, 1035, 0, 0,
	265, 0, 0, 0, 0, 1402, 4174, 1402, 2062, 266,
	0, 0, 2038, 209, 0, 0, 0, 0, 213, 0,
	0, 0, 2498, 0, 0, 3845, 0, 0, 0, 1479,
	309, 4169, 4164, 4165, 4166, 4167, 0, 0, 2033, 212,
	0, 0, 0, 2250, 0, 883, 0, 0, 0, 0,
	0, 0, 309, 2890, 2891, 0, 0, 2502, 0, 0,
	2665, 0, 0, 0, 0, 309, 309, 2241, 309, 0,
	309, 0, 309, 4173, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2883, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 2702,
	0, 0, 2703, 0, 2704, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	309, 309, 309, 309, 0, 0, 0, 0, 0, 0,
	2490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2500, 0, 0, 1701, 0, 0, 0, 0, 863,
	0, 0, 0, 883, 0, 0, 0, 0, 2496, 0,
	0, 0, 2064, 0, 0, 0, 0, 3365, 0, 0,
	0, 0, 0, 3607, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2493,
	0, 0, 2250, 0, 0, 0, 2491, 0, 0, 0,
	0, 0, 2029, 2025, 2501, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 1701, 0,
	0, 0, 0, 0, 0, 1680, 5379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2863, 0,
	0, 0, 0, 0, 0, 2884, 3025, 3025, 0, 0,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 2494, 0,
	0, 0, 5380, 0, 0, 0, 0, 0, 0, 0,
	3721, 3722, 0, 3739, 3740, 3741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3818,
	0, 0, 0, 0, 0, 0, 2287, 0, 2009, 2010,
	793, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 2040, 0, 793, 0, 0, 0, 0, 0,
	2012, 309, 0, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 3736, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 309, 1489, 0, 2011, 0,
	0, 0, 309, 0, 309, 1722, 0, 309, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 1701,
	1701, 1701, 1701, 0, 0, 2870, 2871, 2872, 2896, 2882,
	2876, 0, 2878, 2879, 2877, 2864, 2865, 2866, 2867, 2868,
	2869, 0, 0, 0, 0, 0, 0, 0, 3025, 3025,
	3025, 3025, 84, 0, 309, 1489, 0, 309, 810, 0,
	810, 4203, 0, 0, 1571, 0, 0, 309, 0, 0,
	309, 85, 0, 4978, 3195, 0, 0, 4223, 0, 0,
	309, 309, 3727, 0, 0, 309, 0, 309, 0, 90,
	0, 0, 1479, 0, 309, 309, 0, 1489, 1489, 3211,
	2034, 2035, 2036, 2037, 309, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 2250, 0,
	0, 0, 0, 0, 0, 2557, 0, 0, 0, 3744,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 4247, 0, 0, 0, 0, 890, 890,
	0, 0, 890, 890, 0, 2582, 3743, 0, 0, 5034,
	4263, 3254, 0, 0, 2039, 2041, 2009, 2010, 0, 0,
	0, 0, 0, 309, 1029, 1245, 1245, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 122,
	2040, 0, 0, 2026, 2027, 106, 119, 0, 2012, 0,
	3737, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 0, 3721, 3722, 883, 3739, 3740,
	3741, 1657, 0, 0, 0, 0, 0, 2065, 2032, 0,
	0, 0, 0, 0, 0, 0, 2011, 1747, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 107, 0, 0, 0, 2250, 2576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3378, 0,
	0, 2062, 0, 0, 3384, 1722, 0, 0, 0, 2241,
	0, 0, 0, 0, 0, 4356, 3736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 2613, 309, 3440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2713, 2714, 0,
	0, 0, 0, 2626, 2628, 0, 0, 0, 2034, 2035,
	2036, 2037, 0, 1238, 0, 0, 1722, 2632, 2017, 309,
	0, 0, 3384, 0, 0, 0, 0, 0, 0, 0,
	309, 5182, 2644, 2645, 2646, 0, 0, 3738, 0, 2038,
	0, 3486, 0, 0, 0, 2250, 0, 0, 0, 1268,
	124, 3254, 0, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 1035, 3254, 0, 2033, 0, 3727, 0, 2241,
	3151, 0, 2039, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 5217, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 2027, 0, 0, 309, 1479, 309, 0, 0,
	0, 0, 5239, 0, 0, 0, 0, 3559, 309, 0,
	0, 1479, 0, 1479, 0, 1479, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 2032, 0, 0, 0,
	0, 3743, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 114, 0, 0, 118, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 309, 309, 309, 1479, 0, 0,
	1479, 0, 0, 309, 0, 3737, 0, 271, 309, 0,
	0, 0, 0, 0, 0, 1030, 0, 3733, 3734, 3735,
	0, 166, 0, 0, 3732, 3730, 3731, 3723, 3724, 3725,
	3726, 3728, 3729, 0, 0, 0, 0, 2062, 0, 309,
	0, 2250, 0, 0, 0, 0, 0, 309, 0, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 273, 0, 0, 0, 2241, 0, 0, 0, 1202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 1223, 0, 0, 0, 2062, 0, 0, 171,
	0, 0, 1443, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 1701, 1701, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 1484,
	266, 0, 0, 1390, 209, 3025, 3025, 0, 0, 213,
	0, 0, 1443, 0, 0, 1443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 3738, 2250, 0, 1722, 0, 0, 0, 1484,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 1657, 0, 0, 0, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 1701, 1701, 1701,
	1701, 1701, 1701, 1701, 1701, 1701, 1701, 1701, 1701, 1701,
	1701, 1701, 1701, 1701, 1701, 1701, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 3025, 3025, 3025, 3025, 3025,
	3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025, 3025,
	3025, 3025, 3025, 3025, 3025, 0, 3025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1666, 2029, 2025, 0,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0,
	0, 0, 0, 0, 0, 2009, 2010, 0, 0, 0,
	0, 0, 0, 4712, 0, 0, 0, 1245, 0, 0,
	309, 0, 0, 0, 0, 1657, 0, 0, 1680, 2040,
	0, 0, 3733, 3734, 3735, 0, 0, 2012, 0, 3732,
	3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 0, 0,
	0, 0, 0, 4740, 0, 0, 0, 309, 0, 0,
	0, 0, 793, 0, 2009, 2010, 2065, 793, 0, 0,
	793, 0, 0, 793, 793, 2011, 0, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 2031, 309, 2040, 0,
	0, 0, 0, 0, 0, 2028, 2012, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 1722, 0, 0, 3721, 3722, 0, 3739,
	3740, 3741, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3636, 0, 0, 3359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 309, 309, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3736, 0, 0,
	0, 0, 0, 0, 0, 3254, 3254, 309, 1657, 3898,
	3901, 0, 0, 0, 0, 0, 3254, 0, 2212, 0,
	0, 0, 1680, 0, 0, 0, 0, 3254, 2212, 0,
	3254, 2212, 0, 1484, 2212, 0, 0, 3898, 0, 0,
	0, 2039, 2041, 0, 0, 0, 2017, 0, 0, 309,
	309, 3901, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 2027, 3901, 0, 309, 0, 3974, 0, 3974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 1680,
	0, 1680, 0, 0, 0, 0, 0, 0, 3727, 0,
	2039, 2041, 0, 0, 0, 2032, 0, 0, 3529, 0,
	0, 1571, 3254, 0, 3254, 0, 4010, 3254, 3901, 3536,
	0, 3254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4028, 3901, 0, 0, 0, 0, 0,
	0, 4970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3901, 0, 0, 883, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4970, 0, 2062, 0, 0, 0,
	1479, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 3737, 0, 4073, 0,
	0, 4078, 3254, 0, 124, 309, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 2787, 0, 0,
	0, 0, 0, 0, 0, 2062, 2038, 0, 0, 309,
	0, 0, 0, 0, 3486, 0, 0, 1479, 0, 309,
	0, 0, 3254, 0, 793, 0, 0, 0, 0, 0,
	0, 3254, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 1657, 2062, 0, 0,
	0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 2787, 0, 0, 0, 0, 0, 0,
	4192, 0, 0, 0, 0, 0, 2046, 2040, 0, 0,
	0, 2033, 0, 0, 0, 2012, 0, 124, 0, 124,
	2064, 124, 0, 4199, 2009, 2010, 2059, 1722, 0, 0,
	0, 1479, 309, 0, 309, 0, 2009, 2010, 0, 0,
	1479, 0, 0, 1479, 2065, 0, 0, 0, 2040, 0,
	0, 0, 0, 2011, 0, 0, 2012, 0, 0, 0,
	2040, 0, 0, 3738, 2031, 0, 0, 0, 2012, 1657,
	0, 0, 309, 2028, 1223, 124, 124, 0, 0, 2064,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 124, 0, 124, 2011, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 2031, 2011, 124, 0, 124,
	0, 0, 0, 0, 2028, 0, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	0, 4268, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 0, 0, 2017, 1657, 0, 0, 0,
	0, 0, 0, 3629, 0, 124, 0, 0, 0, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 0, 0, 2017, 0, 2050, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 2017, 2039,
	2041, 0, 0, 3733, 3734, 3735, 0, 0, 309, 309,
	3732, 3730, 3731, 3723, 3724, 3725, 3726, 3728, 3729, 2056,
	0, 2057, 0, 0, 2045, 0, 1680, 1680, 2026, 2027,
	0, 0, 0, 793, 793, 0, 0, 0, 0, 0,
	2039, 2041, 0, 0, 0, 0, 0, 0, 2048, 0,
	0, 0, 2039, 2041, 0, 1202, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	2091, 0, 0, 0, 2032, 1680, 0, 0, 0, 1657,
	0, 0, 2058, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2582,
	0, 0, 0, 2047, 1701, 0, 2489, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 883, 0, 2499, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 4472, 0, 2038, 4474, 0, 0, 4476, 0,
	0, 0, 1657, 0, 0, 0, 3974, 0, 0, 0,
	1701, 2179, 0, 2182, 0, 124, 0, 0, 0, 0,
	2033, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 2495, 0, 0, 3025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 0, 3384, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 3901,
	0, 309, 0, 2033, 0, 810, 810, 1489, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 2492, 0,
	0, 0, 0, 0, 0, 309, 3486, 0, 0, 3486,
	2212, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 4573, 0, 3384, 0, 0, 309, 0, 2064,
	0, 309, 0, 309, 0, 0, 0, 0, 309, 0,
	0, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2497, 0, 0, 0, 0, 3254, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 1035,
	3254, 0, 0, 0, 0, 0, 0, 4071, 4072, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0, 1680,
	0, 4683, 2488, 309, 0, 4682, 0, 3901, 0, 0,
	3211, 0, 1701, 0, 0, 0, 0, 0, 2498, 0,
	0, 0, 0, 0, 0, 2029, 2025, 0, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 84,
	4151, 3025, 0, 2013, 2014, 2015, 2016, 2018, 2019, 0,
	0, 2485, 4176, 2502, 2045, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	0, 2045, 0, 0, 4675, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 3025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 2483, 2045, 0, 0, 1245, 99, 0,
	2045, 0, 3025, 0, 0, 0, 2490, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 2500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 2040, 0, 1722, 2496, 309, 0, 0, 0, 2012,
	0, 1029, 0, 2484, 0, 0, 0, 0, 0, 309,
	2059, 0, 0, 0, 55, 0, 122, 0, 0, 0,
	0, 0, 106, 119, 0, 2493, 0, 0, 2065, 0,
	0, 0, 2491, 1489, 1489, 1489, 0, 2011, 0, 0,
	2501, 0, 0, 0, 0, 0, 0, 0, 2031, 1489,
	1489, 1489, 0, 309, 1489, 2045, 0, 2028, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 3254,
	3254, 0, 3898, 0, 2045, 3974, 3254, 0, 0, 2045,
	0, 0, 0, 1223, 4791, 1223, 4791, 1722, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3254, 0,
	2212, 0, 2009, 2010, 3898, 0, 1722, 1722, 309, 3901,
	0, 0, 0, 0, 2494, 0, 0, 0, 0, 0,
	0, 0, 3901, 0, 309, 3901, 2040, 309, 0, 0,
	3974, 0, 3974, 0, 2012, 0, 3974, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 2045, 0, 0, 0, 2017,
	0, 2045, 0, 0, 0, 3254, 0, 3254, 309, 0,
	0, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	3384, 0, 2011, 4860, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 0, 0,
	3254, 3254, 0, 0, 0, 0, 3486, 3486, 0, 0,
	0, 0, 0, 3898, 0, 2165, 0, 0, 0, 1657,
	0, 0, 2026, 2027, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 111, 0,
	0, 0, 2048, 0, 0, 0, 0, 1484, 0, 1202,
	0, 0, 1202, 1202, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 1657, 2017, 0, 0, 0, 0, 0,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 1657, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 114,
	2045, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	2848, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 2039, 2041,
	1223, 0, 0, 0, 271, 0, 0, 0, 2062, 0,
	2085, 0, 1030, 0, 2085, 0, 0, 0, 166, 0,
	0, 0, 2582, 0, 0, 0, 0, 0, 0, 3029,
	0, 0, 0, 0, 0, 3410, 0, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 4504, 0, 2045,
	0, 1245, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 2032, 1245, 0, 0, 4520, 4521, 2038, 3400,
	3398, 0, 0, 0, 0, 0, 4523, 3402, 3404, 3394,
	0, 3254, 2212, 0, 2212, 0, 171, 4573, 1390, 0,
	0, 0, 0, 0, 2033, 0, 309, 0, 0, 0,
	1230, 0, 214, 0, 2182, 0, 5050, 0, 5050, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3420, 0, 0, 0, 2051, 0, 265, 0,
	0, 0, 0, 883, 0, 0, 0, 266, 0, 0,
	0, 209, 0, 2062, 3974, 1722, 213, 0, 1722, 0,
	1479, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 4609, 3901,
	0, 309, 0, 2626, 4615, 4616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 4573, 0,
	0, 4791, 0, 0, 1722, 0, 0, 0, 3254, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 5146, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 3396, 1657, 309, 309, 0,
	0, 0, 0, 0, 0, 0, 3412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 4268, 0, 0, 0, 0, 0, 0, 1484, 0,
	3411, 3401, 3399, 3403, 3405, 3395, 3397, 3413, 3415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3407, 3409,
	3417, 0, 0, 0, 0, 0, 3974, 5208, 0, 0,
	0, 0, 0, 0, 4573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4791, 3421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4791,
	0, 0, 2582, 0, 0, 0, 0, 0, 0, 0,
	0, 4719, 4720, 0, 0, 0, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 309, 0, 0, 0,
	0, 0, 0, 1484, 0, 0, 0, 0, 1657, 0,
	84, 1657, 0, 0, 0, 810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 4791, 4791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 4791, 124, 309, 4791, 124, 0, 124, 0,
	0, 0, 0, 0, 0, 2212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1722, 0,
	0, 3414, 0, 0, 0, 0, 0, 0, 0, 99,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	124, 1489, 1489, 124, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 5338, 0, 0, 0,
	0, 0, 1029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5050, 0, 0, 309, 0, 122, 0, 0,
	0, 0, 0, 106, 119, 3422, 0, 0, 0, 0,
	0, 2626, 0, 2045, 3406, 3408, 0, 0, 3416, 3254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 4268, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 4941, 2045, 4943,
	4944, 4945, 1657, 4947, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 0,
	0, 0, 0, 0, 2045, 0, 2045, 2045, 2045, 2045,
	0, 0, 0, 0, 0, 0, 0, 0, 3029, 3029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 4573, 2045, 0, 0, 4998, 0, 0, 2848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1230, 1230, 1230, 0,
	2085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	3254, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	4791, 0, 4791, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 1697, 2045, 0, 0, 2045, 0, 0,
	2045, 85, 0, 2045, 0, 0, 0, 0, 0, 2045,
	2045, 2045, 2045, 2045, 2045, 2045, 0, 0, 208, 90,
	114, 0, 1724, 118, 1730, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3254,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 5090,
	0, 0, 0, 0, 0, 271, 3384, 0, 0, 0,
	0, 99, 0, 1030, 924, 0, 0, 0, 0, 166,
	3254, 0, 0, 0, 0, 2045, 0, 0, 3742, 0,
	3029, 3029, 3029, 3029, 3384, 0, 2045, 0, 2045, 0,
	935, 0, 0, 2045, 0, 0, 1831, 0, 1836, 0,
	0, 0, 0, 0, 1029, 0, 0, 0, 0, 273,
	0, 933, 1850, 0, 1855, 0, 0, 55, 0, 122,
	0, 0, 0, 0, 0, 106, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 937, 0, 171, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 265,
	1390, 0, 0, 1921, 0, 0, 1927, 0, 266, 929,
	0, 107, 209, 0, 1657, 0, 945, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 1657, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 2040, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 936, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 0, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 931, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1657, 0,
	1657, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	2626, 0, 0, 0, 124, 124, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 0, 0, 0, 0, 2017,
	208, 0, 114, 0, 0, 118, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 124, 124, 0, 124, 0,
	0, 0, 0, 0, 2159, 2159, 2159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 2050, 0, 0, 1030, 2060, 0, 926, 0,
	0, 166, 0, 2039, 2041, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 2057, 0, 0, 0, 0,
	0, 930, 2026, 2027, 0, 0, 1657, 2045, 2045, 0,
	2045, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 171,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 940,
	0, 0, 0, 272, 0, 0, 0, 0, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 2058, 0, 0, 0,
	266, 0, 1390, 0, 209, 1223, 0, 0, 1230, 213,
	0, 0, 0, 0, 1657, 0, 0, 2047, 0, 124,
	124, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	1823, 925, 0, 0, 0, 0, 0, 938, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 927, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 0, 0, 0, 2045, 2045, 0, 3029, 3029, 0,
	0, 2045, 0, 0, 2033, 942, 943, 0, 939, 0,
	0, 3742, 3742, 0, 0, 2045, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 2045, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 2051, 0, 0, 2045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 0, 3029, 3029, 3029,
	3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029,
	3029, 3029, 3029, 3029, 3029, 3029, 3029, 0, 3029, 3742,
	3742, 3742, 3742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 124, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 1390, 1390, 0, 0, 3696, 0, 0, 0, 3697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 2010, 0, 0, 0,
	0, 2053, 2054, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2689, 0, 0, 2040,
	0, 0, 0, 0, 0, 2045, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2719, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 2045, 2045, 0, 0,
	0, 2760, 0, 2764, 0, 0, 0, 0, 0, 0,
	2778, 0, 0, 1230, 0, 0, 0, 0, 0, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 0, 2830, 0, 2832, 2833,
	2834, 2835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 2859, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	2910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2940, 2943, 2946, 2949,
	0, 0, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 0,
	2050, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 2039, 2041, 0, 0, 0, 0, 0, 0, 0,
	3021, 0, 3032, 3034, 3039, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 2045, 2045, 0, 0, 2045,
	3742, 3742, 2045, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	2045, 2045, 2045, 2045, 0, 0, 2062, 0, 0, 2045,
	0, 2045, 0, 0, 3742, 3742, 3742, 3742, 3742, 3742,
	3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,
	3742, 3742, 3742, 3742, 0, 0, 0, 3742, 0, 0,
	2045, 2045, 0, 0, 0, 0, 0, 0, 0, 843,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 0, 0, 0, 0, 2038, 0, 0, 0,
	827, 0, 0, 0, 0, 828, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	1390, 0, 2033, 0, 0, 0, 0, 0, 1390, 0,
	0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 0, 0, 0, 0, 829, 0,
	0, 0, 0, 0, 2051, 0, 2046, 2040, 0, 830,
	0, 0, 2045, 0, 0, 2012, 0, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	2045, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 849, 0, 0, 0, 0, 0,
	0, 2045, 0, 0, 2031, 0, 0, 0, 0, 0,
	308, 308, 308, 2028, 0, 0, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 833, 825, 958, 0, 0, 3000, 3001, 3002,
	3003, 2996, 2997, 2998, 2999, 0, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 834, 124, 0, 0,
	0, 826, 0, 958, 0, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 858, 0,
	3443, 3444, 0, 3446, 0, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2976, 2977, 2978,
	2979, 0, 0, 124, 0, 0, 0, 0, 2050, 0,
	2045, 0, 2060, 0, 0, 0, 0, 0, 124, 2039,
	2041, 2988, 2989, 2990, 2991, 2984, 2985, 2986, 2987, 2992,
	2993, 2994, 2995, 0, 0, 0, 0, 0, 0, 2056,
	845, 2057, 124, 0, 0, 0, 0, 0, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 2045, 2045, 0,
	0, 843, 2045, 2045, 0, 0, 2045, 2045, 2048, 0,
	0, 2045, 0, 0, 0, 2045, 0, 0, 0, 0,
	2045, 0, 827, 2032, 0, 0, 0, 828, 0, 0,
	0, 0, 1403, 0, 0, 3029, 0, 3570, 0, 0,
	0, 0, 0, 0, 0, 2972, 2973, 2974, 2975, 2980,
	2981, 2982, 2983, 0, 0, 0, 0, 855, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 837, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 2067, 0, 0, 0, 0, 0,
	0, 3029, 0, 0, 0, 0, 849, 0, 1230, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 832,
	0, 853, 854, 0, 851, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 2038, 0, 839, 0, 0, 0,
	0, 3630, 3631, 0, 833, 825, 0, 3637, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 3651, 3652, 834, 0,
	0, 0, 2910, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 840, 0, 847, 0, 0, 0,
	858, 0, 2051, 2045, 2045, 841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 842, 1315, 0, 0, 0, 850, 3661, 848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 859, 0, 3675, 0, 0, 0, 0, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	3687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	2045, 2045, 845, 0, 0, 2848, 0, 0, 0, 0,
	2045, 2045, 3742, 3029, 0, 0, 0, 0, 0, 2045,
	0, 0, 2045, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0,
	0, 2906, 0, 0, 0, 2907, 0, 0, 3742, 3029,
	0, 3039, 3039, 3039, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 2045, 0, 0, 2159, 0,
	0, 0, 0, 2045, 3029, 0, 0, 0, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 2045, 837, 2045, 0, 3780, 0, 0,
	0, 0, 0, 0, 0, 2045, 0, 0, 980, 0,
	0, 0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 983,
	124, 0, 0, 0, 984, 0, 0, 2046, 2040, 0,
	857, 0, 0, 0, 0, 0, 2012, 0, 838, 0,
	0, 0, 0, 853, 854, 0, 851, 2059, 0, 0,
	0, 0, 0, 0, 0, 846, 0, 0, 839, 0,
	0, 0, 0, 0, 0, 2065, 0, 985, 0, 999,
	0, 0, 0, 0, 2011, 0, 1407, 0, 0, 124,
	0, 0, 124, 0, 0, 2031, 3742, 0, 0, 0,
	0, 0, 0, 0, 2028, 986, 0, 0, 0, 0,
	987, 0, 0, 0, 0, 0, 840, 0, 847, 0,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 0,
	2045, 3742, 1230, 1008, 2045, 0, 0, 0, 0, 0,
	988, 0, 0, 842, 1230, 0, 0, 0, 850, 0,
	0, 0, 0, 3742, 0, 308, 1006, 0, 0, 0,
	0, 0, 0, 859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 844, 308, 308, 0, 0, 308,
	0, 981, 979, 0, 0, 3931, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1010, 0, 0, 0, 0, 858, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 124, 2050,
	0, 0, 0, 2060, 0, 0, 0, 0, 3992, 3993,
	2039, 2041, 0, 0, 308, 0, 308, 308, 0, 0,
	308, 308, 0, 0, 0, 308, 0, 0, 0, 0,
	2056, 0, 2057, 0, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1009,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 1004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 308, 308, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 52, 51, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 308, 308, 2058, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 2047, 0, 0, 1003, 0, 0,
	0, 0, 0, 73, 0, 2062, 0, 0, 990, 0,
	54, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 56, 74, 0, 2038, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 63, 0, 0,
	308, 0, 5599, 0, 0, 0, 0, 857, 0, 0,
	55, 2033, 122, 0, 0, 0, 0, 0, 106, 119,
	978, 0, 0, 1000, 0, 0, 308, 75, 0, 0,
	0, 0, 2045, 0, 0, 992, 0, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 998, 0, 0, 2778, 0, 0,
	0, 0, 0, 0, 4221, 4222, 0, 0, 4225, 2064,
	0, 0, 4228, 993, 107, 0, 0, 994, 1013, 0,
	1012, 4232, 0, 0, 995, 0, 0, 0, 0, 0,
	4239, 0, 0, 0, 0, 3780, 0, 0, 0, 0,
	996, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	4252, 1014, 0, 1011, 0, 0, 0, 0, 0, 0,
	859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4275, 4276, 0, 4277, 4278, 4279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 4285, 0, 0, 0, 4287, 76, 0, 0, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4681, 0, 4316, 4317,
	0, 0, 0, 0, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 0, 0, 4328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 2040,
	0, 4337, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 2059, 0,
	2181, 0, 1403, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 59, 0, 0, 0, 2065, 0, 0, 1407,
	0, 0, 308, 2181, 308, 2011, 1407, 0, 0, 62,
	0, 0, 958, 0, 65, 0, 2031, 0, 0, 0,
	0, 958, 0, 0, 77, 2028, 0, 0, 0, 0,
	0, 0, 64, 208, 0, 114, 0, 0, 118, 0,
	5465, 0, 0, 0, 60, 0, 0, 0, 174, 0,
	0, 1407, 0, 0, 0, 308, 61, 0, 0, 0,
	0, 4408, 308, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 4426,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 172, 0, 0, 1407, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	1407, 0, 0, 4457, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 0, 2060, 0, 4485, 4486, 214, 0,
	0, 2039, 2041, 0, 0, 0, 272, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 2057, 265, 0, 0, 0, 0, 0,
	2026, 2027, 0, 266, 0, 0, 0, 209, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2159, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 958, 0, 2047, 0, 0, 0, 2159,
	0, 0, 0, 0, 0, 0, 2062, 0, 4606, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 2038, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 308, 0, 4653,
	4654, 0, 2033, 308, 0, 4658, 4659, 0, 0, 0,
	4662, 4663, 0, 0, 0, 0, 0, 0, 4667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4671,
	0, 0, 0, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4676, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 1407, 0, 0, 0,
	2064, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 958, 308, 0,
	308, 0, 308, 0, 308, 0, 308, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 308, 308, 308, 308, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4237, 0, 0,
	0, 0, 1230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4879, 4880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 1407, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 958, 0, 958, 0, 0, 308,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 4965, 4966, 4967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 2778, 0, 0, 4976, 4977, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 958,
	0, 0, 0, 0, 0, 4985, 4988, 0, 0, 308,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 308, 0, 0, 1407, 308, 1407, 308,
	1407, 0, 0, 0, 0, 0, 308, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 1407, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 1407, 1407, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5051, 0, 0, 0,
	0, 0, 0, 0, 0, 5059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	5067, 0, 0, 1230, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5079, 0, 308, 5081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5091, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2046, 2040, 0, 308, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2254, 2254, 1407, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	304, 304, 789, 0, 0, 0, 0, 0, 958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 0, 0, 5216,
	0, 2017, 0, 5220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 308, 1407, 308,
	0, 0, 0, 0, 2050, 0, 0, 1407, 2060, 0,
	308, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 308, 308, 308, 308, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 2032,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2778, 0, 0, 0, 0,
	0, 308, 0, 0, 4988, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2254, 0, 0, 0,
	5418, 5418, 5418, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 2051, 0,
	5444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 2046, 2040, 0, 0, 0, 0, 0, 0,
	0, 2012, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 5418, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5530, 1403, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 0, 0, 0, 0, 1403,
	0, 3699, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2036, 2037, 1407, 314, 1407, 0, 0,
	0, 2017, 0, 1407, 0, 0, 0, 0, 0, 2181,
	0, 0, 0, 0, 1407, 1407, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 5418, 5588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 950, 0, 2026, 2027, 0, 0, 0, 308,
	0, 0, 0, 308, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 308, 308, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1465, 0, 1465, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3056, 0, 0, 0, 0,
	0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 2046, 2040, 0, 0, 0,
	3054, 0, 0, 0, 2012, 3058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 2033, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 3059, 0, 0,
	1678, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 2051, 308,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 958, 3060, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3061, 0, 0,
	0, 308, 0, 0, 3062, 0, 0, 0, 0, 0,
	0, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 0, 0, 0, 3063, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 0, 2017, 0, 1407, 1407, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 1407, 0, 3653, 0, 2050, 0, 3064,
	0, 2060, 0, 0, 308, 0, 308, 0, 2039, 2041,
	0, 1407, 0, 0, 0, 0, 0, 3065, 0, 0,
	0, 0, 0, 1407, 0, 0, 1407, 3066, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	1951, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 3067, 0, 0, 2254, 2048, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 3068, 2254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 310,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 0, 3069, 3070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 3071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3076, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2197, 0, 0, 0,
	0, 3073, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 2207, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3074, 0, 0, 0, 0, 1407, 0,
	1407, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 1407, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1465, 0, 0, 0, 0,
	0, 0, 1678, 0, 0, 3075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 1407, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 308, 0, 308, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	0, 1692, 0, 0, 0, 0, 0, 0, 1692, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2254, 2254, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2254, 2254, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 1407, 0, 0, 0, 2589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2601, 0, 2601, 0, 0,
	0, 0, 0, 2608, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 0, 1403, 0, 0,
	0, 0, 2636, 0, 0, 0, 2254, 0, 2254, 0,
	0, 2181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2673, 0,
	2675, 0, 2677, 0, 2679, 0, 2680, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 0, 2181, 0,
	0, 2709, 2710, 2711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 1407, 1407, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 1407, 1407, 0, 0, 0, 0, 0, 0, 0,
	2222, 1407, 0, 0, 0, 0, 0, 0, 0, 2222,
	0, 0, 0, 310, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 310, 310, 2254, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 1407, 1407,
	1407, 0, 310, 1577, 310, 310, 0, 1574, 310, 310,
	1577, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 1407, 0, 0, 0, 0, 0,
	1407, 310, 1407, 0, 0, 0, 0, 3119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 0, 0, 0, 0,
	0, 0, 310, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 1577, 310,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 3197, 1465, 0, 0, 0, 1465, 0, 1465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2589, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 1692,
	1692, 1407, 0, 0, 1577, 1407, 1407, 0, 1407, 0,
	1574, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 310, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 1407, 0,
	0, 0, 1284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 1692, 0, 0, 0, 0,
	0, 0, 0, 2181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	1407, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 0, 1692, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 1407, 0, 0,
	0, 0, 1692, 1692, 0, 0, 0, 0, 0, 308,
	308, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 1692, 0,
	0, 1692, 1692, 1692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 0, 0, 0,
	0, 3462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2181, 2589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 0,
	0, 0, 0, 0, 310, 0, 0, 3534, 1574, 0,
	0, 0, 0, 2181, 2181, 1577, 1407, 0, 0, 0,
	310, 310, 310, 0, 0, 0, 0, 3546, 0, 3549,
	310, 0, 0, 0, 2181, 0, 308, 2181, 0, 310,
	0, 0, 0, 0, 0, 1577, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 2009, 2010,
	310, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 1407,
	0, 1407, 0, 0, 0, 3588, 1678, 3590, 1678, 0,
	0, 1574, 2040, 0, 0, 3597, 0, 0, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 1465, 1407, 0, 0, 0, 0, 1577, 2011, 3626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 1574, 0, 0, 0, 0, 2254, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 1407, 0, 0, 1407, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 1407, 0,
	0, 0, 0, 2050, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 2039, 2041, 0, 310, 0, 1577,
	1577, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 2254, 0, 0, 1577, 0, 0, 0,
	310, 1574, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 2181, 0, 0, 0, 2032, 310,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 310, 0, 0, 0, 0,
	1407, 310, 0, 0, 0, 0, 0, 2058, 0, 0,
	1577, 0, 1577, 0, 1577, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1577, 1577, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 1574, 0, 1577, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 1692, 0, 1577, 0,
	0, 1577, 1577, 1577, 0, 2254, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 1407, 1407, 0,
	0, 3828, 0, 0, 0, 310, 310, 0, 310, 0,
	310, 0, 310, 0, 310, 0, 0, 0, 1407, 2038,
	0, 1407, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	310, 310, 310, 310, 0, 0, 0, 0, 0, 1465,
	0, 0, 0, 1678, 1678, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 3894,
	0, 0, 0, 2064, 0, 0, 0, 0, 1577, 1692,
	0, 1692, 0, 0, 0, 1407, 0, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1692, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3950, 3952, 0, 0, 2589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 2049, 0, 0, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 1577, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2046, 2040, 0,
	0, 0, 1577, 0, 0, 0, 2012, 1693, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 1577, 0,
	1693, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 310, 0, 4100, 0, 0,
	0, 0, 310, 0, 310, 2031, 0, 310, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	310, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	310, 310, 0, 0, 0, 310, 0, 310, 0, 0,
	0, 0, 0, 0, 310, 310, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 310, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4205, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	2039, 2041, 0, 0, 4219, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	2056, 0, 2057, 0, 0, 0, 0, 310, 0, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 310, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 2040, 1577, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 2059, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 2065, 0, 2047, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 310, 0, 0, 0,
	0, 2028, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 1577, 0, 2034, 2035, 2036, 2037, 1577, 0, 0,
	0, 0, 0, 2017, 0, 310, 0, 0, 1577, 1577,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 0, 2064,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 310, 310, 310, 310, 1574, 0, 0,
	0, 0, 0, 310, 0, 0, 2048, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 310, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3698, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2589, 0, 0, 0, 0, 0, 0,
	0, 2047, 1692, 0, 1692, 0, 0, 0, 1574, 0,
	0, 0, 2062, 0, 0, 950, 1692, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4567, 0, 0,
	0, 0, 0, 0, 0, 1693, 1693, 0, 0, 0,
	0, 0, 0, 2589, 0, 2589, 1575, 0, 0, 0,
	4588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 0, 1692, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4633, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 1574, 0, 0, 1693, 0, 1693, 0,
	1693, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1693, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 1693, 1693, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3695, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 310, 310, 0, 1574, 0, 0, 0, 0, 0,
	4811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 2222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	310, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 2589, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4921,
	0, 0, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 1692, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 1692, 310, 0, 0,
	0, 0, 1577, 0, 1577, 1692, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 310, 1577, 1577, 0, 0,
	1577, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 1692, 0, 0, 1575, 0, 0,
	0, 1577, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 5036, 0,
	0, 0, 1692, 1692, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 1692, 0,
	0, 0, 0, 0, 1692, 0, 1574, 0, 0, 0,
	1577, 0, 310, 1577, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 310, 2589, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 1577, 0, 2601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 2040, 0, 0, 1577,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 0, 0, 5172,
	1678, 0, 2011, 0, 0, 0, 0, 0, 0, 1574,
	1574, 0, 1574, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	1692, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 1693, 0, 1693, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 310, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2050, 1574, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 2039, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5294, 0, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 1692, 0, 0, 0, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5352, 0, 0,
	0, 2058, 310, 0, 0, 0, 1692, 1692, 1692, 1692,
	1692, 1692, 1692, 0, 0, 0, 1577, 1577, 0, 0,
	0, 0, 2047, 0, 1577, 0, 0, 0, 0, 0,
	1574, 0, 0, 2062, 0, 1577, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 5400, 0, 0, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 1574, 0, 1692, 0, 310, 0, 0,
	0, 310, 0, 310, 0, 0, 0, 0, 310, 2033,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 2051, 1577, 1577, 1577, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 1577, 0,
	0, 0, 0, 310, 1577, 0, 1577, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 1692, 0,
	0, 1692, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3694, 0, 0, 0, 0, 1574,
	1575, 0, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	1577, 0, 1577, 0, 0, 0, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	1577, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 310, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 0, 0, 1575, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	1577, 1577, 0, 0, 1577, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 310, 2060, 0, 0,
	0, 0, 0, 0, 2039, 2041, 1577, 310, 1693, 0,
	1693, 1577, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 1693, 1693, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 1577, 1577, 1577, 1577,
	1577, 1577, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 1692,
	1577, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 0, 1693, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 0, 1577, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 2051, 1577, 0,
	0, 1577, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 310, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	1575, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 1693, 0, 0, 0, 0, 0, 0,
	1693, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 1693, 1693, 2017, 0, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 2050, 2046, 2040, 0,
	2060, 0, 0, 0, 0, 0, 2012, 2039, 2041, 1577,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 2065, 2026, 2027, 0, 0,
	1693, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 2031, 2048, 0, 0, 0,
	0, 0, 0, 1693, 2028, 0, 0, 0, 1693, 1693,
	1693, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 0, 1693, 0, 0, 0, 0, 0,
	1693, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, 1577, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 2062, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	2039, 2041, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 2057, 0, 0, 0, 0, 0, 2033, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1575, 0, 1575, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 2032, 0, 1693, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 2062, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 1575, 2028, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 1575, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 2907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 1693, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 2051, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 2046, 2040, 0, 0, 1693, 0, 2064,
	0, 0, 2012, 2050, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 2059, 2039, 2041, 0, 0, 0, 0,
	0, 0, 1693, 1693, 1693, 1693, 1693, 1693, 1693, 0,
	0, 2065, 0, 0, 2056, 0, 2057, 0, 0, 0,
	2011, 0, 0, 2026, 2027, 0, 1575, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 2032, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0,
	0, 0, 5339, 0, 0, 0, 0, 0, 0, 1575,
	0, 1693, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 0, 2047, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2050, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 2039, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 2056, 0, 2057, 0,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 1575, 0,
	0, 0, 0, 0, 1693, 2048, 0, 1693, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 1575, 0, 0, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 2038, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 0, 0, 5335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 0, 0, 0, 0, 0, 5235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733,
	1583, 1584, 1585, 328, 1586, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 1587, 738, 341, 342, 343, 344, 345,
	346, 347, 1588, 1589, 0, 348, 739, 740, 741, 1590,
	349, 350, 742, 1591, 1658, 1592, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 1593, 360, 361, 362, 359,
	363, 1594, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 1595, 372, 373, 374, 1347, 375, 376, 377, 1596,
	1597, 1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381,
	382, 1693, 383, 385, 743, 744, 1603, 388, 390, 384,
	386, 1604, 389, 387, 391, 392, 1605, 393, 394, 395,
	1606, 1607, 396, 397, 398, 1608, 399, 400, 401, 1609,
	402, 403, 404, 1610, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 1611, 315, 1612, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 1613, 424, 425,
	426, 1614, 427, 428, 1615, 1348, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	1616, 441, 751, 1617, 752, 442, 1618, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 1350, 450,
	451, 452, 1619, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 1620, 1349, 756, 461, 544,
	462, 757, 758, 1621, 759, 1622, 463, 464, 466, 1351,
	760, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 1623, 477, 479,
	478, 1624, 481, 761, 480, 1354, 482, 483, 1355, 1625,
	484, 485, 486, 487, 488, 489, 492, 1626, 1627, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1628, 317, 1358, 538, 539, 540, 541, 1629, 762, 542,
	763, 545, 546, 1630, 0, 547, 0, 548, 1631, 1632,
	550, 551, 552, 1633, 1634, 553, 554, 764, 1359, 555,
	1360, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 1635, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 1636, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	1637, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 1638, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 1639, 644, 645,
	643, 646, 647, 648, 1640, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 1641, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 1642, 681, 682, 0, 676,
	667, 1643, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 1644, 691, 776, 777, 778, 779, 1645, 703, 1646,
	692, 694, 695, 696, 697, 780, 698, 781, 1647, 699,
	700, 701, 702, 693, 704, 705, 1648, 1649, 706, 707,
	709, 711, 712, 708, 710, 713, 1650, 714, 1651, 0,
	715, 716, 717, 782, 783, 784, 1652, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1653, 1654,
	1655, 1656, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 3097, 0,
	0, 0, 0, 0, 0, 0, 0, 3098, 318, 319,
	321, 320, 322, 323, 324, 325, 1578, 326, 327, 1579,
	1580, 1581, 0, 1582, 733, 1583, 1584, 1585, 328, 1586,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 1587, 738,
	341, 342, 343, 344, 345, 346, 347, 1588, 1589, 0,
	348, 739, 740, 741, 1590, 349, 350, 742, 1591, 1658,
	1592, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	1593, 360, 361, 362, 359, 363, 1594, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 1595, 372, 373, 374,
	1347, 375, 376, 377, 1596, 1597, 1599, 1598, 1600, 1601,
	1602, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 1603, 388, 390, 384, 386, 1604, 389, 387, 391,
	392, 1605, 393, 394, 395, 1606, 1607, 396, 397, 398,
	1608, 399, 400, 401, 1609, 402, 403, 404, 1610, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 1611, 315, 1612,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 1613, 424, 425, 426, 1614, 427, 428, 1615,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 1616, 441, 751, 1617, 752,
	442, 1618, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 1350, 450, 451, 452, 1619, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	1620, 1349, 756, 461, 544, 462, 757, 758, 1621, 759,
	1622, 463, 464, 466, 1351, 760, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 1623, 477, 479, 478, 1624, 481, 761, 480,
	1354, 482, 483, 1355, 1625, 484, 485, 486, 487, 488,
	489, 492, 1626, 1627, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1628, 317, 1358, 538, 539,
	540, 541, 1629, 762, 542, 763, 545, 546, 1630, 0,
	547, 0, 548, 1631, 1632, 550, 551, 552, 1633, 1634,
	553, 554, 764, 1359, 555, 1360, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	1635, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 1636, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 1637, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 1638, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 1639, 644, 645, 643, 646, 647, 648, 1640,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 1641, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	1642, 681, 682, 0, 676, 667, 1643, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 1644, 691, 776, 777,
	778, 779, 1645, 703, 1646, 692, 694, 695, 696, 697,
	780, 698, 781, 1647, 699, 700, 701, 702, 693, 704,
	705, 1648, 1649, 706, 707, 709, 711, 712, 708, 710,
	713, 1650, 714, 1651, 0, 715, 716, 717, 782, 783,
	784, 1652, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 1653, 1654, 1655, 1656, 728, 729, 786,
	730, 731, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 4246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4248,
	318, 319, 321, 320, 322, 323, 324, 325, 1578, 326,
	327, 1579, 1580, 1581, 0, 1582, 733, 1583, 1584, 1585,
	328, 1586, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	1587, 738, 341, 342, 343, 344, 345, 346, 347, 1588,
	1589, 0, 348, 739, 740, 741, 1590, 349, 350, 742,
	1591, 1658, 1592, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 1593, 360, 361, 362, 359, 363, 1594, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 1595, 372,
	373, 374, 1347, 375, 376, 377, 1596, 1597, 1599, 1598,
	1600, 1601, 1602, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 1603, 388, 390, 384, 386, 1604, 389,
	387, 391, 392, 1605, 393, 394, 395, 1606, 1607, 396,
	397, 398, 1608, 399, 400, 401, 1609, 402, 403, 404,
	1610, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 746, 747, 419, 1611,
	315, 1612, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 1613, 424, 425, 426, 1614, 427,
	428, 1615, 1348, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 1616, 441, 751,
	1617, 752, 442, 1618, 443, 444, 445, 446, 447, 448,
	449, 753, 754, 755, 543, 1350, 450, 451, 452, 1619,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 1620, 1349, 756, 461, 544, 462, 757, 758,
	1621, 759, 1622, 463, 464, 466, 1351, 760, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 1623, 477, 479, 478, 1624, 481,
	761, 480, 1354, 482, 483, 1355, 1625, 484, 485, 486,
	487, 488, 489, 492, 1626, 1627, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1628, 317, 1358,
	538, 539, 540, 541, 1629, 762, 542, 763, 545, 546,
	1630, 0, 547, 0, 548, 1631, 1632, 550, 551, 552,
	1633, 1634, 553, 554, 764, 1359, 555, 1360, 765, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 1635, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 768, 576, 769, 577, 578, 1636, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 1637, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 1638, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 771, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 1639, 644, 645, 643, 646, 647,
	648, 1640, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	1641, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 775, 677, 678,
	679, 680, 1642, 681, 682, 0, 676, 667, 1643, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 1644, 691,
	776, 777, 778, 779, 1645, 703, 1646, 692, 694, 695,
	696, 697, 780, 698, 781, 1647, 699, 700, 701, 702,
	693, 704, 705, 1648, 1649, 706, 707, 709, 711, 712,
	708, 710, 713, 1650, 714, 1651, 0, 715, 716, 717,
	782, 783, 784, 1652, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 1653, 1654, 1655, 1656, 728,
	729, 786, 730, 731, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4711, 318, 319, 321, 320,
	322, 323, 324, 325, 1578, 326, 327, 1579, 1580, 1581,
	0, 1582, 733, 1583, 1584, 1585, 328, 1586, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 1587, 738, 341, 342,
	343, 344, 345, 346, 347, 1588, 1589, 0, 348, 739,
	740, 741, 1590, 349, 350, 742, 1591, 1658, 1592, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 1593, 360,
	361, 362, 359, 363, 1594, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 1595, 372, 373, 374, 1347, 375,
	376, 377, 1596, 1597, 1599, 1598, 1600, 1601, 1602, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 1603,
	388, 390, 384, 386, 1604, 389, 387, 391, 392, 1605,
	393, 394, 395, 1606, 1607, 396, 397, 398, 1608, 399,
	400, 401, 1609, 402, 403, 404, 1610, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 1611, 315, 1612, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	1613, 424, 425, 426, 1614, 427, 428, 1615, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 1616, 441, 751, 1617, 752, 442, 1618,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 1619, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 1620, 1349,
	756, 461, 544, 462, 757, 758, 1621, 759, 1622, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1623, 477, 479, 478, 1624, 481, 761, 480, 1354, 482,
	483, 1355, 1625, 484, 485, 486, 487, 488, 489, 492,
	1626, 1627, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1628, 317, 1358, 538, 539, 540, 541,
	1629, 762, 542, 763, 545, 546, 1630, 0, 547, 0,
	548, 1631, 1632, 550, 551, 552, 1633, 1634, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 1635, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 1636, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 1637, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 1638,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	1639, 644, 645, 643, 646, 647, 648, 1640, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 1641, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 1642, 681,
	682, 0, 676, 667, 1643, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 1644, 691, 776, 777, 778, 779,
	1645, 703, 1646, 692, 694, 695, 696, 697, 780, 698,
	781, 1647, 699, 700, 701, 702, 693, 704, 705, 1648,
	1649, 706, 707, 709, 711, 712, 708, 710, 713, 1650,
	714, 1651, 0, 715, 716, 717, 782, 783, 784, 1652,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 1653, 1654, 1655, 1656, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4709, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4971, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4820, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4635, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4264, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4069, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2930, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 1569, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2542, 318, 319, 321, 320, 322, 323, 324, 325,
	1578, 326, 327, 1579, 1580, 1581, 0, 1582, 733, 1583,
	1584, 1585, 328, 1586, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 1587, 738, 341, 342, 343, 344, 345, 346,
	347, 1588, 1589, 0, 348, 739, 740, 741, 1590, 349,
	350, 742, 1591, 1658, 1592, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 1593, 360, 361, 362, 359, 363,
	1594, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	1595, 372, 373, 374, 1347, 375, 376, 377, 1596, 1597,
	1599, 1598, 1600, 1601, 1602, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 1603, 388, 390, 384, 386,
	1604, 389, 387, 391, 392, 1605, 393, 394, 395, 1606,
	1607, 396, 397, 398, 1608, 399, 400, 401, 1609, 402,
	403, 404, 1610, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 1611, 315, 1612, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 1613, 424, 425, 426,
	1614, 427, 428, 1615, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 1616,
	441, 751, 1617, 752, 442, 1618, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 1619, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 1620, 1349, 756, 461, 544, 462,
	757, 758, 1621, 759, 1622, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 1623, 477, 479, 478,
	1624, 481, 761, 480, 1354, 482, 483, 1355, 1625, 484,
	485, 486, 487, 488, 489, 492, 1626, 1627, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1628,
	317, 1358, 538, 539, 540, 541, 1629, 762, 542, 763,
	545, 546, 1630, 0, 547, 0, 548, 1631, 1632, 550,
	551, 552, 1633, 1634, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 1635, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	1636, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 1637,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 1638, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 1639, 644, 645, 643,
	646, 647, 648, 1640, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 1641, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 1642, 681, 682, 0, 676, 667,
	1643, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	1644, 691, 776, 777, 778, 779, 1645, 703, 1646, 692,
	694, 695, 696, 697, 780, 698, 781, 1647, 699, 700,
	701, 702, 693, 704, 705, 1648, 1649, 706, 707, 709,
	711, 712, 708, 710, 713, 1650, 714, 1651, 0, 715,
	716, 717, 782, 783, 784, 1652, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 1653, 1654, 1655,
	1656, 728, 729, 786, 730, 731, 732, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 1578, 326, 327, 1579, 1580, 1581, 0, 1582,
	733, 1583, 1584, 1585, 328, 1586, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 1587, 738, 341, 342, 343, 344,
	345, 346, 347, 1588, 1589, 0, 348, 739, 740, 741,
	1590, 349, 350, 742, 1591, 1658, 1592, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 1593, 360, 361, 362,
	359, 363, 1594, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 1595, 372, 373, 374, 1347, 375, 376, 377,
	1596, 1597, 1599, 1598, 1600, 1601, 1602, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 1603, 388, 390,
	384, 386, 1604, 389, 387, 391, 392, 1605, 393, 394,
	395, 1606, 1607, 396, 397, 398, 1608, 399, 400, 401,
	1609, 402, 403, 404, 1610, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 1611, 315, 1612, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 1613, 424,
	425, 426, 1614, 427, 428, 1615, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 1616, 441, 751, 1617, 752, 442, 1618, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 1350,
	450, 451, 452, 1619, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 1620, 1349, 756, 461,
	544, 462, 757, 758, 1621, 759, 1622, 463, 464, 466,
	1351, 760, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 1623, 477,
	479, 478, 1624, 481, 761, 480, 1354, 482, 483, 1355,
	1625, 484, 485, 486, 487, 488, 489, 492, 1626, 1627,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1628, 317, 1358, 538, 539, 540, 541, 1629, 762,
	542, 763, 545, 546, 1630, 0, 547, 0, 548, 1631,
	1632, 550, 551, 552, 1633, 1634, 553, 554, 764, 1359,
	555, 1360, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 1635, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 1636, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 1637, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 1638, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 1639, 644,
	645, 643, 646, 647, 648, 1640, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 1641, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 1642, 681, 682, 0,
	676, 667, 1643, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 1644, 691, 776, 777, 778, 779, 1645, 703,
	1646, 692, 694, 695, 696, 697, 780, 698, 781, 1647,
	699, 700, 701, 702, 693, 704, 705, 1648, 1649, 706,
	707, 709, 711, 712, 708, 710, 713, 1650, 714, 1651,
	0, 715, 716, 717, 782, 783, 784, 1652, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 1653,
	1654, 1655, 1656, 728, 729, 786, 730, 731, 732, 2905,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 2902, 326, 327, 0,
	0, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 2903, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 2901, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 2904, 0, 0,
	0, 0, 0, 0, 0, 1266, 2900, 0, 1224, 1264,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 271, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 273, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 1821, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 265, 728, 729, 786, 730,
	731, 732, 1240, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 2090, 2088, 0, 0, 1264, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 271, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 273, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 1821, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 265, 728, 729, 786, 730, 731, 732, 1240, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	2090, 3649, 0, 0, 1264, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 271, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 273, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 1821,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 265, 728, 729,
	786, 730, 731, 732, 1240, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 2090, 2088, 0, 0,
	1264, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 3035, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 3040, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 3036, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 3037, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 2950, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 0, 0, 0, 0, 0, 0, 0,
	0, 1266, 2948, 0, 2947, 1264, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 0, 0, 0, 0, 0, 0, 0, 0,
	1266, 2945, 0, 2944, 1264, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 1266,
	2942, 0, 2941, 1264, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	0, 0, 0, 0, 0, 0, 0, 0, 1266, 2939,
	0, 1923, 1264, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 1922, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	1229, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 1244, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 0,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 5364, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 1244, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 2780, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 2779, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 0, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 5070, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 1244, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 0, 0, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	1244, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 0, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 4600, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 2160, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 1266, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	2160, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 1266, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 4242, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 3040, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 0, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 1266, 2088, 0, 3045, 1264, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 3043, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 3031, 0, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 3020, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 318, 319, 321, 320, 322, 323, 324, 325,
	1266, 326, 327, 0, 1264, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 3018, 0, 3009, 3016, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	3012, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	3013, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 3014, 502,
	3011, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 3015, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 3010, 732, 1240, 0, 0, 0,
	0, 3006, 0, 3009, 3016, 1255, 1256, 1252, 1253, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 3012,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 3013,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 3014, 502, 3011,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 3015, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 3010, 732, 1240, 0, 0, 0, 0,
	0, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 0, 0,
	0, 0, 0, 0, 2096, 0, 1266, 0, 0, 0,
	1264, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 2759, 326, 327, 0,
	0, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 2720, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 2690, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 1928, 0, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 1856, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 1851, 0, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 704, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 1837, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 318, 319, 321, 320, 322, 323, 324, 325,
	1266, 326, 327, 0, 1264, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 704, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 1832, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 1271, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 1738, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1737, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	1732, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1731, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 1725,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 1698, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 1233, 1234, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 1237, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	1242, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 1239, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 1236, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 1243, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1240, 0, 0, 0, 0, 1669, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0,
	0, 0, 0, 0, 1233, 1234, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 1237, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 1242,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 1673, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 1239, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 1249, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 1674, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 1250, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 1236, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 1672, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	1243, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1240, 0, 0, 0, 0, 1499, 0, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0,
	0, 0, 0, 1233, 1234, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 1351, 1309, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 1358, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 704, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1240, 0, 0, 0, 0, 0, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 1235, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 1242, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 1248, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 1239, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 1249, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 1236,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 1243, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1240,
	0, 0, 0, 0, 0, 0, 1282, 1254, 1255, 1256,
	1252, 1253, 1265, 0, 1235, 0, 0, 0, 0, 0,
	0, 1233, 1234, 318, 319, 321, 320, 322, 323, 324,
	325, 1266, 326, 327, 0, 1264, 0, 0, 0, 1306,
	1270, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 1319, 0, 339,
	1326, 340, 1325, 0, 1336, 341, 342, 343, 344, 345,
	346, 347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 5417, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 1329, 383, 385, 1323, 1322, 1242, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 1248, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 1261, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 1321, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 1334,
	1335, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 1271, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 1316, 1317, 0, 1277, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	1239, 317, 1358, 538, 539, 540, 541, 1262, 1310, 542,
	1324, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 1249, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 1320, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 1250, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	1318, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 1365, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 1236, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 1330, 1331, 1332, 1333, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 1260, 699,
	700, 701, 702, 693, 5416, 705, 0, 1243, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 1327, 1364, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1240, 0,
	0, 0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252,
	1253, 1265, 0, 1235, 0, 0, 0, 0, 0, 0,
	1233, 1234, 318, 319, 321, 320, 322, 323, 324, 325,
	1266, 326, 327, 0, 1264, 0, 0, 0, 1306, 1270,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 5415, 1319, 0, 339, 1326,
	340, 1325, 0, 1336, 341, 342, 343, 344, 345, 346,
	347, 1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 5417, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	1329, 383, 385, 1323, 1322, 1242, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 1248, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 1261, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 1321, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 1334, 1335,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 1271, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	1316, 1317, 0, 1277, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 1239,
	317, 1358, 538, 539, 540, 541, 1262, 1310, 542, 1324,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 1249, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 1320, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 1250, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 1318,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 1365, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 1236, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 1330, 1331, 1332, 1333, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 1260, 699, 700,
	701, 702, 693, 5416, 705, 0, 1243, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 1327, 1364, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1240, 0, 0,
	0, 0, 0, 0, 1282, 1254, 1255, 1256, 1252, 1253,
	1265, 0, 1235, 0, 0, 0, 0, 0, 0, 1233,
	1234, 318, 319, 321, 320, 322, 323, 324, 325, 1266,
	326, 327, 0, 1264, 0, 0, 0, 1306, 1270, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 1319, 0, 339, 1326, 340,
	1325, 0, 1336, 341, 342, 343, 344, 345, 346, 347,
	1272, 1305, 1237, 348, 1366, 1367, 741, 0, 349, 350,
	1312, 0, 1293, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 4990, 377, 1296, 1294, 1295,
	1302, 1298, 1297, 1301, 378, 379, 380, 381, 382, 1329,
	383, 385, 1323, 1322, 1242, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 1248, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 1337, 1338, 419,
	1261, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	1321, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 1334, 1335, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	1344, 0, 4991, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1307, 1308, 1311, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 1316,
	1317, 0, 1277, 0, 463, 464, 466, 1351, 1309, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 1345, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 1300, 1299, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 1239, 317,
	1358, 538, 539, 540, 541, 1262, 1310, 542, 1324, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 1339,
	556, 557, 1249, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 1340, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 1320, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 4989, 622, 1250, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1303, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 1318, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 1365, 670, 671, 672, 673, 1341, 677,
	678, 679, 680, 0, 681, 682, 1236, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 1330, 1331, 1332, 1333, 0, 703, 0, 692, 694,
	695, 696, 697, 1342, 698, 1343, 1260, 699, 700, 701,
	702, 693, 704, 705, 0, 1243, 706, 707, 709, 711,
	712, 708, 710, 713, 1304, 714, 0, 0, 715, 716,
	717, 782, 1327, 1364, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1240, 0, 0, 0,
	0, 0, 0, 1282, 1254, 1255, 1256, 3615, 3616, 1265,
	0, 1235, 0, 0, 0, 0, 0, 0, 1233, 1234,
	318, 319, 321, 320, 322, 323, 324, 325, 1266, 326,
	327, 0, 1264, 0, 0, 0, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 1272,
	1305, 1237, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 1242, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 1248, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 1239, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 1249, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 1236, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 1243, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1240, 0, 0, 0, 0,
	0, 0, 1282, 1254, 1255, 1256, 3613, 3614, 1265, 0,
	1235, 0, 0, 0, 0, 0, 0, 1233, 1234, 318,
	319, 321, 320, 322, 323, 324, 325, 1266, 326, 327,
	0, 1264, 0, 0, 0, 1306, 1270, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 1319, 0, 339, 1326, 340, 1325, 0,
	1336, 341, 342, 343, 344, 345, 346, 347, 1272, 1305,
	1237, 348, 1366, 1367, 741, 0, 349, 350, 1312, 0,
	1293, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298,
	1297, 1301, 378, 379, 380, 381, 382, 1329, 383, 385,
	1323, 1322, 1242, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 1314,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 1248, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 1337, 1338, 419, 1261, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 1321, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 1334, 1335, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 1344, 0,
	1271, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1307, 1308, 1311, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 1316, 1317, 0,
	1277, 0, 463, 464, 466, 1351, 1309, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 1345,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 1300, 1299, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 1239, 317, 1358, 538,
	539, 540, 541, 1262, 1310, 542, 1324, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 1339, 556, 557,
	1249, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 1340, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	1320, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 1250, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1303, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 1318, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 1365, 670, 671, 672, 673, 1341, 677, 678, 679,
	680, 0, 681, 682, 1236, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 1330,
	1331, 1332, 1333, 0, 703, 0, 692, 694, 695, 696,
	697, 1342, 698, 1343, 1260, 699, 700, 701, 702, 693,
	704, 705, 0, 1243, 706, 707, 709, 711, 712, 708,
	710, 713, 1304, 714, 0, 0, 715, 716, 717, 782,
	1327, 1364, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 1240, 0, 0, 0, 0, 0,
	0, 1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235,
	0, 0, 0, 0, 0, 0, 1233, 1234, 318, 319,
	321, 320, 322, 323, 324, 325, 1266, 326, 327, 0,
	1264, 0, 0, 0, 1306, 1270, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 1319, 0, 339, 1326, 340, 1325, 0, 1336,
	341, 342, 343, 344, 345, 346, 347, 1272, 1305, 1237,
	348, 1366, 1367, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 1329, 383, 385, 1323,
	1322, 1242, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 1314, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 1248, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 1261, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 1321, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 1334, 1335, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 1271,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 1316, 1317, 0, 1277,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 1239, 317, 1358, 538, 539,
	540, 541, 1262, 1310, 542, 1324, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 1249,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 1320,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 1250, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 1318, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	1365, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 1236, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 1330, 1331,
	1332, 1333, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 1260, 699, 700, 701, 702, 693, 704,
	705, 0, 1243, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 1327,
	1364, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1240, 0, 0, 0, 0, 0, 0,
	1282, 1254, 1255, 1256, 1252, 1253, 1265, 0, 1235, 0,
	0, 0, 0, 0, 0, 2767, 2768, 318, 319, 321,
	320, 322, 323, 324, 325, 1266, 326, 327, 0, 1264,
	0, 0, 0, 1306, 1270, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 1319, 0, 339, 1326, 340, 1325, 0, 1336, 341,
	342, 343, 344, 345, 346, 347, 1272, 1305, 0, 348,
	1366, 1367, 741, 0, 349, 350, 1312, 0, 1293, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301,
	378, 379, 380, 381, 382, 1329, 383, 385, 1323, 1322,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	1248, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 1337, 1338, 419, 1261, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 1321, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 1334, 1335, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 1344, 0, 1271, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1307, 1308,
	1311, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 1316, 1317, 0, 1277, 0,
	463, 464, 466, 1351, 1309, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 1345, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 1300, 1299, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 317, 1358, 538, 539, 540,
	541, 1262, 1310, 542, 1324, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 1339, 556, 557, 1249, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	1340, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 1320, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 1250, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1303, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 1318, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 1365,
	670, 671, 672, 673, 1341, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 1330, 1331, 1332,
	1333, 0, 703, 0, 692, 694, 695, 696, 697, 1342,
	698, 1343, 1260, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	1304, 714, 0, 0, 715, 716, 717, 782, 1327, 1364,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 1282,
	1254, 1255, 1256, 1252, 1253, 1265, 0, 3028, 0, 0,
	0, 0, 0, 0, 3026, 3027, 318, 319, 321, 320,
	322, 323, 324, 325, 1266, 326, 327, 0, 1264, 0,
	0, 0, 1306, 1270, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	1319, 0, 339, 1326, 340, 1325, 0, 1336, 341, 342,
	343, 344, 345, 346, 347, 1272, 1305, 0, 348, 1366,
	1367, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 1329, 383, 385, 1323, 1322, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 1314, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 1248,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 1261, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 1321, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 1334, 1335, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 1271, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 1316, 1317, 0, 1277, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 0, 317, 1358, 538, 539, 540, 541,
	1262, 1310, 542, 1324, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 1320, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 3608, 3609, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 1318, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 1365, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 1330, 1331, 1332, 1333,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 1260, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 782, 1327, 1364, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 1282, 1254,
	1255, 1256, 1252, 1253, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 2359, 2360, 318, 319, 321, 320, 322,
	323, 324, 325, 1266, 326, 327, 0, 1264, 0, 0,
	0, 1306, 1270, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 0, 1319,
	0, 339, 1326, 340, 1325, 0, 1336, 341, 342, 343,
	344, 345, 346, 347, 1272, 1305, 1237, 348, 1366, 1367,
	741, 0, 349, 350, 1312, 0, 1293, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	5417, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379,
	380, 381, 382, 1329, 383, 385, 1323, 1322, 1242, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 1248, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 1337, 1338, 419, 1261, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 1321, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 1334, 1335, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 1344, 0, 1271, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1307, 1308, 1311, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 1316, 1317, 0, 1277, 0, 463, 464,
	466, 0, 1309, 0, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 1345, 480, 1354, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 1300,
	1299, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 1239, 317, 0, 538, 539, 540, 541, 1262,
	1310, 542, 1324, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 1339, 556, 557, 1249, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 1340, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 1320, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	1250, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1303, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 1318, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 1365, 670, 671,
	672, 673, 1341, 677, 678, 679, 680, 0, 681, 682,
	1236, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 1330, 1331, 1332, 1333, 0,
	703, 0, 692, 694, 695, 696, 697, 1342, 698, 1343,
	1260, 699, 700, 701, 702, 693, 5416, 705, 0, 1243,
	706, 707, 709, 711, 712, 708, 710, 713, 1304, 714,
	0, 0, 715, 716, 717, 782, 1327, 1364, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 3047, 0, 1282, 1254, 1255,
	1256, 1252, 1253, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 1234, 318, 319, 321, 320, 322, 323,
	324, 325, 1266, 326, 327, 0, 1264, 0, 0, 0,
	1306, 1270, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 1319, 0,
	339, 1326, 340, 1325, 0, 1336, 341, 342, 343, 344,
	345, 346, 347, 0, 1305, 0, 348, 1366, 1367, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 1329, 383, 385, 1323, 1322, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 1314, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 1261, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 1321, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	1334, 1335, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 1271, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 1316, 1317, 0, 1277, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 317, 1358, 538, 539, 540, 541, 1262, 1310,
	542, 1324, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 1320, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 1250,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 1318, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 1365, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 1330, 1331, 1332, 1333, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 1260,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 1327, 1364, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 0,
	0, 1700, 0, 1282, 1254, 1255, 1256, 1252, 1253, 1265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 1266, 0, 0, 0, 1264, 1306, 1270, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 1319, 0, 339, 1326, 340, 1325,
	0, 1336, 341, 342, 343, 344, 345, 346, 347, 0,
	1305, 0, 348, 1366, 1367, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 1329, 383,
	385, 1323, 1322, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	1314, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 1261,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 1321,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 1334, 1335, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 1271, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 1316, 1317,
	0, 1277, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 0, 317, 1358,
	538, 539, 540, 541, 1262, 1310, 542, 1324, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 1320, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 1250, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 1318, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 1365, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	1330, 1331, 1332, 1333, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 1260, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 1327, 1364, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1224, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 1266, 0, 0,
	1306, 1264, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 1305, 0, 348, 739, 740, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 1391, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 317, 1358, 538, 539, 540, 541, 0, 1310,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	1397, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	1399, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 271, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 273, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 1821, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 265, 728, 729, 786, 730, 731, 732, 1405,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 1395,
	0, 2184, 1306, 0, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 0, 738, 341, 342,
	343, 344, 345, 346, 347, 0, 1305, 0, 348, 739,
	740, 741, 0, 349, 350, 1312, 0, 1293, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 1296, 1294, 1295, 1302, 1298, 1297, 1301, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 1337, 1338, 419, 0, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 1344, 0, 752, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 1307, 1308, 1311,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 316, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 757, 758, 0, 759, 0, 463,
	464, 466, 1351, 1309, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	1391, 477, 479, 478, 0, 481, 1345, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	1300, 1299, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 0, 317, 1358, 538, 539, 540, 541,
	0, 1310, 542, 763, 545, 546, 0, 0, 547, 0,
	548, 0, 1397, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 1339, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 1340,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 1399, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	271, 644, 645, 643, 646, 647, 648, 1303, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 1341, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 273, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 776, 777, 778, 779,
	0, 703, 0, 692, 694, 695, 696, 697, 1342, 698,
	1343, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 1304,
	714, 0, 0, 715, 716, 717, 1821, 783, 784, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 265, 728, 729, 786, 730, 731,
	732, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3773, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1395, 0, 2184, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 0,
	1306, 0, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 1305, 0, 348, 739, 740, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 1391, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 317, 1358, 538, 539, 540, 541, 0, 1310,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	1397, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	1399, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1387,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 1395,
	0, 1393, 0, 0, 1306, 0, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 1305, 0,
	348, 739, 740, 741, 0, 349, 350, 1312, 0, 1293,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 1296, 1294, 1295, 1302, 1298, 1297,
	1301, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 1337, 1338, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 1344, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 1307,
	1308, 1311, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 1309, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 1391, 477, 479, 478, 0, 481, 1345, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 1300, 1299, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 317, 1358, 538, 539,
	540, 541, 0, 1310, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 1397, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 1339, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 1340, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 1399, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 1303,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 1341, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	1342, 698, 1343, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 1304, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 1395, 0, 1393, 1306, 0, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	0, 738, 341, 342, 343, 344, 345, 346, 347, 0,
	1305, 0, 348, 739, 740, 741, 0, 349, 350, 1312,
	0, 1293, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 1296, 1294, 1295, 1302,
	1298, 1297, 1301, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 1337, 1338, 419, 0,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 1344,
	0, 752, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 1307, 1308, 1311, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 757, 758,
	0, 759, 0, 463, 464, 466, 1351, 1309, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 1391, 477, 479, 478, 0, 481,
	1345, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 1300, 1299, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 0, 317, 1358,
	538, 539, 540, 541, 0, 1310, 542, 763, 545, 546,
	0, 0, 547, 0, 548, 0, 1397, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 1339, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 1340, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 771, 1399, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 1303, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 1341, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	776, 777, 778, 779, 0, 703, 0, 692, 694, 695,
	696, 697, 1342, 698, 1343, 0, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 1304, 714, 0, 0, 715, 716, 717,
	782, 783, 784, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 1395, 0, 1393, 1306, 0,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 1305, 0, 348, 739, 740, 741, 0, 349,
	350, 1312, 0, 1293, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 1296, 1294,
	1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 1337, 1338,
	419, 0, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 1344, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 1307, 1308, 1311, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	316, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 1351, 1309,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 1345, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 1300, 1299, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 0,
	317, 1358, 538, 539, 540, 541, 0, 1310, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	1339, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 1340, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 1303, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 1341,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 1342, 698, 1343, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 1304, 714, 0, 0, 715,
	716, 717, 782, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 4790,
	1306, 0, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 1305, 0, 348, 739, 740, 741,
	0, 349, 350, 1312, 0, 1293, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	1296, 1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	1337, 1338, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 1344, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 1307, 1308, 1311, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 1309, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 1345, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 1300, 1299,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 317, 1358, 538, 539, 540, 541, 0, 1310,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 1339, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 1340, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	1399, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 1303, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 1341, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 1342, 698, 1343, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 1304, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 312,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 2873,
	2874, 2875, 2892, 2893, 2894, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 0,
	2895, 0, 733, 0, 0, 0, 328, 0, 329, 330,
	331, 2080, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 0, 738, 341, 342,
	343, 344, 345, 346, 347, 0, 0, 2065, 348, 739,
	740, 741, 0, 349, 350, 742, 0, 0, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 2885, 0, 360,
	361, 362, 359, 363, 0, 364, 2881, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 0, 0, 0, 0, 0, 0, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 0, 0, 0, 2886, 2887,
	2888, 2889, 420, 421, 422, 748, 0, 0, 2880, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 0, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 751, 0, 752, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 0, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 0, 458, 459, 460, 0, 0,
	756, 461, 544, 462, 757, 758, 0, 759, 0, 463,
	464, 466, 0, 760, 0, 465, 467, 468, 0, 469,
	0, 2890, 2891, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 761, 480, 0, 482,
	483, 0, 0, 484, 485, 486, 487, 488, 489, 492,
	0, 0, 490, 491, 493, 494, 2883, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 0, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	0, 536, 524, 0, 0, 0, 538, 539, 540, 541,
	0, 762, 542, 763, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 0, 555, 0, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 0, 618, 619, 620, 621,
	622, 771, 623, 2884, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 0, 649, 772,
	650, 630, 631, 651, 652, 0, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 0, 681,
	682, 2064, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 776, 777, 778, 779,
	0, 703, 0, 692, 694, 695, 696, 697, 780, 698,
	781, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 0,
	714, 0, 0, 715, 716, 717, 782, 783, 784, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 1690, 2870, 2871, 2872, 2896, 2882, 2876, 0,
	2878, 2879, 2877, 2864, 2865, 2866, 2867, 2868, 2869, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	1658, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 1351, 760, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 0, 0, 1358, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 271, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 273, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 1821,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 265, 728, 729,
	786, 730, 731, 732, 0, 1818, 266, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 212, 0, 0, 0,
	733, 0, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 0, 0, 348, 739, 740, 741,
	0, 349, 350, 742, 0, 1658, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	0, 0, 0, 0, 0, 0, 0, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 751, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 0, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 760, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 761, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 0, 0,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 0, 1358, 538, 539, 540, 541, 0, 762,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 271, 644,
	645, 643, 646, 647, 648, 0, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 273, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 780, 698, 781, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 0, 714, 0,
	0, 715, 716, 717, 1821, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 265, 728, 729, 786, 730, 731, 732, 1690,
	1689, 266, 0, 0, 0, 1687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 319, 321, 320,
	322, 323, 324, 325, 0, 326, 327, 0, 0, 0,
	0, 212, 733, 0, 0, 0, 328, 0, 329, 330,
	331, 1346, 332, 333, 334, 335, 336, 337, 338, 734,
	735, 0, 339, 736, 340, 737, 0, 738, 341, 342,
	343, 344, 345, 346, 347, 0, 0, 0, 348, 739,
	740, 741, 0, 349, 350, 742, 0, 1658, 0, 351,
	352, 353, 354, 355, 356, 357, 358, 0, 0, 360,
	361, 362, 359, 363, 0, 364, 0, 365, 366, 367,
	368, 369, 370, 371, 0, 372, 373, 374, 1347, 375,
	376, 377, 0, 0, 0, 0, 0, 0, 0, 378,
	379, 380, 381, 382, 0, 383, 385, 743, 744, 0,
	388, 390, 384, 386, 0, 389, 387, 391, 392, 0,
	393, 394, 395, 0, 0, 396, 397, 398, 0, 399,
	400, 401, 0, 402, 403, 404, 0, 405, 406, 745,
	407, 408, 409, 411, 413, 410, 412, 414, 415, 416,
	417, 418, 746, 747, 419, 0, 315, 0, 0, 0,
	0, 0, 420, 421, 422, 748, 0, 0, 0, 423,
	0, 424, 425, 426, 0, 427, 428, 0, 1348, 429,
	430, 431, 749, 750, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 0, 441, 751, 0, 752, 442, 0,
	443, 444, 445, 446, 447, 448, 449, 753, 754, 755,
	543, 1350, 450, 451, 452, 0, 453, 454, 455, 456,
	457, 0, 0, 0, 0, 458, 459, 460, 0, 1349,
	756, 461, 544, 462, 757, 758, 0, 759, 0, 463,
	464, 466, 1351, 760, 1352, 465, 467, 468, 1353, 469,
	0, 0, 0, 470, 471, 472, 473, 474, 475, 476,
	0, 477, 479, 478, 0, 481, 761, 480, 1354, 482,
	483, 1355, 0, 484, 485, 486, 487, 488, 489, 492,
	0, 0, 490, 491, 493, 494, 0, 495, 496, 498,
	501, 497, 499, 500, 502, 515, 516, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 518,
	0, 517, 1356, 519, 520, 521, 522, 523, 530, 532,
	533, 528, 529, 531, 534, 535, 537, 525, 526, 527,
	1357, 536, 524, 0, 0, 1358, 538, 539, 540, 541,
	0, 762, 542, 763, 545, 546, 0, 0, 547, 0,
	548, 0, 0, 550, 551, 552, 0, 0, 553, 554,
	764, 1359, 555, 1360, 765, 556, 557, 549, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 0, 568,
	569, 766, 570, 571, 572, 767, 573, 574, 575, 768,
	576, 769, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 587, 588, 589, 770, 590, 591,
	593, 592, 594, 0, 595, 0, 596, 597, 598, 0,
	0, 0, 0, 0, 599, 600, 602, 0, 603, 604,
	605, 606, 601, 607, 608, 609, 610, 611, 612, 0,
	614, 615, 613, 616, 617, 1361, 618, 619, 620, 621,
	622, 771, 623, 0, 624, 625, 633, 634, 635, 626,
	627, 629, 636, 628, 637, 638, 639, 640, 642, 641,
	0, 644, 645, 643, 646, 647, 648, 0, 649, 772,
	650, 630, 631, 651, 652, 1362, 653, 654, 655, 656,
	657, 658, 659, 773, 0, 660, 0, 661, 662, 663,
	664, 665, 666, 668, 632, 669, 674, 675, 774, 670,
	671, 672, 673, 775, 677, 678, 679, 680, 0, 681,
	682, 0, 676, 667, 0, 683, 684, 685, 686, 687,
	688, 0, 689, 690, 0, 691, 776, 777, 778, 779,
	0, 703, 0, 692, 694, 695, 696, 697, 780, 698,
	781, 0, 699, 700, 701, 702, 693, 704, 705, 0,
	0, 706, 707, 709, 711, 712, 708, 710, 713, 0,
	714, 0, 0, 715, 716, 717, 782, 783, 784, 0,
	719, 718, 720, 721, 724, 722, 723, 785, 725, 726,
	727, 0, 0, 0, 0, 728, 729, 786, 730, 731,
	732, 1690, 1689, 0, 0, 0, 0, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 1845, 733, 0, 0, 0, 328, 0,
	329, 330, 331, 1346, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 0, 0,
	348, 739, 740, 741, 0, 349, 350, 742, 0, 1658,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	1347, 375, 376, 377, 0, 0, 0, 0, 0, 0,
	0, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	1348, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 751, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 1350, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 0, 458, 459, 460,
	0, 1349, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 1351, 760, 1352, 465, 467, 468,
	1353, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 761, 480,
	1354, 482, 483, 1355, 0, 484, 485, 486, 487, 488,
	489, 492, 0, 0, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 1356, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 1357, 536, 524, 0, 0, 1358, 538, 539,
	540, 541, 0, 762, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 1359, 555, 1360, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 1361, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 0,
	649, 772, 650, 630, 631, 651, 652, 1362, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	780, 698, 781, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 0, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 0, 0, 728, 729, 786,
	730, 731, 732, 1690, 1689, 0, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 0, 0, 4150, 733, 0, 0, 0,
	328, 0, 329, 330, 331, 1346, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	0, 738, 341, 342, 343, 344, 345, 346, 347, 0,
	0, 0, 348, 739, 740, 741, 0, 349, 350, 742,
	0, 1658, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 1347, 375, 376, 377, 0, 0, 0, 0,
	0, 0, 0, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 746, 747, 419, 0,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 1348, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 751,
	0, 752, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 753, 754, 755, 543, 1350, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 0, 458,
	459, 460, 0, 1349, 756, 461, 544, 462, 757, 758,
	0, 759, 0, 463, 464, 466, 1351, 760, 1352, 465,
	467, 468, 1353, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	761, 480, 1354, 482, 483, 1355, 0, 484, 485, 486,
	487, 488, 489, 492, 0, 0, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 1356, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 1357, 536, 524, 0, 0, 1358,
	538, 539, 540, 541, 0, 762, 542, 763, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 1359, 555, 1360, 765, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 768, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 2629, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 1361,
	618, 619, 620, 621, 622, 771, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 0, 649, 772, 650, 630, 631, 651, 652, 1362,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 775, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	776, 777, 778, 779, 0, 703, 0, 692, 694, 695,
	696, 697, 780, 698, 781, 0, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 0, 714, 0, 0, 715, 716, 717,
	782, 783, 784, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 0, 0, 0, 0, 728,
	729, 786, 730, 731, 732, 1690, 2534, 0, 0, 0,
	0, 2535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 1845, 733, 0,
	0, 0, 328, 0, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 0, 0, 348, 739, 740, 741, 0, 349,
	350, 742, 0, 1658, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 0, 0,
	0, 0, 0, 0, 0, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 0, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 751, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 1350, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	0, 458, 459, 460, 0, 1349, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 1351, 760,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 2533, 479, 478,
	0, 481, 761, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 0, 0, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 0,
	0, 1358, 538, 539, 540, 541, 0, 762, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 1359, 555, 1360,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 0, 649, 772, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 780, 698, 781, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 0, 714, 0, 0, 715,
	716, 717, 782, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 1690, 1689, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 1845,
	733, 0, 0, 0, 328, 0, 329, 330, 331, 1346,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 0, 0, 348, 739, 740, 741,
	0, 349, 350, 742, 0, 1658, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 1347, 375, 376, 377,
	0, 0, 0, 0, 0, 0, 0, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 1348, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 751, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 1350,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 0, 458, 459, 460, 0, 1349, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	1351, 760, 1352, 465, 467, 468, 1353, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 761, 480, 1354, 482, 483, 1355,
	0, 484, 485, 486, 487, 488, 489, 492, 0, 0,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	1356, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 1357, 536,
	524, 0, 0, 1358, 538, 539, 540, 541, 0, 762,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 1359,
	555, 1360, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 1361, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 0, 649, 772, 650, 630,
	631, 651, 652, 1362, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 780, 698, 781, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 0, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 0, 0, 728, 729, 786, 730, 731, 732, 1224,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 1827, 0, 0, 733, 0, 0, 0, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 0, 0,
	348, 739, 740, 741, 0, 349, 350, 742, 0, 0,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 0, 0, 0, 0, 0,
	0, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 0, 0, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	0, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 751, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 0, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 0, 458, 459, 460,
	0, 0, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 0, 760, 0, 465, 467, 468,
	0, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 761, 480,
	0, 482, 483, 0, 0, 484, 485, 486, 487, 488,
	489, 492, 0, 0, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 0, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 0, 536, 524, 0, 0, 0, 538, 539,
	540, 541, 0, 762, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 0, 555, 0, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 0, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 271, 644, 645, 643, 646, 647, 648, 0,
	649, 772, 650, 630, 631, 651, 652, 0, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 273, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	780, 698, 781, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 0, 714, 0, 0, 715, 716, 717, 1821, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 312, 0, 0, 265, 728, 729, 786,
	730, 731, 732, 0, 0, 266, 0, 0, 0, 0,
	318, 319, 321, 320, 322, 323, 324, 325, 0, 326,
	327, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	328, 0, 329, 330, 331, 212, 332, 333, 334, 335,
	336, 337, 338, 734, 735, 0, 339, 736, 340, 737,
	0, 738, 341, 342, 343, 344, 345, 346, 347, 0,
	0, 0, 348, 739, 740, 741, 0, 349, 350, 742,
	0, 0, 0, 351, 352, 353, 354, 355, 356, 357,
	358, 0, 0, 360, 361, 362, 359, 363, 0, 364,
	0, 365, 366, 367, 368, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 0, 0, 0,
	0, 0, 0, 378, 379, 380, 381, 382, 0, 383,
	385, 743, 744, 0, 388, 390, 384, 386, 0, 389,
	387, 391, 392, 0, 393, 394, 395, 0, 0, 396,
	397, 398, 0, 399, 400, 401, 0, 402, 403, 404,
	0, 405, 406, 745, 407, 408, 409, 411, 413, 410,
	412, 414, 415, 416, 417, 418, 746, 747, 419, 0,
	315, 0, 0, 0, 0, 0, 420, 421, 422, 748,
	0, 0, 0, 423, 0, 424, 425, 426, 0, 427,
	428, 0, 0, 429, 430, 431, 749, 750, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 0, 441, 751,
	0, 752, 442, 0, 443, 444, 445, 446, 447, 448,
	449, 753, 754, 755, 543, 0, 450, 451, 452, 0,
	453, 454, 455, 456, 457, 0, 0, 0, 316, 458,
	459, 460, 0, 0, 756, 461, 544, 462, 757, 758,
	0, 759, 0, 463, 464, 466, 0, 760, 0, 465,
	467, 468, 0, 469, 0, 0, 0, 470, 471, 472,
	473, 474, 475, 476, 0, 477, 479, 478, 0, 481,
	761, 480, 0, 482, 483, 0, 0, 484, 485, 486,
	487, 488, 489, 492, 0, 0, 490, 491, 493, 494,
	0, 495, 496, 498, 501, 497, 499, 500, 502, 515,
	516, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 518, 0, 517, 0, 519, 520, 521,
	522, 523, 530, 532, 533, 528, 529, 531, 534, 535,
	537, 525, 526, 527, 0, 536, 524, 0, 317, 0,
	538, 539, 540, 541, 0, 762, 542, 763, 545, 546,
	0, 0, 547, 0, 548, 0, 0, 550, 551, 552,
	0, 0, 553, 554, 764, 0, 555, 0, 765, 556,
	557, 549, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 0, 568, 569, 766, 570, 571, 572, 767,
	573, 574, 575, 768, 576, 769, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 587, 588,
	589, 770, 590, 591, 593, 592, 594, 0, 595, 0,
	596, 597, 598, 0, 0, 0, 0, 0, 599, 600,
	602, 0, 603, 604, 605, 606, 601, 607, 608, 609,
	610, 611, 612, 0, 614, 615, 613, 616, 617, 0,
	618, 619, 620, 621, 622, 771, 623, 0, 624, 625,
	633, 634, 635, 626, 627, 629, 636, 628, 637, 638,
	639, 640, 642, 641, 0, 644, 645, 643, 646, 647,
	648, 0, 649, 772, 650, 630, 631, 651, 652, 0,
	653, 654, 655, 656, 657, 658, 659, 773, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 668, 632, 669,
	674, 675, 774, 670, 671, 672, 673, 775, 677, 678,
	679, 680, 0, 681, 682, 0, 676, 667, 0, 683,
	684, 685, 686, 687, 688, 0, 689, 690, 0, 691,
	776, 777, 778, 779, 0, 703, 0, 692, 694, 695,
	696, 697, 780, 698, 781, 0, 699, 700, 701, 702,
	693, 704, 705, 0, 0, 706, 707, 709, 711, 712,
	708, 710, 713, 0, 714, 0, 0, 715, 716, 717,
	782, 783, 784, 0, 719, 718, 720, 721, 724, 722,
	723, 785, 725, 726, 727, 312, 3385, 0, 0, 728,
	729, 786, 730, 731, 732, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 0, 733, 0,
	0, 0, 328, 0, 329, 330, 331, 2198, 332, 333,
	334, 335, 336, 337, 338, 734, 735, 0, 339, 736,
	340, 737, 0, 738, 341, 342, 343, 344, 345, 346,
	347, 0, 0, 0, 348, 739, 740, 741, 0, 349,
	350, 742, 0, 0, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 0,
	0, 0, 0, 0, 0, 378, 379, 380, 381, 382,
	0, 383, 385, 743, 744, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 397, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 745, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 746, 747,
	419, 0, 0, 0, 0, 0, 0, 0, 420, 421,
	422, 748, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 0, 429, 430, 431, 749, 750,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 751, 0, 752, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 753, 754, 755, 543, 0, 450, 451,
	452, 0, 453, 454, 455, 456, 457, 0, 0, 0,
	0, 458, 459, 460, 0, 0, 756, 461, 544, 462,
	757, 758, 0, 759, 0, 463, 464, 466, 0, 760,
	0, 465, 467, 468, 0, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 761, 480, 0, 482, 483, 0, 0, 484,
	485, 486, 487, 488, 489, 492, 0, 0, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 0, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 0, 536, 524, 0,
	0, 0, 538, 539, 540, 541, 0, 762, 542, 763,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 764, 0, 555, 0,
	765, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 766, 570, 571,
	572, 767, 573, 574, 575, 768, 576, 769, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 770, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 0, 618, 619, 620, 621, 622, 771, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 0, 649, 772, 650, 630, 631, 651,
	652, 0, 653, 654, 655, 656, 657, 658, 659, 773,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 774, 670, 671, 672, 673, 775,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 776, 777, 778, 779, 0, 703, 0, 692,
	694, 695, 696, 697, 780, 698, 781, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 0, 714, 0, 0, 715,
	716, 717, 782, 783, 784, 0, 719, 718, 720, 721,
	724, 722, 723, 785, 725, 726, 727, 312, 0, 0,
	0, 728, 729, 786, 730, 731, 732, 0, 0, 0,
	0, 0, 0, 0, 318, 319, 321, 320, 322, 323,
	324, 325, 0, 326, 327, 0, 0, 0, 0, 0,
	733, 0, 0, 0, 328, 0, 329, 330, 331, 5597,
	332, 333, 334, 335, 336, 337, 338, 734, 735, 0,
	339, 736, 340, 737, 0, 738, 341, 342, 343, 344,
	345, 346, 347, 0, 0, 0, 348, 739, 740, 741,
	0, 349, 350, 742, 0, 0, 0, 351, 352, 353,
	354, 355, 356, 357, 358, 0, 0, 360, 361, 362,
	359, 363, 0, 364, 0, 365, 366, 367, 368, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 0, 0, 0, 0, 0, 0, 378, 379, 380,
	381, 382, 0, 383, 385, 743, 744, 0, 388, 390,
	384, 386, 0, 389, 387, 391, 392, 0, 393, 394,
	395, 0, 0, 396, 397, 398, 0, 399, 400, 401,
	0, 402, 403, 404, 0, 405, 406, 745, 407, 408,
	409, 411, 413, 410, 412, 414, 415, 416, 417, 418,
	746, 747, 419, 0, 315, 0, 0, 0, 0, 0,
	420, 421, 422, 748, 0, 0, 0, 423, 0, 424,
	425, 426, 0, 427, 428, 0, 0, 429, 430, 431,
	749, 750, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 0, 441, 751, 0, 752, 442, 0, 443, 444,
	445, 446, 447, 448, 449, 753, 754, 755, 543, 0,
	450, 451, 452, 0, 453, 454, 455, 456, 457, 0,
	0, 0, 316, 458, 459, 460, 0, 0, 756, 461,
	544, 462, 757, 758, 0, 759, 0, 463, 464, 466,
	0, 760, 0, 465, 467, 468, 0, 469, 0, 0,
	0, 470, 471, 472, 473, 474, 475, 476, 0, 477,
	479, 478, 0, 481, 761, 480, 0, 482, 483, 0,
	0, 484, 485, 486, 487, 488, 489, 492, 0, 0,
	490, 491, 493, 494, 0, 495, 496, 498, 501, 497,
	499, 500, 502, 515, 516, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 518, 0, 517,
	0, 519, 520, 521, 522, 523, 530, 532, 533, 528,
	529, 531, 534, 535, 537, 525, 526, 527, 0, 536,
	524, 0, 317, 0, 538, 539, 540, 541, 0, 762,
	542, 763, 545, 546, 0, 0, 547, 0, 548, 0,
	0, 550, 551, 552, 0, 0, 553, 554, 764, 0,
	555, 0, 765, 556, 557, 549, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 0, 568, 569, 766,
	570, 571, 572, 767, 573, 574, 575, 768, 576, 769,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 587, 588, 589, 770, 590, 591, 593, 592,
	594, 0, 595, 0, 596, 597, 598, 0, 0, 0,
	0, 0, 599, 600, 602, 0, 603, 604, 605, 606,
	601, 607, 608, 609, 610, 611, 612, 0, 614, 615,
	613, 616, 617, 0, 618, 619, 620, 621, 622, 771,
	623, 0, 624, 625, 633, 634, 635, 626, 627, 629,
	636, 628, 637, 638, 639, 640, 642, 641, 0, 644,
	645, 643, 646, 647, 648, 0, 649, 772, 650, 630,
	631, 651, 652, 0, 653, 654, 655, 656, 657, 658,
	659, 773, 0, 660, 0, 661, 662, 663, 664, 665,
	666, 668, 632, 669, 674, 675, 774, 670, 671, 672,
	673, 775, 677, 678, 679, 680, 0, 681, 682, 0,
	676, 667, 0, 683, 684, 685, 686, 687, 688, 0,
	689, 690, 0, 691, 776, 777, 778, 779, 0, 703,
	0, 692, 694, 695, 696, 697, 780, 698, 781, 0,
	699, 700, 701, 702, 693, 704, 705, 0, 0, 706,
	707, 709, 711, 712, 708, 710, 713, 0, 714, 0,
	0, 715, 716, 717, 782, 783, 784, 0, 719, 718,
	720, 721, 724, 722, 723, 785, 725, 726, 727, 0,
	0, 312, 0, 728, 729, 786, 730, 731, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	321, 320, 322, 323, 324, 325, 0, 326, 327, 0,
	0, 0, 0, 0, 733, 0, 0, 0, 328, 1815,
	329, 330, 331, 0, 332, 333, 334, 335, 336, 337,
	338, 734, 735, 0, 339, 736, 340, 737, 0, 738,
	341, 342, 343, 344, 345, 346, 347, 0, 0, 0,
	348, 739, 740, 741, 0, 349, 350, 742, 0, 0,
	0, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	0, 360, 361, 362, 359, 363, 0, 364, 0, 365,
	366, 367, 368, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 0, 0, 0, 0, 0,
	0, 378, 379, 380, 381, 382, 0, 383, 385, 743,
	744, 0, 388, 390, 384, 386, 0, 389, 387, 391,
	392, 0, 393, 394, 395, 0, 0, 396, 397, 398,
	0, 399, 400, 401, 0, 402, 403, 404, 0, 405,
	406, 745, 407, 408, 409, 411, 413, 410, 412, 414,
	415, 416, 417, 418, 746, 747, 419, 0, 315, 0,
	0, 0, 0, 0, 420, 421, 422, 748, 0, 0,
	0, 423, 0, 424, 425, 426, 0, 427, 428, 0,
	0, 429, 430, 431, 749, 750, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 0, 441, 751, 0, 752,
	442, 0, 443, 444, 445, 446, 447, 448, 449, 753,
	754, 755, 543, 0, 450, 451, 452, 0, 453, 454,
	455, 456, 457, 0, 0, 0, 316, 458, 459, 460,
	0, 0, 756, 461, 544, 462, 757, 758, 0, 759,
	0, 463, 464, 466, 0, 760, 0, 465, 467, 468,
	0, 469, 0, 0, 0, 470, 471, 472, 473, 474,
	475, 476, 0, 477, 479, 478, 0, 481, 761, 480,
	0, 482, 483, 0, 0, 484, 485, 486, 487, 488,
	489, 492, 0, 0, 490, 491, 493, 494, 0, 495,
	496, 498, 501, 497, 499, 500, 502, 515, 516, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 518, 0, 517, 0, 519, 520, 521, 522, 523,
	530, 532, 533, 528, 529, 531, 534, 535, 537, 525,
	526, 527, 0, 536, 524, 0, 317, 0, 538, 539,
	540, 541, 0, 762, 542, 763, 545, 546, 0, 0,
	547, 0, 548, 0, 0, 550, 551, 552, 0, 0,
	553, 554, 764, 0, 555, 0, 765, 556, 557, 549,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	0, 568, 569, 766, 570, 571, 572, 767, 573, 574,
	575, 768, 576, 769, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 587, 588, 589, 770,
	590, 591, 593, 592, 594, 0, 595, 0, 596, 597,
	598, 0, 0, 0, 0, 0, 599, 600, 602, 0,
	603, 604, 605, 606, 601, 607, 608, 609, 610, 611,
	612, 0, 614, 615, 613, 616, 617, 0, 618, 619,
	620, 621, 622, 771, 623, 0, 624, 625, 633, 634,
	635, 626, 627, 629, 636, 628, 637, 638, 639, 640,
	642, 641, 0, 644, 645, 643, 646, 647, 648, 0,
	649, 772, 650, 630, 631, 651, 652, 0, 653, 654,
	655, 656, 657, 658, 659, 773, 0, 660, 0, 661,
	662, 663, 664, 665, 666, 668, 632, 669, 674, 675,
	774, 670, 671, 672, 673, 775, 677, 678, 679, 680,
	0, 681, 682, 0, 676, 667, 0, 683, 684, 685,
	686, 687, 688, 0, 689, 690, 0, 691, 776, 777,
	778, 779, 0, 703, 0, 692, 694, 695, 696, 697,
	780, 698, 781, 0, 699, 700, 701, 702, 693, 704,
	705, 0, 0, 706, 707, 709, 711, 712, 708, 710,
	713, 0, 714, 0, 0, 715, 716, 717, 782, 783,
	784, 0, 719, 718, 720, 721, 724, 722, 723, 785,
	725, 726, 727, 0, 0, 3193, 0, 728, 729, 786,
	730, 731, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 319, 321, 320, 322, 323, 324, 325,
	0, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 4101, 329, 330, 331, 1346, 332, 333,
	334, 335, 336, 337, 338, 0, 2258, 0, 339, 2248,
	340, 2264, 0, 2271, 341, 342, 343, 344, 345, 346,
	347, 0, 0, 0, 348, 2274, 2275, 0, 0, 349,
	350, 0, 0, 1658, 0, 351, 352, 353, 354, 355,
	356, 357, 358, 0, 0, 360, 361, 362, 359, 363,
	0, 364, 0, 365, 366, 367, 368, 369, 370, 371,
	0, 372, 373, 374, 1347, 375, 376, 377, 0, 0,
	0, 0, 0, 0, 0, 378, 379, 380, 381, 382,
	1329, 383, 385, 2262, 2261, 0, 388, 390, 384, 386,
	0, 389, 387, 391, 392, 0, 393, 394, 395, 0,
	0, 396, 1314, 398, 0, 399, 400, 401, 0, 402,
	403, 404, 0, 405, 406, 0, 407, 408, 409, 411,
	413, 410, 412, 414, 415, 416, 417, 418, 0, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 420, 421,
	422, 2260, 0, 0, 0, 423, 0, 424, 425, 426,
	0, 427, 428, 0, 1348, 429, 430, 431, 2269, 2270,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 0,
	441, 0, 0, 0, 442, 0, 443, 444, 445, 446,
	447, 448, 449, 0, 0, 0, 543, 1350, 450, 451,
	452, 3187, 453, 454, 455, 456, 457, 0, 0, 0,
	0, 458, 459, 460, 0, 1349, 3189, 461, 544, 462,
	2255, 2256, 0, 2251, 0, 463, 464, 466, 1351, 0,
	1352, 465, 467, 468, 1353, 469, 0, 0, 0, 470,
	471, 472, 473, 474, 475, 476, 0, 477, 479, 478,
	0, 481, 0, 480, 1354, 482, 483, 1355, 0, 484,
	485, 486, 487, 488, 489, 492, 0, 0, 490, 491,
	493, 494, 0, 495, 496, 498, 501, 497, 499, 500,
	502, 515, 516, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 518, 0, 517, 1356, 519,
	520, 521, 522, 523, 530, 532, 533, 528, 529, 531,
	534, 535, 537, 525, 526, 527, 1357, 536, 524, 0,
	0, 1358, 538, 539, 540, 541, 0, 0, 542, 2263,
	545, 546, 0, 0, 547, 0, 548, 0, 0, 550,
	551, 552, 0, 0, 553, 554, 3188, 1359, 555, 1360,
	0, 556, 557, 549, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 0, 568, 569, 2245, 570, 571,
	572, 2246, 573, 574, 575, 0, 576, 0, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	587, 588, 589, 2259, 590, 591, 593, 592, 594, 0,
	595, 0, 596, 597, 598, 0, 0, 0, 0, 0,
	599, 600, 602, 0, 603, 604, 605, 606, 601, 607,
	608, 609, 610, 611, 612, 0, 614, 615, 613, 616,
	617, 1361, 618, 619, 620, 621, 622, 0, 623, 0,
	624, 625, 633, 634, 635, 626, 627, 629, 636, 628,
	637, 638, 639, 640, 642, 641, 0, 644, 645, 643,
	646, 647, 648, 0, 649, 0, 650, 630, 631, 651,
	652, 1362, 653, 654, 655, 656, 657, 658, 659, 2257,
	0, 660, 0, 661, 662, 663, 664, 665, 666, 668,
	632, 669, 674, 675, 2273, 670, 671, 672, 673, 0,
	677, 678, 679, 680, 0, 681, 682, 0, 676, 667,
	0, 683, 684, 685, 686, 687, 688, 0, 689, 690,
	0, 691, 2265, 2266, 2267, 2268, 0, 703, 0, 692,
	694, 695, 696, 697, 0, 698, 0, 0, 699, 700,
	701, 702, 693, 704, 705, 0, 0, 706, 707, 709,
	711, 712, 708, 710, 713, 0, 714, 0, 0, 715,
	716, 717, 0, 2249, 2272, 3190, 719, 718, 720, 721,
	724, 722, 723, 0, 725, 726, 727, 0, 0, 0,
	0, 728, 729, 0, 730, 731, 732, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	3182, 733, 0, 2239, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	3193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 3504, 0, 0, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	0, 2258, 0, 339, 2248, 340, 2264, 0, 2271, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	2274, 2275, 0, 0, 349, 350, 0, 0, 1658, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 1329, 383, 385, 2262, 2261,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 1314, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	0, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 0, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 2260, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 2269, 2270, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 0, 0, 0, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 0, 0,
	0, 543, 1350, 450, 451, 452, 3187, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	1349, 3189, 461, 544, 462, 2255, 2256, 0, 2251, 0,
	463, 464, 466, 1351, 0, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 0, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 0, 1358, 538, 539, 540,
	541, 0, 0, 542, 2263, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 3188, 1359, 555, 1360, 0, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 2245, 570, 571, 572, 2246, 573, 574, 575,
	0, 576, 0, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 2259, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 0, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	0, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 2257, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 2273,
	670, 671, 672, 673, 0, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 2265, 2266, 2267,
	2268, 0, 703, 0, 692, 694, 695, 696, 697, 0,
	698, 0, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 0, 2249, 2272,
	3190, 719, 718, 720, 721, 724, 722, 723, 0, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 0, 730,
	731, 732, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 2239, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 4267, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 2616, 1306,
	0, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 1305, 0, 348, 739, 740, 741, 0,
	349, 350, 1312, 0, 1293, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 1296,
	1294, 1295, 1302, 1298, 1297, 1301, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 1337,
	1338, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 1344, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1307, 1308, 1311, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 1351,
	1309, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 1345, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 1300, 1299, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	0, 317, 1358, 538, 539, 540, 541, 0, 1310, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 1339, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 1340, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1303, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	1341, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 1342, 698, 1343, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 1304, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 2252, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 0, 2258,
	0, 339, 2248, 340, 2264, 0, 2271, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 2274, 2275,
	0, 0, 349, 350, 0, 0, 1658, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 1329, 383, 385, 2262, 2261, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 1314, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 0, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 2260, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 2269, 2270, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 0, 0, 0, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 0, 0, 0, 543,
	1350, 450, 451, 452, 3187, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 1349, 3189,
	461, 544, 462, 2255, 2256, 0, 2251, 0, 463, 464,
	466, 1351, 0, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 0, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 0, 0, 1358, 538, 539, 540, 541, 0,
	0, 542, 2263, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 3188,
	1359, 555, 1360, 0, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	2245, 570, 571, 572, 2246, 573, 574, 575, 0, 576,
	0, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 2259, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	0, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 0, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 2257, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 2273, 670, 671,
	672, 673, 0, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 2265, 2266, 2267, 2268, 0,
	703, 0, 692, 694, 695, 696, 697, 0, 698, 0,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 0, 2249, 2272, 3190, 719,
	718, 720, 721, 724, 722, 723, 0, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 0, 730, 731, 732,
	1050, 0, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 2239, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 956, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	1047, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 1049, 0, 676, 667, 954, 683, 684,
	685, 686, 687, 955, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 2221, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 4398,
	326, 327, 0, 0, 0, 0, 0, 733, 959, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 2228, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 2229, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 2230, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 4397, 628, 637,
	638, 639, 640, 642, 641, 0, 2225, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 2227,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 4396,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 2221, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 2279, 326, 327, 0, 0, 0, 0, 0, 733,
	959, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 2228,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 2229, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 2230, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 2278,
	628, 637, 638, 639, 640, 642, 641, 0, 2280, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 2227, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 2277, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 2221, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 2220, 326, 327, 0, 0, 0, 0,
	0, 733, 959, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 2228, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	2229, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 2230, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 2219, 628, 637, 638, 639, 640, 642, 641, 0,
	2225, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 2227, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 2218, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	947, 0, 949, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 959, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 956, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 954, 683, 684,
	685, 686, 687, 955, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 949, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 959, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 956, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 954,
	683, 684, 685, 686, 687, 955, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 3193, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 0, 2258, 0, 339,
	2248, 340, 2264, 0, 2271, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 2274, 2275, 0, 0,
	349, 350, 0, 0, 1658, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 1329, 383, 385, 2262, 2261, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 1314, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 0, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 0,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 2260, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 2269,
	2270, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 0, 0, 0, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 0, 0, 0, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 1349, 0, 461, 544,
	462, 2255, 2256, 0, 2251, 0, 463, 464, 466, 1351,
	0, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 0, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	0, 0, 1358, 538, 539, 540, 541, 0, 0, 542,
	2263, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 0, 1359, 555,
	1360, 0, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 2245, 570,
	571, 572, 2246, 573, 574, 575, 0, 576, 0, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 2259, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 0, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 0, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	2257, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 2273, 670, 671, 672, 673,
	0, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 2265, 2266, 2267, 2268, 0, 703, 0,
	692, 694, 695, 696, 697, 0, 698, 0, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 0, 2249, 2272, 0, 719, 718, 720,
	721, 724, 722, 723, 0, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 0, 730, 731, 732, 3173, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 2239, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 2221, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 959, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 2228, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 2229, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 2230, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 2669,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 2670, 628, 637, 638, 639,
	640, 642, 641, 0, 2225, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 2227, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 2671, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 2252, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 0, 2258, 0, 339, 2248, 340,
	2264, 0, 2271, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 2274, 2275, 0, 0, 349, 350,
	0, 0, 1658, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 1329,
	383, 385, 2262, 2261, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 1314, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 0, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	2260, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 2269, 2270, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	0, 0, 0, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 0, 0, 0, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 1349, 0, 461, 544, 462, 2255,
	2256, 0, 2251, 0, 463, 464, 466, 1351, 0, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 0, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 0,
	1358, 538, 539, 540, 541, 0, 0, 542, 2263, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 0, 1359, 555, 1360, 0,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 2245, 570, 571, 572,
	2246, 573, 574, 575, 0, 576, 0, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 2259, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 0, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 0, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 2257, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 2273, 670, 671, 672, 673, 0, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 2265, 2266, 2267, 2268, 0, 703, 0, 692, 694,
	695, 696, 697, 0, 698, 0, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 0, 2249, 2272, 0, 719, 718, 720, 721, 724,
	722, 723, 0, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 0, 730, 731, 732, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 2239, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 959, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 1689,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4638, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 1658, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 1351, 760, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 0, 0, 1358, 538, 539, 540, 541, 4524,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	2553, 0, 1690, 1689, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	1658, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1748, 754, 755, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 1351, 760, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 0, 0, 1358, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 0, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 2288, 0, 1690, 1689, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 1346, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 1658, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 1347, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 1348, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 1350, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 1349, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 1351,
	760, 1352, 465, 467, 468, 1353, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 1354, 482, 483, 1355, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 1356,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 1357, 536, 524,
	0, 0, 1358, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 1359, 555,
	1360, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 1361, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 1362, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 1877, 0,
	1690, 1689, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 1658, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 1875, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 1351, 760, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 0, 1358, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 1876, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 1874, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 0, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 1745, 0, 1690, 1689, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 1658, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1748, 754, 755, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 1351, 760, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 0,
	1358, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 0, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 1685, 0, 1690, 1689,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	1346, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 1658, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 1347, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 1348, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	1350, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 1349, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 1351, 760, 1352, 465, 467, 468, 1353, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 1354, 482, 483,
	1355, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 1356, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 1357,
	536, 524, 0, 0, 1358, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	1359, 555, 1360, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 1361, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 1683, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 1362, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	1690, 1689, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 1346, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 1658, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 1347,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 1348,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 1350, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	1349, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 1351, 760, 1352, 465, 467, 468, 1353,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 1354,
	482, 483, 1355, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 1356, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 1357, 536, 524, 0, 0, 1358, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 1359, 555, 1360, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 1361, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 1362, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1690, 1689, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 1346, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	1658, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 1347, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 1348, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 1350, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 1349, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 1351, 760, 1352, 465, 467,
	468, 1353, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 1354, 482, 483, 1355, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 1356, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 1357, 536, 524, 0, 0, 1358, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 1359, 555, 1360, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 1361, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 1362, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1690, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 1346, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 1658, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 1347, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 1348, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 1350, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 1349, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 1351, 760, 1352,
	465, 467, 468, 1353, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 1354, 482, 483, 1355, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 1356, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 1357, 536, 524, 0, 0,
	1358, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 1359, 555, 1360, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	1361, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	1362, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 3255,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 4093, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 3259, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 4092, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 3258, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 4089, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 4091, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 4088, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 3257, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 4090, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 3255, 349, 350, 742, 0, 0, 3249, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 3251, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 3259, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 3258, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 3248, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 3257, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 3256,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1958, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 1957, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 1955, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 1956, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 1959, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 1954, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 1952, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 1953, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1662, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1664, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 1397,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1659, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1661, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 1397, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1565, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1567, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 1397, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 821, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	819, 324, 325, 808, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 811, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 817, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 813,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 820,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	807, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 808, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 811, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 812, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 813, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 806, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 808,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 811,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 812, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 813, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 808, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 811, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	4534, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 813, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 1397, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 3959, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 3473, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 3472, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 808, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 811, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	812, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 813, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 3175, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 2637, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 2581, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 2580, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 2565, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 2567, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 2527, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 1397, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1793, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1792, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1682, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1675, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1677, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1482, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1481, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1472, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1471, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1469, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1468, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1464, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1463, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1441, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1440, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 788, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 303, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 811,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 812, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 813, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 2678,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 2676, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 315, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 316, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 317, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 2674, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 315, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 316, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 317, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 315,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	2588, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 316, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 317, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 315, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 2312, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 316,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 317,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 315, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 2306, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 316, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 317, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1034, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 1033,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 1032, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 911, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 900, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 909, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 902,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	908, 428, 904, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	905, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 903, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 906, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	907, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	901, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 894, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 900, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 909, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 902, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 908, 428, 904, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 905, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 903, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 906, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 907, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 901, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 4092, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 4887, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1510, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 1513, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 1511, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 882, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 881, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 880, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	1514, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 878, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1510, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	1513, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	1511, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	882, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 881, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 880, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 1514, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 878, 777, 778, 779, 0,
	703, 0, 692, 1512, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	889, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 887, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 797, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 796, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 795,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 3385,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 5207, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 3899, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 4762,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 4459, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 3103, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 3385, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 3465, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 2445, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 881,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 880, 628, 637, 638, 639,
	640, 3317, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 878,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 2648,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 2635, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1849, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1841, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 872, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 868, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 873,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 882, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 881, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 880, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 1826, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 878, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1799, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1798, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1782, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 1780, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1774, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1752, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1750, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1743, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 1704, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 1667, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1516, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 881,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 880, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 878,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 1487, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1486, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 1478, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1477, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 1422, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 892, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 872, 0,
	312, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 868, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 867, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 873,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 882, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 881, 619, 620,
	621, 622, 869, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 880, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 870, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 878, 777, 778,
	779, 0, 703, 0, 692, 874, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 861, 0, 312, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 753, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 862, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 823, 0, 312, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	815, 0, 312, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 792, 0, 312, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 4124, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 881,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 880, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 878,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 4008, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 3977, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 3973, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 3924, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	3922, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 649, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 3910, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 3907, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 3484, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	312, 0, 0, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	734, 735, 0, 339, 736, 340, 737, 0, 738, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	739, 740, 741, 0, 349, 350, 742, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	378, 379, 380, 381, 382, 0, 383, 385, 743, 744,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	745, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 746, 747, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 748, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 749, 750, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 751, 0, 752, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 753, 754,
	755, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 756, 461, 544, 462, 757, 758, 0, 759, 0,
	463, 464, 466, 0, 760, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 761, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 762, 542, 763, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 764, 0, 555, 0, 765, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 766, 570, 571, 572, 767, 573, 574, 575,
	768, 576, 769, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 770, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 771, 623, 0, 624, 625, 862, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 0, 649,
	772, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 773, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 774,
	670, 671, 672, 673, 775, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 776, 777, 778,
	779, 0, 703, 0, 692, 694, 695, 696, 697, 780,
	698, 781, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 782, 783, 784,
	0, 719, 718, 720, 721, 724, 722, 723, 785, 725,
	726, 727, 312, 0, 0, 0, 728, 729, 786, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 733, 0, 2606, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 734, 735, 0, 339, 736, 340, 737, 0,
	738, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 739, 740, 741, 0, 349, 350, 742, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 0, 378, 379, 380, 381, 382, 0, 383, 385,
	743, 744, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 745, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 746, 747, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 748, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 749, 750, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 751, 0,
	752, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	753, 754, 755, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 756, 461, 544, 462, 757, 758, 0,
	759, 0, 463, 464, 466, 0, 760, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 761,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 762, 542, 763, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 764, 0, 555, 0, 765, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 766, 570, 571, 572, 767, 573,
	574, 575, 768, 576, 769, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	770, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 771, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	0, 0, 772, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 773, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 774, 670, 671, 672, 673, 775, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 776,
	777, 778, 779, 0, 703, 0, 692, 694, 695, 696,
	697, 780, 698, 781, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 782,
	783, 784, 0, 719, 718, 720, 721, 724, 722, 723,
	785, 725, 726, 727, 312, 0, 0, 0, 728, 729,
	786, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 734, 735, 0, 339, 736, 340,
	737, 0, 738, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 739, 740, 741, 0, 349, 350,
	742, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 0, 378, 379, 380, 381, 382, 0,
	383, 385, 743, 744, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 745, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 746, 747, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	748, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 749, 750, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	751, 0, 752, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 1450, 754, 755, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 756, 461, 544, 462, 757,
	758, 0, 759, 0, 463, 464, 466, 0, 760, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 761, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 762, 542, 763, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 764, 0, 555, 0, 765,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 766, 570, 571, 572,
	767, 573, 574, 575, 768, 576, 769, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 770, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 771, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 0, 649, 772, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 773, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 774, 670, 671, 672, 673, 775, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 776, 777, 778, 779, 0, 703, 0, 692, 694,
	695, 696, 697, 780, 698, 781, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 782, 783, 784, 0, 719, 718, 720, 721, 724,
	722, 723, 785, 725, 726, 727, 312, 0, 0, 0,
	728, 729, 786, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 734, 735, 0, 339,
	736, 340, 737, 0, 738, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 739, 740, 741, 0,
	349, 350, 742, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 380, 381,
	382, 0, 383, 385, 743, 744, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 745, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 746,
	747, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 748, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 749,
	750, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 751, 0, 752, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 753, 754, 755, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 756, 461, 544,
	462, 757, 758, 0, 759, 0, 463, 464, 466, 0,
	760, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 761, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 762, 542,
	763, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 764, 0, 555,
	0, 765, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 766, 570,
	571, 572, 767, 573, 574, 575, 768, 576, 769, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 770, 590, 591, 1370, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 771, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 0, 649, 772, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	773, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 774, 670, 671, 672, 673,
	775, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 776, 777, 778, 779, 0, 703, 0,
	692, 694, 695, 696, 697, 780, 698, 781, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 782, 783, 784, 0, 719, 718, 720,
	721, 724, 722, 723, 785, 725, 726, 727, 312, 0,
	0, 0, 728, 729, 786, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 734, 735,
	0, 339, 736, 340, 737, 0, 738, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 739, 740,
	741, 0, 349, 350, 742, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	380, 381, 382, 0, 383, 385, 743, 744, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 745, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 746, 747, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 748, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 749, 750, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 751, 0, 752, 0, 0, 443,
	444, 445, 446, 447, 448, 449, 753, 754, 755, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 756,
	461, 544, 462, 757, 758, 0, 759, 0, 463, 464,
	466, 0, 760, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 761, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	762, 542, 763, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 764,
	0, 555, 0, 765, 556, 557, 549, 558, 559, 560,
	0, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	766, 570, 571, 572, 767, 573, 574, 575, 768, 576,
	769, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 0, 588, 589, 770, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	771, 0, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 0, 649, 772, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 773, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 774, 670, 671,
	672, 673, 775, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 776, 777, 778, 779, 0,
	703, 0, 692, 694, 695, 696, 697, 780, 698, 781,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 782, 783, 784, 0, 719,
	718, 720, 721, 724, 722, 723, 785, 725, 726, 727,
	1788, 0, 1494, 0, 728, 729, 786, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	319, 321, 320, 322, 323, 324, 325, 0, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 335, 336,
	337, 338, 0, 0, 0, 339, 0, 340, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 0, 0,
	0, 348, 0, 0, 0, 0, 349, 350, 0, 0,
	0, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	0, 0, 360, 361, 362, 359, 363, 0, 364, 0,
	365, 366, 367, 368, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 0, 0, 0, 0,
	0, 1496, 378, 379, 380, 381, 382, 0, 383, 385,
	0, 0, 0, 388, 390, 384, 386, 0, 389, 387,
	391, 392, 0, 393, 394, 395, 0, 0, 396, 397,
	398, 0, 399, 400, 401, 0, 402, 403, 404, 0,
	405, 406, 0, 407, 408, 409, 411, 413, 410, 412,
	414, 415, 416, 417, 418, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 422, 0, 0,
	0, 0, 423, 0, 424, 425, 426, 0, 427, 428,
	0, 0, 429, 430, 431, 0, 0, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 0, 441, 0, 0,
	0, 442, 0, 443, 444, 445, 446, 447, 448, 449,
	1787, 0, 0, 543, 0, 450, 451, 452, 0, 453,
	454, 455, 456, 457, 0, 0, 0, 0, 458, 459,
	460, 0, 0, 0, 461, 544, 462, 0, 0, 0,
	0, 0, 463, 464, 466, 0, 0, 0, 465, 467,
	468, 0, 469, 0, 0, 0, 470, 471, 472, 473,
	474, 475, 476, 0, 477, 479, 478, 0, 481, 0,
	480, 0, 482, 483, 0, 0, 484, 485, 486, 487,
	488, 489, 492, 0, 0, 490, 491, 493, 494, 0,
	495, 496, 498, 501, 497, 499, 500, 502, 515, 516,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 518, 0, 517, 0, 519, 520, 521, 522,
	523, 530, 532, 533, 528, 529, 531, 534, 535, 537,
	525, 526, 527, 0, 536, 524, 0, 0, 0, 538,
	539, 540, 541, 0, 0, 542, 0, 545, 546, 0,
	0, 547, 0, 548, 0, 0, 550, 551, 552, 0,
	0, 553, 554, 0, 0, 555, 0, 0, 556, 557,
	549, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 568, 569, 0, 570, 571, 572, 0, 573,
	574, 575, 0, 576, 0, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 587, 588, 589,
	0, 590, 591, 593, 592, 594, 0, 595, 0, 596,
	597, 598, 0, 0, 0, 0, 0, 599, 600, 602,
	0, 603, 604, 605, 606, 601, 607, 608, 609, 610,
	611, 612, 0, 614, 615, 613, 616, 617, 0, 618,
	619, 620, 621, 622, 0, 623, 0, 624, 625, 633,
	634, 635, 626, 627, 629, 636, 628, 637, 638, 639,
	640, 642, 641, 0, 644, 645, 643, 646, 647, 648,
	1497, 649, 0, 650, 630, 631, 651, 652, 0, 653,
	654, 655, 656, 657, 658, 659, 0, 0, 660, 0,
	661, 662, 663, 664, 665, 666, 668, 632, 669, 674,
	675, 0, 670, 671, 672, 673, 0, 677, 678, 679,
	680, 0, 681, 682, 0, 676, 667, 0, 683, 684,
	685, 686, 687, 688, 0, 689, 690, 0, 691, 0,
	0, 0, 0, 0, 703, 0, 692, 694, 695, 696,
	697, 0, 698, 0, 0, 699, 700, 701, 702, 693,
	704, 705, 0, 0, 706, 707, 709, 711, 712, 708,
	710, 713, 0, 714, 0, 0, 715, 716, 717, 0,
	0, 0, 0, 719, 718, 720, 721, 724, 722, 723,
	0, 725, 726, 727, 1707, 0, 1494, 0, 728, 729,
	0, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 0, 0, 0, 339,
	0, 340, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 0, 0, 0, 0,
	349, 350, 0, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 1496, 378, 379, 380, 381,
	382, 0, 383, 385, 0, 0, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 0, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 0, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 0,
	0, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 0, 0, 0, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 1706, 0, 0, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 0, 461, 544,
	462, 0, 0, 0, 0, 0, 463, 464, 466, 0,
	0, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 0, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 0, 542,
	0, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 0, 0, 555,
	0, 0, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 0, 570,
	571, 572, 0, 573, 574, 575, 0, 576, 0, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 0, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 0, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1497, 649, 0, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	0, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 0, 670, 671, 672, 673,
	0, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 0, 0, 0, 0, 0, 703, 0,
	692, 694, 695, 696, 697, 0, 698, 0, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 0, 0, 0, 0, 719, 718, 720,
	721, 724, 722, 723, 0, 725, 726, 727, 1492, 0,
	1494, 0, 728, 729, 0, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 319, 321,
	320, 322, 323, 324, 325, 0, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 335, 336, 337, 338,
	0, 0, 0, 339, 0, 340, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 0, 0, 0, 348,
	0, 0, 0, 0, 349, 350, 0, 0, 0, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 0, 0,
	360, 361, 362, 359, 363, 0, 364, 0, 365, 366,
	367, 368, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 0, 0, 0, 0, 0, 1496,
	378, 379, 380, 381, 382, 0, 383, 385, 0, 0,
	0, 388, 390, 384, 386, 0, 389, 387, 391, 392,
	0, 393, 394, 395, 0, 0, 396, 397, 398, 0,
	399, 400, 401, 0, 402, 403, 404, 0, 405, 406,
	0, 407, 408, 409, 411, 413, 410, 412, 414, 415,
	416, 417, 418, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 422, 0, 0, 0, 0,
	423, 0, 424, 425, 426, 0, 427, 428, 0, 0,
	429, 430, 431, 0, 0, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 0, 441, 0, 0, 0, 442,
	0, 443, 444, 445, 446, 447, 448, 449, 1491, 0,
	0, 543, 0, 450, 451, 452, 0, 453, 454, 455,
	456, 457, 0, 0, 0, 0, 458, 459, 460, 0,
	0, 0, 461, 544, 462, 0, 0, 0, 0, 0,
	463, 464, 466, 0, 0, 0, 465, 467, 468, 0,
	469, 0, 0, 0, 470, 471, 472, 473, 474, 475,
	476, 0, 477, 479, 478, 0, 481, 0, 480, 0,
	482, 483, 0, 0, 484, 485, 486, 487, 488, 489,
	492, 0, 0, 490, 491, 493, 494, 0, 495, 496,
	498, 501, 497, 499, 500, 502, 515, 516, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	518, 0, 517, 0, 519, 520, 521, 522, 523, 530,
	532, 533, 528, 529, 531, 534, 535, 537, 525, 526,
	527, 0, 536, 524, 0, 0, 0, 538, 539, 540,
	541, 0, 0, 542, 0, 545, 546, 0, 0, 547,
	0, 548, 0, 0, 550, 551, 552, 0, 0, 553,
	554, 0, 0, 555, 0, 0, 556, 557, 549, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 0,
	568, 569, 0, 570, 571, 572, 0, 573, 574, 575,
	0, 576, 0, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 587, 588, 589, 0, 590,
	591, 593, 592, 594, 0, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 599, 600, 602, 0, 603,
	604, 605, 606, 601, 607, 608, 609, 610, 611, 612,
	0, 614, 615, 613, 616, 617, 0, 618, 619, 620,
	621, 622, 0, 623, 0, 624, 625, 633, 634, 635,
	626, 627, 629, 636, 628, 637, 638, 639, 640, 642,
	641, 0, 644, 645, 643, 646, 647, 648, 1497, 649,
	0, 650, 630, 631, 651, 652, 0, 653, 654, 655,
	656, 657, 658, 659, 0, 0, 660, 0, 661, 662,
	663, 664, 665, 666, 668, 632, 669, 674, 675, 0,
	670, 671, 672, 673, 0, 677, 678, 679, 680, 0,
	681, 682, 0, 676, 667, 0, 683, 684, 685, 686,
	687, 688, 0, 689, 690, 0, 691, 0, 0, 0,
	0, 0, 703, 0, 692, 694, 695, 696, 697, 0,
	698, 0, 0, 699, 700, 701, 702, 693, 704, 705,
	0, 0, 706, 707, 709, 711, 712, 708, 710, 713,
	0, 714, 0, 0, 715, 716, 717, 0, 0, 0,
	0, 719, 718, 720, 721, 724, 722, 723, 0, 725,
	726, 727, 2326, 0, 1494, 0, 728, 729, 0, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 321, 320, 322, 323, 324, 325, 0,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	335, 336, 337, 338, 0, 0, 0, 339, 0, 340,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	0, 0, 0, 348, 0, 0, 0, 0, 349, 350,
	0, 0, 0, 0, 351, 352, 353, 354, 355, 356,
	357, 358, 0, 0, 360, 361, 362, 359, 363, 0,
	364, 0, 365, 366, 367, 368, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 0, 0,
	0, 0, 0, 1496, 378, 379, 380, 381, 382, 0,
	383, 385, 0, 0, 0, 388, 390, 384, 386, 0,
	389, 387, 391, 392, 0, 393, 394, 395, 0, 0,
	396, 397, 398, 0, 399, 400, 401, 0, 402, 403,
	404, 0, 405, 406, 0, 407, 408, 409, 411, 413,
	410, 412, 414, 415, 416, 417, 418, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 422,
	0, 0, 0, 0, 423, 0, 424, 425, 426, 0,
	427, 428, 0, 0, 429, 430, 431, 0, 0, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 0, 441,
	0, 0, 0, 442, 0, 443, 444, 445, 446, 447,
	448, 449, 0, 0, 0, 543, 0, 450, 451, 452,
	0, 453, 454, 455, 456, 457, 0, 0, 0, 0,
	458, 459, 460, 0, 0, 0, 461, 544, 462, 0,
	0, 0, 0, 0, 463, 464, 466, 0, 0, 0,
	465, 467, 468, 0, 469, 0, 0, 0, 470, 471,
	472, 473, 474, 475, 476, 0, 477, 479, 478, 0,
	481, 0, 480, 0, 482, 483, 0, 0, 484, 485,
	486, 487, 488, 489, 492, 0, 0, 490, 491, 493,
	494, 0, 495, 496, 498, 501, 497, 499, 500, 502,
	515, 516, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 518, 0, 517, 0, 519, 520,
	521, 522, 523, 530, 532, 533, 528, 529, 531, 534,
	535, 537, 525, 526, 527, 0, 536, 524, 0, 0,
	0, 538, 539, 540, 541, 0, 0, 542, 0, 545,
	546, 0, 0, 547, 0, 548, 0, 0, 550, 551,
	552, 0, 0, 553, 554, 0, 0, 555, 0, 0,
	556, 557, 549, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 0, 568, 569, 0, 570, 571, 572,
	0, 573, 574, 575, 0, 576, 0, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 587,
	588, 589, 0, 590, 591, 593, 592, 594, 0, 595,
	0, 596, 597, 598, 0, 0, 0, 0, 0, 599,
	600, 602, 0, 603, 604, 605, 606, 601, 607, 608,
	609, 610, 611, 612, 0, 614, 615, 613, 616, 617,
	0, 618, 619, 620, 621, 622, 0, 623, 0, 624,
	625, 633, 634, 635, 626, 627, 629, 636, 628, 637,
	638, 639, 640, 642, 641, 0, 644, 645, 643, 646,
	647, 648, 1497, 649, 0, 650, 630, 631, 651, 652,
	0, 653, 654, 655, 656, 657, 658, 659, 0, 0,
	660, 0, 661, 662, 663, 664, 665, 666, 668, 632,
	669, 674, 675, 0, 670, 671, 672, 673, 0, 677,
	678, 679, 680, 0, 681, 682, 0, 676, 667, 0,
	683, 684, 685, 686, 687, 688, 0, 689, 690, 0,
	691, 0, 0, 0, 0, 0, 703, 0, 692, 694,
	695, 696, 697, 0, 698, 0, 0, 699, 700, 701,
	702, 693, 704, 705, 0, 0, 706, 707, 709, 711,
	712, 708, 710, 713, 0, 714, 0, 0, 715, 716,
	717, 0, 0, 0, 0, 719, 718, 720, 721, 724,
	722, 723, 0, 725, 726, 727, 2286, 0, 1494, 0,
	728, 729, 0, 730, 731, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 319, 321, 320, 322,
	323, 324, 325, 0, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 335, 336, 337, 338, 0, 0,
	0, 339, 0, 340, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 0, 0, 0, 348, 0, 0,
	0, 0, 349, 350, 0, 0, 0, 0, 351, 352,
	353, 354, 355, 356, 357, 358, 0, 0, 360, 361,
	362, 359, 363, 0, 364, 0, 365, 366, 367, 368,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 0, 0, 0, 0, 0, 1496, 378, 379,
	380, 381, 382, 0, 383, 385, 0, 0, 0, 388,
	390, 384, 386, 0, 389, 387, 391, 392, 0, 393,
	394, 395, 0, 0, 396, 397, 398, 0, 399, 400,
	401, 0, 402, 403, 404, 0, 405, 406, 0, 407,
	408, 409, 411, 413, 410, 412, 414, 415, 416, 417,
	418, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 0, 0, 0, 0, 423, 0,
	424, 425, 426, 0, 427, 428, 0, 0, 429, 430,
	431, 0, 0, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 0, 441, 0, 0, 0, 442, 0, 443,
	444, 445, 446, 447, 448, 449, 0, 0, 0, 543,
	0, 450, 451, 452, 0, 453, 454, 455, 456, 457,
	0, 0, 0, 0, 458, 459, 460, 0, 0, 0,
	461, 544, 462, 0, 0, 0, 0, 0, 463, 464,
	466, 0, 0, 0, 465, 467, 468, 0, 469, 0,
	0, 0, 470, 471, 472, 473, 474, 475, 476, 0,
	477, 479, 478, 0, 481, 0, 480, 0, 482, 483,
	0, 0, 484, 485, 486, 487, 488, 489, 492, 0,
	0, 490, 491, 493, 494, 0, 495, 496, 498, 501,
	497, 499, 500, 502, 515, 516, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 518, 0,
	517, 0, 519, 520, 521, 522, 523, 530, 532, 533,
	528, 529, 531, 534, 535, 537, 525, 526, 527, 0,
	536, 524, 0, 0, 0, 538, 539, 540, 541, 0,
	0, 542, 0, 545, 546, 0, 0, 547, 0, 548,
	0, 0, 550, 551, 552, 0, 0, 553, 554, 0,
	0, 555, 0, 0, 556, 557, 549, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 0, 568, 569,
	0, 570, 571, 572, 0, 573, 574, 575, 0, 576,
	0, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 587, 588, 589, 0, 590, 591, 593,
	592, 594, 0, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 599, 600, 602, 0, 603, 604, 605,
	606, 601, 607, 608, 609, 610, 611, 612, 0, 614,
	615, 613, 616, 617, 0, 618, 619, 620, 621, 622,
	0, 623, 0, 624, 625, 633, 634, 635, 626, 627,
	629, 636, 628, 637, 638, 639, 640, 642, 641, 0,
	644, 645, 643, 646, 647, 648, 1497, 649, 0, 650,
	630, 631, 651, 652, 0, 653, 654, 655, 656, 657,
	658, 659, 0, 0, 660, 0, 661, 662, 663, 664,
	665, 666, 668, 632, 669, 674, 675, 0, 670, 671,
	672, 673, 0, 677, 678, 679, 680, 0, 681, 682,
	0, 676, 667, 0, 683, 684, 685, 686, 687, 688,
	0, 689, 690, 0, 691, 0, 0, 0, 0, 0,
	703, 0, 692, 694, 695, 696, 697, 0, 698, 0,
	0, 699, 700, 701, 702, 693, 704, 705, 0, 0,
	706, 707, 709, 711, 712, 708, 710, 713, 0, 714,
	0, 0, 715, 716, 717, 0, 0, 0, 0, 719,
	718, 720, 721, 724, 722, 723, 1494, 725, 726, 727,
	0, 0, 0, 0, 728, 729, 0, 730, 731, 732,
	0, 0, 0, 318, 319, 321, 320, 322, 323, 324,
	325, 0, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 335, 336, 337, 338, 0, 0, 0, 339,
	0, 340, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 0, 0, 0, 348, 0, 0, 0, 0,
	349, 350, 0, 0, 0, 0, 351, 352, 353, 354,
	355, 356, 357, 358, 0, 0, 360, 361, 362, 359,
	363, 0, 364, 0, 365, 366, 367, 368, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	0, 0, 0, 0, 0, 1496, 378, 379, 380, 381,
	382, 0, 383, 385, 0, 0, 0, 388, 390, 384,
	386, 0, 389, 387, 391, 392, 0, 393, 394, 395,
	0, 0, 396, 397, 398, 0, 399, 400, 401, 0,
	402, 403, 404, 0, 405, 406, 0, 407, 408, 409,
	411, 413, 410, 412, 414, 415, 416, 417, 418, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 0, 0, 0, 0, 423, 0, 424, 425,
	426, 0, 427, 428, 0, 0, 429, 430, 431, 0,
	0, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	0, 441, 0, 0, 0, 442, 0, 443, 444, 445,
	446, 447, 448, 449, 0, 0, 0, 543, 0, 450,
	451, 452, 0, 453, 454, 455, 456, 457, 0, 0,
	0, 0, 458, 459, 460, 0, 0, 0, 461, 544,
	462, 0, 0, 0, 0, 0, 463, 464, 466, 0,
	0, 0, 465, 467, 468, 0, 469, 0, 0, 0,
	470, 471, 472, 473, 474, 475, 476, 0, 477, 479,
	478, 0, 481, 0, 480, 0, 482, 483, 0, 0,
	484, 485, 486, 487, 488, 489, 492, 0, 0, 490,
	491, 493, 494, 0, 495, 496, 498, 501, 497, 499,
	500, 502, 515, 516, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 518, 0, 517, 0,
	519, 520, 521, 522, 523, 530, 532, 533, 528, 529,
	531, 534, 535, 537, 525, 526, 527, 0, 536, 524,
	0, 0, 0, 538, 539, 540, 541, 0, 0, 542,
	0, 545, 546, 0, 0, 547, 0, 548, 0, 0,
	550, 551, 552, 0, 0, 553, 554, 0, 0, 555,
	0, 0, 556, 557, 549, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 568, 569, 0, 570,
	571, 572, 0, 573, 574, 575, 0, 576, 0, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 587, 588, 589, 0, 590, 591, 593, 592, 594,
	0, 595, 0, 596, 597, 598, 0, 0, 0, 0,
	0, 599, 600, 602, 0, 603, 604, 605, 606, 601,
	607, 608, 609, 610, 611, 612, 0, 614, 615, 613,
	616, 617, 0, 618, 619, 620, 621, 622, 0, 623,
	0, 624, 625, 633, 634, 635, 626, 627, 629, 636,
	628, 637, 638, 639, 640, 642, 641, 0, 644, 645,
	643, 646, 647, 648, 1497, 649, 0, 650, 630, 631,
	651, 652, 0, 653, 654, 655, 656, 657, 658, 659,
	0, 0, 660, 0, 661, 662, 663, 664, 665, 666,
	668, 632, 669, 674, 675, 0, 670, 671, 672, 673,
	0, 677, 678, 679, 680, 0, 681, 682, 0, 676,
	667, 0, 683, 684, 685, 686, 687, 688, 0, 689,
	690, 0, 691, 0, 0, 0, 0, 0, 703, 0,
	692, 694, 695, 696, 697, 0, 698, 0, 0, 699,
	700, 701, 702, 693, 704, 705, 0, 0, 706, 707,
	709, 711, 712, 708, 710, 713, 0, 714, 0, 0,
	715, 716, 717, 0, 0, 0, 0, 719, 718, 720,
	721, 724, 722, 723, 0, 725, 726, 727, 0, 0,
	0, 0, 728, 729, 0, 730, 731, 732, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 2046, 2040, 2011, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 2059, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 2046, 2040,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 2065, 0, 0, 0,
	2017, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 2050, 0, 2017, 0, 2060, 0, 0,
	0, 0, 0, 0, 2039, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 0, 2050, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 2039,
	2041, 0, 0, 2048, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 2032, 2056,
	0, 2057, 0, 0, 0, 0, 0, 0, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 2032, 2060, 0, 0, 2058, 0, 0,
	0, 2039, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 2056, 0, 2057, 0, 0, 0, 0, 0, 2062,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 0, 0, 5181, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0,
	0, 5180, 0, 0, 0, 0, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 2040, 0, 0, 0, 0, 0, 0, 0, 2012,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 2065, 0,
	0, 0, 0, 4974, 0, 0, 0, 2011, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 2046, 2040, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 2046, 2040, 2011,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 2059, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 2065, 0, 0, 0, 2017,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 0, 0, 0,
	0, 2017, 0, 2056, 0, 2057, 0, 0, 0, 0,
	0, 0, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 2034, 2035, 2036, 2037,
	0, 0, 0, 0, 2050, 0, 2017, 2032, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 2050,
	0, 0, 0, 2060, 0, 0, 2058, 0, 0, 0,
	2039, 2041, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 2032,
	2056, 0, 2057, 0, 0, 0, 0, 0, 2062, 2026,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 2051, 0, 0, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 2064, 2012, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 2051, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 2049, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 4786, 0, 0, 0, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 0, 0, 2017, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 0, 0, 4686, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 0, 2049,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 2056, 0, 2057,
	0, 0, 4685, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 2009, 2010, 0, 2042, 2043, 2044,
	2053, 2054, 2055, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2046, 2040, 0,
	0, 2032, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 2046, 2040, 2011, 0, 0, 0, 0, 0,
	2058, 2012, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 2059, 0, 2028, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 2062, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 2034, 2035, 2036, 2037,
	2046, 2040, 0, 0, 0, 0, 2017, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 2034, 2035, 2036, 2037, 0, 0, 2011, 0, 2050,
	2051, 2017, 0, 2060, 0, 0, 0, 0, 2031, 0,
	2039, 2041, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 2057, 0, 0, 0, 2064, 0, 0, 2026,
	2027, 0, 0, 0, 2050, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 2048, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 2032,
	0, 0, 0, 2058, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 2047, 0, 0, 0, 0, 4684,
	0, 0, 2050, 0, 0, 2062, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 2057, 0, 0, 0, 2047,
	0, 0, 2026, 2027, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 2046, 2040,
	0, 0, 0, 2051, 0, 0, 2058, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 2062, 2064,
	0, 0, 0, 0, 0, 2011, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020,
	2021, 2013, 2014, 2015, 2016, 2018, 2019, 2034, 2035, 2036,
	2037, 0, 4272, 0, 0, 0, 2051, 2017, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 2064, 0, 0, 0, 0, 3691, 0, 0,
	2050, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 2039, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 2057, 0, 0, 0, 0, 0, 0,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 3690, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 2009, 2010, 0, 2042,
	2043, 2044, 2053, 2054, 2055, 0, 2038, 0, 0, 0,
	2505, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	2040, 0, 0, 0, 0, 0, 0, 0, 2012, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 2051, 0, 2011, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 2031, 0, 0,
	2017, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 2039, 2041, 0, 2506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 0, 2034, 2035,
	2036, 2037, 0, 0, 0, 0, 0, 0, 2017, 0,
	2049, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 2032, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	0, 0, 0, 3689, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 2039, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 2056, 0, 2057, 0, 0, 0, 0, 0,
	0, 2026, 2027, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2009,
	2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 2046, 2040, 0, 2058, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 2033, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	2031, 0, 0, 0, 2405, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 0,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 2038, 0, 0,
	2046, 2040, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 2403,
	0, 0, 0, 0, 0, 0, 0, 2011, 2507, 0,
	0, 2034, 2035, 2036, 2037, 2051, 0, 0, 2031, 0,
	0, 2017, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 2064, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 0, 2050, 0, 3688, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 2508, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 0, 0, 0, 2034,
	2035, 2036, 2037, 0, 0, 0, 0, 0, 0, 2017,
	5502, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 2049, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0,
	2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0,
	0, 0, 2050, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 2056, 0, 2057, 0, 0, 0, 0,
	0, 0, 2026, 2027, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2404,
	2038, 2046, 2040, 0, 0, 0, 2058, 0, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 0, 2033, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2031,
	0, 5501, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 2051, 0, 0, 0,
	2017, 0, 3753, 0, 0, 0, 0, 0, 0, 3752,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 2064, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 2050, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 2039, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 2040, 0, 0, 2058, 0, 3623,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 2009, 2010,
	0, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 2046, 2040, 0, 0, 0, 0, 0, 0, 0,
	2012, 0, 0, 3624, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 2065,
	2042, 2043, 2044, 2053, 2054, 2055, 0, 0, 2011, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 2051, 0, 2031,
	2046, 2040, 2017, 0, 0, 0, 0, 0, 2028, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 2050, 0, 2011, 0, 2060,
	0, 0, 0, 0, 0, 0, 2039, 2041, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 2057, 0,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	2034, 2035, 2036, 2037, 0, 0, 0, 0, 0, 0,
	2017, 0, 5080, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 0, 2050, 0, 0, 0, 2060, 0, 2034,
	2035, 2036, 2037, 0, 2039, 2041, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 2056, 0, 2057, 0, 0, 0,
	0, 0, 0, 2026, 2027, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 2050, 2048, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 2039, 2041, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 2057, 0, 0, 0, 0,
	0, 0, 2026, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2048, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 1221, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 2062, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 2051, 2038, 0,
	0, 0, 0, 0, 0, 2046, 2040, 0, 0, 0,
	0, 0, 0, 0, 2012, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 2059, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 2064, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 2051, 0, 0, 0,
	0, 2009, 2010, 2031, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2046, 2040, 0, 0, 0, 0,
	0, 0, 2064, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 0, 2023, 2024, 2030, 2052, 2029,
	2025, 2011, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018,
	2019, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 2024, 2030, 2052, 2029, 2025,
	0, 2022, 2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 2050, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 2039, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 2056, 0,
	2057, 0, 0, 2017, 0, 0, 0, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 2050, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 2046, 2040, 2026, 2027, 0, 0,
	0, 2058, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 2048, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 2065, 2062, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 2035, 2036, 2037, 0, 0, 0,
	0, 2051, 0, 2017, 0, 4487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 0, 2033, 0,
	2060, 0, 0, 0, 0, 0, 4835, 2039, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 2057,
	2051, 0, 0, 0, 0, 0, 2026, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 2049, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 4488, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 2042, 2043, 2044, 2053, 2054, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 2046, 2040, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2009,
	2010, 2065, 2042, 2043, 2044, 2053, 2054, 2055, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 2031, 2046, 2040, 0, 0, 0, 0, 0, 0,
	2028, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 2035, 2036, 2037, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 2050, 0, 0, 0, 2060,
	0, 2034, 2035, 2036, 2037, 0, 2039, 2041, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	3759, 0, 0, 0, 0, 0, 2056, 0, 2057, 0,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 2048, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 2039, 2041, 0, 0, 0,
	2032, 0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053,
	2054, 2055, 0, 0, 0, 2056, 0, 2057, 0, 0,
	0, 0, 0, 0, 2026, 2027, 2046, 2040, 0, 0,
	0, 3754, 0, 0, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 2059, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	2047, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2062, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 2034, 2035, 2036, 2037, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2051,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 0, 2050, 0,
	0, 0, 2060, 0, 0, 2064, 0, 0, 0, 2039,
	2041, 0, 0, 0, 0, 0, 0, 0, 4253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 2056,
	0, 2057, 0, 0, 0, 0, 0, 0, 2026, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2048, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 2024, 2030,
	2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015,
	2016, 2018, 2019, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2047, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 2023, 2024, 2030, 2052,
	2029, 2025, 0, 2022, 2020, 2021, 2013, 2014, 2015, 2016,
	2018, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2009, 2010, 0, 2042, 2043, 2044, 2053, 2054,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 2046, 2040, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2010, 2065, 2042, 2043, 2044, 2053, 2054, 2055,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2051, 2031, 2046, 2040, 0, 0, 0, 3692,
	0, 0, 2028, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 2024, 2030, 2052, 2029, 2025, 0, 2022, 2020, 2021,
	2013, 2014, 2015, 2016, 2018, 2019, 0, 2050, 0, 0,
	0, 2060, 0, 2034, 2035, 2036, 2037, 0, 2039, 2041,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	2057, 0, 0, 0, 0, 0, 0, 2026, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 2048, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 2032, 0, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 0, 0, 0, 2056, 0, 2057,
	0, 0, 0, 0, 0, 0, 2026, 2027, 2046, 2040,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 0, 2059, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 2047, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 3719, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	2050, 0, 0, 0, 2060, 0, 0, 2064, 0, 0,
	0, 2039, 2041, 0, 0, 2009, 2010, 0, 2042, 2043,
	2044, 2053, 2054, 2055, 0, 0, 0, 0, 0, 0,
	2051, 2056, 0, 2057, 0, 0, 0, 0, 2046, 2040,
	2026, 2027, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	2048, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 2023,
	2024, 2030, 2052, 2029, 2025, 2028, 2022, 2020, 2021, 2013,
	2014, 2015, 2016, 2018, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2047, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 2023, 2024,
	2030, 2052, 2029, 2025, 0, 2022, 2020, 2021, 2013, 2014,
	2015, 2016, 2018, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 2009, 2010, 2017, 2042, 2043,
	2044, 2053, 2054, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 2046, 2040,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	2050, 0, 2033, 0, 2060, 0, 0, 0, 0, 0,
	0, 2039, 2041, 0, 0, 0, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 2056, 0, 2057, 2051, 0, 2031, 0, 0, 0,
	2026, 2027, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 2034, 2035, 2036,
	2037, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 2618, 0, 2047, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	2050, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 2039, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 2057, 0, 0, 2038, 0, 0, 0,
	2026, 2027, 0, 0, 0, 1101, 0, 1153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1124, 0, 1107, 1106, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1126, 0, 0, 0,
	0, 0, 1108, 0, 2058, 0, 0, 1111, 0, 0,
	2064, 0, 1165, 0, 1136, 0, 0, 0, 0, 0,
	0, 0, 1121, 1122, 0, 0, 0, 0, 0, 0,
	0, 0, 1141, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1154, 1113, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 0, 0, 0, 0,
	2049, 1151, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	0, 0, 2033, 0, 0, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 1105, 0, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 0, 1127, 1125, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 1137, 0, 0,
	1159, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1162, 1150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 2024, 2030, 2052, 2029, 2025, 0, 2022,
	2020, 2021, 2013, 2014, 2015, 2016, 2018, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 1145, 1146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1156, 1143, 0, 0, 0, 0,
	0, 0, 0, 1163, 1138, 0, 0, 1130, 1128, 0,
	0, 0, 1133, 0, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 1103, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1149, 0, 0, 1147, 0, 1135, 0, 0,
	0, 0, 0, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 1139, 0, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 1116, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1144,
}

var sqlPact = [...]int32{
	324, -1000, -1000, -1000, -1000, -1000, -1000, 232, -1000, -1000,
	231, 230, 229, 226, 225, 223, 219, 218, 217, 213,
	211, -1000, -1000, 209, 207, 206, 205, -1000, 203, 202,
	-1000, 200, -1000, -1000, 199, -1000, 195, 191, 190, -1000,
	-1000, 188, -1000, 187, -1000, -1000, -1000, -1000, 186, 185,
	183, 109686, 109072, 110298, 2619, 137892, 119492, 2264, 97418, 137278,
	96804, 136664, 2484, 11347, 136050, 3102, 182, -1000, 135436, 181,
	179, 171, -1000, 118878, 134822, 116424, 115810, 2176, 1839, 1812,
	-1000, 165, 163, -1000, 10032, 82608, 160, 159, 157, 156,
	2645, 155, -1000, 149, 148, -1000, 147, 145, -1000, 12116,
	1643, -1000, 140, 139, 138, -1000, 1181, 115196, 135, 134,
	131, 2876, 127, 125, 80158, 122, 119, 118, 2482, 3202,
	-1000, -1000, 2291, -1000, -1000, 116, 115, 114, 113, 111,
	110, 109, 108, 106, 101, 99, 98, 95, -1000, 94,
	93, 92, 91, 90, -1000, 89, 88, 87, -1000, 86,
	-1000, 84, 81, 78, 77, 76, 75, 73, 71, 68,
	67, 64, 63, 61, 59, 57, 158463, -1000, -1000, 55,
	-1000, 2185, 1809, 1806, 1801, 1050, 52, 51, 48, 46,
	45, 44, 43, 41, 39, 38, 37, 34, -1000, 33,
	29, 28, 25, 21, 18, 17, 16, 15, -1000, 197,
	12, 10, 9, 8, 7, 6, 5, -1000, 3794, 3949,
	-1000, 1815, 928, 1297, 36268, 3364, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 147072, 138504, 4, -64, 2,
	-1000, 3768, 1029, 65287, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 335, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 492,
	2688, 769, -1000, -1000, -1000, 134208, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2617, -30, 98030, -1000, 2338, -1000,
	-1000, -1000, -1000, -1000, 768, -1000, 2612, 2559, 390, 2553,
	98030, -1000, -1000, -1000, 3820, 3707, 108458, 2783, 4261, 4260,
	4257, 4255, 4254, 146460, 2058, 2856, 4253, 4251, 4250, 4249,
	4248, 4247, 4246, -1000, 107844, 1131, 107230, 106616, 3817, 133596,
	106002, 132982, 149526, 55234, 863, 3819, -1000, -1000, -1000, -1000,
	-1000, -1000, 138504, -1000, 1128, -1000, -1000, 4245, 2317, 764,
	118264, -1000, -1000, 132368, 2181, -1000, -1000, -1000, 979, 1303,
	38784, 38784, 38784, 331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3830, -1000, -1000, -1000, -1000, 138504, 3060, 3060, 1524,
	1512, 1512, 3060, 3060, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4244, 4243, 4240, 4235, 4231, 1459, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 96190, 28531, 95576, 94962, 131754,
	54605, 105388, 104774, 90664, 4226, 4224, 110298, 53976, 62779, 3948,
	131140, 148912, 3941, 3939, 1126, 2322, 1541, -1000, -1000, -1000,
	-1000, -1000, -1000, -20, 86302, 4018, 138504, -1000, 330, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 53347, 599, 52718, 788,
	52089, 738, 130526, -1000, -1000, -1000, -1000, -1000, 90040, 3704,
	-1000, 129912, 1617, 2781, 4221, 4220, 1225, 4217, 3681, 1944,
	4216, 4215, 4213, 4211, 4210, 4209, 4206, 1667, 129298, 3011,
	128684, 1963, 148298, 2160, 1123, 104160, 110298, 2969, 128070, 1656,
	1652, -1000, -1000, -1000, -1000, 3489, 3196, 3195, 1416, -1000,
	-1000, -1000, -1000, -1000, 69023, 9922, 8649, -1000, -1000, 11679,
	127456, 72133, 110298, 110298, -1000, -1000, -1000, -1000, -1000, -1000,
	51460, 416, 50831, 839, 126842, -1000, -1000, 69645, 3314, 1176,
	-1000, -1000, -1000, -1000, -1000, 126228, 50202, 414, 49573, 789,
	138504, -1000, 3360, 2184, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2470, 1757, 4016, 3145, 89416, 2329, 1537,
	3764, 3486, 3485, 1630, 2320, 3483, 4205, 2959, 3471, 3468,
	3467, 3465, 3462, 1739, 2901, 408, 2895, 35639, 3342, 2025,
	48944, 1685, 1640, 3460, 3459, 4046, 3890, 2305, 2330, 2217,
	2303, 94348, 4202, 4201, 3730, 3451, 3423, 3203, 3421, 2177,
	-1000, 3313, 1660, 328, -1000, -1000, -1000, -1000, -1000, -1000,
	328, 1589, -1000, -1000, -1000, -1000, -1000, 99254, -1000, -1000,
	1459, -1000, -1000, -1000, 1419, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1815, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4002, -1000, 2325, -1000, -1000, -1000, 2818, 3663, 3663,
	3663, 3814, 481, 480, -1000, 197, 921, 1191, -1000, -1000,
	158004, -1000, -1000, 55863, 55863, 55863, 55863, 55863, 55863, 55863,
	55863, 2507, -1000, 757, -1000, -1000, 810, -1000, 756, 694,
	605, -1000, -1000, -1000, -1000, -1000, -1000, 753, -1000, -1000,
	-1000, -1000, -1000, -1000, 3986, -1000, 31728, -1000, -1000, -1000,
	526, 747, 55863, -1000, -1000, 4081, 4072, 1068, -1000, 321,
	1020, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3358, 746, 745, -1000, 744, 743, 742,
	741, 740, -1000, 739, -1000, 737, 735, 733, 729, 728,
	724, 720, 719, -1000, 2323, -1000, -1000, -1000, -1000, -1000,
	-1000, 672, 655, 655, 655, -1000, 1116, -1000, -1000, -1000,
	376, 654, 372, 652, 648, 647, -1000, 717, 715, 713,
	712, 711, 709, 706, 705, 704, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1109, -1000, -1000, -1000, -1000, 1446, -24,
	138504, -1000, 492, -24, -1000, -1000, 703, -1000, 40060, 40060,
	40060, -1000, -1000, 2611, 55863, -1000, 2752, -1000, -14, -14,
	954, 67153, -1000, 64025, 954, 336, 833, 73369, -1000, 3312,
	-1000, -1000, 701, 302, -1000, -1000, -1000, -1000, 29153, 3310,
	138504, 138504, 138504, 110298, 110298, 110298, 138504, 4199, 4198, 3561,
	55863, -1000, -1000, 81994, 151362, 110910, 1409, -21, -1000, -1000,
	3925, 85680, 81382, 3357, 151362, 3350, 3307, 150754, 88792, 303,
	3512, -1000, -1000, 695, 4197, -1000, -1000, -1000, -1000, -1000,
	3510, 4196, 4195, 4189, 138504, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 270, 3507, -1000, -1000, 114582, 270, 3501, -1000,
	270, 3495, -1000, 113970, -1000, -1000, 2540, 3494, -1000, -1000,
	296, 3490, -1000, -1000, -1000, 272, 3480, -1000, -1000, 300,
	-81, 3479, -1000, -1000, -1000, -1000, -1000, -1000, 158004, -1000,
	-1000, -1000, 150140, -1000, 3717, -1000, 138504, -1000, 55863, -1000,
	-1000, 3924, 2000, 3747, 3860, -1000, -1000, -39, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2825, 2846, 1230, 2647, -1000,
	3576, 1641, 38784, 3664, -1000, -1000, -1000, -1000, -1000, 288,
	29153, 3184, -1000, -1000, 138504, -1000, 138504, 3060, 3060, -1000,
	-1000, -1000, 4024, 4022, 3060, 3060, 138504, 138504, -1000, -1000,
	-1000, -1000, -1000, -1000, -39, -1000, 4556, 3456, 1606, -1000,
	2646, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2202, 3455, -1000, 2311, 3454, 2195, -1000, -1000, 4733, -1000,
	154678, 1495, -1000, -1000, -1000, -1000, 2371, 3452, -13, -1000,
	-1000, 2448, -1000, 4008, 3250, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8300, 154355, -1000, 1864,
	-1000, -1000, 2359, 2244, -1000, 1441, 3449, -1000, 3142, 3142,
	103546, 3517, 71511, 69645, 86302, -38, -1000, -1000, -1000, -1000,
	-1000, -86, -1000, 27901, 158004, -1000, -1000, -1000, -1000, 2046,
	158004, 978, -1000, -1000, 3448, -1000, 158004, 977, -1000, -1000,
	3447, -1000, 2899, -1000, 3348, -1000, -1000, -1000, 2735, 88168,
	2732, 1063, -1000, 110298, 2312, 4187, -1000, 4185, -1000, -1000,
	4184, -1000, 4177, 4176, 4174, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 102934, 2610, -1000, -1000, 1644, 1024, 91286, -1000,
	2730, 3854, -1000, 102320, 1122, -1000, 1044, 2727, -1000, 1436,
	113358, 1036, 2726, -1000, 4172, 3812, 3006, 1044, 2725, -1000,
	-1000, -1000, -1000, -1000, 1078, -1000, 74593, -1000, 74593, -1000,
	1840, -1000, 145848, -14, 110298, 3986, -1000, -68, -1000, -1000,
	-1000, 1029, -1000, 68398, -1000, 68398, 117650, 91286, 1024, 3306,
	78300, 157764, -1000, 1061, -1000, -1000, 158004, -1000, -1000, -1000,
	2897, -1000, -171, 3138, -1000, 91286, 70889, 3305, 2891, -1000,
	158004, -1000, -1000, -1000, -1000, 158004, -1000, -1000, -1000, 91286,
	1644, -1000, 125614, 101706, -1000, -1000, 1650, 2886, -1000, -1000,
	-1000, 69645, 3304, 1448, 91286, 91286, 91286, -1000, 125000, -1000,
	-1000, 2313, 1714, 3713, 2298, 110298, -1000, 2055, -1000, -1000,
	-1000, 3741, 3515, 138504, -1000, -1000, 3344, -1000, 85068, 112746,
	-1000, 112134, -1000, 111522, -1000, 110298, -1000, 110298, -1000, 4171,
	4170, 4169, -1000, -1000, 4168, -1000, 4167, 3726, -1000, 627,
	48315, 158004, 3716, -1000, 4166, 2250, 3342, 158004, -1000, 3450,
	1841, 1823, 138504, -1000, -1000, 138504, -1000, 138504, -1000, -1000,
	-1000, 2634, 1764, -1000, -1000, 2821, -1000, -1000, -1000, 1059,
	-1000, -1000, 110298, 110298, 110298, 110298, 110298, 1307, -1000, 47686,
	-1000, -1000, 3419, 4165, 1893, -1000, 2039, -1000, 3303, 3690,
	-1000, 3302, 1647, 2052, 263, 4084, 263, -1000, -1000, 305,
	-1000, -1000, 145236, -1000, 2818, -1000, 138504, -1000, 2822, 3333,
	3341, 1671, 2632, 2931, -1000, 47057, 2890, 59637, 2642, 197,
	-1000, -1000, 197, 197, 37526, -1000, -1000, 38784, 921, 85680,
	85680, 29153, 1410, 55863, 55863, 55863, 55863, 55863, 55863, 55863,
	55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863,
	55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863,
	55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863, 55863, 2598,
	55863, 1407, 55863, 55863, 55863, 55863, 2898, -1000, -1000, 2188,
	540, 2265, 694, -1000, -1000, -1000, 3984, 3984, 3984, 1329,
	1329, 1329, 16617, 16617, 591, 4164, 810, -1000, 55863, -1000,
	107, 67765, 55863, 29777, -1000, 480, 11392, 2857, -1000, 479,
	30436, -1000, -1000, -1000, 31728, 605, 46398, 55863, 1079, 158004,
	-1000, -1000, 1689, 3997, 27271, 3354, 3193, 691, 930, 926,
	34980, 34321, 33662, 33003, 922, 673, 55863, 55863, 55863, 55863,
	55863, 55863, 55863, 55863, -1000, -1000, 4019, -1000, 3997, -1000,
	-1000, -1000, -1000, 3997, 1346, 1336, 3997, -1000, 3997, 3997,
	11319, 11319, 45769, 45140, 44511, 60266, 43882, 55863, 32374, 43253,
	42624, -1000, 62153, 138504, -24, 3923, 55863, 365, -1000, 14781,
	-1000, 365, 365, 687, -69, 158004, 2878, 2878, 65909, 2721,
	2513, 2513, 2513, -1000, 954, 21562, 954, 123164, 2524, 954,
	954, 262, 285, 476, 63403, 2752, 123164, 794, 686, 1,
	0, -2, -1000, -1000, -3, -4, -1000, -1000, 110298, 684,
	29777, 29153, 260, 2262, -74, 2928, 2916, 2914, 2911, -1000,
	2910, 2607, -1000, -1000, -1000, 2080, -75, 1405, 110298, 138504,
	1953, -1000, -1000, -1000, -1000, 86302, -25, 86302, 138504, 3702,
	110298, -65, -1000, 151362, 6702, -76, -1000, 1406, 254, 3997,
	-1000, -1000, -1000, -1000, -1000, 4163, 4162, -1000, 1106, 678,
	677, 868, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	672, 655, 655, 655, -1000, 376, 654, 372, 652, 648,
	647, -1000, -1000, -1000, -1000, -1000, 3301, 110298, 138504, 1947,
	84456, 101092, -81, 110910, 151362, -48, -1000, -1000, -1000, -1000,
	110298, -1000, -1000, 110298, -1000, 75821, -1000, 138504, -1000, -1000,
	-1000, 4161, -1000, 110298, 110298, 270, 3446, -1000, 110298, -1000,
	110298, 266, 3445, -1000, -1000, 138504, -1000, 110298, 110298, -1000,
	138504, 138504, 138504, 151362, 151362, 258, -1000, 110298, 921, -83,
	1232, -39, -1000, -1000, -1000, -1000, 1459, -1000, 2101, -1000,
	-1000, -1000, -1000, -1000, -1000, 1645, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1068, -1000, -1000, -1000, -1000, 4003,
	4000, -37, -1000, -1000, 29153, -1000, 2173, -1000, -1000, -1000,
	-1000, 138504, 138504, -1000, -1000, 138504, 138504, -1000, -1000, -41,
	1790, 637, 1399, -1000, 93734, 2683, 3710, 4160, 2984, 3696,
	1838, -1000, 1763, 645, -1000, 3831, 99254, 3887, 3897, 1454,
	-1000, 3299, -1000, -1000, -1000, 976, 1852, 2020, 1398, 1393,
	99254, 2311, -1000, 85680, -1000, 3027, 3811, 1512, 1506, 1512,
	1512, 1540, 1522, -1000, 99254, 2017, 1392, 1389, 1388, -1000,
	-1000, 1787, 1805, -1000, -1000, 124388, 1967, -1000, 1383, 1375,
	139728, 3938, 4002, 2472, 847, 2235, -1000, 1471, 1373, 3296,
	-1000, -1000, -42, 3877, 3893, 1454, -1000, -1000, 3295, 1372,
	-1000, 1088, -1000, -1000, -1000, 3808, 110298, 29153, 1708, 1707,
	1717, 2014, 1370, -26, -1000, 3873, 1837, -1000, 3955, 91286,
	-1000, 2755, 3847, 1369, 2008, 1368, 3570, -1000, -1000, 2606,
	2678, -1000, -1000, -1000, -1000, 1865, 3088, -1000, 2830, 1487,
	1487, 138504, -1000, 1780, -1000, 1644, 1644, 120104, 138504, -1000,
	-1000, -1000, 3757, 3756, -1000, -1000, 1364, 1359, -1000, 1105,
	9107, 3631, -1000, 151362, 1105, 1105, 2065, 3444, 3059, 1783,
	-1000, 3137, 947, 3131, -1000, -1000, -1000, 947, -38, 86302,
	138504, 252, -1000, 107, 55863, 55863, 107, 55863, 107, -1000,
	3845, 3443, 3922, -1000, 3442, 4159, 644, -1000, 2851, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 641, 2723, 3293, 138504,
	283, -1000, 110298, -1000, 3921, 123776, -1000, 3441, 151362, 2311,
	2719, -1000, -1000, 100480, -1000, 3440, 2268, 492, 2718, -1000,
	610, 4157, 3439, -1000, 144624, -1000, 3717, 1377, 3438, 1173,
	755, 3920, -1000, 755, 76444, -1000, 138504, -1000, -14, 5671,
	92510, -84, -85, 473, -1000, 138504, 138504, 3652, 2273, 2267,
	-1000, 1037, 69645, -1000, 69645, -97, -1000, -171, 3117, 1700,
	69645, -1000, 1024, -105, 947, -1000, 947, -1000, 110298, 3340,
	-1000, 91286, 69645, -1000, 1024, 1024, 1024, -1000, -1000, -1000,
	-1000, 4153, 4152, 4151, 4150, -1000, -1000, 1043, 110298, 138504,
	110298, -1000, 3053, 1741, -1000, 247, -1000, 151362, -1000, 151362,
	138504, 110298, -1000, 1043, 138504, 1043, 138504, 1043, 138504, 1043,
	1043, -1000, -1000, -1000, -1000, -1000, 107, -1000, -1000, 158004,
	-1000, 55863, -1000, -1000, 1719, 4148, 1854, -1000, 3337, -1000,
	3335, -1000, 36, -1000, -1000, 4017, 2141, -1000, 4071, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4147, 158004,
	-1000, 1951, -1000, -1000, -1000, -1000, 110298, 110298, 110298, 110298,
	138504, 3629, -1000, 138504, 3618, 3621, 110298, -1000, 4083, -1000,
	-1000, 99254, -1000, 2822, 3333, -1000, -1000, -1000, -1000, -1000,
	-1000, 1567, 2576, -1000, 2881, -1000, 1789, -1000, -1000, -1000,
	158004, 60895, -1000, -1000, 158004, 2093, -1000, 59008, 58379, -1000,
	-1000, 1946, 110298, 2955, -1000, 2955, -70, -1000, 155419, 2877,
	110298, -37, 38784, -1000, -1000, -1000, -1000, -1000, 974, 1213,
	1213, 1437, 1437, 1437, 1437, 3834, 325, 8035, 7543, 10914,
	10914, 8891, 8891, 8891, 8891, 8891, 10914, 5906, 1329, 1329,
	5906, 5906, 5906, 5906, 5906, 1329, 1329, 1329, 10914, 10914,
	10914, 1329, 16617, 158184, 8023, 55863, 55863, 1349, 2187, 540,
	7484, 55863, 6835, 6835, 6835, 6835, -1000, 2357, -1000, -1000,
	-1000, -1000, 3292, 640, 60266, 60266, -1000, -1000, -1000, -1000,
	31082, 55863, -1000, -1000, -1000, -1000, 41965, -1000, -1000, 14358,
	-344, 470, -1000, 244, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 468, -67, 30,
	-1000, 55863, 55863, 55863, 462, -1000, 240, 55863, 138504, -1000,
	20160, 785, -119, -1000, -98, 1558, -1000, 55863, -1000, -1000,
	1348, -1000, 1347, 1341, 1337, -1000, 639, 452, -1000, 239,
	-1000, 2510, 638, 635, 55863, -1000, -1000, -1000, -1000, -1000,
	154257, -1000, -1000, 153924, -1000, -1000, 153606, -1000, -1000, 153498,
	-1000, -1000, -1000, -1000, -1000, 157520, 19497, 18801, 17600, 10186,
	17293, 13868, -103, 447, -106, 446, 970, 968, 445, 444,
	443, -108, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -114, 442, -1000, 3280, -67, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 441, -1000, 440,
	-1000, 157461, -67, 438, 6569, -1000, 60266, 60266, 60266, 60266,
	437, -1000, 155097, -1000, 157042, 41336, 41336, 41336, 436, 156798,
	55863, -67, -116, -1000, -122, -1000, -1000, -1000, -1000, 595,
	-123, 1069, 40060, 64663, 29153, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1069, 1069, 55863,
	-1000, 55863, 2892, -1000, -1000, -1000, -1000, 2889, 2574, 2878,
	65909, -1000, -1000, -1000, -1000, 123164, -1000, 3986, 3124, -1000,
	123164, -1000, -1000, 138504, 492, -1000, 123164, 123164, 29153, 954,
	-1000, 954, 123164, 890, -1000, -1000, -1000, -1000, -1000, 434,
	78922, 30, 237, 29153, 1044, -1000, -1000, 3018, 3018, 3018,
	3018, 3018, 110298, -1000, -1000, 151362, 1335, -33, -77, 3116,
	3115, 3107, -38, 86302, -38, -86, 138504, -28, 3953, -279,
	-1000, 2385, -1000, 85680, -1000, 809, 1284, 29153, -1000, -1000,
	-1000, 633, -1000, 3997, 3997, -1000, 3997, 151362, 3279, 329,
	3080, 3078, 3075, -1000, 2605, 98030, 323, -81, 151362, -1000,
	303, -136, -1000, -1000, 83832, 79534, -1000, 2515, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4145, -1000, -1000, 270, -1000,
	110298, 270, 270, -1000, 110298, 110298, 2540, -1000, 296, -1000,
	272, -1000, -1000, -81, -1000, 1058, 38784, -1000, 1459, -1000,
	-1000, 1703, -1000, 2296, -1000, 1301, -1000, -1000, 38784, -1000,
	3655, -1000, 2010, -1000, -1000, -1000, -1000, 2589, 138504, 138504,
	110298, -1000, 121328, 138504, -1000, 2440, 151362, -1000, 2716, 144012,
	2692, 143400, 85680, -1000, -1000, 631, 1009, 2875, 2873, 1169,
	138504, 138504, 2872, 142788, 142176, -1000, 4144, 138504, 2347, 55863,
	121328, 3803, 2583, 3516, 107, 107, -1000, 107, -1000, -1000,
	630, 1363, 110298, 110298, 138504, 151362, 110298, 2016, -1000, -1000,
	-1000, -1000, -1000, 99866, -1000, -1000, 1512, -1000, -1000, -1000,
	1512, -1000, 1512, 2311, 2009, 138504, 151362, 110298, 151362, 141564,
	2234, 140952, 2230, 2226, -1000, -1000, -1000, 2175, 2223, 2434,
	2007, 138504, -1000, -1000, -1000, -1000, -1000, 1542, -1000, 847,
	1331, 3277, 55863, 55863, 2411, 107, 107, -1000, 107, 612,
	29153, -1000, 1342, -1000, 3347, 138504, 4070, 140340, 4069, 138504,
	138504, 138504, 151362, 3677, 138504, -29, -1000, 1961, -1000, 3955,
	-1000, 933, -1000, -1000, -1000, -1000, 138504, 138504, 151362, 2603,
	2668, 2602, 3084, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-105, -32, -99, -1000, 932, 931, -86, 2317, 138504, 151362,
	-1000, 139728, 9107, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2395, 3029, 1172, 138504, 1441, -1000, -1000, 2003, 1330, 1328,
	99254, 2392, 2001, 2120, 151362, 69645, 1038, 69645, 3020, -1000,
	-1000, 26641, -1000, 158004, 158004, -1000, 158004, -1000, 83220, 91286,
	91286, 138504, -1000, 77066, 138504, 93122, 1001, 3437, 75207, -86,
	1024, 1644, 3383, 1862, -99, 611, 138504, -1000, -1000, 2311,
	3435, 492, 2711, -1000, 151362, 1118, 3918, 3434, 608, 4143,
	4142, -1000, 110298, 2597, 2708, -1000, -1000, 139116, 3524, 847,
	138504, 1069, 65909, 2225, -1000, 72757, 1150, 138504, 2139, 291,
	-1000, -1000, -1000, 14, 138504, -1000, 828, -1000, -1000, 5671,
	5671, 1024, 70267, -137, -1000, 236, 607, 925, 924, -1000,
	5808, -1000, -171, -1000, 91286, 1037, 69645, 3270, -171, 3066,
	3266, -1000, -1000, 1056, 1024, 1584, 3063, 1024, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -15,
	-1000, 1998, 2117, 138504, -81, -81, -47, -1000, -1000, 235,
	-33, -1000, 1043, -1000, 1043, -1000, 1043, -1000, -1000, -1000,
	158004, -1000, -1000, -1000, 1846, 1818, 138504, -1000, 3331, -1000,
	138504, -1000, -1000, 29153, 138504, 110298, 29153, 110298, 3329, 3327,
	-1000, -1000, -1000, 138504, -1000, -1000, 138504, -1000, -1000, -1000,
	-1000, -1000, -1000, 1199, -1000, 2093, 2571, -1000, 605, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2803, -1000,
	-35, 37526, 950, -1000, -1000, 110298, -16, -37, 55863, 55863,
	6597, 5850, 55863, 60266, 60266, -1000, 55863, 629, -1000, -1000,
	-1000, -1000, -1000, 3264, 604, 55863, 85680, 2562, 823, -1000,
	430, 12774, 5906, -1000, 55863, -1000, 6067, -1000, 427, 40707,
	-1000, 155576, -31, -139, -1000, 22207, -67, -147, -1000, -1000,
	804, -1000, 3520, -1000, 55863, 156739, 2776, 2165, 2153, 1870,
	3997, 4068, 26011, -1000, 77688, 1076, 2533, 153453, -1000, -1000,
	-1000, -1000, 85680, 85680, 55863, 55863, -1000, 55863, 55863, 55863,
	-1000, -1000, -1000, 3997, 966, -1000, -1000, -1000, 966, -1000,
	-1000, 1512, -1000, 1512, -1000, 55863, -1000, -1000, 3261, 55863,
	-1000, 85680, 85680, 60266, 60266, 60266, 60266, 60266, 60266, 60266,
	60266, 60266, 60266, 60266, 60266, 60266, 60266, 60266, 60266, 60266,
	60266, 60266, 60266, 2869, 60266, 3975, 3975, 3975, 1734, -1000,
	3326, 3261, 55863, 55863, 85680, 425, 424, 423, -1000, 55863,
	-67, -1000, -1000, 9530, 603, -1000, 2793, -1000, 3192, -1000,
	55863, -1000, -144, -1000, 2752, -1000, -1000, 3192, 3192, -148,
	158004, 65909, 65909, -1000, 601, 55863, 2888, -1000, -1000, 780,
	-334, -1000, 918, -1000, -1000, -1000, -1000, -1000, -1000, 917,
	-1000, 492, -1000, -1000, -1000, 234, 123164, 123164, 779, -1000,
	-155, -1000, -1000, -156, -1000, 3916, 421, 29153, -1000, 1069,
	5518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2909, -279,
	151362, 151362, 1988, 1978, 1977, -38, -86, 2551, -1000, 3201,
	4066, -1000, 4007, 801, 774, 198, 3997, 417, 412, 411,
	-81, 151362, 151362, 1966, 1919, 1918, 80770, 3258, 151362, -1000,
	-1000, -1000, 77066, 85680, -1000, 85680, -1000, -1000, -1000, -1000,
	270, -1000, -1000, -1000, 266, -1000, -1000, -1000, -1000, 2975,
	-1000, -39, -1000, -1000, -1000, 55863, -1000, 1006, -1000, -1000,
	3705, 600, 1323, 1321, -1000, -158, -1000, 915, -1000, -1000,
	-1000, -1000, -1000, 3207, -1000, 3432, -1000, 2707, -1000, 1156,
	2705, 1794, -1000, 55863, 594, 3005, 593, 589, 4136, 2368,
	4131, 1171, 3430, 2540, 3429, 2540, -1000, -1000, -1000, 989,
	-1000, 158004, -163, -1000, 2583, -1000, 587, 585, -1000, -41,
	1786, 519, 1319, 1054, -1000, -1000, 55863, 55863, 122552, -1000,
	527, 3711, -18, -1000, -1000, -1000, 1917, 1318, 1317, -1000,
	-1000, -1000, -1000, -1000, 2311, 1915, 1316, 1314, -1000, -1000,
	-1000, -1000, -1000, 2703, -1000, 138504, -1000, 3427, 138504, -1000,
	847, 138504, 3711, 3169, 1052, -1000, 3388, 3387, 963, 138504,
	55863, 55863, 156320, 156080, -1000, 1047, -1000, -1000, 55863, -1000,
	-42, -1000, 1296, 3865, 2702, 110298, -1000, 2540, 3426, 1294,
	-1000, 1293, -1000, -1000, -1000, 3866, 3863, 1295, 1837, 91286,
	69645, 2790, -1000, 3844, 2550, 3993, 3955, 69645, -1000, -1000,
	-1000, 3394, 2967, 2659, -1000, -1000, -1000, 120104, 91286, 91286,
	-1000, -1000, -1000, 3993, -1000, -1000, -1000, -1000, 87544, -1000,
	-1000, 1105, 138504, 151362, 110298, 1957, -1000, -1000, 98030, 98642,
	138504, 3059, -81, 947, -1000, 2814, 947, 1038, 3238, -1000,
	2942, -1000, -1000, 1045, 410, -43, -1000, 1351, 4130, 403,
	-164, -44, 85680, -1000, -1000, -1000, -1000, 2692, 110298, 138504,
	1365, 3000, 138504, 138504, 3914, -1000, 2601, 692, 110298, 949,
	-1000, 3986, -1000, -1000, -1000, 138504, 40060, 120104, -1000, 3850,
	110298, 3911, 3425, 1044, 110298, 107, 110298, 4037, -1000, -1000,
	3910, 110298, 3424, 2595, 2700, 2829, 847, 91898, 1044, 2532,
	-55, -1000, 2139, 39413, 3706, -169, -1000, -1000, -1000, 1069,
	76444, 65909, 55863, 4129, -176, -1000, -1000, -1000, -1000, -1000,
	91286, 1024, 138504, 138504, 4124, 91286, 91286, 91286, -45, 584,
	-1000, 914, 910, 900, -1000, -1000, -1000, -1000, -1000, -1000,
	898, 895, 894, 891, -1000, 1037, -1000, -1000, -171, 69645,
	1037, 69645, 107, -1000, 2545, -1000, 110298, 69645, -1000, 25381,
	138504, 3053, -1000, 86914, -1000, -1000, -1000, -1000, -1000, 1043,
	4064, -86, -1000, -1000, -1000, 2413, 2639, 2413, 2115, 2109,
	-1000, -1000, -1000, 2567, -1000, -1000, -1000, -1000, 2949, 3671,
	29153, 3828, 6835, 55863, 55863, 467, 669, 518, 6835, 55863,
	55863, 85680, 8756, -177, 55863, 55863, -1000, 55863, 773, 158004,
	-1000, 4063, 55863, 401, 399, -1000, -1000, -1000, 3994, -1000,
	-1000, -1000, 158004, 55863, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 397, -1000, 168, -1000, -1000, -1000, 147684, -1000, 55863,
	396, 3798, -1000, 393, 392, 12113, 7982, 153180, 152793, 152748,
	388, -1000, -1000, 387, 386, 158004, 3326, 158004, -1000, -1000,
	1067, 1067, 1478, 1478, 1478, 1478, 3975, 676, 2062, 1183,
	1914, 1914, 1914, 2480, 1734, 1734, 1914, 1914, 1914, 1734,
	3235, 2870, 574, 6884, -1000, -1000, 158004, 158004, 381, -1000,
	-1000, -1000, -67, 378, 9530, -1000, 3181, 3792, 158004, -1000,
	65909, 3181, 3181, -1000, -1000, 2574, 138504, 158004, 65909, -1000,
	3124, -1000, 23485, 22849, -1000, 29153, -1000, -1000, -1000, -1000,
	3986, -1000, 78922, -1000, 573, -1000, 31, -1000, 5518, -1000,
	887, -1000, -1000, 91286, 91286, 4123, 4122, -1000, 4062, 4057,
	2512, 4056, 3018, -1000, -279, -142, 138504, 138504, 138504, -1000,
	2548, -1000, 772, 4121, 800, 29153, 367, -1000, -1000, -1000,
	-81, -81, 138504, 138504, 138504, 3232, 110298, 138504, 1877, 151362,
	-81, -1000, -1000, -1000, -1000, -1000, -1000, 3650, 158004, 3325,
	3171, 3170, 138504, 138504, -1000, 121328, 38784, 1699, 121940, 138504,
	3422, -1000, 3418, -1000, 1169, 2699, 152676, 66531, -1000, 66531,
	138504, -1000, -1000, -1000, -1000, 2168, 1609, 4120, 1215, -1000,
	3743, 138504, -1000, 138504, -1000, -1000, -1000, 121328, -1000, 138504,
	138504, 110298, 138504, -1000, 151362, 3399, -179, 158004, -46, -1000,
	884, -1000, 1482, -1000, 24751, 138504, 151362, 110298, 138504, 151362,
	110298, 3417, 1148, 138504, -1000, 138504, 1147, -1000, -1000, 138504,
	2495, -1000, -1000, 3386, -1000, 158004, 156001, 107, 55863, 3398,
	-191, 29153, -1000, 4053, 4051, 3416, 3749, -1000, 138504, 4047,
	138504, 110298, 3646, -1000, -1000, -1000, -1000, 883, 879, 876,
	872, 871, 3983, 120104, -1000, 1039, 138504, -1000, 2963, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1907,
	1287, 1279, 2593, 2592, 2543, -47, 2392, 1038, -49, 571,
	-1000, 1038, -1000, 91286, 69645, 4118, 2132, 77066, 55863, 55863,
	-1000, 2979, -1000, 117036, 93122, 2613, -1000, -1000, 568, 138504,
	138504, 565, -1000, 107, -1000, 4116, 121328, 564, -1000, 2541,
	-1000, 771, -1000, -1000, 253, -193, 151362, 2311, 107, 110298,
	-1000, 492, 1035, 492, 363, -50, -1000, 3420, 1164, 29153,
	110298, 3413, 2836, 847, 91898, -1000, 1377, 2931, -1000, -51,
	-1000, 653, 107, 2532, -1000, -55, 158004, -1000, 866, 360,
	-1000, 3639, -1000, -1000, -194, -1000, -1000, 5562, 5562, 91286,
	69645, 91286, 91286, 91286, 69645, 91286, -1000, 1037, 3907, -1000,
	-171, -1000, 2698, 1024, 1024, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29153, 1817, -1000, 559, 558, -1000, -1000,
	-1000, -1000, 3671, 6835, 6835, 55863, 55863, 55863, 6835, 8756,
	-196, -1000, 6835, 6835, -67, -1000, -1000, 155576, -1000, -1000,
	-1000, 158004, -1000, 24121, 2473, -1000, 152094, -1000, 37526, -1000,
	-1000, 55863, 55863, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 60266, 3231, 554, 85680, -1000, -1000, 353, 1074, 55863,
	57750, 2752, 1074, 1074, -1000, -199, -1000, -1000, -1000, 3986,
	-1000, 3986, 31, -1000, -1000, 4115, 29153, -1000, 91286, -1000,
	-1000, -1000, -1000, -1000, 4114, 4111, 2656, 4110, 4108, -1000,
	-1000, -1000, 3414, -113, -150, -204, -1000, 797, -1000, 4107,
	-1000, -1000, 212, 173, 167, 151362, 3230, 162, 3052, 3049,
	-81, -1000, 107, -1000, -1000, -1000, -1000, -1000, -1000, 3047,
	3906, -1000, 2221, -1000, 138504, 138504, -1000, 138504, -1000, 29153,
	138504, 3212, 1333, -1000, 1009, 2871, 552, 60266, 1198, 110298,
	1012, 3156, 3038, -1000, 3935, 3787, 3112, -206, -1000, 138504,
	55863, 138504, -209, -212, 2655, -1000, -1000, 1197, 1332, 55863,
	1189, -1000, -1000, -1000, 85680, 551, 2540, 2540, -1000, -214,
	-215, -1000, -1000, -1000, 55863, 1257, 138504, 38155, -1000, 4106,
	3711, -1000, -1000, -1000, -1000, -1000, -1000, 138504, 138504, -1000,
	-1000, 138504, 3711, 138504, -1000, 55863, -1000, 155517, 55863, 1255,
	-1000, -1000, -1000, 4042, 2540, 29153, 2540, -1000, 2540, 3749,
	1211, 91286, 55863, 1622, 69645, 69645, -1000, -1000, -1000, 2590,
	-1000, -1000, 138504, 151362, 110298, 1899, 1899, 3323, -1000, -1000,
	-1000, 2790, 2790, -1000, -56, 1038, -1000, 1738, -1000, 158004,
	158004, 2415, 4103, -1000, -1000, -1000, -1000, 2866, -1000, -1000,
	-1000, 138504, 2862, 3120, 66531, 550, 549, 138504, 1028, -1000,
	-217, 93122, 1001, 1000, -1000, 74593, -1000, -1000, -1000, -1000,
	492, 3905, -1000, 2971, 3904, -1000, 4038, 548, 544, 138504,
	2587, 543, 29153, 3701, 847, 91898, -1000, 3524, 2139, -1000,
	2689, 138504, 3695, -1000, 2931, 540, 1024, 538, 1024, -1000,
	-220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1343, 1037, -57, -1000, 960, 955, -1000, -1000, -1000, -1000,
	110298, 110298, 55863, 55863, -1000, 6835, 6835, 6835, -1000, 352,
	-1000, -1000, 2532, 3780, -1000, -58, 152022, 151977, 7595, 60266,
	85680, -222, -1000, -1000, 138504, 158004, -59, -1000, 158004, 534,
	533, 478, -1000, -1000, -1000, 674, 528, -1000, -1000, -1000,
	-1000, 4102, -1000, -1000, -1000, 151362, 151362, 151362, 4101, -1000,
	151362, 151362, 151362, -81, 151362, 151362, 1885, 1882, -1000, 120716,
	138504, -1000, -1000, 1794, 2437, -1000, -1000, 138504, 2694, -1000,
	-1000, -1000, 1041, 55863, 6884, 60266, 529, 55863, -1000, 523,
	522, 3903, 3583, -1000, 2973, 3252, 2149, 66531, -1000, 3671,
	-1000, 20869, -1000, 1160, 2190, -1000, -1000, -1000, -1000, 158004,
	60266, 3749, 66531, -1000, -1000, 520, 516, 158004, 515, 864,
	3228, -1000, -1000, -1000, -1000, -86, -86, -1000, -1000, 158004,
	107, 158004, 514, 3865, -1000, -1000, -1000, -1000, 2540, 110298,
	-1000, 158004, -1000, -1000, -1000, -1000, 862, -1000, -1000, -1000,
	1251, -1000, -1000, -1000, -1000, -1000, 4100, 3227, 98030, -1000,
	-223, 2200, 85680, -1000, 1001, -1000, -1000, 2613, 502, -1000,
	1002, 2714, 2714, -225, 66531, 66531, -228, 2580, 2930, -1000,
	351, 3902, 1000, -1000, 3980, -1000, 1069, -1000, 3900, 107,
	3638, -1000, 107, -1000, 4037, 66531, -1000, 110298, 66531, 2586,
	2353, 2817, 91898, -1000, 2829, -1000, -1000, -231, 138504, 2139,
	-1000, -1000, 91286, -1000, -1000, 4009, -1000, 2698, -1000, 138504,
	-1000, 138504, -1000, -1000, -234, -236, -1000, 2435, 55863, 37526,
	-1000, -1000, 7595, -239, -1000, -63, -1000, 3899, 57750, 4099,
	4098, 4097, -1000, -1000, -1000, -279, -279, -279, -1000, -81,
	-81, -81, -81, -81, 138504, 138504, -1000, 2208, -1000, 2692,
	-1000, -1000, 3412, -1000, 3179, 495, 20677, 6884, 2795, 138504,
	20363, 2311, 2311, -1000, 3898, 3249, -1000, -1000, 2411, 494,
	-1000, -1000, -1000, -1000, 950, 138504, 1002, 3177, 110298, 6884,
	1167, -246, 2413, 2413, 55863, 36897, 2493, -1000, 55863, -1000,
	-1000, 3749, 69645, 151362, -1000, 151362, 2581, -1000, 3219, 5954,
	-1000, 2580, 138504, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1160, -255, -256, -1000, -1000,
	3735, -1000, 3637, 2979, 107, -1000, -1000, -1000, 107, -1000,
	4095, 1035, 348, -258, 1164, -263, 110298, 2189, -1000, 847,
	-1000, 2836, 1069, 3540, -1000, -264, -1000, -1000, -1000, -265,
	-270, -1000, -1000, 346, 57121, 57121, 57121, -67, -70, -1000,
	138504, 493, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 144,
	141, -1000, -1000, 3381, 951, -1000, 873, 2113, 340, 1168,
	267, 259, -1000, -1000, -1000, 3112, -1000, 138504, -1000, -1000,
	-1000, 951, 492, -1000, 55863, 1160, -271, -1000, 1146, -273,
	-1000, 1139, -276, -1000, 3226, -1000, -278, 2540, -1000, -279,
	258, 1899, 1034, 3841, 2542, 5954, -1000, 4033, 91898, -1000,
	-1000, -1000, 2807, -281, -1000, -1000, 2149, 1160, 2411, 2644,
	-1000, 2415, 1028, -1000, -1000, -1000, -1000, 1160, 491, 2149,
	488, 1676, 847, -1000, -1000, 1512, 3701, 3531, 1491, 1024,
	-1000, -1000, -1000, 3469, -1000, 61524, 2594, 2107, 154776, 3469,
	3469, -1000, -1000, 151362, 151362, 138504, 1002, 3829, -1000, 939,
	927, 1632, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1069, -283, -1000, 2795, 158004, 1002, -1000, 2413, 3040, -1000,
	2413, 3225, -1000, 2485, -1000, -1000, -1000, -1000, 3224, -1000,
	2029, 3966, -1000, -1000, 3875, 55863, -1000, -1000, -1000, -1000,
	-1000, -1000, 1002, 138504, 2411, 2149, 1002, 2073, 2051, 4092,
	1001, 2580, 2149, 66531, 2411, 66531, 2388, -1000, 138504, -1000,
	2353, 1479, -1000, 1831, -1000, -1000, 2091, 3931, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -81, -81, -1000, -1000, 853,
	-1000, 3573, -1000, 1187, 2276, 2276, -1000, -1000, 873, -1000,
	-1000, 487, -1000, 486, -1000, 151362, 2539, -1000, -1000, -1000,
	158004, -1000, -1000, 1002, 2411, 1069, -1000, 4087, -1000, 2580,
	-1000, 2411, -292, 1002, -293, 2475, -1000, -1000, -86, 2189,
	-1000, 1820, 76444, 2105, -1000, -1000, 2522, 56492, 55863, -1000,
	3957, -1000, -1000, 2885, -1000, 3112, 55863, 55863, 258, 73981,
	12425, 1069, 1002, 1338, -1000, 2807, 1002, 1160, 1069, 2149,
	1867, 847, 1676, 76444, -284, -1000, -1000, -1000, 158004, -1000,
	-1000, -1000, -1000, -301, -310, -1000, -99, 120104, -333, -1000,
	-1000, -1000, 1338, 1069, -1000, 1086, -1000, -1000, 1069, 2149,
	1338, 2411, -1000, -1000, 2175, 151362, 2388, -284, -1000, 2411,
	1250, -311, -1000, -1000, 1338, -1000, 1338, 2411, -1000, 1002,
	-1000, 1867, -1000, -1000, -1000, 485, -1000, -1000, -1000, 1002,
	1069, -1000, 55863, 1069, 1338, -321, 1338, -1000, 2411, -1000,
	-1000,
}

var sqlPgo = [...]int16{
	0, 5023, 5022, 30, 5021, 5020, 5018, 5010, 5005, 5004,
	5000, 4998, 4997, 4996, 4995, 4994, 168, 4993, 4992, 4991,
	4990, 4989, 4985, 4984, 4973, 4972, 4971, 4970, 4969, 4968,
	4967, 4965, 4962, 4961, 4960, 4956, 4955, 4954, 4951, 4950,
	4944, 4935, 4931, 4930, 4925, 4922, 4920, 4918, 4917, 4916,
	4915, 4914, 4913, 4912, 4911, 4910, 4909, 4908, 4905, 4904,
	4903, 4902, 4901, 4900, 4899, 4897, 4896, 4894, 4893, 4892,
	4891, 4888, 4887, 4883, 4879, 4878, 4877, 4873, 4871, 4870,
	4868, 4867, 4866, 4865, 74, 4863, 4862, 4861, 4860, 4859,
	4857, 4854, 4851, 4850, 4849, 4848, 4847, 4845, 4844, 4843,
	4842, 4841, 4840, 4837, 4835, 4834, 4833, 76, 4832, 313,
	4831, 4830, 4828, 4827, 4824, 4823, 4821, 4820, 4817, 4812,
	4811, 4810, 4809, 4806, 312, 4804, 17, 194, 4803, 4802,
	19, 4801, 4799, 311, 4797, 4796, 4795, 4793, 4790, 326,
	4789, 4788, 4787, 4786, 4785, 294, 4784, 4783, 4782, 4781,
	4780, 4779, 93, 217, 4777, 4776, 697, 4775, 4774, 4773,
	4772, 4771, 4769, 4768, 292, 296, 4766, 4765, 4764, 288,
	203, 4762, 310, 4761, 4757, 4756, 4755, 4754, 4752, 4751,
	4747, 4745, 4744, 4740, 4739, 4736, 4735, 4731, 4729, 4728,
	4724, 4721, 4716, 4715, 4713, 4712, 4710, 4709, 4707, 4706,
	4705, 4691, 4690, 4685, 4684, 4680, 4678, 4677, 4676, 4675,
	4672, 4670, 4669, 4668, 4666, 285, 247, 195, 4665, 4663,
	4662, 4660, 4654, 309, 307, 4651, 4647, 4646, 4642, 4641,
	3848, 4640, 4637, 4635, 4634, 4633, 4631, 4630, 4627, 4619,
	139, 11, 62, 4616, 4614, 107, 105, 109, 110, 125,
	118, 4612, 4610, 146, 4608, 158, 140, 4607, 143, 126,
	39, 6, 261, 275, 7059, 273, 4606, 4605, 4604, 282,
	231, 4602, 277, 4601, 4600, 4599, 4598, 4597, 4592, 89,
	70, 243, 4591, 166, 4589, 4585, 167, 198, 219, 209,
	205, 207, 129, 72, 123, 97, 75, 59, 22, 100,
	248, 28, 249, 1, 10, 304, 4584, 299, 14, 169,
	13, 41, 4579, 4578, 4572, 4569, 4456, 141, 4567, 306,
	278, 190, 4565, 4562, 4561, 811, 4560, 4558, 69, 347,
	124, 104, 151, 55, 156, 4557, 176, 201, 48, 4555,
	303, 108, 4553, 4551, 116, 120, 11438, 13918, 4543, 4539,
	147, 85, 161, 5051, 235, 200, 237, 186, 157, 196,
	189, 4538, 355, 4536, 178, 193, 208, 145, 4535, 113,
	4534, 3876, 91, 218, 181, 7023, 4529, 4528, 4527, 101,
	4526, 131, 4524, 4523, 79, 31, 4, 2, 171, 52,
	47, 7, 4522, 37, 154, 64, 46, 4520, 42, 4514,
	4511, 4507, 4506, 60, 4503, 77, 185, 4502, 4500, 316,
	4499, 99, 67, 32, 4496, 43, 269, 4495, 267, 159,
	4482, 4480, 224, 216, 4478, 94, 271, 4477, 4471, 4466,
	4464, 4463, 320, 164, 12, 162, 4459, 4458, 173, 4457,
	71, 280, 233, 4454, 73, 4453, 4452, 206, 65, 170,
	322, 210, 265, 150, 262, 221, 268, 4451, 4450, 4449,
	223, 4446, 4445, 257, 191, 4444, 4443, 263, 324, 114,
	63, 3, 204, 106, 276, 98, 230, 183, 4442, 240,
	4441, 4438, 317, 212, 253, 49, 21, 15, 117, 132,
	4435, 8, 272, 182, 244, 149, 4434, 9025, 2061, 3701,
	266, 4432, 179, 153, 96, 155, 184, 305, 103, 4431,
	4429, 3672, 4427, 4426, 4425, 4424, 225, 4423, 4422, 250,
	177, 290, 236, 4421, 137, 80, 66, 33, 152, 111,
	318, 148, 258, 197, 289, 4420, 4419, 4418, 226, 4415,
	83, 128, 241, 4414, 232, 301, 78, 4413, 127, 4412,
	175, 2274, 87, 180, 4411, 259, 4409, 4408, 4407, 4406,
	4405, 4403, 4402, 2250, 281, 4401, 4398, 4397, 35, 229,
	4396, 228, 199, 260, 82, 68, 227, 121, 3157, 138,
	119, 239, 53, 5, 4395, 213, 4394, 5167, 88, 4393,
	0, 16312, 11922, 15156, 4392, 4391, 14546, 4389, 5974, 4388,
	4385, 4384, 252, 95, 4383, 4381, 4378, 135, 4376, 102,
	4374, 4373, 90, 4371, 36, 27, 25, 38, 40, 297,
	51, 4370, 4369, 187, 163, 23, 4368, 314, 270, 4367,
	4366, 4363, 4361, 122, 4360, 57, 4358, 50, 4357, 4356,
	58, 26, 56, 4354, 4352, 242, 188, 3784, 192, 172,
	4347, 144, 4345, 4340, 4337, 81, 160, 4336, 4334, 298,
	246, 251, 112, 4333, 291, 4330, 234, 4329, 84, 34,
	4328, 4327, 284, 136, 134, 61, 287, 165, 54, 4326,
	4323, 4322, 4321, 211, 4320, 4319, 4318, 4317, 4316, 133,
	174, 4315, 92, 4314, 4312, 4306, 45, 245, 222, 4305,
	29, 4302, 4300, 4299, 256, 255, 302, 214, 254, 4297,
	4295, 202, 4293, 4288, 4283, 295, 4282, 4280, 3847, 300,
	4279, 44, 4277, 4275, 4272, 16, 4269, 4268, 238, 3617,
	4267, 4266, 9, 4264, 220,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 14,
	14, 10, 10, 10, 10, 11, 11, 11, 11, 11,
	63, 63, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 20, 20,
	20, 20, 20, 20, 42, 44, 43, 37, 37, 38,
	38, 39, 40, 40, 45, 47, 46, 48, 49, 50,
	50, 50, 13, 13, 13, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 23, 23, 51, 51, 24, 24,
	53, 53, 25, 25, 54, 54, 659, 659, 659, 660,
	660, 661, 661, 661, 28, 56, 58, 58, 472, 472,
	21, 22, 22, 22, 22, 662, 662, 662, 662, 41,
	29, 57, 34, 34, 34, 34, 34, 243, 243, 243,
	243, 27, 27, 52, 52, 289, 289, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 658, 658, 291,
	291, 290, 276, 276, 277, 277, 278, 278, 663, 663,
	292, 292, 292, 293, 293, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 552, 552, 552, 583, 583,
	583, 583, 585, 585, 710, 710, 711, 711, 711, 711,
	711, 155, 155, 446, 446, 446, 72, 72, 72, 72,
	72, 648, 648, 245, 245, 245, 247, 247, 246, 246,
	246, 246, 246, 246, 246, 246, 96, 96, 97, 97,
	284, 284, 283, 283, 283, 283, 283, 283, 283, 669,
	669, 668, 706, 706, 667, 667, 670, 670, 670, 244,
	244, 244, 93, 93, 114, 114, 151, 151, 151, 151,
	151, 151, 151, 151, 152, 152, 153, 153, 679, 679,
	679, 248, 248, 248, 250, 250, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	255, 19, 19, 134, 134, 134, 134, 134, 134, 134,
	129, 129, 587, 587, 588, 588, 239, 239, 240, 240,
	240, 240, 241, 241, 242, 242, 242, 87, 87, 252,
	252, 254, 254, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 76, 76, 76, 76, 76, 76, 77, 77, 77,
	77, 77, 77, 78, 78, 85, 85, 85, 85, 85,
	85, 85, 85, 217, 217, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 92,
	92, 92, 92, 92, 103, 680, 680, 681, 681, 699,
	685, 685, 686, 686, 689, 689, 689, 690, 690, 690,
	690, 690, 698, 698, 698, 698, 698, 692, 691, 693,
	693, 694, 694, 696, 696, 696, 696, 696, 697, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 684, 700, 701, 701, 702,
	702, 703, 703, 703, 122, 122, 705, 705, 704, 704,
	687, 687, 688, 688, 67, 695, 695, 713, 713, 68,
	69, 70, 71, 682, 682, 712, 712, 712, 712, 712,
	712, 712, 712, 712, 712, 712, 712, 712, 712, 712,
	712, 712, 714, 714, 715, 715, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 104, 104, 407, 407, 370, 370, 105,
	105, 105, 106, 106, 107, 107, 89, 89, 89, 645,
	645, 646, 652, 717, 717, 543, 543, 542, 542, 109,
	109, 445, 445, 110, 110, 110, 110, 110, 110, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 120, 120, 120, 120, 120, 121, 121,
	121, 118, 118, 118, 115, 115, 115, 113, 113, 113,
	119, 119, 119, 651, 356, 356, 117, 117, 117, 116,
	116, 116, 423, 423, 123, 123, 123, 123, 371, 124,
	124, 124, 124, 124, 124, 124, 124, 127, 127, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 545, 545, 5, 5, 282, 282, 281, 281,
	281, 281, 6, 6, 6, 287, 287, 286, 285, 125,
	125, 125, 509, 509, 130, 130, 130, 461, 461, 131,
	131, 131, 131, 131, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 655, 655, 416, 416, 319, 319, 319, 319,
	143, 143, 143, 143, 144, 144, 144, 144, 145, 145,
	225, 225, 161, 161, 161, 161, 160, 160, 160, 160,
	160, 160, 160, 160, 79, 79, 79, 80, 80, 81,
	81, 82, 82, 83, 83, 84, 84, 84, 84, 84,
	164, 164, 33, 33, 33, 33, 165, 165, 707, 707,
	167, 163, 163, 163, 163, 163, 163, 163, 162, 162,
	166, 166, 166, 166, 168, 170, 170, 170, 170, 170,
	169, 169, 169, 169, 169, 171, 171, 577, 577, 431,
	431, 575, 575, 599, 599, 576, 576, 377, 377, 377,
	377, 377, 378, 378, 378, 586, 586, 586, 586, 586,
	586, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 226, 226, 226,
	227, 227, 232, 232, 233, 233, 233, 234, 234, 234,
	231, 231, 231, 228, 228, 229, 229, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 237, 237, 235,
	235, 236, 236, 719, 719, 718, 718, 238, 238, 238,
	238, 238, 198, 198, 198, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 432, 432,
	201, 201, 201, 185, 185, 173, 173, 173, 173, 173,
	173, 173, 173, 251, 251, 251, 251, 178, 178, 178,
	178, 178, 178, 178, 178, 179, 179, 179, 174, 174,
	187, 187, 187, 187, 187, 180, 180, 181, 181, 181,
	182, 182, 182, 182, 209, 209, 184, 184, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 175, 175, 175,
	175, 189, 189, 189, 189, 468, 468, 468, 215, 215,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 212, 212, 212, 212,
	212, 212, 671, 671, 672, 672, 672, 205, 205, 205,
	205, 205, 205, 523, 523, 199, 199, 199, 199, 204,
	204, 204, 204, 207, 207, 207, 207, 451, 451, 196,
	196, 196, 197, 197, 197, 202, 202, 214, 203, 408,
	408, 200, 200, 206, 206, 206, 206, 208, 208, 208,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	177, 177, 177, 177, 210, 210, 195, 195, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 720,
	720, 191, 191, 191, 190, 190, 190, 190, 193, 193,
	194, 194, 194, 194, 194, 194, 194, 192, 183, 213,
	653, 653, 649, 649, 649, 649, 649, 649, 649, 649,
	649, 649, 647, 647, 647, 647, 647, 647, 647, 647,
	647, 650, 650, 650, 650, 650, 654, 654, 135, 135,
	135, 135, 135, 135, 135, 146, 146, 146, 146, 146,
	146, 146, 149, 149, 136, 136, 136, 136, 136, 136,
	136, 139, 139, 137, 137, 137, 137, 138, 138, 98,
	98, 98, 98, 98, 18, 18, 18, 99, 99, 310,
	310, 260, 260, 260, 395, 395, 261, 261, 385, 385,
	385, 385, 256, 256, 257, 257, 258, 259, 259, 100,
	100, 721, 721, 721, 664, 664, 664, 665, 665, 665,
	665, 665, 665, 379, 379, 380, 380, 489, 489, 489,
	489, 489, 383, 383, 383, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 393, 394, 394, 386, 386, 392,
	391, 391, 390, 390, 389, 389, 387, 388, 388, 388,
	397, 397, 396, 399, 399, 398, 488, 608, 608, 610,
	610, 610, 610, 610, 610, 610, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 469, 469, 722, 722, 723, 724, 606,
	606, 606, 607, 602, 602, 603, 603, 603, 603, 603,
	381, 381, 382, 382, 382, 382, 604, 605, 414, 414,
	527, 609, 609, 611, 611, 613, 725, 725, 725, 725,
	725, 725, 726, 726, 726, 487, 487, 486, 486, 485,
	485, 405, 405, 614, 614, 614, 614, 615, 615, 615,
	615, 615, 618, 617, 616, 616, 616, 616, 616, 102,
	102, 102, 448, 448, 447, 447, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 222, 222, 322, 322, 322, 95,
	95, 95, 15, 15, 15, 15, 15, 15, 15, 337,
	337, 16, 16, 16, 16, 666, 666, 666, 101, 101,
	101, 101, 101, 101, 403, 403, 403, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 657, 657, 656, 656, 323, 323, 728,
	728, 108, 108, 108, 108, 108, 108, 108, 108, 546,
	546, 547, 547, 94, 94, 94, 94, 94, 470, 470,
	467, 467, 466, 466, 413, 413, 525, 525, 525, 526,
	327, 327, 328, 328, 279, 279, 279, 471, 471, 471,
	36, 35, 26, 26, 30, 30, 31, 31, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 32, 32, 60,
	60, 60, 60, 61, 61, 61, 61, 64, 64, 65,
	65, 59, 59, 59, 59, 62, 62, 55, 55, 66,
	66, 66, 66, 66, 673, 675, 675, 674, 674, 678,
	678, 678, 678, 678, 678, 676, 676, 358, 358, 677,
	677, 708, 708, 709, 709, 142, 142, 147, 147, 147,
	147, 147, 148, 148, 148, 148, 150, 150, 150, 150,
	159, 159, 218, 218, 218, 218, 218, 218, 218, 73,
	73, 86, 86, 157, 730, 730, 730, 158, 158, 158,
	219, 219, 219, 219, 220, 220, 221, 221, 729, 729,
	320, 320, 482, 482, 483, 483, 731, 731, 484, 484,
	484, 484, 484, 313, 312, 314, 314, 315, 315, 91,
	91, 91, 301, 301, 300, 303, 303, 302, 304, 304,
	305, 305, 298, 298, 589, 589, 307, 307, 307, 308,
	308, 294, 294, 295, 295, 296, 296, 297, 297, 311,
	311, 584, 584, 732, 732, 133, 133, 133, 224, 224,
	369, 369, 369, 479, 479, 479, 406, 406, 334, 334,
	481, 481, 481, 481, 481, 444, 444, 444, 223, 223,
	421, 421, 434, 434, 435, 435, 539, 539, 436, 140,
	140, 141, 141, 156, 156, 264, 264, 262, 262, 262,
	262, 262, 262, 262, 262, 269, 269, 270, 270, 271,
	271, 272, 273, 273, 273, 273, 424, 424, 274, 274,
	274, 263, 263, 263, 265, 265, 265, 265, 265, 265,
	265, 268, 268, 268, 268, 275, 275, 275, 267, 267,
	625, 625, 625, 627, 627, 629, 629, 628, 628, 624,
	624, 626, 626, 727, 727, 450, 450, 450, 402, 404,
	400, 400, 401, 401, 411, 411, 409, 410, 410, 412,
	412, 524, 524, 524, 280, 280, 280, 441, 441, 441,
	441, 442, 442, 475, 475, 473, 473, 473, 473, 474,
	474, 476, 476, 476, 477, 477, 478, 478, 438, 438,
	439, 439, 440, 440, 440, 440, 505, 505, 266, 266,
	266, 418, 418, 418, 419, 419, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 496, 496, 494,
	494, 494, 494, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 529, 530, 530, 420, 420, 531, 480, 480,
	643, 643, 643, 644, 644, 522, 522, 532, 532, 532,
	532, 532, 532, 520, 520, 521, 521, 540, 541, 541,
	454, 454, 454, 454, 452, 452, 455, 455, 455, 455,
	455, 453, 453, 533, 533, 533, 533, 443, 443, 534,
	534, 534, 534, 535, 536, 536, 537, 537, 490, 491,
	491, 548, 548, 548, 548, 550, 417, 417, 417, 417,
	417, 601, 600, 600, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 565, 565, 565, 565, 565,
	565, 565, 551, 551, 551, 551, 551, 555, 555, 555,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 556, 556, 561, 561, 562, 562, 562, 557, 558,
	563, 563, 563, 563, 733, 733, 567, 567, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 553, 553, 553,
	560, 560, 560, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 462, 462, 464, 464,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 499, 499, 499, 499, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	619, 619, 619, 619, 619, 619, 619, 619, 501, 501,
	622, 622, 623, 623, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 630, 630, 631, 631, 633,
	633, 634, 634, 635, 636, 636, 636, 637, 638, 638,
	632, 632, 639, 639, 639, 639, 640, 640, 641, 641,
	641, 641, 641, 642, 642, 642, 642, 642, 511, 511,
	512, 512, 518, 518, 518, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	376, 376, 375, 324, 324, 324, 324, 324, 324, 429,
	429, 427, 427, 427, 430, 430, 428, 428, 426, 426,
	425, 425, 508, 508, 506, 506, 510, 510, 456, 456,
	566, 566, 566, 566, 566, 566, 566, 566, 457, 457,
	457, 465, 458, 458, 459, 459, 459, 459, 459, 502,
	503, 460, 460, 460, 504, 504, 513, 517, 517, 516,
	515, 515, 514, 514, 492, 492, 493, 493, 437, 437,
	734, 734, 433, 433, 538, 538, 538, 538, 595, 595,
	373, 373, 422, 422, 372, 372, 364, 364, 365, 365,
	365, 365, 415, 415, 519, 519, 568, 568, 569, 569,
	570, 570, 571, 571, 572, 573, 574, 507, 507, 345,
	344, 331, 332, 343, 342, 341, 330, 333, 338, 339,
	340, 335, 336, 352, 351, 350, 299, 306, 357, 359,
	359, 362, 362, 363, 361, 360, 360, 347, 348, 349,
	544, 329, 366, 366, 367, 367, 367, 368, 368, 368,
	368, 325, 325, 326, 326, 353, 353, 354, 355, 355,
	346, 346, 346, 316, 316, 316, 317, 317, 318, 318,
	582, 582, 579, 579, 579, 580, 580, 580, 683, 581,
	581, 581, 581, 578, 578, 578, 578, 578, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 591, 591, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 593, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 598, 598,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 3,
	4, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 9, 7, 9, 5, 6, 7,
	7, 9, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 1, 1,
	1, 1, 0, 1, 6, 6, 4, 6, 2, 1,
	4, 8, 7, 10, 9, 4, 4, 4, 3, 4,
	4, 4, 7, 7, 9, 8, 9, 5, 3, 5,
	7, 4, 12, 4, 12, 1, 3, 5, 5, 2,
	5, 3, 6, 4, 4, 4, 6, 5, 6, 5,
	6, 4, 8, 3, 8, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 4, 4, 2, 1, 1,
	3, 1, 3, 2, 4, 3, 2, 3, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 6, 8, 6,
	6, 6, 9, 4, 3, 2, 2, 0, 1, 1,
	1, 1, 1, 3, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 3, 3, 3, 12, 3, 5, 4,
	1, 3, 3, 3, 3, 2, 4, 4, 4, 1,
	1, 2, 1, 4, 1, 0, 3, 3, 0, 4,
	6, 0, 6, 4, 4, 4, 5, 7, 6, 8,
	7, 9, 8, 2, 1, 3, 1, 3, 3, 3,
	0, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 1,
	1, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 6,
	3, 8, 5, 3, 12, 2, 0, 1, 0, 1,
	1, 0, 1, 3, 1, 3, 3, 3, 3, 2,
	2, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	0, 1, 2, 2, 2, 1, 1, 1, 4, 5,
	1, 1, 1, 1, 3, 3, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 1, 2, 1, 1, 3,
	0, 1, 4, 0, 4, 6, 1, 3, 2, 1,
	3, 2, 1, 3, 5, 1, 2, 1, 0, 6,
	6, 6, 8, 1, 0, 4, 3, 3, 4, 3,
	4, 4, 4, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 1, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 10, 5, 1,
	3, 3, 1, 1, 0, 2, 0, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 4, 3, 1, 2, 3, 2,
	2, 2, 4, 6, 3, 1, 2, 2, 7, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 7, 4, 7, 8, 8, 9,
	11, 11, 11, 6, 2, 6, 9, 4, 7, 7,
	10, 7, 10, 10, 10, 13, 10, 13, 5, 8,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 4, 4, 3, 4, 1, 1, 1, 1,
	5, 4, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 3,
	6, 8, 3, 3, 3, 4, 8, 6, 4, 5,
	5, 5, 3, 0, 1, 1, 1, 4, 4, 3,
	4, 4, 3, 4, 4, 1, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 5, 7, 4,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	3, 2, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 11,
	12, 10, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 8, 11, 5, 4, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 2, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 1, 2, 3, 0, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 2, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 15,
	17, 3, 1, 0, 4, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 661, -3, -219, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -218, -226, -227, -228, -229, -238, -220, -221,
	-4, -72, -74, -88, -109, -111, -124, -134, -133, -135,
	-143, -151, -146, -129, -79, -156, -160, -172, -222, -223,
	-224, 33, 32, 106, 85, 165, 137, 147, 218, 417,
	469, 481, 434, 152, 457, 439, -166, -167, 503, -73,
	-86, -158, -157, 78, 138, 182, 321, 449, 53, 157,
	-7, -15, -33, -19, 30, 49, -75, -76, -77, -78,
	67, -95, -90, -104, -96, -89, -92, -93, -712, 109,
	-626, -112, -116, -150, -114, -716, 173, 239, -136, -137,
	-138, 399, -144, -145, 460, -147, -148, -149, 463, 174,
	-81, -80, 167, -262, -264, -163, -162, -164, -225, -173,
	-174, -175, -176, -177, -179, -180, -182, -209, -183, -184,
	-185, -186, -187, -188, -192, -212, -189, -190, -191, -194,
	-193, -195, -200, -196, -197, -198, -199, -201, -202, -204,
	-205, -206, -207, -208, -210, -211, 509, -203, -213, -181,
	-214, 577, 526, 87, 473, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -66, -5, -6, -20, -97,
	-91, -94, -98, -99, -100, -108, -101, -102, -103, -625,
	-113, -115, -118, -120, -121, -117, -119, -122, 458, 632,
	-265, -263, 658, 637, 593, -178, -23, -28, -24, -25,
	-27, -29, -26, -30, -31, -32, -51, -56, -53, -54,
	-52, -55, -57, -58, -59, -60, -61, -62, -63, -64,
	-65, -35, -41, -42, -36, -37, -38, -39, -40, -43,
	-44, -45, -46, -47, -48, -49, -50, -21, -22, -34,
	-67, -68, -70, -69, -71, 619, 628, -268, -266, -267,
	-275, 495, 601, 549, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, -371, 2, -347, -353, -354, -355, -346, -316,
	-593, -598, 4, -590, -596, 181, 249, 359, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 45, 47, 48, 49, 50, 51, 52, 53, 57,
	59, 63, 64, 65, 66, 67, 68, 69, 73, 78,
	79, 84, 85, 86, 87, 88, 89, 90, 91, 97,
	94, 95, 96, 98, 100, 102, 103, 104, 105, 106,
	107, 108, 110, 111, 112, 114, 115, 116, 124, 125,
	126, 127, 128, 130, 137, 131, 138, 141, 135, 140,
	136, 142, 143, 145, 146, 147, 150, 151, 152, 154,
	155, 156, 158, 159, 160, 162, 163, 165, 166, 167,
	170, 168, 171, 169, 172, 173, 174, 175, 176, 179,
	187, 188, 189, 194, 196, 197, 198, 200, 201, 204,
	205, 206, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 219, 223, 225, 226, 227, 228, 229, 230, 231,
	237, 238, 239, 241, 242, 243, 244, 245, 250, 251,
	252, 256, 258, 264, 265, 270, 266, 271, 272, 274,
	278, 279, 280, 281, 282, 283, 284, 286, 288, 287,
	292, 290, 294, 295, 298, 299, 300, 301, 302, 303,
	307, 308, 304, 309, 310, 312, 313, 316, 314, 317,
	318, 315, 319, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 320, 321, 336, 334, 338,
	339, 340, 341, 342, 357, 352, 353, 354, 346, 347,
	343, 348, 344, 345, 349, 350, 356, 351, 361, 362,
	363, 364, 367, 235, 257, 369, 370, 373, 375, 392,
	378, 379, 380, 383, 384, 387, 390, 391, 393, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 404, 405,
	407, 408, 409, 411, 412, 413, 415, 417, 418, 420,
	421, 422, 424, 425, 426, 427, 428, 429, 430, 431,
	433, 434, 436, 435, 437, 439, 441, 442, 443, 449,
	450, 457, 451, 453, 454, 455, 456, 458, 459, 460,
	461, 462, 463, 467, 465, 466, 468, 469, 471, 472,
	473, 474, 475, 477, 479, 480, 484, 485, 488, 486,
	506, 507, 529, 481, 482, 483, 487, 489, 490, 491,
	492, 494, 493, 498, 496, 497, 499, 500, 501, 503,
	505, 508, 509, 511, 512, 513, 514, 515, 516, 517,
	520, 522, 523, 524, 525, 526, 527, 548, 528, 530,
	534, 535, 536, 537, 531, 532, 547, 539, 540, 541,
	542, 544, 545, 550, 551, 552, 553, 554, 555, 557,
	558, 560, 568, 581, 569, 570, 571, 572, 574, 577,
	578, 579, 580, 566, 582, 583, 586, 587, 591, 588,
	592, 589, 590, 593, 595, 598, 599, 600, 606, 605,
	607, 608, 610, 611, 609, 613, 614, 615, 620, 621,
	623, 624, 625, 37, 54, 55, 58, 60, 62, 74,
	75, 76, 80, 132, 133, 164, 177, 178, 190, 207,
	208, 220, 222, 232, 233, 234, 255, 259, 260, 262,
	268, 291, 366, 368, 385, 389, 406, 410, 414, 416,
	432, 476, 504, 518, 533, 538, 561, 562, 563, 564,
	573, 575, 601, 602, 603, 612, 622, -371, 2, -347,
	376, -340, 2, -316, -316, 417, 29, 2, 29, 405,
	497, 552, 554, 2, -655, -416, 545, 2, 29, -319,
	-316, 109, 218, 495, -340, 2, -655, 218, -416, 26,
	545, 2, -316, 2, 390, 176, 204, 23, 28, 71,
	82, 104, 150, 175, 199, -715, 392, 425, 479, 499,
	547, 558, 574, 2, 605, 313, 496, 549, 249, 127,
	579, 487, -666, 484, 485, 390, 423, 471, 221, 594,
	-320, 2, 481, -316, 313, 2, 661, 100, 79, 476,
	500, -169, 2, 303, 569, -170, -171, -168, 561, -577,
	487, 471, 336, -316, 661, 661, 661, 29, -329, 2,
	-316, -329, 2, -230, 2, -329, -718, -237, -236, -235,
	22, 450, 189, 284, 202, 240, 341, 420, 200, 51,
	-230, 2, 549, 249, 487, 127, 545, -729, 2, 569,
	-729, 2, 661, 661, 2, 549, 396, 605, 496, 127,
	429, 249, 579, 49, 150, 28, 204, 73, 555, 636,
	487, -666, 633, 634, 313, 134, -648, 2, -647, 4,
	-596, -590, -365, -364, 549, 555, 127, -355, -346, 650,
	-354, 661, 661, 661, 661, 2, 271, 272, 427, 426,
	500, 501, 29, 661, 661, 661, 661, 661, 484, 176,
	2, 175, -680, 23, 28, 71, 99, 104, 134, 199,
	392, 425, 499, 547, 551, 558, 574, -665, 528, 73,
	487, -664, -666, 381, 313, 579, 150, -466, 127, 303,
	216, 587, 554, 552, 585, 141, 258, 590, 589, 661,
	661, 661, -127, 2, 658, 33, 32, -126, -130, 152,
	503, -255, 549, 263, 2, -316, 661, 661, 661, 2,
	271, 272, 484, 485, 29, 661, 661, 202, -647, 545,
	2, 661, 661, 661, 2, 29, 271, 272, 484, 485,
	263, 2, 73, 490, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 2, -216, 500, 528, 228, 50, 49, 79, 29,
	424, 84, 397, 128, 134, 159, 580, 219, 249, 250,
	279, 99, 100, -468, 47, 272, 73, 271, 485, -671,
	484, -523, 550, 489, 497, 544, 91, 284, 481, 569,
	571, 109, 595, 472, 625, 429, 430, 542, 443, 539,
	304, 168, 203, 4, 127, 336, 471, 502, 288, 287,
	581, 561, 303, 480, 400, 89, 661, -727, 2, 549,
	569, 2, -729, 2, -729, 2, -730, 569, 622, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	-263, -265, -264, 661, 661, 661, 661, 661, 661, 661,
	-216, 500, 2, 79, 29, 29, -409, -411, 584, 261,
	161, 382, -262, -264, 2, -625, 581, 500, -575, 2,
	-497, -599, -499, 648, 649, 641, 546, 72, -375, 358,
	626, -511, 134, 585, 376, -598, -500, -513, 164, 392,
	476, -430, 8, 9, 5, 6, 7, -325, -501, -507,
	576, 180, 365, -368, 662, 10, 658, -622, -264, -512,
	38, 222, 70, -579, -367, -326, -551, 262, -366, -346,
	-619, -620, 4, -590, -591, -580, -554, -562, -558, -559,
	-565, -316, -593, 82, 118, 119, 117, 122, 121, 306,
	305, 123, 120, 502, 594, 71, 37, 232, 233, 268,
	366, 234, 80, -621, 151, -592, 259, 260, 518, 55,
	432, 190, 133, 132, 368, 60, 58, 602, -563, 129,
	561, 562, 563, 564, 207, 208, 62, 177, 178, 389,
	414, 538, 573, 575, 220, 291, 46, 113, 203, 254,
	236, 267, 269, 273, 293, 296, 337, 355, 360, 386,
	388, 470, 510, -733, 603, 533, 74, 75, 195, -627,
	435, -628, -340, -627, 661, 661, 663, 661, -400, -402,
	-404, 2, 29, 148, 658, 2, -528, 2, -529, -533,
	-264, 285, -532, 658, -530, 656, -347, 377, -623, 477,
	-619, -620, -325, -346, -367, 4, -590, -592, 660, -405,
	658, 127, 487, 549, 83, 249, 99, 175, 204, -461,
	658, -316, 29, 376, 565, 663, -655, -416, -401, 422,
	-509, 658, 376, 379, 202, 379, -655, 64, 98, -705,
	232, 2, -704, -353, 317, 2, 2, 2, 2, 2,
	232, -316, 549, 126, 283, 2, 2, 2, 2, 2,
	2, 2, -423, 232, 2, -347, 605, -423, 232, 2,
	-423, 232, 2, -467, 2, 93, -330, 232, 2, -316,
	-356, 232, 2, -351, -353, -362, 232, 2, -359, -316,
	-585, 232, 2, -583, 4, -590, 123, 502, -497, 2,
	-156, 2, 64, -316, 605, 2, 506, 2, 658, -169,
	2, 76, 569, 46, 500, -170, 2, -483, 2, -484,
	-312, -313, -314, -540, -315, 270, 421, 431, 629, 139,
	358, 625, -707, 202, 640, 565, -575, -575, -575, -431,
	660, -232, 57, -329, -719, -718, -719, -573, 29, -568,
	8, -569, 648, 649, -573, -573, -719, -719, 2, 2,
	2, 2, 2, -482, -483, 2, -533, 232, -347, 2,
	-344, -578, 4, -590, -596, -591, -597, -593, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 99, 109, 117, 118, 120, 119,
	121, 122, 123, 134, 139, 144, 148, 149, 153, 157,
	161, 180, 182, 195, 199, 202, 218, 221, 224, 240,
	253, 261, 263, 285, 289, 297, 305, 306, 358, 365,
	371, 376, 377, 381, 382, 403, 419, 438, 464, 495,
	502, 521, 543, 549, 559, 565, 567, 576, 584, 585,
	594, 596, 604, 616, 617, 618, 619, -598, 82, 2,
	-533, 232, 2, -350, 232, -533, -353, 2, -330, 2,
	-497, -659, 557, 171, 451, 2, -372, 232, -347, -349,
	-353, -351, 2, 484, -587, 2, -582, 10, -581, 5,
	4, -590, -596, -591, 2, 2, -704, -497, 2, -500,
	2, -511, 29, -359, 2, -583, 232, 2, 29, 29,
	605, 422, 263, 565, 663, -422, -364, -365, -574, 4,
	8, -415, -316, 660, -497, 2, -156, -139, 2, 195,
	-497, 232, 2, -156, 232, 2, -497, 232, 2, -156,
	232, 2, -316, 2, -667, 2, -706, -587, 232, 98,
	232, -316, 2, 204, -714, 479, 578, 317, 2, 2,
	574, 2, 104, 549, 126, 2, 2, 2, 2, 2,
	2, 2, 549, -335, 2, -316, 195, -542, 263, -359,
	232, -360, 2, 496, -728, 435, -583, 232, 2, 455,
	605, -351, 232, 2, -351, 249, 265, -330, 232, 2,
	554, 552, 554, 552, 202, 2, 263, 2, 263, 2,
	-534, 2, -535, -529, -536, 656, 377, -545, 2, -544,
	-581, 601, -127, 658, -127, 658, 500, 658, -587, -347,
	-347, -497, 2, -156, -139, 2, -497, 2, -156, 2,
	-316, 2, -153, -587, -152, 658, 202, 595, -316, 2,
	-497, 2, -156, -139, 2, -497, 2, -156, 2, -255,
	195, 2, 127, 549, -216, 2, 195, 596, 2, 8,
	2, 240, -251, -587, 489, 187, 430, 2, 506, 2,
	507, 79, -468, 625, 79, 202, 2, 202, 2, -451,
	2, 619, 422, 202, 2, 2, -653, 2, 376, 202,
	2, 202, 2, 202, 2, 202, 2, 202, 2, -215,
	501, 570, 548, 426, 272, 2, -156, 616, -139, 272,
	271, -497, 616, 2, -672, 195, 485, -497, 2, 568,
	281, 169, 202, -451, 2, 202, 2, 202, 2, 5,
	2, 43, 427, 529, 2, 270, 421, 529, 2, 527,
	2, -347, 549, 605, 496, 127, 204, 29, 2, 484,
	2, 2, 94, 95, 202, 2, 202, 2, 217, 202,
	2, 443, 202, 549, -432, 660, -432, 625, 2, -443,
	-533, -482, 565, -409, -411, -216, 506, 2, -269, -441,
	-271, 195, -473, -474, -272, 297, 182, 371, -273, -450,
	29, 148, -450, -450, 64, 659, 659, -707, 581, 11,
	12, 81, 43, 648, 649, 650, 651, 193, 652, 653,
	646, 647, 645, 638, 639, 643, 276, 277, 101, 642,
	640, 92, 311, 478, 183, 184, 185, 186, 452, 247,
	35, 248, 14, 15, 16, -375, 34, 381, 296, 626,
	236, 510, 641, 17, 18, 19, 267, 269, 360, 54,
	240, -324, 392, -374, 546, 72, -497, -497, -497, -497,
	-497, -497, -497, -497, 388, 658, -437, -492, 656, -264,
	658, 658, 658, 658, -574, -264, -497, -511, 659, -428,
	658, -264, -511, -506, 658, 476, 656, 658, -514, -497,
	5, 5, 5, 658, 660, -630, 620, 195, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 658, 416, -556, 658, -555, 658, -555,
	-555, 606, -553, 658, 628, 621, 658, -553, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 606, 555, 663, -627, -405, 658, -433, -538, -497,
	650, -433, -433, 376, -425, -497, 113, -454, 273, 337,
	203, 293, 470, 254, -494, 662, -494, -522, 628, -264,
	-530, -346, -264, -532, 658, -528, -522, -128, -574, -109,
	-124, -133, -156, -172, -223, -224, 650, -347, 658, 202,
	658, 660, -578, 202, -415, -330, -359, -347, -366, -367,
	-372, -341, -316, 2, 2, 147, -425, -649, 579, 487,
	29, 4, -596, -590, -365, 496, -364, 549, 127, 176,
	204, -585, -319, 565, 39, -508, -548, -549, -601, 662,
	-600, -551, -561, -557, -560, 406, 410, -580, 58, 602,
	-563, 262, 4, -590, -592, 259, 260, 518, 55, 432,
	190, 133, 132, 368, 60, 561, 562, 563, 564, 207,
	208, 62, 603, 533, 74, 75, -649, 579, 487, 29,
	496, 195, -585, 195, 202, -585, 2, -587, 2, -292,
	663, 69, 461, 164, -687, 658, 2, 164, 2, 2,
	2, -316, -292, 663, 164, -423, 232, -292, 164, -292,
	164, -373, 232, -372, -292, 164, -292, 663, 164, -292,
	663, 164, 660, 663, 164, -585, 2, -467, -577, -425,
	39, -483, 2, 134, 4, 5, -731, 663, 295, -378,
	310, 357, 227, 377, 623, 369, 139, -586, 5, 4,
	-507, -519, 134, 303, 262, -568, -570, 9, -571, 648,
	649, -576, -575, 116, 660, -578, -233, 257, 41, -329,
	-329, -719, -719, 8, 8, -719, -719, -329, -329, -289,
	453, 503, 391, -288, 25, 30, 152, 251, 342, 599,
	170, -390, 252, 458, -387, 396, 164, 522, 588, -659,
	-662, 483, 557, 171, 451, 96, 369, 503, 391, 453,
	164, -447, -449, 39, 125, 342, 390, 65, 243, 315,
	316, 526, 459, 612, 164, 503, 391, 453, 391, -16,
	-305, 25, 152, -307, -300, 503, 30, -662, 105, 453,
	637, 632, 458, 402, 541, 419, -662, -659, 290, -661,
	615, 356, -291, 522, 588, -659, -472, -662, 483, 453,
	-290, 358, 613, -392, -387, 396, 164, 662, 25, 152,
	453, 503, 391, -710, -711, 30, -574, 2, -287, 240,
	-286, 25, -695, 453, 503, 391, -682, -697, 342, 66,
	466, 532, 238, 525, 614, 176, 494, 292, 358, 107,
	477, 540, 393, -282, -281, 25, 152, 503, 591, -165,
	-145, -164, 458, 503, -165, 2, 453, 391, -656, -337,
	-624, 240, 619, 164, -337, -337, -533, 232, -676, 195,
	2, -669, -152, 286, 5, 10, -587, -152, -422, 663,
	663, -578, 650, 485, 484, 164, 164, 164, 164, 272,
	195, 358, -706, 2, 358, 619, -699, -353, -715, 2,
	2, 2, 2, 2, 2, 2, -347, 232, -407, 376,
	-645, -646, -717, 549, -242, 619, -587, 358, 46, -350,
	232, 2, -353, 605, -656, 358, -664, -352, 232, -347,
	39, 658, 358, 2, -467, 2, 249, -624, 358, -534,
	-369, -347, -529, -369, 503, -340, 39, -494, -347, 659,
	663, -545, -545, -587, -242, 202, 658, -255, 619, 619,
	272, -541, 663, -540, 240, -588, -587, -153, -587, 456,
	202, 272, -587, -645, -330, 2, -347, 2, 549, 274,
	-152, 202, 240, -242, -587, -587, -587, -577, 29, 507,
	2, -215, 501, 570, 95, 507, 2, -347, 549, 127,
	249, 85, -676, 195, 2, -316, -654, 195, -650, 471,
	487, 579, -649, -347, 127, -347, 127, -347, 127, -347,
	-347, 2, 2, 2, 2, 2, 90, 2, -156, -497,
	2, 90, 2, 49, 523, -672, 195, 2, 568, 2,
	568, 2, -316, -316, -316, 371, 528, 295, 619, -347,
	-347, -347, -348, -353, -353, 489, 550, 580, 485, -497,
	2, -720, 2, 202, 195, 2, 549, 249, 549, 249,
	127, 202, 79, 127, 29, 202, 549, 482, 660, 4,
	-292, 663, -320, -269, -441, -577, -442, -441, -270, -269,
	-272, 195, 431, 589, 342, 508, 278, -474, -473, 29,
	-497, -478, 189, 341, -497, -476, -499, 648, 649, -569,
	-571, -424, 369, -263, -263, -263, -412, -524, -497, 419,
	249, -576, -707, -550, -548, -548, -345, -578, 561, -497,
	-497, -497, -497, -497, -497, -497, -497, -497, -497, -497,
	-497, -497, -497, -497, -497, -497, -497, -497, -497, -497,
	-497, -497, -497, -497, -497, -497, -497, -497, -497, -497,
	-497, -497, -497, -497, -497, 296, 236, 510, 54, 240,
	-497, 565, -497, -497, -497, -497, 334, 358, 365, 576,
	180, 586, 148, 369, -734, 543, 42, -504, -264, -429,
	658, -518, 36, 521, 29, -511, 658, 2, -492, -497,
	-493, -376, -374, -316, 648, 649, 650, 651, 652, 653,
	638, 639, 640, 14, 15, 16, 643, 647, 645, 646,
	193, 101, 642, 311, 478, 92, 183, 184, 185, 186,
	276, 277, 17, 18, 19, 35, 641, -426, -425, -425,
	659, 604, 29, 148, 650, 2, 659, 663, 39, 659,
	-497, -426, -510, -506, -425, -517, -516, 616, -462, -463,
	624, 320, 130, 230, 318, -464, 492, -572, 8, -578,
	650, -631, 188, 221, 658, 659, 2, 659, 2, 659,
	-497, 2, 659, -497, 2, 659, -497, 2, 659, -497,
	2, 659, 2, 659, 2, -497, -497, -497, -497, -497,
	-497, -497, -425, 8, -572, -572, 561, 561, -572, -572,
	-572, -564, 406, 407, 408, 409, 298, 299, 300, 301,
	410, 411, 412, 413, 326, 327, 328, 329, 322, 323,
	324, 325, 330, 331, 332, 333, 212, 213, 214, 215,
	208, 209, 210, 211, -564, -456, 2, -566, -425, 4,
	624, 320, 130, 230, 318, 492, 5, -456, 2, -457,
	2, -497, -425, -458, -498, -499, 648, 649, 641, -375,
	-459, 2, -497, -426, -497, 61, 289, 567, -460, -497,
	202, -425, -425, 2, -425, 2, -500, 2, -628, 39,
	-425, -418, 663, 202, 39, -595, 4, -594, 44, 66,
	107, 136, 143, 176, 238, 256, 266, 292, 393, 465,
	466, 494, 525, 540, 572, 614, 504, -418, -418, 658,
	659, 663, -455, 225, 314, 309, 265, -455, -528, -454,
	273, -452, 386, -452, -452, -522, -331, 656, 665, -578,
	-522, -521, -520, 39, -340, 383, -522, -522, 660, 659,
	-521, 657, -643, 658, 661, 661, 661, 661, 661, -347,
	658, -425, -578, 660, 530, 2, 659, 267, 267, 267,
	267, 267, 376, 477, 659, 565, -651, -356, -362, 497,
	550, 205, -422, 663, -422, -415, 98, -705, 619, -585,
	-126, 378, 659, 663, -417, 38, 656, 660, -572, 2,
	2, -567, 606, 658, 658, -463, 658, 202, -651, -362,
	550, 497, 205, 2, -655, 545, -416, -585, 565, -704,
	-705, -688, 659, -690, -698, -683, -692, 240, 385, 255,
	604, -579, -548, 4, -590, -316, 2, -347, -423, -292,
	164, -423, -423, -292, 663, 164, -330, -351, -356, -359,
	-362, -316, -583, -585, -292, -352, -707, 659, 569, -484,
	-377, 431, 520, 454, 498, 545, 9, 9, 663, -578,
	-234, 486, 342, -329, -329, -329, -329, 663, -708, 99,
	565, 83, 658, 487, -309, 304, 565, -488, 232, 83,
	-602, 99, -333, -603, -316, 77, 585, 419, 199, 162,
	-708, 99, 419, -708, 99, 2, 251, 99, 503, 528,
	658, 29, 64, -533, 43, 43, 29, -660, -661, 290,
	202, 625, 549, 249, 487, 565, 565, -533, -449, -548,
	125, 315, 316, 64, -573, -573, 64, -573, -573, -573,
	619, -573, 619, -350, -533, 487, 565, 565, 565, 441,
	539, 441, 539, 493, -300, -302, -170, 493, 539, 304,
	565, 565, -170, 29, -216, 462, 134, -732, 640, 441,
	290, -661, 565, 202, 663, 43, 43, 29, -660, 202,
	565, 613, -372, -331, 600, 45, 600, 45, 600, 565,
	45, 487, 565, 663, 45, -284, -283, 503, -286, -587,
	-285, 340, -713, -697, 461, 503, 565, 487, 565, 143,
	376, 365, 494, 136, 266, 292, -519, -519, -316, -281,
	-645, -645, -241, -240, -316, 5, -415, 79, 565, 565,
	-16, 503, -657, -321, 112, 348, 308, 349, 103, 345,
	102, 344, 110, 346, 111, 347, 607, 361, 608, 362,
	68, 343, 319, 350, 524, 351, 611, 363, -322, -323,
	155, 398, 598, 127, -583, -16, -16, 503, 391, 453,
	164, -677, 240, 29, -666, 240, -541, 240, -541, -364,
	-316, 660, -156, -497, -497, -156, -497, -156, 49, 164,
	39, 164, 2, 658, 283, 658, -381, 358, 202, -415,
	-542, 663, -347, 39, -241, 380, 164, -583, -448, -447,
	358, -352, 232, 2, 164, -728, -405, 358, 158, 658,
	429, 2, 164, -332, 232, -317, -316, -467, -294, 553,
	164, -445, 596, -479, -156, 658, 134, 39, -479, -434,
	-435, -539, -436, -333, 658, -340, -494, -127, -544, 659,
	659, 659, -255, -406, -334, -333, 126, 433, 433, -248,
	619, -152, -153, 659, 663, -541, 240, 531, -153, -587,
	-242, -242, -541, -541, -347, 195, -587, -152, -242, -242,
	-242, 2, 2, 2, 2, -451, -347, -330, -372, -347,
	-358, 240, 29, 660, -585, -585, -362, -363, -361, -316,
	-356, -451, -330, -451, -330, -451, -330, -451, -451, -156,
	-497, 528, 2, 500, 195, 195, 660, -451, 8, -408,
	464, 5, 2, 429, 127, 549, 396, 249, -347, -372,
	-347, -372, -330, 127, -330, 128, 127, -347, 4, -533,
	-442, -270, 377, 278, 508, -476, -477, -499, 476, 477,
	-477, 476, 477, 8, 9, 8, 9, -274, 512, 364,
	-423, 663, -279, 40, 144, 278, -347, -576, 625, 160,
	-497, -497, 565, -734, 543, -504, 160, -497, 334, 365,
	576, 180, 586, 148, 369, 202, 658, -498, -498, 659,
	-427, -497, -497, 657, 667, 659, 660, 659, -411, 663,
	-409, -497, -425, -425, 659, 660, -425, -415, 657, 657,
	663, 659, -515, -516, 153, -497, 565, 565, 565, 565,
	658, 659, 660, -636, 387, 658, 658, -497, 659, 659,
	659, 659, 39, 663, 663, 663, 659, 663, 663, 663,
	659, 659, 659, 663, 659, 625, 625, 659, 659, 659,
	659, 663, 659, 663, 659, 202, 659, 659, -465, 403,
	659, 11, 12, 648, 649, 650, 651, 193, 652, 653,
	646, 647, 645, 638, 639, 640, 92, 311, 478, 14,
	15, 16, -375, 267, 240, -498, -498, -498, -498, 659,
	-502, -503, 202, 195, 39, -460, -460, -460, 659, 202,
	-425, 659, 659, 658, -629, 313, 358, 659, -491, -490,
	617, -538, -419, 2, -528, -342, -578, -491, -491, -425,
	-497, 273, 273, -453, 596, 376, -455, -528, -521, -574,
	-496, -495, 197, 40, 144, 352, 353, 354, 235, 198,
	-521, -340, -405, -521, -521, -578, -522, -522, -520, 659,
	-644, -574, 659, -420, -531, -623, -411, 660, -578, -252,
	-624, -217, 5, 365, -217, -217, -217, -217, -347, -585,
	565, 565, 240, 240, 240, -422, -415, 26, -675, 619,
	404, -548, 656, 657, 8, -578, 658, -572, -572, -572,
	-585, 202, 202, 240, 240, 240, 376, -655, 202, -583,
	-292, 659, 663, -683, -692, -698, -692, 385, 2, -292,
	-423, -292, -292, -372, -373, -292, -292, -292, -446, 619,
	-575, -483, 583, 88, 431, 561, -575, 124, 486, -288,
	453, 503, -333, -333, -347, -259, -258, -256, -316, 5,
	-357, -316, 216, 442, -583, 358, -488, 232, -293, 358,
	232, -341, -548, 658, -469, 621, 278, 278, 596, -333,
	-341, 278, 232, -333, 232, -341, 2, -341, -658, 431,
	370, -497, -257, -256, 64, -388, 302, 429, 359, -289,
	453, 503, 391, -156, -156, -156, 658, -707, 596, 147,
	-347, -372, -347, -357, -583, -352, 503, 391, 453, 355,
	-366, -573, -573, -573, -447, 503, 391, 453, -357, -583,
	-350, -583, -299, 232, -316, 441, -299, 232, 441, 441,
	441, 441, 216, 442, 487, -330, 441, 625, 48, -732,
	565, 202, -497, -497, -290, -156, -156, -156, 658, -331,
	-291, -472, 453, 5, 232, -333, 5, -333, 232, 5,
	-316, -333, -357, -583, -711, 25, 152, -333, 663, 282,
	263, 619, -668, 203, 484, 436, -287, 640, -316, -357,
	-583, 376, 365, 376, 136, 266, -242, 663, 640, 640,
	-357, -583, -321, 398, -669, 365, 5, 10, 592, -330,
	-656, -337, 487, 565, 565, -533, -673, -674, 218, 469,
	487, 472, -585, -152, -245, 619, -152, -239, 244, 650,
	-648, -587, -587, -316, -685, -686, -689, -690, -316, -379,
	-382, -380, -333, -489, -488, -606, -607, -602, 296, 249,
	585, 265, 181, 99, -260, -261, 621, 619, 164, -370,
	-347, 656, -242, -646, -543, 181, 495, 658, -359, -360,
	164, -405, 358, -583, 605, 39, 164, 658, 2, 2,
	-351, 376, 358, -332, 232, -295, 154, -732, -330, -491,
	-419, -444, -481, 464, 376, -406, 601, -340, -444, -421,
	663, 202, 640, 660, -406, -537, 650, -127, -127, -242,
	658, -587, 659, 663, 660, 658, 640, 640, -250, 380,
	-249, 156, 280, 264, 514, 515, 516, 517, 146, 513,
	131, 339, 245, 555, 488, -541, -587, -248, -153, 202,
	-541, 240, 202, -82, 619, -242, 549, 240, -242, 662,
	487, 472, -316, 660, -451, -451, -451, 500, 500, -316,
	195, -415, -343, -578, -330, -347, -344, -372, 195, 195,
	-330, -330, 589, -477, 377, 307, -524, -280, 627, -347,
	662, -497, -497, 160, 160, -497, -498, -498, -497, 160,
	202, 658, -497, -508, 34, 34, 659, 663, -493, -497,
	-374, 659, 604, -411, -411, 659, 650, -578, 662, 659,
	-506, 157, -497, 559, 320, 230, 318, -464, 318, -464,
	-464, -572, 5, -578, 650, -637, -336, 658, -316, 617,
	-410, 382, 659, -550, -548, -497, -497, -497, -497, -497,
	-572, -553, -553, -568, -568, -497, -502, -497, -550, -548,
	-498, -498, -498, -498, -498, -498, -498, -498, -498, -498,
	-498, -498, -498, -498, -498, -498, -498, -498, -498, -498,
	148, 358, 369, -498, -503, -502, -497, -497, -548, 659,
	659, 659, -425, -126, 658, 313, -438, 221, -497, -541,
	663, -438, -438, 659, -528, -528, 658, -497, 273, 657,
	663, 666, 640, 640, -405, 660, -520, -521, 657, 659,
	663, 659, 663, -480, 39, 659, -578, -491, -254, -253,
	145, 57, 114, 142, 365, 373, 201, 226, 428, 160,
	196, 154, 267, -675, -585, -585, 487, 487, 487, 379,
	218, 5, 8, 656, 657, 660, -572, 659, 659, 659,
	-585, -585, 487, 487, 487, -649, 579, 487, 29, 202,
	-585, -690, -692, -692, -292, -292, 126, 342, -497, -231,
	619, 621, 565, 565, 659, 663, 640, 64, 240, 164,
	358, 598, 358, -603, 162, -608, -497, 658, 249, 658,
	658, 2, -276, -277, -278, 152, 503, 25, -709, 2,
	596, 164, -292, 164, -292, 623, 659, 663, -388, 658,
	658, 565, 487, -309, 565, 619, -425, -497, -243, 134,
	-577, -662, 662, -662, 662, 487, 565, 565, 487, 565,
	565, 358, -316, 164, -316, -732, -316, -662, -662, 240,
	619, 179, 179, 625, -299, -497, -497, 195, 565, 619,
	-425, 565, -552, 52, 27, 358, -351, -292, 164, 565,
	565, 579, 503, -283, -587, -152, -246, 156, 468, 146,
	280, 245, 49, 379, -669, -152, 175, 256, 365, -240,
	-587, -587, -669, -587, 365, -16, -357, -583, -352, 503,
	391, 453, -655, -655, 218, -362, -677, -541, -247, 380,
	-246, -541, -245, 202, 263, 619, 659, 663, 134, 640,
	2, 659, 659, 663, 663, -609, -293, -347, -332, 249,
	249, -339, -317, 39, 373, 373, 658, -347, -105, 619,
	-540, -574, -338, -316, -433, -241, 46, -350, 39, 164,
	-656, -352, -156, -352, -546, -547, 5, 39, -347, 164,
	376, 358, -296, 288, -732, -582, -624, -411, -444, -433,
	359, 97, 659, -491, -435, -419, -497, 2, 659, -587,
	-242, -255, -334, 2, -588, -587, -587, 663, 658, 640,
	640, 640, 640, 640, 640, 640, -248, -541, -152, -248,
	-153, -156, 380, -347, -152, 650, -357, -358, 650, -451,
	5, -394, -393, 396, 369, -394, 476, 476, 377, 189,
	284, -279, -331, -497, -497, 160, 34, 34, -497, -497,
	-508, 659, -497, -497, -425, 657, 5, -497, 659, 659,
	8, -497, 659, 660, -638, -316, -497, 659, 64, 659,
	659, 663, 663, 659, 659, 659, 659, 659, 659, 659,
	-503, 202, 148, 369, 658, 659, 659, -126, -505, 224,
	64, -528, -505, -505, -453, -415, -528, -495, -331, 656,
	-331, 656, -578, -574, -531, 658, 660, -253, 640, -587,
	-587, 2, 2, 5, 5, 428, 358, 365, 5, -217,
	-675, -675, 619, -362, -362, -362, 379, 657, 2, 656,
	-578, 659, -362, -362, -362, 202, -651, -362, 550, 205,
	-585, 126, 195, 229, 229, -333, -333, -258, -575, 549,
	476, -299, 419, -488, 164, 164, -610, 99, -612, 81,
	181, 109, 358, 365, 585, 419, 77, 134, 376, 438,
	-722, -723, -724, 39, 630, 631, 659, -413, -525, -623,
	658, -316, -413, -415, 358, 536, 134, 376, 358, 134,
	376, 613, 126, 2, 579, 84, -333, -341, -256, -415,
	-415, -347, -357, -583, 172, 659, 663, 640, 2, 650,
	650, -357, -583, -352, -357, -583, -350, 164, 601, -299,
	-299, 601, -299, 394, 179, 565, -156, -497, 172, 659,
	-331, 5, 5, 164, -328, 81, -333, 5, -333, -351,
	126, 640, 640, 640, 640, 640, 31, -669, -240, 619,
	-316, 256, 487, 565, 565, 376, 376, 379, -673, -674,
	-245, 663, 658, -245, -588, -152, 2, 466, -689, -497,
	-497, -395, 251, -333, -607, -604, -605, 419, -489, -611,
	-613, 181, 419, -383, 658, -332, -317, 658, -156, 2,
	-259, 658, -381, 380, 657, 202, 659, -583, -448, -156,
	-352, -405, -403, 619, -405, 659, 663, 158, -470, 596,
	-331, -347, 164, -297, 287, -732, -582, -294, -475, -473,
	149, 658, 376, -156, -411, 640, 659, 126, 659, -249,
	-250, -587, -152, -587, -587, -587, -152, -587, -248, -679,
	39, -541, -83, -84, 249, 99, 401, -242, -242, -344,
	549, 249, 658, 658, -279, -497, -497, -497, 659, -411,
	-578, 650, -632, 396, 659, -524, -497, -497, -498, 202,
	658, -508, 659, -633, 618, -497, -439, -440, -497, 474,
	115, 222, -633, -633, 659, -574, -574, 2, -587, 2,
	2, 365, 2, 2, 2, 565, 565, 565, 656, 2,
	202, 202, 202, -585, 202, 202, 240, 240, -156, 240,
	39, 441, -488, -341, -341, -345, -338, 181, 232, 365,
	613, -469, 278, 658, -498, 589, -347, 658, 2, 231,
	231, 31, 64, -725, 139, 253, 659, 663, -526, -327,
	-316, -497, -526, 659, 659, 365, 589, 365, 613, -497,
	589, -548, 658, -292, -292, 659, 659, -497, 565, -577,
	106, -575, 2, -662, -299, -415, -415, -662, -330, -497,
	195, -497, 565, 5, -292, -345, -292, -292, -328, 579,
	-587, -497, 576, 180, -152, -152, 375, -357, -583, -352,
	-678, 550, 497, 580, 489, 205, 475, -678, 195, -246,
	-247, -245, -681, 504, -389, -390, 2, -609, 278, -338,
	278, 242, 163, -413, 658, 658, -415, -721, 619, 659,
	-379, -260, -106, -107, 566, -540, -652, -369, -405, 39,
	342, 126, 39, 5, 658, 658, -316, 376, 658, -331,
	-311, 98, -732, -582, -295, -444, 359, -415, 99, -475,
	-504, -242, 658, -242, 659, 555, -248, 663, 29, 658,
	29, 658, -347, -372, -425, -425, 659, -411, 64, 663,
	659, 659, -498, -508, 659, -634, -635, -336, 663, 658,
	658, 505, 657, 657, 2, -585, -585, -585, 2, -585,
	-585, -585, -585, -585, 487, 487, -299, 419, -316, -603,
	-612, -338, 358, -261, 596, 619, -497, -498, -318, 658,
	-497, 658, 658, 39, 134, 253, 140, 237, -487, -726,
	108, 537, 241, -525, -279, 659, -486, 596, 438, -498,
	-328, -413, 658, 658, 658, 640, 202, -156, 658, -552,
	-292, -351, 640, 565, 2, 202, -655, 659, -668, -691,
	-692, -260, 658, -261, -384, 86, 100, 135, 231, 206,
	250, 528, 534, 29, -384, 659, -413, -413, 659, -385,
	376, 126, 342, 659, 39, -107, 9, -491, 39, -156,
	126, -156, -546, -413, -347, -413, 376, -301, -300, 297,
	-582, -296, 659, -341, -444, -588, -574, 4, -84, -415,
	-415, 659, 659, -639, 429, 477, 223, -425, -412, 659,
	663, 39, -440, 2, 2, 2, -675, -675, -675, -362,
	-362, 441, -293, 164, 225, 659, -614, 312, -316, 659,
	-448, -448, 39, 140, 237, -391, -387, 658, -280, -526,
	-261, 225, -347, -663, 596, 659, -397, -396, -393, -399,
	-398, -393, -425, -575, 106, 394, -425, -328, -152, -585,
	-585, 376, -670, 203, -693, -694, -696, 39, 283, 572,
	618, -697, -385, -414, -527, -333, -486, 659, 659, 87,
	126, -395, -156, -156, 2, -403, 659, 659, -470, 659,
	-347, -298, -589, 441, 443, -732, -297, -491, 149, 659,
	659, 659, 659, -640, -641, 54, 582, 116, -497, -640,
	-640, -635, -637, 202, 202, 181, -485, 628, -615, -618,
	-617, 635, 511, 203, 395, 659, 536, 612, 659, 659,
	-725, -415, -485, -405, -497, -486, 659, 663, 601, 659,
	663, 601, 659, 202, 659, -292, -675, -292, -678, -244,
	619, 49, -703, -700, 53, 465, -696, -684, 5, -582,
	-310, -309, 659, 663, -487, -486, -391, 418, 141, 152,
	-389, -721, -486, 658, -487, 658, -308, -307, -732, -568,
	-311, 149, 359, 589, -242, -642, 162, -641, 415, 194,
	476, 415, 194, -642, -642, -585, -585, -338, -261, 59,
	-617, 635, -618, 635, 589, 141, -491, 659, -614, -261,
	-396, 240, -398, 202, 394, 202, 484, -669, 31, 44,
	-497, -261, -527, -391, -487, -261, 477, 477, 2, -260,
	-385, -487, -413, -391, -413, -304, -305, -306, -415, -301,
	359, 589, 503, 116, 221, 560, 342, 34, 640, -616,
	342, 461, 69, 503, -616, -615, 658, 658, -585, 380,
	-702, -261, -391, -491, 2, -385, -391, 659, -261, 659,
	-584, 391, -298, 503, -434, 476, 384, -641, -497, 24,
	365, 134, -725, -425, -425, -292, -241, 658, -701, 157,
	-3, -700, -491, -261, -471, 358, 613, -310, -261, -486,
	-491, -487, -303, -302, 493, -732, -308, -434, -491, 659,
	659, -241, 664, -471, -491, 613, -491, -487, -471, -391,
	-583, -304, -491, -386, -387, 565, 659, -471, -471, -391,
	-261, -303, 658, -261, -491, -425, -491, -471, 659, -471,
	-386,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1730, 1732,
	719, 720, 722, 723, 724, 726, 727, 729, 731, 733,
	734, 735, 737, 738, 740, 741, 742, 743, 744, 746,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 842, 844, 0, 1712,
	1714, 1716, 1718, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 417, 419, 421, 423,
	0, 455, 457, 458, 460, 462, 463, 465, 467, -2,
	0, 649, 650, 652, 654, 656, -2, 0, 1288, 1290,
	1292, 0, 830, 832, 0, 1295, 1297, 1299, 0, 0,
	854, 855, 0, 1833, -2, 846, 848, 850, 852, 931,
	933, 935, 937, 939, 941, 943, 945, 947, 949, 950,
	952, 954, 956, 958, 960, 961, 963, 965, 967, 968,
	970, 971, 973, 975, 977, 979, 981, 983, 985, 987,
	989, 991, 993, 995, 997, 999, -2, 1002, 1003, 1004,
	1006, -2, 0, -2, -2, 1726, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 75, 76,
	595, 597, 599, 601, 603, 606, 608, 610, 612, 1891,
	658, 660, 662, 664, 666, 668, 670, 672, 0, 0,
	-2, 1905, 0, 0, 0, 1095, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 145, 146, 147, 148,
	149, 150, 151, 152, 91, 92, 93, 95, 96, 97,
	98, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 142, 143, 89,
	118, 119, 120, 121, 122, 0, 0, 1864, 1866, 1868,
	1870, -2, 0, 0, 8, 12, 14, 16, 18, 20,
	22, 24, 26, 28, 30, 32, 36, 38, 40, 42,
	1731, 1733, 721, 725, 728, 730, 732, 736, 739, 745,
	747, 749, 704, 705, 708, 2607, 2625, 2626, 2627, 2630,
	2631, 2632, 2633, 2634, 2635, 3166, 3247, 3248, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
	2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889,
	2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899,
	2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919,
	2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929,
	2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939,
	2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949,
	2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
	2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969,
	2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
	3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009,
	3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019,
	3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029,
	3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039,
	3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049,
	3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059,
	3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069,
	3070, 3071, 3072, 3092, 3093, 3094, 3095, 3096, 3097, 3098,
	3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108,
	3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118,
	3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128,
	3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138,
	3139, 3140, 3141, 3142, 3143, 3144, 3145, 706, 707, 1482,
	0, 788, 786, 2590, 789, 2917, 791, 793, 643, 644,
	645, 646, 647, 648, 0, 823, 3022, 804, 1903, 824,
	826, 827, 828, 829, 783, 781, 0, 828, 823, 2663,
	3022, 821, 1710, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 574, 1545, 1546, 1547,
	1695, 1696, 2973, 1741, 0, 282, 843, -2, -2, 3130,
	-2, 885, 886, -2, -2, 900, 904, 895, 3135, 0,
	2976, 2958, -2, 907, 1713, 1715, 1717, 1007, 1008, 1009,
	2611, 1013, 1011, 1023, 1024, 1027, 0, 1044, -2, 0,
	2659, 2940, -2, -2, 1045, 1046, -2, -2, -2, -2,
	1025, 1026, 0, 0, 0, 0, 0, 1743, 1735, 1738,
	1736, 1737, 46, 48, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 292, -2,
	-2, -2, -2, 0, 0, 3028, 2721, 2558, 2627, 2561,
	2556, 418, 420, 422, 424, 425, 0, 0, 0, 0,
	0, 0, 0, 456, 459, 461, 464, 466, -2, 0,
	468, 0, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 638,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 1354, 1355, 1612, 0, 0, 0, -2, 651,
	653, 655, 709, 710, 0, 1892, 1892, 717, 718, -2,
	0, 0, 0, 0, 379, 370, 1289, 1291, 1293, 1294,
	0, 0, 0, 0, 0, 831, 833, 0, 0, 3022,
	343, 1296, 1298, 1300, 1301, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 847, 849, 851, 853, 932, 934,
	936, 938, 940, 942, 944, 946, 948, 951, 953, 955,
	957, 959, 962, 964, 966, 969, 972, 974, 976, 978,
	980, 982, 984, 986, 988, 990, 992, 994, 996, 998,
	1000, 1001, 1052, 0, 0, 0, 0, -2, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1164, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 0,
	1257, 0, 0, 1055, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 0, 1137, 1162, 1163, 1173, 1005, 0, 1525, 1893,
	1743, 1720, 1721, 1722, 1727, 1729, 1723, 1724, 1725, 52,
	54, 56, 58, 60, 62, 64, 66, 68, 70, 72,
	74, 77, 596, 598, 600, 602, 604, 607, 609, 611,
	-2, 1862, 1863, 659, 661, 663, 665, 667, 669, 671,
	834, 0, 837, 0, 1057, 836, -2, 0, 1897, 1897,
	1897, 0, 0, 1863, 1861, 0, 0, 0, 840, 841,
	911, 912, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 2430, 2258, 0, 913, -2, 2291, 2293, 3104, 2889,
	3130, 2429, 2295, 2296, 2297, 2298, 2299, 0, 2301, 2302,
	2303, 2304, 2305, 2306, 0, 2308, 0, 2313, 2314, 2315,
	0, 3111, 2533, 2621, -2, 0, 0, 3118, 2617, 0,
	2396, 2331, -2, -2, 2644, 2623, 2102, 2103, 2104, 2105,
	2106, -2, -2, 3149, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 0, 3092, 3112, 3113, 3119,
	3121, 3114, 3101, 2356, 2737, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 2129, 2138,
	-2, -2, -2, -2, -2, -2, -2, 3105, 3106, 3124,
	3127, 3134, 3139, 3140, 3110, 3120, 3148, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162,
	3163, 3164, 3165, 2130, -2, -2, -2, -2, 0, 1880,
	2933, 1883, 1482, 1881, 1865, 1867, 0, 1869, 0, 0,
	0, 1874, 1900, 1898, 0, 1949, 1878, 1879, 1972, 1972,
	1996, 0, 1977, 0, 1996, 1892, 2023, 0, 1983, 2963,
	2332, 2333, 0, 2627, 2622, -2, -2, 3146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 790, 792, 0, 0, 0, 0, 823, 822, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	3112, 586, 536, 539, 0, 577, 578, 579, 580, 581,
	3112, 0, 0, 0, 0, 588, 589, 590, 591, 592,
	593, 594, 252, 3112, 677, 702, 0, 252, 3112, 680,
	252, 3112, 683, 0, 686, 1610, 252, 3112, 689, 2586,
	252, 3112, 692, 694, 2594, 252, 3112, 698, 2601, 2599,
	699, 0, 701, 272, 268, 269, 270, 271, 1706, 1707,
	1708, 1709, 0, 1740, 1611, 845, 0, 871, 0, 883,
	884, 3100, -2, 0, 2987, 888, 889, -2, 891, 1744,
	1748, 1749, 1750, 1751, 1752, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 878, 879, 898, 899, 905, 908,
	0, 1016, 1012, 1028, 0, 1043, 0, 1044, 1044, 2575,
	2566, 2567, 0, 0, 1044, 1044, 0, 0, 1047, 1048,
	1049, 1050, 1051, 1734, -2, 88, 0, 3112, 2023, 90,
	0, 2580, 2653, 2654, 2655, 2656, 2657, 3147, 3167, 3168,
	3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178,
	3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188,
	3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218,
	3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
	3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238,
	3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3149, 94,
	0, 3112, 99, 0, 3112, 0, -2, 123, 0, 144,
	0, 172, -2, -2, -2, 153, 0, 3112, 0, 2555,
	-2, 0, 264, -2, 0, 774, 382, 383, 2640, 2641,
	2649, 2650, 2651, 2652, 371, 372, 554, 0, 765, 0,
	874, 2430, 0, 0, 1326, -2, 0, 1538, 1540, 1540,
	0, -2, 0, 0, 0, 1277, 2552, 2557, 1278, 1279,
	2576, 1280, 2562, 0, 426, 427, 428, 429, 430, 0,
	431, 3112, 433, 434, 0, 436, 437, 3112, 439, 440,
	0, 442, 0, 444, 0, 307, 324, 322, 3112, 0,
	3112, 470, 473, 0, 575, 0, 572, 0, 556, 557,
	0, 559, 0, 0, 0, 564, 565, 567, 568, 569,
	570, 571, 0, 616, 614, 2591, 634, 396, 0, -2,
	3112, 0, 1323, 0, 0, 1590, -2, 0, 1531, -2,
	0, 1597, 3112, 1593, 0, -2, 0, 1890, 3112, 1761,
	1358, 1359, 1360, 1361, 2035, 640, 0, 1797, 0, 1799,
	0, 1819, 2029, 1972, 0, 0, 2034, 0, -2, 762,
	2610, -2, 712, 0, 713, 0, -2, 0, 396, 0,
	0, 1304, 1306, 1307, 1309, 1310, 1313, 1314, 1315, 1316,
	0, 1318, 2009, 344, 346, 0, 0, 0, 0, 1303,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 0,
	634, 856, 0, 0, 1053, 1054, 0, 0, 1072, 1073,
	1074, 0, 0, 396, -2, -2, -2, 1082, 0, 1089,
	1092, -2, 0, 0, 0, 0, 1099, 0, 1104, 1105,
	1106, 0, -2, 0, 1113, 1115, 1287, 1117, 0, 0,
	1119, 0, 1123, 0, 1126, 0, 1128, 0, 1130, -2,
	-2, -2, 1138, 1139, -2, 1144, -2, 0, 1148, -2,
	0, 1151, 0, 1154, -2, 0, 1164, 1160, 1161, 0,
	0, 0, 0, 1181, 1182, 0, 1191, 0, 1194, 1195,
	1196, 0, 0, 1201, 1202, 0, 1204, 1205, 1206, 1208,
	1209, 1210, 0, 3059, 2984, 2721, 2769, 0, 1219, -2,
	1225, 1227, 0, -2, 0, 1243, 0, 1247, 0, 0,
	1256, 0, 0, 0, 1056, 0, 1065, 1066, 1067, 252,
	2027, 1719, 0, -2, 0, 835, 0, 839, 1922, 1848,
	1845, 0, 1919, 1920, 1849, 0, 0, 0, 1856, 0,
	1895, 1896, 0, 0, 0, 1835, 1836, 0, 0, 0,
	0, 0, 0, 2435, 2436, 2437, 2438, 2451, 2439, 2440,
	2450, 2448, 2449, 2441, 2442, 2447, 2461, 2462, 2452, 2453,
	2443, 2456, 2454, 2455, 2457, 2458, 2459, 2460, 0, 0,
	2466, 0, 2444, 2445, 2446, 2474, 0, 0, 2475, 0,
	2477, 0, 2467, 2463, 2464, 2465, 0, 2237, 2239, 2541,
	0, 0, 0, 2473, 2468, 2469, 2175, 2176, 2177, 2178,
	2179, 2212, 2216, 2217, 0, 0, 2292, 2538, 2537, 2294,
	0, 0, 2489, 0, 2307, -2, 0, 2430, 2484, 0,
	0, 2316, 2317, 2318, 0, 0, 2489, 0, 0, 2532,
	2328, 2329, 2167, 0, 0, 2398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2116, 2115, 0, 2117, 0, 2118,
	2119, 2126, 2139, 0, 0, 0, 0, 2143, 0, 0,
	0, 0, 0, 0, 0, 2513, -2, 0, 0, 0,
	0, 2131, 0, 0, 1882, 0, 0, 1953, 2542, 2546,
	2547, 1953, 1953, 0, 0, 2490, 2020, 2020, 0, 0,
	2015, 2015, 2015, 2013, 1996, 0, 1996, 2006, 0, 1996,
	1996, 0, -2, 1977, 0, 0, 2006, 0, 1990, 750,
	752, 754, 756, 757, 758, 760, 2024, 2025, 0, 0,
	0, 0, 2628, 0, 0, 0, 0, 0, 0, 2613,
	0, 0, 2585, 451, 452, 0, 0, 0, 3041, 2976,
	0, -2, -2, -2, -2, 2984, 0, 0, 2721, 2758,
	2769, 795, 825, 0, 1892, 0, 2492, 2050, 2054, 0,
	2056, 2057, 2058, 2059, 2060, 0, 0, 2051, -2, 2127,
	2129, 2150, 2645, 2646, 2647, 2110, 2111, 2112, 2113, 2114,
	2122, 2109, 2109, 2109, 2120, 2149, 2141, 2149, 2145, 2095,
	2096, 2097, 2132, 2133, 2134, 2135, 0, 3041, 2976, 0,
	-2, 0, 807, 0, 0, 0, 1830, 334, 335, 534,
	0, 250, 251, 0, 538, 0, 576, 0, 583, 584,
	585, 0, 673, 0, 0, 252, 3112, 678, 0, 681,
	0, 252, 3112, 2550, 687, 0, 690, 0, 0, 696,
	0, 0, 0, 0, 0, 252, 1832, 0, 0, 0,
	0, -2, 893, 901, 902, 903, 0, 1746, 0, 1753,
	922, 923, 924, 1755, 1756, 0, 1758, 896, 925, 926,
	927, 928, 929, 930, 0, 2564, 2565, 2570, 2571, 0,
	0, 894, 915, 897, 0, 909, 1019, 1014, 1015, 1029,
	1030, 0, 0, 2568, 2569, 0, 0, 1035, 1036, 154,
	1692, 0, 0, 205, 0, 1692, 1692, 0, 0, 0,
	0, 233, 0, 0, 1392, 0, 0, 0, 0, 172,
	190, 201, 166, 167, 168, 0, 0, 0, 0, 0,
	0, 100, 1504, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 1520, 1523, 0, 0, 0, 0, 0, 125,
	126, 0, 0, 131, 132, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 1794, 0, 180, 172, 0, 0,
	171, 173, 156, 0, 0, 172, 176, 191, 203, 0,
	239, 0, 179, 241, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 274, 0, 0, 309, 772, 0,
	775, 0, 548, 0, 523, 0, 0, 545, 553, 0,
	0, 510, 511, 512, 513, 0, 0, 518, 0, 0,
	0, 0, 524, 764, 766, 634, 634, 0, 0, 872,
	876, 877, 0, 0, 873, 875, 0, 0, 1532, 0,
	0, 0, 1889, 0, 0, 0, 0, 3112, 1690, 0,
	1673, 0, 2009, 2817, -2, -2, 344, 2009, 1276, 0,
	0, 2628, 2560, 0, 0, 0, 0, 0, 0, 443,
	0, 0, 0, 333, 0, 0, 0, 479, 0, 566,
	555, 558, 560, 561, 562, 605, 1451, 3112, 0, 0,
	638, 629, 0, 633, 0, 0, 637, 0, 0, 1503,
	3112, 1501, 2595, 0, 1529, 0, 1589, 1482, 3112, 2593,
	0, 0, 0, 1598, 2637, 1607, 1611, 1782, 0, 642,
	0, 1800, 1802, 0, 0, 2030, 0, 2032, 1972, 1892,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	1317, 353, 0, 2008, 0, 0, 384, 2009, 344, 2946,
	0, 1302, 396, 396, 2009, 858, 2009, 860, 0, 0,
	1075, 0, 0, 1078, 396, 396, 396, 1087, 1088, 1090,
	1091, -2, -2, -2, -2, 1093, 1094, 1188, 0, 0,
	0, 1187, 1688, 0, 1109, 1112, 1116, 0, 1260, 2958,
	2976, 3041, 1285, 1188, 2721, 1188, 2721, 1188, 2721, 1188,
	1188, 1132, 1176, 1184, 1143, 1150, 0, 1145, 1149, 1152,
	1155, 0, 1157, 1165, 0, -2, 0, 1168, 0, 1170,
	0, 1172, 1188, 1189, 1192, 0, 1200, 1203, 0, 1211,
	1212, 1213, 1214, 2608, 1215, 1216, 1217, 1218, -2, 1222,
	1223, 0, 1234, 1239, 1240, 1236, 0, 0, 0, 0,
	0, 0, 1250, 1251, 0, 0, 0, 1259, 0, 1068,
	1524, 0, 1728, 1922, 1848, 838, 1839, 1921, 1840, 1847,
	1850, 0, 0, 1852, 0, 1854, 0, 1917, 1918, 1925,
	1926, 0, 1936, 1937, 1929, 0, -2, 0, 0, 1932,
	1933, 1858, 0, 1875, 1876, 1877, 1906, 1909, 1626, 0,
	3247, 881, 0, 2171, 2045, 2172, 2173, 2579, 0, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, -2,
	-2, -2, -2, -2, -2, -2, -2, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, -2, -2,
	-2, 2213, 2214, 2215, -2, 2476, 2478, 0, 2541, 0,
	-2, 0, -2, -2, -2, -2, 2234, 0, 2236, 2241,
	2243, 2245, 0, 0, 0, 0, 2540, 2255, 2524, 2525,
	0, 0, 2432, 2433, 2434, 2240, 0, 2259, 2539, 2536,
	0, 0, 2470, 0, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 0, 2488, 1905,
	2320, 0, 0, 0, 0, 2327, 2312, 2486, 0, 2485,
	0, 0, 0, 2496, 0, 2531, 2527, 0, 2577, 2166,
	2153, 2154, 2155, 2156, 2157, 2158, 2168, 0, 2574, 2614,
	2620, 2406, 0, 0, 0, 2357, 2358, 2359, 2360, 2361,
	0, 2363, 2364, 0, 2366, 2367, 0, 2369, 2370, 0,
	2372, 2373, 2374, 2375, 2376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 0, 0, 2378, 0, 2499, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2380, 0,
	2382, 2490, 2510, 0, 0, 2260, 0, 0, 0, 0,
	0, 2385, 2490, 2518, 0, 0, 0, 0, 0, 2490,
	0, 2523, 0, 2392, 0, 2394, 1096, 1097, 1884, 0,
	0, 2040, 0, 0, 0, 2545, 2548, 2549, 3073, 3074,
	3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084,
	3085, 3086, 3087, 3088, 3089, 3090, 3091, 2040, 2040, 0,
	1948, 0, 0, 2016, 2017, 2018, 2019, 0, 0, 2020,
	0, 2010, 2014, 2011, 2012, 2006, 1969, 0, 0, 2581,
	2006, 1975, 2005, 0, 1482, 1995, 2006, 2006, 0, -2,
	1979, 1996, 0, 0, 751, 753, 755, 759, 761, 0,
	0, 1905, -2, 0, -2, 398, 1481, 0, 0, 0,
	0, 0, 0, 785, 787, 0, 0, 693, 0, 0,
	0, 0, 1266, 0, 1268, 1269, 0, 1271, 0, 1676,
	779, 0, 782, 0, 2041, 2044, 0, 0, 2055, 2061,
	2062, 0, -2, 0, 0, 2151, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 3022, 0, 818, 0, 537,
	252, 0, 541, 542, 0, 0, 491, 492, 493, 494,
	496, 2648, 497, -2, -2, 0, 587, 703, 252, 675,
	0, 252, 252, 684, 0, 0, 252, 695, 252, 2602,
	252, 2600, 273, 700, 1831, 285, 0, 880, 0, 1745,
	1754, 0, 919, 0, 921, 0, 2572, 2573, 0, 910,
	0, 1017, 0, 1031, 1032, 1033, 1034, 0, 0, 0,
	0, 1691, 0, 0, 1636, 0, 0, 209, 3112, 0,
	254, 0, 0, 1444, 2587, 0, 1434, 0, 0, 2745,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 169, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 1506,
	1508, 1515, 1517, 0, 1511, 1512, 0, 1514, 1516, 1518,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 137, 1541, 2982, 0, 0,
	0, 0, 1542, 1543, 1544, 1770, 1771, 0, 1793, 1794,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 178, 0, 2554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 310, 0, 776, 0,
	777, 0, 544, 546, 547, 523, 0, 0, 0, 0,
	0, 0, 0, 516, 517, 519, 520, 521, 522, 767,
	396, 769, 770, 392, 389, 391, 771, 0, 0, 0,
	1534, 0, 1585, 1583, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	0, 0, 0, 0, -2, 1536, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 387, 2553,
	2563, 0, 1311, 1312, 432, 435, 438, 441, 291, 0,
	0, 0, 472, 481, 0, 1364, 1336, 0, 0, 615,
	396, 634, 636, 0, 394, 2892, 2606, 1321, 1499, 1502,
	0, 1482, 3112, 1553, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 3112, 2582, 2636, 2637, 1784, 1794,
	0, 2040, 0, 1817, 1803, 0, 0, 0, 1817, 1821,
	1822, 1824, 1825, 0, 0, 2031, 2037, 711, 763, 1892,
	1892, 396, 0, 0, 1806, 1808, 0, 0, 0, 336,
	0, 347, 2009, 345, 0, 353, 0, 0, 2009, 344,
	0, 628, 857, 862, 396, 0, 0, 396, 1079, 1080,
	1081, 1134, 1178, 1186, 1238, 1098, 1100, 1101, 1102, 0,
	1107, 0, 0, 0, 1286, 1281, 1282, 1283, 2603, 2599,
	1284, 1118, 1188, 1121, 1188, 1124, 1188, 1127, 1129, 1147,
	1153, 1166, 1159, 1167, 0, 0, 0, 1180, 0, 1198,
	0, 1207, 1221, 0, 0, 0, 0, 0, 0, 0,
	1244, 1245, 1246, 1248, 1253, 1252, 0, 1258, 1069, 2028,
	1843, 1844, 1846, 0, 1855, 0, 0, 1931, -2, -2,
	1930, 1934, 1935, -2, -2, -2, -2, 1851, 0, 1860,
	1857, 0, 1916, 1624, 1625, 0, 0, 882, 0, 0,
	-2, -2, 0, 0, 0, 2256, 0, -2, 2235, 2238,
	2242, 2244, 2246, 0, 0, 0, 0, 0, 0, 2479,
	0, 2481, 2257, 2534, 2537, 2472, 0, 2428, 0, 0,
	1904, 1905, 1905, 0, 2326, 0, 2487, 0, 2494, 2495,
	0, 2319, 0, 2528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2330, 0, 0, 0, 0, 2362, 2365,
	2368, 2371, 0, 0, 0, 0, 2351, 0, 0, 0,
	2355, 2121, 2107, 0, 2149, 2147, 2148, 2142, 2149, 2146,
	2099, 0, 2098, 0, 2377, 0, 2379, 2381, 0, 0,
	2383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2263, 2264, 2265, 2285, 2384,
	2516, 2517, 0, 0, 0, 0, 0, 0, 2390, 0,
	2522, 2391, 2393, 1892, 0, 1885, 0, 1950, 1939, 2039,
	0, 2543, 2009, 1952, 1954, 2544, 2584, 1939, 1939, 0,
	2491, 0, 0, 2000, 0, 0, 0, 2002, 1973, 0,
	0, 1967, 0, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1974, 1482, 2004, 1976, 1980, 2614, 0, 2006, 0, 1991,
	0, 1993, 2026, 0, 1985, 1988, 0, 0, 2629, 2040,
	0, 445, 453, 454, 446, 447, 448, 449, 0, 1676,
	0, 0, 0, 0, 0, 1267, 1270, 0, 803, 0,
	0, 2493, 0, 2046, 0, 2052, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	535, 540, 0, 0, 490, 0, 489, 495, 582, 674,
	252, 679, 682, 2551, 252, 688, 691, 697, 281, 0,
	870, -2, 917, 918, 920, 0, 916, 1022, 1018, 206,
	1692, 0, 0, 0, 1632, 0, 1347, 0, 1342, 1343,
	1634, 2598, 1638, 1644, 1647, 0, 211, 3112, 223, 0,
	3112, 0, 1408, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 3112, 252, 3112, 252, 227, 229, 232, 0,
	238, 234, 0, 1344, 0, 1396, 0, 0, 1399, 155,
	1692, 0, 0, 158, 162, 174, 0, 0, 0, 188,
	0, 0, 0, 1649, 1653, 1661, 0, 0, 0, 1509,
	1510, 1513, 1519, 1522, 101, 0, 0, 0, 1657, 1659,
	1665, 124, 127, 3112, 2596, 0, 129, 3112, 0, 138,
	1794, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 160, 164, 175, 0, 1667,
	157, 177, 0, 267, 0, 0, 257, 252, 3112, 0,
	259, 0, 260, 261, 275, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 773, 0, 549, 550,
	551, 0, 0, 0, 514, 515, 768, 0, 0, 0,
	1324, 1325, 1584, 0, 1527, 1528, 319, 320, 0, 1539,
	1533, 0, 0, 0, 0, 0, 1669, 1670, 0, 0,
	0, 1690, 1685, 2009, 287, 0, 2009, 295, 0, 2559,
	0, 323, 332, 469, 0, 480, 482, 484, 0, 0,
	0, 1363, 1462, 1365, 1367, 1368, 1369, 254, 0, 2637,
	1434, 2804, 2637, 0, 0, 1331, 0, 0, 0, 621,
	617, 0, 626, 630, 631, 0, 0, 0, -2, 0,
	0, 0, 0, -2, 0, 0, 0, 1600, 1594, 1595,
	0, 0, 0, 0, 3112, 1786, 1794, 0, 1890, 1905,
	641, 1795, 1817, 0, 0, 0, 1805, 1801, 1798, 2040,
	0, 0, 0, 0, 0, 2033, 2036, 714, 715, 373,
	0, 396, 0, 0, 0, 0, 0, 0, 351, 0,
	354, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 0, 0, 0, 369, 353, 385, 338, 2009, 0,
	353, 0, 0, 859, 0, 1070, 0, 0, 1077, 0,
	0, 1688, 1111, 0, 1120, 1122, 1125, 1169, 1171, 1188,
	0, 1199, 1228, 2583, 1229, 1386, 0, 1386, 0, 0,
	1249, 1255, 1853, 0, 1928, 1859, 1910, 1911, 0, 1626,
	0, 2174, 2219, 0, 0, -2, 0, 0, 2223, 0,
	0, 0, -2, 0, 0, 0, 2480, 2482, 0, 2536,
	2471, 2321, 0, 0, 0, 2325, 2309, 2310, 0, 2431,
	2497, 2526, 2530, 0, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 0, 2578, 2615, 2619, 2404, 2405, 2409, 2592, 0,
	0, 0, 2334, 0, 0, 0, 0, 0, 0, 0,
	0, 2140, 2144, 0, 0, 2498, 2509, 2511, 2261, 2262,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	-2, -2, -2, 2279, 2280, 2281, -2, -2, -2, 2286,
	0, 0, 0, 2512, 2514, 2515, 2519, 2520, 0, 2387,
	2388, 2389, 2521, 0, 1892, 1886, 1947, 0, 2038, 1951,
	0, 1947, 1947, 1899, 1998, 0, 0, 2022, 0, 1970,
	0, 1971, 0, 0, 2003, 0, 1978, 1981, 1982, 1992,
	0, 1984, 0, 1987, 0, 2321, -2, 397, 399, 401,
	0, 404, 405, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 794, 1676, 1676, 0, 0, 0, 796,
	0, 780, 0, 0, 2048, 0, 0, 2124, 2128, 2152,
	809, 811, 0, 0, 0, 0, 3041, 2976, 0, 0,
	808, 543, 487, 488, 676, 685, 283, 0, 2007, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 253, 0, 1443, 0, 1406, 0, 0, 1433, 0,
	0, 1449, 213, 214, 215, 0, 0, 0, 0, 225,
	0, 0, 221, 0, 231, 237, 236, 0, 1393, 0,
	0, 0, 0, 1637, 0, 0, 0, 185, 186, 187,
	0, 192, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 139, 140, 0,
	0, 1776, 1777, 0, 1764, 182, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 1623, 277, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 299, 301,
	0, 0, 0, 0, 321, 0, 0, 508, 0, 393,
	388, 390, 1526, 1587, 1588, 1535, 1650, 1654, 1662, 0,
	0, 0, 0, 0, 828, 1689, 0, 295, 293, 0,
	296, 295, 289, 0, 0, 0, 0, 0, 0, 0,
	563, 1334, 1450, 0, 0, 1452, 1370, 1374, 0, 2637,
	2637, 0, 2589, 0, 1332, 0, 0, 1451, 613, 0,
	620, 0, 635, 2588, 0, 0, 0, 1503, 0, 0,
	1530, 1482, 1556, 1482, 0, 1599, 1601, 0, 1609, 0,
	0, 0, 1788, 1794, 0, 1781, 1782, 1924, 1796, 1815,
	-2, 0, 0, 1905, 1823, 1820, 1826, 1827, 0, 0,
	376, 0, 1807, 1809, 0, 1305, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 353, 350, 340,
	2009, 380, 0, 396, 396, 1103, 1687, 1108, 2604, 1179,
	1197, 1230, 1385, 0, 0, 1232, 0, 0, 1927, 1914,
	1915, 1912, 1626, 2221, 2225, 0, 0, 0, 2227, -2,
	0, 2249, -2, -2, 2483, 2535, 2300, 1905, 2322, 2324,
	2311, 2529, 2169, 0, 2411, 2408, 0, 2395, 0, 2346,
	2347, 0, 0, 2350, 2352, 2353, 2354, 2108, 2101, 2100,
	2508, 0, 0, 0, 0, 2386, 1887, 0, 2400, 0,
	0, 1955, 2400, 2400, 1999, 0, 2001, 1968, 1956, 0,
	1965, 0, 2615, 1994, 1986, 0, 0, 402, 0, 406,
	407, 408, 409, 411, 0, 0, 0, 0, 0, 450,
	797, 798, 0, 0, 0, 0, 1675, 2042, 2047, 0,
	2053, 2123, 0, 0, 0, 0, 0, 0, 0, 0,
	819, 284, 0, 1020, 1021, 207, 208, 1348, 1346, 1641,
	1645, 1642, 0, 210, 0, 0, 1407, 0, 1410, 0,
	0, 0, 0, 1417, 1434, 0, 0, 0, 0, 0,
	0, 1436, 0, 1435, 0, 0, 1466, 0, 1614, 1621,
	0, -2, 0, 0, 0, 217, 243, 0, 0, 0,
	0, 246, 1693, 219, 0, 0, 252, 252, 1345, 0,
	0, 1633, 1635, 1648, 0, 0, 0, 0, 195, 0,
	0, 1651, 1655, 1663, 1658, 1660, 1666, 0, 0, 130,
	1767, 0, 0, 0, 1778, 0, 181, 0, 0, 0,
	1668, 265, 266, 0, 252, 0, 252, 258, 252, 1623,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 0,
	552, 509, 0, 0, 0, 0, 0, 0, 1671, 1672,
	286, 0, 0, 288, 386, 295, 471, 478, 483, 485,
	486, 1395, 0, 1462, 1454, 1455, 1456, 0, 1366, 1461,
	1463, 0, 0, 1371, 0, 0, 0, 0, 1351, 1333,
	0, 1364, 1336, 0, 618, 0, 395, 1322, 1500, 1548,
	1482, 0, 1551, 0, 0, 1591, 0, 0, 0, 0,
	0, 0, 0, 1790, 1794, 0, 1783, 1784, 1817, 1923,
	0, 0, 0, 1804, 1924, 0, 396, 0, 396, 355,
	0, 356, 357, 358, 365, 366, 367, 368, 339, 342,
	0, 353, 861, 863, 0, 0, 869, 1071, 1076, 1384,
	0, 0, 0, 0, 1913, 2229, -2, -2, 2250, 0,
	2616, 2618, 1905, 0, 2397, 1907, 0, 0, -2, 0,
	0, 0, 1888, 1871, 0, 1946, 1938, 1940, 1942, 2961,
	2716, 3111, 1872, 1873, 2021, 0, 0, 1989, 403, 412,
	413, 0, 415, 416, 799, 0, 0, 0, 0, 2049,
	0, 0, 0, 806, 0, 0, 0, 0, 1010, 0,
	0, 1643, 212, 0, 0, 1411, 1412, 1414, 0, 1416,
	1418, 1419, 1336, 0, 1423, 0, 2639, 0, 1428, 1431,
	1432, 0, 0, 1445, 1467, 0, 1476, 0, 1616, 1626,
	1620, 0, 1618, 1478, 0, 216, 245, 218, 247, 242,
	0, 1623, 0, 220, 230, 0, 0, 159, 0, 0,
	2709, 198, 196, 194, 128, 134, 136, 141, 1630, 184,
	0, 161, 0, 267, 276, 1622, 278, 262, 252, 0,
	298, 300, 302, 303, 304, 305, 0, 1652, 1656, 1664,
	0, 1679, 1680, 1681, 1682, 1683, 0, 0, 0, 297,
	0, 0, 0, 477, 1336, 1394, 1335, 1453, 0, 1464,
	1336, 0, 0, 0, 0, 0, 0, 1338, 0, 1337,
	0, 0, 619, 622, 0, 625, 2040, 632, 0, 0,
	0, 1555, 0, 1602, 1600, 0, 1608, 0, 0, 0,
	1763, 0, 0, 1785, 1786, 639, 1810, 0, 0, 1817,
	1828, 375, 0, 378, 352, 0, 341, 0, 865, 0,
	867, 0, 1231, 1233, 0, 0, 2323, 2415, 0, 0,
	2348, 2349, -2, 0, 2289, 2399, 2401, 0, 0, 0,
	0, 0, 1957, 1966, 414, 1676, 1676, 1676, 2043, 813,
	814, 816, 810, 812, 0, 0, 1639, 0, 1646, 254,
	1409, 1413, 0, 1420, 0, 0, 0, 1424, 1486, 0,
	0, 1503, 1503, 1437, 0, 0, 1470, 1471, 1391, 0,
	1472, 1473, 1474, 1615, 1916, 1621, 1336, 0, 0, 244,
	249, 0, 0, 0, 0, 0, 0, 183, 0, 256,
	279, 1623, 0, 0, 1684, 0, 0, 294, 328, 500,
	498, 1338, 0, 1465, 1372, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1373, 1478, 0, 0, 1442, 1349,
	0, 1352, 0, 1334, 0, 623, 624, 627, 0, 1549,
	0, 1556, 0, 0, 1609, 0, 0, 1773, 1762, 1794,
	1787, 1788, 2040, 0, 1818, 0, 348, 349, 864, 0,
	0, 1241, 1242, 0, 0, 0, 0, 2410, 1908, 2290,
	0, 0, 1941, 1943, 1944, 1945, 800, 801, 802, 0,
	0, 1640, 224, 0, 1480, 1422, 1491, 0, 0, 0,
	0, 0, 1438, 1468, 1469, 1466, 1390, 0, 1619, 1617,
	1447, 1480, 1482, 222, 0, 1478, 0, 1400, 0, 0,
	1403, 0, 0, 199, 2709, 197, 0, 252, 778, 1676,
	252, 0, 331, 0, 533, 499, 501, 0, 0, 505,
	506, 507, 1330, 0, 1458, 1460, 1476, 1478, 1391, 0,
	1353, 1395, 1351, 1550, 1554, 1552, 1592, 1478, 0, 1476,
	0, 1780, 1794, 1774, 1775, 0, 1790, 0, 0, 396,
	866, 868, 2407, 2427, 2416, -2, 3044, 2717, 0, 2427,
	2427, 2402, 2403, 0, 0, 0, 1336, 0, 1425, 1487,
	1488, 0, 1483, 1484, 1485, 2638, 1426, 1427, 1429, 1430,
	2040, 0, 1477, 1486, 248, 1336, 1397, 0, 0, 1398,
	0, 0, 202, 0, 204, 280, 1674, 1677, 0, 306,
	0, 0, 474, 531, 0, 0, 502, 503, 525, 504,
	1327, 1329, 1336, 0, 1391, 1476, 1336, 0, 0, 0,
	1336, 1338, 1476, 0, 1391, 0, 1769, 1779, 0, 1789,
	1763, 0, 1813, 0, 377, 2412, 0, 0, 2418, 2419,
	2420, 2421, 2422, 2413, 2414, 815, 817, 1415, 1421, 0,
	1489, 0, 1490, 0, 0, 0, 1446, 1475, 1491, 228,
	1401, 0, 1404, 0, 200, 0, 0, 326, 327, 530,
	526, 1457, 1459, 1336, 1391, 2040, 1339, 0, 1341, 1338,
	1350, 1391, 0, 1336, 0, 1792, 1768, 1772, 2597, 1773,
	1811, 0, 0, 0, 2424, 2425, 0, 0, 0, 1492,
	0, 1495, 1496, 0, 1493, 1466, 0, 0, 252, 0,
	1892, 2040, 1336, 1629, 1340, 1330, 1336, 1478, 2040, 1476,
	1766, 1794, 1780, 0, 2040, 2423, 2426, 2417, 1479, 1494,
	1497, 1498, 1448, 0, 0, 1678, 329, 0, 0, 532,
	527, 528, 1629, 2040, 1441, 0, 1628, 1328, 2040, 1476,
	1629, 1391, 1759, 1765, 0, 0, 1769, 2040, 1814, 1388,
	0, 0, 529, 1439, 1629, 1627, 1629, 1391, 1605, 1336,
	1791, 1766, 1812, 1402, 1387, 0, 330, 1440, 1603, 1336,
	2040, 1760, 0, 2040, 1629, 0, 1629, 1606, 1388, 1604,
	1405,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 646, 3, 652, 647, 3,
	658, 659, 650, 648, 663, 649, 660, 651, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 667, 664,
	638, 640, 639, 643, 662, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 656, 3, 657, 653, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 665, 645, 666, 641,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 642, 57981, 644, 57982, 654, 57983, 655, 57984, 661,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1656
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1706
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1773
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1833
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1889
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1900
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2027
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2040
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2053
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2089
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2147
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2156
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2177
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = true
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = false
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2285
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2347
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2364
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2383
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2391
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 192:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2412
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2422
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2431
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2442
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2448
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2474
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2479
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2570
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2614
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2624
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2627
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = nil
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = nil
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = true
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = false
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2884
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2971
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3076
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3233
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3323
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = nil
		}
	case 332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3555
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3691
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3700
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3706
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3711
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3716
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3748
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = nil
		}
	case 397:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3824
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3910
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3914
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4056
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4078
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4087
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "CREATE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4124
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4132
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = true
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = false
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = true
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = false
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4227
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4230
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4262
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4263
		{
			return unimplemented(sqllex, "create window function")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4327
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4333
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4334
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4461
		{
		}
	case 548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4462
		{
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = true
		}
	case 554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = false
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4512
		{
			return unimplemented(sqllex, "create access method")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			return unimplemented(sqllex, "create cast")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4515
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4517
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4518
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4519
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4520
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			return unimplemented(sqllex, "create publication")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4523
		{
			return unimplemented(sqllex, "create rule")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			return unimplemented(sqllex, "create server")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4527
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4531
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4532
		{
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4535
		{
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4536
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4545
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4546
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4550
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			return unimplemented(sqllex, "drop server")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4555
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4638
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4685
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4703
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
		}
	case 634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4736
		{
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.str = ""
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4754
		{

			sqlVAL.union.val = nil
		}
	case 639:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "DELETE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4782
		{
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "DROP")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5067
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5076
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5084
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5100
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5108
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "DELETE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "INSERT")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5147
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "DELETE")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "INSERT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5298
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5422
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "GRANT")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5622
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "RESET")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5664
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "RESET")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "USE")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5718
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "USE")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5737
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5845
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5853
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5891
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5897
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5911
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5958
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5978
		{
			return unimplemented(sqllex, "set from current")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5987
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5996
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6017
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6022
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.Low
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.Normal
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.High
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6160
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6161
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6162
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6172
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6179
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6183
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = true
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = false
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = true
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = false
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = false
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6352
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = int64(1)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = int64(1)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = int64(1)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6407
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6408
		{
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6411
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6416
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6426
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6436
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6448
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.str = "client_encoding"
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6468
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.str = "timezone"
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6476
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6507
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6635
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6640
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6649
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6655
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6703
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6785
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = true
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = true
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = false
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6894
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6913
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6939
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6940
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6956
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7008
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7013
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7015
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7019
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7039
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7085
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = true
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = false
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7132
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7142
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7153
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7175
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7185
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7203
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7219
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7224
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7234
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7239
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7272
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7277
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7299
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7317
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7325
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7346
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7356
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7369
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7392
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7480
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7493
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7628
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7675
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7720
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7739
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7795
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7808
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7849
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7913
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7949
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8013
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8028
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8056
		{

			sqlVAL.union.val = nil
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.str = ""
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8072
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = nil
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8095
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8099
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8135
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8148
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8162
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8219
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8259
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8401
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8508
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{

			sqlVAL.union.val = true
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = false
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8570
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8670
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8681
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8708
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8723
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8791
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8793
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8794
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8795
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8796
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8878
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8963
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8972
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8980
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9019
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9021
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9025
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9028
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9031
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9036
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9038
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9117
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.str = ""
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = true
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{

			sqlVAL.union.val = true
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = false
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9177
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9191
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9203
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9215
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9226
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9237
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = false
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = true
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = true
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = nil
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9384
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9410
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9412
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9414
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9416
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9420
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9455
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9473
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9492
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9509
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9526
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = false
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = true
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = false
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = true
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = false
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9590
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.str = ""
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.str = ""
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = true
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = false
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = false
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9671
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9677
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9902
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9908
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9920
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9926
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9940
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9946
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10005
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = true
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = false
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.str = ""
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10105
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10109
		{
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10120
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10176
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10216
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10221
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10222
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10241
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10254
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10264
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10265
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10282
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10296
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10303
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10308
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10351
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.str = ""
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.str = ""
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{

		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10519
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.str = ""
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.str = ""
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.str = ""
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.str = ""
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10574
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10600
		{
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10845
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10860
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11004
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11039
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11146
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = true
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = false
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11216
		{
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = nil
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11229
		{
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11230
		{
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = true
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = false
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = false
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = true
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11260
		{
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11264
		{
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11317
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11322
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11381
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11477
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11507
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11509
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11546
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11556
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11593
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11605
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11624
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11666
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11676
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11722
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11752
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11785
		{
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = nil
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = true
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = false
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.str = tree.AstFull
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.str = tree.AstRight
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.str = tree.AstInner
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11904
		{
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11905
		{
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.str = tree.AstHash
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.str = ""
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11997
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12009
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12019
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = true
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = false
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = true
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = false
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12068
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12081
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12089
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12090
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12108
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12118
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12138
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12187
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12199
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12200
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = types.Geography
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12249
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12257
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12283
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12291
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = nil
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = types.Int2
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = types.Int
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = types.Float4
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = types.Float
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12334
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12342
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12350
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = types.Bool
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12364
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = types.Float
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12383
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12389
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12411
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = types.String
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = true
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = false
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = types.Date
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12460
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12468
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12482
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12491
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12499
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12516
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = true
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = false
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = false
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = types.Interval
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12540
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = nil
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12669
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12729
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12878
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12886
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13008
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13085
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13215
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13223
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13241
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13307
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13319
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13324
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13350
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13359
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13370
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13374
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13389
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13393
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13408
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13419
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13420
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13444
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13497
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13510
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13522
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13589
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13597
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13613
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13625
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13635
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13640
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13676
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13681
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13686
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13691
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13701
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13710
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13711
		{
			return unimplemented(sqllex, "treat")
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13732
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13737
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13743
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13753
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13757
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13764
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13774
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13784
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13796
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13800
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13827
		{
			sqlVAL.str = ""
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13843
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13859
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13873
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13886
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13918
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13922
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13926
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13933
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13946
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13954
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13959
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13972
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13976
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13983
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13995
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14019
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14022
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14023
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14024
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14025
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14026
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14027
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14029
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14030
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14032
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14033
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14034
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14035
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14037
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14038
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14039
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14040
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14041
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14042
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14043
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14044
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14045
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14047
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14048
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14049
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14051
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14053
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14059
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14075
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14082
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14083
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14084
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14085
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14108
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14112
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14118
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14122
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14126
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14137
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14141
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14147
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14151
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14158
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14164
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14184
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14188
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14194
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14204
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14208
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14231
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14235
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14239
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14245
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14256
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14273
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14277
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14285
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14333
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14340
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14356
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14360
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14367
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14373
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14377
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14384
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14399
		{
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14400
		{
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14404
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14414
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14423
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14427
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14431
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14443
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14453
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14476
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14484
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14507
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14516
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14520
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14524
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14528
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14534
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14553
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14557
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14569
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14573
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14582
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14593
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14602
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14610
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14627
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14712
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14720
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14724
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14730
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14740
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14746
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14753
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14780
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14787
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14791
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14795
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14809
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14813
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14817
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14830
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14839
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14857
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14870
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14877
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14902
		{
			sqlVAL.str = ""
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14908
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14912
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
