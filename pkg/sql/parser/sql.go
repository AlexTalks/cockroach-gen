// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:917
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14462

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1703,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	270, 435,
	-2, 0,
	-1, 70,
	8, 887,
	29, 887,
	614, 887,
	615, 887,
	-2, 0,
	-1, 77,
	252, 260,
	537, 260,
	-2, 0,
	-1, 91,
	240, 1436,
	254, 1436,
	270, 431,
	407, 431,
	418, 1183,
	459, 431,
	473, 1183,
	522, 1183,
	549, 431,
	576, 1183,
	-2, 0,
	-1, 97,
	137, 1703,
	247, 1703,
	560, 1703,
	561, 1703,
	-2, 0,
	-1, 115,
	156, 1674,
	176, 1674,
	189, 1674,
	250, 1674,
	283, 1674,
	356, 1674,
	367, 1674,
	555, 1674,
	-2, 1645,
	-1, 157,
	164, 1015,
	269, 1015,
	410, 976,
	478, 976,
	521, 976,
	540, 1015,
	542, 976,
	-2, 0,
	-1, 162,
	4, 1705,
	21, 1705,
	22, 1705,
	23, 1705,
	24, 1705,
	25, 1705,
	26, 1705,
	27, 1705,
	28, 1705,
	30, 1705,
	31, 1705,
	37, 1705,
	41, 1705,
	43, 1705,
	44, 1705,
	46, 1705,
	47, 1705,
	48, 1705,
	49, 1705,
	50, 1705,
	51, 1705,
	52, 1705,
	53, 1705,
	54, 1705,
	56, 1705,
	57, 1705,
	58, 1705,
	59, 1705,
	61, 1705,
	62, 1705,
	63, 1705,
	64, 1705,
	65, 1705,
	66, 1705,
	67, 1705,
	71, 1705,
	72, 1705,
	73, 1705,
	74, 1705,
	76, 1705,
	77, 1705,
	78, 1705,
	82, 1705,
	83, 1705,
	84, 1705,
	85, 1705,
	86, 1705,
	87, 1705,
	88, 1705,
	89, 1705,
	92, 1705,
	93, 1705,
	94, 1705,
	95, 1705,
	96, 1705,
	98, 1705,
	100, 1705,
	101, 1705,
	102, 1705,
	103, 1705,
	104, 1705,
	105, 1705,
	107, 1705,
	108, 1705,
	109, 1705,
	111, 1705,
	112, 1705,
	113, 1705,
	121, 1705,
	122, 1705,
	123, 1705,
	124, 1705,
	125, 1705,
	127, 1705,
	128, 1705,
	129, 1705,
	130, 1705,
	132, 1705,
	133, 1705,
	134, 1705,
	136, 1705,
	137, 1705,
	138, 1705,
	140, 1705,
	141, 1705,
	142, 1705,
	145, 1705,
	146, 1705,
	147, 1705,
	149, 1705,
	150, 1705,
	151, 1705,
	153, 1705,
	154, 1705,
	155, 1705,
	157, 1705,
	158, 1705,
	159, 1705,
	160, 1705,
	161, 1705,
	162, 1705,
	163, 1705,
	164, 1705,
	165, 1705,
	166, 1705,
	167, 1705,
	168, 1705,
	169, 1705,
	170, 1705,
	171, 1705,
	172, 1705,
	173, 1705,
	175, 1705,
	181, 1705,
	182, 1705,
	183, 1705,
	184, 1705,
	188, 1705,
	190, 1705,
	191, 1705,
	192, 1705,
	194, 1705,
	197, 1705,
	198, 1705,
	199, 1705,
	200, 1705,
	201, 1705,
	202, 1705,
	203, 1705,
	204, 1705,
	205, 1705,
	206, 1705,
	207, 1705,
	208, 1705,
	209, 1705,
	210, 1705,
	212, 1705,
	213, 1705,
	215, 1705,
	216, 1705,
	218, 1705,
	219, 1705,
	220, 1705,
	221, 1705,
	222, 1705,
	223, 1705,
	224, 1705,
	225, 1705,
	226, 1705,
	227, 1705,
	229, 1705,
	230, 1705,
	232, 1705,
	233, 1705,
	234, 1705,
	235, 1705,
	236, 1705,
	240, 1705,
	241, 1705,
	242, 1705,
	243, 1705,
	246, 1705,
	247, 1705,
	248, 1705,
	249, 1705,
	251, 1705,
	253, 1705,
	254, 1705,
	256, 1705,
	258, 1705,
	259, 1705,
	260, 1705,
	262, 1705,
	266, 1705,
	267, 1705,
	268, 1705,
	269, 1705,
	270, 1705,
	271, 1705,
	273, 1705,
	274, 1705,
	275, 1705,
	277, 1705,
	278, 1705,
	280, 1705,
	281, 1705,
	284, 1705,
	285, 1705,
	286, 1705,
	287, 1705,
	288, 1705,
	289, 1705,
	290, 1705,
	293, 1705,
	294, 1705,
	295, 1705,
	296, 1705,
	298, 1705,
	299, 1705,
	300, 1705,
	301, 1705,
	302, 1705,
	303, 1705,
	304, 1705,
	305, 1705,
	306, 1705,
	307, 1705,
	308, 1705,
	309, 1705,
	310, 1705,
	311, 1705,
	312, 1705,
	313, 1705,
	314, 1705,
	315, 1705,
	316, 1705,
	317, 1705,
	318, 1705,
	319, 1705,
	321, 1705,
	323, 1705,
	324, 1705,
	325, 1705,
	326, 1705,
	327, 1705,
	328, 1705,
	329, 1705,
	330, 1705,
	331, 1705,
	332, 1705,
	333, 1705,
	334, 1705,
	335, 1705,
	336, 1705,
	337, 1705,
	338, 1705,
	339, 1705,
	341, 1705,
	342, 1705,
	344, 1705,
	346, 1705,
	347, 1705,
	348, 1705,
	349, 1705,
	351, 1705,
	352, 1705,
	353, 1705,
	354, 1705,
	355, 1705,
	358, 1705,
	360, 1705,
	362, 1705,
	363, 1705,
	364, 1705,
	365, 1705,
	368, 1705,
	369, 1705,
	370, 1705,
	372, 1705,
	374, 1705,
	375, 1705,
	376, 1705,
	377, 1705,
	378, 1705,
	379, 1705,
	380, 1705,
	381, 1705,
	382, 1705,
	383, 1705,
	384, 1705,
	385, 1705,
	386, 1705,
	388, 1705,
	389, 1705,
	390, 1705,
	391, 1705,
	392, 1705,
	393, 1705,
	394, 1705,
	395, 1705,
	396, 1705,
	397, 1705,
	398, 1705,
	399, 1705,
	400, 1705,
	401, 1705,
	402, 1705,
	404, 1705,
	405, 1705,
	406, 1705,
	408, 1705,
	409, 1705,
	410, 1705,
	411, 1705,
	412, 1705,
	413, 1705,
	414, 1705,
	415, 1705,
	416, 1705,
	417, 1705,
	418, 1705,
	419, 1705,
	420, 1705,
	422, 1705,
	424, 1705,
	425, 1705,
	426, 1705,
	432, 1705,
	433, 1705,
	434, 1705,
	436, 1705,
	437, 1705,
	438, 1705,
	439, 1705,
	440, 1705,
	441, 1705,
	442, 1705,
	443, 1705,
	444, 1705,
	445, 1705,
	447, 1705,
	448, 1705,
	449, 1705,
	451, 1705,
	452, 1705,
	453, 1705,
	454, 1705,
	455, 1705,
	456, 1705,
	457, 1705,
	459, 1705,
	460, 1705,
	461, 1705,
	462, 1705,
	463, 1705,
	464, 1705,
	465, 1705,
	466, 1705,
	467, 1705,
	468, 1705,
	469, 1705,
	470, 1705,
	471, 1705,
	473, 1705,
	474, 1705,
	475, 1705,
	476, 1705,
	477, 1705,
	478, 1705,
	480, 1705,
	481, 1705,
	482, 1705,
	483, 1705,
	484, 1705,
	485, 1705,
	487, 1705,
	488, 1705,
	489, 1705,
	490, 1705,
	491, 1705,
	492, 1705,
	493, 1705,
	494, 1705,
	496, 1705,
	498, 1705,
	499, 1705,
	500, 1705,
	501, 1705,
	502, 1705,
	503, 1705,
	504, 1705,
	505, 1705,
	506, 1705,
	507, 1705,
	508, 1705,
	509, 1705,
	510, 1705,
	511, 1705,
	512, 1705,
	513, 1705,
	514, 1705,
	515, 1705,
	517, 1705,
	518, 1705,
	520, 1705,
	521, 1705,
	523, 1705,
	524, 1705,
	525, 1705,
	526, 1705,
	527, 1705,
	528, 1705,
	529, 1705,
	530, 1705,
	532, 1705,
	533, 1705,
	534, 1705,
	535, 1705,
	536, 1705,
	538, 1705,
	540, 1705,
	541, 1705,
	542, 1705,
	543, 1705,
	544, 1705,
	545, 1705,
	546, 1705,
	548, 1705,
	549, 1705,
	550, 1705,
	551, 1705,
	553, 1705,
	554, 1705,
	557, 1705,
	558, 1705,
	559, 1705,
	560, 1705,
	561, 1705,
	562, 1705,
	563, 1705,
	564, 1705,
	566, 1705,
	569, 1705,
	570, 1705,
	571, 1705,
	572, 1705,
	573, 1705,
	574, 1705,
	576, 1705,
	577, 1705,
	578, 1705,
	579, 1705,
	580, 1705,
	581, 1705,
	582, 1705,
	583, 1705,
	588, 1705,
	589, 1705,
	590, 1705,
	591, 1705,
	592, 1705,
	593, 1705,
	-2, 0,
	-1, 163,
	1, 1553,
	135, 1553,
	258, 1553,
	343, 1553,
	405, 1553,
	414, 1553,
	597, 1553,
	627, 1553,
	-2, 0,
	-1, 165,
	1, 1553,
	627, 1553,
	-2, 0,
	-1, 166,
	1, 1553,
	627, 1553,
	-2, 0,
	-1, 167,
	1, 1553,
	537, 1553,
	627, 1553,
	-2, 0,
	-1, 199,
	156, 1673,
	176, 1673,
	189, 1673,
	250, 1673,
	283, 1673,
	356, 1673,
	367, 1673,
	555, 1673,
	-2, 1648,
	-1, 246,
	4, 1712,
	5, 1712,
	6, 1712,
	7, 1712,
	8, 1712,
	9, 1712,
	10, 1712,
	21, 1712,
	22, 1712,
	23, 1712,
	24, 1712,
	25, 1712,
	26, 1712,
	27, 1712,
	28, 1712,
	30, 1712,
	31, 1712,
	37, 1712,
	38, 1712,
	41, 1712,
	43, 1712,
	44, 1712,
	45, 1712,
	46, 1712,
	47, 1712,
	48, 1712,
	49, 1712,
	50, 1712,
	51, 1712,
	52, 1712,
	53, 1712,
	54, 1712,
	56, 1712,
	57, 1712,
	58, 1712,
	59, 1712,
	61, 1712,
	62, 1712,
	63, 1712,
	64, 1712,
	65, 1712,
	66, 1712,
	67, 1712,
	68, 1712,
	69, 1712,
	70, 1712,
	71, 1712,
	72, 1712,
	73, 1712,
	74, 1712,
	76, 1712,
	77, 1712,
	78, 1712,
	80, 1712,
	82, 1712,
	83, 1712,
	84, 1712,
	85, 1712,
	86, 1712,
	87, 1712,
	88, 1712,
	89, 1712,
	92, 1712,
	93, 1712,
	94, 1712,
	95, 1712,
	96, 1712,
	98, 1712,
	100, 1712,
	101, 1712,
	102, 1712,
	103, 1712,
	104, 1712,
	105, 1712,
	107, 1712,
	108, 1712,
	109, 1712,
	110, 1712,
	111, 1712,
	112, 1712,
	113, 1712,
	114, 1712,
	115, 1712,
	116, 1712,
	117, 1712,
	118, 1712,
	119, 1712,
	120, 1712,
	121, 1712,
	122, 1712,
	123, 1712,
	124, 1712,
	125, 1712,
	126, 1712,
	127, 1712,
	128, 1712,
	129, 1712,
	130, 1712,
	131, 1712,
	132, 1712,
	133, 1712,
	134, 1712,
	136, 1712,
	137, 1712,
	138, 1712,
	140, 1712,
	141, 1712,
	142, 1712,
	145, 1712,
	146, 1712,
	147, 1712,
	149, 1712,
	150, 1712,
	151, 1712,
	153, 1712,
	154, 1712,
	155, 1712,
	157, 1712,
	158, 1712,
	159, 1712,
	160, 1712,
	161, 1712,
	162, 1712,
	163, 1712,
	164, 1712,
	165, 1712,
	166, 1712,
	167, 1712,
	168, 1712,
	169, 1712,
	170, 1712,
	171, 1712,
	172, 1712,
	173, 1712,
	174, 1712,
	175, 1712,
	181, 1712,
	182, 1712,
	183, 1712,
	184, 1712,
	188, 1712,
	190, 1712,
	191, 1712,
	192, 1712,
	194, 1712,
	196, 1712,
	197, 1712,
	198, 1712,
	199, 1712,
	200, 1712,
	201, 1712,
	202, 1712,
	203, 1712,
	204, 1712,
	205, 1712,
	206, 1712,
	207, 1712,
	208, 1712,
	209, 1712,
	210, 1712,
	212, 1712,
	213, 1712,
	215, 1712,
	216, 1712,
	218, 1712,
	219, 1712,
	220, 1712,
	221, 1712,
	222, 1712,
	223, 1712,
	224, 1712,
	225, 1712,
	226, 1712,
	227, 1712,
	228, 1712,
	229, 1712,
	230, 1712,
	232, 1712,
	233, 1712,
	234, 1712,
	235, 1712,
	236, 1712,
	240, 1712,
	241, 1712,
	242, 1712,
	243, 1712,
	245, 1712,
	246, 1712,
	247, 1712,
	248, 1712,
	249, 1712,
	251, 1712,
	253, 1712,
	254, 1712,
	255, 1712,
	256, 1712,
	257, 1712,
	258, 1712,
	259, 1712,
	260, 1712,
	261, 1712,
	262, 1712,
	266, 1712,
	267, 1712,
	268, 1712,
	269, 1712,
	270, 1712,
	271, 1712,
	273, 1712,
	274, 1712,
	275, 1712,
	277, 1712,
	278, 1712,
	279, 1712,
	280, 1712,
	281, 1712,
	282, 1712,
	284, 1712,
	285, 1712,
	286, 1712,
	287, 1712,
	288, 1712,
	289, 1712,
	290, 1712,
	291, 1712,
	292, 1712,
	293, 1712,
	294, 1712,
	295, 1712,
	296, 1712,
	298, 1712,
	299, 1712,
	300, 1712,
	301, 1712,
	302, 1712,
	303, 1712,
	304, 1712,
	305, 1712,
	306, 1712,
	307, 1712,
	308, 1712,
	309, 1712,
	310, 1712,
	311, 1712,
	312, 1712,
	313, 1712,
	314, 1712,
	315, 1712,
	316, 1712,
	317, 1712,
	318, 1712,
	319, 1712,
	321, 1712,
	322, 1712,
	323, 1712,
	324, 1712,
	325, 1712,
	326, 1712,
	327, 1712,
	328, 1712,
	329, 1712,
	330, 1712,
	331, 1712,
	332, 1712,
	333, 1712,
	334, 1712,
	335, 1712,
	336, 1712,
	337, 1712,
	338, 1712,
	339, 1712,
	340, 1712,
	341, 1712,
	342, 1712,
	343, 1712,
	344, 1712,
	345, 1712,
	346, 1712,
	347, 1712,
	348, 1712,
	349, 1712,
	350, 1712,
	351, 1712,
	352, 1712,
	353, 1712,
	354, 1712,
	355, 1712,
	358, 1712,
	360, 1712,
	363, 1712,
	364, 1712,
	365, 1712,
	368, 1712,
	369, 1712,
	370, 1712,
	371, 1712,
	372, 1712,
	373, 1712,
	374, 1712,
	375, 1712,
	376, 1712,
	377, 1712,
	378, 1712,
	379, 1712,
	380, 1712,
	381, 1712,
	382, 1712,
	383, 1712,
	384, 1712,
	385, 1712,
	386, 1712,
	388, 1712,
	389, 1712,
	390, 1712,
	391, 1712,
	392, 1712,
	393, 1712,
	394, 1712,
	395, 1712,
	396, 1712,
	397, 1712,
	398, 1712,
	399, 1712,
	400, 1712,
	401, 1712,
	402, 1712,
	404, 1712,
	405, 1712,
	406, 1712,
	408, 1712,
	409, 1712,
	410, 1712,
	411, 1712,
	412, 1712,
	413, 1712,
	414, 1712,
	415, 1712,
	416, 1712,
	417, 1712,
	418, 1712,
	419, 1712,
	420, 1712,
	422, 1712,
	424, 1712,
	425, 1712,
	426, 1712,
	432, 1712,
	433, 1712,
	434, 1712,
	436, 1712,
	437, 1712,
	438, 1712,
	439, 1712,
	440, 1712,
	441, 1712,
	442, 1712,
	443, 1712,
	444, 1712,
	445, 1712,
	447, 1712,
	448, 1712,
	449, 1712,
	450, 1712,
	451, 1712,
	452, 1712,
	453, 1712,
	454, 1712,
	455, 1712,
	456, 1712,
	457, 1712,
	459, 1712,
	460, 1712,
	461, 1712,
	462, 1712,
	463, 1712,
	464, 1712,
	465, 1712,
	466, 1712,
	467, 1712,
	468, 1712,
	469, 1712,
	470, 1712,
	471, 1712,
	473, 1712,
	474, 1712,
	475, 1712,
	476, 1712,
	477, 1712,
	478, 1712,
	479, 1712,
	480, 1712,
	481, 1712,
	482, 1712,
	483, 1712,
	484, 1712,
	485, 1712,
	486, 1712,
	487, 1712,
	488, 1712,
	489, 1712,
	490, 1712,
	491, 1712,
	492, 1712,
	493, 1712,
	494, 1712,
	496, 1712,
	498, 1712,
	499, 1712,
	500, 1712,
	501, 1712,
	502, 1712,
	503, 1712,
	504, 1712,
	505, 1712,
	506, 1712,
	507, 1712,
	508, 1712,
	509, 1712,
	510, 1712,
	511, 1712,
	512, 1712,
	513, 1712,
	514, 1712,
	515, 1712,
	517, 1712,
	518, 1712,
	519, 1712,
	520, 1712,
	521, 1712,
	523, 1712,
	524, 1712,
	525, 1712,
	526, 1712,
	527, 1712,
	528, 1712,
	529, 1712,
	530, 1712,
	532, 1712,
	533, 1712,
	534, 1712,
	535, 1712,
	536, 1712,
	538, 1712,
	540, 1712,
	541, 1712,
	542, 1712,
	543, 1712,
	544, 1712,
	545, 1712,
	546, 1712,
	547, 1712,
	548, 1712,
	549, 1712,
	550, 1712,
	551, 1712,
	553, 1712,
	554, 1712,
	556, 1712,
	557, 1712,
	558, 1712,
	559, 1712,
	560, 1712,
	561, 1712,
	562, 1712,
	563, 1712,
	564, 1712,
	565, 1712,
	566, 1712,
	569, 1712,
	570, 1712,
	571, 1712,
	572, 1712,
	573, 1712,
	574, 1712,
	576, 1712,
	577, 1712,
	578, 1712,
	579, 1712,
	580, 1712,
	581, 1712,
	582, 1712,
	583, 1712,
	588, 1712,
	589, 1712,
	590, 1712,
	591, 1712,
	592, 1712,
	593, 1712,
	594, 1712,
	607, 1712,
	614, 1712,
	615, 1712,
	616, 1712,
	624, 1712,
	628, 1712,
	-2, 0,
	-1, 785,
	4, 1434,
	21, 1434,
	22, 1434,
	23, 1434,
	24, 1434,
	25, 1434,
	26, 1434,
	27, 1434,
	28, 1434,
	30, 1434,
	31, 1434,
	37, 1434,
	41, 1434,
	43, 1434,
	44, 1434,
	46, 1434,
	47, 1434,
	48, 1434,
	49, 1434,
	50, 1434,
	51, 1434,
	52, 1434,
	53, 1434,
	54, 1434,
	56, 1434,
	57, 1434,
	58, 1434,
	59, 1434,
	61, 1434,
	62, 1434,
	63, 1434,
	64, 1434,
	65, 1434,
	66, 1434,
	67, 1434,
	71, 1434,
	72, 1434,
	73, 1434,
	74, 1434,
	76, 1434,
	77, 1434,
	78, 1434,
	82, 1434,
	83, 1434,
	84, 1434,
	85, 1434,
	86, 1434,
	87, 1434,
	88, 1434,
	89, 1434,
	92, 1434,
	93, 1434,
	94, 1434,
	95, 1434,
	96, 1434,
	98, 1434,
	100, 1434,
	101, 1434,
	102, 1434,
	103, 1434,
	104, 1434,
	105, 1434,
	107, 1434,
	108, 1434,
	109, 1434,
	111, 1434,
	112, 1434,
	113, 1434,
	121, 1434,
	122, 1434,
	123, 1434,
	124, 1434,
	125, 1434,
	127, 1434,
	128, 1434,
	129, 1434,
	130, 1434,
	132, 1434,
	133, 1434,
	134, 1434,
	136, 1434,
	137, 1434,
	138, 1434,
	140, 1434,
	141, 1434,
	142, 1434,
	145, 1434,
	146, 1434,
	147, 1434,
	149, 1434,
	150, 1434,
	151, 1434,
	153, 1434,
	154, 1434,
	155, 1434,
	157, 1434,
	158, 1434,
	159, 1434,
	160, 1434,
	161, 1434,
	162, 1434,
	163, 1434,
	164, 1434,
	165, 1434,
	166, 1434,
	167, 1434,
	168, 1434,
	169, 1434,
	170, 1434,
	171, 1434,
	172, 1434,
	173, 1434,
	175, 1434,
	181, 1434,
	182, 1434,
	183, 1434,
	184, 1434,
	188, 1434,
	190, 1434,
	191, 1434,
	192, 1434,
	194, 1434,
	197, 1434,
	198, 1434,
	199, 1434,
	200, 1434,
	201, 1434,
	202, 1434,
	203, 1434,
	204, 1434,
	205, 1434,
	206, 1434,
	207, 1434,
	208, 1434,
	209, 1434,
	210, 1434,
	212, 1434,
	213, 1434,
	215, 1434,
	216, 1434,
	218, 1434,
	219, 1434,
	220, 1434,
	221, 1434,
	222, 1434,
	223, 1434,
	224, 1434,
	225, 1434,
	226, 1434,
	227, 1434,
	229, 1434,
	230, 1434,
	232, 1434,
	233, 1434,
	234, 1434,
	235, 1434,
	236, 1434,
	240, 1434,
	241, 1434,
	242, 1434,
	243, 1434,
	246, 1434,
	247, 1434,
	248, 1434,
	249, 1434,
	251, 1434,
	253, 1434,
	254, 1434,
	256, 1434,
	258, 1434,
	259, 1434,
	260, 1434,
	262, 1434,
	266, 1434,
	267, 1434,
	268, 1434,
	269, 1434,
	270, 1434,
	271, 1434,
	273, 1434,
	274, 1434,
	275, 1434,
	277, 1434,
	278, 1434,
	280, 1434,
	281, 1434,
	284, 1434,
	285, 1434,
	286, 1434,
	287, 1434,
	288, 1434,
	289, 1434,
	290, 1434,
	293, 1434,
	294, 1434,
	295, 1434,
	296, 1434,
	298, 1434,
	299, 1434,
	300, 1434,
	301, 1434,
	302, 1434,
	303, 1434,
	304, 1434,
	305, 1434,
	306, 1434,
	307, 1434,
	308, 1434,
	309, 1434,
	310, 1434,
	311, 1434,
	312, 1434,
	313, 1434,
	314, 1434,
	315, 1434,
	316, 1434,
	317, 1434,
	318, 1434,
	319, 1434,
	321, 1434,
	323, 1434,
	324, 1434,
	325, 1434,
	326, 1434,
	327, 1434,
	328, 1434,
	329, 1434,
	330, 1434,
	331, 1434,
	332, 1434,
	333, 1434,
	334, 1434,
	335, 1434,
	336, 1434,
	337, 1434,
	338, 1434,
	339, 1434,
	341, 1434,
	342, 1434,
	344, 1434,
	346, 1434,
	347, 1434,
	348, 1434,
	349, 1434,
	351, 1434,
	352, 1434,
	353, 1434,
	354, 1434,
	355, 1434,
	358, 1434,
	360, 1434,
	363, 1434,
	364, 1434,
	365, 1434,
	368, 1434,
	369, 1434,
	370, 1434,
	372, 1434,
	374, 1434,
	375, 1434,
	376, 1434,
	377, 1434,
	378, 1434,
	379, 1434,
	380, 1434,
	381, 1434,
	382, 1434,
	383, 1434,
	384, 1434,
	385, 1434,
	386, 1434,
	388, 1434,
	389, 1434,
	390, 1434,
	391, 1434,
	392, 1434,
	393, 1434,
	394, 1434,
	395, 1434,
	396, 1434,
	397, 1434,
	398, 1434,
	399, 1434,
	400, 1434,
	401, 1434,
	402, 1434,
	404, 1434,
	405, 1434,
	406, 1434,
	408, 1434,
	409, 1434,
	410, 1434,
	411, 1434,
	412, 1434,
	413, 1434,
	414, 1434,
	415, 1434,
	416, 1434,
	417, 1434,
	418, 1434,
	419, 1434,
	420, 1434,
	422, 1434,
	424, 1434,
	425, 1434,
	426, 1434,
	432, 1434,
	433, 1434,
	434, 1434,
	436, 1434,
	437, 1434,
	438, 1434,
	439, 1434,
	440, 1434,
	441, 1434,
	442, 1434,
	443, 1434,
	444, 1434,
	445, 1434,
	447, 1434,
	448, 1434,
	449, 1434,
	451, 1434,
	452, 1434,
	453, 1434,
	454, 1434,
	455, 1434,
	456, 1434,
	457, 1434,
	459, 1434,
	460, 1434,
	461, 1434,
	462, 1434,
	463, 1434,
	464, 1434,
	465, 1434,
	466, 1434,
	467, 1434,
	468, 1434,
	469, 1434,
	470, 1434,
	471, 1434,
	473, 1434,
	474, 1434,
	475, 1434,
	476, 1434,
	477, 1434,
	478, 1434,
	480, 1434,
	481, 1434,
	482, 1434,
	483, 1434,
	484, 1434,
	485, 1434,
	487, 1434,
	488, 1434,
	489, 1434,
	490, 1434,
	491, 1434,
	492, 1434,
	493, 1434,
	494, 1434,
	496, 1434,
	498, 1434,
	499, 1434,
	500, 1434,
	501, 1434,
	502, 1434,
	503, 1434,
	504, 1434,
	505, 1434,
	506, 1434,
	507, 1434,
	508, 1434,
	509, 1434,
	510, 1434,
	511, 1434,
	512, 1434,
	513, 1434,
	514, 1434,
	515, 1434,
	517, 1434,
	518, 1434,
	520, 1434,
	521, 1434,
	523, 1434,
	524, 1434,
	525, 1434,
	526, 1434,
	527, 1434,
	528, 1434,
	529, 1434,
	530, 1434,
	532, 1434,
	533, 1434,
	534, 1434,
	535, 1434,
	536, 1434,
	538, 1434,
	540, 1434,
	541, 1434,
	542, 1434,
	543, 1434,
	544, 1434,
	545, 1434,
	546, 1434,
	548, 1434,
	549, 1434,
	550, 1434,
	551, 1434,
	553, 1434,
	554, 1434,
	557, 1434,
	558, 1434,
	559, 1434,
	560, 1434,
	561, 1434,
	562, 1434,
	563, 1434,
	564, 1434,
	566, 1434,
	569, 1434,
	570, 1434,
	571, 1434,
	572, 1434,
	573, 1434,
	574, 1434,
	576, 1434,
	577, 1434,
	578, 1434,
	579, 1434,
	580, 1434,
	581, 1434,
	582, 1434,
	583, 1434,
	588, 1434,
	589, 1434,
	590, 1434,
	591, 1434,
	592, 1434,
	593, 1434,
	-2, 0,
	-1, 804,
	195, 2508,
	537, 2508,
	606, 2508,
	626, 2508,
	-2, 0,
	-1, 805,
	195, 2494,
	537, 2494,
	606, 2494,
	626, 2494,
	-2, 0,
	-1, 807,
	195, 2771,
	537, 2771,
	606, 2771,
	626, 2771,
	-2, 0,
	-1, 810,
	195, 2622,
	537, 2622,
	606, 2622,
	626, 2622,
	-2, 0,
	-1, 811,
	195, 2814,
	537, 2814,
	606, 2814,
	626, 2814,
	-2, 0,
	-1, 819,
	195, 2649,
	537, 2649,
	606, 2649,
	626, 2649,
	-2, 755,
	-1, 835,
	8, 886,
	29, 886,
	614, 886,
	615, 886,
	-2, 891,
	-1, 839,
	1, 2562,
	627, 2562,
	-2, 891,
	-1, 840,
	1, 2610,
	627, 2610,
	-2, 891,
	-1, 843,
	1, 2654,
	627, 2654,
	-2, 884,
	-1, 844,
	1, 2710,
	627, 2710,
	-2, 885,
	-1, 845,
	1, 2567,
	627, 2567,
	-2, 888,
	-1, 846,
	1, 2481,
	627, 2481,
	-2, 889,
	-1, 878,
	626, 2440,
	629, 2440,
	-2, 1101,
	-1, 879,
	626, 2442,
	629, 2442,
	-2, 1102,
	-1, 880,
	626, 2441,
	629, 2441,
	-2, 1103,
	-1, 881,
	629, 2366,
	-2, 1104,
	-1, 906,
	189, 279,
	-2, 0,
	-1, 930,
	45, 2413,
	-2, 0,
	-1, 931,
	576, 1412,
	-2, 1184,
	-1, 947,
	4, 1846,
	21, 1846,
	22, 1846,
	23, 1846,
	24, 1846,
	25, 1846,
	26, 1846,
	27, 1846,
	28, 1846,
	30, 1846,
	31, 1846,
	37, 1846,
	41, 1846,
	43, 1846,
	44, 1846,
	46, 1846,
	47, 1846,
	48, 1846,
	49, 1846,
	50, 1846,
	51, 1846,
	52, 1846,
	53, 1846,
	54, 1846,
	56, 1846,
	57, 1846,
	58, 1846,
	59, 1846,
	61, 1846,
	62, 1846,
	63, 1846,
	64, 1846,
	65, 1846,
	66, 1846,
	67, 1846,
	71, 1846,
	72, 1846,
	73, 1846,
	74, 1846,
	76, 1846,
	77, 1846,
	78, 1846,
	82, 1846,
	83, 1846,
	84, 1846,
	85, 1846,
	86, 1846,
	87, 1846,
	88, 1846,
	89, 1846,
	92, 1846,
	93, 1846,
	94, 1846,
	95, 1846,
	96, 1846,
	98, 1846,
	100, 1846,
	101, 1846,
	102, 1846,
	103, 1846,
	104, 1846,
	105, 1846,
	107, 1846,
	108, 1846,
	109, 1846,
	111, 1846,
	112, 1846,
	113, 1846,
	121, 1846,
	122, 1846,
	123, 1846,
	124, 1846,
	125, 1846,
	127, 1846,
	128, 1846,
	129, 1846,
	130, 1846,
	132, 1846,
	133, 1846,
	134, 1846,
	136, 1846,
	137, 1846,
	138, 1846,
	140, 1846,
	141, 1846,
	142, 1846,
	145, 1846,
	146, 1846,
	147, 1846,
	149, 1846,
	150, 1846,
	151, 1846,
	153, 1846,
	154, 1846,
	155, 1846,
	157, 1846,
	158, 1846,
	159, 1846,
	160, 1846,
	161, 1846,
	162, 1846,
	163, 1846,
	164, 1846,
	165, 1846,
	166, 1846,
	167, 1846,
	168, 1846,
	169, 1846,
	170, 1846,
	171, 1846,
	172, 1846,
	173, 1846,
	175, 1846,
	181, 1846,
	182, 1846,
	183, 1846,
	184, 1846,
	188, 1846,
	190, 1846,
	191, 1846,
	192, 1846,
	194, 1846,
	197, 1846,
	198, 1846,
	199, 1846,
	200, 1846,
	201, 1846,
	202, 1846,
	203, 1846,
	204, 1846,
	205, 1846,
	206, 1846,
	207, 1846,
	208, 1846,
	209, 1846,
	210, 1846,
	212, 1846,
	213, 1846,
	215, 1846,
	216, 1846,
	218, 1846,
	219, 1846,
	220, 1846,
	221, 1846,
	222, 1846,
	223, 1846,
	224, 1846,
	225, 1846,
	226, 1846,
	227, 1846,
	229, 1846,
	230, 1846,
	232, 1846,
	233, 1846,
	234, 1846,
	235, 1846,
	236, 1846,
	240, 1846,
	241, 1846,
	242, 1846,
	243, 1846,
	246, 1846,
	247, 1846,
	248, 1846,
	249, 1846,
	251, 1846,
	253, 1846,
	254, 1846,
	256, 1846,
	258, 1846,
	259, 1846,
	260, 1846,
	262, 1846,
	266, 1846,
	267, 1846,
	268, 1846,
	269, 1846,
	270, 1846,
	271, 1846,
	273, 1846,
	274, 1846,
	275, 1846,
	277, 1846,
	278, 1846,
	280, 1846,
	281, 1846,
	284, 1846,
	285, 1846,
	286, 1846,
	287, 1846,
	288, 1846,
	289, 1846,
	290, 1846,
	293, 1846,
	294, 1846,
	295, 1846,
	296, 1846,
	298, 1846,
	299, 1846,
	300, 1846,
	301, 1846,
	302, 1846,
	303, 1846,
	304, 1846,
	305, 1846,
	306, 1846,
	307, 1846,
	308, 1846,
	309, 1846,
	310, 1846,
	311, 1846,
	312, 1846,
	313, 1846,
	314, 1846,
	315, 1846,
	316, 1846,
	317, 1846,
	318, 1846,
	319, 1846,
	321, 1846,
	323, 1846,
	324, 1846,
	325, 1846,
	326, 1846,
	327, 1846,
	328, 1846,
	329, 1846,
	330, 1846,
	331, 1846,
	332, 1846,
	333, 1846,
	334, 1846,
	335, 1846,
	336, 1846,
	337, 1846,
	338, 1846,
	339, 1846,
	341, 1846,
	342, 1846,
	344, 1846,
	346, 1846,
	347, 1846,
	348, 1846,
	349, 1846,
	351, 1846,
	352, 1846,
	353, 1846,
	354, 1846,
	355, 1846,
	358, 1846,
	360, 1846,
	363, 1846,
	364, 1846,
	365, 1846,
	368, 1846,
	369, 1846,
	370, 1846,
	372, 1846,
	374, 1846,
	375, 1846,
	376, 1846,
	377, 1846,
	378, 1846,
	379, 1846,
	380, 1846,
	381, 1846,
	382, 1846,
	383, 1846,
	384, 1846,
	385, 1846,
	386, 1846,
	388, 1846,
	389, 1846,
	390, 1846,
	391, 1846,
	392, 1846,
	393, 1846,
	394, 1846,
	395, 1846,
	396, 1846,
	397, 1846,
	398, 1846,
	399, 1846,
	400, 1846,
	401, 1846,
	402, 1846,
	404, 1846,
	405, 1846,
	406, 1846,
	408, 1846,
	409, 1846,
	410, 1846,
	411, 1846,
	412, 1846,
	413, 1846,
	414, 1846,
	415, 1846,
	416, 1846,
	417, 1846,
	418, 1846,
	419, 1846,
	420, 1846,
	422, 1846,
	424, 1846,
	425, 1846,
	426, 1846,
	432, 1846,
	433, 1846,
	434, 1846,
	436, 1846,
	437, 1846,
	438, 1846,
	439, 1846,
	440, 1846,
	441, 1846,
	442, 1846,
	443, 1846,
	444, 1846,
	445, 1846,
	447, 1846,
	448, 1846,
	449, 1846,
	451, 1846,
	452, 1846,
	453, 1846,
	454, 1846,
	455, 1846,
	456, 1846,
	457, 1846,
	459, 1846,
	460, 1846,
	461, 1846,
	462, 1846,
	463, 1846,
	464, 1846,
	465, 1846,
	466, 1846,
	467, 1846,
	468, 1846,
	469, 1846,
	470, 1846,
	471, 1846,
	473, 1846,
	474, 1846,
	475, 1846,
	476, 1846,
	477, 1846,
	478, 1846,
	480, 1846,
	481, 1846,
	482, 1846,
	483, 1846,
	484, 1846,
	485, 1846,
	487, 1846,
	488, 1846,
	489, 1846,
	490, 1846,
	491, 1846,
	492, 1846,
	493, 1846,
	494, 1846,
	496, 1846,
	498, 1846,
	499, 1846,
	500, 1846,
	501, 1846,
	502, 1846,
	503, 1846,
	504, 1846,
	505, 1846,
	506, 1846,
	507, 1846,
	508, 1846,
	509, 1846,
	510, 1846,
	511, 1846,
	512, 1846,
	513, 1846,
	514, 1846,
	515, 1846,
	517, 1846,
	518, 1846,
	520, 1846,
	521, 1846,
	523, 1846,
	524, 1846,
	525, 1846,
	526, 1846,
	527, 1846,
	528, 1846,
	529, 1846,
	530, 1846,
	532, 1846,
	533, 1846,
	534, 1846,
	535, 1846,
	536, 1846,
	538, 1846,
	540, 1846,
	541, 1846,
	542, 1846,
	543, 1846,
	544, 1846,
	545, 1846,
	546, 1846,
	548, 1846,
	549, 1846,
	550, 1846,
	551, 1846,
	553, 1846,
	554, 1846,
	557, 1846,
	558, 1846,
	559, 1846,
	560, 1846,
	561, 1846,
	562, 1846,
	563, 1846,
	564, 1846,
	566, 1846,
	569, 1846,
	570, 1846,
	571, 1846,
	572, 1846,
	573, 1846,
	574, 1846,
	576, 1846,
	577, 1846,
	578, 1846,
	579, 1846,
	580, 1846,
	581, 1846,
	582, 1846,
	583, 1846,
	588, 1846,
	589, 1846,
	590, 1846,
	591, 1846,
	592, 1846,
	593, 1846,
	-2, 0,
	-1, 957,
	270, 435,
	-2, 0,
	-1, 1036,
	410, 977,
	478, 977,
	521, 977,
	542, 977,
	-2, 0,
	-1, 1037,
	410, 976,
	478, 976,
	521, 976,
	542, 976,
	-2, 904,
	-1, 1041,
	1, 1029,
	623, 1029,
	625, 1029,
	627, 1029,
	-2, 0,
	-1, 1043,
	1, 951,
	623, 951,
	625, 951,
	627, 951,
	-2, 0,
	-1, 1044,
	1, 955,
	623, 955,
	625, 955,
	627, 955,
	-2, 0,
	-1, 1045,
	1, 1100,
	189, 1100,
	623, 1100,
	625, 1100,
	627, 1100,
	-2, 0,
	-1, 1053,
	1, 982,
	623, 982,
	625, 982,
	627, 982,
	-2, 0,
	-1, 1060,
	1, 1029,
	623, 1029,
	625, 1029,
	627, 1029,
	-2, 0,
	-1, 1061,
	1, 1031,
	623, 1031,
	625, 1031,
	627, 1031,
	-2, 0,
	-1, 1062,
	1, 1034,
	623, 1034,
	625, 1034,
	627, 1034,
	-2, 0,
	-1, 1070,
	1, 1064,
	623, 1064,
	625, 1064,
	627, 1064,
	-2, 0,
	-1, 1071,
	1, 1066,
	623, 1066,
	625, 1066,
	627, 1066,
	-2, 0,
	-1, 1076,
	1, 1094,
	623, 1094,
	625, 1094,
	627, 1094,
	-2, 0,
	-1, 1130,
	176, 1716,
	189, 1716,
	283, 1716,
	356, 1716,
	-2, 1652,
	-1, 1146,
	176, 1715,
	189, 1715,
	283, 1715,
	356, 1715,
	-2, 1649,
	-1, 1173,
	626, 2439,
	-2, 763,
	-1, 1202,
	5, 2431,
	624, 2429,
	-2, 2420,
	-1, 1210,
	5, 2452,
	624, 2449,
	-2, 2440,
	-1, 1211,
	5, 2453,
	624, 2450,
	-2, 2441,
	-1, 1219,
	626, 2437,
	-2, 2419,
	-1, 1220,
	624, 2902,
	-2, 2438,
	-1, 1243,
	624, 2901,
	-2, 2454,
	-1, 1244,
	5, 1921,
	-2, 2872,
	-1, 1245,
	5, 1922,
	-2, 2873,
	-1, 1246,
	5, 1923,
	-2, 2887,
	-1, 1247,
	5, 1924,
	-2, 2851,
	-1, 1248,
	5, 1925,
	-2, 2885,
	-1, 1249,
	5, 1933,
	-2, 2864,
	-1, 1250,
	5, 1920,
	-2, 2860,
	-1, 1251,
	5, 1920,
	-2, 2859,
	-1, 1252,
	5, 1920,
	-2, 2878,
	-1, 1253,
	5, 1931,
	-2, 2853,
	-1, 1254,
	5, 1936,
	-2, 2852,
	-1, 1255,
	5, 1938,
	-2, 2897,
	-1, 1258,
	5, 1960,
	-2, 2890,
	-1, 1259,
	5, 1952,
	-2, 2891,
	-1, 1260,
	5, 1960,
	-2, 2892,
	-1, 1261,
	5, 1956,
	-2, 2893,
	-1, 1262,
	5, 1906,
	-2, 2865,
	-1, 1263,
	5, 1907,
	-2, 2866,
	-1, 1264,
	5, 1908,
	-2, 2854,
	-1, 1292,
	5, 1943,
	-2, 2898,
	-1, 1293,
	5, 1944,
	-2, 2888,
	-1, 1294,
	5, 1945,
	577, 1945,
	-2, 2855,
	-1, 1295,
	5, 1946,
	577, 1946,
	-2, 2856,
	-1, 1332,
	624, 2449,
	-2, 2440,
	-1, 1333,
	624, 2450,
	-2, 2441,
	-1, 1431,
	195, 2814,
	537, 2814,
	606, 2814,
	626, 2814,
	-2, 0,
	-1, 1436,
	1, 739,
	627, 739,
	-2, 1561,
	-1, 1583,
	376, 2414,
	436, 2414,
	480, 2414,
	616, 2414,
	-2, 2404,
	-1, 1589,
	195, 139,
	277, 139,
	341, 139,
	583, 139,
	-2, 2810,
	-1, 1590,
	195, 140,
	277, 140,
	341, 140,
	583, 140,
	-2, 2553,
	-1, 1591,
	195, 141,
	277, 141,
	341, 141,
	583, 141,
	-2, 2732,
	-1, 1597,
	628, 2414,
	-2, 2416,
	-1, 1621,
	1, 1409,
	441, 1364,
	480, 1364,
	600, 1364,
	623, 1409,
	625, 1409,
	627, 1409,
	-2, 1701,
	-1, 1627,
	211, 1506,
	231, 1506,
	449, 1506,
	-2, 0,
	-1, 1674,
	418, 1183,
	576, 1183,
	-2, 430,
	-1, 1691,
	45, 2412,
	-2, 1146,
	-1, 1698,
	1, 1409,
	623, 1409,
	625, 1409,
	627, 1409,
	-2, 1701,
	-1, 1706,
	4, 1434,
	21, 1434,
	22, 1434,
	23, 1434,
	24, 1434,
	25, 1434,
	26, 1434,
	27, 1434,
	28, 1434,
	30, 1434,
	31, 1434,
	37, 1434,
	41, 1434,
	43, 1434,
	44, 1434,
	46, 1434,
	47, 1434,
	48, 1434,
	49, 1434,
	50, 1434,
	51, 1434,
	52, 1434,
	53, 1434,
	54, 1434,
	56, 1434,
	57, 1434,
	58, 1434,
	59, 1434,
	61, 1434,
	62, 1434,
	63, 1434,
	64, 1434,
	65, 1434,
	66, 1434,
	67, 1434,
	71, 1434,
	72, 1434,
	73, 1434,
	74, 1434,
	76, 1434,
	77, 1434,
	78, 1434,
	82, 1434,
	83, 1434,
	84, 1434,
	85, 1434,
	86, 1434,
	87, 1434,
	88, 1434,
	89, 1434,
	92, 1434,
	93, 1434,
	94, 1434,
	95, 1434,
	96, 1434,
	98, 1434,
	100, 1434,
	101, 1434,
	102, 1434,
	103, 1434,
	104, 1434,
	105, 1434,
	107, 1434,
	108, 1434,
	109, 1434,
	111, 1434,
	112, 1434,
	113, 1434,
	121, 1434,
	122, 1434,
	123, 1434,
	124, 1434,
	125, 1434,
	127, 1434,
	128, 1434,
	129, 1434,
	130, 1434,
	132, 1434,
	133, 1434,
	134, 1434,
	136, 1434,
	137, 1434,
	138, 1434,
	140, 1434,
	141, 1434,
	142, 1434,
	145, 1434,
	146, 1434,
	147, 1434,
	149, 1434,
	150, 1434,
	151, 1434,
	153, 1434,
	154, 1434,
	155, 1434,
	157, 1434,
	158, 1434,
	159, 1434,
	160, 1434,
	161, 1434,
	162, 1434,
	163, 1434,
	164, 1434,
	165, 1434,
	166, 1434,
	167, 1434,
	168, 1434,
	169, 1434,
	170, 1434,
	171, 1434,
	172, 1434,
	173, 1434,
	181, 1434,
	182, 1434,
	183, 1434,
	184, 1434,
	188, 1434,
	190, 1434,
	191, 1434,
	192, 1434,
	194, 1434,
	197, 1434,
	198, 1434,
	199, 1434,
	200, 1434,
	201, 1434,
	202, 1434,
	203, 1434,
	204, 1434,
	205, 1434,
	206, 1434,
	207, 1434,
	208, 1434,
	209, 1434,
	210, 1434,
	212, 1434,
	213, 1434,
	215, 1434,
	216, 1434,
	218, 1434,
	219, 1434,
	220, 1434,
	221, 1434,
	222, 1434,
	223, 1434,
	224, 1434,
	225, 1434,
	226, 1434,
	227, 1434,
	229, 1434,
	230, 1434,
	232, 1434,
	233, 1434,
	234, 1434,
	235, 1434,
	236, 1434,
	241, 1434,
	242, 1434,
	243, 1434,
	246, 1434,
	247, 1434,
	248, 1434,
	249, 1434,
	251, 1434,
	253, 1434,
	254, 1434,
	256, 1434,
	258, 1434,
	259, 1434,
	260, 1434,
	262, 1434,
	266, 1434,
	267, 1434,
	268, 1434,
	269, 1434,
	270, 1434,
	271, 1434,
	273, 1434,
	274, 1434,
	275, 1434,
	277, 1434,
	278, 1434,
	280, 1434,
	281, 1434,
	284, 1434,
	285, 1434,
	286, 1434,
	287, 1434,
	288, 1434,
	289, 1434,
	290, 1434,
	293, 1434,
	294, 1434,
	295, 1434,
	296, 1434,
	298, 1434,
	299, 1434,
	300, 1434,
	301, 1434,
	302, 1434,
	303, 1434,
	304, 1434,
	305, 1434,
	306, 1434,
	307, 1434,
	308, 1434,
	309, 1434,
	310, 1434,
	311, 1434,
	312, 1434,
	313, 1434,
	314, 1434,
	315, 1434,
	316, 1434,
	317, 1434,
	318, 1434,
	319, 1434,
	321, 1434,
	323, 1434,
	324, 1434,
	325, 1434,
	326, 1434,
	327, 1434,
	328, 1434,
	329, 1434,
	330, 1434,
	331, 1434,
	332, 1434,
	333, 1434,
	334, 1434,
	335, 1434,
	336, 1434,
	337, 1434,
	338, 1434,
	339, 1434,
	341, 1434,
	342, 1434,
	346, 1434,
	347, 1434,
	348, 1434,
	349, 1434,
	351, 1434,
	352, 1434,
	353, 1434,
	354, 1434,
	355, 1434,
	358, 1434,
	360, 1434,
	361, 1434,
	363, 1434,
	364, 1434,
	365, 1434,
	368, 1434,
	369, 1434,
	370, 1434,
	372, 1434,
	374, 1434,
	375, 1434,
	376, 1434,
	377, 1434,
	378, 1434,
	379, 1434,
	380, 1434,
	381, 1434,
	382, 1434,
	383, 1434,
	384, 1434,
	385, 1434,
	386, 1434,
	388, 1434,
	389, 1434,
	390, 1434,
	391, 1434,
	392, 1434,
	393, 1434,
	394, 1434,
	395, 1434,
	396, 1434,
	397, 1434,
	398, 1434,
	399, 1434,
	400, 1434,
	401, 1434,
	402, 1434,
	404, 1434,
	405, 1434,
	406, 1434,
	408, 1434,
	409, 1434,
	410, 1434,
	411, 1434,
	412, 1434,
	413, 1434,
	414, 1434,
	415, 1434,
	416, 1434,
	417, 1434,
	418, 1434,
	419, 1434,
	420, 1434,
	422, 1434,
	424, 1434,
	425, 1434,
	426, 1434,
	432, 1434,
	433, 1434,
	434, 1434,
	436, 1434,
	437, 1434,
	438, 1434,
	439, 1434,
	440, 1434,
	441, 1434,
	442, 1434,
	443, 1434,
	444, 1434,
	445, 1434,
	447, 1434,
	448, 1434,
	449, 1434,
	451, 1434,
	452, 1434,
	453, 1434,
	454, 1434,
	455, 1434,
	456, 1434,
	457, 1434,
	459, 1434,
	460, 1434,
	461, 1434,
	462, 1434,
	463, 1434,
	464, 1434,
	465, 1434,
	466, 1434,
	467, 1434,
	468, 1434,
	469, 1434,
	470, 1434,
	471, 1434,
	473, 1434,
	474, 1434,
	475, 1434,
	476, 1434,
	477, 1434,
	478, 1434,
	480, 1434,
	481, 1434,
	482, 1434,
	483, 1434,
	484, 1434,
	485, 1434,
	487, 1434,
	488, 1434,
	489, 1434,
	490, 1434,
	491, 1434,
	492, 1434,
	493, 1434,
	494, 1434,
	496, 1434,
	498, 1434,
	499, 1434,
	500, 1434,
	501, 1434,
	502, 1434,
	503, 1434,
	504, 1434,
	505, 1434,
	506, 1434,
	507, 1434,
	508, 1434,
	509, 1434,
	510, 1434,
	511, 1434,
	512, 1434,
	513, 1434,
	514, 1434,
	515, 1434,
	517, 1434,
	518, 1434,
	520, 1434,
	521, 1434,
	523, 1434,
	524, 1434,
	525, 1434,
	526, 1434,
	527, 1434,
	528, 1434,
	529, 1434,
	530, 1434,
	532, 1434,
	533, 1434,
	534, 1434,
	535, 1434,
	536, 1434,
	538, 1434,
	540, 1434,
	541, 1434,
	542, 1434,
	543, 1434,
	544, 1434,
	545, 1434,
	546, 1434,
	548, 1434,
	549, 1434,
	550, 1434,
	551, 1434,
	553, 1434,
	554, 1434,
	557, 1434,
	558, 1434,
	559, 1434,
	560, 1434,
	561, 1434,
	562, 1434,
	563, 1434,
	564, 1434,
	566, 1434,
	569, 1434,
	570, 1434,
	571, 1434,
	572, 1434,
	573, 1434,
	574, 1434,
	576, 1434,
	577, 1434,
	578, 1434,
	579, 1434,
	580, 1434,
	581, 1434,
	582, 1434,
	583, 1434,
	588, 1434,
	589, 1434,
	590, 1434,
	591, 1434,
	592, 1434,
	593, 1434,
	-2, 0,
	-1, 1729,
	1, 575,
	623, 575,
	625, 575,
	627, 575,
	-2, 1672,
	-1, 1732,
	4, 2896,
	11, 2896,
	12, 2896,
	14, 2896,
	15, 2896,
	16, 2896,
	17, 2896,
	18, 2896,
	19, 2896,
	21, 2896,
	22, 2896,
	23, 2896,
	24, 2896,
	25, 2896,
	26, 2896,
	27, 2896,
	28, 2896,
	30, 2896,
	31, 2896,
	34, 2896,
	35, 2896,
	37, 2896,
	39, 2896,
	41, 2896,
	43, 2896,
	44, 2896,
	46, 2896,
	47, 2896,
	48, 2896,
	49, 2896,
	50, 2896,
	51, 2896,
	52, 2896,
	53, 2896,
	54, 2896,
	56, 2896,
	57, 2896,
	58, 2896,
	59, 2896,
	61, 2896,
	62, 2896,
	63, 2896,
	64, 2896,
	65, 2896,
	66, 2896,
	67, 2896,
	70, 2896,
	71, 2896,
	72, 2896,
	73, 2896,
	74, 2896,
	76, 2896,
	77, 2896,
	78, 2896,
	79, 2896,
	82, 2896,
	83, 2896,
	84, 2896,
	85, 2896,
	86, 2896,
	87, 2896,
	88, 2896,
	89, 2896,
	90, 2896,
	92, 2896,
	93, 2896,
	94, 2896,
	95, 2896,
	96, 2896,
	98, 2896,
	99, 2896,
	100, 2896,
	101, 2896,
	102, 2896,
	103, 2896,
	104, 2896,
	105, 2896,
	107, 2896,
	108, 2896,
	109, 2896,
	110, 2896,
	111, 2896,
	112, 2896,
	113, 2896,
	121, 2896,
	122, 2896,
	123, 2896,
	124, 2896,
	125, 2896,
	127, 2896,
	128, 2896,
	129, 2896,
	130, 2896,
	132, 2896,
	133, 2896,
	134, 2896,
	136, 2896,
	137, 2896,
	138, 2896,
	140, 2896,
	141, 2896,
	142, 2896,
	145, 2896,
	146, 2896,
	147, 2896,
	149, 2896,
	150, 2896,
	151, 2896,
	153, 2896,
	154, 2896,
	155, 2896,
	157, 2896,
	158, 2896,
	159, 2896,
	160, 2896,
	161, 2896,
	162, 2896,
	163, 2896,
	164, 2896,
	165, 2896,
	166, 2896,
	167, 2896,
	168, 2896,
	169, 2896,
	170, 2896,
	171, 2896,
	172, 2896,
	173, 2896,
	177, 2896,
	178, 2896,
	179, 2896,
	180, 2896,
	181, 2896,
	182, 2896,
	183, 2896,
	184, 2896,
	187, 2896,
	188, 2896,
	190, 2896,
	191, 2896,
	192, 2896,
	194, 2896,
	196, 2896,
	197, 2896,
	198, 2896,
	199, 2896,
	200, 2896,
	201, 2896,
	202, 2896,
	203, 2896,
	204, 2896,
	205, 2896,
	206, 2896,
	207, 2896,
	208, 2896,
	209, 2896,
	210, 2896,
	212, 2896,
	213, 2896,
	215, 2896,
	216, 2896,
	218, 2896,
	219, 2896,
	220, 2896,
	221, 2896,
	222, 2896,
	223, 2896,
	224, 2896,
	225, 2896,
	226, 2896,
	227, 2896,
	228, 2896,
	229, 2896,
	230, 2896,
	231, 2896,
	232, 2896,
	233, 2896,
	234, 2896,
	235, 2896,
	236, 2896,
	238, 2896,
	239, 2896,
	241, 2896,
	242, 2896,
	243, 2896,
	245, 2896,
	246, 2896,
	247, 2896,
	248, 2896,
	249, 2896,
	251, 2896,
	253, 2896,
	254, 2896,
	255, 2896,
	256, 2896,
	257, 2896,
	258, 2896,
	259, 2896,
	260, 2896,
	261, 2896,
	262, 2896,
	264, 2896,
	265, 2896,
	266, 2896,
	267, 2896,
	268, 2896,
	269, 2896,
	270, 2896,
	271, 2896,
	273, 2896,
	274, 2896,
	275, 2896,
	277, 2896,
	278, 2896,
	279, 2896,
	280, 2896,
	281, 2896,
	282, 2896,
	284, 2896,
	285, 2896,
	286, 2896,
	287, 2896,
	288, 2896,
	289, 2896,
	290, 2896,
	293, 2896,
	294, 2896,
	295, 2896,
	296, 2896,
	297, 2896,
	298, 2896,
	299, 2896,
	300, 2896,
	301, 2896,
	302, 2896,
	303, 2896,
	304, 2896,
	305, 2896,
	306, 2896,
	307, 2896,
	308, 2896,
	309, 2896,
	310, 2896,
	311, 2896,
	312, 2896,
	313, 2896,
	314, 2896,
	315, 2896,
	316, 2896,
	317, 2896,
	318, 2896,
	319, 2896,
	321, 2896,
	322, 2896,
	323, 2896,
	324, 2896,
	325, 2896,
	326, 2896,
	327, 2896,
	328, 2896,
	329, 2896,
	330, 2896,
	331, 2896,
	332, 2896,
	333, 2896,
	334, 2896,
	335, 2896,
	336, 2896,
	337, 2896,
	338, 2896,
	339, 2896,
	341, 2896,
	342, 2896,
	345, 2896,
	346, 2896,
	347, 2896,
	348, 2896,
	349, 2896,
	351, 2896,
	352, 2896,
	353, 2896,
	354, 2896,
	355, 2896,
	358, 2896,
	360, 2896,
	363, 2896,
	364, 2896,
	365, 2896,
	366, 2896,
	368, 2896,
	369, 2896,
	370, 2896,
	372, 2896,
	374, 2896,
	375, 2896,
	376, 2896,
	377, 2896,
	378, 2896,
	379, 2896,
	380, 2896,
	381, 2896,
	382, 2896,
	383, 2896,
	384, 2896,
	385, 2896,
	386, 2896,
	388, 2896,
	389, 2896,
	390, 2896,
	391, 2896,
	392, 2896,
	393, 2896,
	394, 2896,
	395, 2896,
	396, 2896,
	397, 2896,
	398, 2896,
	399, 2896,
	400, 2896,
	401, 2896,
	402, 2896,
	404, 2896,
	405, 2896,
	406, 2896,
	408, 2896,
	409, 2896,
	410, 2896,
	411, 2896,
	412, 2896,
	413, 2896,
	414, 2896,
	415, 2896,
	416, 2896,
	417, 2896,
	418, 2896,
	419, 2896,
	420, 2896,
	422, 2896,
	424, 2896,
	425, 2896,
	426, 2896,
	432, 2896,
	433, 2896,
	434, 2896,
	435, 2896,
	436, 2896,
	437, 2896,
	438, 2896,
	439, 2896,
	440, 2896,
	441, 2896,
	442, 2896,
	443, 2896,
	444, 2896,
	445, 2896,
	447, 2896,
	448, 2896,
	449, 2896,
	450, 2896,
	451, 2896,
	452, 2896,
	453, 2896,
	454, 2896,
	455, 2896,
	456, 2896,
	457, 2896,
	458, 2896,
	459, 2896,
	460, 2896,
	461, 2896,
	462, 2896,
	463, 2896,
	464, 2896,
	465, 2896,
	466, 2896,
	467, 2896,
	468, 2896,
	469, 2896,
	470, 2896,
	471, 2896,
	473, 2896,
	474, 2896,
	475, 2896,
	476, 2896,
	477, 2896,
	478, 2896,
	480, 2896,
	481, 2896,
	482, 2896,
	483, 2896,
	484, 2896,
	485, 2896,
	486, 2896,
	487, 2896,
	488, 2896,
	489, 2896,
	490, 2896,
	491, 2896,
	492, 2896,
	493, 2896,
	494, 2896,
	496, 2896,
	498, 2896,
	499, 2896,
	500, 2896,
	501, 2896,
	502, 2896,
	503, 2896,
	504, 2896,
	505, 2896,
	506, 2896,
	507, 2896,
	508, 2896,
	509, 2896,
	510, 2896,
	511, 2896,
	512, 2896,
	513, 2896,
	514, 2896,
	515, 2896,
	517, 2896,
	518, 2896,
	519, 2896,
	520, 2896,
	521, 2896,
	523, 2896,
	524, 2896,
	525, 2896,
	526, 2896,
	527, 2896,
	528, 2896,
	529, 2896,
	530, 2896,
	532, 2896,
	533, 2896,
	534, 2896,
	535, 2896,
	536, 2896,
	538, 2896,
	540, 2896,
	541, 2896,
	542, 2896,
	543, 2896,
	544, 2896,
	545, 2896,
	546, 2896,
	548, 2896,
	549, 2896,
	550, 2896,
	551, 2896,
	553, 2896,
	554, 2896,
	557, 2896,
	558, 2896,
	559, 2896,
	560, 2896,
	561, 2896,
	562, 2896,
	563, 2896,
	564, 2896,
	566, 2896,
	569, 2896,
	570, 2896,
	571, 2896,
	572, 2896,
	573, 2896,
	574, 2896,
	576, 2896,
	577, 2896,
	578, 2896,
	579, 2896,
	580, 2896,
	581, 2896,
	582, 2896,
	583, 2896,
	588, 2896,
	589, 2896,
	590, 2896,
	591, 2896,
	592, 2896,
	593, 2896,
	594, 2896,
	596, 2896,
	604, 2896,
	605, 2896,
	606, 2896,
	607, 2896,
	608, 2896,
	609, 2896,
	611, 2896,
	612, 2896,
	613, 2896,
	614, 2896,
	615, 2896,
	616, 2896,
	617, 2896,
	618, 2896,
	619, 2896,
	622, 2896,
	625, 2896,
	626, 2896,
	628, 2896,
	629, 2896,
	-2, 0,
	-1, 1737,
	195, 2771,
	537, 2771,
	606, 2771,
	626, 2771,
	-2, 0,
	-1, 1791,
	410, 977,
	478, 977,
	521, 977,
	542, 977,
	-2, 0,
	-1, 1802,
	1, 1506,
	623, 1506,
	625, 1506,
	627, 1506,
	-2, 0,
	-1, 1819,
	1, 972,
	623, 972,
	625, 972,
	627, 972,
	-2, 0,
	-1, 1820,
	1, 1016,
	623, 1016,
	625, 1016,
	627, 1016,
	-2, 0,
	-1, 1821,
	1, 1024,
	623, 1024,
	625, 1024,
	627, 1024,
	-2, 0,
	-1, 1824,
	1, 981,
	623, 981,
	625, 981,
	627, 981,
	-2, 0,
	-1, 1826,
	1, 987,
	623, 987,
	625, 987,
	627, 987,
	-2, 0,
	-1, 1829,
	1, 983,
	623, 983,
	625, 983,
	627, 983,
	-2, 0,
	-1, 1834,
	1, 997,
	623, 997,
	625, 997,
	627, 997,
	-2, 0,
	-1, 1868,
	1, 2753,
	623, 2753,
	625, 2753,
	626, 2753,
	627, 2753,
	-2, 0,
	-1, 1872,
	1, 1075,
	623, 1075,
	625, 1075,
	627, 1075,
	-2, 0,
	-1, 1889,
	1, 1556,
	627, 1556,
	-2, 1561,
	-1, 1892,
	176, 1715,
	189, 1715,
	283, 1715,
	356, 1715,
	-2, 1653,
	-1, 1992,
	156, 1674,
	176, 1674,
	189, 1674,
	250, 1674,
	283, 1674,
	356, 1674,
	367, 1674,
	555, 1674,
	-2, 2125,
	-1, 2053,
	625, 2300,
	-2, 0,
	-1, 2088,
	156, 1674,
	176, 1674,
	189, 1674,
	250, 1674,
	283, 1674,
	356, 1674,
	367, 1674,
	555, 1674,
	-2, 1807,
	-1, 2128,
	537, 2768,
	626, 2768,
	629, 2768,
	-2, 0,
	-1, 2145,
	624, 1948,
	-2, 1936,
	-1, 2177,
	195, 2768,
	626, 2768,
	629, 2768,
	-2, 0,
	-1, 2220,
	1, 741,
	627, 741,
	-2, 1561,
	-1, 2391,
	231, 274,
	-2, 2448,
	-1, 2392,
	231, 275,
	-2, 330,
	-1, 2504,
	1, 974,
	623, 974,
	625, 974,
	627, 974,
	-2, 0,
	-1, 2505,
	1, 1018,
	623, 1018,
	625, 1018,
	627, 1018,
	-2, 0,
	-1, 2506,
	1, 1026,
	623, 1026,
	625, 1026,
	627, 1026,
	-2, 0,
	-1, 2507,
	1, 1077,
	623, 1077,
	625, 1077,
	627, 1077,
	-2, 0,
	-1, 2548,
	1, 999,
	623, 999,
	625, 999,
	627, 999,
	-2, 0,
	-1, 2570,
	1, 1060,
	623, 1060,
	625, 1060,
	627, 1060,
	-2, 0,
	-1, 2617,
	456, 1742,
	457, 1742,
	-2, 1981,
	-1, 2648,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2001,
	-1, 2649,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2002,
	-1, 2650,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 2003,
	-1, 2651,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 2004,
	-1, 2652,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 2005,
	-1, 2653,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 2006,
	-1, 2654,
	99, 0,
	264, 0,
	265, 0,
	608, 0,
	609, 0,
	-2, 2007,
	-1, 2655,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2008,
	-1, 2667,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2020,
	-1, 2668,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2021,
	-1, 2669,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2022,
	-1, 2673,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2029,
	-1, 2679,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2033,
	-1, 2681,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2041,
	-1, 2682,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2042,
	-1, 2683,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2043,
	-1, 2684,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2044,
	-1, 2858,
	5, 2452,
	195, 2311,
	624, 2449,
	-2, 2440,
	-1, 2859,
	195, 2312,
	-2, 2847,
	-1, 2860,
	195, 2313,
	-2, 2648,
	-1, 2861,
	195, 2314,
	-2, 2526,
	-1, 2862,
	195, 2315,
	-2, 2586,
	-1, 2863,
	195, 2316,
	-2, 2633,
	-1, 2864,
	195, 2317,
	-2, 2766,
	-1, 2865,
	195, 2318,
	-2, 2108,
	-1, 2936,
	1, 1808,
	2, 1808,
	110, 1808,
	156, 1808,
	176, 1808,
	189, 1808,
	196, 1808,
	214, 1808,
	217, 1808,
	245, 1808,
	250, 1808,
	261, 1808,
	279, 1808,
	283, 1808,
	322, 1808,
	356, 1808,
	361, 1808,
	367, 1808,
	446, 1808,
	450, 1808,
	555, 1808,
	567, 1808,
	585, 1808,
	586, 1808,
	587, 1808,
	597, 1808,
	623, 1808,
	625, 1808,
	627, 1808,
	629, 1808,
	-2, 1807,
	-1, 2949,
	624, 2421,
	-2, 2435,
	-1, 2951,
	1, 347,
	585, 347,
	-2, 1701,
	-1, 2981,
	624, 1947,
	-2, 1937,
	-1, 3196,
	1, 1409,
	441, 1364,
	480, 1364,
	600, 1364,
	623, 1409,
	625, 1409,
	627, 1409,
	-2, 1701,
	-1, 3377,
	362, 1745,
	-2, 2886,
	-1, 3378,
	362, 1746,
	-2, 2750,
	-1, 3382,
	456, 2377,
	457, 2377,
	-2, 2106,
	-1, 3383,
	456, 2381,
	457, 2381,
	-2, 2107,
	-1, 3384,
	456, 2378,
	457, 2378,
	-2, 2106,
	-1, 3385,
	456, 2382,
	457, 2382,
	-2, 2107,
	-1, 3398,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2031,
	-1, 3399,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2035,
	-1, 3405,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2037,
	-1, 3632,
	1, 736,
	623, 736,
	625, 736,
	627, 736,
	-2, 1561,
	-1, 3828,
	45, 2412,
	-2, 1147,
	-1, 3833,
	1, 1409,
	623, 1409,
	625, 1409,
	627, 1409,
	-2, 1701,
	-1, 3943,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2039,
	-1, 3950,
	255, 0,
	257, 0,
	345, 0,
	-2, 2058,
	-1, 4018,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2087,
	-1, 4019,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2088,
	-1, 4020,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2089,
	-1, 4024,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2093,
	-1, 4025,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2094,
	-1, 4026,
	14, 0,
	15, 0,
	16, 0,
	604, 0,
	605, 0,
	606, 0,
	-2, 2095,
	-1, 4074,
	624, 2422,
	-2, 2436,
	-1, 4284,
	626, 3003,
	-2, 1627,
	-1, 4343,
	255, 0,
	257, 0,
	345, 0,
	-2, 2059,
	-1, 4346,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2062,
	-1, 4347,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2064,
	-1, 4461,
	626, 2437,
	-2, 1444,
	-1, 4624,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2063,
	-1, 4625,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2065,
	-1, 4636,
	255, 0,
	-2, 2098,
	-1, 4826,
	255, 0,
	-2, 2099,
	-1, 5046,
	53, 0,
	228, 0,
	282, 0,
	486, 0,
	594, 0,
	607, 0,
	-2, 2850,
}

const sqlPrivate = 57344

const sqlLast = 144279

var sqlAct = [...]int{
	285, 5164, 4981, 5237, 1412, 3536, 5108, 3269, 4874, 5092,
	4918, 4693, 4980, 4866, 5032, 5045, 5058, 5178, 4937, 5014,
	3816, 3147, 4992, 4995, 4326, 2388, 5059, 3817, 5117, 5060,
	4675, 4795, 2466, 4971, 3052, 4772, 4743, 2280, 3117, 4759,
	3983, 4084, 5056, 4457, 1635, 4830, 4583, 5044, 4578, 4572,
	4539, 4698, 4510, 1468, 3239, 3935, 4645, 3661, 4613, 1404,
	3658, 2627, 4276, 3850, 4563, 4268, 4565, 1607, 1755, 744,
	2478, 4778, 4903, 2476, 1409, 4188, 1336, 4458, 880, 3391,
	4438, 2891, 2189, 4588, 3053, 3291, 2696, 1147, 3844, 3801,
	1901, 1156, 2202, 1402, 3721, 4242, 4223, 2132, 4225, 2289,
	2635, 3664, 3806, 3790, 3880, 3258, 880, 3228, 1487, 4641,
	3646, 3805, 3255, 3808, 3783, 3878, 3782, 2474, 3253, 1395,
	816, 3648, 3647, 2628, 4077, 755, 2963, 1451, 3582, 4325,
	3559, 2094, 3551, 3519, 3542, 3286, 3270, 955, 4, 1155,
	189, 3132, 1213, 959, 3589, 1580, 3540, 2377, 2375, 2063,
	1753, 2301, 3203, 3148, 2367, 4044, 1325, 2317, 3685, 4382,
	5093, 2632, 877, 2039, 279, 1970, 278, 3518, 4831, 1209,
	3375, 2000, 2929, 950, 2709, 1693, 2376, 2774, 812, 3232,
	3285, 1316, 277, 1407, 2439, 875, 3165, 1256, 2357, 2365,
	2338, 2345, 1799, 3240, 2268, 1206, 1889, 2272, 2928, 2200,
	2133, 2909, 2765, 1211, 2693, 2064, 2083, 1470, 2616, 2599,
	2964, 2597, 789, 3263, 1730, 2426, 2425, 1381, 1696, 881,
	882, 2360, 1609, 3077, 3078, 1030, 3809, 1438, 4938, 2768,
	3038, 2992, 1319, 2854, 2073, 1298, 2899, 189, 1984, 1466,
	199, 2820, 886, 2080, 889, 1902, 200, 2918, 1903, 1333,
	2888, 2598, 2931, 1834, 797, 1631, 2600, 2746, 2385, 1392,
	1728, 1315, 808, 1208, 114, 2452, 2034, 1721, 976, 1819,
	886, 5109, 889, 2776, 1588, 5165, 825, 2621, 1187, 748,
	1321, 45, 44, 42, 33, 745, 2112, 757, 772, 870,
	931, 31, 29, 1296, 1463, 1908, 3428, 1888, 3422, 1641,
	1051, 2191, 2191, 731, 932, 5248, 4058, 753, 4059, 2908,
	3538, 2191, 2191, 5240, 2191, 2191, 1618, 3759, 5228, 4085,
	1916, 1917, 2908, 1949, 1950, 1951, 1960, 1961, 1962, 5227,
	5197, 5195, 5138, 2908, 4697, 4697, 2397, 5094, 5084, 5054,
	4665, 5095, 2908, 1953, 1947, 5082, 828, 832, 4662, 2908,
	4659, 5079, 1919, 5076, 3859, 5080, 5042, 5077, 1151, 5041,
	2397, 2212, 1966, 2397, 5040, 5030, 5028, 5023, 3296, 4697,
	4697, 4781, 5018, 5017, 4990, 4409, 4697, 4697, 4697, 1972,
	4957, 4950, 4949, 1313, 2972, 2908, 2908, 4942, 1918, 1204,
	4917, 2397, 4914, 4896, 2397, 1447, 4697, 4529, 4828, 1938,
	4809, 4774, 2972, 4716, 4302, 4118, 4715, 2397, 1935, 4704,
	2397, 4703, 4696, 2397, 3599, 4697, 4697, 2212, 1328, 3860,
	4652, 1825, 4626, 1140, 2397, 4599, 2972, 2475, 4596, 3296,
	1131, 4505, 3759, 4485, 4345, 2908, 1130, 2908, 2972, 4292,
	4286, 4239, 2209, 3873, 3873, 4240, 4149, 4117, 4069, 4067,
	4150, 4118, 4070, 4068, 4051, 3967, 3963, 3872, 2908, 2397,
	2908, 3873, 1151, 1447, 3535, 3617, 1152, 3614, 2908, 3530,
	3529, 3480, 2901, 2908, 2908, 3481, 97, 3478, 3470, 3468,
	2771, 3479, 3471, 2908, 1916, 1917, 1941, 1942, 1943, 1944,
	1960, 1961, 1962, 1299, 1299, 4048, 1924, 1146, 3439, 3437,
	3295, 2994, 2908, 3280, 3296, 3438, 2209, 2462, 1947, 3279,
	3017, 2971, 1327, 2462, 2908, 2972, 1919, 2961, 2953, 2968,
	2907, 2908, 2397, 2461, 2908, 1351, 1966, 2462, 1359, 1302,
	3759, 1303, 2397, 2212, 3390, 1300, 2908, 1957, 4958, 4832,
	1967, 4823, 4811, 1972, 4781, 3296, 246, 1946, 1948, 4048,
	2900, 4576, 1918, 4529, 2209, 2722, 2723, 2724, 2741, 2742,
	2743, 2212, 4486, 1938, 1963, 4302, 1964, 4241, 3124, 3037,
	2226, 2294, 1935, 1933, 1934, 2772, 2744, 2190, 2206, 3234,
	1352, 2396, 3142, 3489, 3490, 3028, 3507, 3508, 3509, 2059,
	1630, 1955, 3861, 2212, 4167, 3938, 248, 3910, 2081, 2350,
	1801, 2945, 2944, 2943, 2942, 2941, 1939, 1304, 1643, 1765,
	1301, 1972, 3862, 246, 1139, 4590, 1138, 1352, 1618, 1137,
	2908, 1136, 1135, 1134, 1133, 1129, 1128, 1127, 1126, 1125,
	1124, 2734, 1916, 1917, 1123, 1122, 1121, 1120, 1119, 3346,
	2730, 1118, 1117, 1116, 1115, 1114, 247, 1113, 1112, 1111,
	1941, 1942, 1943, 1944, 1965, 1110, 1092, 2773, 1028, 2770,
	1924, 240, 3504, 248, 1919, 1027, 1026, 1025, 1024, 1023,
	241, 1022, 1021, 1020, 1019, 1954, 1018, 2192, 2192, 1017,
	1016, 1015, 1014, 1013, 1012, 1011, 1969, 2192, 2192, 1010,
	2192, 2192, 1009, 1008, 1202, 1007, 1006, 1005, 201, 1004,
	1918, 1957, 1003, 1002, 1967, 1001, 1000, 999, 998, 997,
	996, 1946, 1948, 247, 995, 994, 993, 992, 2735, 2736,
	2737, 2738, 2803, 981, 3427, 980, 979, 974, 2729, 973,
	966, 965, 964, 949, 948, 905, 904, 1933, 1934, 903,
	902, 893, 892, 1746, 1945, 891, 890, 853, 1185, 852,
	1655, 823, 822, 821, 803, 1955, 273, 272, 271, 3495,
	270, 269, 1649, 268, 267, 201, 266, 1940, 5069, 265,
	1939, 4814, 4400, 2209, 2209, 264, 263, 262, 261, 260,
	246, 259, 2209, 258, 257, 2540, 256, 255, 254, 253,
	1414, 1211, 252, 157, 251, 1958, 1643, 250, 249, 4357,
	4094, 4063, 3874, 3512, 3585, 2739, 2740, 3450, 1924, 3433,
	3424, 3533, 3326, 3213, 2042, 3248, 2042, 3045, 1211, 1211,
	1211, 2041, 2976, 2041, 2775, 2950, 2935, 3511, 1971, 2084,
	248, 2801, 4592, 3266, 2589, 2253, 3489, 3490, 2732, 2211,
	2787, 2107, 2785, 2011, 1883, 2002, 3045, 1637, 40, 2045,
	1969, 2040, 1459, 3859, 1335, 3534, 5068, 1490, 1915, 4252,
	2009, 1211, 5065, 2212, 3004, 5043, 5027, 1211, 1612, 3505,
	4688, 1414, 4812, 2190, 2209, 1621, 2206, 2592, 4922, 4820,
	247, 4835, 4640, 4597, 4575, 1442, 4415, 4380, 4379, 4373,
	4372, 246, 4371, 4364, 4363, 240, 1211, 2002, 1211, 1352,
	1211, 2209, 5243, 1956, 241, 4361, 2900, 1612, 1945, 1455,
	1456, 1457, 4356, 1930, 1931, 1937, 1959, 1936, 1932, 4353,
	1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 4352,
	1643, 1940, 201, 1414, 4367, 4238, 4098, 1698, 4366, 4097,
	4096, 248, 4073, 1331, 4039, 2769, 4038, 4037, 3959, 1969,
	3954, 1642, 3580, 1612, 1593, 3526, 1598, 3517, 1312, 1958,
	1612, 3488, 1352, 3489, 3490, 3485, 3507, 3508, 3509, 1211,
	1403, 1211, 1654, 3484, 3482, 3477, 1612, 2985, 5186, 1585,
	3476, 3475, 3472, 3469, 1648, 1211, 4341, 1211, 3449, 1434,
	3432, 247, 1971, 3425, 4155, 3423, 3281, 1329, 1399, 2733,
	1615, 1386, 1389, 1827, 2936, 2758, 240, 1915, 1436, 2442,
	2404, 2003, 3495, 2001, 5185, 241, 1634, 3489, 3490, 2402,
	3507, 3508, 3509, 3043, 2004, 1722, 1914, 5107, 1702, 1705,
	3506, 5105, 1337, 3985, 4982, 4253, 1612, 1483, 4901, 1577,
	1582, 1583, 3504, 201, 1597, 1403, 4886, 4882, 886, 4881,
	889, 4880, 4860, 1619, 3489, 3490, 1211, 1708, 4859, 1211,
	1971, 4857, 4834, 4833, 4807, 2705, 2699, 1956, 3489, 3490,
	1428, 4793, 4790, 4789, 3250, 4782, 4770, 1473, 1474, 246,
	1959, 1936, 1932, 4769, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 189, 189, 4591, 3504, 3865, 4712, 4683,
	3489, 3490, 4638, 1633, 1632, 4165, 4621, 4620, 3489, 3490,
	1462, 4559, 4555, 4552, 1691, 3489, 3490, 1403, 1403, 4530,
	4399, 4378, 3505, 4303, 4153, 4253, 4152, 1733, 1735, 248,
	1465, 4133, 1770, 3504, 1475, 1476, 3531, 4132, 1643, 3495,
	4130, 3042, 4054, 4042, 3949, 2719, 2720, 2721, 2745, 2731,
	2725, 3042, 2727, 2728, 2726, 2713, 2714, 2715, 2716, 2717,
	2718, 1989, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
	1442, 1769, 3875, 1442, 246, 1731, 3501, 3502, 3503, 247,
	3042, 3869, 3836, 3500, 3498, 3499, 3491, 3492, 3493, 3494,
	3496, 3497, 3740, 3495, 240, 1211, 3606, 3696, 3663, 3608,
	3454, 1211, 1969, 241, 3453, 3448, 3414, 3511, 3227, 1724,
	3070, 1750, 2048, 246, 2047, 2046, 2043, 1152, 1893, 2035,
	246, 2033, 1916, 1917, 248, 2983, 2982, 2947, 2940, 2906,
	3495, 201, 246, 2783, 4837, 3577, 1988, 1922, 1923, 1925,
	1926, 2106, 2062, 2057, 3495, 4836, 1947, 2056, 2055, 3505,
	2054, 2053, 2052, 1843, 1919, 246, 2051, 1775, 2050, 2049,
	2030, 3511, 2029, 248, 2028, 2027, 2026, 2025, 2024, 1745,
	248, 2023, 2022, 2021, 247, 1887, 3495, 2020, 1420, 2019,
	2018, 1972, 248, 3506, 3495, 1764, 3249, 2017, 2016, 240,
	1918, 3495, 2015, 2004, 1990, 1987, 1982, 1427, 241, 1356,
	1347, 1938, 4562, 3505, 4411, 248, 1211, 1211, 1211, 4349,
	4093, 4066, 1211, 247, 4057, 3436, 2938, 2974, 4660, 1333,
	247, 1333, 4413, 1727, 1991, 4092, 3265, 2003, 240, 1969,
	3604, 1985, 247, 2102, 1454, 240, 1490, 241, 1792, 3699,
	3505, 3118, 5177, 4890, 241, 2802, 4883, 240, 1211, 4783,
	4595, 880, 1414, 1828, 5061, 247, 241, 2150, 880, 4533,
	1414, 4532, 1414, 4531, 4488, 201, 4815, 1894, 4487, 4402,
	240, 4310, 201, 4309, 3489, 3490, 2061, 4308, 4307, 241,
	4306, 4305, 2110, 1969, 201, 1727, 3505, 4304, 1941, 1942,
	1943, 1944, 4119, 2070, 3505, 4061, 1131, 1890, 1924, 1898,
	1469, 2118, 1130, 1453, 1897, 4060, 3877, 201, 1452, 3876,
	3506, 3763, 3761, 3760, 5134, 1916, 1917, 5132, 1447, 5057,
	1969, 246, 1414, 4256, 2044, 3936, 2129, 1892, 1211, 2123,
	2084, 1469, 4779, 1447, 2179, 2117, 2181, 3498, 3499, 3491,
	3492, 3493, 3494, 3496, 3497, 1911, 1912, 1919, 1885, 1946,
	1948, 4179, 1211, 2232, 2800, 2091, 2067, 2068, 2111, 1152,
	1490, 4148, 189, 2786, 3506, 2784, 1969, 4813, 2328, 2196,
	3474, 248, 2198, 2042, 1969, 2025, 3730, 1469, 2203, 2010,
	2041, 1969, 2205, 1918, 2025, 3473, 2283, 2208, 1328, 1469,
	1328, 1447, 4687, 3396, 1916, 1917, 2214, 3081, 1450, 2144,
	1108, 3506, 3665, 4246, 2244, 1442, 2013, 3163, 1939, 2218,
	1467, 2378, 3819, 2124, 3818, 886, 4853, 889, 2036, 2037,
	2173, 247, 886, 2495, 889, 1597, 1919, 4113, 2092, 4114,
	1800, 1791, 3096, 2467, 4852, 4773, 240, 2115, 5090, 1844,
	4573, 3292, 3791, 2251, 2147, 241, 2217, 3506, 4642, 1109,
	1299, 4517, 1801, 2089, 4853, 3506, 3501, 3502, 3503, 2379,
	2082, 4260, 1918, 3500, 3498, 3499, 3491, 3492, 3493, 3494,
	3496, 3497, 4235, 201, 4185, 1597, 4176, 4158, 3903, 3630,
	1311, 2561, 1327, 1726, 1327, 1152, 2472, 2410, 1969, 3538,
	3987, 2060, 2766, 5066, 2443, 2981, 2347, 2238, 2237, 2086,
	3079, 1469, 2246, 2194, 2101, 2100, 2099, 2097, 1154, 3442,
	3501, 3502, 3503, 2058, 2096, 2095, 2038, 3500, 3498, 3499,
	3491, 3492, 3493, 3494, 3496, 3497, 3799, 2327, 2220, 1612,
	1612, 2436, 2130, 4707, 1701, 4472, 1626, 1423, 1490, 4679,
	1419, 246, 1385, 4469, 5081, 1726, 1945, 3139, 5078, 3855,
	4124, 1779, 3136, 3134, 3500, 3498, 3499, 3491, 3492, 3493,
	3494, 3496, 3497, 5067, 2337, 4875, 4579, 4989, 3668, 1940,
	1924, 3774, 4143, 3493, 3494, 3496, 3497, 3262, 1758, 5169,
	5136, 246, 2233, 2216, 5135, 2324, 4710, 2332, 5114, 4706,
	3120, 248, 4685, 2342, 3930, 4736, 3634, 2389, 2394, 4474,
	3500, 3498, 3499, 3491, 3492, 3493, 3494, 3496, 3497, 1676,
	3499, 3491, 3492, 3493, 3494, 3496, 3497, 1668, 3491, 3492,
	3493, 3494, 3496, 3497, 2241, 1106, 2334, 3018, 2247, 2239,
	1971, 248, 1842, 1104, 1454, 1612, 4198, 1612, 2554, 1612,
	2258, 247, 2259, 1088, 944, 1640, 2138, 1647, 246, 1653,
	1454, 5239, 2266, 2267, 2337, 1102, 240, 1612, 1612, 1100,
	2288, 2260, 2261, 2570, 3698, 241, 2567, 4891, 2264, 2265,
	4729, 1612, 4718, 4522, 2300, 1841, 2361, 4521, 2221, 1437,
	2552, 247, 4196, 1612, 4195, 1612, 1612, 1612, 1097, 4187,
	2337, 3489, 3490, 201, 2294, 886, 240, 889, 248, 1677,
	1150, 2381, 2382, 1453, 3325, 241, 4197, 1628, 2383, 880,
	4173, 3605, 4172, 2335, 2322, 2607, 2494, 3636, 1744, 1453,
	1749, 2568, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 1211, 4170, 201, 1763, 3909, 1768, 4169, 1777, 4157,
	4116, 2432, 4115, 3780, 2243, 3779, 3732, 2437, 247, 2569,
	1633, 1632, 3665, 3728, 945, 4468, 2449, 2321, 3598, 3447,
	1969, 2318, 2333, 240, 3205, 4708, 2292, 2379, 2341, 1211,
	3446, 4680, 241, 4470, 3445, 3041, 2605, 3444, 2435, 2467,
	1840, 2816, 2242, 3041, 3400, 2470, 2395, 3161, 3160, 3141,
	3055, 3039, 3130, 2487, 1149, 5170, 3122, 2771, 2362, 3039,
	201, 2975, 1826, 3112, 5115, 1211, 2336, 1211, 2480, 2499,
	3111, 1448, 1448, 3106, 1211, 3105, 3104, 2150, 2150, 1490,
	3086, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
	1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
	1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
	1211, 1211, 1211, 1211, 1211, 1211, 1211, 1731, 1211, 1731,
	1211, 1211, 1211, 1211, 2418, 2417, 2446, 3495, 2459, 2591,
	3085, 2525, 4127, 886, 3046, 889, 2457, 1724, 4489, 2454,
	2962, 2454, 3497, 2451, 2680, 2455, 1211, 1891, 2486, 795,
	1211, 1211, 2772, 2609, 3908, 2463, 2336, 2464, 1211, 1152,
	1428, 1152, 1211, 1448, 1211, 1211, 1471, 1472, 3058, 2815,
	3100, 1151, 1490, 1331, 2416, 1331, 2596, 2637, 1211, 1211,
	1211, 1211, 3729, 1926, 1211, 1211, 1211, 1211, 1211, 1211,
	1211, 1211, 2336, 2606, 1444, 1444, 2116, 1471, 1472, 1884,
	3259, 3906, 5172, 3313, 2294, 2766, 4420, 1793, 2566, 795,
	1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 2144,
	2144, 2515, 2504, 1211, 1714, 4619, 1713, 1329, 3083, 1329,
	1772, 2747, 2748, 1823, 2773, 1333, 2770, 3505, 246, 743,
	2989, 2966, 1490, 1471, 1472, 2747, 2763, 1712, 1672, 1711,
	2548, 1333, 1629, 2579, 4471, 1471, 1472, 1920, 1921, 1922,
	1923, 1925, 1926, 5135, 2147, 2147, 738, 1211, 1490, 2604,
	4430, 1094, 2811, 3904, 2620, 1801, 2292, 2633, 2634, 1449,
	1449, 2587, 2491, 1371, 1801, 3299, 1444, 2582, 248, 4453,
	850, 2857, 2857, 2871, 2293, 2747, 1823, 2512, 2892, 2894,
	3138, 2505, 1881, 5173, 2898, 2595, 2593, 2608, 2601, 1131,
	2594, 1839, 1131, 1131, 2711, 2624, 1685, 1969, 2625, 2626,
	3025, 2330, 2952, 2290, 3633, 4446, 1690, 947, 946, 4439,
	3341, 2098, 2691, 3069, 3137, 2762, 4429, 1854, 247, 3135,
	3133, 1445, 1445, 2695, 1822, 2695, 2965, 4437, 2948, 2607,
	1446, 1446, 1773, 240, 4466, 2559, 4441, 1860, 2286, 1148,
	3373, 2546, 241, 2689, 1820, 2506, 1789, 2248, 2249, 2915,
	3388, 1449, 2703, 1414, 1414, 1858, 1778, 3012, 3057, 2701,
	3767, 4447, 2707, 2923, 3766, 2091, 794, 3765, 3764, 2291,
	201, 2363, 2509, 2503, 4868, 2988, 5063, 3917, 3506, 2372,
	1896, 2775, 1426, 2581, 1328, 5201, 848, 1822, 2991, 3411,
	2605, 5171, 1152, 2513, 1490, 3976, 5175, 5181, 3916, 2287,
	1328, 2760, 1152, 2370, 1098, 4440, 1152, 3068, 1821, 2969,
	3010, 189, 1098, 1445, 3343, 2914, 2553, 2999, 2371, 2677,
	3409, 2456, 1446, 3003, 2866, 2775, 794, 2922, 3013, 2927,
	2853, 2937, 2933, 2934, 1098, 2896, 4843, 3014, 1099, 1442,
	3007, 2987, 2369, 2150, 2904, 2905, 2138, 2138, 1403, 2813,
	2916, 2883, 1299, 2364, 2814, 4748, 2102, 2817, 2551, 2818,
	2819, 4520, 3973, 2089, 3006, 2920, 2921, 1098, 2044, 4171,
	2348, 4154, 1697, 990, 4168, 1836, 4101, 2603, 1327, 3040,
	796, 4088, 942, 3786, 941, 3016, 3778, 4618, 2685, 3387,
	3082, 1490, 4140, 3726, 1327, 1152, 3140, 1403, 3103, 3021,
	3084, 4870, 2769, 3639, 2401, 2400, 5147, 1612, 4215, 2588,
	3354, 3056, 2686, 1447, 1447, 2578, 3047, 2319, 2984, 2687,
	5203, 1414, 3023, 2692, 2293, 3196, 2344, 1695, 5156, 1403,
	1403, 3380, 3381, 3009, 3491, 3492, 3493, 3494, 3496, 3497,
	796, 3015, 1211, 1211, 3974, 1211, 4464, 2606, 5122, 3151,
	2977, 2998, 2993, 2343, 3032, 3001, 5155, 3002, 3008, 5064,
	3024, 2960, 2775, 4331, 4467, 3406, 2036, 2037, 4216, 4330,
	880, 3044, 1414, 4442, 3911, 3787, 3238, 3852, 2351, 3350,
	4443, 3022, 3131, 2358, 2273, 2144, 2294, 1674, 2339, 2274,
	76, 4448, 3088, 3019, 2675, 2325, 3407, 2678, 3101, 3116,
	3412, 5174, 4966, 1612, 2191, 1447, 739, 3073, 77, 3231,
	4670, 1855, 4214, 849, 4138, 3119, 1612, 3784, 1612, 2291,
	5034, 3087, 5035, 2604, 1612, 82, 3357, 1671, 3853, 3282,
	2147, 3273, 4876, 4445, 3102, 1583, 1612, 3108, 3107, 2320,
	3050, 2348, 3110, 3089, 3287, 3060, 3063, 3208, 2674, 2340,
	2393, 4449, 3210, 4954, 3652, 2374, 3246, 5179, 3302, 3303,
	3152, 1414, 1370, 1414, 851, 2580, 91, 5062, 847, 3309,
	3310, 3311, 1597, 3715, 3162, 2511, 1697, 3033, 3034, 3197,
	3198, 3035, 3036, 4898, 3293, 1211, 3094, 3095, 3097, 3098,
	3099, 740, 3109, 3031, 3114, 1852, 3290, 3743, 3121, 3635,
	2352, 886, 3707, 889, 3289, 3128, 2275, 957, 793, 1802,
	3680, 2775, 4749, 3852, 4465, 2373, 2688, 1627, 3145, 3146,
	50, 3144, 113, 3329, 2279, 4747, 2690, 1354, 97, 110,
	1774, 4745, 3236, 3716, 886, 3327, 889, 3328, 3297, 3206,
	2331, 189, 741, 4549, 742, 3304, 3323, 3305, 3041, 2031,
	2273, 5121, 3284, 1211, 2873, 2274, 1633, 3211, 1856, 1211,
	1211, 3242, 3708, 3200, 3061, 3602, 3356, 4615, 3294, 3679,
	2314, 1095, 3322, 5180, 3300, 3277, 3225, 3714, 2329, 2273,
	4744, 4869, 3771, 3235, 2274, 2348, 4444, 3332, 4327, 3334,
	98, 3336, 2547, 3408, 3686, 1341, 2297, 3402, 3353, 2694,
	5145, 2276, 2281, 3410, 2284, 2951, 3706, 4631, 4746, 3268,
	5182, 1343, 3359, 2072, 3361, 1211, 1211, 3278, 2541, 1853,
	2702, 1211, 5000, 3201, 4499, 1731, 1788, 1790, 4454, 4455,
	2315, 5199, 2138, 2076, 1211, 1211, 1597, 1859, 1338, 762,
	1211, 1211, 3362, 3320, 3276, 3364, 1211, 1403, 3257, 4952,
	3688, 3275, 2676, 2508, 2502, 3785, 2298, 1857, 2302, 3331,
	1895, 3333, 1425, 3335, 2757, 3337, 3338, 3199, 2316, 3206,
	3653, 991, 2275, 1981, 2313, 3330, 3452, 5100, 2329, 982,
	2919, 5204, 2079, 2306, 1344, 2932, 2277, 5101, 3347, 1151,
	2279, 1211, 1211, 1211, 4953, 2331, 3989, 1211, 2917, 2076,
	2296, 2275, 1597, 5188, 1597, 3403, 983, 1211, 3355, 1331,
	4614, 1345, 3115, 4561, 3368, 4317, 2077, 4332, 3687, 2279,
	4566, 4657, 4525, 3932, 1211, 1331, 4089, 3379, 2326, 2355,
	1360, 1358, 3371, 2328, 1807, 3692, 4919, 5006, 4936, 2284,
	4567, 2303, 3435, 102, 4792, 3370, 3369, 4139, 2079, 4524,
	4523, 4274, 3840, 1169, 1342, 3616, 2959, 2424, 2069, 1357,
	2620, 3374, 5120, 1329, 2074, 1350, 730, 2276, 2281, 4737,
	4251, 4550, 2323, 3430, 3431, 4028, 3426, 1906, 3434, 1329,
	2192, 3389, 2077, 4228, 4228, 2558, 4328, 1905, 4376, 2353,
	1905, 3590, 2623, 4226, 4226, 3690, 2276, 2281, 2295, 2234,
	2282, 197, 105, 1900, 5209, 109, 2330, 4705, 4801, 3659,
	3155, 967, 4850, 4920, 4275, 4191, 1211, 1211, 1211, 1211,
	4174, 4125, 3401, 4123, 3841, 2075, 1211, 1211, 1211, 3832,
	3655, 1211, 246, 2354, 3247, 3241, 3229, 2450, 972, 3691,
	958, 1211, 1333, 1490, 2444, 157, 4786, 1211, 2438, 1211,
	3545, 3546, 2277, 2307, 2430, 4616, 2409, 1776, 1333, 1080,
	4453, 2408, 3972, 2613, 3553, 1665, 2231, 1362, 802, 4043,
	3062, 4109, 4972, 2910, 3090, 3933, 1490, 3045, 4230, 4230,
	2926, 2277, 248, 4939, 1144, 2560, 2227, 2078, 1333, 4079,
	1905, 1490, 2327, 4277, 1904, 894, 4446, 1904, 4584, 3226,
	4333, 2271, 2492, 1414, 1152, 2284, 1373, 3441, 162, 2913,
	4229, 4229, 3528, 2150, 4765, 4763, 4682, 1490, 3671, 3667,
	2308, 2309, 901, 3666, 202, 3394, 3372, 1414, 3547, 2278,
	4056, 3550, 247, 3549, 2284, 1414, 984, 985, 2484, 3618,
	1830, 1829, 5099, 2229, 4080, 2473, 2304, 240, 3570, 2406,
	2912, 1824, 4447, 2078, 4083, 2911, 241, 1211, 2958, 2957,
	198, 2269, 2956, 2955, 4564, 2954, 2282, 1906, 1706, 1211,
	1906, 4081, 1720, 4078, 4234, 4029, 3584, 3597, 3233, 1081,
	2283, 1339, 1707, 1718, 201, 1149, 4030, 1414, 4334, 2230,
	3641, 3654, 3555, 2150, 2305, 2282, 3557, 1904, 1981, 4377,
	989, 3612, 4863, 4694, 2257, 2270, 2614, 4224, 4540, 3066,
	1211, 1328, 3579, 3643, 3644, 4247, 2283, 4921, 4131, 2448,
	3794, 3620, 4767, 5208, 3622, 3623, 1414, 1328, 2368, 3626,
	3704, 3627, 1442, 3628, 3642, 3669, 1340, 3624, 3673, 3588,
	3592, 3593, 3594, 3595, 3583, 1414, 3539, 1414, 3631, 3718,
	4785, 3720, 3576, 3091, 3092, 2144, 5142, 1328, 3554, 3670,
	3637, 3556, 3675, 1211, 1211, 3677, 3568, 2347, 968, 969,
	3552, 1490, 3571, 3572, 2347, 4110, 3523, 3524, 3525, 4120,
	4668, 841, 1414, 3574, 4666, 3575, 3754, 3204, 3900, 3615,
	4227, 4227, 3656, 1808, 1080, 2278, 3600, 4766, 3731, 4424,
	2147, 3298, 1414, 3209, 3207, 1327, 3769, 2477, 2378, 3746,
	1782, 3748, 4695, 3603, 3752, 4690, 3701, 842, 3758, 1144,
	2310, 1327, 4978, 3569, 2278, 3744, 4864, 1597, 1597, 1086,
	1085, 4689, 3683, 4423, 1612, 2144, 3591, 4986, 4969, 4677,
	4383, 986, 987, 3724, 4045, 3625, 2782, 1414, 1612, 3697,
	1612, 1327, 895, 896, 1490, 3632, 4406, 4658, 3621, 1877,
	5146, 880, 1612, 5008, 4442, 801, 5144, 5083, 4894, 1879,
	4884, 4443, 3727, 4664, 1612, 3640, 1082, 4637, 4417, 4375,
	2147, 4751, 4448, 4082, 4233, 1876, 1414, 1874, 4678, 3214,
	3833, 3719, 3217, 3662, 3219, 3520, 3609, 3610, 4422, 3611,
	2311, 3948, 3804, 1333, 1848, 3824, 1597, 3848, 3689, 2256,
	3901, 3705, 3741, 3898, 1081, 4979, 3789, 3733, 3792, 4865,
	1846, 3788, 1719, 1818, 4445, 1612, 3613, 3483, 2435, 3710,
	3413, 3230, 1816, 1717, 2366, 3713, 1814, 1612, 3846, 1612,
	3287, 3264, 4449, 3129, 3264, 3123, 3080, 4121, 2986, 3287,
	988, 2583, 2483, 2468, 3868, 3775, 3736, 2109, 2105, 3831,
	1880, 1757, 3742, 1812, 3521, 3928, 1810, 3927, 3919, 1900,
	3651, 3755, 3857, 970, 971, 3345, 3711, 2550, 3344, 1804,
	3712, 3905, 3110, 3762, 2574, 3776, 3839, 2517, 1798, 1796,
	1716, 3770, 3319, 3314, 1490, 3312, 3307, 1490, 2602, 1835,
	2387, 2520, 2138, 898, 897, 2501, 1083, 2429, 2407, 2781,
	2180, 3703, 2178, 3777, 2014, 1771, 3842, 1689, 1605, 5055,
	3847, 4500, 4178, 3896, 3781, 886, 4177, 889, 3339, 4504,
	3717, 1211, 3088, 1096, 1084, 3920, 4484, 1211, 1211, 1160,
	4968, 1211, 1211, 1211, 3745, 1211, 3796, 4582, 4509, 3849,
	4497, 4435, 3894, 3829, 1211, 2150, 3827, 1660, 3899, 189,
	189, 3828, 1878, 1211, 1086, 1085, 4406, 3753, 1211, 2072,
	899, 900, 1328, 4434, 1490, 1403, 4273, 4444, 1875, 4264,
	1873, 4194, 2138, 1211, 4175, 3907, 3854, 3768, 1087, 3897,
	3926, 1490, 4146, 3866, 3867, 3863, 3561, 1847, 4144, 4122,
	3835, 2150, 2150, 1211, 1211, 3925, 1211, 1211, 1211, 3830,
	1739, 1082, 3820, 1845, 3923, 3260, 1817, 3252, 4577, 4454,
	4455, 3245, 3237, 3929, 1211, 1815, 1754, 3222, 1211, 1813,
	2150, 2150, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
	1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211, 1211,
	1211, 1211, 3951, 1211, 3934, 2076, 1811, 3961, 3962, 1809,
	3856, 1211, 1211, 2150, 2549, 3913, 1327, 3914, 1211, 3915,
	1152, 2576, 1803, 4001, 2516, 4002, 3221, 2575, 3202, 1211,
	1597, 1797, 1795, 1715, 3005, 3931, 1783, 2386, 3000, 2405,
	1333, 1333, 2403, 2380, 1211, 3562, 2349, 2144, 2312, 1101,
	1103, 1105, 2299, 2285, 2079, 4912, 2213, 2210, 2207, 2204,
	2199, 2197, 2193, 2184, 5118, 3969, 3845, 3756, 5113, 5039,
	2074, 2122, 2358, 3392, 1308, 4566, 1490, 5136, 2235, 1909,
	3958, 2223, 2224, 4075, 4862, 3365, 1331, 3956, 2077, 1414,
	1414, 1083, 2147, 2144, 2144, 4567, 3363, 3560, 3567, 4040,
	3968, 1309, 1331, 3195, 1414, 1414, 5020, 880, 1414, 2586,
	4904, 3984, 3991, 3975, 3977, 3978, 4930, 4598, 4516, 1084,
	4421, 3288, 2144, 2144, 4905, 3638, 3999, 1211, 2252, 1670,
	4000, 2075, 1331, 3566, 3041, 4803, 4062, 3041, 2147, 2147,
	1329, 4006, 4032, 3067, 4004, 4796, 4285, 2507, 4047, 2294,
	3039, 2633, 3992, 3064, 1211, 2144, 1329, 2584, 4906, 4041,
	1394, 189, 2544, 4086, 4087, 1871, 1872, 2147, 2147, 2447,
	2539, 1393, 3393, 1087, 4052, 4053, 5019, 4033, 4099, 4100,
	2633, 4007, 4106, 2514, 4475, 4511, 1329, 1211, 1211, 3757,
	3159, 4049, 4050, 1910, 4107, 1916, 1917, 3158, 4108, 3157,
	2147, 3156, 1794, 4822, 2585, 1464, 3071, 4692, 2222, 1328,
	1328, 4384, 3979, 4036, 4362, 1310, 3684, 1916, 1917, 3072,
	3093, 1913, 1421, 1211, 1211, 4908, 1361, 1919, 5130, 1461,
	5091, 1211, 4190, 3220, 274, 3998, 4126, 4064, 4261, 2431,
	3072, 1432, 3136, 3563, 3564, 3565, 4145, 3134, 4147, 4907,
	3125, 1612, 1612, 3143, 1612, 3074, 4189, 1851, 1394, 2078,
	1394, 3127, 1612, 1918, 4065, 1612, 3076, 4909, 4159, 4102,
	1414, 886, 4977, 889, 4212, 3126, 833, 4959, 2116, 4929,
	3075, 4923, 727, 4861, 1142, 1918, 1080, 1488, 4787, 4758,
	4164, 4166, 4669, 4271, 2138, 2150, 4263, 4250, 4072, 3834,
	3267, 2897, 2219, 1327, 1327, 2131, 5176, 4691, 5010, 4163,
	3113, 1144, 4186, 5011, 1625, 1624, 4180, 1145, 3601, 1617,
	2368, 4193, 4202, 5207, 5010, 1618, 3489, 3490, 4270, 5011,
	4192, 1916, 1917, 4151, 5149, 4925, 4220, 1612, 2263, 3027,
	2138, 2138, 4156, 1211, 4217, 4218, 1616, 2262, 3026, 1618,
	1781, 1333, 1211, 4354, 4287, 3088, 1780, 2777, 4091, 1143,
	4243, 1612, 3348, 2812, 2263, 2262, 1612, 1612, 1612, 2138,
	2138, 4788, 4095, 4730, 4278, 4203, 4204, 4205, 4206, 1850,
	4513, 4293, 1849, 4508, 3273, 4257, 4507, 4232, 4350, 1612,
	4324, 1612, 4090, 3980, 4295, 3750, 3747, 4222, 3287, 3351,
	4231, 1490, 2138, 4199, 4279, 4282, 1081, 3152, 2008, 2007,
	3367, 2590, 5192, 3693, 3694, 5157, 3695, 4249, 5025, 1403,
	4245, 4963, 4962, 4961, 4893, 4210, 4281, 4892, 4839, 1490,
	4221, 4761, 1211, 1211, 4722, 4661, 4299, 2144, 1211, 1211,
	2150, 4655, 4557, 1211, 1211, 4258, 1211, 1331, 4537, 4473,
	4412, 1211, 4298, 4291, 4237, 4213, 4142, 4313, 4134, 3838,
	3837, 3676, 1211, 3619, 3737, 3738, 4262, 3739, 3352, 3342,
	4311, 3318, 4265, 3317, 4236, 4314, 3316, 3315, 1211, 3251,
	3224, 3223, 2147, 3065, 2996, 4280, 4288, 2990, 2979, 2978,
	2967, 2706, 4283, 2577, 2545, 3662, 2538, 4289, 1994, 4297,
	2537, 1329, 1999, 2435, 2536, 4312, 4296, 4335, 2535, 2534,
	4267, 2445, 2419, 2415, 2414, 2413, 2412, 2411, 2187, 2186,
	1328, 2185, 2183, 2121, 2120, 1870, 1869, 4348, 4319, 4910,
	4320, 4321, 1805, 1684, 1683, 4911, 1682, 4344, 1681, 1333,
	1680, 4315, 1679, 1678, 1673, 1669, 4329, 1333, 1667, 1666,
	1602, 1490, 1490, 1601, 1490, 4211, 1086, 1085, 1600, 1481,
	1480, 1333, 1479, 1478, 1477, 1424, 1380, 1379, 1378, 1377,
	4336, 1376, 1612, 1612, 1375, 1374, 1372, 1367, 1366, 1365,
	1364, 1363, 2144, 956, 8, 1490, 1291, 2225, 1107, 4389,
	1093, 4867, 4452, 4451, 4450, 2573, 96, 1675, 918, 90,
	2356, 4323, 4141, 1082, 1057, 5007, 4897, 1658, 926, 4988,
	1211, 4259, 3678, 3164, 1327, 2519, 1806, 2521, 4407, 4408,
	3578, 1333, 2939, 1333, 4951, 4358, 3451, 2147, 4374, 4829,
	4630, 2780, 2012, 3532, 92, 1195, 1241, 4548, 4410, 4547,
	4425, 4426, 4436, 4128, 3807, 4544, 4543, 2135, 1414, 1323,
	2137, 4416, 4483, 1159, 4419, 1493, 5033, 2236, 1490, 5198,
	1414, 1201, 2250, 1414, 4492, 2245, 4462, 4495, 4463, 4476,
	4381, 2980, 189, 4385, 2856, 1211, 4388, 1218, 1490, 4391,
	1215, 4390, 2139, 2141, 2138, 1217, 1216, 4479, 4480, 4398,
	4397, 4401, 4392, 4394, 4477, 2140, 276, 276, 729, 4386,
	4387, 4428, 2032, 1214, 2134, 4269, 4431, 3271, 1328, 3864,
	283, 1725, 1723, 1059, 2240, 4433, 1328, 3583, 4405, 4512,
	4418, 4514, 2700, 2764, 1612, 1612, 3440, 2005, 1175, 1197,
	1328, 4427, 2761, 1083, 1331, 1331, 1355, 1186, 1174, 2465,
	3558, 3537, 3851, 4071, 2612, 936, 3486, 2767, 1346, 2880,
	2872, 2868, 1414, 3629, 3261, 1886, 4568, 2479, 2481, 1141,
	4498, 1084, 4478, 4644, 1490, 4541, 2108, 1983, 3272, 1612,
	1882, 2485, 1458, 1179, 2698, 1996, 1403, 4459, 3418, 4459,
	2622, 4515, 3858, 2493, 3581, 2496, 2497, 2498, 1329, 1329,
	1328, 2973, 1328, 4536, 4535, 1612, 1612, 1612, 1612, 1612,
	1612, 1612, 1327, 4538, 5013, 3988, 4585, 4569, 3349, 4496,
	1327, 2423, 1307, 1306, 1353, 1087, 4528, 1305, 1490, 4506,
	4994, 4518, 4991, 4519, 1327, 4534, 4527, 2346, 4526, 2138,
	1211, 1211, 1211, 4551, 4574, 3802, 4586, 3803, 2228, 3020,
	2710, 3821, 1191, 4546, 4542, 4493, 2435, 1219, 1490, 1596,
	4554, 2565, 4560, 1211, 4558, 4553, 1211, 1211, 3921, 3543,
	4248, 1686, 4589, 4699, 4603, 4594, 1211, 1203, 4607, 2150,
	1403, 1968, 3191, 3190, 1211, 1211, 4587, 4856, 1443, 1441,
	1440, 1439, 5166, 3154, 1327, 2359, 1327, 4137, 4609, 4136,
	2254, 1490, 4135, 1612, 281, 281, 281, 4600, 733, 734,
	245, 749, 733, 749, 760, 4580, 4622, 800, 1414, 4601,
	3386, 820, 1907, 1173, 1899, 242, 827, 827, 827, 244,
	243, 4610, 3682, 4611, 4076, 281, 4617, 3587, 5089, 4627,
	1490, 4161, 4482, 3793, 24, 834, 835, 836, 1211, 4571,
	3030, 2255, 1460, 4112, 830, 4491, 963, 23, 4494, 22,
	21, 1211, 119, 281, 43, 20, 161, 159, 136, 156,
	1211, 155, 128, 154, 153, 2150, 4639, 152, 151, 150,
	158, 149, 148, 143, 147, 1211, 4633, 146, 1211, 145,
	144, 142, 4663, 4672, 140, 4673, 4650, 4651, 141, 135,
	139, 138, 1211, 137, 134, 1211, 133, 132, 131, 130,
	129, 127, 1490, 4702, 160, 126, 125, 124, 123, 1211,
	1211, 2144, 1414, 122, 121, 4653, 4741, 4654, 120, 813,
	814, 62, 1612, 1612, 1612, 61, 118, 4671, 116, 117,
	4674, 19, 2283, 41, 14, 66, 4681, 67, 18, 13,
	36, 95, 108, 1333, 107, 1331, 106, 37, 104, 4713,
	4714, 4750, 103, 35, 17, 16, 2147, 15, 4735, 101,
	100, 99, 34, 32, 11, 9, 38, 4760, 2398, 4721,
	4764, 4776, 2093, 1490, 12, 5, 1612, 194, 193, 196,
	4723, 192, 4724, 4731, 3804, 4733, 4768, 4734, 733, 733,
	4771, 4755, 4756, 195, 94, 191, 281, 4719, 190, 1329,
	4738, 4739, 4732, 93, 30, 10, 186, 2144, 4777, 4725,
	4255, 1211, 1211, 4797, 85, 188, 187, 4753, 4752, 185,
	4806, 184, 4808, 183, 86, 4780, 4802, 4762, 1211, 2150,
	4757, 83, 182, 89, 181, 84, 88, 87, 4784, 4775,
	28, 6, 4800, 4798, 65, 7, 4612, 3902, 111, 112,
	1414, 39, 2147, 1414, 81, 1414, 1414, 80, 79, 78,
	27, 64, 26, 178, 226, 4711, 4799, 225, 4804, 224,
	223, 222, 4805, 4266, 1211, 4589, 1211, 221, 1211, 220,
	219, 214, 218, 216, 215, 217, 213, 4810, 1333, 236,
	235, 229, 4818, 4819, 228, 234, 233, 4742, 4849, 4459,
	4851, 1211, 4817, 1333, 232, 231, 230, 227, 4821, 239,
	74, 212, 1328, 211, 4794, 210, 208, 204, 207, 209,
	206, 205, 203, 238, 4838, 237, 4827, 4840, 75, 4841,
	4842, 176, 177, 1331, 73, 175, 174, 173, 172, 171,
	4316, 1331, 170, 169, 4848, 72, 4879, 4847, 180, 179,
	25, 2, 1, 4844, 4878, 1331, 0, 0, 2138, 0,
	1333, 1333, 0, 0, 0, 4871, 0, 0, 0, 4872,
	4900, 2144, 0, 0, 1211, 0, 0, 0, 0, 0,
	0, 1333, 0, 4902, 1333, 2704, 0, 1329, 1612, 0,
	0, 0, 1597, 0, 0, 1329, 4887, 4740, 1612, 0,
	0, 1994, 0, 4915, 4916, 0, 1327, 0, 4888, 1329,
	0, 4895, 0, 1211, 1211, 1331, 2147, 1331, 0, 0,
	4889, 0, 0, 1211, 4933, 0, 0, 4935, 0, 0,
	4913, 0, 0, 0, 0, 0, 0, 4927, 4926, 4924,
	0, 4780, 0, 0, 4459, 4932, 0, 0, 4947, 2636,
	4948, 4943, 4941, 0, 2138, 4940, 2879, 1328, 4944, 4459,
	4946, 0, 0, 0, 0, 0, 0, 3153, 4945, 1329,
	4964, 1329, 1328, 1211, 1211, 4956, 0, 1211, 0, 4960,
	0, 1612, 1414, 0, 0, 1414, 0, 0, 0, 0,
	0, 0, 4985, 4965, 4955, 4993, 4996, 0, 4967, 0,
	0, 5012, 0, 0, 4975, 4976, 0, 0, 0, 1403,
	0, 0, 0, 5016, 5009, 4984, 4459, 4459, 4983, 0,
	0, 0, 0, 0, 0, 0, 5015, 0, 0, 1328,
	1328, 1384, 5002, 1384, 1384, 0, 0, 4459, 5038, 0,
	4459, 0, 2778, 1211, 1211, 1211, 0, 0, 0, 5003,
	1328, 1327, 0, 1328, 4997, 0, 5004, 0, 5001, 5005,
	0, 0, 0, 5021, 0, 4998, 1327, 0, 5036, 0,
	0, 5026, 0, 5029, 0, 0, 0, 0, 5037, 0,
	1211, 0, 5070, 0, 3301, 0, 0, 0, 0, 5075,
	5053, 5050, 5051, 0, 5052, 0, 3308, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 1595, 0, 0, 2283, 0, 5097, 5071, 2138, 5072,
	5096, 5098, 4502, 1327, 1327, 0, 0, 5104, 1173, 1173,
	1173, 0, 0, 5088, 5106, 0, 5086, 1211, 2949, 0,
	0, 0, 0, 0, 1327, 1414, 0, 1327, 5103, 4760,
	0, 5102, 5119, 0, 5073, 0, 0, 0, 0, 5112,
	0, 0, 5110, 5116, 0, 0, 5137, 1574, 0, 5125,
	5126, 0, 0, 0, 5129, 5085, 5128, 5133, 5087, 5131,
	5111, 0, 0, 1348, 0, 0, 0, 0, 0, 4556,
	5141, 0, 4993, 5140, 5143, 4996, 1333, 5139, 1333, 5152,
	0, 5153, 4570, 0, 5159, 5151, 0, 5148, 5160, 5162,
	1740, 1741, 5150, 5158, 0, 0, 5154, 1369, 0, 5127,
	5015, 5168, 0, 0, 0, 4593, 0, 0, 0, 281,
	0, 281, 281, 0, 1398, 281, 1408, 1414, 0, 5161,
	0, 5163, 0, 0, 5183, 5167, 5184, 1422, 0, 0,
	5191, 0, 0, 0, 0, 820, 5190, 0, 820, 5193,
	0, 0, 0, 5194, 0, 0, 0, 1211, 1211, 5202,
	5189, 0, 0, 5200, 0, 0, 1211, 1211, 0, 0,
	5196, 827, 5205, 0, 3029, 5216, 5210, 0, 0, 0,
	0, 0, 5221, 5218, 5220, 0, 3273, 5224, 5226, 5225,
	5214, 5222, 0, 281, 0, 281, 281, 1398, 5217, 281,
	281, 5187, 5219, 5230, 1414, 5231, 5235, 1408, 5234, 1861,
	5238, 5236, 0, 0, 5232, 5233, 3273, 5229, 5223, 0,
	0, 281, 0, 1636, 1211, 5241, 0, 1331, 5245, 0,
	5247, 5238, 5249, 0, 0, 0, 0, 0, 0, 1656,
	0, 5242, 4459, 0, 4459, 0, 1663, 5211, 5212, 5244,
	5213, 4667, 0, 0, 0, 1328, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 1688, 0, 0, 1408, 0,
	0, 0, 281, 281, 0, 1398, 0, 0, 0, 0,
	0, 1329, 0, 0, 0, 0, 2617, 0, 3415, 3416,
	0, 0, 0, 0, 0, 0, 820, 0, 281, 281,
	0, 0, 0, 0, 0, 5246, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 963, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 1916, 1917, 0, 0,
	0, 0, 0, 0, 3890, 0, 0, 0, 0, 1327,
	0, 1327, 0, 0, 0, 0, 0, 3888, 0, 0,
	1947, 0, 76, 0, 954, 953, 0, 3881, 1919, 1916,
	1917, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 1947, 0, 1972, 0, 82, 0, 0,
	0, 1919, 0, 0, 1918, 0, 2879, 281, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 1329, 0, 1972, 0,
	0, 281, 2874, 0, 0, 0, 0, 1918, 91, 0,
	0, 1329, 0, 0, 1331, 1331, 0, 0, 0, 0,
	0, 0, 3892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2103, 1331, 0, 0, 1331, 3883,
	3513, 3514, 3515, 3516, 0, 0, 0, 0, 0, 957,
	2114, 0, 1595, 0, 3882, 0, 0, 2879, 2879, 0,
	0, 0, 50, 0, 113, 0, 0, 0, 1329, 1329,
	97, 110, 1941, 1942, 1943, 1944, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 1329,
	0, 3890, 1329, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 1595, 0, 3888, 0, 1574, 0, 0, 0,
	3891, 0, 0, 0, 3881, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4885, 0, 0, 0,
	0, 0, 98, 1946, 1948, 3489, 3490, 0, 3507, 3508,
	3509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3879, 0, 0, 0, 0, 0, 4899, 4340, 1933,
	1934, 0, 0, 0, 0, 0, 1946, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4931, 0, 0, 0,
	3489, 3490, 1939, 3507, 3508, 3509, 0, 0, 0, 3892,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 0, 3953, 3504, 0, 3883, 0, 0, 0,
	0, 0, 1173, 0, 0, 1939, 281, 0, 281, 0,
	1574, 3882, 281, 0, 0, 0, 0, 0, 0, 2879,
	2879, 2879, 2879, 0, 0, 1636, 1398, 2113, 281, 0,
	281, 2119, 0, 0, 3772, 0, 0, 0, 281, 0,
	749, 0, 0, 0, 0, 281, 0, 0, 0, 3504,
	0, 0, 1969, 0, 0, 3889, 3884, 3885, 3886, 3887,
	0, 2188, 3797, 0, 0, 102, 0, 3891, 0, 0,
	0, 0, 0, 281, 3825, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 3495, 0, 0, 3893, 0, 0, 0, 0, 0,
	0, 0, 5022, 0, 0, 0, 0, 0, 5024, 0,
	1945, 0, 0, 820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 105, 3871, 0, 109, 0, 0,
	1331, 0, 1331, 1940, 0, 0, 0, 3895, 0, 0,
	0, 0, 0, 0, 0, 0, 3495, 0, 0, 0,
	0, 827, 0, 827, 246, 0, 0, 0, 0, 3511,
	0, 0, 958, 827, 827, 0, 1940, 157, 0, 0,
	0, 0, 0, 3544, 0, 2421, 0, 0, 0, 2428,
	0, 0, 0, 0, 1329, 0, 1329, 0, 1574, 0,
	0, 2441, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 3505, 0, 0, 248, 0, 3573, 2453, 0, 2453,
	0, 0, 0, 0, 3511, 2460, 0, 0, 0, 0,
	0, 3586, 0, 0, 0, 0, 0, 1971, 0, 0,
	162, 0, 3889, 3884, 3885, 3886, 3887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 3607, 0, 0,
	0, 0, 0, 0, 247, 0, 3505, 0, 0, 0,
	0, 2428, 0, 0, 2489, 0, 0, 0, 0, 240,
	0, 3893, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 1969, 198, 1936, 1932, 2510, 1929, 1927, 1928, 1920,
	1921, 1922, 1923, 1925, 1926, 0, 0, 0, 0, 2526,
	0, 2528, 0, 2530, 0, 2532, 952, 2533, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 281, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 3376, 0, 0, 0, 3944, 3945, 0, 0,
	0, 0, 2562, 2563, 2564, 0, 0, 0, 0, 0,
	0, 0, 3506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 281, 0, 0,
	0, 733, 0, 281, 0, 0, 0, 3506, 0, 0,
	0, 0, 0, 2874, 2874, 820, 0, 0, 0, 963,
	0, 0, 0, 0, 0, 0, 4008, 4009, 4010, 4011,
	4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021,
	4022, 4023, 4024, 4025, 4026, 4027, 0, 4031, 0, 281,
	0, 1398, 281, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	0, 0, 0, 281, 3586, 0, 0, 0, 0, 0,
	0, 2518, 0, 0, 0, 0, 281, 281, 0, 281,
	0, 281, 0, 281, 0, 281, 0, 0, 3501, 3502,
	3503, 0, 0, 0, 0, 3500, 3498, 3499, 3491, 3492,
	3493, 3494, 3496, 3497, 0, 0, 0, 0, 0, 0,
	2555, 0, 0, 2556, 0, 2557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2879, 2879, 0, 0, 0,
	281, 281, 281, 281, 0, 0, 0, 0, 1916, 1917,
	0, 0, 1574, 3501, 3502, 3503, 0, 0, 0, 0,
	3500, 3498, 3499, 3491, 3492, 3493, 3494, 3496, 3497, 800,
	0, 0, 1947, 820, 0, 0, 0, 0, 0, 0,
	1919, 0, 0, 0, 2946, 0, 0, 0, 0, 0,
	0, 4200, 4201, 0, 0, 2874, 2874, 2874, 2874, 0,
	0, 0, 4207, 0, 0, 4208, 0, 1972, 0, 0,
	0, 0, 0, 0, 3922, 0, 1918, 1488, 0, 0,
	0, 0, 1574, 0, 0, 2879, 2879, 2879, 2879, 2879,
	2879, 2879, 2879, 2879, 2879, 2879, 2879, 2879, 2879, 2879,
	2879, 2879, 2879, 2879, 2879, 0, 2879, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2712, 0, 0, 0,
	2997, 1916, 1917, 1384, 0, 0, 0, 1384, 0, 1384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3965, 1947, 2441, 0, 0, 0,
	0, 4294, 0, 1919, 0, 0, 2479, 4300, 4301, 0,
	0, 3981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 1916, 1917, 0, 733, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1938, 0, 281, 0, 0, 0, 0, 0, 1947, 1935,
	0, 733, 0, 0, 0, 0, 1919, 0, 281, 0,
	733, 0, 0, 0, 0, 1946, 1948, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1574, 0, 0, 0, 0, 0,
	0, 0, 1918, 281, 1408, 0, 0, 3489, 3490, 0,
	3507, 3508, 3509, 1938, 0, 4339, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 1595,
	3952, 0, 0, 0, 1939, 0, 0, 1941, 1942, 1943,
	1944, 2428, 2428, 0, 0, 0, 4074, 1924, 0, 0,
	0, 0, 281, 1408, 0, 0, 749, 0, 749, 0,
	0, 0, 2995, 0, 0, 0, 0, 0, 281, 0,
	0, 281, 0, 0, 0, 281, 0, 281, 3947, 0,
	0, 0, 1398, 0, 281, 281, 3504, 1408, 1408, 3011,
	0, 1574, 0, 0, 281, 0, 0, 0, 1946, 1948,
	1941, 1942, 1943, 1944, 0, 0, 0, 2428, 0, 0,
	1924, 0, 4403, 4404, 1969, 0, 2441, 0, 0, 0,
	0, 0, 0, 0, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 827,
	0, 0, 827, 827, 0, 0, 0, 0, 0, 0,
	0, 3054, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 1946, 1948, 281, 0, 0, 0, 0, 0, 0,
	0, 3306, 0, 0, 76, 0, 0, 281, 0, 0,
	0, 0, 0, 3495, 0, 0, 0, 1933, 1934, 0,
	281, 3321, 77, 3324, 0, 1940, 0, 0, 0, 0,
	0, 820, 0, 0, 0, 0, 0, 0, 0, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 1969, 0, 281,
	281, 3149, 1636, 0, 0, 0, 0, 0, 0, 0,
	91, 3511, 0, 0, 0, 0, 1971, 0, 3358, 1595,
	3360, 1595, 0, 0, 2479, 0, 0, 3366, 0, 0,
	0, 0, 0, 0, 281, 3212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 957, 0, 3505, 0, 1945, 0, 0, 0, 0,
	1969, 0, 1636, 1384, 0, 281, 113, 281, 0, 0,
	0, 3395, 97, 110, 281, 0, 0, 0, 1940, 0,
	0, 2874, 2874, 0, 3256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3054, 4602, 733, 4604, 4605, 4606,
	0, 4608, 0, 0, 0, 3149, 963, 3054, 0, 1927,
	1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 1969, 98, 0, 0, 0, 0, 1971,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 281,
	1398, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 281, 0, 0, 1398, 0, 1398, 0, 1398,
	0, 2874, 2874, 2874, 2874, 2874, 2874, 2874, 2874, 2874,
	2874, 2874, 2874, 2874, 2874, 2874, 2874, 2874, 2874, 2874,
	2874, 0, 2874, 4656, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3506, 0, 281, 281, 281, 281,
	1398, 0, 0, 1398, 0, 281, 0, 0, 1936, 1932,
	281, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926,
	0, 0, 0, 0, 1916, 1917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 2970, 1947, 281,
	4636, 0, 0, 0, 0, 0, 1919, 0, 0, 0,
	0, 0, 0, 0, 4396, 0, 0, 102, 0, 0,
	0, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 1918, 3489, 3490, 4414, 3507, 3508, 3509, 0,
	0, 0, 4754, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4684, 0, 0, 197, 105, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3501, 3502, 3503, 0, 0, 0, 0, 3500, 3498, 3499,
	3491, 3492, 3493, 3494, 3496, 3497, 246, 0, 0, 0,
	0, 0, 0, 0, 958, 0, 0, 0, 3942, 157,
	0, 0, 3504, 0, 0, 1636, 0, 0, 0, 3596,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	1941, 1942, 1943, 1944, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	1384, 0, 0, 0, 1595, 1595, 0, 0, 0, 0,
	0, 1574, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 2879,
	0, 1946, 1948, 0, 0, 0, 247, 1574, 0, 0,
	3645, 0, 0, 0, 0, 0, 0, 0, 0, 3495,
	0, 240, 0, 0, 0, 0, 0, 1933, 1934, 0,
	241, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 3700, 3702, 0, 0, 2441, 0, 201, 1173,
	1939, 0, 4826, 0, 0, 0, 0, 0, 0, 281,
	0, 2879, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	733, 0, 0, 0, 0, 733, 0, 0, 733, 0,
	0, 733, 733, 0, 0, 0, 0, 733, 4628, 0,
	4855, 0, 0, 0, 0, 281, 0, 1916, 1917, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 2479, 3505,
	0, 0, 0, 0, 0, 4877, 0, 0, 0, 0,
	1969, 1947, 0, 0, 0, 0, 0, 0, 0, 1919,
	0, 4628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 281, 281, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 1918, 0, 0, 0, 0,
	2636, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	3822, 0, 0, 0, 3826, 0, 3054, 3054, 281, 1969,
	3649, 2113, 0, 0, 0, 0, 0, 3054, 0, 2119,
	0, 1940, 0, 0, 0, 0, 0, 0, 3054, 2119,
	0, 3054, 2119, 1916, 1917, 2119, 0, 0, 3649, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	281, 281, 2113, 0, 281, 0, 0, 1947, 0, 0,
	0, 2879, 2636, 0, 0, 1919, 0, 0, 0, 0,
	0, 2113, 0, 281, 0, 3723, 3723, 0, 0, 0,
	1398, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	3506, 0, 1972, 1924, 0, 0, 0, 0, 0, 0,
	0, 1918, 3054, 0, 3054, 0, 3751, 3054, 2113, 2879,
	0, 3054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3924, 0, 1595, 2113, 0,
	0, 820, 0, 0, 2879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1398, 3937, 0, 0, 0, 0, 0,
	281, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 0, 1574, 0, 0, 1574, 281, 0,
	3798, 0, 0, 0, 3800, 3054, 0, 0, 281, 0,
	0, 0, 281, 1939, 0, 1408, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 3256, 0, 0, 1398, 0,
	281, 0, 0, 3054, 0, 733, 3501, 3502, 3503, 0,
	0, 0, 3054, 3500, 3498, 3499, 3491, 3492, 3493, 3494,
	3496, 3497, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1948, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3912, 0, 0, 0, 0, 0,
	0, 0, 1916, 1917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3918, 0, 0, 0, 1636, 1939,
	0, 0, 1398, 281, 0, 281, 1947, 0, 0, 0,
	0, 1398, 0, 0, 1919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 281, 0, 1940, 0, 0, 0, 0, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 2874, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 1916, 1917, 0, 1949,
	1950, 1951, 1960, 1961, 1962, 0, 1574, 0, 0, 0,
	3986, 0, 0, 0, 0, 1971, 0, 76, 0, 1953,
	1947, 0, 0, 0, 0, 0, 0, 0, 1919, 0,
	0, 0, 0, 0, 0, 77, 3941, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 2874, 0, 0,
	0, 0, 82, 0, 0, 1972, 0, 0, 1941, 1942,
	1943, 1944, 0, 0, 1918, 0, 0, 0, 1924, 0,
	1940, 0, 0, 0, 1952, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 281, 1928,
	1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0, 1946,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 733, 733, 957, 0, 0, 0, 0, 0,
	2441, 0, 0, 0, 0, 1933, 1934, 50, 0, 113,
	0, 0, 0, 0, 0, 97, 110, 0, 0, 2441,
	0, 0, 1941, 1942, 1943, 1944, 0, 0, 0, 0,
	4244, 0, 1924, 0, 281, 0, 0, 0, 1939, 0,
	4254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2441, 0, 0, 0, 0,
	4272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 1967, 98, 0, 0,
	0, 0, 0, 1946, 1948, 0, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 2874, 0, 0,
	1963, 0, 1964, 0, 0, 0, 0, 0, 0, 1933,
	1934, 0, 0, 0, 0, 0, 820, 0, 1969, 0,
	0, 0, 0, 0, 4318, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 0, 0, 2874, 0, 0, 0, 3723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	2874, 0, 0, 0, 0, 0, 1945, 3149, 0, 0,
	0, 0, 820, 820, 820, 820, 0, 0, 0, 0,
	1965, 1574, 0, 1952, 0, 0, 2113, 0, 281, 1940,
	0, 0, 749, 749, 1408, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 281, 0, 1574,
	0, 0, 1969, 0, 0, 0, 0, 0, 281, 3256,
	102, 0, 3256, 2119, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 281, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3054, 281, 0,
	1945, 0, 0, 0, 0, 0, 0, 3149, 197, 105,
	963, 3054, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 281, 0, 0, 0, 0, 958, 0, 0,
	0, 1958, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 1574, 0, 1574, 0, 0, 0, 0, 1936,
	1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 0, 0, 1952, 1971, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 4481, 1574, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2441, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	1173, 0, 0, 4359, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 1952, 0, 0, 0, 0, 247,
	1952, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 1956,
	0, 0, 0, 241, 0, 0, 0, 198, 1574, 1930,
	1931, 1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920,
	1921, 1922, 1923, 1925, 1926, 0, 281, 0, 1574, 0,
	4974, 1736, 1636, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2441, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 4581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1408,
	0, 281, 1408, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3054, 3054, 0, 3649, 1952, 0, 3723,
	3054, 0, 1952, 0, 0, 0, 0, 0, 4461, 0,
	4461, 1636, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 3054, 0, 2119, 0, 0, 168, 3649, 0,
	1636, 1636, 281, 2113, 0, 0, 76, 0, 47, 46,
	0, 0, 0, 0, 0, 0, 2113, 0, 281, 2113,
	0, 281, 0, 3723, 77, 1916, 1917, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1574, 0,
	0, 82, 3054, 1952, 3054, 281, 0, 0, 0, 1947,
	0, 0, 68, 0, 0, 0, 0, 1919, 0, 49,
	0, 165, 0, 0, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 0, 91, 0, 1972, 0, 0, 0, 3054, 3054,
	0, 0, 0, 1918, 3256, 3256, 0, 0, 0, 4686,
	0, 3649, 0, 0, 1938, 0, 0, 0, 0, 51,
	69, 1574, 281, 1935, 0, 0, 0, 0, 52, 0,
	0, 0, 281, 58, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 113, 0,
	0, 0, 0, 0, 97, 110, 0, 0, 0, 0,
	1574, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3404,
	0, 0, 2441, 0, 0, 0, 0, 0, 0, 1952,
	1952, 1952, 1952, 1952, 1952, 1952, 1952, 53, 0, 0,
	0, 1941, 1942, 1943, 1944, 0, 0, 0, 1173, 1952,
	0, 1924, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 1173,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1948, 0, 0, 0, 0, 2878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4816, 1595,
	0, 1952, 0, 0, 0, 0, 0, 1952, 1933, 1934,
	0, 0, 3054, 2119, 0, 2119, 0, 0, 4676, 0,
	0, 0, 0, 1574, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4700, 0, 4700,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 3723, 0, 1398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 780, 0, 0, 0, 0, 2113, 0,
	281, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 764,
	0, 1969, 0, 57, 0, 0, 0, 4676, 60, 0,
	4461, 0, 0, 1636, 0, 0, 0, 3054, 71, 0,
	0, 0, 0, 0, 0, 0, 59, 197, 105, 0,
	0, 109, 0, 0, 0, 55, 0, 4791, 0, 167,
	765, 0, 0, 0, 0, 0, 0, 56, 0, 1636,
	0, 766, 4934, 0, 0, 0, 0, 0, 246, 1945,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 157, 0, 767, 0, 0, 281, 281, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 786, 0, 0, 0, 0,
	3986, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3723, 4846, 0, 0,
	0, 0, 0, 0, 162, 4676, 4987, 0, 0, 0,
	0, 769, 0, 1971, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 4461, 0, 1158, 247, 0,
	0, 0, 0, 0, 770, 0, 0, 0, 771, 0,
	4461, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 795, 198, 0, 0, 76,
	0, 0, 0, 0, 281, 0, 5031, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 77, 0, 749,
	201, 785, 0, 3, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 0, 4461, 4461, 0,
	0, 0, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 0, 0, 0, 0, 4461, 0,
	281, 4461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 91, 0, 0, 0, 0,
	782, 1636, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 4973, 0, 0, 0, 50,
	0, 113, 0, 0, 0, 0, 0, 97, 110, 0,
	0, 4700, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 3054,
	0, 0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 793, 0,
	774, 0, 0, 0, 0, 0, 0, 1952, 1947, 98,
	0, 0, 0, 0, 281, 0, 1919, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3986, 0, 0, 0,
	0, 0, 794, 1972, 0, 0, 0, 1952, 0, 0,
	775, 1952, 1918, 0, 0, 790, 791, 0, 788, 0,
	1636, 0, 0, 1938, 783, 1952, 0, 776, 0, 0,
	0, 0, 1935, 0, 1952, 1952, 1952, 1952, 1952, 1952,
	1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
	1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
	1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
	0, 777, 0, 784, 0, 1952, 0, 1952, 1952, 1952,
	1952, 778, 0, 0, 0, 0, 0, 0, 0, 2878,
	2878, 0, 0, 4676, 0, 0, 779, 0, 0, 0,
	0, 787, 0, 0, 1952, 0, 0, 0, 0, 0,
	1941, 1942, 1943, 1944, 0, 0, 796, 0, 0, 0,
	1924, 0, 102, 0, 0, 0, 0, 781, 0, 0,
	0, 0, 0, 3054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4461, 0, 4461, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 1957, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 1946, 1948, 0, 0, 0, 0, 0, 0, 0,
	197, 105, 0, 0, 109, 1952, 0, 0, 1952, 0,
	0, 1952, 0, 0, 1952, 0, 0, 1933, 1934, 0,
	1952, 1952, 1952, 1952, 1952, 1952, 1952, 0, 0, 3054,
	0, 246, 0, 0, 0, 1955, 0, 0, 0, 958,
	0, 0, 0, 0, 157, 0, 3149, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 3054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3149, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 1952, 0, 0, 3510,
	0, 2878, 2878, 2878, 2878, 0, 0, 0, 1952, 0,
	1952, 0, 1207, 0, 0, 1952, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	1969, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 240, 0, 0, 280,
	280, 280, 0, 0, 0, 241, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1916,
	1917, 0, 1158, 1158, 1158, 0, 0, 0, 0, 0,
	887, 0, 0, 1734, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 1947, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 0, 0, 0, 0, 887, 0,
	0, 1940, 0, 0, 0, 1587, 0, 0, 0, 1916,
	1917, 1603, 1949, 1950, 1951, 1960, 1961, 1962, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 0, 1958,
	0, 0, 1953, 1947, 0, 0, 0, 0, 1938, 0,
	1638, 1919, 1644, 0, 1650, 0, 0, 1935, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 3397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 1942, 1943, 1944, 1761,
	0, 1766, 0, 0, 0, 1924, 0, 1956, 0, 0,
	0, 1330, 0, 0, 0, 0, 0, 1930, 1931, 1937,
	1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 0, 0, 0, 0, 0, 0, 0,
	0, 1029, 0, 1080, 0, 1941, 1942, 1943, 1944, 0,
	0, 0, 0, 0, 0, 1924, 1946, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1037, 0,
	1831, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 1934, 0, 1052, 0, 1035, 1034, 0,
	0, 1952, 1952, 0, 1952, 0, 1957, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 1946, 1948, 0, 0,
	1054, 76, 0, 0, 0, 1939, 1036, 0, 0, 0,
	0, 1039, 0, 1963, 0, 1964, 1091, 0, 1064, 77,
	0, 0, 1933, 1934, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 0, 0, 1069, 82, 0, 0, 0,
	1955, 0, 0, 0, 2849, 2850, 2851, 2852, 2845, 2846,
	2847, 2848, 0, 1081, 1041, 1939, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 0, 0, 0, 91, 0, 0,
	0, 0, 0, 1043, 0, 1969, 0, 0, 0, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 1965, 0, 2006, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 0, 1954, 1079, 0, 2825, 2826, 2827,
	2828, 0, 0, 113, 0, 1969, 0, 0, 0, 97,
	110, 1045, 0, 1945, 0, 0, 0, 0, 0, 1033,
	2837, 2838, 2839, 2840, 2833, 2834, 2835, 2836, 2841, 2842,
	2843, 2844, 0, 0, 1952, 1952, 1940, 2878, 2878, 1046,
	1047, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3510, 3510, 0, 0, 1952, 1952, 0, 1055, 1053,
	0, 0, 0, 1945, 0, 1952, 1048, 0, 0, 0,
	1065, 98, 0, 1086, 1085, 0, 0, 0, 0, 1952,
	2065, 2065, 2065, 0, 0, 0, 1940, 0, 1088, 1077,
	0, 1952, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 2821, 2822, 2823, 2824, 2829, 2830, 2831,
	2832, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	1082, 0, 0, 0, 0, 0, 0, 2878, 2878, 2878,
	2878, 2878, 2878, 2878, 2878, 2878, 2878, 2878, 2878, 2878,
	2878, 2878, 2878, 2878, 2878, 2878, 2878, 1971, 2878, 3510,
	3510, 3510, 3510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1040, 0, 0, 1090, 1952, 0, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1038, 0, 0,
	0, 1073, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 102, 1076, 1158, 0, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	1083, 1071, 0, 3464, 0, 0, 0, 3465, 0, 1089,
	1066, 0, 0, 1058, 1056, 0, 0, 1061, 0, 0,
	0, 0, 0, 1062, 0, 0, 1031, 0, 1084, 0,
	0, 0, 197, 105, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1032, 0, 280, 0, 280, 280, 0, 0,
	280, 0, 0, 246, 1075, 0, 1063, 1952, 0, 0,
	0, 958, 1060, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	1067, 0, 1068, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 1070, 0, 0, 0, 0,
	1952, 1952, 0, 0, 0, 0, 0, 0, 280, 0,
	280, 280, 0, 0, 280, 280, 0, 0, 0, 162,
	0, 0, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 887, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 280, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 1952, 1952, 0, 0, 1952,
	3510, 3510, 1952, 0, 0, 0, 1952, 0, 0, 867,
	0, 0, 280, 1952, 0, 0, 0, 0, 0, 0,
	0, 1243, 0, 0, 0, 2542, 1952, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1952, 1952, 1952, 1952, 0, 0, 0, 0, 0, 1952,
	0, 1952, 0, 2571, 3510, 3510, 3510, 3510, 3510, 3510,
	3510, 3510, 3510, 3510, 3510, 3510, 3510, 3510, 3510, 3510,
	3510, 3510, 3510, 3510, 0, 859, 0, 3510, 0, 0,
	1952, 1952, 874, 0, 0, 0, 0, 0, 0, 2611,
	0, 2615, 1952, 0, 0, 0, 864, 0, 2629, 0,
	0, 1952, 0, 0, 0, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 0, 2679, 0, 2681, 2682, 2683, 2684, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	2708, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 2759, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2789, 2792, 2795, 2798, 1952, 0, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1952, 0,
	0, 0, 0, 0, 0, 0, 2870, 0, 2882, 2884,
	2889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 2087, 0, 1330, 0, 0, 0, 280, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 2087, 280, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 0, 0, 0,
	887, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3182, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 3172, 3170, 0, 0, 0,
	0, 0, 3174, 3176, 3166, 0, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 0, 1196, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1952, 0, 0, 0, 1952, 1952,
	0, 0, 1952, 1952, 0, 3192, 0, 1952, 0, 0,
	0, 1952, 794, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 0,
	0, 2878, 0, 0, 858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2878, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	3184, 0, 871, 872, 0, 0, 1132, 0, 0, 280,
	0, 0, 0, 887, 0, 0, 0, 0, 1153, 0,
	0, 0, 0, 3183, 3173, 3171, 3175, 3177, 3167, 3169,
	3185, 3187, 0, 0, 0, 0, 3215, 3216, 0, 3218,
	0, 3179, 3181, 3189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1317, 0, 0, 280, 0,
	0, 0, 280, 0, 0, 0, 0, 3193, 280, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 280, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1952, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 1952, 3510, 2878, 0, 0, 0, 0, 0, 1952,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 3340,
	3510, 2878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 280, 0, 280, 3186, 280, 1952, 280, 0,
	280, 0, 0, 0, 0, 1952, 2878, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 0, 1952, 0, 0, 0, 1916, 1917,
	0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 280, 280, 280, 0,
	0, 1953, 1947, 1973, 1974, 0, 0, 0, 0, 0,
	1919, 0, 0, 0, 3194, 0, 0, 0, 0, 0,
	1966, 0, 0, 3178, 3180, 3188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 0, 3398,
	3399, 0, 0, 0, 0, 3405, 1935, 0, 1334, 0,
	0, 0, 3510, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 3419, 3420, 0, 0, 0, 0,
	2759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 3510, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 3510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 1942, 1943, 1944, 0, 0,
	0, 3443, 0, 0, 1924, 0, 0, 0, 0, 0,
	780, 0, 0, 0, 1334, 0, 0, 0, 3455, 0,
	0, 1334, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 764, 1334, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 1946, 1948, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 1330, 1964, 0, 0, 765, 0, 0,
	0, 1933, 1934, 0, 0, 0, 0, 280, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	767, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	2889, 2889, 2889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 786, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 3548, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 0, 0, 280, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	1952, 0, 0, 280, 0, 0, 280, 0, 769, 0,
	280, 0, 280, 1954, 0, 0, 0, 0, 0, 280,
	280, 0, 0, 0, 1969, 0, 0, 0, 0, 280,
	0, 770, 0, 0, 0, 771, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 785, 0,
	0, 1158, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 1952, 1958, 3681, 0, 0, 782, 0, 0,
	0, 0, 0, 115, 0, 115, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 280, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3734, 3735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1153,
	115, 115, 0, 0, 0, 0, 0, 0, 0, 887,
	1334, 0, 1334, 0, 0, 773, 115, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 115, 0, 115, 0, 0, 0, 0, 0,
	280, 1956, 887, 0, 0, 793, 0, 774, 2151, 280,
	0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927,
	1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0,
	0, 0, 2755, 0, 0, 0, 2756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 0, 0, 0, 0, 0, 0, 775, 0, 0,
	115, 0, 790, 791, 280, 788, 0, 0, 0, 0,
	0, 783, 0, 0, 776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 777, 0,
	784, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 779, 0, 0, 0, 0, 787, 0,
	0, 280, 280, 280, 280, 0, 0, 0, 0, 0,
	280, 0, 1132, 796, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 907, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 909, 0, 280, 0, 0, 910,
	0, 1992, 0, 0, 280, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2629, 0, 0, 0, 0,
	0, 3939, 3940, 0, 0, 3943, 0, 0, 0, 3946,
	0, 0, 0, 0, 0, 0, 0, 0, 3950, 0,
	911, 0, 928, 0, 0, 0, 0, 3957, 0, 0,
	0, 0, 3548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3970, 912, 0,
	0, 0, 0, 913, 0, 0, 0, 0, 0, 0,
	1334, 1334, 0, 0, 0, 0, 0, 3993, 3994, 1334,
	3995, 3996, 3997, 0, 0, 937, 0, 0, 0, 0,
	0, 0, 914, 0, 0, 0, 0, 0, 4003, 0,
	0, 0, 4005, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 2088, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 908, 0, 0, 0, 4034, 4035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4046, 915, 0, 0, 0, 916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4055, 0,
	939, 0, 0, 0, 0, 795, 1334, 0, 1334, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 1334, 1334, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 4111, 0, 0, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4129, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 4160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 919, 0,
	0, 0, 0, 0, 0, 0, 0, 4181, 4182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2151, 2151,
	1334, 0, 0, 280, 0, 0, 0, 280, 280, 0,
	920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	929, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 906, 0, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 280, 280, 0, 0, 280,
	0, 0, 0, 1334, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 0, 2065, 280, 0,
	0, 0, 0, 0, 0, 0, 4290, 0, 0, 0,
	0, 922, 0, 0, 0, 923, 942, 0, 941, 0,
	0, 924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 925, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 1334, 943, 0, 940,
	0, 0, 0, 1334, 0, 0, 796, 0, 0, 0,
	0, 1153, 1334, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 4337, 4338, 0, 0,
	0, 0, 4342, 4343, 0, 280, 0, 4346, 4347, 0,
	0, 0, 0, 0, 0, 4351, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 4355, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 280, 0, 0,
	0, 0, 4360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1916, 1917,
	0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1947, 0, 0, 0, 0, 0, 0, 0,
	1919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 1132, 1918, 0, 1132, 1132,
	0, 0, 0, 0, 0, 0, 0, 1938, 280, 0,
	280, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 2697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1153, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 1992, 0, 0, 0, 1992, 4503,
	0, 0, 0, 0, 1941, 1942, 1943, 1944, 1334, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 1946, 1948, 0, 0, 0,
	0, 1317, 282, 282, 282, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 1964, 0, 0, 2088, 0, 0,
	0, 1933, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 1334, 0, 0, 0, 0, 1955,
	0, 0, 1330, 1330, 0, 0, 0, 1334, 0, 1334,
	0, 0, 0, 0, 1939, 1334, 0, 0, 115, 0,
	0, 282, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4623, 4624, 4625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 2629, 0, 887,
	4634, 4635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 4643, 4646,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4701, 0, 0, 0, 0,
	0, 0, 0, 0, 4709, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4717,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 1958, 0, 0, 4726, 0, 0, 4728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 115, 280, 0,
	115, 0, 115, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927,
	1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 115,
	0, 0, 115, 0, 0, 0, 4365, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4854, 0,
	0, 0, 4858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 1334, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 1334, 0, 0, 0, 0, 0, 4928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 0, 2151, 0, 0, 0, 1334, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 2629, 0,
	0, 0, 0, 0, 0, 0, 0, 4646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 2697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 2151, 2087, 1992, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 5049, 5049, 5049,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5074, 0, 0, 282, 0, 282,
	282, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 1334, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 5049, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 282, 1494, 282, 282, 0, 0, 282, 282, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 1317, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 1334, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 1494, 282, 282, 0, 0,
	0, 5049, 5206, 0, 0, 1334, 0, 0, 1334, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2151, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 115, 286, 115, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 2151, 2151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 282,
	0, 0, 115, 115, 0, 115, 0, 0, 0, 0,
	0, 2151, 2151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 879,
	0, 280, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1317,
	2087, 0, 1153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 115, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 2087, 0, 280, 2087, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 282, 282, 282, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 1334, 0, 1334, 0, 0, 0, 0,
	0, 282, 0, 1334, 0, 0, 1334, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 2151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 1334, 1334, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 1334, 0, 0, 0, 1317, 1317, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 2151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 1494, 1494, 282, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 2087, 0,
	2087, 0, 1614, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1614, 0, 0, 1334, 0,
	0, 0, 1334, 1334, 0, 1334, 0, 0, 0, 0,
	0, 282, 1334, 0, 0, 282, 0, 0, 0, 0,
	0, 282, 0, 1334, 1334, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 282, 0, 282, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 1614, 0, 0, 0, 0,
	1494, 0, 1494, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 1494, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 282, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 1494, 1334,
	1494, 1494, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 115, 0, 0, 282, 282, 0, 282, 0, 282,
	0, 282, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 282,
	282, 282, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 1494, 0, 1334, 1334, 1334, 1334,
	1334, 1334, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2151, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 1494, 0, 115,
	0, 0, 1334, 0, 1334, 1317, 0, 0, 0, 1613,
	0, 0, 0, 1317, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 1613,
	0, 0, 0, 0, 0, 0, 2151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 1334, 1334, 0, 0, 0, 1492,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 282,
	0, 0, 0, 282, 1334, 282, 0, 1334, 0, 0,
	0, 0, 282, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	2151, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 1614,
	0, 0, 0, 0, 1334, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 282, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 1334, 1334, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 282, 0, 879, 0, 0, 0, 0, 0,
	0, 879, 1334, 0, 0, 1334, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 282, 1614, 282, 1614, 0, 1614, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 1614, 1494, 1614, 1614, 1614, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 1491, 0, 0, 0, 282, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 282, 282, 282, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 1917, 0, 1949,
	1950, 1951, 1960, 1961, 1962, 0, 0, 0, 0, 0,
	0, 0, 1613, 1613, 0, 0, 0, 0, 0, 1953,
	1947, 1491, 0, 0, 0, 0, 0, 0, 1919, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 1966, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 1334, 0, 1334,
	0, 0, 0, 0, 1918, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 1613, 0,
	1613, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	1613, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 1941, 1942, 1943, 1944, 1613, 0, 1613, 1613,
	1613, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 1967, 0, 0, 0,
	0, 0, 0, 1946, 1948, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 115, 0, 1494, 0,
	1963, 0, 1964, 0, 0, 0, 0, 0, 0, 1933,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 1492, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1965, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	282, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 282,
	1945, 0, 282, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1491, 1494, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 1614, 0, 1614, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 1494, 0, 1494, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 282, 1494, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 1494,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 1930,
	1931, 1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920,
	1921, 1922, 1923, 1925, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3955, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 1494, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1947, 1494,
	0, 282, 1494, 282, 0, 0, 1919, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	282, 0, 1918, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	1613, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 1942, 1943, 1944, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 1613, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 1957, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 1946, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	1964, 0, 0, 0, 0, 0, 0, 1933, 1934, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 0, 0, 0, 1494, 1494, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	1494, 1940, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 1958,
	0, 0, 0, 0, 1953, 1947, 282, 0, 0, 0,
	0, 0, 0, 1919, 0, 0, 282, 0, 0, 0,
	1492, 0, 0, 1966, 0, 0, 282, 0, 0, 0,
	0, 282, 1971, 0, 0, 0, 282, 0, 0, 0,
	1972, 0, 1494, 0, 0, 0, 0, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 1494, 0, 0, 1935,
	0, 1494, 1494, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 1494, 1614, 0, 1614,
	282, 0, 0, 1492, 0, 0, 1494, 1956, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 1930, 1931, 1937,
	1959, 1936, 1932, 1614, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 3467, 0, 0, 0, 1491, 1941, 1942, 1943,
	1944, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 1614, 0, 1614, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 1957, 0,
	0, 1967, 0, 0, 0, 0, 0, 0, 1946, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1491, 0, 0, 0, 0, 1963, 0, 1964, 0, 0,
	0, 0, 0, 0, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 1492, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1494, 1494, 0, 1494,
	0, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 282, 0, 0, 282,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 1494,
	1494, 0, 0, 0, 0, 0, 0, 1613, 0, 1916,
	1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0,
	0, 1613, 0, 1613, 0, 0, 1958, 1491, 0, 0,
	282, 0, 1953, 1947, 879, 1613, 0, 0, 0, 1494,
	282, 1919, 0, 0, 1494, 1492, 0, 1613, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	1494, 1494, 1494, 1494, 1494, 1494, 1494, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 1494, 0, 0, 0, 1935, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932,
	0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926,
	0, 0, 0, 0, 0, 0, 1494, 1491, 1494, 3466,
	1491, 0, 0, 0, 0, 1941, 1942, 1943, 1944, 0,
	0, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	1614, 1614, 0, 1614, 0, 0, 1957, 0, 0, 1967,
	0, 1614, 0, 0, 1614, 0, 1946, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 1963, 0, 1964, 0, 0, 0, 0,
	0, 0, 1933, 1934, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 1939, 0, 1494, 1494, 1494,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 1614, 1614, 1614, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 1494, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 1614, 0,
	1614, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	879, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	1492, 1492, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 0, 0, 0, 282, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 1613, 1613, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 1613, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 4970, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 1613,
	1613, 1613, 0, 1614, 1614, 0, 0, 0, 0, 0,
	0, 0, 282, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 1613, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 1953, 1947, 0, 0,
	0, 0, 0, 1492, 0, 1919, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 1614, 1614, 1614, 1614, 1614, 1614,
	1614, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 1492, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 1614, 0, 0, 0, 0, 0, 0, 1941,
	1942, 1943, 1944, 0, 1491, 1491, 0, 1491, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 1613, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 1916,
	1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0,
	1957, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	1946, 1948, 1953, 1947, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 0, 0, 0, 1963, 0, 1964,
	0, 1966, 0, 0, 0, 0, 1933, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 1492, 0, 0, 1955, 0, 0, 1918, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 1938, 1939,
	0, 1614, 1614, 1614, 0, 0, 0, 1935, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 1492, 0, 0, 1614, 0, 1613, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 1941, 1942, 1943, 1944, 0,
	0, 0, 0, 0, 0, 1924, 0, 1491, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 1613,
	1613, 1613, 1613, 1613, 1613, 0, 1957, 1945, 0, 1967,
	0, 0, 0, 0, 0, 0, 1946, 1948, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 1963, 0, 1964, 0, 0, 0, 0,
	0, 0, 1933, 1934, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 1958, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 1491, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3463, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 1613, 1613, 0, 0,
	1614, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 1495, 298, 299, 1496, 1497, 1498,
	0, 1499, 675, 1500, 1501, 1502, 300, 1503, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 1504, 680, 312, 313, 314,
	315, 316, 317, 1505, 1506, 0, 318, 681, 682, 683,
	1507, 319, 320, 684, 1508, 1575, 1509, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 1510, 330, 331, 332,
	329, 333, 1511, 334, 1613, 335, 336, 337, 338, 339,
	340, 1512, 341, 342, 343, 1275, 344, 345, 346, 1513,
	1514, 1516, 1515, 1517, 1518, 1519, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 1520, 357, 353, 355,
	1521, 358, 356, 359, 1522, 360, 361, 362, 1523, 1524,
	363, 364, 365, 1525, 366, 367, 368, 1526, 369, 370,
	371, 1527, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 1528,
	287, 1529, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 1530, 390, 391, 392, 1531, 393,
	1532, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 1533, 406, 693, 1534,
	694, 407, 1535, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 1278, 414, 415, 1536, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 1537,
	1277, 502, 424, 698, 699, 1538, 700, 1539, 425, 426,
	1279, 701, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 1540, 437, 439,
	438, 1541, 440, 702, 1282, 441, 442, 1283, 1542, 443,
	444, 445, 446, 447, 448, 451, 1543, 1544, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 1545, 289,
	1286, 496, 497, 498, 499, 1546, 703, 500, 704, 503,
	504, 1547, 0, 505, 0, 506, 1548, 1549, 508, 509,
	510, 1550, 1551, 511, 512, 705, 1287, 513, 1288, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 1552, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 1553, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 1554, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 1555, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 1556, 594, 595,
	593, 596, 597, 598, 1557, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 1558, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 1559, 628, 629, 0, 625, 616, 1560, 630, 631,
	632, 633, 634, 635, 636, 637, 1561, 638, 716, 717,
	718, 719, 1562, 648, 1563, 639, 640, 641, 642, 720,
	643, 721, 1564, 644, 645, 646, 647, 0, 649, 650,
	1565, 1566, 651, 652, 654, 656, 657, 653, 655, 658,
	1567, 659, 1568, 0, 660, 661, 662, 722, 723, 724,
	1569, 664, 663, 665, 666, 667, 725, 668, 669, 1570,
	1571, 1572, 1573, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 2924, 0, 0,
	0, 0, 0, 0, 0, 2925, 290, 291, 293, 292,
	294, 295, 296, 297, 1495, 298, 299, 1496, 1497, 1498,
	0, 1499, 675, 1500, 1501, 1502, 300, 1503, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 1504, 680, 312, 313, 314,
	315, 316, 317, 1505, 1506, 0, 318, 681, 682, 683,
	1507, 319, 320, 684, 1508, 1575, 1509, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 1510, 330, 331, 332,
	329, 333, 1511, 334, 0, 335, 336, 337, 338, 339,
	340, 1512, 341, 342, 343, 1275, 344, 345, 346, 1513,
	1514, 1516, 1515, 1517, 1518, 1519, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 1520, 357, 353, 355,
	1521, 358, 356, 359, 1522, 360, 361, 362, 1523, 1524,
	363, 364, 365, 1525, 366, 367, 368, 1526, 369, 370,
	371, 1527, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 1528,
	287, 1529, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 1530, 390, 391, 392, 1531, 393,
	1532, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 1533, 406, 693, 1534,
	694, 407, 1535, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 1278, 414, 415, 1536, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 1537,
	1277, 502, 424, 698, 699, 1538, 700, 1539, 425, 426,
	1279, 701, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 1540, 437, 439,
	438, 1541, 440, 702, 1282, 441, 442, 1283, 1542, 443,
	444, 445, 446, 447, 448, 451, 1543, 1544, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 1545, 289,
	1286, 496, 497, 498, 499, 1546, 703, 500, 704, 503,
	504, 1547, 0, 505, 0, 506, 1548, 1549, 508, 509,
	510, 1550, 1551, 511, 512, 705, 1287, 513, 1288, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 1552, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 1553, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 1554, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 1555, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 1556, 594, 595,
	593, 596, 597, 598, 1557, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 1558, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 1559, 628, 629, 0, 625, 616, 1560, 630, 631,
	632, 633, 634, 635, 636, 637, 1561, 638, 716, 717,
	718, 719, 1562, 648, 1563, 639, 640, 641, 642, 720,
	643, 721, 1564, 644, 645, 646, 647, 0, 649, 650,
	1565, 1566, 651, 652, 654, 656, 657, 653, 655, 658,
	1567, 659, 1568, 0, 660, 661, 662, 722, 723, 724,
	1569, 664, 663, 665, 666, 667, 725, 668, 669, 1570,
	1571, 1572, 1573, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 3964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3966, 290, 291, 293, 292, 294, 295,
	296, 297, 1495, 298, 299, 1496, 1497, 1498, 0, 1499,
	675, 1500, 1501, 1502, 300, 1503, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 1504, 680, 312, 313, 314, 315, 316,
	317, 1505, 1506, 0, 318, 681, 682, 683, 1507, 319,
	320, 684, 1508, 1575, 1509, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 1510, 330, 331, 332, 329, 333,
	1511, 334, 0, 335, 336, 337, 338, 339, 340, 1512,
	341, 342, 343, 1275, 344, 345, 346, 1513, 1514, 1516,
	1515, 1517, 1518, 1519, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 1520, 357, 353, 355, 1521, 358,
	356, 359, 1522, 360, 361, 362, 1523, 1524, 363, 364,
	365, 1525, 366, 367, 368, 1526, 369, 370, 371, 1527,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 1528, 287, 1529,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 1530, 390, 391, 392, 1531, 393, 1532, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 1533, 406, 693, 1534, 694, 407,
	1535, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 1278, 414, 415, 1536, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 1537, 1277, 502,
	424, 698, 699, 1538, 700, 1539, 425, 426, 1279, 701,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 1540, 437, 439, 438, 1541,
	440, 702, 1282, 441, 442, 1283, 1542, 443, 444, 445,
	446, 447, 448, 451, 1543, 1544, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1545, 289, 1286, 496,
	497, 498, 499, 1546, 703, 500, 704, 503, 504, 1547,
	0, 505, 0, 506, 1548, 1549, 508, 509, 510, 1550,
	1551, 511, 512, 705, 1287, 513, 1288, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	1552, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 1553, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 1554, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 1555,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 1556, 594, 595, 593, 596,
	597, 598, 1557, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	1558, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 1559,
	628, 629, 0, 625, 616, 1560, 630, 631, 632, 633,
	634, 635, 636, 637, 1561, 638, 716, 717, 718, 719,
	1562, 648, 1563, 639, 640, 641, 642, 720, 643, 721,
	1564, 644, 645, 646, 647, 0, 649, 650, 1565, 1566,
	651, 652, 654, 656, 657, 653, 655, 658, 1567, 659,
	1568, 0, 660, 661, 662, 722, 723, 724, 1569, 664,
	663, 665, 666, 667, 725, 668, 669, 1570, 1571, 1572,
	1573, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4395, 290, 291, 293, 292,
	294, 295, 296, 297, 1495, 298, 299, 1496, 1497, 1498,
	0, 1499, 675, 1500, 1501, 1502, 300, 1503, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 1504, 680, 312, 313, 314,
	315, 316, 317, 1505, 1506, 0, 318, 681, 682, 683,
	1507, 319, 320, 684, 1508, 1575, 1509, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 1510, 330, 331, 332,
	329, 333, 1511, 334, 0, 335, 336, 337, 338, 339,
	340, 1512, 341, 342, 343, 1275, 344, 345, 346, 1513,
	1514, 1516, 1515, 1517, 1518, 1519, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 1520, 357, 353, 355,
	1521, 358, 356, 359, 1522, 360, 361, 362, 1523, 1524,
	363, 364, 365, 1525, 366, 367, 368, 1526, 369, 370,
	371, 1527, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 1528,
	287, 1529, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 1530, 390, 391, 392, 1531, 393,
	1532, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 1533, 406, 693, 1534,
	694, 407, 1535, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 1278, 414, 415, 1536, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 1537,
	1277, 502, 424, 698, 699, 1538, 700, 1539, 425, 426,
	1279, 701, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 1540, 437, 439,
	438, 1541, 440, 702, 1282, 441, 442, 1283, 1542, 443,
	444, 445, 446, 447, 448, 451, 1543, 1544, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 1545, 289,
	1286, 496, 497, 498, 499, 1546, 703, 500, 704, 503,
	504, 1547, 0, 505, 0, 506, 1548, 1549, 508, 509,
	510, 1550, 1551, 511, 512, 705, 1287, 513, 1288, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 1552, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 1553, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 1554, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 1555, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 1556, 594, 595,
	593, 596, 597, 598, 1557, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 1558, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 1559, 628, 629, 0, 625, 616, 1560, 630, 631,
	632, 633, 634, 635, 636, 637, 1561, 638, 716, 717,
	718, 719, 1562, 648, 1563, 639, 640, 641, 642, 720,
	643, 721, 1564, 644, 645, 646, 647, 0, 649, 650,
	1565, 1566, 651, 652, 654, 656, 657, 653, 655, 658,
	1567, 659, 1568, 0, 660, 661, 662, 722, 723, 724,
	1569, 664, 663, 665, 666, 667, 725, 668, 669, 1570,
	1571, 1572, 1573, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4393, 290, 291,
	293, 292, 294, 295, 296, 297, 1495, 298, 299, 1496,
	1497, 1498, 0, 1499, 675, 1500, 1501, 1502, 300, 1503,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 1504, 680, 312,
	313, 314, 315, 316, 317, 1505, 1506, 0, 318, 681,
	682, 683, 1507, 319, 320, 684, 1508, 1575, 1509, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 1510, 330,
	331, 332, 329, 333, 1511, 334, 0, 335, 336, 337,
	338, 339, 340, 1512, 341, 342, 343, 1275, 344, 345,
	346, 1513, 1514, 1516, 1515, 1517, 1518, 1519, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 1520, 357,
	353, 355, 1521, 358, 356, 359, 1522, 360, 361, 362,
	1523, 1524, 363, 364, 365, 1525, 366, 367, 368, 1526,
	369, 370, 371, 1527, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 1528, 287, 1529, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 1530, 390, 391, 392,
	1531, 393, 1532, 1276, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 1533, 406,
	693, 1534, 694, 407, 1535, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 1278, 414, 415, 1536, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 1537, 1277, 502, 424, 698, 699, 1538, 700, 1539,
	425, 426, 1279, 701, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 1540,
	437, 439, 438, 1541, 440, 702, 1282, 441, 442, 1283,
	1542, 443, 444, 445, 446, 447, 448, 451, 1543, 1544,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1545, 289, 1286, 496, 497, 498, 499, 1546, 703, 500,
	704, 503, 504, 1547, 0, 505, 0, 506, 1548, 1549,
	508, 509, 510, 1550, 1551, 511, 512, 705, 1287, 513,
	1288, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 1552, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	1553, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 1554, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 1555, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 1556,
	594, 595, 593, 596, 597, 598, 1557, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 1558, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 1559, 628, 629, 0, 625, 616, 1560,
	630, 631, 632, 633, 634, 635, 636, 637, 1561, 638,
	716, 717, 718, 719, 1562, 648, 1563, 639, 640, 641,
	642, 720, 643, 721, 1564, 644, 645, 646, 647, 0,
	649, 650, 1565, 1566, 651, 652, 654, 656, 657, 653,
	655, 658, 1567, 659, 1568, 0, 660, 661, 662, 722,
	723, 724, 1569, 664, 663, 665, 666, 667, 725, 668,
	669, 1570, 1571, 1572, 1573, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4629, 290, 291, 293, 292, 294, 295,
	296, 297, 1495, 298, 299, 1496, 1497, 1498, 0, 1499,
	675, 1500, 1501, 1502, 300, 1503, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 1504, 680, 312, 313, 314, 315, 316,
	317, 1505, 1506, 0, 318, 681, 682, 683, 1507, 319,
	320, 684, 1508, 1575, 1509, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 1510, 330, 331, 332, 329, 333,
	1511, 334, 0, 335, 336, 337, 338, 339, 340, 1512,
	341, 342, 343, 1275, 344, 345, 346, 1513, 1514, 1516,
	1515, 1517, 1518, 1519, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 1520, 357, 353, 355, 1521, 358,
	356, 359, 1522, 360, 361, 362, 1523, 1524, 363, 364,
	365, 1525, 366, 367, 368, 1526, 369, 370, 371, 1527,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 1528, 287, 1529,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 1530, 390, 391, 392, 1531, 393, 1532, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 1533, 406, 693, 1534, 694, 407,
	1535, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 1278, 414, 415, 1536, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 1537, 1277, 502,
	424, 698, 699, 1538, 700, 1539, 425, 426, 1279, 701,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 1540, 437, 439, 438, 1541,
	440, 702, 1282, 441, 442, 1283, 1542, 443, 444, 445,
	446, 447, 448, 451, 1543, 1544, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1545, 289, 1286, 496,
	497, 498, 499, 1546, 703, 500, 704, 503, 504, 1547,
	0, 505, 0, 506, 1548, 1549, 508, 509, 510, 1550,
	1551, 511, 512, 705, 1287, 513, 1288, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	1552, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 1553, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 1554, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 1555,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 1556, 594, 595, 593, 596,
	597, 598, 1557, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	1558, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 1559,
	628, 629, 0, 625, 616, 1560, 630, 631, 632, 633,
	634, 635, 636, 637, 1561, 638, 716, 717, 718, 719,
	1562, 648, 1563, 639, 640, 641, 642, 720, 643, 721,
	1564, 644, 645, 646, 647, 0, 649, 650, 1565, 1566,
	651, 652, 654, 656, 657, 653, 655, 658, 1567, 659,
	1568, 0, 660, 661, 662, 722, 723, 724, 1569, 664,
	663, 665, 666, 667, 725, 668, 669, 1570, 1571, 1572,
	1573, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4490,
	290, 291, 293, 292, 294, 295, 296, 297, 1495, 298,
	299, 1496, 1497, 1498, 0, 1499, 675, 1500, 1501, 1502,
	300, 1503, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 1504,
	680, 312, 313, 314, 315, 316, 317, 1505, 1506, 0,
	318, 681, 682, 683, 1507, 319, 320, 684, 1508, 1575,
	1509, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	1510, 330, 331, 332, 329, 333, 1511, 334, 0, 335,
	336, 337, 338, 339, 340, 1512, 341, 342, 343, 1275,
	344, 345, 346, 1513, 1514, 1516, 1515, 1517, 1518, 1519,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	1520, 357, 353, 355, 1521, 358, 356, 359, 1522, 360,
	361, 362, 1523, 1524, 363, 364, 365, 1525, 366, 367,
	368, 1526, 369, 370, 371, 1527, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 1528, 287, 1529, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 1530, 390,
	391, 392, 1531, 393, 1532, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	1533, 406, 693, 1534, 694, 407, 1535, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	1536, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 1537, 1277, 502, 424, 698, 699, 1538,
	700, 1539, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 1540, 437, 439, 438, 1541, 440, 702, 1282, 441,
	442, 1283, 1542, 443, 444, 445, 446, 447, 448, 451,
	1543, 1544, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 1545, 289, 1286, 496, 497, 498, 499, 1546,
	703, 500, 704, 503, 504, 1547, 0, 505, 0, 506,
	1548, 1549, 508, 509, 510, 1550, 1551, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 1552, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 1553, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	1554, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 1555, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 1556, 594, 595, 593, 596, 597, 598, 1557, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 1558, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 1559, 628, 629, 0, 625,
	616, 1560, 630, 631, 632, 633, 634, 635, 636, 637,
	1561, 638, 716, 717, 718, 719, 1562, 648, 1563, 639,
	640, 641, 642, 720, 643, 721, 1564, 644, 645, 646,
	647, 0, 649, 650, 1565, 1566, 651, 652, 654, 656,
	657, 653, 655, 658, 1567, 659, 1568, 0, 660, 661,
	662, 722, 723, 724, 1569, 664, 663, 665, 666, 667,
	725, 668, 669, 1570, 1571, 1572, 1573, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4322, 290, 291, 293, 292,
	294, 295, 296, 297, 1495, 298, 299, 1496, 1497, 1498,
	0, 1499, 675, 1500, 1501, 1502, 300, 1503, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 1504, 680, 312, 313, 314,
	315, 316, 317, 1505, 1506, 0, 318, 681, 682, 683,
	1507, 319, 320, 684, 1508, 1575, 1509, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 1510, 330, 331, 332,
	329, 333, 1511, 334, 0, 335, 336, 337, 338, 339,
	340, 1512, 341, 342, 343, 1275, 344, 345, 346, 1513,
	1514, 1516, 1515, 1517, 1518, 1519, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 1520, 357, 353, 355,
	1521, 358, 356, 359, 1522, 360, 361, 362, 1523, 1524,
	363, 364, 365, 1525, 366, 367, 368, 1526, 369, 370,
	371, 1527, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 1528,
	287, 1529, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 1530, 390, 391, 392, 1531, 393,
	1532, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 1533, 406, 693, 1534,
	694, 407, 1535, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 1278, 414, 415, 1536, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 1537,
	1277, 502, 424, 698, 699, 1538, 700, 1539, 425, 426,
	1279, 701, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 1540, 437, 439,
	438, 1541, 440, 702, 1282, 441, 442, 1283, 1542, 443,
	444, 445, 446, 447, 448, 451, 1543, 1544, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 1545, 289,
	1286, 496, 497, 498, 499, 1546, 703, 500, 704, 503,
	504, 1547, 0, 505, 0, 506, 1548, 1549, 508, 509,
	510, 1550, 1551, 511, 512, 705, 1287, 513, 1288, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 1552, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 1553, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 1554, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 1555, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 1556, 594, 595,
	593, 596, 597, 598, 1557, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 1558, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 1559, 628, 629, 0, 625, 616, 1560, 630, 631,
	632, 633, 634, 635, 636, 637, 1561, 638, 716, 717,
	718, 719, 1562, 648, 1563, 639, 640, 641, 642, 720,
	643, 721, 1564, 644, 645, 646, 647, 0, 649, 650,
	1565, 1566, 651, 652, 654, 656, 657, 653, 655, 658,
	1567, 659, 1568, 0, 660, 661, 662, 722, 723, 724,
	1569, 664, 663, 665, 666, 667, 725, 668, 669, 1570,
	1571, 1572, 1573, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3982, 290, 291, 293, 292, 294, 295, 296, 297,
	1495, 298, 299, 1496, 1497, 1498, 0, 1499, 675, 1500,
	1501, 1502, 300, 1503, 301, 302, 1274, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 1504, 680, 312, 313, 314, 315, 316, 317, 1505,
	1506, 0, 318, 681, 682, 683, 1507, 319, 320, 684,
	1508, 1575, 1509, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 1510, 330, 331, 332, 329, 333, 1511, 334,
	0, 335, 336, 337, 338, 339, 340, 1512, 341, 342,
	343, 1275, 344, 345, 346, 1513, 1514, 1516, 1515, 1517,
	1518, 1519, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 1520, 357, 353, 355, 1521, 358, 356, 359,
	1522, 360, 361, 362, 1523, 1524, 363, 364, 365, 1525,
	366, 367, 368, 1526, 369, 370, 371, 1527, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 1528, 287, 1529, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	1530, 390, 391, 392, 1531, 393, 1532, 1276, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 1533, 406, 693, 1534, 694, 407, 1535, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 1278,
	414, 415, 1536, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 1537, 1277, 502, 424, 698,
	699, 1538, 700, 1539, 425, 426, 1279, 701, 1280, 427,
	428, 429, 1281, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 1540, 437, 439, 438, 1541, 440, 702,
	1282, 441, 442, 1283, 1542, 443, 444, 445, 446, 447,
	448, 451, 1543, 1544, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 1284, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 1285, 494, 482, 1545, 289, 1286, 496, 497, 498,
	499, 1546, 703, 500, 704, 503, 504, 1547, 0, 505,
	0, 506, 1548, 1549, 508, 509, 510, 1550, 1551, 511,
	512, 705, 1287, 513, 1288, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 1552, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 1553, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 1554, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 1555, 568, 569,
	570, 1289, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 1556, 594, 595, 593, 596, 597, 598,
	1557, 599, 600, 582, 583, 601, 602, 1290, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 1558, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 1559, 628, 629,
	0, 625, 616, 1560, 630, 631, 632, 633, 634, 635,
	636, 637, 1561, 638, 716, 717, 718, 719, 1562, 648,
	1563, 639, 640, 641, 642, 720, 643, 721, 1564, 644,
	645, 646, 647, 0, 649, 650, 1565, 1566, 651, 652,
	654, 656, 657, 653, 655, 658, 1567, 659, 1568, 0,
	660, 661, 662, 722, 723, 724, 1569, 664, 663, 665,
	666, 667, 725, 668, 669, 1570, 1571, 1572, 1573, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3795, 290, 291,
	293, 292, 294, 295, 296, 297, 1495, 298, 299, 1496,
	1497, 1498, 0, 1499, 675, 1500, 1501, 1502, 300, 1503,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 1504, 680, 312,
	313, 314, 315, 316, 317, 1505, 1506, 0, 318, 681,
	682, 683, 1507, 319, 320, 684, 1508, 1575, 1509, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 1510, 330,
	331, 332, 329, 333, 1511, 334, 0, 335, 336, 337,
	338, 339, 340, 1512, 341, 342, 343, 1275, 344, 345,
	346, 1513, 1514, 1516, 1515, 1517, 1518, 1519, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 1520, 357,
	353, 355, 1521, 358, 356, 359, 1522, 360, 361, 362,
	1523, 1524, 363, 364, 365, 1525, 366, 367, 368, 1526,
	369, 370, 371, 1527, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 1528, 287, 1529, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 1530, 390, 391, 392,
	1531, 393, 1532, 1276, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 1533, 406,
	693, 1534, 694, 407, 1535, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 1278, 414, 415, 1536, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 1537, 1277, 502, 424, 698, 699, 1538, 700, 1539,
	425, 426, 1279, 701, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 1540,
	437, 439, 438, 1541, 440, 702, 1282, 441, 442, 1283,
	1542, 443, 444, 445, 446, 447, 448, 451, 1543, 1544,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1545, 289, 1286, 496, 497, 498, 499, 1546, 703, 500,
	704, 503, 504, 1547, 0, 505, 0, 506, 1548, 1549,
	508, 509, 510, 1550, 1551, 511, 512, 705, 1287, 513,
	1288, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 1552, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	1553, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 1554, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 1555, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 1556,
	594, 595, 593, 596, 597, 598, 1557, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 1558, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 1559, 628, 629, 0, 625, 616, 1560,
	630, 631, 632, 633, 634, 635, 636, 637, 1561, 638,
	716, 717, 718, 719, 1562, 648, 1563, 639, 640, 641,
	642, 720, 643, 721, 1564, 644, 645, 646, 647, 0,
	649, 650, 1565, 1566, 651, 652, 654, 656, 657, 653,
	655, 658, 1567, 659, 1568, 0, 660, 661, 662, 722,
	723, 724, 1569, 664, 663, 665, 666, 667, 725, 668,
	669, 1570, 1571, 1572, 1573, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2779, 290, 291, 293, 292, 294, 295,
	296, 297, 1495, 298, 299, 1496, 1497, 1498, 0, 1499,
	675, 1500, 1501, 1502, 300, 1503, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 1504, 680, 312, 313, 314, 315, 316,
	317, 1505, 1506, 0, 318, 681, 682, 683, 1507, 319,
	320, 684, 1508, 1575, 1509, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 1510, 330, 331, 332, 329, 333,
	1511, 334, 0, 335, 336, 337, 338, 339, 340, 1512,
	341, 342, 343, 1275, 344, 345, 346, 1513, 1514, 1516,
	1515, 1517, 1518, 1519, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 1520, 357, 353, 355, 1521, 358,
	356, 359, 1522, 360, 361, 362, 1523, 1524, 363, 364,
	365, 1525, 366, 367, 368, 1526, 369, 370, 371, 1527,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 1528, 287, 1529,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 1530, 390, 391, 392, 1531, 393, 1532, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 1533, 406, 693, 1534, 694, 407,
	1535, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 1278, 414, 415, 1536, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 1537, 1277, 502,
	424, 698, 699, 1538, 700, 1539, 425, 426, 1279, 701,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 1540, 437, 439, 438, 1541,
	440, 702, 1282, 441, 442, 1283, 1542, 443, 444, 445,
	446, 447, 448, 451, 1543, 1544, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1545, 289, 1286, 496,
	497, 498, 499, 1546, 703, 500, 704, 503, 504, 1547,
	0, 505, 0, 506, 1548, 1549, 508, 509, 510, 1550,
	1551, 511, 512, 705, 1287, 513, 1288, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	1552, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 1553, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 1554, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 1555,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 1556, 594, 595, 593, 596,
	597, 598, 1557, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	1558, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 1559,
	628, 629, 0, 625, 616, 1560, 630, 631, 632, 633,
	634, 635, 636, 637, 1561, 638, 716, 717, 718, 719,
	1562, 648, 1563, 639, 640, 641, 642, 720, 643, 721,
	1564, 644, 645, 646, 647, 0, 649, 650, 1565, 1566,
	651, 652, 654, 656, 657, 653, 655, 658, 1567, 659,
	1568, 0, 660, 661, 662, 722, 723, 724, 1569, 664,
	663, 665, 666, 667, 725, 668, 669, 1570, 1571, 1572,
	1573, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 1486, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2399,
	290, 291, 293, 292, 294, 295, 296, 297, 1495, 298,
	299, 1496, 1497, 1498, 0, 1499, 675, 1500, 1501, 1502,
	300, 1503, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 1504,
	680, 312, 313, 314, 315, 316, 317, 1505, 1506, 0,
	318, 681, 682, 683, 1507, 319, 320, 684, 1508, 1575,
	1509, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	1510, 330, 331, 332, 329, 333, 1511, 334, 0, 335,
	336, 337, 338, 339, 340, 1512, 341, 342, 343, 1275,
	344, 345, 346, 1513, 1514, 1516, 1515, 1517, 1518, 1519,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	1520, 357, 353, 355, 1521, 358, 356, 359, 1522, 360,
	361, 362, 1523, 1524, 363, 364, 365, 1525, 366, 367,
	368, 1526, 369, 370, 371, 1527, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 1528, 287, 1529, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 1530, 390,
	391, 392, 1531, 393, 1532, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	1533, 406, 693, 1534, 694, 407, 1535, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	1536, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 1537, 1277, 502, 424, 698, 699, 1538,
	700, 1539, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 1540, 437, 439, 438, 1541, 440, 702, 1282, 441,
	442, 1283, 1542, 443, 444, 445, 446, 447, 448, 451,
	1543, 1544, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 1545, 289, 1286, 496, 497, 498, 499, 1546,
	703, 500, 704, 503, 504, 1547, 0, 505, 0, 506,
	1548, 1549, 508, 509, 510, 1550, 1551, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 1552, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 1553, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	1554, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 1555, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 1556, 594, 595, 593, 596, 597, 598, 1557, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 1558, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 1559, 628, 629, 0, 625,
	616, 1560, 630, 631, 632, 633, 634, 635, 636, 637,
	1561, 638, 716, 717, 718, 719, 1562, 648, 1563, 639,
	640, 641, 642, 720, 643, 721, 1564, 644, 645, 646,
	647, 0, 649, 650, 1565, 1566, 651, 652, 654, 656,
	657, 653, 655, 658, 1567, 659, 1568, 0, 660, 661,
	662, 722, 723, 724, 1569, 664, 663, 665, 666, 667,
	725, 668, 669, 1570, 1571, 1572, 1573, 670, 671, 726,
	672, 673, 674, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 1495, 298,
	299, 1496, 1497, 1498, 0, 1499, 675, 1500, 1501, 1502,
	300, 1503, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 1504,
	680, 312, 313, 314, 315, 316, 317, 1505, 1506, 0,
	318, 681, 682, 683, 1507, 319, 320, 684, 1508, 1575,
	1509, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	1510, 330, 331, 332, 329, 333, 1511, 334, 0, 335,
	336, 337, 338, 339, 340, 1512, 341, 342, 343, 1275,
	344, 345, 346, 1513, 1514, 1516, 1515, 1517, 1518, 1519,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	1520, 357, 353, 355, 1521, 358, 356, 359, 1522, 360,
	361, 362, 1523, 1524, 363, 364, 365, 1525, 366, 367,
	368, 1526, 369, 370, 371, 1527, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 1528, 287, 1529, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 1530, 390,
	391, 392, 1531, 393, 1532, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	1533, 406, 693, 1534, 694, 407, 1535, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	1536, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 1537, 1277, 502, 424, 698, 699, 1538,
	700, 1539, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 1540, 437, 439, 438, 1541, 440, 702, 1282, 441,
	442, 1283, 1542, 443, 444, 445, 446, 447, 448, 451,
	1543, 1544, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 1545, 289, 1286, 496, 497, 498, 499, 1546,
	703, 500, 704, 503, 504, 1547, 0, 505, 0, 506,
	1548, 1549, 508, 509, 510, 1550, 1551, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 1552, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 1553, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	1554, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 1555, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 1556, 594, 595, 593, 596, 597, 598, 1557, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 1558, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 1559, 628, 629, 0, 625,
	616, 1560, 630, 631, 632, 633, 634, 635, 636, 637,
	1561, 638, 716, 717, 718, 719, 1562, 648, 1563, 639,
	640, 641, 642, 720, 643, 721, 1564, 644, 645, 646,
	647, 0, 649, 650, 1565, 1566, 651, 652, 654, 656,
	657, 653, 655, 658, 1567, 659, 1568, 0, 660, 661,
	662, 722, 723, 724, 1569, 664, 663, 665, 666, 667,
	725, 668, 669, 1570, 1571, 1572, 1573, 670, 671, 726,
	672, 673, 674, 2754, 0, 1210, 1182, 1183, 1184, 1180,
	1181, 1193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	2751, 298, 299, 0, 0, 0, 0, 0, 1234, 1198,
	0, 0, 300, 0, 301, 302, 1274, 303, 304, 305,
	306, 307, 308, 309, 676, 1247, 0, 310, 1254, 311,
	1253, 0, 1264, 312, 313, 314, 315, 316, 317, 1200,
	1233, 1165, 318, 1294, 1295, 683, 0, 319, 320, 1240,
	0, 1221, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230, 1226,
	1225, 1229, 347, 348, 349, 350, 351, 1257, 352, 354,
	1251, 1250, 1170, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 2752, 0, 363, 1242, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	1176, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 1265, 1266, 385, 1189, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 1249, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 1276, 394, 395,
	396, 1262, 1263, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 1272, 0, 1199, 407, 0, 408,
	409, 410, 411, 412, 413, 1235, 1236, 1239, 501, 1278,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 1277, 502, 424, 1244,
	1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280, 427,
	428, 429, 1281, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 1273,
	1282, 441, 442, 1283, 0, 443, 444, 445, 446, 447,
	448, 451, 1228, 1227, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 1284, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 1285, 494, 482, 1167, 289, 1286, 496, 497, 498,
	499, 1190, 1238, 500, 1252, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 1287, 513, 1288, 1267, 514, 515, 1177, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 1268,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 1248, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 1289, 571, 572, 573, 574, 575, 1178, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	1231, 599, 600, 582, 583, 601, 602, 1290, 603, 604,
	605, 606, 607, 608, 609, 1246, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 1293,
	619, 620, 621, 622, 1269, 626, 627, 0, 628, 629,
	1164, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 1258, 1259, 1260, 1261, 0, 648,
	0, 639, 640, 641, 642, 1270, 643, 1271, 1188, 644,
	645, 646, 647, 0, 649, 650, 0, 1171, 651, 652,
	654, 656, 657, 653, 655, 658, 1232, 659, 0, 0,
	660, 661, 662, 722, 1255, 1292, 2750, 664, 663, 665,
	666, 667, 725, 668, 669, 0, 0, 0, 0, 670,
	671, 726, 672, 673, 674, 1168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 1161, 1162, 2753, 0, 0,
	0, 0, 0, 0, 0, 1194, 2749, 0, 1154, 1192,
	1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 1234, 1198, 0, 0, 300, 0, 301,
	302, 1274, 303, 304, 305, 306, 307, 308, 309, 676,
	1247, 0, 310, 1254, 311, 1253, 0, 1264, 312, 313,
	314, 315, 316, 317, 1200, 1233, 1165, 318, 1294, 1295,
	683, 0, 319, 320, 1240, 0, 1221, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 1275, 344, 345, 346,
	1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348, 349,
	350, 351, 1257, 352, 354, 1251, 1250, 1170, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 1242, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 1176, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 1265, 1266, 385,
	1189, 287, 0, 0, 0, 0, 0, 386, 387, 388,
	1249, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 1276, 394, 395, 396, 1262, 1263, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 1272,
	0, 1199, 407, 0, 408, 409, 410, 411, 412, 413,
	1235, 1236, 1239, 501, 1278, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 288, 421, 422, 423,
	0, 1277, 502, 424, 1244, 1245, 0, 1205, 0, 425,
	426, 1279, 1237, 1280, 427, 428, 429, 1281, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 1273, 1282, 441, 442, 1283, 0,
	443, 444, 445, 446, 447, 448, 451, 1228, 1227, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 1284, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 1285, 494, 482, 1167,
	289, 1286, 496, 497, 498, 499, 1190, 1238, 500, 1252,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 705, 1287, 513, 1288,
	1267, 514, 515, 1177, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 707, 527, 528, 529,
	708, 530, 531, 532, 1268, 533, 710, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 1248, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 1289, 571, 572, 573,
	574, 575, 1178, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 246, 594,
	595, 593, 596, 597, 598, 1231, 599, 600, 582, 583,
	601, 602, 1290, 603, 604, 605, 606, 607, 608, 609,
	1246, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 1293, 619, 620, 621, 622, 1269,
	626, 627, 0, 628, 629, 1164, 625, 616, 248, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 1258,
	1259, 1260, 1261, 0, 648, 0, 639, 640, 641, 642,
	1270, 643, 1271, 1188, 644, 645, 646, 647, 0, 649,
	650, 0, 1171, 651, 652, 654, 656, 657, 653, 655,
	658, 1232, 659, 0, 0, 660, 661, 662, 1732, 1255,
	1292, 0, 664, 663, 665, 666, 667, 725, 668, 669,
	0, 0, 0, 240, 670, 671, 726, 672, 673, 674,
	1168, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	1161, 1162, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1997, 1995, 0, 0, 1192, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	246, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	248, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	1732, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 240, 670, 671, 726, 672,
	673, 674, 1168, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 1210, 1182, 1183, 1184, 1180, 1181,
	1193, 0, 1997, 3417, 0, 0, 1192, 0, 0, 0,
	0, 290, 291, 293, 292, 294, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 1234, 1198, 0,
	0, 300, 0, 301, 302, 1274, 303, 304, 305, 306,
	307, 308, 309, 676, 1247, 0, 310, 1254, 311, 1253,
	0, 1264, 312, 313, 314, 315, 316, 317, 1200, 1233,
	1165, 318, 1294, 1295, 683, 0, 319, 320, 1240, 0,
	1221, 0, 321, 322, 323, 324, 325, 326, 327, 328,
	0, 0, 330, 331, 332, 329, 333, 0, 334, 0,
	335, 336, 337, 338, 339, 340, 0, 341, 342, 343,
	1275, 344, 345, 346, 1224, 1222, 1223, 1230, 1226, 1225,
	1229, 347, 348, 349, 350, 351, 1257, 352, 354, 1251,
	1250, 1170, 357, 353, 355, 0, 358, 356, 359, 0,
	360, 361, 362, 0, 0, 363, 1242, 365, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 1176,
	374, 375, 376, 378, 380, 377, 379, 381, 382, 383,
	384, 1265, 1266, 385, 1189, 287, 0, 0, 0, 0,
	0, 386, 387, 388, 1249, 0, 0, 0, 389, 0,
	390, 391, 392, 0, 393, 0, 1276, 394, 395, 396,
	1262, 1263, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 0, 406, 1272, 0, 1199, 407, 0, 408, 409,
	410, 411, 412, 413, 1235, 1236, 1239, 501, 1278, 414,
	415, 0, 416, 417, 418, 419, 420, 0, 0, 0,
	288, 421, 422, 423, 0, 1277, 502, 424, 1244, 1245,
	0, 1205, 0, 425, 426, 1279, 1237, 1280, 427, 428,
	429, 1281, 430, 0, 0, 0, 431, 432, 433, 434,
	435, 436, 0, 437, 439, 438, 0, 440, 1273, 1282,
	441, 442, 1283, 0, 443, 444, 445, 446, 447, 448,
	451, 1228, 1227, 449, 450, 452, 453, 0, 454, 455,
	457, 460, 456, 458, 459, 461, 474, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 476,
	0, 475, 1284, 477, 478, 479, 480, 481, 488, 490,
	491, 486, 487, 489, 492, 493, 495, 483, 484, 485,
	1285, 494, 482, 1167, 289, 1286, 496, 497, 498, 499,
	1190, 1238, 500, 1252, 503, 504, 0, 0, 505, 0,
	506, 0, 0, 508, 509, 510, 0, 0, 511, 512,
	705, 1287, 513, 1288, 1267, 514, 515, 1177, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 525, 526,
	707, 527, 528, 529, 708, 530, 531, 532, 1268, 533,
	710, 534, 535, 0, 536, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 545, 1248, 546, 547, 549, 548,
	550, 0, 551, 0, 552, 553, 554, 0, 0, 0,
	0, 0, 555, 556, 558, 0, 559, 560, 561, 562,
	557, 563, 564, 565, 566, 567, 0, 568, 569, 570,
	1289, 571, 572, 573, 574, 575, 1178, 576, 0, 577,
	578, 585, 586, 587, 579, 580, 581, 588, 589, 590,
	591, 592, 246, 594, 595, 593, 596, 597, 598, 1231,
	599, 600, 582, 583, 601, 602, 1290, 603, 604, 605,
	606, 607, 608, 609, 1246, 0, 610, 0, 611, 612,
	613, 614, 615, 617, 584, 618, 623, 624, 1293, 619,
	620, 621, 622, 1269, 626, 627, 0, 628, 629, 1164,
	625, 616, 248, 630, 631, 632, 633, 634, 635, 636,
	637, 0, 638, 1258, 1259, 1260, 1261, 0, 648, 0,
	639, 640, 641, 642, 1270, 643, 1271, 1188, 644, 645,
	646, 647, 0, 649, 650, 0, 1171, 651, 652, 654,
	656, 657, 653, 655, 658, 1232, 659, 0, 0, 660,
	661, 662, 1732, 1255, 1292, 0, 664, 663, 665, 666,
	667, 725, 668, 669, 0, 0, 0, 240, 670, 671,
	726, 672, 673, 674, 1168, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 1161, 1162, 1210, 1182, 1183, 1184,
	1180, 1181, 1193, 0, 1997, 1995, 0, 0, 1192, 0,
	0, 0, 0, 290, 291, 293, 292, 294, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 1234,
	1198, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 676, 1247, 0, 310, 1254,
	311, 1253, 2885, 1264, 312, 313, 314, 315, 316, 317,
	1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319, 320,
	1240, 0, 1221, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230,
	1226, 1225, 1229, 347, 348, 349, 350, 351, 1257, 352,
	354, 1251, 1250, 1170, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 1176, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 1265, 1266, 385, 1189, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 1249, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 2890, 1276, 394,
	395, 396, 1262, 1263, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 1272, 0, 1199, 407, 0,
	408, 409, 410, 411, 412, 413, 1235, 1236, 1239, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 1277, 502, 424,
	1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 2886, 440,
	1273, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 1228, 1227, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 1167, 289, 1286, 496, 497,
	498, 499, 1190, 1238, 500, 1252, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 1287, 513, 1288, 1267, 514, 515, 1177,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	1268, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 1248, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 1178, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 1231, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 1246, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	1293, 619, 620, 621, 622, 1269, 626, 627, 0, 628,
	629, 1164, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 1258, 1259, 1260, 1261, 0,
	648, 2887, 639, 640, 641, 642, 1270, 643, 1271, 1188,
	644, 645, 646, 647, 0, 649, 650, 0, 1171, 651,
	652, 654, 656, 657, 653, 655, 658, 1232, 659, 0,
	0, 660, 661, 662, 722, 1255, 1292, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 1168, 0, 0, 2799,
	0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 1163,
	0, 0, 0, 0, 0, 0, 1161, 1162, 290, 291,
	293, 292, 294, 295, 296, 297, 1194, 298, 299, 0,
	1192, 0, 0, 0, 1234, 1198, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 1247, 0, 310, 1254, 311, 1253, 0, 1264, 312,
	313, 314, 315, 316, 317, 1200, 1233, 1165, 318, 1294,
	1295, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 1257, 352, 354, 1251, 1250, 1170, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 1242, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 1176, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 1189, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 1249, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 1262, 1263, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 1199, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 1244, 1245, 0, 1205, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1167, 289, 1286, 496, 497, 498, 499, 1190, 1238, 500,
	1252, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 1177, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 1248, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 1178, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 1246, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 1293, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 1164, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	1258, 1259, 1260, 1261, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 1188, 644, 645, 646, 647, 0,
	649, 650, 0, 1171, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	1255, 1292, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 1161, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 2797, 0, 2796, 1192, 1210, 1182, 1183, 1184,
	1180, 1181, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 293, 292, 294, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 1234,
	1198, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 676, 1247, 0, 310, 1254,
	311, 1253, 0, 1264, 312, 313, 314, 315, 316, 317,
	1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319, 320,
	1240, 0, 1221, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230,
	1226, 1225, 1229, 347, 348, 349, 350, 351, 1257, 352,
	354, 1251, 1250, 1170, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 1176, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 1265, 1266, 385, 1189, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 1249, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 1276, 394,
	395, 396, 1262, 1263, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 1272, 0, 1199, 407, 0,
	408, 409, 410, 411, 412, 413, 1235, 1236, 1239, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 1277, 502, 424,
	1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	1273, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 1228, 1227, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 1167, 289, 1286, 496, 497,
	498, 499, 1190, 1238, 500, 1252, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 1287, 513, 1288, 1267, 514, 515, 1177,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	1268, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 1248, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 1178, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 1231, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 1246, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	1293, 619, 620, 621, 622, 1269, 626, 627, 0, 628,
	629, 1164, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 1258, 1259, 1260, 1261, 0,
	648, 0, 639, 640, 641, 642, 1270, 643, 1271, 1188,
	644, 645, 646, 647, 0, 649, 650, 0, 1171, 651,
	652, 654, 656, 657, 653, 655, 658, 1232, 659, 0,
	0, 660, 661, 662, 722, 1255, 1292, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 1161, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 2794, 0, 2793,
	1192, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 1234, 1198, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 1247, 0, 310, 1254, 311, 1253, 0, 1264, 312,
	313, 314, 315, 316, 317, 1200, 1233, 1165, 318, 1294,
	1295, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 1257, 352, 354, 1251, 1250, 1170, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 1242, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 1176, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 1189, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 1249, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 1262, 1263, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 1199, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 1244, 1245, 0, 1205, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1167, 289, 1286, 496, 497, 498, 499, 1190, 1238, 500,
	1252, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 1177, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 1248, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 1178, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 1246, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 1293, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 1164, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	1258, 1259, 1260, 1261, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 1188, 644, 645, 646, 647, 0,
	649, 650, 0, 1171, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	1255, 1292, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 1161, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 2791, 0, 2790, 1192, 1210, 1182, 1183, 1184,
	1180, 1181, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 293, 292, 294, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 1234,
	1198, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 676, 1247, 0, 310, 1254,
	311, 1253, 0, 1264, 312, 313, 314, 315, 316, 317,
	1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319, 320,
	1240, 0, 1221, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230,
	1226, 1225, 1229, 347, 348, 349, 350, 351, 1257, 352,
	354, 1251, 1250, 1170, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 1176, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 1265, 1266, 385, 1189, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 1249, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 1276, 394,
	395, 396, 1262, 1263, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 1272, 0, 1199, 407, 0,
	408, 409, 410, 411, 412, 413, 1235, 1236, 1239, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 1277, 502, 424,
	1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	1273, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 1228, 1227, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 1167, 289, 1286, 496, 497,
	498, 499, 1190, 1238, 500, 1252, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 1287, 513, 1288, 1267, 514, 515, 1177,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	1268, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 1248, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 1178, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 1231, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 1246, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	1293, 619, 620, 621, 622, 1269, 626, 627, 0, 628,
	629, 1164, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 1258, 1259, 1260, 1261, 0,
	648, 0, 639, 640, 641, 642, 1270, 643, 1271, 1188,
	644, 645, 646, 647, 0, 649, 650, 0, 1171, 651,
	652, 654, 656, 657, 653, 655, 658, 1232, 659, 0,
	0, 660, 661, 662, 722, 1255, 1292, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 1161, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 2788, 0, 1833,
	1192, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 1234, 1198, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 1247, 0, 310, 1254, 311, 1253, 0, 1264, 312,
	313, 314, 315, 316, 317, 1200, 1233, 1165, 318, 1294,
	1295, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 1257, 352, 354, 1251, 1250, 1170, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 1242, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 1176, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 1189, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 1249, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 1262, 1263, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 1199, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 1244, 1245, 0, 1205, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1167, 289, 1286, 496, 497, 498, 499, 1190, 1238, 500,
	1252, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 1177, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 1248, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 1178, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 1246, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 1293, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 1164, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	1258, 1259, 1260, 1261, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 1188, 644, 645, 646, 647, 0,
	649, 650, 0, 1171, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	1255, 1292, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 1832, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1168, 0, 0, 1157, 0, 1210, 1182, 1183, 1184,
	1180, 1181, 1193, 0, 1163, 0, 0, 0, 0, 0,
	0, 1161, 1162, 290, 291, 293, 292, 294, 295, 296,
	297, 1194, 298, 299, 0, 1192, 0, 0, 0, 1234,
	1198, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 676, 1247, 0, 310, 1254,
	311, 1253, 0, 1264, 312, 313, 314, 315, 316, 317,
	1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319, 320,
	1240, 0, 1221, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230,
	1226, 1225, 1229, 347, 348, 349, 350, 351, 1257, 352,
	354, 1251, 1250, 1170, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 1176, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 1265, 1266, 385, 1189, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 1249, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 1276, 394,
	395, 396, 1262, 1263, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 1272, 0, 1199, 407, 0,
	408, 409, 410, 411, 412, 413, 1235, 1236, 1239, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 1277, 502, 424,
	1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	1273, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 1228, 1227, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 1167, 289, 1286, 496, 497,
	498, 499, 1190, 1238, 500, 1252, 503, 504, 0, 0,
	505, 0, 506, 1172, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 1287, 513, 1288, 1267, 514, 515, 1177,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	1268, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 1248, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 1178, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 1231, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 1246, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	1293, 619, 620, 621, 622, 1269, 626, 627, 0, 628,
	629, 1164, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 1258, 1259, 1260, 1261, 0,
	648, 0, 639, 640, 641, 642, 1270, 643, 1271, 1188,
	644, 645, 646, 647, 0, 649, 650, 0, 1171, 651,
	652, 654, 656, 657, 653, 655, 658, 1232, 659, 0,
	0, 660, 661, 662, 722, 1255, 1292, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 1168, 0, 0, 0,
	0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 1163,
	0, 0, 0, 0, 0, 0, 1161, 1162, 290, 291,
	293, 292, 294, 295, 296, 297, 1194, 298, 299, 0,
	1192, 0, 0, 0, 1234, 1198, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 1247, 0, 310, 1254, 311, 1253, 0, 1264, 312,
	313, 314, 315, 316, 317, 1200, 1233, 1165, 318, 1294,
	1295, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 4999, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 1257, 352, 354, 1251, 1250, 1170, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 1242, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 1176, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 1189, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 1249, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 1262, 1263, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 1199, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 1244, 1245, 0, 1205, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1167, 289, 1286, 496, 497, 498, 499, 1190, 1238, 500,
	1252, 503, 504, 0, 0, 505, 0, 506, 1172, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 1177, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 1248, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 1178, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 1246, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 1293, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 1164, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	1258, 1259, 1260, 1261, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 1188, 644, 645, 646, 647, 0,
	649, 650, 0, 1171, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	1255, 1292, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1168, 0, 0, 0, 0, 1210, 1182, 1183, 1184,
	1180, 1181, 1193, 0, 1163, 0, 0, 0, 0, 0,
	0, 1161, 1162, 290, 291, 293, 292, 294, 295, 296,
	297, 1194, 298, 299, 0, 1192, 0, 0, 0, 1234,
	1198, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 676, 1247, 0, 310, 1254,
	311, 1253, 0, 1264, 312, 313, 314, 315, 316, 317,
	1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319, 320,
	1240, 0, 1221, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230,
	1226, 1225, 1229, 347, 348, 349, 350, 351, 1257, 352,
	354, 1251, 1250, 1170, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 1176, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 1265, 1266, 385, 1189, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 1249, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 1276, 394,
	395, 396, 1262, 1263, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 1272, 0, 1199, 407, 0,
	408, 409, 410, 411, 412, 413, 1235, 1236, 1239, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 2631, 421, 422, 423, 0, 1277, 502, 424,
	1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	1273, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 1228, 1227, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 1167, 289, 1286, 496, 497,
	498, 499, 1190, 1238, 500, 1252, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 1287, 513, 1288, 1267, 514, 515, 1177,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	1268, 533, 710, 534, 535, 2630, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 1248, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 1178, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 1231, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 1246, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	1293, 619, 620, 621, 622, 1269, 626, 627, 0, 628,
	629, 1164, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 1258, 1259, 1260, 1261, 0,
	648, 0, 639, 640, 641, 642, 1270, 643, 1271, 1188,
	644, 645, 646, 647, 0, 649, 650, 0, 1171, 651,
	652, 654, 656, 657, 653, 655, 658, 1232, 659, 0,
	0, 660, 661, 662, 722, 1255, 1292, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 1168, 0, 0, 0,
	0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 1163,
	0, 0, 0, 0, 0, 0, 1161, 1162, 290, 291,
	293, 292, 294, 295, 296, 297, 1194, 298, 299, 0,
	1192, 0, 0, 0, 1234, 1198, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 1247, 0, 310, 1254, 311, 1253, 0, 1264, 312,
	313, 314, 315, 316, 317, 1200, 1233, 1165, 318, 1294,
	1295, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 1257, 352, 354, 1251, 1250, 1170, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 1242, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 1176, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 1189, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 1249, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 1262, 1263, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 1199, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 1244, 1245, 0, 1205, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1167, 289, 1286, 496, 497, 498, 499, 1190, 1238, 500,
	1252, 503, 504, 0, 0, 505, 0, 506, 1172, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 1177, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 1248, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 1178, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 1246, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 1293, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 1164, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	1258, 1259, 1260, 1261, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 1188, 644, 645, 646, 647, 0,
	649, 650, 0, 1171, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	1255, 1292, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1168, 0, 0, 0, 0, 1210, 1182, 1183, 1184,
	1180, 1181, 1193, 0, 1163, 0, 0, 0, 0, 0,
	0, 1161, 1162, 290, 291, 293, 292, 294, 295, 296,
	297, 1194, 298, 299, 0, 1192, 0, 0, 0, 1234,
	1198, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 676, 1247, 0, 310, 1254,
	311, 1253, 0, 1264, 312, 313, 314, 315, 316, 317,
	1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319, 320,
	1240, 0, 1221, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 4720, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230,
	1226, 1225, 1229, 347, 348, 349, 350, 351, 1257, 352,
	354, 1251, 1250, 1170, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 1176, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 1265, 1266, 385, 1189, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 1249, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 1276, 394,
	395, 396, 1262, 1263, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 1272, 0, 1199, 407, 0,
	408, 409, 410, 411, 412, 413, 1235, 1236, 1239, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 1277, 502, 424,
	1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	1273, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 1228, 1227, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 1167, 289, 1286, 496, 497,
	498, 499, 1190, 1238, 500, 1252, 503, 504, 0, 0,
	505, 0, 506, 1172, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 1287, 513, 1288, 1267, 514, 515, 1177,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	1268, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 1248, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 1178, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 1231, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 1246, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	1293, 619, 620, 621, 622, 1269, 626, 627, 0, 628,
	629, 1164, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 1258, 1259, 1260, 1261, 0,
	648, 0, 639, 640, 641, 642, 1270, 643, 1271, 1188,
	644, 645, 646, 647, 0, 649, 650, 0, 1171, 651,
	652, 654, 656, 657, 653, 655, 658, 1232, 659, 0,
	0, 660, 661, 662, 722, 1255, 1292, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 1168, 0, 0, 0,
	0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0, 1163,
	0, 0, 0, 0, 0, 0, 1161, 1162, 290, 291,
	293, 292, 294, 295, 296, 297, 1194, 298, 299, 0,
	1192, 0, 0, 0, 1234, 1198, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 1247, 0, 310, 1254, 311, 1253, 0, 1264, 312,
	313, 314, 315, 316, 317, 1200, 1233, 1165, 318, 1294,
	1295, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 1257, 352, 354, 1251, 1250, 1170, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 1242, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 1176, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 1189, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 1249, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 1262, 1263, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 1199, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 1244, 1245, 0, 1205, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	1167, 4284, 1286, 496, 497, 498, 499, 1190, 1238, 500,
	1252, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 1177, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 1248, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 1178, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 1246, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 1293, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 1164, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	1258, 1259, 1260, 1261, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 1188, 644, 645, 646, 647, 0,
	649, 650, 0, 1171, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	1255, 1292, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 1161, 1162, 2066, 1210, 1182, 1183, 1184, 1180, 1181,
	1193, 1194, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 290, 291, 293, 292, 294, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 1234, 1198, 0,
	0, 300, 0, 301, 302, 1274, 303, 304, 305, 306,
	307, 308, 309, 676, 1247, 0, 310, 1254, 311, 1253,
	0, 1264, 312, 313, 314, 315, 316, 317, 1200, 1233,
	1165, 318, 1294, 1295, 683, 0, 319, 320, 1240, 0,
	1221, 0, 321, 322, 323, 324, 325, 326, 327, 328,
	0, 0, 330, 331, 332, 329, 333, 0, 334, 0,
	335, 336, 337, 338, 339, 340, 0, 341, 342, 343,
	1275, 344, 345, 346, 1224, 1222, 1223, 1230, 1226, 1225,
	1229, 347, 348, 349, 350, 351, 1257, 352, 354, 1251,
	1250, 1170, 357, 353, 355, 0, 358, 356, 359, 0,
	360, 361, 362, 0, 0, 363, 1242, 365, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 1176,
	374, 375, 376, 378, 380, 377, 379, 381, 382, 383,
	384, 1265, 1266, 385, 1189, 287, 0, 0, 0, 0,
	0, 386, 387, 388, 1249, 0, 0, 0, 389, 0,
	390, 391, 392, 0, 393, 0, 1276, 394, 395, 396,
	1262, 1263, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 0, 406, 1272, 0, 1199, 407, 0, 408, 409,
	410, 411, 412, 413, 1235, 1236, 1239, 501, 1278, 414,
	415, 0, 416, 417, 418, 419, 420, 0, 0, 0,
	288, 421, 422, 423, 0, 1277, 502, 424, 1244, 1245,
	0, 1205, 0, 425, 426, 1279, 1237, 1280, 427, 428,
	429, 1281, 430, 0, 0, 0, 431, 432, 433, 434,
	435, 436, 0, 437, 439, 438, 0, 440, 1273, 1282,
	441, 442, 1283, 0, 443, 444, 445, 446, 447, 448,
	451, 1228, 1227, 449, 450, 452, 453, 0, 454, 455,
	457, 460, 456, 458, 459, 461, 474, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 476,
	0, 475, 1284, 477, 478, 479, 480, 481, 488, 490,
	491, 486, 487, 489, 492, 493, 495, 483, 484, 485,
	1285, 494, 482, 1167, 289, 1286, 496, 497, 498, 499,
	1190, 1238, 500, 1252, 503, 504, 0, 0, 505, 0,
	506, 0, 0, 508, 509, 510, 0, 0, 511, 512,
	705, 1287, 513, 1288, 1267, 514, 515, 1177, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 525, 526,
	707, 527, 528, 529, 708, 530, 531, 532, 1268, 533,
	710, 534, 535, 0, 536, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 545, 1248, 546, 547, 549, 548,
	550, 0, 551, 0, 552, 553, 554, 0, 0, 0,
	0, 0, 555, 556, 558, 0, 559, 560, 561, 562,
	557, 563, 564, 565, 566, 567, 0, 568, 569, 570,
	1289, 571, 572, 573, 574, 575, 1178, 576, 0, 577,
	578, 585, 586, 587, 579, 580, 581, 588, 589, 590,
	591, 592, 0, 594, 595, 593, 596, 597, 598, 1231,
	599, 600, 582, 583, 601, 602, 1290, 603, 604, 605,
	606, 607, 608, 609, 1246, 0, 610, 0, 611, 612,
	613, 614, 615, 617, 584, 618, 623, 624, 1293, 619,
	620, 621, 622, 1269, 626, 627, 0, 628, 629, 1164,
	625, 616, 0, 630, 631, 632, 633, 634, 635, 636,
	637, 0, 638, 1258, 1259, 1260, 1261, 0, 648, 0,
	639, 640, 641, 642, 1270, 643, 1271, 1188, 644, 645,
	646, 647, 0, 649, 650, 0, 1171, 651, 652, 654,
	656, 657, 653, 655, 658, 1232, 659, 0, 0, 660,
	661, 662, 722, 1255, 1292, 3960, 664, 663, 665, 666,
	667, 725, 668, 669, 0, 0, 0, 0, 670, 671,
	726, 672, 673, 674, 1168, 0, 0, 0, 0, 1210,
	1182, 1183, 1184, 1180, 1181, 1193, 0, 1163, 0, 0,
	0, 0, 0, 0, 1161, 1162, 290, 291, 293, 292,
	294, 295, 296, 297, 1194, 298, 299, 0, 1192, 0,
	0, 0, 1234, 1198, 0, 0, 300, 0, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 1247,
	0, 310, 1254, 311, 1253, 0, 1264, 312, 313, 314,
	315, 316, 317, 1200, 1233, 1165, 318, 1294, 1295, 683,
	0, 319, 320, 1240, 0, 1221, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 1275, 344, 345, 346, 1224,
	1222, 1223, 1230, 1226, 1225, 1229, 347, 348, 349, 350,
	351, 1257, 352, 354, 1251, 1250, 1170, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 1242, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 1176, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 1265, 1266, 385, 1189,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 1249,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 1276, 394, 395, 396, 1262, 1263, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 1272, 0,
	1199, 407, 0, 408, 409, 410, 411, 412, 413, 1235,
	1236, 1239, 501, 1278, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	1277, 502, 424, 1244, 1245, 0, 1205, 0, 425, 426,
	1279, 1237, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 1273, 1282, 441, 442, 1283, 0, 443,
	444, 445, 446, 447, 448, 451, 1228, 1227, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 1167, 289,
	1286, 496, 497, 498, 499, 1190, 1238, 500, 1252, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 1287, 513, 1288, 1267,
	514, 515, 1177, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 1268, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	1248, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 1178, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 1231, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 1246,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 1293, 619, 620, 621, 622, 1269, 626,
	627, 0, 628, 629, 1164, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 1258, 1259,
	1260, 1261, 0, 648, 0, 639, 640, 641, 642, 1270,
	643, 1271, 1188, 644, 645, 646, 647, 0, 649, 650,
	0, 1171, 651, 652, 654, 656, 657, 653, 655, 658,
	1232, 659, 0, 0, 660, 661, 662, 722, 1255, 1292,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 0,
	0, 0, 0, 670, 671, 726, 672, 673, 674, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 1161,
	1162, 2066, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 1194,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 2890, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 0, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 1194, 1995, 0,
	2895, 1192, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 2893, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	2881, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 2869, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	2867, 0, 2858, 2865, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 2861, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	2862, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 2863, 461, 2860, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 2864,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	2859, 674, 1168, 0, 0, 2855, 0, 2858, 2865, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	2861, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 2862, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 2863, 461, 2860,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 2864, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 2859, 674, 1168, 0, 0,
	0, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 0, 0, 0, 0, 0, 0,
	2003, 0, 1194, 0, 0, 0, 1192, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 2610, 298, 299, 0, 0, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	2572, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 2543, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	1838, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 1767, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	1762, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 1748, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	1743, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 1652, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1651, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	1646, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1645, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 1639, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	1604, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 1586, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 1590,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 1591, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 1589, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	1418, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 0, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	0, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 5048, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 5047, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 0, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 5046, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 5048, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 5047, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	0, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	4648, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 4649, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 4647, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 0, 0, 1210, 1182, 1183,
	1184, 3384, 3385, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	0, 0, 1210, 1182, 1183, 1184, 3382, 3383, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 1161, 1162, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1168, 0, 0, 0, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 1163, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 1165, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 1170, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 1167, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	1177, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 1178,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 1164, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 1171,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1168, 0, 0,
	0, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	1163, 0, 0, 0, 0, 0, 0, 2618, 2619, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 0, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 1279, 1237, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 289, 1286, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 0, 0, 0, 0, 0, 1210, 1182, 1183,
	1184, 1180, 1181, 1193, 0, 2877, 0, 0, 0, 0,
	0, 0, 2875, 2876, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 1198, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 1247, 0, 310,
	1254, 311, 1253, 0, 1264, 312, 313, 314, 315, 316,
	317, 1200, 1233, 0, 318, 1294, 1295, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 1257,
	352, 354, 1251, 1250, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 1242,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 1176, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 1189, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 1249, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 1262, 1263, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 1199, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 1244, 1245, 0, 1205, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 0, 289, 1286, 496,
	497, 498, 499, 1190, 1238, 500, 1252, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 1248, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 3377,
	3378, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 1246, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 1293, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 1258, 1259, 1260, 1261,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	1188, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 1255, 1292, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 1210, 1182, 1183, 1184, 1180, 1181, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 2248, 2249, 290,
	291, 293, 292, 294, 295, 296, 297, 1194, 298, 299,
	0, 1192, 0, 0, 0, 1234, 1198, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 0, 1247, 0, 310, 1254, 311, 1253, 0, 1264,
	312, 313, 314, 315, 316, 317, 1200, 1233, 1165, 318,
	1294, 1295, 683, 0, 319, 320, 1240, 0, 1221, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 5048, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347,
	348, 349, 350, 351, 1257, 352, 354, 1251, 1250, 1170,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 1242, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 1176, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 1265,
	1266, 385, 1189, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 1249, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 1262, 1263,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 1272, 0, 1199, 407, 0, 408, 409, 410, 411,
	412, 413, 1235, 1236, 1239, 501, 0, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 288, 421,
	422, 423, 0, 1277, 502, 424, 1244, 1245, 0, 1205,
	0, 425, 426, 0, 1237, 0, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 1273, 1282, 441, 442,
	0, 0, 443, 444, 445, 446, 447, 448, 451, 1228,
	1227, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 1167, 289, 0, 496, 497, 498, 499, 1190, 1238,
	500, 1252, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 1267, 514, 515, 1177, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 1268, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 1248, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 1178, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 1231, 599, 600,
	582, 583, 601, 602, 0, 603, 604, 605, 606, 607,
	608, 609, 1246, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 1293, 619, 620, 621,
	622, 1269, 626, 627, 0, 628, 629, 1164, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 1258, 1259, 1260, 1261, 0, 648, 0, 639, 640,
	641, 642, 1270, 643, 1271, 1188, 644, 645, 646, 647,
	0, 5047, 650, 0, 1171, 651, 652, 654, 656, 657,
	653, 655, 658, 1232, 659, 0, 0, 660, 661, 662,
	722, 1255, 1292, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 0, 0, 0, 1154, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1161, 1162, 290, 291, 293, 292, 294, 295,
	296, 297, 1194, 298, 299, 0, 1192, 0, 0, 0,
	1234, 0, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 1233, 0, 318, 681, 682, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 1318, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 0, 289, 1286, 496,
	497, 498, 499, 0, 1238, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 1324, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	1326, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 246, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 0, 625, 616, 248, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 1732, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 1332,
	240, 670, 671, 726, 672, 673, 674, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 1234, 0, 0, 1322, 300, 2090, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 1233, 0, 318, 681, 682, 683,
	0, 319, 320, 1240, 0, 1221, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 1275, 344, 345, 346, 1224,
	1222, 1223, 1230, 1226, 1225, 1229, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 1265, 1266, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 1272, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 1235,
	1236, 1239, 501, 1278, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	1277, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	1279, 1237, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 1318, 437, 439,
	438, 0, 440, 1273, 1282, 441, 442, 1283, 0, 443,
	444, 445, 446, 447, 448, 451, 1228, 1227, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 0, 289,
	1286, 496, 497, 498, 499, 0, 1238, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 1324, 508, 509,
	510, 0, 0, 511, 512, 705, 1287, 513, 1288, 1267,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 1268, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 1326, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 246, 594, 595,
	593, 596, 597, 598, 1231, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 1269, 626,
	627, 0, 628, 629, 0, 625, 616, 248, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 1270,
	643, 1271, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	1232, 659, 0, 0, 660, 661, 662, 1732, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 3541,
	0, 1332, 240, 670, 671, 726, 672, 673, 674, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 1234, 0, 0, 1322, 300, 2090,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 1233, 0, 318, 681,
	682, 683, 0, 319, 320, 1240, 0, 1221, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 1265, 1266,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	1272, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 1235, 1236, 1239, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 1277, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 1279, 1237, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 1318,
	437, 439, 438, 0, 440, 1273, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 1228, 1227,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	0, 289, 1286, 496, 497, 498, 499, 0, 1238, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 1324,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 1267, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 1268, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 712, 1326, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1231, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	1269, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 1270, 643, 1271, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 1232, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 1314, 0, 1332, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 1234, 0, 0, 1322,
	300, 1320, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 1233, 0,
	318, 681, 682, 683, 0, 319, 320, 1240, 0, 1221,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 1275,
	344, 345, 346, 1224, 1222, 1223, 1230, 1226, 1225, 1229,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	1265, 1266, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 1272, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 1235, 1236, 1239, 501, 1278, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 0, 1277, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 1279, 1237, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 1318, 437, 439, 438, 0, 440, 1273, 1282, 441,
	442, 1283, 0, 443, 444, 445, 446, 447, 448, 451,
	1228, 1227, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 0, 289, 1286, 496, 497, 498, 499, 0,
	1238, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 1324, 508, 509, 510, 0, 0, 511, 512, 705,
	1287, 513, 1288, 1267, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 1268, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 1326, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 1231, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 1269, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 1270, 643, 1271, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 1232, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 0, 0, 1332, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 1234, 0,
	0, 1322, 300, 1320, 301, 302, 1274, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	1233, 0, 318, 681, 682, 683, 0, 319, 320, 1240,
	0, 1221, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 1275, 344, 345, 346, 1224, 1222, 1223, 1230, 1226,
	1225, 1229, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 1265, 1266, 385, 0, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 1276, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 1272, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 1235, 1236, 1239, 501, 1278,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 1277, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 1279, 1237, 1280, 427,
	428, 429, 1281, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 1318, 437, 439, 438, 0, 440, 1273,
	1282, 441, 442, 1283, 0, 443, 444, 445, 446, 447,
	448, 451, 1228, 1227, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 1284, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 1285, 494, 482, 0, 289, 1286, 496, 497, 498,
	499, 0, 1238, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 1324, 508, 509, 510, 0, 0, 511,
	512, 705, 1287, 513, 1288, 1267, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 1268,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 1289, 571, 572, 573, 574, 575, 712, 1326, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	1231, 599, 600, 582, 583, 601, 602, 1290, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 1269, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 1270, 643, 1271, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 1232, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 0, 0, 1332, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	1234, 0, 0, 1322, 300, 1320, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 1233, 0, 318, 681, 682, 683, 0, 319,
	320, 1240, 0, 1221, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 1224, 1222, 1223,
	1230, 1226, 1225, 1229, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 1265, 1266, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 1272, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 1235, 1236, 1239,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 1277, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 1279, 1237,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 1273, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 1228, 1227, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 0, 289, 1286, 496,
	497, 498, 499, 0, 1238, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 1267, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 1268, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1231, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 1269, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 1270, 643, 1271,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 1232, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 1332,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 300, 4460, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 1233, 0, 318, 681, 682, 683,
	0, 319, 320, 1240, 0, 1221, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 1275, 344, 345, 346, 1224,
	1222, 1223, 1230, 1226, 1225, 1229, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 1265, 1266, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 1272, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 1235,
	1236, 1239, 501, 1278, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	1277, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	1279, 1237, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 1273, 1282, 441, 442, 1283, 0, 443,
	444, 445, 446, 447, 448, 451, 1228, 1227, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 0, 289,
	1286, 496, 497, 498, 499, 0, 1238, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 1287, 513, 1288, 1267,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 1268, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 1326, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 1231, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 1269, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 1270,
	643, 1271, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	1232, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 0,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 2722, 2723, 2724, 2741, 2742, 2743, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 2744, 0, 675, 0, 0, 0, 300, 1987,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 1972, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 2734, 0, 330,
	331, 332, 329, 333, 0, 334, 2730, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 2735, 2736, 2737, 2738, 386, 387,
	388, 690, 0, 0, 2729, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 2739, 2740, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 2732, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 2733, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 1971, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 1154, 0,
	1611, 2719, 2720, 2721, 2745, 2731, 2725, 0, 2727, 2728,
	2726, 2713, 2714, 2715, 2716, 2717, 2718, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 300, 0, 301,
	302, 1274, 303, 304, 305, 306, 307, 308, 309, 676,
	677, 0, 310, 678, 311, 679, 0, 680, 312, 313,
	314, 315, 316, 317, 0, 0, 0, 318, 681, 682,
	683, 0, 319, 320, 684, 0, 1575, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 1275, 344, 345, 346,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 349,
	350, 351, 0, 352, 354, 685, 686, 0, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 687, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 688, 689, 385,
	0, 287, 0, 0, 0, 0, 0, 386, 387, 388,
	690, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 1276, 394, 395, 396, 691, 692, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 693,
	0, 694, 407, 0, 408, 409, 410, 411, 412, 413,
	695, 696, 697, 501, 1278, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 0, 421, 422, 423,
	0, 1277, 502, 424, 698, 699, 0, 700, 0, 425,
	426, 1279, 701, 1280, 427, 428, 429, 1281, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 702, 1282, 441, 442, 1283, 0,
	443, 444, 445, 446, 447, 448, 451, 0, 0, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 1284, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 1285, 494, 482, 0,
	0, 1286, 496, 497, 498, 499, 0, 703, 500, 704,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 705, 1287, 513, 1288,
	706, 514, 515, 507, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 707, 527, 528, 529,
	708, 530, 531, 532, 709, 533, 710, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 711, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 1289, 571, 572, 573,
	574, 575, 712, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 246, 594,
	595, 593, 596, 597, 598, 0, 599, 600, 582, 583,
	601, 602, 1290, 603, 604, 605, 606, 607, 608, 609,
	713, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 714, 619, 620, 621, 622, 715,
	626, 627, 0, 628, 629, 0, 625, 616, 248, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 716,
	717, 718, 719, 0, 648, 0, 639, 640, 641, 642,
	720, 643, 721, 0, 644, 645, 646, 647, 0, 649,
	650, 0, 0, 651, 652, 654, 656, 657, 653, 655,
	658, 0, 659, 0, 0, 660, 661, 662, 1732, 723,
	724, 0, 664, 663, 665, 666, 667, 725, 668, 669,
	1729, 0, 1611, 240, 670, 671, 726, 672, 673, 674,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 675, 0, 0, 0, 300,
	201, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 1575, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 1277, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 1279, 701, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 702, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 0, 1286, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	246, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	248, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	1732, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 240, 670, 671, 726, 672,
	673, 674, 1611, 1610, 241, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 201, 0, 0, 675, 0, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 1575, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 1277, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 1279, 701, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 702, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 0, 1286, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	722, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1611, 1610, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 1756, 0, 0, 675, 0, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 1575, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 1277, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 1279, 701, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 702, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 0, 1286, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	722, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1611, 1610, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 3870, 0, 0, 675, 0, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 1575, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 1277, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 1279, 701, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 702, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 0, 1286, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 2482, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	722, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1611, 2391, 0, 0, 0, 0, 2392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 1756, 0, 0, 675, 0, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 1575, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 1277, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 1279, 701, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 2390, 439, 438, 0, 440, 702, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 0, 1286, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	722, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 0, 0, 670, 671, 726, 672,
	673, 674, 1611, 1610, 0, 0, 0, 0, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 1756, 0, 0, 675, 0, 0, 0, 300,
	0, 301, 302, 1274, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 1575, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 1275, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 287, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 1276, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 1278, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 1277, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 1279, 701, 1280, 427, 428, 429, 1281,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 702, 1282, 441, 442,
	1283, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	1284, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 1285, 494,
	482, 0, 0, 1286, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 1287,
	513, 1288, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 1289, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 1290, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	722, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 1154, 0, 284, 0, 670, 671, 726, 672,
	673, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 293, 292, 294, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 300, 1738, 301, 302, 0, 303, 304, 305, 306,
	307, 308, 309, 676, 677, 0, 310, 678, 311, 679,
	0, 680, 312, 313, 314, 315, 316, 317, 0, 0,
	0, 318, 681, 682, 683, 0, 319, 320, 684, 0,
	0, 0, 321, 322, 323, 324, 325, 326, 327, 328,
	0, 0, 330, 331, 332, 329, 333, 0, 334, 0,
	335, 336, 337, 338, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 346, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 349, 350, 351, 0, 352, 354, 685,
	686, 0, 357, 353, 355, 0, 358, 356, 359, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 687,
	374, 375, 376, 378, 380, 377, 379, 381, 382, 383,
	384, 688, 689, 385, 0, 0, 0, 0, 0, 0,
	0, 386, 387, 388, 690, 0, 0, 0, 389, 0,
	390, 391, 392, 0, 393, 0, 0, 394, 395, 396,
	691, 692, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 0, 406, 693, 0, 694, 407, 0, 408, 409,
	410, 411, 412, 413, 695, 696, 697, 501, 0, 414,
	415, 0, 416, 417, 418, 419, 420, 0, 0, 0,
	0, 421, 422, 423, 0, 0, 502, 424, 698, 699,
	0, 700, 0, 425, 426, 0, 701, 0, 427, 428,
	429, 0, 430, 0, 0, 0, 431, 432, 433, 434,
	435, 436, 0, 437, 439, 438, 0, 440, 702, 0,
	441, 442, 0, 0, 443, 444, 445, 446, 447, 448,
	451, 0, 0, 449, 450, 452, 453, 0, 454, 455,
	457, 460, 456, 458, 459, 461, 474, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 476,
	0, 475, 0, 477, 478, 479, 480, 481, 488, 490,
	491, 486, 487, 489, 492, 493, 495, 483, 484, 485,
	0, 494, 482, 0, 0, 0, 496, 497, 498, 499,
	0, 703, 500, 704, 503, 504, 0, 0, 505, 0,
	506, 0, 0, 508, 509, 510, 0, 0, 511, 512,
	705, 0, 513, 0, 706, 514, 515, 507, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 525, 526,
	707, 527, 528, 529, 708, 530, 531, 532, 709, 533,
	710, 534, 535, 0, 536, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 545, 711, 546, 547, 549, 548,
	550, 0, 551, 0, 552, 553, 554, 0, 0, 0,
	0, 0, 555, 556, 558, 0, 559, 560, 561, 562,
	557, 563, 564, 565, 566, 567, 0, 568, 569, 570,
	0, 571, 572, 573, 574, 575, 712, 576, 0, 577,
	578, 585, 586, 587, 579, 580, 581, 588, 589, 590,
	591, 592, 246, 594, 595, 593, 596, 597, 598, 0,
	599, 600, 582, 583, 601, 602, 0, 603, 604, 605,
	606, 607, 608, 609, 713, 0, 610, 0, 611, 612,
	613, 614, 615, 617, 584, 618, 623, 624, 714, 619,
	620, 621, 622, 715, 626, 627, 0, 628, 629, 0,
	625, 616, 248, 630, 631, 632, 633, 634, 635, 636,
	637, 0, 638, 716, 717, 718, 719, 0, 648, 0,
	639, 640, 641, 642, 720, 643, 721, 0, 644, 645,
	646, 647, 0, 649, 650, 0, 0, 651, 652, 654,
	656, 657, 653, 655, 658, 0, 659, 0, 0, 660,
	661, 662, 1732, 723, 724, 0, 664, 663, 665, 666,
	667, 725, 668, 669, 0, 0, 284, 240, 670, 671,
	726, 672, 673, 674, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 290, 291, 293, 292, 294, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 675,
	0, 0, 0, 300, 201, 301, 302, 0, 303, 304,
	305, 306, 307, 308, 309, 676, 677, 0, 310, 678,
	311, 679, 0, 680, 312, 313, 314, 315, 316, 317,
	0, 0, 0, 318, 681, 682, 683, 0, 319, 320,
	684, 0, 0, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 346, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 349, 350, 351, 0, 352,
	354, 685, 686, 0, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 687, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 688, 689, 385, 0, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 690, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 0, 394,
	395, 396, 691, 692, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 693, 0, 694, 407, 0,
	408, 409, 410, 411, 412, 413, 695, 696, 697, 501,
	0, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 0, 502, 424,
	698, 699, 0, 700, 0, 425, 426, 0, 701, 0,
	427, 428, 429, 0, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	702, 0, 441, 442, 0, 0, 443, 444, 445, 446,
	447, 448, 451, 0, 0, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 0, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 0, 494, 482, 0, 289, 0, 496, 497,
	498, 499, 0, 703, 500, 704, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 0, 513, 0, 706, 514, 515, 507,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	709, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 711, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 0, 571, 572, 573, 574, 575, 712, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 0, 599, 600, 582, 583, 601, 602, 0, 603,
	604, 605, 606, 607, 608, 609, 713, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	714, 619, 620, 621, 622, 715, 626, 627, 0, 628,
	629, 0, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 716, 717, 718, 719, 0,
	648, 0, 639, 640, 641, 642, 720, 643, 721, 0,
	644, 645, 646, 647, 0, 649, 650, 0, 0, 651,
	652, 654, 656, 657, 653, 655, 658, 0, 659, 0,
	0, 660, 661, 662, 722, 723, 724, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 0, 0, 284, 3150,
	670, 671, 726, 672, 673, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 293, 292, 294,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 300, 2104, 301, 302, 0,
	303, 304, 305, 306, 307, 308, 309, 676, 677, 0,
	310, 678, 311, 679, 0, 680, 312, 313, 314, 315,
	316, 317, 0, 0, 0, 318, 681, 682, 683, 0,
	319, 320, 684, 0, 0, 0, 321, 322, 323, 324,
	325, 326, 327, 328, 0, 0, 330, 331, 332, 329,
	333, 0, 334, 0, 335, 336, 337, 338, 339, 340,
	0, 341, 342, 343, 0, 344, 345, 346, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 349, 350, 351,
	0, 352, 354, 685, 686, 0, 357, 353, 355, 0,
	358, 356, 359, 0, 360, 361, 362, 0, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 371,
	0, 372, 373, 687, 374, 375, 376, 378, 380, 377,
	379, 381, 382, 383, 384, 688, 689, 385, 0, 0,
	0, 0, 0, 0, 0, 386, 387, 388, 690, 0,
	0, 0, 389, 0, 390, 391, 392, 0, 393, 0,
	0, 394, 395, 396, 691, 692, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 0, 406, 693, 0, 694,
	407, 0, 408, 409, 410, 411, 412, 413, 695, 696,
	697, 501, 0, 414, 415, 0, 416, 417, 418, 419,
	420, 0, 0, 0, 0, 421, 422, 423, 0, 0,
	502, 424, 698, 699, 0, 700, 0, 425, 426, 0,
	701, 0, 427, 428, 429, 0, 430, 0, 0, 0,
	431, 432, 433, 434, 435, 436, 0, 437, 439, 438,
	0, 440, 702, 0, 441, 442, 0, 0, 443, 444,
	445, 446, 447, 448, 451, 0, 0, 449, 450, 452,
	453, 0, 454, 455, 457, 460, 456, 458, 459, 461,
	474, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 476, 0, 475, 0, 477, 478, 479,
	480, 481, 488, 490, 491, 486, 487, 489, 492, 493,
	495, 483, 484, 485, 0, 494, 482, 0, 0, 0,
	496, 497, 498, 499, 0, 703, 500, 704, 503, 504,
	0, 0, 505, 0, 506, 0, 0, 508, 509, 510,
	0, 0, 511, 512, 705, 0, 513, 0, 706, 514,
	515, 507, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 525, 526, 707, 527, 528, 529, 708, 530,
	531, 532, 709, 533, 710, 534, 535, 0, 536, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 545, 711,
	546, 547, 549, 548, 550, 0, 551, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 555, 556, 558, 0,
	559, 560, 561, 562, 557, 563, 564, 565, 566, 567,
	0, 568, 569, 570, 0, 571, 572, 573, 574, 575,
	712, 576, 0, 577, 578, 585, 586, 587, 579, 580,
	581, 588, 589, 590, 591, 592, 0, 594, 595, 593,
	596, 597, 598, 0, 599, 600, 582, 583, 601, 602,
	0, 603, 604, 605, 606, 607, 608, 609, 713, 0,
	610, 0, 611, 612, 613, 614, 615, 617, 584, 618,
	623, 624, 714, 619, 620, 621, 622, 715, 626, 627,
	0, 628, 629, 0, 625, 616, 0, 630, 631, 632,
	633, 634, 635, 636, 637, 0, 638, 716, 717, 718,
	719, 0, 648, 0, 639, 640, 641, 642, 720, 643,
	721, 0, 644, 645, 646, 647, 0, 649, 650, 0,
	0, 651, 652, 654, 656, 657, 653, 655, 658, 0,
	659, 0, 0, 660, 661, 662, 722, 723, 724, 0,
	664, 663, 665, 666, 667, 725, 668, 669, 0, 0,
	1332, 0, 670, 671, 726, 672, 673, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 1234, 0, 0, 0, 300, 5215, 301,
	302, 1274, 303, 304, 305, 306, 307, 308, 309, 676,
	677, 0, 310, 678, 311, 679, 0, 680, 312, 313,
	314, 315, 316, 317, 0, 1233, 0, 318, 681, 682,
	683, 0, 319, 320, 1240, 0, 1221, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 1275, 344, 345, 346,
	1224, 1222, 1223, 1230, 1226, 1225, 1229, 347, 348, 349,
	350, 351, 0, 352, 354, 685, 686, 0, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 687, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 1265, 1266, 385,
	0, 287, 0, 0, 0, 0, 0, 386, 387, 388,
	690, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 1276, 394, 395, 396, 691, 692, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 1272,
	0, 694, 407, 0, 408, 409, 410, 411, 412, 413,
	1235, 1236, 1239, 501, 1278, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 288, 421, 422, 423,
	0, 1277, 502, 424, 698, 699, 0, 700, 0, 425,
	426, 1279, 1237, 1280, 427, 428, 429, 1281, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 1273, 1282, 441, 442, 1283, 0,
	443, 444, 445, 446, 447, 448, 451, 1228, 1227, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 1284, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 1285, 494, 482, 0,
	289, 1286, 496, 497, 498, 499, 0, 1238, 500, 704,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 705, 1287, 513, 1288,
	1267, 514, 515, 507, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 707, 527, 528, 529,
	708, 530, 531, 532, 1268, 533, 710, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 711, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 1289, 571, 572, 573,
	574, 575, 712, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 0, 594,
	595, 593, 596, 597, 598, 1231, 599, 600, 582, 583,
	601, 602, 1290, 603, 604, 605, 606, 607, 608, 609,
	713, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 714, 619, 620, 621, 622, 1269,
	626, 627, 0, 628, 629, 0, 625, 616, 0, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 716,
	717, 718, 719, 0, 648, 0, 639, 640, 641, 642,
	1270, 643, 1271, 0, 644, 645, 646, 647, 0, 649,
	650, 0, 0, 651, 652, 654, 656, 657, 653, 655,
	658, 1232, 659, 0, 0, 660, 661, 662, 722, 723,
	724, 0, 664, 663, 665, 666, 667, 725, 668, 669,
	284, 0, 0, 0, 670, 671, 726, 672, 673, 674,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 300, 0, 301,
	302, 0, 303, 304, 305, 306, 307, 308, 309, 676,
	677, 0, 310, 678, 311, 679, 0, 680, 312, 313,
	314, 315, 316, 317, 0, 0, 0, 318, 681, 682,
	683, 0, 319, 320, 684, 0, 0, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 346,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 349,
	350, 351, 0, 352, 354, 685, 686, 0, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 687, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 688, 689, 385,
	0, 287, 0, 0, 0, 0, 0, 386, 387, 388,
	690, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 0, 394, 395, 396, 691, 692, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 693,
	0, 694, 407, 0, 408, 409, 410, 411, 412, 413,
	695, 696, 697, 501, 0, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 288, 421, 422, 423,
	0, 0, 502, 424, 698, 699, 0, 700, 0, 425,
	426, 0, 701, 0, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 702, 0, 441, 442, 0, 0,
	443, 444, 445, 446, 447, 448, 451, 0, 0, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 0, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 0, 494, 482, 0,
	289, 0, 496, 497, 498, 499, 0, 703, 500, 704,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 705, 0, 513, 0,
	706, 514, 515, 507, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 707, 527, 528, 529,
	708, 530, 531, 532, 709, 533, 710, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 711, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 0, 571, 572, 573,
	574, 575, 712, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 0, 594,
	595, 593, 596, 597, 598, 0, 599, 600, 582, 583,
	601, 602, 0, 603, 604, 605, 606, 607, 608, 609,
	713, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 714, 619, 620, 621, 622, 715,
	626, 627, 0, 628, 629, 0, 625, 616, 0, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 716,
	717, 718, 719, 0, 648, 0, 639, 640, 641, 642,
	720, 643, 721, 0, 644, 645, 646, 647, 0, 649,
	650, 0, 0, 651, 652, 654, 656, 657, 653, 655,
	658, 0, 659, 0, 0, 660, 661, 662, 722, 723,
	724, 0, 664, 663, 665, 666, 667, 725, 668, 669,
	284, 0, 0, 0, 670, 671, 726, 672, 673, 674,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 300, 3823, 301,
	302, 0, 303, 304, 305, 306, 307, 308, 309, 676,
	677, 0, 310, 678, 311, 679, 0, 680, 312, 313,
	314, 315, 316, 317, 0, 0, 0, 318, 681, 682,
	683, 0, 319, 320, 684, 0, 0, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 346,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 349,
	350, 351, 0, 352, 354, 685, 686, 0, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 687, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 688, 689, 385,
	0, 287, 0, 0, 0, 0, 0, 386, 387, 388,
	690, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 0, 394, 395, 396, 691, 692, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 693,
	0, 694, 407, 0, 408, 409, 410, 411, 412, 413,
	695, 696, 697, 501, 0, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 288, 421, 422, 423,
	0, 0, 502, 424, 698, 699, 0, 700, 0, 425,
	426, 0, 701, 0, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 702, 0, 441, 442, 0, 0,
	443, 444, 445, 446, 447, 448, 451, 0, 0, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 0, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 0, 494, 482, 0,
	289, 0, 496, 497, 498, 499, 0, 703, 500, 704,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 705, 0, 513, 0,
	706, 514, 515, 507, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 707, 527, 528, 529,
	708, 530, 531, 532, 709, 533, 710, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 711, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 0, 571, 572, 573,
	574, 575, 712, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 0, 594,
	595, 593, 596, 597, 598, 0, 599, 600, 582, 583,
	601, 602, 0, 603, 604, 605, 606, 607, 608, 609,
	713, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 714, 619, 620, 621, 622, 715,
	626, 627, 0, 628, 629, 0, 625, 616, 0, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 716,
	717, 718, 719, 0, 648, 0, 639, 640, 641, 642,
	720, 643, 721, 0, 644, 645, 646, 647, 0, 649,
	650, 0, 0, 651, 652, 654, 656, 657, 653, 655,
	658, 0, 659, 0, 0, 660, 661, 662, 722, 723,
	724, 0, 664, 663, 665, 666, 667, 725, 668, 669,
	284, 0, 0, 0, 670, 671, 726, 672, 673, 674,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 300, 1726, 301,
	302, 0, 303, 304, 305, 306, 307, 308, 309, 676,
	677, 0, 310, 678, 311, 679, 0, 680, 312, 313,
	314, 315, 316, 317, 0, 0, 0, 318, 681, 682,
	683, 0, 319, 320, 684, 0, 0, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 346,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 349,
	350, 351, 0, 352, 354, 685, 686, 0, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 687, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 688, 689, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	690, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 0, 394, 395, 396, 691, 692, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 693,
	0, 694, 407, 0, 408, 409, 410, 411, 412, 413,
	695, 696, 697, 501, 0, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 0, 421, 422, 423,
	0, 0, 502, 424, 698, 699, 0, 700, 0, 425,
	426, 0, 701, 0, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 702, 0, 441, 442, 0, 0,
	443, 444, 445, 446, 447, 448, 451, 0, 0, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 0, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 0, 494, 482, 0,
	0, 0, 496, 497, 498, 499, 0, 703, 500, 704,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 705, 0, 513, 0,
	706, 514, 515, 507, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 707, 527, 528, 529,
	708, 530, 531, 532, 709, 533, 710, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 711, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 0, 571, 572, 573,
	574, 575, 712, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 0, 594,
	595, 593, 596, 597, 598, 0, 599, 600, 582, 583,
	601, 602, 0, 603, 604, 605, 606, 607, 608, 609,
	713, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 714, 619, 620, 621, 622, 715,
	626, 627, 0, 628, 629, 0, 625, 616, 0, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 716,
	717, 718, 719, 0, 648, 0, 639, 640, 641, 642,
	720, 643, 721, 0, 644, 645, 646, 647, 0, 649,
	650, 0, 0, 651, 652, 654, 656, 657, 653, 655,
	658, 0, 659, 0, 0, 660, 661, 662, 722, 723,
	724, 0, 664, 663, 665, 666, 667, 725, 668, 669,
	0, 0, 284, 0, 670, 671, 726, 672, 673, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 293, 292, 294, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 675, 0, 0, 0, 300,
	3274, 301, 302, 0, 303, 304, 305, 306, 307, 308,
	309, 676, 677, 0, 310, 678, 311, 679, 0, 680,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 318,
	681, 682, 683, 0, 319, 320, 684, 0, 0, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 0, 0,
	330, 331, 332, 329, 333, 0, 334, 0, 335, 336,
	337, 338, 339, 340, 0, 341, 342, 343, 0, 344,
	345, 346, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 349, 350, 351, 0, 352, 354, 685, 686, 0,
	357, 353, 355, 0, 358, 356, 359, 0, 360, 361,
	362, 0, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 371, 0, 372, 373, 687, 374, 375,
	376, 378, 380, 377, 379, 381, 382, 383, 384, 688,
	689, 385, 0, 0, 0, 0, 0, 0, 0, 386,
	387, 388, 690, 0, 0, 0, 389, 0, 390, 391,
	392, 0, 393, 0, 0, 394, 395, 396, 691, 692,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 0,
	406, 693, 0, 694, 407, 0, 408, 409, 410, 411,
	412, 413, 695, 696, 697, 501, 0, 414, 415, 0,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 421,
	422, 423, 0, 0, 502, 424, 698, 699, 0, 700,
	0, 425, 426, 0, 701, 0, 427, 428, 429, 0,
	430, 0, 0, 0, 431, 432, 433, 434, 435, 436,
	0, 437, 439, 438, 0, 440, 702, 0, 441, 442,
	0, 0, 443, 444, 445, 446, 447, 448, 451, 0,
	0, 449, 450, 452, 453, 0, 454, 455, 457, 460,
	456, 458, 459, 461, 474, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 476, 0, 475,
	0, 477, 478, 479, 480, 481, 488, 490, 491, 486,
	487, 489, 492, 493, 495, 483, 484, 485, 0, 494,
	482, 0, 0, 0, 496, 497, 498, 499, 0, 703,
	500, 704, 503, 504, 0, 0, 505, 0, 506, 0,
	0, 508, 509, 510, 0, 0, 511, 512, 705, 0,
	513, 0, 706, 514, 515, 507, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 707, 527,
	528, 529, 708, 530, 531, 532, 709, 533, 710, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 545, 711, 546, 547, 549, 548, 550, 0,
	551, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	555, 556, 558, 0, 559, 560, 561, 562, 557, 563,
	564, 565, 566, 567, 0, 568, 569, 570, 0, 571,
	572, 573, 574, 575, 712, 576, 0, 577, 578, 585,
	586, 587, 579, 580, 581, 588, 589, 590, 591, 592,
	0, 594, 595, 593, 596, 597, 598, 0, 599, 600,
	582, 583, 601, 602, 0, 603, 604, 605, 606, 607,
	608, 609, 713, 0, 610, 0, 611, 612, 613, 614,
	615, 617, 584, 618, 623, 624, 714, 619, 620, 621,
	622, 715, 626, 627, 0, 628, 629, 0, 625, 616,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	638, 716, 717, 718, 719, 0, 648, 0, 639, 640,
	641, 642, 720, 643, 721, 0, 644, 645, 646, 647,
	0, 649, 650, 0, 0, 651, 652, 654, 656, 657,
	653, 655, 658, 0, 659, 0, 0, 660, 661, 662,
	722, 723, 724, 0, 664, 663, 665, 666, 667, 725,
	668, 669, 0, 0, 284, 0, 670, 671, 726, 672,
	673, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 293, 292, 294, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 300, 3985, 301, 302, 0, 303, 304, 305, 306,
	307, 308, 309, 676, 677, 0, 310, 678, 311, 679,
	0, 680, 312, 313, 314, 315, 316, 317, 0, 0,
	0, 318, 681, 682, 683, 0, 319, 320, 684, 0,
	0, 0, 321, 322, 323, 324, 325, 326, 327, 328,
	0, 0, 330, 331, 332, 329, 333, 0, 334, 0,
	335, 336, 337, 338, 339, 340, 0, 341, 342, 343,
	0, 344, 345, 346, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 349, 350, 351, 0, 352, 354, 685,
	686, 0, 357, 353, 355, 0, 358, 356, 359, 0,
	360, 361, 362, 0, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 371, 0, 372, 373, 687,
	374, 375, 376, 378, 380, 377, 379, 381, 382, 383,
	384, 688, 689, 385, 0, 0, 0, 0, 0, 0,
	0, 386, 387, 388, 690, 0, 0, 0, 389, 0,
	390, 391, 392, 0, 393, 0, 0, 394, 395, 396,
	691, 692, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 0, 406, 693, 0, 694, 407, 0, 408, 409,
	410, 411, 412, 413, 695, 696, 697, 501, 0, 414,
	415, 0, 416, 417, 418, 419, 420, 0, 0, 0,
	0, 421, 422, 423, 0, 0, 502, 424, 698, 699,
	0, 700, 0, 425, 426, 0, 701, 0, 427, 428,
	429, 0, 430, 0, 0, 0, 431, 432, 433, 434,
	435, 436, 0, 437, 439, 438, 0, 440, 702, 0,
	441, 442, 0, 0, 443, 444, 445, 446, 447, 448,
	451, 0, 0, 449, 450, 452, 453, 0, 454, 455,
	457, 460, 456, 458, 459, 461, 474, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 476,
	0, 475, 0, 477, 478, 479, 480, 481, 488, 490,
	491, 486, 487, 489, 492, 493, 495, 483, 484, 485,
	0, 494, 482, 0, 0, 0, 496, 497, 498, 499,
	0, 703, 500, 704, 503, 504, 0, 0, 505, 0,
	506, 0, 0, 508, 509, 510, 0, 0, 511, 512,
	705, 0, 513, 0, 706, 514, 515, 507, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 525, 526,
	707, 527, 528, 529, 708, 530, 531, 532, 709, 533,
	710, 534, 535, 0, 536, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 545, 711, 546, 547, 549, 548,
	550, 0, 551, 0, 552, 553, 554, 0, 0, 0,
	0, 0, 555, 556, 558, 0, 559, 560, 561, 562,
	557, 563, 564, 565, 566, 567, 0, 568, 569, 570,
	0, 571, 572, 573, 574, 575, 712, 576, 0, 577,
	578, 585, 586, 587, 579, 580, 581, 588, 589, 590,
	591, 592, 0, 594, 595, 593, 596, 597, 598, 0,
	599, 600, 582, 583, 601, 602, 0, 603, 604, 605,
	606, 607, 608, 609, 713, 0, 610, 0, 611, 612,
	613, 614, 615, 617, 584, 618, 623, 624, 714, 619,
	620, 621, 622, 715, 626, 627, 0, 628, 629, 0,
	625, 616, 0, 630, 631, 632, 633, 634, 635, 636,
	637, 0, 638, 716, 717, 718, 719, 0, 648, 0,
	639, 640, 641, 642, 720, 643, 721, 0, 644, 645,
	646, 647, 0, 649, 650, 0, 0, 651, 652, 654,
	656, 657, 653, 655, 658, 0, 659, 0, 0, 660,
	661, 662, 722, 723, 724, 0, 664, 663, 665, 666,
	667, 725, 668, 669, 978, 0, 878, 0, 670, 671,
	726, 672, 673, 674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 293, 292, 294, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 675,
	0, 0, 0, 300, 2469, 301, 302, 0, 303, 304,
	305, 306, 307, 308, 309, 676, 677, 0, 310, 678,
	311, 679, 0, 680, 312, 313, 314, 315, 316, 317,
	0, 0, 0, 318, 681, 682, 683, 0, 319, 320,
	684, 0, 0, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 0, 344, 345, 346, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 349, 885, 351, 0, 352,
	354, 685, 686, 0, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 687, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 688, 689, 385, 0, 287, 0, 0,
	0, 0, 0, 386, 387, 388, 690, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 975, 0, 394,
	395, 396, 691, 692, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 693, 0, 694, 407, 0,
	408, 409, 410, 411, 412, 413, 695, 696, 697, 501,
	0, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 288, 421, 422, 423, 0, 0, 502, 424,
	698, 699, 0, 700, 0, 425, 426, 0, 701, 0,
	427, 428, 429, 0, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	702, 0, 441, 442, 0, 0, 443, 444, 445, 446,
	447, 448, 451, 0, 0, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 0, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 0, 494, 482, 0, 289, 0, 496, 497,
	498, 499, 0, 703, 500, 704, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 705, 0, 513, 0, 706, 514, 515, 507,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 707, 527, 528, 529, 708, 530, 531, 532,
	709, 533, 710, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 711, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 0, 571, 572, 573, 574, 575, 712, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 0, 599, 600, 582, 583, 601, 602, 0, 603,
	604, 605, 606, 607, 608, 609, 713, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	714, 619, 620, 621, 622, 715, 626, 627, 0, 628,
	977, 0, 625, 616, 883, 630, 631, 632, 633, 634,
	884, 636, 637, 0, 638, 716, 717, 718, 719, 0,
	648, 0, 639, 640, 641, 642, 720, 643, 721, 0,
	644, 645, 646, 647, 0, 649, 650, 0, 0, 651,
	652, 654, 656, 657, 653, 655, 658, 0, 659, 0,
	0, 660, 661, 662, 722, 723, 724, 0, 664, 663,
	665, 666, 667, 725, 668, 669, 2149, 0, 0, 0,
	670, 671, 726, 672, 673, 674, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 293, 292, 294, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 888, 0,
	0, 0, 0, 300, 0, 301, 302, 1274, 303, 304,
	305, 306, 307, 308, 309, 0, 2155, 0, 310, 2145,
	311, 2161, 0, 2168, 312, 313, 314, 315, 316, 317,
	0, 0, 0, 318, 2171, 2172, 0, 0, 319, 320,
	0, 0, 1575, 0, 321, 322, 323, 324, 325, 326,
	327, 328, 0, 0, 330, 331, 332, 329, 333, 0,
	334, 0, 335, 336, 337, 338, 339, 340, 0, 341,
	342, 343, 1275, 344, 345, 346, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 349, 350, 351, 1257, 352,
	354, 2159, 2158, 0, 357, 353, 355, 0, 358, 356,
	359, 0, 360, 361, 362, 0, 0, 363, 1242, 365,
	0, 366, 367, 368, 0, 369, 370, 371, 0, 372,
	373, 0, 374, 375, 376, 378, 380, 377, 379, 381,
	382, 383, 384, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 0, 386, 387, 388, 2157, 0, 0, 0,
	389, 0, 390, 391, 392, 0, 393, 0, 1276, 394,
	395, 396, 2166, 2167, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 0,
	408, 409, 410, 411, 412, 413, 0, 0, 0, 501,
	1278, 414, 415, 0, 416, 417, 418, 419, 420, 0,
	0, 0, 0, 421, 422, 423, 0, 1277, 502, 424,
	2152, 2153, 0, 2148, 0, 425, 426, 1279, 0, 1280,
	427, 428, 429, 1281, 430, 0, 0, 0, 431, 432,
	433, 434, 435, 436, 0, 437, 439, 438, 0, 440,
	0, 1282, 441, 442, 1283, 0, 443, 444, 445, 446,
	447, 448, 451, 0, 0, 449, 450, 452, 453, 0,
	454, 455, 457, 460, 456, 458, 459, 461, 474, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 476, 0, 475, 1284, 477, 478, 479, 480, 481,
	488, 490, 491, 486, 487, 489, 492, 493, 495, 483,
	484, 485, 1285, 494, 482, 0, 0, 1286, 496, 497,
	498, 499, 0, 0, 500, 2160, 503, 504, 0, 0,
	505, 0, 506, 0, 0, 508, 509, 510, 0, 0,
	511, 512, 0, 1287, 513, 1288, 0, 514, 515, 507,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 2142, 527, 528, 529, 2143, 530, 531, 532,
	0, 533, 0, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 545, 2156, 546, 547,
	549, 548, 550, 0, 551, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 555, 556, 558, 0, 559, 560,
	561, 562, 557, 563, 564, 565, 566, 567, 0, 568,
	569, 570, 1289, 571, 572, 573, 574, 575, 0, 576,
	0, 577, 578, 585, 586, 587, 579, 580, 581, 588,
	589, 590, 591, 592, 0, 594, 595, 593, 596, 597,
	598, 0, 599, 600, 582, 583, 601, 602, 1290, 603,
	604, 605, 606, 607, 608, 609, 2154, 0, 610, 0,
	611, 612, 613, 614, 615, 617, 584, 618, 623, 624,
	2170, 619, 620, 621, 622, 0, 626, 627, 0, 628,
	629, 0, 625, 616, 0, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 638, 2162, 2163, 2164, 2165, 0,
	648, 0, 639, 640, 641, 642, 0, 643, 0, 0,
	644, 645, 646, 647, 0, 649, 650, 0, 0, 651,
	652, 654, 656, 657, 653, 655, 658, 0, 659, 0,
	0, 660, 661, 662, 0, 2146, 2169, 0, 664, 663,
	665, 666, 667, 0, 668, 669, 0, 0, 0, 878,
	670, 671, 0, 672, 673, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 4105, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	2136, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 885,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 4104, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 883, 630, 631,
	632, 633, 634, 884, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 4103, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 878,
	0, 0, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 2176, 298, 299, 0, 0, 0,
	0, 888, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 885,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 2175, 589, 590, 591, 592, 0, 2177, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 883, 630, 631,
	632, 633, 634, 884, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 2174, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 878,
	0, 0, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 2127, 298, 299, 0, 0, 0,
	0, 888, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 885,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 2126, 589, 590, 591, 592, 0, 2128, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 883, 630, 631,
	632, 633, 634, 884, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 2125, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 876,
	0, 878, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 888, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 885, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 883,
	630, 631, 632, 633, 634, 884, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 878, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 888, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 885, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 883,
	630, 631, 632, 633, 634, 884, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 878, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 888, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 885, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 2522, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 2523, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 883,
	630, 631, 632, 633, 634, 884, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 2524, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 888, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 1611, 1610, 0,
	0, 0, 0, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 888, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 1575, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 1277, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 1279, 701,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 0, 0, 1286, 496,
	497, 498, 499, 4209, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1611, 1610, 0,
	0, 0, 0, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 1274, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 1575, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 1275, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 1276,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 1278, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 1277, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 1279, 701,
	1280, 427, 428, 429, 1281, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 1282, 441, 442, 1283, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 1284, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 1285, 494, 482, 0, 0, 1286, 496,
	497, 498, 499, 3773, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 1287, 513, 1288, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 1289, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 1290,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 0, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 1787, 0, 1611,
	1610, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	1274, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 1575, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 1275, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 1786, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 1276, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 1278, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	1277, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	1279, 701, 1280, 427, 428, 429, 1281, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 1282, 441, 442, 1283, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 1284, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 1285, 494, 482, 0, 0,
	1286, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 1287, 513, 1288, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 1785, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 1289, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 1784, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 1290, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 0,
	0, 0, 0, 670, 671, 726, 672, 673, 674, 1659,
	0, 1611, 1610, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 1274, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 1575, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 1275, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 1276, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 1661, 696, 697, 501, 1278, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 1277, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 1279, 701, 1280, 427, 428, 429, 1281, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 1282, 441, 442, 1283,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 1284,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 1285, 494, 482,
	0, 0, 1286, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 1287, 513,
	1288, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 1289, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 1290, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 0, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 1606, 0, 1611, 1610, 0, 0, 0, 0, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 1575,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 1275,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 1277, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 1282, 441,
	442, 1283, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 0, 0, 1286, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 0, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 1611, 1610, 0, 0, 0, 0, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 1575,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 1275,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 1277, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 1282, 441,
	442, 1283, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 0, 0, 1286, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1611, 1610, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 1575,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 1275,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 1277, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 1282, 441,
	442, 1283, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 0, 0, 1286, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1611, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 1274, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 1575,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 1275,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 1276, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 1278, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 1277, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 1279, 701, 1280, 427, 428, 429,
	1281, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 1282, 441,
	442, 1283, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 1284, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 1285,
	494, 482, 0, 0, 1286, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	1287, 513, 1288, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 1289,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 1290, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 3055, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 3815, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 3059, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 3814, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 3058, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 3811,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 3813, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 3810, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 3057, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 3812, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 3055, 319, 320, 684, 0, 0,
	3049, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 3051, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 3059, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 3058, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3048, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 3057, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 3056, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1867, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	1866, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 1865, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 289, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 1868, 580, 581, 588, 589,
	590, 591, 592, 0, 1864, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 1862, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 1863, 663, 665,
	666, 667, 725, 668, 669, 1579, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 1581, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 289, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 1324, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 1576, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 1578,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 1324, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 1482,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 1484, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 1324,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 759, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 758, 296, 297, 747, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 750, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	756, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 752, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 746, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	747, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 750, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 751, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 752, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 284, 0, 0, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	747, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 750, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 751, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 752, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 284, 0, 0, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	747, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 750, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 4219, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 752, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 284, 0, 0, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 289, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 1324, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 284, 0, 0, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 3709, 494, 482, 0, 289, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 3244, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 3243, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 289, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 284, 0, 0,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 289, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 2427, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 2490, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 2434,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 2433, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 2420, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 2422, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 289, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 2384, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 289, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 1324, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1704, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 1703, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 289, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 1599, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 289, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 1592, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 1594,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 1401,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 1400, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 1391, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 287, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 1390, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 288,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 289, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1388, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 287, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 1387, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 288, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 289, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 1383, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 287, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 1382, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 288, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 289, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 728, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	287, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 288, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 289,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 275,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 750, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 751, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 752,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 2531, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 2529, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 2527, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 2440, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 2201, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 287, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 2195, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 288, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 289, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 962, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 961, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 960, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 831, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 837, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 846, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 839, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 845, 841, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 842, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 840, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 843, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 844, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 838, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 284, 0, 0, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 3814, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 4545, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 1429, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 1432, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 1430, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 819, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 0, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 818, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	817, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	1433, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 815, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 1429, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	1432, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 1430,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 819, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 0,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 818, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 817, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 1433, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 815, 717,
	718, 719, 0, 648, 0, 639, 1431, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 826,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 824, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 737, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 736, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	735, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 3150, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 4845, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 3650, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 4432, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	4162, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 2930, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 3150, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 3283, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 2331, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	818, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 817, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 815, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 2500, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 2488, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 1760, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 0, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 1752, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 0,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 809,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 805, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 810, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 819, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 818, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 817, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 1737, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	815, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 1710, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 1709, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1694, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 1692, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 1687, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 0, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 1664, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 1662,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 0,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 1657,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 1620, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1584, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 320, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 712, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 716, 717, 718, 719, 0, 648,
	0, 639, 640, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 1435, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 0, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 818, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	817, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 815, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 1406, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 1405,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 0,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 1397,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 1396, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 284, 0, 0, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 1349, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 829, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 809, 0, 284, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 676, 677, 0, 310, 678, 311,
	679, 0, 680, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 681, 682, 683, 0, 319, 805, 684,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 804,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 349, 350, 351, 0, 352, 354,
	685, 686, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	687, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 688, 689, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 690, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 691, 692, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 693, 0, 694, 407, 0, 408,
	409, 410, 411, 412, 413, 695, 696, 697, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 698,
	699, 0, 700, 0, 425, 426, 0, 701, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 702,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	810, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 819, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 703, 500, 704, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 705, 0, 513, 0, 706, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 707, 527, 528, 529, 708, 530, 531, 532, 709,
	533, 710, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 711, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 818, 572, 573, 574, 575, 806, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 817, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 807, 598,
	0, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 713, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 714,
	619, 620, 621, 622, 715, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 815, 717, 718, 719, 0, 648,
	0, 639, 811, 641, 642, 720, 643, 721, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 722, 723, 724, 0, 664, 663, 665,
	666, 667, 725, 668, 669, 798, 0, 284, 0, 670,
	671, 726, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 676, 677, 0, 310,
	678, 311, 679, 0, 680, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 681, 682, 683, 0, 319,
	320, 684, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 349, 350, 351, 0,
	352, 354, 685, 686, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 687, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 688, 689, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 690, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 691, 692, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 693, 0, 694, 407,
	0, 408, 409, 410, 411, 412, 413, 695, 696, 697,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 0, 502,
	424, 698, 699, 0, 700, 0, 425, 426, 0, 701,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 702, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 0, 0, 496,
	497, 498, 499, 0, 703, 500, 704, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 705, 0, 513, 0, 706, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 707, 527, 528, 529, 708, 530, 531,
	532, 709, 533, 710, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 711, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 712,
	576, 0, 577, 578, 799, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 0, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 713, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 714, 619, 620, 621, 622, 715, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 716, 717, 718, 719,
	0, 648, 0, 639, 640, 641, 642, 720, 643, 721,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 722, 723, 724, 0, 664,
	663, 665, 666, 667, 725, 668, 669, 761, 0, 284,
	0, 670, 671, 726, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 676, 677,
	0, 310, 678, 311, 679, 0, 680, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 681, 682, 683,
	0, 319, 320, 684, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 349, 350,
	351, 0, 352, 354, 685, 686, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 687, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 688, 689, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 690,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 691, 692, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 693, 0,
	694, 407, 0, 408, 409, 410, 411, 412, 413, 695,
	696, 697, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	0, 502, 424, 698, 699, 0, 700, 0, 425, 426,
	0, 701, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 702, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 0,
	0, 496, 497, 498, 499, 0, 703, 500, 704, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 705, 0, 513, 0, 706,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 707, 527, 528, 529, 708,
	530, 531, 532, 709, 533, 710, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	711, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 712, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 0, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 713,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 714, 619, 620, 621, 622, 715, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 716, 717,
	718, 719, 0, 648, 0, 639, 640, 641, 642, 720,
	643, 721, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 722, 723, 724,
	0, 664, 663, 665, 666, 667, 725, 668, 669, 754,
	0, 284, 0, 670, 671, 726, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	676, 677, 0, 310, 678, 311, 679, 0, 680, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 681,
	682, 683, 0, 319, 320, 684, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	349, 350, 351, 0, 352, 354, 685, 686, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 687, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 688, 689,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 690, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 691, 692, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	693, 0, 694, 407, 0, 408, 409, 410, 411, 412,
	413, 695, 696, 697, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 698, 699, 0, 700, 0,
	425, 426, 0, 701, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 702, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 703, 500,
	704, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 705, 0, 513,
	0, 706, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 707, 527, 528,
	529, 708, 530, 531, 532, 709, 533, 710, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 711, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 712, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 0, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 713, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 714, 619, 620, 621, 622,
	715, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	716, 717, 718, 719, 0, 648, 0, 639, 640, 641,
	642, 720, 643, 721, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 722,
	723, 724, 0, 664, 663, 665, 666, 667, 725, 668,
	669, 732, 0, 284, 0, 670, 671, 726, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3843, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	818, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 817, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 815, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3749, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3725, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3722, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3674, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3672, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3660, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3657, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 3254, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	799, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 2458, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 0,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 1368, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 407, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 711, 546, 547, 1297, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 284, 0, 0, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 676, 677, 0, 310, 678, 311, 679, 0,
	680, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 681, 682, 683, 0, 319, 320, 684, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 349, 350, 351, 0, 352, 354, 685, 686,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 687, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	688, 689, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 690, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 691,
	692, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 693, 0, 694, 0, 0, 408, 409, 410,
	411, 412, 413, 695, 696, 697, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 698, 699, 0,
	700, 0, 425, 426, 0, 701, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 702, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	703, 500, 704, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 705,
	0, 513, 0, 706, 514, 515, 507, 516, 517, 0,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 707,
	527, 528, 529, 708, 530, 531, 532, 709, 533, 710,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 0, 544, 545, 711, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 712, 0, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 0, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 713, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 714, 619, 620,
	621, 622, 715, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 716, 717, 718, 719, 0, 648, 0, 639,
	640, 641, 642, 720, 643, 721, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 722, 723, 724, 0, 664, 663, 665, 666, 667,
	725, 668, 669, 1700, 0, 1413, 0, 670, 671, 726,
	672, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 293, 292, 294, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 301, 302, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 0, 310, 0, 311,
	0, 0, 0, 312, 313, 314, 315, 316, 317, 0,
	0, 0, 318, 0, 0, 0, 0, 319, 320, 0,
	0, 0, 0, 321, 322, 323, 324, 325, 326, 327,
	328, 0, 0, 330, 331, 332, 329, 333, 0, 334,
	0, 335, 336, 337, 338, 339, 340, 0, 341, 342,
	343, 0, 344, 345, 346, 0, 0, 0, 0, 0,
	0, 1415, 347, 348, 349, 350, 351, 0, 352, 354,
	0, 0, 0, 357, 353, 355, 0, 358, 356, 359,
	0, 360, 361, 362, 0, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 371, 0, 372, 373,
	0, 374, 375, 376, 378, 380, 377, 379, 381, 382,
	383, 384, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 0, 386, 387, 388, 0, 0, 0, 0, 389,
	0, 390, 391, 392, 0, 393, 0, 0, 394, 395,
	396, 0, 0, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 0, 408,
	409, 410, 411, 412, 413, 1699, 0, 0, 501, 0,
	414, 415, 0, 416, 417, 418, 419, 420, 0, 0,
	0, 0, 421, 422, 423, 0, 0, 502, 424, 0,
	0, 0, 0, 0, 425, 426, 0, 0, 0, 427,
	428, 429, 0, 430, 0, 0, 0, 431, 432, 433,
	434, 435, 436, 0, 437, 439, 438, 0, 440, 0,
	0, 441, 442, 0, 0, 443, 444, 445, 446, 447,
	448, 451, 0, 0, 449, 450, 452, 453, 0, 454,
	455, 457, 460, 456, 458, 459, 461, 474, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	476, 0, 475, 0, 477, 478, 479, 480, 481, 488,
	490, 491, 486, 487, 489, 492, 493, 495, 483, 484,
	485, 0, 494, 482, 0, 0, 0, 496, 497, 498,
	499, 0, 0, 500, 0, 503, 504, 0, 0, 505,
	0, 506, 0, 0, 508, 509, 510, 0, 0, 511,
	512, 0, 0, 513, 0, 0, 514, 515, 507, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 525,
	526, 0, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 0, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 545, 0, 546, 547, 549,
	548, 550, 0, 551, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 555, 556, 558, 0, 559, 560, 561,
	562, 557, 563, 564, 565, 566, 567, 0, 568, 569,
	570, 0, 571, 572, 573, 574, 575, 0, 576, 0,
	577, 578, 585, 586, 587, 579, 580, 581, 588, 589,
	590, 591, 592, 0, 594, 595, 593, 596, 597, 598,
	1416, 599, 600, 582, 583, 601, 602, 0, 603, 604,
	605, 606, 607, 608, 609, 0, 0, 610, 0, 611,
	612, 613, 614, 615, 617, 584, 618, 623, 624, 0,
	619, 620, 621, 622, 0, 626, 627, 0, 628, 629,
	0, 625, 616, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 638, 0, 0, 0, 0, 0, 648,
	0, 639, 640, 641, 642, 0, 643, 0, 0, 644,
	645, 646, 647, 0, 649, 650, 0, 0, 651, 652,
	654, 656, 657, 653, 655, 658, 0, 659, 0, 0,
	660, 661, 662, 0, 0, 0, 0, 664, 663, 665,
	666, 667, 0, 668, 669, 1623, 0, 1413, 0, 670,
	671, 0, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 293, 292, 294, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 301, 302, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 0, 310,
	0, 311, 0, 0, 0, 312, 313, 314, 315, 316,
	317, 0, 0, 0, 318, 0, 0, 0, 0, 319,
	320, 0, 0, 0, 0, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 330, 331, 332, 329, 333,
	0, 334, 0, 335, 336, 337, 338, 339, 340, 0,
	341, 342, 343, 0, 344, 345, 346, 0, 0, 0,
	0, 0, 0, 1415, 347, 348, 349, 350, 351, 0,
	352, 354, 0, 0, 0, 357, 353, 355, 0, 358,
	356, 359, 0, 360, 361, 362, 0, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 371, 0,
	372, 373, 0, 374, 375, 376, 378, 380, 377, 379,
	381, 382, 383, 384, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 0, 386, 387, 388, 0, 0, 0,
	0, 389, 0, 390, 391, 392, 0, 393, 0, 0,
	394, 395, 396, 0, 0, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	0, 408, 409, 410, 411, 412, 413, 1622, 0, 0,
	501, 0, 414, 415, 0, 416, 417, 418, 419, 420,
	0, 0, 0, 0, 421, 422, 423, 0, 0, 502,
	424, 0, 0, 0, 0, 0, 425, 426, 0, 0,
	0, 427, 428, 429, 0, 430, 0, 0, 0, 431,
	432, 433, 434, 435, 436, 0, 437, 439, 438, 0,
	440, 0, 0, 441, 442, 0, 0, 443, 444, 445,
	446, 447, 448, 451, 0, 0, 449, 450, 452, 453,
	0, 454, 455, 457, 460, 456, 458, 459, 461, 474,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 476, 0, 475, 0, 477, 478, 479, 480,
	481, 488, 490, 491, 486, 487, 489, 492, 493, 495,
	483, 484, 485, 0, 494, 482, 0, 0, 0, 496,
	497, 498, 499, 0, 0, 500, 0, 503, 504, 0,
	0, 505, 0, 506, 0, 0, 508, 509, 510, 0,
	0, 511, 512, 0, 0, 513, 0, 0, 514, 515,
	507, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 525, 526, 0, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 0, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 545, 0, 546,
	547, 549, 548, 550, 0, 551, 0, 552, 553, 554,
	0, 0, 0, 0, 0, 555, 556, 558, 0, 559,
	560, 561, 562, 557, 563, 564, 565, 566, 567, 0,
	568, 569, 570, 0, 571, 572, 573, 574, 575, 0,
	576, 0, 577, 578, 585, 586, 587, 579, 580, 581,
	588, 589, 590, 591, 592, 0, 594, 595, 593, 596,
	597, 598, 1416, 599, 600, 582, 583, 601, 602, 0,
	603, 604, 605, 606, 607, 608, 609, 0, 0, 610,
	0, 611, 612, 613, 614, 615, 617, 584, 618, 623,
	624, 0, 619, 620, 621, 622, 0, 626, 627, 0,
	628, 629, 0, 625, 616, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 638, 0, 0, 0, 0,
	0, 648, 0, 639, 640, 641, 642, 0, 643, 0,
	0, 644, 645, 646, 647, 0, 649, 650, 0, 0,
	651, 652, 654, 656, 657, 653, 655, 658, 0, 659,
	0, 0, 660, 661, 662, 0, 0, 0, 0, 664,
	663, 665, 666, 667, 0, 668, 669, 1411, 0, 1413,
	0, 670, 671, 0, 672, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 291, 293, 292,
	294, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 301, 302,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	0, 310, 0, 311, 0, 0, 0, 312, 313, 314,
	315, 316, 317, 0, 0, 0, 318, 0, 0, 0,
	0, 319, 320, 0, 0, 0, 0, 321, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 330, 331, 332,
	329, 333, 0, 334, 0, 335, 336, 337, 338, 339,
	340, 0, 341, 342, 343, 0, 344, 345, 346, 0,
	0, 0, 0, 0, 0, 1415, 347, 348, 349, 350,
	351, 0, 352, 354, 0, 0, 0, 357, 353, 355,
	0, 358, 356, 359, 0, 360, 361, 362, 0, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	371, 0, 372, 373, 0, 374, 375, 376, 378, 380,
	377, 379, 381, 382, 383, 384, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 0, 386, 387, 388, 0,
	0, 0, 0, 389, 0, 390, 391, 392, 0, 393,
	0, 0, 394, 395, 396, 0, 0, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 0, 408, 409, 410, 411, 412, 413, 1410,
	0, 0, 501, 0, 414, 415, 0, 416, 417, 418,
	419, 420, 0, 0, 0, 0, 421, 422, 423, 0,
	0, 502, 424, 0, 0, 0, 0, 0, 425, 426,
	0, 0, 0, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 432, 433, 434, 435, 436, 0, 437, 439,
	438, 0, 440, 0, 0, 441, 442, 0, 0, 443,
	444, 445, 446, 447, 448, 451, 0, 0, 449, 450,
	452, 453, 0, 454, 455, 457, 460, 456, 458, 459,
	461, 474, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 476, 0, 475, 0, 477, 478,
	479, 480, 481, 488, 490, 491, 486, 487, 489, 492,
	493, 495, 483, 484, 485, 0, 494, 482, 0, 0,
	0, 496, 497, 498, 499, 0, 0, 500, 0, 503,
	504, 0, 0, 505, 0, 506, 0, 0, 508, 509,
	510, 0, 0, 511, 512, 0, 0, 513, 0, 0,
	514, 515, 507, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 525, 526, 0, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 0, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 545,
	0, 546, 547, 549, 548, 550, 0, 551, 0, 552,
	553, 554, 0, 0, 0, 0, 0, 555, 556, 558,
	0, 559, 560, 561, 562, 557, 563, 564, 565, 566,
	567, 0, 568, 569, 570, 0, 571, 572, 573, 574,
	575, 0, 576, 0, 577, 578, 585, 586, 587, 579,
	580, 581, 588, 589, 590, 591, 592, 0, 594, 595,
	593, 596, 597, 598, 1416, 599, 600, 582, 583, 601,
	602, 0, 603, 604, 605, 606, 607, 608, 609, 0,
	0, 610, 0, 611, 612, 613, 614, 615, 617, 584,
	618, 623, 624, 0, 619, 620, 621, 622, 0, 626,
	627, 0, 628, 629, 0, 625, 616, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 638, 0, 0,
	0, 0, 0, 648, 0, 639, 640, 641, 642, 0,
	643, 0, 0, 644, 645, 646, 647, 0, 649, 650,
	0, 0, 651, 652, 654, 656, 657, 653, 655, 658,
	0, 659, 0, 0, 660, 661, 662, 0, 0, 0,
	0, 664, 663, 665, 666, 667, 0, 668, 669, 2215,
	0, 1413, 0, 670, 671, 0, 672, 673, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	293, 292, 294, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	301, 302, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 0, 310, 0, 311, 0, 0, 0, 312,
	313, 314, 315, 316, 317, 0, 0, 0, 318, 0,
	0, 0, 0, 319, 320, 0, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 330,
	331, 332, 329, 333, 0, 334, 0, 335, 336, 337,
	338, 339, 340, 0, 341, 342, 343, 0, 344, 345,
	346, 0, 0, 0, 0, 0, 0, 1415, 347, 348,
	349, 350, 351, 0, 352, 354, 0, 0, 0, 357,
	353, 355, 0, 358, 356, 359, 0, 360, 361, 362,
	0, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 371, 0, 372, 373, 0, 374, 375, 376,
	378, 380, 377, 379, 381, 382, 383, 384, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 0, 0, 0, 0, 389, 0, 390, 391, 392,
	0, 393, 0, 0, 394, 395, 396, 0, 0, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 0, 408, 409, 410, 411, 412,
	413, 0, 0, 0, 501, 0, 414, 415, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 421, 422,
	423, 0, 0, 502, 424, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 432, 433, 434, 435, 436, 0,
	437, 439, 438, 0, 440, 0, 0, 441, 442, 0,
	0, 443, 444, 445, 446, 447, 448, 451, 0, 0,
	449, 450, 452, 453, 0, 454, 455, 457, 460, 456,
	458, 459, 461, 474, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 476, 0, 475, 0,
	477, 478, 479, 480, 481, 488, 490, 491, 486, 487,
	489, 492, 493, 495, 483, 484, 485, 0, 494, 482,
	0, 0, 0, 496, 497, 498, 499, 0, 0, 500,
	0, 503, 504, 0, 0, 505, 0, 506, 0, 0,
	508, 509, 510, 0, 0, 511, 512, 0, 0, 513,
	0, 0, 514, 515, 507, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 0, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 0, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 545, 0, 546, 547, 549, 548, 550, 0, 551,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 555,
	556, 558, 0, 559, 560, 561, 562, 557, 563, 564,
	565, 566, 567, 0, 568, 569, 570, 0, 571, 572,
	573, 574, 575, 0, 576, 0, 577, 578, 585, 586,
	587, 579, 580, 581, 588, 589, 590, 591, 592, 0,
	594, 595, 593, 596, 597, 598, 1416, 599, 600, 582,
	583, 601, 602, 0, 603, 604, 605, 606, 607, 608,
	609, 0, 0, 610, 0, 611, 612, 613, 614, 615,
	617, 584, 618, 623, 624, 0, 619, 620, 621, 622,
	0, 626, 627, 0, 628, 629, 0, 625, 616, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 0, 638,
	0, 0, 0, 0, 0, 648, 0, 639, 640, 641,
	642, 0, 643, 0, 0, 644, 645, 646, 647, 0,
	649, 650, 0, 0, 651, 652, 654, 656, 657, 653,
	655, 658, 0, 659, 0, 0, 660, 661, 662, 0,
	0, 0, 0, 664, 663, 665, 666, 667, 0, 668,
	669, 2182, 0, 1413, 0, 670, 671, 0, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 291, 293, 292, 294, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 301, 302, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 0, 310, 0, 311, 0, 0,
	0, 312, 313, 314, 315, 316, 317, 0, 0, 0,
	318, 0, 0, 0, 0, 319, 320, 0, 0, 0,
	0, 321, 322, 323, 324, 325, 326, 327, 328, 0,
	0, 330, 331, 332, 329, 333, 0, 334, 0, 335,
	336, 337, 338, 339, 340, 0, 341, 342, 343, 0,
	344, 345, 346, 0, 0, 0, 0, 0, 0, 1415,
	347, 348, 349, 350, 351, 0, 352, 354, 0, 0,
	0, 357, 353, 355, 0, 358, 356, 359, 0, 360,
	361, 362, 0, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 371, 0, 372, 373, 0, 374,
	375, 376, 378, 380, 377, 379, 381, 382, 383, 384,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	386, 387, 388, 0, 0, 0, 0, 389, 0, 390,
	391, 392, 0, 393, 0, 0, 394, 395, 396, 0,
	0, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 0, 408, 409, 410,
	411, 412, 413, 0, 0, 0, 501, 0, 414, 415,
	0, 416, 417, 418, 419, 420, 0, 0, 0, 0,
	421, 422, 423, 0, 0, 502, 424, 0, 0, 0,
	0, 0, 425, 426, 0, 0, 0, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 432, 433, 434, 435,
	436, 0, 437, 439, 438, 0, 440, 0, 0, 441,
	442, 0, 0, 443, 444, 445, 446, 447, 448, 451,
	0, 0, 449, 450, 452, 453, 0, 454, 455, 457,
	460, 456, 458, 459, 461, 474, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 476, 0,
	475, 0, 477, 478, 479, 480, 481, 488, 490, 491,
	486, 487, 489, 492, 493, 495, 483, 484, 485, 0,
	494, 482, 0, 0, 0, 496, 497, 498, 499, 0,
	0, 500, 0, 503, 504, 0, 0, 505, 0, 506,
	0, 0, 508, 509, 510, 0, 0, 511, 512, 0,
	0, 513, 0, 0, 514, 515, 507, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 525, 526, 0,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 0,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 545, 0, 546, 547, 549, 548, 550,
	0, 551, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 555, 556, 558, 0, 559, 560, 561, 562, 557,
	563, 564, 565, 566, 567, 0, 568, 569, 570, 0,
	571, 572, 573, 574, 575, 0, 576, 0, 577, 578,
	585, 586, 587, 579, 580, 581, 588, 589, 590, 591,
	592, 0, 594, 595, 593, 596, 597, 598, 1416, 599,
	600, 582, 583, 601, 602, 0, 603, 604, 605, 606,
	607, 608, 609, 0, 0, 610, 0, 611, 612, 613,
	614, 615, 617, 584, 618, 623, 624, 0, 619, 620,
	621, 622, 0, 626, 627, 0, 628, 629, 0, 625,
	616, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	0, 638, 0, 0, 0, 0, 0, 648, 0, 639,
	640, 641, 642, 0, 643, 0, 0, 644, 645, 646,
	647, 0, 649, 650, 0, 0, 651, 652, 654, 656,
	657, 653, 655, 658, 0, 659, 0, 0, 660, 661,
	662, 0, 0, 0, 0, 664, 663, 665, 666, 667,
	1413, 668, 669, 0, 0, 0, 0, 670, 671, 0,
	672, 673, 674, 0, 0, 0, 0, 290, 291, 293,
	292, 294, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 301,
	302, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 0, 310, 0, 311, 0, 0, 0, 312, 313,
	314, 315, 316, 317, 0, 0, 0, 318, 0, 0,
	0, 0, 319, 320, 0, 0, 0, 0, 321, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 330, 331,
	332, 329, 333, 0, 334, 0, 335, 336, 337, 338,
	339, 340, 0, 341, 342, 343, 0, 344, 345, 346,
	0, 0, 0, 0, 0, 0, 1415, 347, 348, 349,
	350, 351, 0, 352, 354, 0, 0, 0, 357, 353,
	355, 0, 358, 356, 359, 0, 360, 361, 362, 0,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 371, 0, 372, 373, 0, 374, 375, 376, 378,
	380, 377, 379, 381, 382, 383, 384, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 0, 386, 387, 388,
	0, 0, 0, 0, 389, 0, 390, 391, 392, 0,
	393, 0, 0, 394, 395, 396, 0, 0, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 0, 408, 409, 410, 411, 412, 413,
	0, 0, 0, 501, 0, 414, 415, 0, 416, 417,
	418, 419, 420, 0, 0, 0, 0, 421, 422, 423,
	0, 0, 502, 424, 0, 0, 0, 0, 0, 425,
	426, 0, 0, 0, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 432, 433, 434, 435, 436, 0, 437,
	439, 438, 0, 440, 0, 0, 441, 442, 0, 0,
	443, 444, 445, 446, 447, 448, 451, 0, 0, 449,
	450, 452, 453, 0, 454, 455, 457, 460, 456, 458,
	459, 461, 474, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 476, 0, 475, 0, 477,
	478, 479, 480, 481, 488, 490, 491, 486, 487, 489,
	492, 493, 495, 483, 484, 485, 0, 494, 482, 0,
	0, 0, 496, 497, 498, 499, 0, 0, 500, 0,
	503, 504, 0, 0, 505, 0, 506, 0, 0, 508,
	509, 510, 0, 0, 511, 512, 0, 0, 513, 0,
	0, 514, 515, 507, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 0, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 0, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	545, 0, 546, 547, 549, 548, 550, 0, 551, 0,
	552, 553, 554, 0, 0, 0, 0, 0, 555, 556,
	558, 0, 559, 560, 561, 562, 557, 563, 564, 565,
	566, 567, 0, 568, 569, 570, 0, 571, 572, 573,
	574, 575, 0, 576, 0, 577, 578, 585, 586, 587,
	579, 580, 581, 588, 589, 590, 591, 592, 0, 594,
	595, 593, 596, 597, 598, 1416, 599, 600, 582, 583,
	601, 602, 0, 603, 604, 605, 606, 607, 608, 609,
	0, 0, 610, 0, 611, 612, 613, 614, 615, 617,
	584, 618, 623, 624, 0, 619, 620, 621, 622, 0,
	626, 627, 0, 628, 629, 0, 625, 616, 0, 630,
	631, 632, 633, 634, 635, 636, 637, 0, 638, 0,
	0, 0, 0, 0, 648, 0, 639, 640, 641, 642,
	0, 643, 0, 0, 644, 645, 646, 647, 0, 649,
	650, 0, 0, 651, 652, 654, 656, 657, 653, 655,
	658, 0, 659, 0, 0, 660, 661, 662, 0, 0,
	0, 0, 664, 663, 665, 666, 667, 0, 668, 669,
	0, 0, 0, 0, 670, 671, 0, 672, 673, 674,
	1916, 1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1947, 0, 0, 0, 0, 0,
	1916, 1917, 1919, 1949, 1950, 1951, 1960, 1961, 1962, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1947, 0, 0, 0, 0, 1972,
	0, 0, 1919, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 1942, 1943, 1944,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 1942, 1943, 1944,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 1946, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 1964, 1957, 0, 0,
	1967, 0, 0, 1933, 1934, 0, 0, 1946, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 1963, 0, 1964, 0, 0, 0,
	0, 0, 0, 1933, 1934, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 1940, 1916, 1917,
	0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1947, 0, 0, 1958, 0, 0, 1971, 0,
	1919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1971, 0,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0,
	1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 3461, 0,
	0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0,
	1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0,
	0, 0, 0, 0, 1941, 1942, 1943, 1944, 2756, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1916,
	1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1947, 0, 1957, 0, 0, 1967, 0,
	0, 1919, 0, 0, 0, 1946, 1948, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 1964, 0, 0, 0, 1972, 0,
	0, 1933, 1934, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 1955,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 1941, 1942, 1943, 1944, 0,
	0, 0, 0, 0, 1969, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1916, 1917, 0,
	1949, 1950, 1951, 1960, 1961, 1962, 1957, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 1946, 1948, 0, 0,
	1953, 1947, 1945, 0, 0, 0, 0, 0, 0, 1919,
	0, 0, 0, 1963, 0, 1964, 0, 0, 0, 1966,
	0, 0, 1933, 1934, 0, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	1955, 0, 0, 0, 0, 1918, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 1939, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 1941, 1942, 1943, 1944, 0, 0, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927,
	1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0,
	0, 0, 4873, 1945, 1957, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 1946, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 1963, 0, 1964, 0, 0, 0, 0, 0, 0,
	1933, 1934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1916, 1917, 1939, 1949, 1950, 1951, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 1953, 1947, 0, 0, 0, 0,
	0, 0, 0, 1919, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 1918,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 1969, 0, 0, 0, 0, 0, 1935,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 4825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1940, 0, 0, 1941, 1942, 1943,
	1944, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1916, 1917, 0,
	1949, 1950, 1951, 1960, 1961, 1962, 0, 0, 1957, 0,
	0, 1967, 0, 0, 0, 1971, 0, 0, 1946, 1948,
	1953, 1947, 0, 0, 0, 0, 0, 0, 0, 1919,
	0, 0, 0, 0, 0, 1963, 0, 1964, 0, 1966,
	0, 0, 0, 0, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 1955, 0, 0, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1938, 1939, 0, 0,
	0, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927, 1928,
	1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0, 0,
	0, 4824, 0, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 1941, 1942, 1943, 1944, 0, 0, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 0, 0, 1957, 1945, 0, 1967, 0, 0,
	0, 0, 0, 0, 1946, 1948, 1953, 1947, 0, 0,
	0, 0, 0, 0, 0, 1919, 0, 0, 1940, 0,
	0, 1963, 0, 1964, 0, 1966, 0, 0, 0, 0,
	1933, 1934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 1958, 0, 1955, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 1939, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 1941,
	1942, 1943, 1944, 0, 1956, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932,
	0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926,
	0, 0, 0, 0, 0, 4632, 0, 0, 0, 1916,
	1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0,
	1957, 1945, 0, 1967, 0, 0, 0, 0, 0, 0,
	1946, 1948, 1953, 1947, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 1940, 0, 0, 1963, 0, 1964,
	0, 1966, 0, 0, 0, 0, 1933, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 1958, 0, 1955, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 1939,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 1941, 1942, 1943, 1944, 0,
	1956, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927, 1928,
	1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0, 0,
	0, 4456, 0, 0, 0, 1916, 1917, 0, 1949, 1950,
	1951, 1960, 1961, 1962, 0, 0, 1957, 1945, 0, 1967,
	0, 0, 0, 0, 0, 0, 1946, 1948, 1953, 1947,
	0, 0, 0, 0, 0, 0, 0, 1919, 0, 0,
	1940, 0, 0, 1963, 0, 1964, 0, 1966, 0, 0,
	0, 0, 1933, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 1958, 0,
	1955, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1939, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 1941, 1942, 1943, 1944, 0, 1956, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 4370, 0, 0,
	0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961, 1962,
	0, 0, 1957, 1945, 0, 1967, 0, 0, 0, 0,
	0, 0, 1946, 1948, 1953, 1947, 0, 0, 0, 0,
	0, 0, 0, 1919, 0, 0, 1940, 0, 0, 1963,
	0, 1964, 0, 1966, 0, 0, 0, 0, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 1958, 0, 1955, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 1941, 1942, 1943,
	1944, 0, 1956, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 4369, 0, 0, 0, 1916, 1917, 0,
	1949, 1950, 1951, 1960, 1961, 1962, 0, 0, 1957, 1945,
	0, 1967, 0, 0, 0, 0, 0, 0, 1946, 1948,
	1953, 1947, 0, 0, 0, 0, 0, 0, 0, 1919,
	0, 0, 1940, 0, 0, 1963, 0, 1964, 0, 1966,
	0, 0, 0, 0, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	1958, 0, 1955, 0, 0, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1938, 1939, 0, 0,
	0, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 1941, 1942, 1943, 1944, 0, 1956, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 1930, 1931,
	1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 0, 0, 0, 0, 0, 4368,
	0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 0, 0, 1957, 1945, 0, 1967, 0, 0,
	0, 0, 0, 0, 1946, 1948, 1953, 1947, 0, 0,
	0, 0, 0, 0, 0, 1919, 0, 0, 1940, 0,
	0, 1963, 0, 1964, 0, 1966, 0, 0, 0, 0,
	1933, 1934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 1958, 0, 1955, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 1939, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 1941,
	1942, 1943, 1944, 0, 1956, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932,
	0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926,
	0, 0, 0, 0, 0, 3990, 0, 0, 0, 1916,
	1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0,
	1957, 1945, 0, 1967, 0, 0, 0, 0, 0, 0,
	1946, 1948, 1953, 1947, 0, 0, 0, 0, 0, 0,
	0, 1919, 0, 0, 1940, 0, 0, 1963, 0, 1964,
	0, 1966, 0, 0, 0, 0, 1933, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 1958, 0, 1955, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 1939,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 1941, 1942, 1943, 1944, 0,
	1956, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927, 1928,
	1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0, 0,
	0, 3459, 0, 0, 0, 1916, 1917, 0, 1949, 1950,
	1951, 1960, 1961, 1962, 0, 0, 1957, 1945, 0, 1967,
	0, 0, 0, 0, 0, 0, 1946, 1948, 1953, 1947,
	0, 0, 0, 0, 0, 0, 0, 1919, 0, 0,
	1940, 0, 0, 1963, 0, 1964, 0, 1966, 0, 0,
	0, 0, 1933, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 1958, 0,
	1955, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1939, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 1941, 1942, 1943, 1944, 0, 1956, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 3458, 0, 0,
	0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961, 1962,
	0, 0, 1957, 1945, 0, 1967, 0, 0, 0, 0,
	0, 0, 1946, 1948, 1953, 1947, 0, 0, 0, 0,
	0, 0, 0, 1919, 0, 0, 1940, 0, 0, 1963,
	0, 1964, 0, 1966, 0, 0, 0, 0, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 1958, 0, 1955, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1938, 1939, 0, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 1941, 1942, 1943,
	1944, 0, 1956, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	0, 0, 0, 3457, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1945,
	0, 1967, 0, 0, 0, 0, 0, 0, 1946, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 1963, 0, 1964, 0, 0,
	0, 0, 0, 0, 1933, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 1955, 0, 0, 0, 0, 0, 1916, 1917,
	0, 1949, 1950, 1951, 1960, 1961, 1962, 1939, 0, 0,
	0, 0, 2361, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1947, 1971, 0, 0, 0, 0, 0, 0,
	1919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 0, 0, 0, 0, 0, 3456,
	0, 0, 0, 0, 2362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 1942, 1943, 1944, 1940, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951,
	1960, 1961, 1962, 0, 0, 1957, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 1946, 1948, 1953, 1947, 1971,
	0, 0, 0, 0, 0, 0, 1919, 0, 0, 0,
	0, 0, 1963, 0, 1964, 0, 1966, 0, 0, 0,
	0, 1933, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 1955,
	0, 0, 1918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 1939, 0, 0, 2294, 0, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932,
	0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926,
	0, 0, 1965, 3421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 2292,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	1941, 1942, 1943, 1944, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1916, 1917, 0, 1949, 1950,
	1951, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 1947,
	0, 1957, 1945, 0, 1967, 0, 0, 1919, 0, 0,
	0, 1946, 1948, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 1963, 0,
	1964, 0, 0, 0, 1972, 0, 0, 1933, 1934, 0,
	0, 0, 0, 1918, 0, 0, 0, 2363, 0, 0,
	0, 0, 0, 1958, 1938, 1955, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 1941, 1942, 1943, 1944, 0, 0, 0, 0, 0,
	1969, 1924, 5124, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927,
	1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0,
	0, 0, 1957, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 1946, 1948, 0, 0, 0, 2293, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 1964, 0, 0, 0, 0, 0, 0, 1933, 1934,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 1939, 0, 0, 1916, 1917, 0, 1949, 1950, 1951,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1947, 0,
	0, 0, 1971, 0, 0, 0, 1919, 0, 0, 0,
	0, 0, 2291, 0, 0, 0, 1966, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	1954, 0, 1918, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5123, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 1937,
	1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 0, 0, 0, 0, 0, 0, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	1941, 1942, 1943, 1944, 0, 0, 0, 0, 0, 0,
	1924, 0, 3521, 0, 0, 0, 0, 0, 3520, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961,
	1962, 1957, 0, 1971, 1967, 0, 0, 0, 0, 0,
	0, 1946, 1948, 0, 0, 1953, 1947, 0, 0, 0,
	0, 3392, 0, 0, 1919, 0, 0, 0, 1963, 0,
	1964, 0, 0, 0, 1966, 0, 0, 1933, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 1955, 0, 0, 0, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1939, 1938, 0, 0, 0, 0, 0, 0, 1956, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	3393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 1941, 1942,
	1943, 1944, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 2903, 0, 0, 0,
	0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1947, 1945, 1957,
	0, 2902, 1967, 0, 0, 1919, 0, 0, 0, 1946,
	1948, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 1963, 0, 1964, 0,
	0, 0, 1972, 0, 0, 1933, 1934, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 1938, 1955, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1941,
	1942, 1943, 1944, 0, 0, 0, 0, 0, 1969, 1924,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 1937,
	1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922,
	1923, 1925, 1926, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	1946, 1948, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 1964,
	0, 0, 0, 0, 0, 0, 1933, 1934, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 1939,
	0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1947, 0, 0, 0,
	1971, 0, 0, 0, 1919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1954, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936,
	1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1941, 1942,
	1943, 1944, 0, 0, 0, 0, 0, 0, 1924, 0,
	4727, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1947, 0, 1957,
	0, 1971, 1967, 0, 0, 1919, 0, 0, 0, 1946,
	1948, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 1964, 0,
	0, 0, 1972, 0, 0, 1933, 1934, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 1955, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1941,
	1942, 1943, 1944, 0, 0, 0, 0, 0, 1969, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1916,
	1917, 0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0,
	1957, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	1946, 1948, 1953, 1947, 0, 0, 1945, 0, 0, 0,
	0, 1919, 0, 0, 0, 0, 0, 1963, 0, 1964,
	0, 1966, 0, 0, 0, 0, 1933, 1934, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 1955, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1938, 1939,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 1941, 1942, 1943, 1944, 0,
	0, 0, 0, 0, 0, 1924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936,
	1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 0, 0, 0, 0, 0, 1957, 1945, 0, 1967,
	0, 0, 0, 0, 0, 0, 1946, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 1963, 0, 1964, 0, 0, 0, 0,
	0, 0, 1933, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	1955, 0, 0, 0, 0, 0, 1916, 1917, 0, 1949,
	1950, 1951, 1960, 1961, 1962, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1947, 1971, 0, 0, 0, 0, 0, 0, 1919, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 1942, 1943, 1944, 1940, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961,
	1962, 0, 0, 1957, 0, 0, 1967, 0, 0, 0,
	0, 0, 0, 1946, 1948, 1953, 1947, 1971, 0, 0,
	0, 0, 0, 0, 1919, 0, 0, 0, 0, 0,
	1963, 0, 1964, 0, 1966, 4501, 0, 0, 0, 1933,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 1955, 0, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1938, 1939, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929,
	1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 1941, 1942,
	1943, 1944, 0, 0, 0, 0, 0, 0, 1924, 0,
	4183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1947, 0, 1957,
	1945, 0, 1967, 0, 0, 1919, 0, 0, 0, 1946,
	1948, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 1963, 0, 1964, 0,
	0, 0, 1972, 0, 0, 1933, 1934, 0, 0, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 1938, 1955, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1941,
	1942, 1943, 1944, 0, 0, 0, 0, 0, 1969, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920,
	1921, 1922, 1923, 1925, 1926, 0, 0, 0, 0, 0,
	1957, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	1946, 1948, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 1964,
	0, 0, 0, 0, 0, 0, 1933, 1934, 0, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 1939,
	0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960, 1961,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1947, 0, 0, 0,
	1971, 0, 0, 0, 1919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1954, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936,
	1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1941, 1942,
	1943, 1944, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 3527, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 1971, 1967, 0, 0, 0, 0, 0, 0, 1946,
	1948, 0, 0, 3971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 1964, 0,
	0, 0, 0, 0, 0, 1933, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1916, 1917, 0, 1949, 1950,
	1951, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 1947,
	0, 0, 0, 3522, 0, 0, 1945, 1919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1916, 1917, 1972, 1949, 1950, 1951, 1960, 1961,
	1962, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 1953, 1947, 1958, 0, 0,
	0, 0, 0, 1935, 1919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 1942, 1943, 1944, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936,
	1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 0, 1957, 0, 0, 1967, 0, 0, 1941, 1942,
	1943, 1944, 1946, 1948, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 1964, 0, 0, 0, 0, 0, 0, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 1957,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 1946,
	1948, 1939, 0, 0, 0, 1916, 1917, 0, 1949, 1950,
	1951, 1960, 1961, 1962, 0, 0, 1963, 0, 1964, 0,
	0, 0, 0, 0, 0, 1933, 1934, 0, 1953, 1947,
	0, 0, 0, 3460, 0, 0, 0, 1919, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 1966, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	1954, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 3487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 1942, 1943, 1944, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1940,
	0, 0, 1957, 1971, 0, 1967, 0, 0, 0, 0,
	0, 0, 1946, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 1963,
	0, 1964, 0, 0, 0, 0, 0, 0, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 1930, 1931, 1937, 1959, 1936,
	1932, 1969, 1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1916, 1917,
	0, 1949, 1950, 1951, 1960, 1961, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1947, 0, 0, 0, 0, 0, 0, 1945,
	1919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 1916, 1917, 1972, 1949, 1950,
	1951, 1960, 1961, 1962, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1938, 1953, 1947,
	1958, 0, 0, 0, 0, 0, 1935, 1919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 1942, 1943, 1944, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 0, 1957, 0, 0, 1967, 0,
	0, 1941, 1942, 1943, 1944, 1946, 1948, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 1964, 0, 0, 0, 0, 0,
	0, 1933, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 1957, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 1946, 1948, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	0, 1964, 0, 0, 0, 0, 0, 0, 1933, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 1916, 1917, 0, 1949, 1950, 1951, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 1953, 1947, 0, 0,
	0, 1969, 1945, 0, 0, 1919, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	1916, 1917, 1972, 1949, 1950, 1951, 1960, 1961, 1962, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1938, 1958, 1947, 0, 0, 0, 0, 1945,
	0, 1935, 1919, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 1971, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 1918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1938,
	1958, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	1942, 1943, 1944, 1971, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 2471, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 1931, 1937, 1959, 1936, 1932, 0, 1929, 1927,
	1928, 1920, 1921, 1922, 1923, 1925, 1926, 0, 0, 0,
	1957, 0, 0, 1967, 0, 0, 1941, 1942, 1943, 1944,
	1946, 1948, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 1956, 1964,
	0, 0, 0, 0, 0, 0, 1933, 1934, 1930, 1931,
	1937, 1959, 1936, 1932, 0, 1929, 1927, 1928, 1920, 1921,
	1922, 1923, 1925, 1926, 1955, 0, 0, 1957, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 1946, 1948, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 1964, 0, 0, 0,
	0, 0, 0, 1933, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1940, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1937, 1959,
	1936, 1932, 0, 1929, 1927, 1928, 1920, 1921, 1922, 1923,
	1925, 1926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1931, 1937, 1959, 1936, 1932, 0,
	1929, 1927, 1928, 1920, 1921, 1922, 1923, 1925, 1926,
}

var sqlPact = [...]int{
	8486, -1000, -1000, -1000, -1000, 171, -1000, -1000, 170, 167,
	165, 162, 161, 160, 159, 157, 156, 154, 152, -1000,
	-1000, 151, 150, 149, -1000, -1000, 148, -1000, -1000, 142,
	-1000, 139, 137, 136, -1000, -1000, 134, -1000, 133, -1000,
	-1000, -1000, -1000, 131, 130, 129, 96397, 95815, 96977, 2465,
	122549, 105109, 2077, 85351, 121967, 84769, 121385, 2324, 8871, 120803,
	2926, 127, -1000, 120221, 126, 125, 124, -1000, 104527, 119639,
	102201, 2006, -1000, 122, 120, -1000, 10621, 74247, 119, 118,
	115, 114, 2953, 113, -1000, 112, 109, -1000, -1000, 108,
	-1000, 12201, 1607, -1000, 107, 106, -1000, 5352, 101619, 105,
	104, 103, 2869, 102, 100, 71342, 99, 98, 96, 2737,
	3058, -1000, -1000, 2262, -1000, -1000, 90, 89, 88, 87,
	83, 82, 81, 80, 79, 78, 76, 75, 72, -1000,
	70, 69, 68, 66, 65, -1000, 62, 58, 57, -1000,
	56, -1000, 55, 54, 53, 52, 49, 47, 46, 45,
	44, 42, 41, 40, 39, 38, 31, 9879, -1000, -1000,
	29, -1000, 2109, 1786, 1757, 1753, 1731, 1723, 959, 28,
	22, 21, 20, 18, 17, 16, 15, 14, 11, 10,
	9, 8, 7, 3, 2, 1, 0, -1, -2, 141,
	-3, -4, -5, -6, -8, -11, -13, 3792, 3798, -1000,
	1644, 1606, 32832, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	131249, 123129, -17, -98, -20, -1000, 3582, 956, 59069, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 408,
	2574, 676, -1000, -1000, -1000, 119057, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2464, -12, -1000, 2181, -1000, -1000,
	-1000, -1000, -1000, 675, -1000, 2458, 2427, 333, 2426, -1000,
	-1000, -1000, 3673, 2624, 4089, 4088, 4087, 4086, 4085, 130669,
	2000, 4084, 2696, 4083, 4082, 4079, 4077, 4076, 4075, 4074,
	-1000, 95233, 1066, 94651, 94069, 3679, 118477, 93487, 117895, 133575,
	50778, 1276, 3669, -1000, -1000, -1000, -1000, -1000, -1000, 123129,
	-1000, 1061, -1000, -1000, 4073, 2240, 673, 103945, -1000, -1000,
	117313, 1777, -1000, -1000, -1000, 905, 1213, 34617, 34617, 34617,
	226, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3683, -1000,
	-1000, -1000, -1000, 123129, 2946, 2946, 1481, 1392, 1392, 2946,
	2946, -1000, -1000, -1000, -1000, -1000, -1000, 4072, 4071, 4070,
	4068, 4067, -1000, -1000, -1000, 84187, 25499, 83605, 83023, 116731,
	50183, 92905, 92323, 4066, 4061, 4058, 49588, 78949, 3827, 116149,
	132993, 3796, 3795, 1060, 2171, 1555, -1000, -1000, -1000, -1000,
	-1000, -1000, -39, 75987, 3851, 123129, -1000, 221, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 48993, 949, 48398, 760, 47803,
	748, 115567, -1000, -1000, -1000, -1000, 78357, -1000, 114985, 2622,
	4057, 4056, 1172, 4053, 3537, 1965, 4052, 2009, 1250, 4051,
	4050, 4048, 4046, 4044, 4042, 4041, 1634, 114403, 3188, 1660,
	113821, 1914, 132411, 1058, 91741, 96977, 2788, 113239, 1562, 1539,
	-1000, -1000, -1000, -1000, 3348, 3041, 3030, 1023, -1000, -1000,
	-1000, -1000, 62578, 9059, 7787, -1000, -1000, 11628, 112657, 65528,
	96977, 96977, -1000, -1000, -1000, -1000, -1000, -1000, 47208, 741,
	46613, 1209, 112075, -1000, -1000, 63168, 3126, 1112, -1000, -1000,
	-1000, -1000, -1000, 111493, 46018, 607, 45423, 1169, 123129, -1000,
	3186, 2068, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2915, 1649, 3858, 2939, 77765, 2204, 1454, 3635, 3347,
	3346, 1528, 2163, 3337, 4040, 2792, 3324, 3321, 3294, 3290,
	3281, 1726, 2751, 419, 2741, 32237, 3170, 1870, 44828, 1611,
	1537, 3278, 3262, 3887, 3724, 2144, 2175, 2213, 2195, 82441,
	4034, 4033, 3583, 3245, 3243, 3009, 3227, -1000, 3125, 1620,
	218, -1000, -1000, -1000, -1000, -1000, -1000, 1446, -1000, -1000,
	-1000, -1000, -1000, 87091, -1000, -1000, 1868, -1000, -1000, 1868,
	-1000, -1000, -1000, -1000, -1000, 1450, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1644, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3150, -1000, 2238, -1000, -1000, -1000, 2674, 3560, 3560,
	3560, 3668, 401, 382, -1000, 141, -1000, -1000, 143264, -1000,
	-1000, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 2360,
	-1000, 672, -1000, -1000, 709, -1000, 671, 612, 537, -1000,
	-1000, -1000, -1000, -1000, -1000, 670, -1000, -1000, -1000, -1000,
	-1000, -1000, 3851, -1000, 28530, -1000, -1000, -1000, 389, 669,
	51373, -1000, -1000, 3914, 3913, 855, -1000, 217, 918, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3185, 668, 664, -1000, 663, 656, 655, 653, 649,
	-1000, 648, -1000, 647, 644, 643, 642, 641, 640, 638,
	636, -1000, 2209, -1000, -1000, -1000, -1000, -1000, -1000, 597,
	595, 595, 595, -1000, 1039, -1000, -1000, -1000, 227, 592,
	225, 591, 590, 588, -1000, 635, 634, 632, 628, 627,
	626, 624, 623, 619, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1036, -1000, -1000, -1000, -1000, -40, 123129, -1000, 408,
	-40, -1000, -1000, 618, -1000, 37015, 37015, 37015, -1000, -1000,
	2457, 51373, -1000, 3319, -1000, -30, -30, 834, 60815, -1000,
	57905, 834, 308, 717, 66692, -1000, 3123, -1000, -1000, 617,
	215, -1000, -1000, -1000, -1000, 26089, 3122, 123129, 123129, 123129,
	96977, 96977, 96977, 123129, 4032, 4031, 3439, 51373, -1000, -1000,
	73665, 135316, 97557, -1000, -1000, 3776, 71922, 73085, 3183, 135316,
	3181, 134739, 4030, -1000, -1000, -1000, -1000, -1000, 3414, 4029,
	4027, 4026, -1000, 123129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 244, 3413, -1000, -1000, 101037, 244, 3412, -1000, 244,
	3411, -1000, 100457, -1000, -1000, 2397, 3410, -1000, -1000, 247,
	3409, -1000, -1000, -1000, 245, 3408, -1000, -1000, 213, -96,
	3407, -1000, -1000, -1000, -1000, -1000, -1000, 143264, -1000, -1000,
	-1000, 134157, -1000, 3579, -1000, 123129, -1000, 51373, -1000, -1000,
	3773, 1776, 3587, 3706, -1000, -1000, -59, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2665, 2707, 1091, 2505, -1000, 3453,
	1593, 34617, 3525, -1000, -1000, -1000, -1000, -1000, 209, 26089,
	3023, -1000, -1000, 123129, -1000, 123129, 2946, 2946, -1000, -1000,
	-1000, 3867, 3866, 2946, 2946, 123129, 123129, -1000, -1000, -1000,
	-1000, -1000, -1000, 2585, 3404, 1700, -1000, 2504, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2280, 3403, -1000,
	2679, 3399, 2254, -1000, -1000, 2352, -1000, 139603, 1449, -1000,
	-1000, -1000, -1000, 1950, 3397, -29, -1000, -1000, 2413, -1000,
	-1000, -1000, -1000, 139397, -1000, 3063, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1822, 1798, -1000, -1000, 2139,
	-1000, 1280, 3394, -1000, 2937, 2937, 91159, 3358, 64938, 63168,
	75987, -48, -1000, -1000, -1000, -97, -1000, 24903, 143264, -1000,
	-1000, -1000, -1000, 1900, 143264, 860, -1000, -1000, 3393, -1000,
	143264, 851, -1000, -1000, 3390, -1000, 2749, -1000, 3179, -1000,
	-1000, 2578, 2573, 1000, -1000, 4025, -1000, -1000, 4024, -1000,
	4023, 4022, 4021, -1000, 1817, 2161, 4020, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 90579, 2456, -1000, -1000, 88833,
	3178, -1000, 2571, 3704, -1000, 89997, 1055, -1000, 972, 2565,
	-1000, 99877, 970, 2561, -1000, 4019, 3677, 2839, 972, 2554,
	-1000, -1000, -1000, -1000, -1000, 961, -1000, 69016, -1000, 69016,
	-1000, 1801, -1000, 130089, -30, 96977, 3851, -1000, -102, -1000,
	-1000, -1000, 956, -1000, 61996, -1000, 61996, 103363, 79539, 946,
	3118, 70760, 143207, -1000, 999, -1000, -1000, 143264, -1000, -1000,
	-1000, 2745, -1000, -202, 2936, -1000, 79539, 64348, 3117, 2738,
	-1000, 143264, -1000, -1000, -1000, -1000, 143264, -1000, -1000, -1000,
	79539, 88833, -1000, 110911, 89415, -1000, -1000, 1600, 2700, -1000,
	-1000, -1000, 79539, 1292, 79539, 79539, 79539, -1000, 110329, -1000,
	3176, 2231, 1663, 3564, 2230, 96977, -1000, 2013, -1000, -1000,
	-1000, 3610, 3345, 123129, -1000, -1000, 3172, -1000, 75407, 99297,
	-1000, 98717, -1000, 98137, -1000, 96977, -1000, 96977, -1000, 4017,
	4016, 4012, -1000, -1000, 4008, -1000, 4004, 3592, -1000, 783,
	44233, 143264, 3584, -1000, 4002, 2153, 3170, 143264, -1000, 3335,
	1778, 1736, 123129, -1000, -1000, 123129, -1000, 123129, -1000, -1000,
	-1000, 2489, 1692, -1000, -1000, 2664, -1000, -1000, -1000, 994,
	-1000, -1000, 96977, 96977, 96977, 96977, 1298, -1000, 43638, -1000,
	-1000, 3342, 4001, 1853, -1000, 2003, -1000, 3116, 3590, -1000,
	1599, 1907, 208, 3917, -1000, -1000, 248, -1000, -1000, -59,
	-1000, 129509, -1000, 2674, -1000, 123129, -1000, 2671, 3140, 3169,
	1923, 2481, 2774, -1000, 43043, 2740, 54943, 2498, 141, -1000,
	-1000, 141, 141, 34022, -1000, -1000, 71922, 71922, 26089, 1484,
	51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373,
	51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373,
	51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373, 51373,
	51373, 51373, 51373, 51373, 51373, 51373, 2226, 51373, 1447, 51373,
	51373, 51373, 51373, 2029, -1000, -1000, 2143, 442, 2183, 612,
	-1000, -1000, -1000, 3830, 3830, 3830, 1483, 1483, 1483, 143659,
	143659, 441, 3999, 709, -1000, 51373, -1000, 74, 61397, 51373,
	26681, -1000, 382, 11437, 2685, -1000, 380, 27306, -1000, -1000,
	-1000, 28530, 537, 42418, 51373, 1008, 143264, -1000, -1000, 1770,
	3859, 24307, 3187, 2992, 609, 840, 838, 31612, 30987, 30362,
	29737, 829, 720, 51373, 51373, 51373, 51373, 51373, 51373, 51373,
	51373, -1000, -1000, 3865, -1000, 3859, -1000, -1000, -1000, -1000,
	3859, 1476, 1348, 3859, -1000, 3859, 3859, 9793, 9793, 41823,
	41228, 40633, 55538, 40038, 51373, 29142, 39443, 38848, -1000, 123129,
	-40, 3772, 51373, 277, -1000, 140482, -1000, 277, 277, 605,
	-105, 143264, 2715, 2715, 59651, 2497, 2369, 2369, 2369, -1000,
	834, 18905, 834, 108589, 2377, 834, 834, 200, 233, 379,
	57323, 3319, 108589, 693, 604, -22, -23, -24, -1000, -1000,
	-25, -26, -1000, -1000, 96977, 603, 26681, 26089, 199, 2160,
	-107, 2770, 2768, -1000, 2767, 2764, -1000, 2763, 2455, -1000,
	-1000, -1000, 1964, -108, 1443, 96977, 123129, 1558, 3998, -68,
	-1000, 6624, -114, -1000, 1279, 196, 3859, -1000, -1000, -1000,
	-1000, -1000, 3997, 3996, -1000, 1018, 602, 601, 353, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 597, 595, 595,
	595, -1000, 227, 592, 225, 591, 590, 588, -1000, -1000,
	-1000, -1000, -1000, 3113, 96977, 123129, 1557, 3995, 85931, -96,
	97557, -36, -1000, -1000, 123129, -1000, -1000, -1000, 3992, -1000,
	96977, -1000, -1000, 96977, 244, 3389, -1000, 96977, -1000, 96977,
	235, 3385, -1000, -1000, 123129, -1000, 96977, 96977, -1000, 123129,
	123129, 123129, 135316, 135316, 234, -1000, 96977, 797, -115, 1186,
	-59, -1000, -1000, -1000, -1000, 1868, -1000, 1945, -1000, -1000,
	-1000, -1000, -1000, -1000, 1642, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 855, -1000, -1000, -1000, -1000, 3849, 3840,
	-44, -1000, -1000, 26089, -1000, 2087, -1000, -1000, -1000, -1000,
	123129, 123129, -1000, -1000, 123129, 123129, -1000, -1000, -60, 1802,
	556, 1437, -1000, 81859, 2527, 3566, 3991, 2827, 3556, 1787,
	-1000, 1670, 586, -1000, 3687, 87091, 3722, 3747, 1323, -1000,
	3111, -1000, -1000, -1000, 904, 1828, 1893, 1433, 1383, 87091,
	2679, -1000, 71922, -1000, 2812, 3667, 1392, 1469, 1392, 1392,
	1423, -1000, 87091, 1891, 1379, 1378, 1376, -1000, -1000, 2074,
	2073, -1000, -1000, 109749, -1000, 1373, 1366, 3791, 3150, 2328,
	735, 2051, -1000, 1413, 1359, 3110, -1000, -1000, -61, 3717,
	3742, 1323, -1000, 3108, 1355, -1000, -1000, -1000, 3666, 96977,
	26089, 1609, 1608, 1603, 1889, 1352, -47, -1000, 3719, 1751,
	-1000, 88833, 88833, 105689, 123129, 3805, 79539, -1000, 2545, 3634,
	3632, 3630, 3623, 1351, 1350, -1000, 1027, 10915, 3489, -1000,
	135316, 1027, 1027, 2247, 3379, 2916, 1835, -1000, 2933, 821,
	2932, -1000, -1000, -1000, 821, -48, 75987, 123129, 187, -1000,
	74, 51373, 51373, 74, 51373, 74, -1000, 3695, 3377, 3328,
	3989, -1000, -1000, -1000, -1000, -1000, 3988, 2118, 2689, -1000,
	-1000, 584, 2553, 3096, 123129, 2786, -50, 96977, -1000, 74827,
	3323, 135316, 2679, 2552, -1000, -1000, 88253, -1000, 3322, 408,
	2551, -1000, 662, 3987, 3318, -1000, 128929, -1000, 3579, 1514,
	3316, 1110, 702, 3771, -1000, 702, 69596, -1000, 123129, -1000,
	-30, 2420, 80699, -116, -122, 371, -1000, 109169, 123129, 123129,
	3508, 2148, 2140, -1000, 954, 63168, -1000, 63168, -125, -1000,
	-202, 2930, 1619, 63168, -1000, 946, 946, 821, -1000, 821,
	-1000, 96977, 3167, -1000, -1000, 79539, 946, 946, 946, 3166,
	-1000, 1515, 3164, -1000, 3985, 3984, 3981, 3979, 3163, -1000,
	965, 96977, 123129, 96977, -1000, -1000, 1775, -1000, 186, -1000,
	135316, -1000, 135316, 123129, 96977, -1000, 965, 123129, 965, 123129,
	965, 123129, 965, 965, -1000, -1000, -1000, -1000, -1000, 74,
	-1000, -1000, 143264, -1000, 51373, -1000, -1000, 1667, 3977, 1797,
	-1000, 3149, -1000, 3146, -1000, 13, -1000, -1000, 3864, 1993,
	-1000, 3904, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3976, 143264, -1000, 2246, -1000, -1000, -1000, -1000, 96977, 96977,
	96977, 96977, 123129, 3482, -1000, 123129, 3470, 96977, -1000, 3916,
	-1000, -1000, 87091, -1000, 2671, 3140, -1000, -1000, -1000, -1000,
	-1000, -1000, 1549, 2430, -1000, 2720, -1000, 1716, -1000, -1000,
	-1000, 143264, 56133, -1000, -1000, 143264, 1935, -1000, 54348, 53753,
	-1000, -1000, 1861, 96977, 2795, -1000, 2795, -95, -1000, 140291,
	2719, 96977, -1000, -1000, -1000, -1000, -1000, 900, 621, 621,
	1404, 1404, 1404, 1404, 3694, 7296, 7412, 6217, 473, 473,
	1211, 1211, 1211, 1211, 1211, 473, 5378, 1483, 1483, 5378,
	5378, 5378, 5378, 5378, 1483, 1483, 1483, 473, 473, 473,
	1483, 143659, 143602, 9658, 51373, 51373, 1347, 2141, 442, 8524,
	51373, 5345, 5345, 5345, 5345, -1000, 2106, -1000, -1000, -1000,
	-1000, 3095, 582, 55538, 55538, -1000, -1000, -1000, -1000, 27918,
	51373, -1000, -1000, -1000, -1000, 38223, -1000, -1000, 139120, -334,
	370, -1000, 184, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 368, -93, 95, -1000,
	51373, 51373, 51373, 365, -1000, 183, 51373, 123129, -1000, 135929,
	692, -124, -1000, -127, 1461, -1000, 51373, -1000, -1000, 1340,
	-1000, 1337, 1333, 1322, -1000, 581, 363, -1000, 181, -1000,
	2364, 580, 576, 51373, -1000, -1000, -1000, -1000, -1000, 138914,
	-1000, -1000, 138708, -1000, -1000, 138502, -1000, -1000, 138296, -1000,
	-1000, -1000, -1000, -1000, 142814, 135899, 18198, 17992, 9708, 16840,
	16383, -146, 358, -147, 357, 892, 877, 356, 355, 350,
	-148, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -154, 349, -1000, 3092, -93, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 348, -1000, 340, -1000,
	142581, -93, 336, 572, -1000, 55538, 55538, 55538, 55538, -1000,
	332, -1000, 140083, -1000, 142524, 37628, 37628, 37628, 330, 142131,
	51373, -93, -155, -1000, -156, -1000, -1000, 512, -161, 1004,
	37015, 58487, 26089, -1000, 1004, 1004, 51373, -1000, 51373, 2732,
	-1000, -1000, -1000, -1000, 2730, 2563, 2715, 59651, -1000, -1000,
	-1000, -1000, 108589, -1000, 3851, 3416, -1000, 108589, -1000, -1000,
	123129, 408, -1000, 108589, 108589, 26089, 834, -1000, 834, 108589,
	610, -1000, -1000, -1000, -1000, -1000, 327, 67856, 95, 178,
	26089, 972, -1000, -1000, 2846, 2846, 2846, 2846, 2846, 96977,
	-1000, -1000, 135316, 1321, -51, -123, 2925, -1000, 3802, -1000,
	2237, -1000, 71922, -1000, 708, 1188, 26089, -1000, -1000, -1000,
	575, -1000, 3859, 3859, -1000, 3859, 135316, 3091, 272, 2918,
	-1000, 2454, -49, 270, 135316, 3971, -1000, -1000, 244, -1000,
	96977, 244, 244, -1000, 96977, 96977, 2397, -1000, 247, -1000,
	245, -1000, -1000, -96, -1000, 992, 34617, -1000, 1868, -1000,
	-1000, 1610, -1000, 2145, -1000, 1284, -1000, -1000, 34617, -1000,
	3514, -1000, 1897, -1000, -1000, -1000, -1000, 2614, 123129, 123129,
	96977, -1000, 106849, 123129, -1000, 2305, 135316, -1000, 2547, 128349,
	2526, 127769, 71922, -1000, -1000, 574, 913, 2717, 2713, 1101,
	123129, 123129, 2712, 127189, 126609, -1000, 3969, 123129, 2215, 51373,
	106849, 3663, 2366, 2419, 74, 74, -1000, 74, -1000, -1000,
	573, 1197, 96977, 96977, 123129, 135316, 96977, 2186, -1000, -1000,
	-1000, -1000, -1000, 87671, -1000, -1000, 1392, -1000, -1000, -1000,
	1392, 2679, 2157, 123129, 135316, 96977, 135316, 126029, 125449, -1000,
	-1000, 1886, 123129, -1000, -1000, -1000, -1000, 1429, -1000, 735,
	1309, 3082, 51373, 51373, 2265, 74, 74, -1000, 74, 568,
	26089, 2121, -1000, 3180, 123129, 3901, 124869, 3900, 123129, 123129,
	123129, 135316, 3552, 123129, -1000, -1000, -1000, -99, -1000, 807,
	806, -97, -1000, 3805, -1000, 805, 1746, 1745, 1742, 1738,
	123129, 135316, -1000, 124289, 10915, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2260, 77173, 1108, 123129, 1280, -1000, -1000, 1879,
	1308, 1306, 87091, 2266, 1876, 1983, 135316, 63168, 955, 63168,
	2845, -1000, -1000, 23711, -1000, 143264, 143264, -1000, 143264, -1000,
	74827, 79539, 123129, -1000, -1000, 1050, 123129, 81279, 925, 3313,
	68436, -97, 946, 79539, 96977, -50, 2786, 123129, -1000, -1000,
	2679, 3310, 408, 2546, -1000, 135316, 3770, 3301, 558, 3968,
	3967, -1000, 96977, 2451, 2541, -1000, -1000, 123709, 3427, 735,
	123129, 1004, 59651, 2127, -1000, 66110, 1077, 123129, 1991, 224,
	-1000, -1000, -1000, -14, 123129, -1000, 481, -1000, -1000, 2420,
	2420, 946, -99, 557, 63758, -168, -1000, 176, 548, 803,
	800, -1000, 5236, -1000, -202, -1000, 79539, 954, 63168, 3078,
	-202, 2917, 3075, -1000, -1000, 991, -1000, 1591, 946, -1000,
	-1000, -1000, 1513, 3851, 1466, -1000, -1000, -1000, -1000, 1307,
	-1000, -1000, -1000, -1000, -31, 1982, 123129, -96, -96, -75,
	-51, -1000, 965, -1000, 965, -1000, 965, -1000, -1000, -1000,
	143264, -1000, -1000, -1000, 1781, 1760, 123129, -1000, 3139, -1000,
	123129, -1000, -1000, 26089, 123129, 96977, 26089, 96977, 3138, 3136,
	-1000, -1000, -1000, 123129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1134, -1000, 1935, 2421, -1000, 537, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2642, -1000, -52,
	34022, 830, -1000, -1000, 96977, -33, 51373, 51373, 7681, 6953,
	51373, 55538, 55538, -1000, 51373, 6403, -1000, -1000, -1000, -1000,
	-1000, 3066, 520, 51373, 71922, 6476, 5629, -1000, 325, 15715,
	5378, -1000, 51373, -1000, 541, -1000, 323, 36420, -1000, 140962,
	-9, -169, -1000, 19515, -93, -170, -1000, -1000, 705, -1000,
	3423, -1000, 51373, 141842, 2616, 2100, 1951, 1814, 3859, 3898,
	23115, -1000, 70178, 1005, 2389, 138090, -1000, -1000, -1000, -1000,
	71922, 71922, 51373, 51373, -1000, 51373, 51373, 51373, -1000, -1000,
	-1000, 3859, 884, -1000, -1000, -1000, 884, -1000, -1000, 1392,
	-1000, 1392, -1000, 51373, -1000, -1000, 3060, 51373, -1000, 71922,
	71922, 55538, 55538, 55538, 55538, 55538, 55538, 55538, 55538, 55538,
	55538, 55538, 55538, 55538, 55538, 55538, 55538, 55538, 55538, 55538,
	55538, 2692, 55538, 3825, 3825, 3825, 1104, -1000, 3135, 3060,
	51373, 51373, 71922, 322, 321, 319, -1000, 51373, -93, -1000,
	-1000, 9921, 519, -1000, 2630, -1000, 2990, -1000, 51373, -1000,
	-134, -1000, 3319, -1000, -1000, 2990, 2990, -171, 143264, 59651,
	59651, -1000, 518, 51373, 2729, -1000, -1000, 691, -323, -1000,
	799, -1000, -1000, -1000, -1000, -1000, -1000, 789, -1000, 408,
	-1000, -1000, -1000, 175, 108589, 108589, 688, -1000, -176, -1000,
	-1000, -177, -1000, 3769, 317, 26089, -1000, 1004, 2893, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2759, -268, 135316, 135316,
	1874, 2422, 3897, -1000, 3860, 703, 687, 174, 3859, 315,
	314, 311, -96, 135316, 135316, 1869, 72505, 135316, -1000, -1000,
	-1000, 244, -1000, -1000, -1000, 235, -1000, -1000, -1000, -1000,
	2808, -1000, -59, -1000, -1000, -1000, 51373, -1000, 940, -1000,
	-1000, 3563, 517, 1305, 1303, -1000, -178, -1000, 786, -1000,
	-1000, -1000, -1000, 3076, -1000, 3300, -1000, 2540, -1000, 1081,
	2538, 1815, -1000, 51373, 516, 2838, 513, 507, 3966, 2327,
	3964, 1105, 3299, 2397, 3293, 2397, -1000, -1000, -1000, 870,
	-1000, 143264, -179, -1000, 2366, -1000, 502, 500, -1000, -60,
	1794, 527, 1302, 990, -1000, -1000, 51373, 51373, 108009, -1000,
	477, 3565, -34, -1000, -1000, -1000, 1867, 1300, 1295, -1000,
	-1000, -1000, -1000, 2679, 1862, 1275, 1273, -1000, -1000, -1000,
	-1000, -1000, 2537, -1000, -1000, 3285, 989, -1000, 3213, 3209,
	858, 123129, 51373, 51373, 141651, 141445, -1000, 987, -1000, -1000,
	51373, -1000, -61, 1252, 3715, 2532, 96977, -1000, 2397, 3282,
	1247, -1000, 1245, -1000, -1000, -1000, 3713, 3708, 1256, 105689,
	79539, 79539, 3805, 63168, 123129, 123129, 123129, 123129, -1000, -1000,
	-1000, 79539, -1000, -1000, 76583, -1000, -1000, 1027, 123129, 135316,
	96977, 1992, -1000, -1000, 85931, 86511, 123129, 2916, -96, 821,
	-1000, 2702, 821, 955, 3049, -1000, 2782, -1000, 985, 96977,
	3962, 310, -184, -62, 71922, -1000, -1000, -1000, -1000, 2526,
	96977, 123129, 1263, 2835, 123129, 123129, 3768, -1000, 2472, 501,
	96977, 836, -1000, 3851, -1000, -1000, -1000, 974, -1000, 3703,
	96977, 3767, 3280, 972, 74, 96977, 3833, -1000, -1000, 3764,
	96977, 3277, 2450, 2531, 2678, 735, 80119, 972, 2382, -80,
	-1000, 1991, 35807, 3561, -185, -1000, -1000, -1000, 1004, 69596,
	59651, 51373, 3961, -186, -1000, -1000, -1000, -1000, -1000, 105689,
	79539, 946, 123129, 123129, 3960, 79539, 79539, 79539, -64, 499,
	-1000, 781, 775, 774, -1000, -1000, -1000, -1000, -1000, -1000,
	772, 771, 767, 765, 954, -1000, -1000, -202, 63168, 954,
	63168, 74, -1000, 2410, 96977, -1000, 3851, -1000, 3851, 3851,
	22519, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 965, 3895,
	-97, -1000, -1000, -1000, 2268, 2492, 2268, 1973, 1967, -1000,
	-1000, 2415, -1000, -1000, -1000, -1000, 2777, 3543, 26089, 3716,
	5345, 51373, 51373, 6340, 5574, 952, 5345, 51373, 51373, 71922,
	9253, -191, 51373, 51373, -1000, 51373, 686, 143264, -1000, 3893,
	51373, 304, 294, -1000, -1000, -1000, 3855, -1000, -1000, -1000,
	143264, 51373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 287,
	-1000, 173, -1000, -1000, -1000, 131829, -1000, 51373, 280, 3661,
	-1000, 269, 268, 12867, 309, 137884, 137678, 137472, 267, -1000,
	-1000, 265, 264, 143264, 3135, 143264, -1000, -1000, 1057, 1057,
	1363, 1363, 1363, 1363, 3825, 1097, 1780, 825, 1043, 1043,
	1043, 1089, 1104, 1104, 1043, 1043, 1043, 1104, 3044, 2705,
	497, 1006, -1000, -1000, 143264, 143264, 263, -1000, -1000, -1000,
	-93, 262, 9921, -1000, 2983, 3658, 143264, -1000, 59651, 2983,
	2983, -1000, -1000, 2563, 123129, 143264, 59651, -1000, 3416, -1000,
	20725, 20123, -1000, 26089, -1000, -1000, -1000, -1000, 3851, -1000,
	67856, -1000, 496, -1000, 146, -1000, 2893, -1000, 763, -1000,
	-1000, 79539, 79539, 2846, -1000, 3005, -268, -212, 123129, -1000,
	-1000, 681, 3958, 700, 26089, 261, -1000, -1000, -1000, -96,
	-96, 123129, 3043, 96977, 123129, 1523, -96, -1000, -1000, -1000,
	3507, 143264, 3069, 2972, 2938, 123129, 123129, -1000, 106849, 34617,
	1654, 107429, 123129, 3274, -1000, 3252, -1000, 1101, 2090, 137266,
	60233, -1000, 60233, 123129, -1000, -1000, -1000, -1000, 2063, 1512,
	3957, 1149, -1000, 3612, 123129, -1000, 123129, -1000, -1000, -1000,
	106849, -1000, 123129, 123129, 96977, 123129, -1000, 135316, 3229, -192,
	143264, -67, -1000, 762, -1000, 1362, -1000, 21923, 123129, 135316,
	96977, 123129, 135316, 96977, 3251, 123129, 2306, -1000, -1000, 3208,
	-1000, 143264, 141168, 74, 51373, 3222, -194, 26089, -1000, 3891,
	3888, 3249, 3616, -1000, 123129, 3885, 123129, 96977, 3505, -1000,
	-1000, -1000, 964, 797, -1000, 797, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1854, 1240, 1236, 2449, 2448, 2418,
	-75, 2266, 955, -76, 495, -1000, 757, -1000, -1000, 755,
	753, 955, -1000, 79539, 63168, 3956, 408, -1000, 2826, -1000,
	102781, 81279, 2428, -1000, -1000, 489, 123129, 123129, 488, -1000,
	74, -1000, 3950, 106849, 487, -1000, 2408, -1000, 679, -1000,
	2659, 135316, 2679, 74, 96977, -1000, 953, 408, 259, -78,
	-1000, 3325, 1099, 26089, 96977, 3248, 2684, 735, 80119, -1000,
	1514, 2774, -1000, -79, -1000, 471, 74, 2382, -1000, -80,
	143264, -1000, 744, -197, 258, -1000, 3504, -1000, -1000, -200,
	-1000, -1000, 5413, 5413, 79539, 63168, 79539, 79539, 79539, 63168,
	79539, -1000, 954, 821, -1000, -202, -1000, 2530, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 26089, 1825, -1000,
	483, 482, -1000, -1000, -1000, -1000, 3543, 5345, 5345, 51373,
	51373, 51373, 5345, 9253, -203, -1000, 5345, 5345, -93, -1000,
	-1000, 140962, -1000, -1000, -1000, 143264, -1000, 21327, 2287, -1000,
	137060, -1000, 34022, -1000, -1000, 51373, 51373, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 55538, 3042, 478, 71922, -1000,
	-1000, 257, 962, 51373, 53158, 3319, 962, 962, -1000, -205,
	-1000, -1000, -1000, 3851, -1000, 3851, 146, -1000, -1000, 3949,
	26089, -1000, 79539, -1000, -1000, -1000, 2417, -1000, -1000, 3215,
	-187, 696, -1000, 3943, -1000, -1000, 153, 135316, 3038, 145,
	2913, -1000, 74, -1000, -1000, -1000, -1000, -1000, -1000, 2909,
	3763, -1000, 2046, -1000, 123129, 123129, -1000, 123129, -1000, 26089,
	123129, 3024, 1289, -1000, 913, 2710, 475, 55538, 1132, 96977,
	868, 2968, 2952, -1000, 3786, 3654, 2928, -213, -1000, 123129,
	51373, 123129, -214, -216, 2517, -1000, -1000, 1129, 1283, 51373,
	1126, -1000, -1000, -1000, 71922, 474, 2397, 2397, -1000, -219,
	-222, -1000, -1000, -1000, 51373, 1235, 123129, 35212, -1000, 3942,
	3565, -1000, -1000, -1000, -1000, -1000, -1000, 123129, -1000, 123129,
	-1000, 51373, -1000, 140771, 51373, 1233, -1000, -1000, -1000, 3878,
	2397, 26089, 2397, -1000, 2397, 3616, 1145, 2469, 34617, 34617,
	123129, 135316, 96977, 2117, 2117, 3052, -1000, -1000, -1000, 2703,
	2703, 79539, 63168, 63168, -1000, -84, 955, -1000, 3760, 2284,
	3939, -1000, -1000, -1000, -1000, 2709, -1000, -1000, -1000, 123129,
	2708, 2924, 60233, 459, 452, 123129, 948, -1000, -224, 81279,
	925, 894, -1000, -85, 451, -1000, 743, -1000, -1000, -1000,
	-1000, 408, -1000, 2783, 3759, -1000, 3876, 449, 448, 123129,
	2443, 447, 26089, 3559, 735, 80119, -1000, 3427, 1991, -1000,
	2524, 123129, 3548, -1000, 2774, 442, -1000, 946, 440, 946,
	-1000, -225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 954, -87, -1000, 843, 742, -1000, -1000, 96977, 96977,
	51373, 51373, -1000, 5345, 5345, 5345, -1000, 254, -1000, -1000,
	2382, 3650, -1000, -88, 136776, 136568, 7022, 55538, 71922, -227,
	-1000, -1000, 123129, 143264, -90, -1000, 143264, 439, 438, 400,
	-1000, -1000, -1000, 622, 611, -1000, -1000, -1000, -1000, 135316,
	3936, -1000, 135316, -96, 135316, 135316, 1829, -1000, 106269, 123129,
	-1000, -1000, 1815, 2881, -1000, -1000, -1000, 123129, 2529, -1000,
	-1000, -1000, 967, 51373, 1006, 55538, 437, 51373, -1000, 434,
	428, 3754, 3463, -1000, 2818, 3050, 2129, 60233, -1000, 3543,
	-1000, 136377, -1000, 1098, 2071, -1000, -1000, -1000, -1000, 143264,
	55538, 3616, 60233, -1000, -1000, 427, 425, 143264, 423, 740,
	3035, -1000, -1000, -1000, -1000, -1000, 143264, 74, 143264, 422,
	3715, -1000, -1000, -1000, -1000, 2397, 96977, 737, -1000, -1000,
	-1000, -1000, -1000, 1230, -1000, -1000, -1000, -1000, 3935, 3932,
	3033, 85931, -1000, -232, -1000, -1000, -1000, 2124, 74, 925,
	-1000, -1000, 2428, 414, -1000, 929, 3536, 3536, -233, 60233,
	60233, -235, 2435, 2750, -1000, 253, 3752, 894, -1000, 3836,
	-1000, 3464, 3464, 51373, 3750, 3503, -1000, 74, -1000, 3833,
	60233, -1000, 96977, 60233, 2437, 2197, 2660, 80119, -1000, 2678,
	-1000, -1000, -238, 123129, 1991, -1000, -1000, 79539, -1000, -1000,
	-1000, 2530, -1000, 123129, -1000, 123129, -1000, -1000, -243, -244,
	-1000, 2297, 51373, 34022, -1000, -1000, 7022, -245, -1000, -91,
	-1000, 3748, 53158, 3931, 3930, 3929, -1000, -1000, -268, -1000,
	-96, -96, -96, 123129, -1000, 2038, -1000, 2526, -1000, -1000,
	3241, -1000, 2980, 411, 17298, 1006, 2634, 123129, 7785, 2679,
	2679, -1000, 3743, 3046, -1000, -1000, 2265, 410, -1000, -1000,
	-1000, -1000, 830, 123129, 929, 2979, 96977, 1006, 1100, -251,
	2268, 2268, 51373, 33427, 2304, -1000, 51373, -1000, -1000, 3616,
	63168, 135316, -1000, -1000, 135316, 2436, -1000, 3027, 3829, -1000,
	2435, 123129, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1098, -252, -253, -1000, -1000, 3601,
	-1000, 3493, 2826, 74, -1000, -1000, -1000, -258, 143264, 74,
	3926, 953, 241, -259, 1099, -260, 96977, 2056, -1000, 735,
	-1000, 2684, 1004, 3435, -1000, -261, -1000, -266, -269, -1000,
	-1000, 240, 52563, 52563, 52563, -93, -95, -1000, 123129, 409,
	-1000, -1000, -1000, -1000, -1000, 144, -1000, -1000, 3204, 823,
	-1000, 751, 2040, 237, 1082, 231, 143, -1000, -1000, -1000,
	2928, -1000, 123129, -1000, -1000, -1000, 823, 408, -1000, 51373,
	1098, -272, -1000, 1076, -274, -1000, 1072, -280, -1000, 3032,
	-1000, -287, 2397, -1000, -268, 234, 2117, 951, 3692, -1000,
	-1000, -1000, 2647, -288, -1000, -1000, 2129, 1098, 2265, 2600,
	-1000, 2284, 948, -1000, -1000, -1000, -1000, -1000, 1098, 407,
	2129, 403, 1647, 735, -1000, -1000, 1392, 3559, 3434, 1344,
	946, -1000, -1000, -1000, 3417, -1000, 56728, 2423, 1952, 139794,
	3417, 3417, -1000, -1000, 135316, 123129, 929, 3680, -1000, 814,
	811, 1543, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1004, -293, -1000, 2634, 143264, 929, -1000, 2268, 2885, -1000,
	2268, 3031, -1000, 2282, -1000, -1000, -1000, -1000, 3025, -1000,
	1902, 3813, -1000, -1000, 929, 123129, 2265, 2129, 929, 1959,
	1931, 3923, 925, 2435, 2129, 60233, 2265, 60233, 2252, -1000,
	123129, -1000, 2197, 1335, -1000, 1771, -1000, -1000, 1929, 3782,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -96, -1000, -1000,
	736, -1000, 3450, -1000, 1124, 2190, 2190, -1000, -1000, 751,
	-1000, -1000, 390, -1000, 354, -1000, 135316, 2398, -1000, -1000,
	-1000, -1000, 929, 2265, 1004, -1000, 3920, -1000, 2435, -1000,
	2265, -294, 929, -295, 2315, -1000, -1000, -97, 2056, -1000,
	1765, 69596, 1924, -1000, -1000, 2372, 51968, 51373, -1000, 3809,
	-1000, -1000, 2733, -1000, 2928, 51373, 51373, 234, 67274, 1004,
	929, -1000, -1000, 2647, 929, 1098, 1004, 2129, -1000, 735,
	1647, 69596, -275, -1000, -1000, -1000, 143264, -1000, -1000, -1000,
	-1000, -296, -307, -1000, -99, 105689, -1000, 1004, -1000, 1004,
	2129, -1000, 2265, 135316, 2252, -275, -1000, 2265, 1214, -312,
	-1000, -1000, 2265, 929, -1000, -1000, -1000, -1000, -1000, 278,
	-1000, 929, 1004, 51373, 1004, -1000, -320, -1000, 2265, -1000,
}

var sqlPgo = [...]int{
	0, 4762, 4761, 4760, 4759, 4758, 4755, 4753, 4752, 4749,
	4748, 4747, 4746, 4745, 4744, 157, 4742, 4741, 4738, 4735,
	4733, 4732, 4731, 4730, 4729, 4728, 4727, 4726, 4725, 4723,
	4721, 4720, 4719, 4717, 4716, 4715, 4714, 4706, 4705, 4704,
	4701, 4700, 4699, 4696, 4695, 4694, 4693, 4692, 4691, 4690,
	4689, 4687, 4681, 4680, 4679, 4677, 4674, 4673, 4672, 4671,
	4670, 4669, 4668, 4667, 4664, 4661, 4659, 4658, 4657, 4656,
	58, 4655, 4654, 4651, 4650, 4647, 4646, 4645, 4644, 4643,
	4642, 4641, 4634, 4633, 4631, 4629, 4626, 4625, 4624, 4620,
	4618, 71, 4616, 292, 4615, 4614, 4613, 4608, 4605, 4604,
	4603, 4591, 4589, 4588, 4587, 4585, 291, 4584, 137, 173,
	4582, 4576, 4093, 4575, 4574, 284, 4573, 4572, 4571, 4570,
	4569, 299, 4567, 4565, 4564, 4563, 4562, 4558, 4557, 4556,
	4554, 4552, 4551, 4550, 68, 150, 4549, 4548, 848, 4547,
	4545, 4544, 4543, 4541, 4539, 4538, 4536, 4535, 4531, 4530,
	262, 178, 4529, 283, 4528, 4524, 4523, 4518, 4517, 4516,
	4515, 4514, 4511, 4510, 4509, 4508, 4507, 4506, 4504, 4503,
	4501, 4500, 4499, 4498, 4494, 4491, 4490, 4489, 4487, 4484,
	4483, 4482, 4481, 4480, 4479, 4478, 4477, 4474, 4473, 4472,
	4471, 4469, 4468, 4467, 4466, 269, 225, 144, 4465, 4464,
	282, 281, 4462, 4460, 4459, 4457, 4454, 4453, 4452, 4451,
	4450, 4447, 4446, 4445, 4444, 4443, 153, 21, 32, 4441,
	4438, 103, 98, 96, 85, 104, 115, 4437, 124, 4434,
	143, 121, 4432, 122, 110, 20, 27, 264, 246, 11036,
	240, 4430, 4429, 4425, 256, 209, 4424, 248, 4422, 4420,
	4410, 4402, 4399, 4397, 79, 55, 221, 4395, 4393, 154,
	189, 197, 194, 191, 190, 82, 60, 105, 88, 62,
	46, 14, 94, 228, 18, 1, 275, 4392, 271, 6,
	160, 9, 31, 4391, 4390, 4389, 4388, 4357, 112, 4387,
	279, 254, 186, 4383, 4382, 4381, 748, 4377, 4373, 52,
	276, 119, 141, 118, 34, 135, 4371, 168, 176, 30,
	4370, 252, 57, 4369, 4368, 108, 100, 9602, 4159, 4361,
	4359, 145, 93, 184, 182, 166, 164, 210, 286, 183,
	175, 59, 220, 219, 195, 694, 4352, 265, 4351, 3744,
	92, 199, 165, 6715, 4350, 4349, 4348, 89, 4347, 107,
	4345, 4343, 72, 10, 3, 2, 158, 39, 37, 12,
	4337, 24, 129, 50, 22, 4332, 23, 4330, 4327, 4324,
	4323, 49, 4322, 76, 180, 4321, 4318, 296, 4315, 87,
	61, 43, 4314, 44, 231, 4301, 236, 146, 4294, 4292,
	255, 215, 217, 4290, 81, 257, 4288, 4285, 4284, 4283,
	4282, 4280, 149, 7, 136, 4278, 4277, 155, 4273, 56,
	251, 211, 4265, 63, 4264, 4263, 193, 54, 151, 295,
	192, 247, 132, 234, 201, 233, 4261, 4260, 4259, 250,
	4258, 4257, 229, 177, 4256, 4255, 259, 300, 101, 48,
	90, 245, 83, 208, 170, 4254, 213, 4253, 4252, 297,
	196, 227, 42, 8, 13, 102, 111, 4251, 5, 238,
	174, 243, 130, 4250, 8854, 2614, 3399, 4248, 4247, 167,
	133, 86, 159, 171, 278, 97, 4246, 4242, 2813, 4239,
	4238, 4237, 4236, 202, 4233, 4232, 4224, 172, 198, 206,
	4223, 123, 77, 51, 19, 134, 261, 280, 128, 232,
	181, 267, 4222, 4221, 4219, 205, 4217, 73, 117, 179,
	214, 260, 65, 4215, 200, 4214, 161, 389, 75, 163,
	4213, 266, 4212, 4205, 4196, 4195, 4193, 4192, 4190, 187,
	241, 4187, 4184, 4181, 53, 207, 4175, 277, 273, 239,
	131, 91, 4172, 120, 2940, 4171, 142, 222, 67, 4,
	4169, 74, 4167, 2510, 70, 4166, 0, 13759, 10681, 13065,
	14113, 4165, 4220, 4163, 4160, 4157, 226, 84, 4156, 4155,
	4154, 113, 4153, 95, 4152, 4149, 80, 4147, 33, 16,
	17, 29, 26, 263, 169, 4146, 4145, 156, 147, 139,
	4144, 293, 235, 4143, 4142, 4141, 4140, 109, 4139, 45,
	4136, 40, 4135, 4134, 47, 15, 28, 4132, 4130, 162,
	4127, 126, 216, 4126, 185, 4125, 69, 148, 4123, 4122,
	4121, 66, 64, 274, 223, 224, 99, 4119, 290, 4118,
	212, 4117, 4116, 25, 4115, 4114, 253, 116, 114, 41,
	258, 152, 36, 127, 230, 4112, 4110, 188, 4109, 4108,
	4107, 288, 4106, 3715, 294, 4105, 35, 4104, 4103, 4102,
	11, 4101, 4100, 218, 3393, 4098, 4097, 38, 4096, 204,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 13, 13, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 54, 54, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 40, 42, 41, 35,
	35, 36, 36, 37, 38, 38, 12, 12, 12, 8,
	8, 8, 8, 8, 8, 8, 8, 21, 21, 43,
	43, 22, 22, 45, 45, 23, 23, 46, 46, 623,
	623, 623, 624, 624, 625, 625, 625, 26, 48, 19,
	20, 20, 20, 20, 626, 626, 626, 626, 39, 27,
	49, 32, 32, 32, 32, 32, 219, 219, 219, 219,
	25, 25, 44, 44, 262, 262, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 619, 619, 264, 264,
	263, 251, 251, 252, 252, 253, 253, 627, 627, 265,
	265, 265, 266, 266, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 518, 518, 518, 549, 549, 549,
	549, 551, 551, 646, 646, 647, 647, 647, 647, 647,
	137, 137, 415, 415, 415, 58, 58, 58, 58, 58,
	614, 614, 221, 221, 221, 223, 223, 222, 222, 222,
	222, 222, 82, 82, 633, 633, 632, 631, 631, 631,
	634, 634, 634, 220, 220, 220, 133, 133, 133, 133,
	133, 133, 133, 133, 134, 134, 135, 135, 224, 224,
	224, 226, 226, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 230, 18, 18, 18,
	116, 116, 116, 116, 116, 116, 116, 111, 111, 553,
	553, 554, 554, 215, 215, 216, 216, 216, 216, 217,
	217, 218, 218, 218, 73, 73, 227, 227, 229, 229,
	228, 228, 228, 228, 228, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
	63, 64, 64, 71, 71, 71, 71, 71, 71, 71,
	71, 197, 197, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 79, 79, 79, 79,
	79, 648, 648, 648, 648, 648, 648, 648, 648, 648,
	648, 648, 648, 648, 648, 648, 648, 648, 648, 648,
	649, 649, 650, 650, 651, 651, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 88, 88, 375, 375, 338, 338, 89, 89,
	89, 90, 90, 91, 91, 75, 75, 612, 612, 391,
	391, 509, 509, 76, 620, 620, 620, 622, 622, 621,
	621, 93, 93, 414, 414, 94, 94, 94, 94, 94,
	94, 95, 95, 95, 95, 95, 95, 95, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 103, 103, 103, 103, 103, 104, 104, 104,
	101, 101, 101, 98, 98, 98, 97, 97, 97, 102,
	102, 102, 611, 327, 327, 100, 100, 100, 99, 99,
	99, 392, 392, 105, 105, 105, 105, 339, 106, 106,
	106, 106, 106, 106, 106, 106, 109, 109, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 511, 511, 4, 4, 257, 257, 256, 256, 256,
	256, 5, 5, 5, 260, 260, 259, 258, 107, 107,
	107, 476, 476, 112, 112, 112, 430, 430, 113, 113,
	113, 113, 113, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 616, 616, 384, 384, 290, 290,
	290, 290, 125, 125, 125, 125, 126, 126, 126, 126,
	127, 127, 202, 202, 143, 143, 143, 143, 142, 142,
	142, 142, 142, 142, 142, 142, 65, 65, 65, 66,
	66, 67, 67, 68, 68, 69, 69, 70, 70, 70,
	70, 70, 146, 146, 31, 31, 31, 31, 31, 643,
	643, 148, 145, 145, 145, 145, 145, 144, 144, 147,
	147, 147, 147, 149, 151, 151, 151, 151, 151, 150,
	150, 150, 150, 150, 152, 152, 543, 543, 400, 400,
	541, 541, 563, 563, 542, 542, 345, 345, 345, 345,
	345, 346, 346, 346, 552, 552, 552, 552, 552, 552,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 203, 203, 203, 204,
	204, 208, 208, 209, 209, 209, 210, 210, 210, 207,
	207, 207, 205, 205, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 213, 213, 211, 211, 212, 212,
	654, 654, 653, 653, 214, 214, 214, 214, 214, 178,
	178, 178, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 401, 401, 181, 181, 181, 165, 165,
	154, 154, 154, 154, 154, 154, 154, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 155,
	155, 167, 167, 167, 167, 167, 160, 160, 161, 161,
	161, 162, 162, 162, 162, 189, 189, 164, 164, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 156, 156,
	156, 156, 169, 169, 169, 169, 437, 437, 437, 195,
	195, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 192, 192, 192,
	192, 192, 192, 635, 635, 636, 636, 636, 185, 185,
	185, 185, 185, 185, 490, 490, 179, 179, 179, 179,
	184, 184, 184, 184, 187, 187, 187, 187, 420, 420,
	176, 176, 176, 177, 177, 177, 182, 182, 194, 183,
	376, 376, 180, 180, 186, 186, 186, 186, 188, 188,
	188, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	158, 158, 158, 158, 190, 190, 175, 175, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 655,
	655, 171, 171, 171, 170, 170, 170, 170, 173, 173,
	174, 174, 174, 174, 174, 174, 172, 163, 193, 613,
	613, 609, 609, 609, 609, 609, 609, 609, 609, 610,
	610, 610, 610, 615, 615, 117, 117, 117, 117, 117,
	117, 117, 128, 128, 128, 128, 128, 128, 128, 131,
	131, 118, 118, 118, 118, 118, 118, 118, 121, 121,
	119, 119, 119, 119, 120, 120, 83, 83, 83, 83,
	83, 17, 17, 17, 84, 84, 281, 281, 235, 235,
	235, 363, 363, 236, 236, 353, 353, 353, 353, 231,
	231, 232, 232, 233, 234, 234, 85, 85, 656, 656,
	656, 628, 628, 628, 629, 629, 629, 629, 629, 629,
	347, 347, 348, 348, 456, 456, 456, 456, 456, 351,
	351, 351, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 361, 362, 362, 354, 354, 360, 359, 359, 358,
	358, 357, 357, 355, 356, 356, 356, 365, 365, 364,
	367, 367, 366, 455, 572, 572, 574, 574, 574, 574,
	574, 574, 574, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	438, 438, 657, 657, 658, 659, 570, 570, 570, 571,
	566, 566, 567, 567, 567, 567, 567, 349, 349, 350,
	350, 350, 350, 568, 569, 382, 382, 494, 573, 573,
	575, 575, 577, 660, 660, 660, 660, 660, 660, 661,
	661, 661, 454, 454, 453, 453, 452, 452, 373, 373,
	578, 578, 578, 578, 579, 579, 579, 579, 579, 582,
	581, 580, 580, 580, 580, 580, 87, 87, 87, 417,
	417, 416, 416, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 199, 199,
	293, 293, 293, 81, 81, 81, 14, 14, 14, 14,
	14, 14, 14, 308, 308, 15, 15, 15, 630, 630,
	630, 86, 86, 86, 86, 86, 86, 371, 371, 371,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 618, 618, 617, 617,
	294, 294, 663, 663, 92, 92, 92, 92, 92, 92,
	92, 92, 512, 512, 513, 513, 80, 80, 80, 80,
	80, 439, 439, 436, 436, 435, 435, 381, 381, 492,
	492, 492, 493, 298, 298, 299, 299, 254, 254, 254,
	34, 33, 24, 24, 28, 28, 29, 29, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 30, 30, 51,
	51, 51, 51, 52, 52, 52, 52, 55, 55, 56,
	56, 50, 50, 50, 50, 53, 53, 47, 47, 57,
	57, 57, 57, 57, 637, 639, 639, 638, 638, 642,
	642, 642, 642, 642, 642, 640, 640, 641, 641, 644,
	644, 645, 645, 124, 124, 129, 129, 129, 129, 129,
	130, 130, 130, 130, 132, 132, 132, 132, 141, 141,
	198, 198, 198, 198, 198, 198, 198, 59, 59, 59,
	59, 72, 72, 72, 72, 139, 665, 665, 665, 140,
	140, 140, 664, 664, 291, 291, 449, 449, 450, 450,
	666, 666, 451, 451, 451, 451, 451, 284, 283, 285,
	285, 286, 286, 78, 78, 78, 274, 274, 273, 275,
	275, 276, 276, 271, 271, 555, 555, 278, 278, 278,
	279, 279, 267, 267, 268, 268, 269, 269, 270, 270,
	282, 282, 550, 550, 667, 667, 115, 115, 115, 201,
	201, 337, 337, 337, 446, 446, 446, 374, 374, 305,
	305, 448, 448, 448, 448, 448, 413, 413, 413, 200,
	200, 389, 389, 403, 403, 404, 404, 506, 506, 405,
	122, 122, 123, 123, 138, 138, 239, 239, 237, 237,
	237, 237, 237, 237, 237, 237, 244, 244, 245, 245,
	246, 246, 247, 248, 248, 248, 248, 393, 393, 249,
	249, 249, 238, 238, 238, 240, 240, 240, 240, 240,
	240, 240, 243, 243, 243, 243, 250, 250, 250, 242,
	242, 589, 589, 589, 591, 591, 593, 593, 592, 592,
	588, 588, 590, 590, 662, 662, 419, 419, 419, 370,
	372, 368, 368, 369, 369, 379, 379, 377, 378, 378,
	380, 380, 491, 491, 491, 255, 255, 255, 410, 410,
	410, 410, 411, 411, 442, 442, 440, 440, 440, 440,
	441, 441, 443, 443, 443, 444, 444, 445, 445, 407,
	407, 408, 408, 409, 409, 409, 409, 472, 472, 241,
	241, 241, 386, 386, 386, 387, 387, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 463, 463,
	461, 461, 461, 461, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 496, 497, 497, 388, 388, 498, 447,
	447, 607, 607, 607, 608, 608, 489, 489, 499, 499,
	499, 499, 499, 499, 487, 487, 488, 488, 507, 508,
	508, 423, 423, 423, 423, 421, 421, 424, 424, 424,
	424, 424, 422, 422, 500, 500, 500, 500, 412, 412,
	501, 501, 501, 501, 502, 503, 503, 504, 504, 457,
	458, 458, 514, 514, 514, 514, 516, 385, 385, 385,
	385, 385, 565, 564, 564, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 531, 531, 531, 531,
	531, 531, 531, 517, 517, 517, 517, 517, 521, 521,
	521, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 522, 522, 527, 527, 528, 528, 528, 523,
	524, 529, 529, 529, 529, 668, 668, 533, 533, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 519, 519,
	519, 526, 526, 526, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 431, 431, 433,
	433, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 466, 466, 466, 466, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 583, 583, 583, 583, 583, 583, 583, 583, 468,
	468, 586, 586, 587, 587, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 594, 594, 595, 595,
	597, 597, 598, 598, 599, 600, 600, 600, 601, 602,
	602, 596, 596, 603, 603, 603, 603, 604, 604, 605,
	605, 605, 605, 605, 606, 606, 606, 606, 606, 478,
	478, 479, 479, 485, 485, 485, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 344, 344, 343, 295, 295, 295, 295, 295, 295,
	398, 398, 396, 396, 396, 399, 399, 397, 397, 395,
	395, 394, 394, 475, 475, 473, 473, 477, 477, 425,
	425, 532, 532, 532, 532, 532, 532, 532, 532, 426,
	426, 426, 434, 427, 427, 428, 428, 428, 428, 428,
	469, 470, 429, 429, 429, 471, 471, 480, 484, 484,
	483, 482, 482, 481, 481, 459, 459, 460, 460, 406,
	406, 669, 669, 402, 402, 505, 505, 505, 505, 341,
	341, 390, 390, 340, 340, 332, 332, 333, 333, 333,
	333, 383, 383, 486, 486, 534, 534, 535, 535, 536,
	536, 537, 537, 538, 539, 540, 474, 474, 316, 315,
	302, 303, 314, 313, 312, 301, 304, 309, 310, 311,
	306, 307, 323, 322, 321, 272, 277, 328, 329, 329,
	331, 331, 330, 330, 318, 319, 320, 510, 300, 334,
	334, 335, 335, 335, 336, 336, 336, 336, 296, 296,
	297, 297, 324, 324, 325, 326, 326, 317, 317, 317,
	287, 287, 287, 288, 288, 289, 289, 548, 548, 545,
	545, 545, 546, 546, 546, 547, 547, 547, 547, 544,
	544, 544, 544, 544, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 557, 557, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 559, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 562, 562,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	7, 9, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 6, 3, 8, 5,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 2, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 9, 9, 7, 7, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 1, 2, 2, 2, 9,
	2, 1, 0, 1, 1, 0, 1, 2, 0, 2,
	2, 0, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 3, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 7, 7, 6, 7, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 12, 15, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 1,
	1, 1, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 3, 6, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 10, 11, 9, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 6, 1, 3, 1, 2, 0,
	1, 2, 3, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 3, 0, 4, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 8, 11, 5, 4, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 14, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 7, 10, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 627, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-198, -203, -204, -205, -214, -3, -58, -60, -74, -93,
	-95, -106, -116, -115, -117, -125, -133, -128, -111, -65,
	-138, -142, -153, -199, -200, -201, 33, 32, 104, 83,
	160, 133, 142, 211, 401, 449, 461, 417, 147, 440,
	422, -147, -148, 480, -59, -72, -140, -139, 76, 134,
	176, 432, -6, -14, -31, -18, 30, 48, -61, -62,
	-63, -64, 65, -81, -77, -88, -82, -75, -76, -79,
	-648, 106, -590, -96, -99, -132, -652, 168, 230, -118,
	-119, -120, 383, -126, -127, 442, -129, -130, -131, 445,
	169, -67, -66, 162, -237, -239, -145, -144, -146, -202,
	-154, -155, -156, -157, -158, -159, -160, -162, -189, -163,
	-164, -165, -166, -167, -168, -172, -192, -169, -170, -171,
	-174, -173, -175, -180, -176, -177, -178, -179, -181, -182,
	-184, -185, -186, -187, -188, -190, -191, 485, -183, -193,
	-161, -194, 548, 52, 501, 85, 152, 453, 21, -7,
	-8, -9, -10, -11, -12, -13, -17, -16, -57, -4,
	-5, -78, -80, -83, -84, -85, -92, -86, -87, -589,
	-97, -98, -101, -103, -104, -100, -102, 441, 600, -240,
	-238, 624, 564, -21, -26, -22, -23, -25, -27, -24,
	-28, -29, -30, -43, -48, -45, -46, -44, -47, -49,
	-50, -51, -52, -53, -54, -55, -56, -33, -39, -40,
	-34, -35, -36, -37, -38, -41, -42, -19, -20, -32,
	587, 596, -243, -241, -242, -250, 472, 572, 522, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, -339, 2, -318, -324, -325, -326,
	-317, -287, -559, -562, 4, -556, -560, 175, 240, 344,
	21, 22, 24, 23, 25, 26, 27, 28, 30, 31,
	41, 43, 44, 46, 47, 48, 49, 50, 51, 52,
	56, 58, 62, 63, 64, 65, 66, 67, 71, 76,
	77, 82, 83, 84, 85, 86, 87, 88, 89, 95,
	92, 93, 94, 96, 98, 100, 101, 102, 103, 104,
	105, 107, 108, 109, 111, 112, 113, 121, 122, 123,
	124, 125, 127, 133, 128, 134, 137, 132, 136, 138,
	140, 141, 142, 145, 146, 147, 149, 150, 151, 153,
	154, 155, 157, 158, 160, 161, 162, 165, 163, 166,
	164, 167, 168, 169, 170, 173, 181, 182, 183, 188,
	190, 191, 192, 194, 197, 198, 199, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 212, 216, 218, 219,
	220, 221, 222, 223, 229, 230, 232, 233, 234, 235,
	236, 241, 242, 243, 247, 253, 254, 258, 259, 260,
	262, 266, 267, 268, 269, 270, 271, 273, 275, 274,
	277, 280, 281, 284, 285, 286, 287, 288, 289, 293,
	294, 290, 295, 296, 298, 299, 302, 300, 303, 304,
	301, 305, 307, 308, 309, 310, 311, 312, 313, 314,
	315, 316, 317, 318, 306, 321, 319, 323, 324, 325,
	326, 327, 342, 337, 338, 339, 331, 332, 328, 333,
	329, 330, 334, 335, 341, 336, 346, 347, 348, 349,
	352, 227, 246, 354, 355, 358, 360, 377, 363, 364,
	365, 368, 369, 372, 375, 376, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 388, 389, 391, 392, 393,
	395, 396, 397, 399, 401, 402, 404, 405, 406, 408,
	409, 410, 411, 412, 413, 414, 416, 417, 419, 418,
	420, 422, 424, 425, 426, 432, 433, 440, 434, 436,
	437, 438, 439, 441, 442, 443, 444, 445, 447, 448,
	449, 451, 452, 453, 454, 455, 457, 459, 460, 464,
	465, 466, 482, 483, 504, 461, 462, 463, 467, 468,
	469, 470, 471, 475, 473, 474, 476, 477, 478, 480,
	481, 484, 485, 487, 488, 489, 490, 491, 492, 493,
	496, 498, 499, 500, 501, 502, 521, 503, 505, 509,
	510, 511, 512, 506, 507, 520, 514, 515, 517, 518,
	523, 524, 525, 526, 527, 528, 529, 530, 532, 540,
	541, 542, 543, 545, 548, 549, 550, 551, 538, 553,
	554, 557, 558, 562, 559, 563, 560, 561, 564, 566,
	569, 570, 571, 577, 576, 578, 579, 580, 582, 583,
	588, 589, 591, 592, 593, 37, 53, 54, 57, 59,
	61, 72, 73, 74, 78, 129, 130, 159, 171, 172,
	184, 200, 201, 213, 215, 224, 225, 226, 248, 249,
	251, 256, 278, 351, 353, 370, 374, 390, 394, 398,
	400, 415, 456, 494, 508, 513, 533, 534, 535, 536,
	544, 546, 572, 573, 574, 581, 590, -339, 2, -318,
	361, -311, 2, -287, -287, 401, 29, 2, 29, 389,
	474, 525, 527, 2, -616, -384, 2, 29, -290, -287,
	106, 211, 472, -311, 2, -616, 211, -384, 26, 2,
	-287, 2, 375, 23, 28, 69, 80, 102, 145, 170,
	193, 197, -651, 377, 409, 459, 476, 520, 530, 545,
	2, 576, 299, 473, 522, 240, 124, 550, 467, -630,
	464, 465, 375, 407, 451, 214, 565, -291, 2, 461,
	-287, 299, 2, 627, 98, 77, 456, 477, -150, 2,
	289, 541, -151, -152, -149, 533, -543, 467, 451, 321,
	-287, 627, 627, 627, 29, -300, 2, -287, -300, 2,
	-206, 2, -300, -653, -213, -212, -211, 22, 433, 183,
	271, 195, 231, 326, 404, 194, 50, 522, 240, 467,
	124, 518, 627, 627, 2, 522, 380, 576, 473, 124,
	412, 240, 550, 197, 145, 28, 71, 48, 528, 467,
	-630, 601, 602, 299, 131, -614, 2, -609, 4, -560,
	-556, -333, -332, 522, 528, 124, -326, -317, 616, -325,
	627, 627, 627, 627, 2, 259, 260, 411, 410, 477,
	478, 29, 627, 627, 627, 627, 464, 2, 170, 23,
	28, 69, 97, 102, 131, 193, 197, 366, -649, 377,
	409, 476, 520, 524, 530, 545, -629, 503, 71, 439,
	467, -628, -630, 299, 550, 145, -435, 124, 289, 209,
	558, 527, 525, 556, 137, 247, 561, 560, 627, 627,
	-109, 2, 624, 33, 32, -108, -112, 147, 480, -230,
	522, 252, 2, -287, 627, 627, 627, 2, 259, 260,
	464, 465, 29, 627, 627, 195, -609, 518, 2, 627,
	627, 627, 2, 29, 259, 260, 464, 465, 252, 2,
	71, 469, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 2,
	-196, 477, 503, 220, 49, 48, 77, 29, 408, 82,
	381, 125, 131, 154, 551, 212, 240, 241, 267, 97,
	98, -437, 46, 260, 71, 259, 465, -635, 464, -490,
	523, 468, 474, 517, 89, 271, 461, 541, 543, 106,
	566, 452, 593, 412, 413, 515, 426, 290, 163, 196,
	4, 124, 321, 451, 479, 275, 274, 533, 289, 460,
	384, 87, 627, -662, 2, 522, -664, 2, 541, 541,
	2, -664, 2, -664, 2, -664, 2, -665, 541, 590,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	-238, -240, -239, 627, 627, 627, 627, 627, 627, 627,
	-196, 477, 2, 77, 29, 29, -377, -379, 555, 250,
	156, 367, -237, -239, 2, -589, -541, 2, -464, -563,
	-466, 614, 615, 607, 519, 70, -343, 343, 594, -478,
	131, 556, 361, -562, -467, -480, 159, 377, 456, -399,
	8, 9, 5, 6, 7, -296, -468, -474, 547, 174,
	350, -336, 628, 10, 624, -586, -239, -479, 38, 215,
	68, -545, -335, -297, -517, 251, -334, -317, -583, -584,
	4, -556, -557, -546, -520, -528, -524, -525, -531, -287,
	-559, 80, 115, 116, 114, 119, 118, 292, 291, 120,
	117, 479, 565, 69, 37, 224, 225, 256, 351, 226,
	78, -585, 146, -558, 248, 249, 494, 54, 415, 184,
	130, 129, 353, 59, 57, 573, -529, 126, 533, 534,
	535, 536, 200, 201, 61, 171, 172, 374, 398, 513,
	544, 546, 213, 278, 45, 110, 196, 245, 228, 255,
	257, 261, 279, 282, 322, 340, 345, 371, 373, 450,
	486, -668, 574, 508, 72, 73, -591, 418, -592, -311,
	-591, 627, 627, 629, 627, -368, -370, -372, 2, 29,
	143, 624, 2, -495, 2, -496, -500, -239, 272, -499,
	624, -497, 622, -318, 362, -587, 457, -583, -584, -296,
	-317, -335, 4, -556, -558, 626, -373, 624, 124, 467,
	522, 81, 240, 97, 170, 197, -430, 624, -287, 29,
	361, 537, 629, -369, 406, -476, 624, 361, 364, 195,
	364, 63, 303, 2, 2, 2, 2, 2, 224, -287,
	522, 123, 2, 270, 2, 2, 2, 2, 2, 2,
	2, -392, 224, 2, -318, 576, -392, 224, 2, -392,
	224, 2, -436, 2, 91, -301, 224, 2, -287, -327,
	224, 2, -322, -324, -331, 224, 2, -329, -287, -551,
	224, 2, -549, 4, -556, 120, 479, -464, 2, -138,
	2, 63, -287, 576, 2, 482, 2, 624, -150, 2,
	74, 541, 45, 477, -151, 2, -450, 2, -451, -283,
	-284, -285, -507, -286, 258, 405, 414, 597, 135, 343,
	593, -643, 195, 606, 537, -541, -541, -541, -400, 626,
	-208, 56, -300, -654, -653, -654, -539, 29, -534, 8,
	-535, 614, 615, -539, -539, -654, -654, 2, 2, 2,
	2, 2, 2, -500, 224, -318, 2, -315, -544, 4,
	-556, -560, -557, -561, -559, 29, 32, 33, 34, 36,
	38, 39, 40, 42, 60, 68, 69, 75, 79, 81,
	91, 97, 106, 114, 115, 117, 116, 118, 119, 120,
	131, 135, 139, 143, 144, 148, 152, 156, 174, 176,
	189, 193, 195, 211, 214, 217, 231, 244, 250, 252,
	272, 276, 283, 291, 292, 343, 350, 356, 361, 362,
	366, 367, 387, 403, 421, 446, 472, 479, 497, 516,
	522, 531, 537, 539, 547, 555, 556, 565, 567, 575,
	584, 585, 586, 587, -562, 80, 2, -500, 224, 2,
	-321, 224, -500, -324, 2, -301, 2, -464, -623, 529,
	166, 434, 2, -340, 224, -318, -320, -324, -322, 2,
	2, 2, 2, -464, 2, -553, 2, -548, 10, -547,
	5, 4, -556, -560, -557, -540, 29, 2, 8, -329,
	2, -549, 224, 2, 29, 29, 576, 406, 252, 537,
	629, -390, -332, -333, -540, -383, -287, 626, -464, 2,
	-138, -121, 2, 189, -464, 224, 2, -138, 224, 2,
	-464, 224, 2, -138, 224, 2, -287, 2, -631, 2,
	-553, 224, 224, -287, 2, 303, 2, 2, 545, 2,
	102, 522, 123, 2, 438, -650, 459, 549, 2, 2,
	2, 2, 2, 2, 2, 522, -306, 2, -287, 189,
	506, -329, 224, -330, 2, 473, -663, 418, -549, 224,
	2, 576, -322, 224, 2, -322, 240, 254, -301, 224,
	2, 527, 525, 527, 525, 195, 2, 252, 2, 252,
	2, -501, 2, -502, -496, -503, 622, 362, -511, 2,
	-510, -547, 572, -109, 624, -109, 624, 477, 624, -553,
	-318, -318, -464, 2, -138, -121, 2, -464, 2, -138,
	2, -287, 2, -135, -553, -134, 624, 195, 566, -287,
	2, -464, 2, -138, -121, 2, -464, 2, -138, 2,
	-230, 189, 2, 124, 522, -196, 2, 189, 567, 2,
	8, 2, 231, -553, 468, 413, 181, 2, 482, 2,
	483, 77, -437, 593, 77, 195, 2, 195, 2, -420,
	2, 587, 406, 195, 2, 2, -613, 2, 361, 195,
	2, 195, 2, 195, 2, 195, 2, 195, 2, -195,
	478, 542, 521, 410, 260, 2, -138, 584, -121, 260,
	259, -464, 584, 2, -636, 189, 465, -464, 2, 540,
	269, 164, 195, -420, 2, 195, 2, 195, 2, 5,
	2, 43, 411, 504, 2, 258, 405, 504, 2, 502,
	2, -318, 522, 576, 473, 124, 29, 2, 464, 2,
	2, 92, 93, 195, 2, 195, 2, 210, 195, 2,
	195, 522, -401, 626, 593, 2, -412, -500, -449, -450,
	-449, 537, -377, -379, -196, 482, 2, -244, -410, -246,
	189, -440, -441, -247, 283, 176, 356, -248, -419, 29,
	143, -419, -419, 63, 625, 625, 11, 12, 79, 43,
	614, 615, 616, 617, 187, 618, 619, 612, 613, 611,
	604, 605, 609, 264, 265, 99, 608, 606, 90, 297,
	458, 177, 178, 179, 180, 435, 238, 35, 239, 14,
	15, 16, -343, 34, 366, 282, 594, 228, 486, 607,
	17, 18, 19, 255, 257, 345, 53, 231, -295, 377,
	-342, 519, 70, -464, -464, -464, -464, -464, -464, -464,
	-464, 373, 624, -406, -459, 622, -239, 624, 624, 624,
	624, -540, -239, -464, -478, 625, -397, 624, -239, -478,
	-473, 624, 456, 622, 624, -481, -464, 5, 5, 5,
	624, 626, -594, 588, 189, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 400, -522, 624, -521, 624, -521, -521, 577, -519,
	624, 596, 589, 624, -519, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 577, 629,
	-591, -373, 624, -402, -505, -464, 616, -402, -402, 361,
	-394, -464, 110, -423, 261, 322, 196, 279, 450, 245,
	-461, 628, -461, -489, 596, -239, -497, -317, -239, -499,
	624, -495, -489, -110, -540, -93, -106, -115, -138, -153,
	-200, -201, 616, -318, 624, 195, 624, 626, -544, 195,
	-383, -301, -328, -287, -318, -334, -335, -340, -312, -287,
	2, 2, 142, -394, -609, 550, 467, 29, 473, -551,
	-290, 39, -475, -514, -515, -565, 628, -564, -517, -527,
	-523, -526, 390, 394, -546, 57, 573, -529, 251, 4,
	-556, -558, 248, 249, 494, 54, 415, 184, 130, 129,
	353, 59, 533, 534, 535, 536, 200, 201, 61, 574,
	508, 72, 73, -609, 550, 467, 29, 473, 189, -551,
	189, -551, 2, 2, 159, 2, 2, 2, -287, -265,
	629, 67, 443, 159, -392, 224, -265, 159, -265, 159,
	-341, 224, -340, -265, 159, -265, 629, 159, -265, 629,
	159, 626, 629, 159, -551, 2, -436, -543, -394, 39,
	-450, 2, 131, 4, 5, -666, 629, 281, -346, 296,
	342, 219, 362, 591, 354, 135, -552, 5, 4, -474,
	-486, 131, 289, 251, -534, -536, 9, -537, 614, 615,
	-542, -541, 113, 626, -544, -209, 246, 41, -300, -300,
	-654, -654, 8, 8, -654, -654, -300, -300, -262, 436,
	480, 376, -261, 25, 30, 147, 242, 327, 570, 165,
	-358, 243, 441, -355, 380, 159, 498, 559, -623, -626,
	463, 529, 166, 434, 94, 354, 480, 376, 436, 159,
	-416, -418, 39, 122, 327, 375, 64, 234, 301, 302,
	501, 581, 159, 480, 376, 436, 376, -15, -276, 25,
	147, -278, -273, 480, -626, 103, 436, 600, 441, 386,
	514, 403, -626, -623, 277, -625, 583, 341, -264, 498,
	559, -623, -626, 463, 436, -263, -360, -355, 380, 159,
	628, 25, 147, 436, 480, 376, -646, -647, 30, -257,
	-256, 25, 147, 480, 562, -260, 231, -259, 25, 480,
	441, 480, 441, 436, 376, -617, -308, -588, 231, 587,
	159, -308, -308, -500, 224, -640, 189, 2, -633, -134,
	273, 5, 10, -553, -134, -390, 629, 629, -544, 616,
	465, 464, 159, 159, 159, 159, 260, 189, 343, 343,
	587, 2, 2, 2, 2, 2, 197, -628, -651, 2,
	2, -318, 224, -375, 361, -612, -391, 522, -318, 189,
	343, 45, -321, 224, 2, -324, 576, -617, 343, -323,
	224, -318, 39, 624, 343, 2, -436, 2, 240, -588,
	343, -501, -337, -318, -496, -337, 480, -311, 39, -461,
	-318, 625, 629, -511, -511, -553, -218, 587, 195, 624,
	-230, 587, 587, 260, -508, 629, -507, 231, -554, -553,
	-135, -553, 439, 195, 260, -553, -612, -301, 2, -318,
	2, 522, 262, -553, -218, 231, -553, -553, -553, -543,
	29, 189, 483, 2, -195, 478, 542, 93, 483, 2,
	-318, 522, 124, 240, 83, -640, 189, 2, -287, -615,
	189, -610, 451, 467, 550, -609, -318, 124, -318, 124,
	-318, 124, -318, -318, 2, 2, 2, 2, 2, 88,
	2, -138, -464, 2, 88, 2, 48, 499, -636, 189,
	2, 540, 2, 540, 2, -287, -287, -287, 356, 503,
	281, 587, -318, -318, -318, -319, -324, 468, 523, 551,
	465, -464, 2, -655, 2, 195, 189, 2, 522, 240,
	522, 240, 124, 195, 77, 124, 29, 522, 462, 626,
	4, -265, 629, -291, -244, -410, -543, -411, -410, -245,
	-244, -247, 189, 414, 560, 327, 484, 266, -441, -440,
	29, -464, -445, 183, 326, -464, -443, -466, 614, 615,
	-535, -537, -393, 354, -238, -238, -238, -380, -491, -464,
	403, 240, -516, -514, -514, -316, -544, 533, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, 282, 228, 486, 53, 231, -464,
	537, -464, -464, -464, -464, 319, 343, 350, 547, 174,
	557, 143, 354, -669, 516, 42, -471, -239, -398, 624,
	-485, 36, 497, 29, -478, 624, 2, -459, -464, -460,
	-344, -342, -287, 614, 615, 616, 617, 618, 619, 604,
	605, 606, 14, 15, 16, 609, 613, 611, 612, 187,
	99, 608, 297, 458, 90, 177, 178, 179, 180, 264,
	265, 17, 18, 19, 35, 607, -395, -394, -394, 625,
	575, 29, 143, 616, 2, 625, 629, 39, 625, -464,
	-395, -477, -473, -394, -484, -483, 584, -431, -432, 592,
	306, 127, 222, 304, -433, 471, -538, 8, -544, 616,
	-595, 182, 214, 624, 625, 2, 625, 2, 625, -464,
	2, 625, -464, 2, 625, -464, 2, 625, -464, 2,
	625, 2, 625, 2, -464, -464, -464, -464, -464, -464,
	-464, -394, 8, -538, -538, 533, 533, -538, -538, -538,
	-530, 390, 391, 392, 393, 284, 285, 286, 287, 394,
	395, 396, 397, 311, 312, 313, 314, 307, 308, 309,
	310, 315, 316, 317, 318, 205, 206, 207, 208, 201,
	202, 203, 204, -530, -425, 2, -532, -394, 4, 592,
	306, 127, 222, 304, 471, 5, -425, 2, -426, 2,
	-464, -394, -427, -465, -466, 614, 615, 607, -343, -478,
	-428, 2, -464, -395, -464, 60, 276, 539, -429, -464,
	195, -394, -394, 2, -394, 2, -592, 39, -394, -386,
	629, 195, 39, 4, -386, -386, 624, 625, 629, -424,
	218, 300, 295, 254, -424, -495, -423, 261, -421, 371,
	-421, -421, -489, -302, 622, 630, -544, -489, -488, -487,
	39, -311, 368, -489, -489, 626, 625, -488, 623, -607,
	624, 627, 627, 627, 627, 627, -318, 624, -394, -544,
	626, 505, 2, 625, 255, 255, 255, 255, 255, 361,
	457, 625, 537, -611, -327, -331, 523, 2, 587, -108,
	363, 625, 629, -385, 38, 622, 626, -538, 2, 2,
	-533, 577, 624, 624, -432, 624, 195, -611, -331, 523,
	2, -616, -384, -384, 537, -287, 2, -318, -392, -265,
	159, -392, -392, -265, 629, 159, -301, -322, -327, -329,
	-331, -287, -549, -551, -265, -323, -643, 625, 541, -451,
	-345, 414, 496, 437, 475, 518, 9, 9, 629, -544,
	-210, 466, 327, -300, -300, -300, -300, 629, -644, 97,
	537, 81, 624, 467, -280, 290, 537, -455, 224, 81,
	-566, 97, -304, -567, -287, 75, 556, 403, 193, 157,
	-644, 97, 403, -644, 97, 2, 242, 97, 480, 503,
	624, 29, 63, -500, 43, 43, 29, -624, -625, 277,
	195, 593, 522, 240, 467, 537, 537, -500, -418, -514,
	122, 301, 302, 63, -539, -539, 63, -539, -539, -539,
	587, -321, -500, 467, 537, 537, 537, 424, 424, -273,
	-151, 537, 537, 29, -196, 444, 131, -667, 606, 424,
	277, -625, 537, 195, 629, 43, 43, 29, -624, 195,
	537, -340, -302, 571, 44, 571, 44, 571, 537, 44,
	467, 537, 629, 44, -256, -612, -612, -217, -216, -287,
	5, -383, -259, -553, -258, 325, 77, 77, 77, 77,
	537, 537, -15, 480, -618, -292, 109, 333, 294, 334,
	101, 330, 100, 329, 107, 331, 108, 332, 578, 346,
	579, 347, 66, 328, 305, 335, 500, 336, 580, 348,
	-293, -294, 150, 382, 569, 124, -549, -15, -15, 480,
	376, 436, 159, -641, 231, 29, -630, 231, -508, 231,
	-508, -332, -287, 626, -138, -464, -464, -138, -464, -138,
	48, 159, 159, 2, 2, -663, 270, 624, -349, 343,
	195, -383, -509, 252, 629, -391, -609, 159, -549, -417,
	-416, 343, -323, 224, 2, 159, -373, 343, 153, 624,
	412, 2, 159, -303, 224, -288, -287, -436, -267, 526,
	159, -414, 567, -446, -138, 624, 131, 39, -446, -403,
	-404, -506, -405, -304, 624, -311, -461, -109, -510, 625,
	625, 625, -217, 365, -230, -374, -305, -304, 123, 416,
	416, -224, 587, -134, -135, 625, 629, -508, 231, 506,
	-135, -553, -218, -218, -508, -508, -318, 189, -553, -218,
	-218, -218, 189, 528, 189, 2, 2, 2, 2, 189,
	-420, -318, -301, -340, -318, 29, 626, -551, -551, -331,
	-327, -420, -301, -420, -301, -420, -301, -420, -420, -138,
	-464, 503, 2, 477, 189, 189, 626, -420, 8, -376,
	446, 5, 2, 412, 124, 522, 380, 240, -318, -340,
	-318, -340, -301, 124, -301, 125, -318, 4, -500, -411,
	-245, 362, 266, 484, -443, -444, -466, 456, 457, -444,
	456, 457, 8, 9, 8, 9, -249, 488, 349, -392,
	629, -254, 40, 139, 266, -318, 593, 155, -464, -464,
	537, -669, 516, -471, 155, -464, 319, 350, 547, 174,
	557, 143, 354, 195, 624, -465, -465, 625, -396, -464,
	-464, 623, 632, 625, 626, 625, -379, 629, -377, -464,
	-394, -394, 625, 626, -394, -383, 623, 623, 629, 625,
	-482, -483, 148, -464, 537, 537, 537, 537, 624, 625,
	626, -600, 372, 624, 624, -464, 625, 625, 625, 625,
	39, 629, 629, 629, 625, 629, 629, 629, 625, 625,
	625, 629, 625, 593, 593, 625, 625, 625, 625, 629,
	625, 629, 625, 195, 625, 625, -434, 387, 625, 11,
	12, 614, 615, 616, 617, 187, 618, 619, 612, 613,
	611, 604, 605, 606, 90, 297, 458, 14, 15, 16,
	-343, 255, 231, -465, -465, -465, -465, 625, -469, -470,
	195, 189, 39, -429, -429, -429, 625, 195, -394, 625,
	625, 624, -593, 299, 343, 625, -458, -457, 585, -505,
	-387, 2, -495, -313, -544, -458, -458, -394, -464, 261,
	261, -422, 567, 361, -424, -495, -488, -540, -463, -462,
	191, 40, 139, 337, 338, 339, 227, 192, -488, -311,
	-373, -488, -488, -544, -489, -489, -487, 625, -608, -540,
	625, -388, -498, -587, -379, 626, -544, -227, -588, -197,
	5, 350, -197, -197, -197, -197, -318, -551, 537, 537,
	231, 26, 388, -514, 622, 623, 8, -544, 624, -538,
	-538, -538, -551, 195, 195, 231, 361, 195, -549, 2,
	-265, -392, -265, -265, -340, -341, -265, -265, -265, -415,
	587, -541, -450, 554, 86, 414, 533, -541, 121, 466,
	-261, 436, 480, -304, -304, -318, -234, -233, -231, -287,
	5, -328, 209, 425, -549, 343, -455, 224, -266, 343,
	224, -312, -514, 624, -438, 589, 266, 266, 567, -304,
	-312, 266, 224, -304, 224, -312, 2, -312, -619, 414,
	355, -464, -232, -231, 63, -356, 288, 412, 344, -262,
	436, 480, 376, -138, -138, -138, 624, -643, 567, 142,
	-318, -340, -318, -328, -549, -323, 480, 376, 436, 340,
	-334, -539, -539, -416, 480, 376, 436, -328, -549, -321,
	-549, -272, 224, -287, -272, 224, 467, -301, 424, 593,
	47, -667, 537, 195, -464, -464, -263, -138, -138, -138,
	624, -302, -264, 436, 5, 224, -304, 5, -304, 224,
	5, -287, -304, -328, -549, -647, 25, 147, -304, 629,
	606, 606, -260, 606, 482, 482, 482, 482, -328, -549,
	-292, 382, -553, 350, 563, -301, -617, -308, 467, 537,
	537, -500, -637, -638, 211, 449, 467, 452, -551, -134,
	-221, 587, -134, -215, 235, 616, -614, -553, -287, 576,
	-287, -347, -350, -348, -304, -456, -455, -570, -571, -566,
	282, 240, 556, 254, 175, 97, -235, -236, 589, 587,
	159, -338, -318, 622, -218, -553, -318, -509, -329, -330,
	159, -373, 343, -549, 39, 159, 624, 2, 2, -322,
	361, 343, -303, 224, -268, 149, -667, -301, -458, -387,
	-413, -448, 446, 361, -374, 572, -311, -413, -389, 629,
	195, 606, 626, -374, -504, 616, -109, -109, -218, 624,
	624, -553, 625, 629, 626, 624, 606, 606, -226, 365,
	-225, 151, 268, 253, 490, 491, 492, 493, 141, 489,
	128, 324, 236, 528, -508, -553, -224, -135, 195, -508,
	231, 195, -68, 587, 522, -218, 528, -540, 528, 528,
	628, 452, -287, -420, -420, -420, 477, 477, -287, 189,
	-383, -314, -544, -301, -318, -315, -340, 189, 189, -301,
	560, -444, 362, 293, -491, -255, 595, -318, 628, -464,
	-464, 155, 155, -464, -465, -465, -464, 155, 195, 624,
	-464, -475, 34, 34, 625, 629, -460, -464, -342, 625,
	575, -379, -379, 625, 616, -544, 628, 625, -473, 152,
	-464, 531, 306, 222, 304, -433, 304, -433, -433, -538,
	5, -544, 616, -601, -307, 624, -287, 585, -378, 367,
	625, -516, -514, -464, -464, -464, -464, -464, -538, -519,
	-519, -534, -534, -464, -469, -464, -516, -514, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, 143, 343,
	354, -465, -470, -469, -464, -464, -514, 625, 625, 625,
	-394, -108, 624, 299, -407, 214, -464, -508, 629, -407,
	-407, 625, -495, -495, 624, -464, 261, 623, 629, 631,
	606, 606, -373, 626, -487, -488, 623, 625, 629, 625,
	629, -447, 39, 625, -544, -458, -229, -228, 140, 56,
	111, 138, 350, 255, -639, 587, -551, -551, 467, 364,
	5, 8, 622, 623, 626, -538, 625, 625, 625, -551,
	-551, 467, -609, 550, 467, 29, -551, -265, -265, 123,
	327, -464, -207, 587, 589, 537, 537, 625, 629, 606,
	63, 231, 159, 343, 569, 343, -567, 157, -572, -464,
	624, 240, 624, 624, 2, -251, -252, -253, 147, 480,
	25, -645, 2, 567, 159, -265, 159, -265, 591, 625,
	629, -356, 624, 624, 537, 467, -280, 537, 587, -394,
	-464, -219, 131, -543, -626, 628, -626, 628, 467, 537,
	537, 467, 537, 537, 343, 159, 587, 173, 173, 593,
	-272, -464, -464, 189, 537, 587, -394, 537, -518, 51,
	27, 343, -322, -265, 159, 537, 537, 550, 480, -216,
	-553, -553, -134, -543, -543, -543, -543, -553, -553, 350,
	-15, -328, -549, -323, 480, 376, 436, -616, -616, 211,
	-331, -641, -508, -223, 365, -222, 151, 448, 141, 268,
	236, -508, -221, 195, 252, 587, -323, 2, 625, 625,
	629, 629, -573, -266, -318, -303, 240, 240, -310, -288,
	39, 358, 358, 624, -318, -89, 587, -507, -540, -620,
	587, 45, -321, 39, 159, -617, -138, -323, -512, -513,
	5, 39, -318, 159, 361, 343, -269, 275, -667, -548,
	-588, -379, -413, -402, 344, 95, 625, -458, -404, -387,
	-464, 2, 625, -217, -553, -218, -230, -305, 2, -554,
	-553, -553, 629, 624, 606, 606, 606, 606, 606, 606,
	606, -224, -508, -134, -224, -135, -138, 365, -318, -540,
	-540, -540, 616, -420, 5, -362, -361, 380, 354, -362,
	456, 456, 362, 183, 271, -254, -302, -464, -464, 155,
	34, 34, -464, -464, -475, 625, -464, -464, -394, 623,
	5, -464, 625, 625, 8, -464, 625, 626, -602, -287,
	-464, 625, 63, 625, 625, 629, 629, 625, 625, 625,
	625, 625, 625, 625, -470, 195, 143, 354, 624, 625,
	625, -108, -472, 217, 63, -495, -472, -472, -422, -383,
	-495, -462, -302, 622, -302, 622, -544, -540, -498, 624,
	626, -228, 606, -553, -553, -197, 211, -639, -639, 587,
	-331, 623, 2, 622, -544, 625, -331, 195, -611, -331,
	523, 123, 189, 221, 221, -304, -304, -233, -541, 522,
	456, -272, 403, -455, 159, 159, -574, 97, -576, 79,
	175, 106, 343, 350, 556, 403, 75, 131, 361, 421,
	-657, -658, -659, 39, 598, 599, 625, -381, -492, -587,
	624, -287, -381, -383, 343, 511, 131, 361, 343, 131,
	361, 582, 123, 2, 550, 82, -304, -312, -231, -383,
	-383, -318, -328, -549, 167, 625, 629, 606, 2, 616,
	616, -328, -549, -323, -328, -549, -321, 159, -272, 378,
	173, 537, -138, -464, 167, 625, -302, 5, 5, 159,
	-299, 79, -304, 5, -304, -322, 123, 587, -643, -643,
	467, 537, 537, 361, 361, 364, -637, -638, -221, 629,
	624, 606, 606, 606, -221, -554, -134, 2, -373, -363,
	242, -304, -571, -568, -569, 403, -456, -575, -577, 175,
	403, -351, 624, -303, -288, 624, -138, 2, -234, 624,
	-349, 365, 623, -622, 365, -621, 121, 141, -549, -417,
	-138, -323, -371, 587, -373, 625, 629, 153, -439, 567,
	-302, -318, 159, -270, 274, -667, -548, -267, -442, -440,
	144, 624, 361, -138, -379, 606, 625, 625, 123, 625,
	-225, -226, -553, -134, -553, -553, -553, -134, -553, -224,
	-508, -508, -69, -70, 240, 97, 385, -315, 522, 240,
	624, 624, -254, -464, -464, -464, 625, -379, -544, 616,
	-596, 380, 625, -491, -464, -464, -465, 195, 624, -475,
	625, -597, 586, -464, -408, -409, -464, 454, 112, 215,
	-597, -597, 625, -540, -540, 2, -553, 364, 2, 537,
	622, 2, 195, -551, 195, 195, 231, -138, 231, 39,
	424, -455, -312, -312, -316, -309, -287, 175, 224, 350,
	582, -438, 266, 624, -465, 560, -318, 624, 2, 223,
	223, 31, 63, -660, 135, 244, 625, 629, -493, -298,
	-287, -464, -493, 625, 625, 350, 560, 350, 582, -464,
	560, -514, 624, -265, -265, 625, 625, -464, 537, -543,
	104, -541, 2, -626, -272, -301, -464, 189, -464, 537,
	5, -265, -316, -265, -265, -299, 550, 360, -541, -541,
	-328, -549, -323, -642, 523, 474, 551, 468, 198, 455,
	-642, 189, -222, -223, -553, -134, -134, -221, 39, -357,
	-358, 2, -573, 266, -309, 266, 233, 158, -381, 624,
	624, -383, -656, 587, 625, -347, -235, -90, -91, 538,
	-507, 629, 624, 606, -373, 327, 123, 39, 5, 624,
	624, -287, 361, 624, -302, -282, 96, -667, -548, -268,
	-413, 344, -383, 97, -442, -471, -218, 624, -218, 625,
	-224, 629, 29, 624, 29, 624, -318, -340, -394, -394,
	625, -379, 63, 629, 625, 625, -465, -475, 625, -598,
	-599, -307, 629, 624, 624, 481, 623, 623, -551, 2,
	-551, -551, -551, 467, -272, 403, -287, -567, -576, -309,
	343, -236, 567, 587, -464, -465, -289, 624, -464, 624,
	624, 39, 131, 244, 136, 229, -454, -661, 105, 512,
	232, -492, -254, 625, -453, 567, 421, -465, -299, -381,
	624, 624, 624, 606, 195, -138, 624, -518, -265, -322,
	606, 537, 2, 2, 195, -616, 625, -632, 419, -138,
	-235, 624, -236, -352, 84, 98, 132, 223, 199, 241,
	503, 509, 29, -352, 625, -381, -381, 625, -353, 361,
	123, 327, 625, 39, -91, 9, -621, -622, -464, 39,
	123, -138, -512, -381, -318, -381, 361, -274, -273, 283,
	-548, -269, 625, -312, -413, -554, -70, -383, -383, 625,
	625, -603, 412, 457, 216, -394, -380, 625, 629, 39,
	-409, 2, 2, 2, -639, -331, 424, -266, 159, 218,
	625, -578, 298, -287, 625, -417, -417, 39, 136, 229,
	-359, -355, 624, -255, -493, -236, 218, -318, -627, 567,
	625, -365, -364, -361, -367, -366, -361, -394, -541, 104,
	378, -394, -299, -134, -551, -551, 361, -634, 196, -633,
	5, 10, -353, -382, -494, -304, -453, 625, 625, 85,
	123, -363, -138, 625, -138, 2, -371, 625, 625, -439,
	625, -318, -271, -555, 424, 426, -667, -270, -458, 144,
	625, 625, 625, 625, -604, -605, 53, 553, 113, -464,
	-604, -604, -599, -601, 195, 175, -452, 596, -579, -582,
	-581, 603, 487, 196, 379, 625, 511, 581, 625, 625,
	-660, -383, -452, -373, -464, -453, 625, 629, 572, 625,
	629, 572, 625, 195, 625, -265, -639, -265, -642, -220,
	587, 48, -281, -280, 625, 629, -454, -453, -359, 402,
	137, 147, -357, -656, -453, 624, -454, 624, -279, -278,
	-667, -534, -282, 144, 344, 560, -218, -606, 157, -605,
	399, 188, 456, 399, 188, -606, -606, -551, -309, -236,
	58, -581, 603, -582, 603, 560, 137, -458, 625, -578,
	-236, -364, 231, -366, 195, 378, 195, 464, -633, 31,
	-236, -494, -359, -454, -236, 457, 457, 2, -235, -353,
	-454, -381, -359, -381, -275, -276, -277, -383, -274, 344,
	560, 480, 113, 214, 532, 327, 34, 606, -580, 327,
	443, 67, 480, -580, -579, 624, 624, -551, 365, -236,
	-359, -458, 2, -353, -359, 625, -236, 625, -550, 376,
	-271, 480, -403, 456, 369, -605, -464, 24, 350, 131,
	-660, -394, -394, -265, -217, 624, -458, -236, -281, -236,
	-453, -458, -454, -667, -279, -403, -458, 625, 625, -217,
	-458, -458, -454, -359, -549, -275, -458, -354, -355, 537,
	625, -359, -236, 624, -236, -458, -394, -458, 625, -354,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 578, 579, 581, 582, 583,
	585, 586, 588, 590, 592, 593, 594, 596, 597, 599,
	600, 601, 602, 603, 605, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 694, 696, 0, 1530, 1532, 1534, 1536, 0, 0,
	-2, 0, 40, 41, 43, 45, 0, -2, 355, 357,
	359, 361, 0, 393, 395, 396, 398, 400, 401, 402,
	404, -2, 0, 511, 512, 514, 516, -2, 0, 1115,
	1117, 1119, 0, 682, 684, 0, 1122, 1124, 1126, 0,
	0, 706, 707, 0, 1644, -2, 698, 700, 702, 704,
	780, 782, 784, 786, 788, 790, 792, 794, 796, 798,
	799, 801, 803, 805, 807, 809, 810, 812, 814, 816,
	817, 819, 820, 822, 824, 826, 828, 830, 832, 834,
	836, 838, 840, 842, 844, 846, 848, -2, 851, 852,
	853, 855, -2, -2, 0, -2, -2, -2, 1548, 47,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 455, 457, 459, 461, 463, 466, 468, 470, 1702,
	518, 520, 522, 524, 526, 528, 530, 0, 0, -2,
	1716, 0, 0, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 119, 120, 121, 122, 123, 124, 125,
	84, 85, 86, 88, 89, 90, 91, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 116, 117, 82,
	0, 0, 1675, 1677, 1679, 1681, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 33, 35, 37, 580, 584, 587, 589, 591, 595,
	598, 604, 606, 608, 563, 564, 567, 2414, 2432, 2433,
	2434, 2437, 2438, 2439, 2440, 2441, 2442, 2921, 3002, 3003,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 565, 566, 1309,
	0, 647, 645, 2399, 648, 2708, 650, 652, 505, 506,
	507, 508, 509, 510, 0, 675, 661, 1714, 676, 678,
	679, 680, 681, 642, 640, 0, 680, 675, 2469, 673,
	1528, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 434, 1368, 1369, 1370, 1513, 1514, 2759,
	1555, 0, 251, 695, -2, -2, 2886, -2, 734, 735,
	-2, -2, 749, 753, 744, 2890, 0, 2762, 2745, -2,
	756, 1531, 1533, 1535, 856, 857, 858, 2418, 862, 860,
	872, 873, 874, 0, 891, -2, 0, 2465, 2730, -2,
	-2, 892, 893, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 42, 44, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, -2, -2,
	-2, -2, 0, 0, 2809, 2524, 2367, 2434, 2370, 2365,
	356, 358, 360, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 394, 397, 399, 403, -2, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 1181, 1182, 1435, 0, 0, 0, -2, 513, 515,
	568, 569, 0, 1703, 1703, 576, 577, -2, 0, 0,
	0, 0, 326, 316, 1116, 1118, 1120, 1121, 0, 0,
	0, 0, 0, 683, 685, 0, 0, 2803, 293, 1123,
	1125, 1127, 1128, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 699, 701, 703, 705, 781, 783, 785, 787,
	789, 791, 793, 795, 797, 800, 802, 804, 806, 808,
	811, 813, 815, 818, 821, 823, 825, 827, 829, 831,
	833, 835, 837, 839, 841, 843, 845, 847, 849, 850,
	899, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 1005, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 1096, 0, 0,
	902, 905, 906, 907, 908, 909, 910, 0, 978, 1003,
	1004, 1014, 854, 0, 1349, 1704, 1557, 1538, 1552, 1557,
	1540, 1541, 1542, 1543, 1544, 1549, 1551, 1545, 1546, 1547,
	48, 50, 52, 54, 56, 58, 60, 62, 64, 66,
	68, 70, 456, 458, 460, 462, 464, 467, 469, 471,
	-2, 1673, 1674, 519, 521, 523, 525, 527, 529, 531,
	686, 0, 689, 0, 904, 688, -2, 0, 1708, 1708,
	1708, 0, 0, 1674, 1672, 0, 692, 693, 760, 761,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	2069, 0, 762, -2, 2102, 2104, 2861, 2681, 2886, 2240,
	2106, 2107, 2108, 2109, 2110, 0, 2112, 2113, 2114, 2115,
	2116, 2117, 0, 2119, 0, 2124, 2125, 2126, 0, 2868,
	2344, 2428, -2, 0, 0, 2874, 2424, 0, 2207, 2142,
	-2, -2, 2451, 2430, 1913, 1914, 1915, 1916, 1917, -2,
	-2, 2904, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 0, 2849, 2869, 2870, 2875, 2877, 2871,
	2858, 2167, 2538, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1940, 1949, -2, -2,
	-2, -2, -2, -2, -2, 2862, 2863, 2880, 2883, 2889,
	2894, 2895, 2867, 2876, 2903, 2905, 2906, 2907, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919,
	2920, 1941, -2, -2, -2, -2, 1691, 2723, 1694, 1309,
	1692, 1676, 1678, 0, 1680, 0, 0, 0, 1685, 1711,
	1709, 0, 1760, 1689, 1690, 1783, 1783, 1807, 0, 1788,
	0, 1807, 1703, 1834, 0, 1794, 2750, 2143, 2144, 0,
	2434, 2429, -2, -2, 2901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 0, 649, 651,
	0, 0, 0, 674, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 438, 439, 440, 441, 2869, 0,
	0, 0, 446, 0, 448, 449, 450, 451, 452, 453,
	454, 221, 2869, 536, 561, 0, 221, 2869, 539, 221,
	2869, 542, 0, 545, 1433, 221, 2869, 548, 2395, 221,
	2869, 551, 553, 2403, 221, 2869, 557, 2410, 2408, 558,
	0, 560, 241, 237, 238, 239, 240, 1524, 1525, 1526,
	1527, 0, 1554, 1434, 697, 0, 723, 0, 732, 733,
	2857, -2, 0, 2771, 737, 738, -2, 740, 1558, 1562,
	1563, 1564, 1565, 1566, 0, 0, 0, 0, 1571, 0,
	0, 0, 0, 729, 730, 747, 748, 754, 757, 0,
	865, 861, 875, 0, 890, 0, 891, 891, 2384, 2375,
	2376, 0, 0, 891, 891, 0, 0, 894, 895, 896,
	897, 898, 81, 0, 2869, 1834, 83, 0, 2389, 2459,
	2460, 2461, 2462, 2463, 2902, 2922, 2923, 2924, 2925, 2926,
	2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936,
	2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946,
	2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956,
	2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966,
	2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976,
	2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986,
	2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996,
	2997, 2998, 2999, 3000, 3001, 2904, 87, 0, 2869, 92,
	0, 2869, 0, -2, 105, 0, 118, 0, 145, -2,
	-2, -2, 126, 0, 2869, 0, 2364, -2, 0, 233,
	317, 318, 319, 0, 624, 0, 633, 329, 330, 2447,
	2448, 2455, 2456, 2457, 2458, 0, 0, 728, 2385, 0,
	1153, -2, 0, 1362, 1364, 1364, 0, -2, 0, 0,
	0, 1106, 2361, 2366, 1107, 1108, 2371, 0, 364, 365,
	366, 367, 368, 0, 369, 2869, 371, 372, 0, 374,
	375, 2869, 377, 378, 0, 380, 0, 382, 0, 273,
	277, 2869, 2869, 407, 410, 0, 412, 413, 0, 415,
	0, 0, 0, 419, -2, 435, 0, 432, 422, 423,
	425, 426, 427, 428, 429, 0, 475, 473, 2400, 0,
	0, -2, 2869, 0, 1150, 0, 0, 1413, -2, 0,
	1355, 0, 1420, 2869, 1416, 0, -2, 0, 1701, 2869,
	1575, 1185, 1186, 1187, 1188, 1846, 502, 0, 1608, 0,
	1610, 0, 1630, 1840, 1783, 0, 0, 1845, 0, -2,
	621, 2417, -2, 571, 0, 572, 0, -2, 0, 343,
	0, 0, 1131, 1133, 1134, 1136, 1137, 1140, 1141, 1142,
	1143, 0, 1145, 1820, 294, 296, 0, 0, 0, 0,
	1130, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	0, 0, 708, 0, 0, 900, 901, 0, 0, 917,
	918, 919, 0, 343, 2763, 2718, 2560, 926, 0, 929,
	932, -2, 0, 0, 0, 0, 940, 0, 945, 946,
	947, 0, -2, 0, 954, 956, 1114, 958, 0, 0,
	960, 0, 964, 0, 967, 0, 969, 0, 971, -2,
	-2, -2, 979, 980, -2, 985, -2, 0, 989, -2,
	0, 992, 0, 995, -2, 0, 1005, 1001, 1002, 0,
	0, 0, 0, 1022, 1023, 0, 1032, 0, 1035, 1036,
	1037, 0, 0, 1042, 1043, 0, 1045, 1046, 1047, 1049,
	1050, 1051, 0, 2838, 2768, 2524, 0, 1059, -2, 1065,
	1067, 0, -2, 0, 1083, 0, 1087, 0, 0, 1095,
	0, 0, 903, 0, 911, 912, 221, 1838, 1537, -2,
	1539, 0, -2, 0, 687, 0, 691, 1733, 1659, 1656,
	0, 1730, 1731, 1660, 0, 0, 0, 1667, 0, 1706,
	1707, 0, 0, 0, 1646, 1647, 0, 0, 0, 0,
	2246, 2247, 2248, 2249, 2262, 2250, 2251, 2261, 2259, 2260,
	2252, 2253, 2258, 2272, 2273, 2263, 2264, 2254, 2267, 2265,
	2266, 2268, 2269, 2270, 2271, 0, 0, 2277, 0, 2255,
	2256, 2257, 2285, 0, 0, 2286, 0, 2288, 0, 2278,
	2274, 2275, 2276, 0, 2048, 2050, 2352, 0, 0, 0,
	2284, 2279, 2280, 1986, 1987, 1988, 1989, 1990, 2023, 2027,
	2028, 0, 0, 2103, 2349, 2348, 2105, 0, 0, 2300,
	0, 2118, -2, 0, 2241, 2295, 0, 0, 2127, 2128,
	2129, 0, 0, 2300, 0, 0, 2343, 2139, 2140, 1978,
	0, 0, 2209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 1926, 0, 1928, 0, 1929, 1930, 1937, 1950,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 2324, -2, 0, 0, 0, 0, 1942, 0,
	1693, 0, 0, 1764, 2353, 2357, 2358, 1764, 1764, 0,
	0, 2301, 1831, 1831, 0, 0, 1826, 1826, 1826, 1824,
	1807, 0, 1807, 1817, 0, 1807, 1807, 0, -2, 1788,
	0, 0, 1817, 0, 1801, 609, 611, 613, 615, 616,
	617, 619, 1835, 1836, 0, 0, 0, 0, 2435, 0,
	0, 0, 0, 2407, 0, 0, 2420, 0, 0, 2394,
	389, 390, 0, 0, 0, 2820, 2762, 0, -2, 654,
	677, 1703, 0, 2303, 1861, 1865, 0, 1867, 1868, 1869,
	1870, 1871, 0, 0, 1862, -2, 1938, 1940, 1961, 2452,
	2453, 2454, 1921, 1922, 1923, 1924, 1925, 1933, 1920, 1920,
	1920, 1931, 1960, 1952, 1960, 1956, 1906, 1907, 1908, 1943,
	1944, 1945, 1946, 0, 2820, 2762, 0, -2, 0, 664,
	0, 0, 1641, 436, 0, 443, 444, 445, 0, 532,
	0, 219, 220, 0, 221, 2869, 537, 0, 540, 0,
	221, 2869, 2359, 546, 0, 549, 0, 0, 555, 0,
	0, 0, 0, 0, 221, 1643, 0, 0, 0, 0,
	-2, 742, 750, 751, 752, 0, 1560, 0, 1567, 771,
	772, 773, 1569, 1570, 0, 1572, 745, 774, 775, 776,
	777, 778, 779, 0, 2373, 2374, 2379, 2380, 0, 0,
	743, 764, 746, 0, 758, 868, 863, 864, 876, 877,
	0, 0, 2377, 2378, 0, 0, 882, 883, 127, 1510,
	0, 0, 174, 0, 1510, 1510, 0, 0, 0, 0,
	202, 0, 0, 1219, 0, 0, 0, 0, 145, 159,
	170, 139, 140, 141, 0, 0, 0, 0, 0, 0,
	93, 1331, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 107, 108, 0,
	0, 113, 114, 0, 158, 0, 0, 0, 0, 0,
	1605, 0, 149, 145, 0, 0, 144, 146, 129, 0,
	0, 145, 160, 172, 0, 208, 210, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 243, 0, 623,
	625, 0, 0, 0, 0, 631, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 1700,
	0, 0, 0, 0, 2869, 1508, 0, 1493, 0, 1820,
	2611, -2, -2, 294, 1820, 1105, 0, 0, 2435, 2369,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 411, 414, 416, 417, 418, 0, 1412, 0, 424,
	465, 1278, 2869, 0, 0, 492, 487, 0, 489, 0,
	0, 0, 1330, 2869, 1328, 2404, 0, 1353, 0, 1309,
	2869, 2402, 0, 0, 0, 1421, 2444, 1430, 1434, 1593,
	0, 504, 0, 1611, 1613, 0, 0, 1841, 0, 1843,
	1783, 1703, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 1144, 300, 0, 1819, 0, 0, 331,
	1820, 294, 2736, 0, 1129, 343, 343, 1820, 710, 1820,
	712, 0, 0, 920, 921, 0, 343, 343, 343, 927,
	928, 0, 930, 931, -2, -2, -2, -2, 933, 938,
	1029, 0, 0, 0, 1028, 948, 0, 950, 953, 957,
	0, 1099, 2745, 2762, 2820, 1112, 1029, 2524, 1029, 2524,
	1029, 2524, 1029, 1029, 973, 1017, 1025, 984, 991, 0,
	986, 990, 993, 996, 0, 998, 1006, 0, -2, 0,
	1009, 0, 1011, 0, 1013, 1029, 1030, 1033, 0, 1041,
	1044, 0, 1052, 1053, 1054, 1055, 2415, 1056, 1057, 1058,
	-2, 1062, 1063, 0, 1074, 1079, 1080, 1076, 0, 0,
	0, 0, 0, 0, 1090, 1091, 0, 0, 1098, 0,
	913, 1348, 0, 1550, 1733, 1659, 690, 1650, 1732, 1651,
	1658, 1661, 0, 0, 1663, 0, 1665, 0, 1728, 1729,
	1736, 1737, 0, 1747, 1748, 1740, 0, -2, 0, 0,
	1743, 1744, 1669, 0, 1686, 1687, 1688, 1717, 1720, 1449,
	0, 3002, 1982, 1856, 1983, 1984, 2388, 0, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, -2, -2,
	-2, -2, -2, -2, -2, -2, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, -2, -2, -2,
	2024, 2025, 2026, -2, 2287, 2289, 0, 2352, 0, -2,
	0, -2, -2, -2, -2, 2045, 0, 2047, 2052, 2054,
	2056, 0, 0, 0, 0, 2351, 2066, 2335, 2336, 0,
	0, 2243, 2244, 2245, 2051, 0, 2070, 2350, 2347, 0,
	0, 2281, 0, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 0, 2299, 1716, 2131,
	0, 0, 0, 0, 2138, 2123, 2297, 0, 2296, 0,
	0, 0, 2307, 0, 2342, 2338, 0, 2386, 1977, 1964,
	1965, 1966, 1967, 1968, 1969, 1979, 0, 2383, 2421, 2427,
	2217, 0, 0, 0, 2168, 2169, 2170, 2171, 2172, 0,
	2174, 2175, 0, 2177, 2178, 0, 2180, 2181, 0, 2183,
	2184, 2185, 2186, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 0, 0, 2189, 0, 2310, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2191, 0, 2193,
	2301, 2321, 0, 0, 2071, 0, 0, 0, 0, 2241,
	0, 2196, 2301, 2329, 0, 0, 0, 0, 0, 2301,
	0, 2334, 0, 2203, 0, 2205, 1695, 0, 0, 1851,
	0, 0, 0, 2356, 1851, 1851, 0, 1759, 0, 0,
	1827, 1828, 1829, 1830, 0, 0, 1831, 0, 1821, 1825,
	1822, 1823, 1817, 1780, 0, 0, 2390, 1817, 1786, 1816,
	0, 1309, 1806, 1817, 1817, 0, -2, 1790, 1807, 0,
	0, 610, 612, 614, 618, 620, 0, 0, 1716, -2,
	0, -2, 345, 1308, 0, 0, 0, 0, 0, 0,
	644, 646, 0, 0, 552, 0, 0, 660, 0, 638,
	0, 641, 0, 1852, 1855, 0, 0, 1866, 1872, 1873,
	0, -2, 0, 0, 1962, 0, 0, 0, 0, 0,
	672, 0, 675, 0, 0, 0, 447, 562, 221, 534,
	0, 221, 221, 543, 0, 0, 221, 554, 221, 2411,
	221, 2409, 242, 559, 1642, 254, 0, 731, 0, 1559,
	1568, 0, 768, 0, 770, 0, 2381, 2382, 0, 759,
	0, 866, 0, 878, 879, 880, 881, 0, 0, 0,
	0, 1509, 0, 0, 1456, 0, 0, 178, 2869, 0,
	223, 0, 0, 1271, 2396, 0, 1261, 0, 0, 2546,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 142, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 1333,
	1335, 1342, 1344, 0, 1338, 1339, 0, 1341, 1343, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	1365, 0, 0, 1366, 1367, 1581, 1582, 0, 1604, 1605,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 2363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 627, 628, 629, 339, 336,
	338, 630, 635, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 1408, 1406, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 0, 0, 0, 0, -2, 1360, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	334, 2362, 2372, 0, 1138, 1139, 370, 373, 376, 379,
	260, 0, 0, 409, 420, 0, 0, 1191, 1163, 0,
	0, 474, 343, 0, 0, 488, 492, 2413, 1148, 1326,
	1329, 0, 1309, 2869, 1376, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 2869, 2391, 2443, 2444, 1595, 1605,
	0, 1851, 0, 1628, 1614, 0, 0, 0, 1628, 1632,
	1633, 1635, 1636, 0, 0, 1842, 1848, 570, 622, 1703,
	1703, 343, 341, 2684, 0, 0, 1617, 1619, 0, 0,
	0, 286, 0, 297, 1820, 295, 0, 300, 0, 0,
	1820, 294, 0, 486, 709, 714, 915, 0, 343, 923,
	924, 925, 0, 0, 0, 975, 1019, 1027, 1078, 0,
	939, 941, 942, 943, 0, 0, 0, 1113, 1109, 1110,
	1111, 959, 1029, 962, 1029, 965, 1029, 968, 970, 988,
	994, 1007, 1000, 1008, 0, 0, 0, 1021, 0, 1039,
	0, 1048, 1061, 0, 0, 0, 0, 0, 0, 0,
	1084, 1085, 1086, 1088, 1093, 1092, 1097, 914, 1839, 1654,
	1655, 1657, 0, 1666, 0, 0, 1742, -2, -2, 1741,
	1745, 1746, -2, -2, -2, -2, 1662, 0, 1671, 1668,
	0, 1727, 1447, 1448, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 2067, 0, -2, 2046, 2049, 2053, 2055,
	2057, 0, 0, 0, 0, 0, 0, 2290, 0, 2292,
	2068, 2345, 2348, 2283, 0, 2239, 0, 0, 1715, 1716,
	1716, 0, 2137, 0, 2298, 0, 2305, 2306, 0, 2130,
	0, 2339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2141, 0, 0, 0, 0, 2173, 2176, 2179, 2182,
	0, 0, 0, 0, 2162, 0, 0, 0, 2166, 1932,
	1918, 0, 1960, 1958, 1959, 1953, 1960, 1957, 1910, 0,
	1909, 0, 2188, 0, 2190, 2192, 0, 0, 2194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2075, 2076, 2096, 2195, 2327, 2328,
	0, 0, 0, 0, 0, 0, 2201, 0, 2333, 2202,
	2204, 1703, 0, 1696, 0, 1761, 1750, 1850, 0, 2354,
	1820, 1763, 1765, 2355, 2393, 1750, 1750, 0, 2302, 0,
	0, 1811, 0, 0, 0, 1813, 1784, 0, 0, 1778,
	0, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1785, 1309,
	1815, 1787, 1791, 2421, 0, 1817, 0, 1802, 0, 1804,
	1837, 0, 1796, 1799, 0, 0, 2436, 1851, 0, 383,
	391, 392, 384, 385, 386, 387, 0, 1496, 0, 0,
	0, 0, 0, 2304, 0, 1857, 0, 1863, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 1640, 442,
	533, 221, 538, 541, 2360, 221, 547, 550, 556, 250,
	0, 722, -2, 766, 767, 769, 0, 765, 871, 867,
	175, 1510, 0, 0, 0, 1452, 0, 1174, 0, 1169,
	1170, 1454, 1458, 1464, 1467, 0, 180, 2869, 192, 0,
	2869, 0, 1235, 0, 0, 0, 0, 0, 0, 1512,
	0, 0, 2869, 221, 2869, 221, 196, 198, 201, 0,
	207, 203, 0, 1171, 0, 1223, 0, 0, 1226, 128,
	1510, 0, 0, 131, 135, 147, 0, 0, 0, 157,
	0, 0, 0, 1469, 1473, 1481, 0, 0, 0, 1336,
	1337, 1340, 1346, 94, 0, 0, 0, 1477, 1479, 1485,
	106, 109, 2869, 2405, 111, 2869, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 133, 137, 148,
	0, 1487, 130, 0, 236, 0, 0, 226, 221, 2869,
	0, 228, 0, 229, 230, 244, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 1151, 1152,
	1407, 0, 1351, 1352, 0, 1363, 1357, 0, 0, 0,
	0, 0, 1489, 1490, 0, 0, 0, 1508, 1505, 1820,
	256, 0, 1820, 264, 0, 2368, 0, 278, 406, 0,
	0, 0, 0, 1190, 1289, 1192, 1194, 1195, 1196, 223,
	0, 2444, 1261, 2600, 2444, 0, 0, 1158, 0, 0,
	0, 480, 476, 0, 485, 491, 490, 496, -2, 0,
	0, 0, 0, -2, 0, 0, 1423, 1417, 1418, 0,
	0, 0, 0, 2869, 1597, 1605, 0, 1701, 1716, 503,
	1606, 1628, 0, 0, 0, 1616, 1612, 1609, 1851, 0,
	0, 0, 0, 0, 1844, 1847, 573, 574, 320, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 298, 0,
	301, 0, 0, 0, 306, 307, 308, 309, 310, 311,
	0, 0, 0, 0, 300, 332, 288, 1820, 0, 300,
	0, 0, 711, 0, 0, 922, 0, 936, 0, 0,
	0, 949, 952, 961, 963, 966, 1010, 1012, 1029, 0,
	1040, 1068, 2392, 1069, 1213, 0, 1213, 0, 0, 1089,
	1664, 0, 1739, 1670, 1721, 1722, 0, 1449, 0, 1985,
	2030, 0, 0, -2, 0, 0, 2034, 0, 0, 0,
	-2, 0, 0, 0, 2291, 2293, 0, 2347, 2282, 2132,
	0, 0, 0, 2136, 2120, 2121, 0, 2242, 2308, 2337,
	2341, 0, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 0,
	2387, 2422, 2426, 2215, 2216, 2220, 2401, 0, 0, 0,
	2145, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1955, 0, 0, 2309, 2320, 2322, 2072, 2073, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, -2, -2,
	-2, 2090, 2091, 2092, -2, -2, -2, 2097, 0, 0,
	0, 2323, 2325, 2326, 2330, 2331, 0, 2198, 2199, 2200,
	2332, 0, 1703, 1697, 1758, 0, 1849, 1762, 0, 1758,
	1758, 1710, 1809, 0, 0, 1833, 0, 1781, 0, 1782,
	0, 0, 1814, 0, 1789, 1792, 1793, 1803, 0, 1795,
	0, 1798, 0, 2132, -2, 344, 346, 348, 0, 351,
	352, 0, 0, 0, 653, 0, 1496, 1496, 0, 655,
	639, 0, 0, 1859, 0, 0, 1935, 1939, 1963, 666,
	668, 0, 0, 2820, 2762, 0, 665, 535, 544, 252,
	0, 1818, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 0, 222, 0, 1270, 0, 1233, 0,
	0, 1260, 0, 0, 1276, 182, 183, 184, 0, 0,
	0, 0, 194, 0, 0, 190, 0, 200, 206, 205,
	0, 1220, 0, 0, 0, 0, 1457, 0, 0, 0,
	154, 155, 156, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1587, 1588, 0,
	1578, 151, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 1446, 246, 0, 0, 0, 0, 0, 340,
	335, 337, 0, 0, 726, 0, 727, 1350, 1410, 1411,
	1359, 1470, 1474, 1482, 0, 0, 0, 0, 0, 680,
	1507, 0, 264, 262, 0, 265, 0, 268, 269, 0,
	0, 264, 258, 0, 0, 0, 1309, 421, 1161, 1277,
	0, 0, 1279, 1197, 1201, 0, 2444, 2444, 0, 2398,
	0, 1159, 0, 0, 1278, 472, 0, 479, 0, 493,
	0, 0, 1330, 0, 0, 1354, 1379, 1309, 0, 1422,
	1424, 0, 1432, 0, 0, 0, 1599, 1605, 0, 1592,
	1593, 1735, 1607, 1626, -2, 0, 0, 1716, 1634, 1631,
	1637, 1638, 0, 0, 0, 323, 0, 1618, 1620, 0,
	1132, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 300, 1820, 290, 1820, 327, 0, 916, 934,
	935, 937, 944, 1020, 1038, 1070, 1212, 0, 0, 1072,
	0, 0, 1738, 1725, 1726, 1723, 1449, 2032, 2036, 0,
	0, 0, 2038, -2, 0, 2060, -2, -2, 2294, 2346,
	2111, 1716, 2133, 2135, 2122, 2340, 1980, 0, 2222, 2219,
	0, 2206, 0, 2157, 2158, 0, 0, 2161, 2163, 2164,
	2165, 1919, 1912, 1911, 2319, 0, 0, 0, 0, 2197,
	1698, 0, 2211, 0, 0, 1766, 2211, 2211, 1810, 0,
	1812, 1779, 1767, 0, 1776, 0, 2422, 1805, 1797, 0,
	0, 349, 0, 353, 354, 388, 0, 656, 657, 0,
	0, 1853, 1858, 0, 1864, 1934, 0, 0, 0, 0,
	0, 253, 0, 869, 870, 176, 177, 1175, 1173, 1461,
	1465, 1462, 0, 179, 0, 0, 1234, 0, 1237, 0,
	0, 0, 0, 1244, 1261, 0, 0, 0, 0, 0,
	0, 1263, 0, 1262, 0, 0, 1293, 0, 1437, 1444,
	0, -2, 0, 0, 0, 186, 212, 0, 0, 0,
	0, 215, 1511, 188, 0, 0, 221, 221, 1172, 0,
	0, 1453, 1455, 1468, 0, 0, 0, 0, 164, 0,
	0, 1471, 1475, 1483, 1478, 1480, 1486, 0, 112, 0,
	1589, 0, 150, 0, 0, 0, 1488, 234, 235, 0,
	221, 0, 221, 227, 221, 1446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 1492, 255, 0,
	0, 0, 0, 0, 257, 333, 264, 408, 0, 1222,
	0, 1289, 1281, 1282, 1283, 0, 1193, 1288, 1290, 0,
	0, 1198, 0, 0, 0, 0, 1178, 1160, 0, 1191,
	1163, 0, 477, 494, 0, 497, 0, 500, 1149, 1327,
	1371, 1309, 1374, 0, 0, 1414, 0, 0, 0, 0,
	0, 0, 0, 1601, 1605, 0, 1594, 1595, 1628, 1734,
	0, 0, 0, 1615, 1735, 0, 342, 343, 0, 343,
	302, 0, 303, 304, 305, 312, 313, 314, 315, 289,
	292, 300, 713, 715, 0, 0, 721, 1211, 0, 0,
	0, 0, 1724, 2040, -2, -2, 2061, 0, 2423, 2425,
	1716, 0, 2208, 1718, 0, 0, -2, 0, 0, 0,
	1699, 1682, 0, 1757, 1749, 1751, 1753, 2748, 2519, 2868,
	1683, 1684, 1832, 0, 0, 1800, 350, 1495, 658, 0,
	0, 1860, 0, 663, 0, 0, 0, 859, 0, 0,
	1463, 181, 0, 0, 1238, 1239, 2397, 1241, 0, 1243,
	1245, 1246, 1163, 0, 1250, 0, 2446, 0, 1255, 1258,
	1259, 0, 0, 1272, 1294, 0, 1303, 0, 1439, 1449,
	1443, 0, 1441, 1305, 0, 185, 214, 187, 216, 211,
	0, 1446, 0, 189, 199, 0, 0, 132, 0, 0,
	2513, 167, 165, 163, 110, 1450, 153, 0, 134, 0,
	236, 245, 1445, 247, 231, 221, 0, 0, 724, 725,
	1472, 1476, 1484, 0, 1499, 1500, 1501, 1502, 0, 0,
	0, 0, 266, 0, 267, 270, 271, 0, 0, 1163,
	1221, 1162, 1280, 0, 1291, 1163, 0, 0, 0, 0,
	0, 0, 1165, 0, 1164, 0, 0, 478, 481, 0,
	484, 0, 0, 0, 0, 0, 1378, 0, 1425, 1423,
	0, 1431, 0, 0, 0, 1577, 0, 0, 1596, 1597,
	501, 1621, 0, 0, 1628, 1639, 322, 0, 325, 299,
	291, 0, 717, 0, 719, 0, 1071, 1073, 0, 0,
	2134, 2226, 0, 0, 2159, 2160, -2, 0, 2100, 2210,
	2212, 0, 0, 0, 0, 0, 1768, 1777, 1496, 1854,
	670, 667, 669, 0, 1459, 0, 1466, 223, 1236, 1240,
	0, 1247, 0, 0, 0, 1251, 1313, 0, 0, 1330,
	1330, 1264, 0, 0, 1297, 1298, 1218, 0, 1299, 1300,
	1301, 1438, 1727, 1444, 1163, 0, 0, 213, 218, 0,
	0, 0, 0, 0, 0, 152, 0, 225, 248, 1446,
	0, 0, 1503, 1504, 0, 0, 263, 282, 0, 1372,
	1165, 0, 1292, 1199, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1200, 1305, 0, 0, 1269, 1176, 0,
	1179, 0, 1161, 0, 482, 483, 498, 0, 499, 0,
	0, 1379, 0, 0, 1432, 0, 0, 1584, 1576, 1605,
	1598, 1599, 1851, 0, 1629, 0, 716, 0, 0, 1081,
	1082, 0, 0, 0, 0, 2221, 1719, 2101, 0, 0,
	1752, 1754, 1755, 1756, 659, 0, 1460, 193, 0, 1307,
	1249, 1318, 0, 0, 0, 0, 0, 1265, 1295, 1296,
	1293, 1217, 0, 1442, 1440, 1274, 1307, 1309, 191, 0,
	1305, 0, 1227, 0, 0, 1230, 0, 0, 168, 2513,
	166, 0, 221, 637, 1496, 221, 0, 285, 0, 276,
	274, 275, 1157, 0, 1285, 1287, 1303, 1305, 1218, 0,
	1180, 1222, 1178, 495, 1373, 1377, 1375, 1415, 1305, 0,
	1303, 0, 1591, 1605, 1585, 1586, 0, 1601, 0, 0,
	343, 718, 720, 2218, 2238, 2227, -2, 2823, 2520, 0,
	2238, 2238, 2213, 2214, 0, 0, 1163, 0, 1252, 1314,
	1315, 0, 1310, 1311, 1312, 2445, 1253, 1254, 1256, 1257,
	1851, 0, 1304, 1313, 217, 1163, 1224, 0, 0, 1225,
	0, 0, 171, 0, 173, 249, 1494, 1497, 0, 272,
	0, 0, 1154, 1156, 1163, 0, 1218, 1303, 1163, 0,
	0, 0, 1163, 1165, 1303, 0, 1218, 0, 1580, 1590,
	0, 1600, 1577, 0, 1624, 0, 324, 2223, 0, 0,
	2229, 2230, 2231, 2232, 2233, 2224, 2225, 671, 1242, 1248,
	0, 1316, 0, 1317, 0, 0, 0, 1273, 1302, 1318,
	197, 1228, 0, 1231, 0, 169, 0, 0, 280, 281,
	1284, 1286, 1163, 1218, 1851, 1166, 0, 1168, 1165, 1177,
	1218, 0, 1163, 0, 1603, 1579, 1583, 2406, 1584, 1622,
	0, 0, 0, 2235, 2236, 0, 0, 0, 1319, 0,
	1322, 1323, 0, 1320, 1293, 0, 0, 221, 0, 1851,
	1163, 1268, 1167, 1157, 1163, 1305, 1851, 1303, 1573, 1605,
	1591, 0, 1851, 2234, 2237, 2228, 1306, 1321, 1324, 1325,
	1275, 0, 0, 1498, 283, 0, 1266, 1851, 1155, 1851,
	1303, 1428, 1218, 0, 1580, 1851, 1625, 1215, 0, 0,
	1267, 1426, 1218, 1163, 1602, 1574, 1623, 1229, 1214, 0,
	284, 1163, 1851, 0, 1851, 1429, 0, 1427, 1215, 1232,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 612, 3, 618, 613, 3,
	624, 625, 616, 614, 629, 615, 626, 617, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 632, 3,
	604, 606, 605, 609, 628, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 622, 3, 623, 619, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 630, 611, 631, 607,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 608, 57947, 610, 57948, 620, 57949, 621,
	57950, 627, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1549
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1572
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1596
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1598
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1659
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1758
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1870
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1935
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1964
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2000
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2011
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2023
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2044
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2106
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2115
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2126
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2134
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2145
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2155
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2165
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2174
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2185
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2191
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2217
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2222
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2357
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2367
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2376
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = true
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = false
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2623
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2627
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2630
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2811
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = nil
		}
	case 286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3288
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3297
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3303
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3308
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3313
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = nil
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3421
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3617
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3643
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "CREATE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3682
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplemented(sqllex, "create access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "create cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplemented(sqllex, "create publication")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplemented(sqllex, "create rule")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplemented(sqllex, "create server")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3713
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3717
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
		}
	case 435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3721
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplemented(sqllex, "drop server")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3868
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3903
		{

			sqlVAL.union.val = nil
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "DELETE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3990
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4001
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4016
		{
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "DROP")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4216
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4273
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4282
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4290
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4306
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4314
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "DELETE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "INSERT")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4503
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4536
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4627
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4643
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "GRANT")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4752
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "RESET")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "RESET")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "USE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "USE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4962
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				Name:     strings.Join(sqlDollar[7].union.strs(), "."),
				Value:    sqlDollar[9].union.expr(),
				TenantID: roachpb.MakeTenantID(tenID),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				Name:      strings.Join(sqlDollar[7].union.strs(), "."),
				Value:     sqlDollar[9].union.expr(),
				TenantAll: true,
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4982
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				Name:     strings.Join(sqlDollar[7].union.strs(), "."),
				Value:    tree.DefaultVal{},
				TenantID: roachpb.MakeTenantID(tenID),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				Name:      strings.Join(sqlDollar[7].union.strs(), "."),
				Value:     tree.DefaultVal{},
				TenantAll: true,
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5053
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5106
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return unimplemented(sqllex, "set from current")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5119
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5154
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.Low
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = tree.Normal
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = tree.High
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = true
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = false
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = true
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = false
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "FETCH")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = int64(1)
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = int64(-1)
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = int64(1)
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = int64(1)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = int64(-1)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5523
		{
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5524
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5527
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5528
		{
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.str = "client_encoding"
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.str = "timezone"
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5614
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5677
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5686
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5726
		{
			tenID := uint64(sqlDollar[7].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), TenantID: roachpb.MakeTenantID(tenID)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5734
		{
			tenID := uint64(sqlDollar[7].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true, TenantID: roachpb.MakeTenantID(tenID)}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5742
		{
			tenID := uint64(sqlDollar[6].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = &tree.ShowClusterSettingList{TenantID: roachpb.MakeTenantID(tenID)}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5750
		{
			tenID := uint64(sqlDollar[7].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = &tree.ShowClusterSettingList{TenantID: roachpb.MakeTenantID(tenID)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5757
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5768
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5871
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5890
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5912
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = true
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = true
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = false
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5980
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5981
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5982
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5999
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6025
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6026
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6050
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6099
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6101
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6105
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = true
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = false
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6120
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6156
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = true
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6218
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6228
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6239
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6261
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6305
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6310
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6315
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6320
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6349
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6394
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6402
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6423
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6433
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6446
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6469
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6540
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6550
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6797
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6799
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6812
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6852
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6865
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6916
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7016
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7031
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7059
		{

			sqlVAL.union.val = nil
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.str = ""
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = nil
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7098
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7102
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7138
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7151
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7165
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7259
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.str = ""
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7511
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{

			sqlVAL.union.val = true
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = false
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7573
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7670
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7681
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7708
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7723
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7792
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7794
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7795
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7963
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7972
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7980
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7991
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8014
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8016
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8045
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8072
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.str = ""
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = true
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8140
		{

			sqlVAL.union.val = true
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8155
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8169
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8181
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8193
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8203
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8213
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8217
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = true
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = true
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = nil
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8360
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8388
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8390
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8392
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8396
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8431
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8448
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8466
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8482
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = false
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = true
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = false
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = true
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = false
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8562
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8568
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.str = ""
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.str = ""
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8635
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8641
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8866
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8872
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8884
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8890
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8904
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8910
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8969
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = true
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = false
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.Types
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9029
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9058
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9062
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9174
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9226
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9249
		{
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9277
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9290
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9292
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.str = ""
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9409
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{

		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9446
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.str = ""
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.str = ""
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.str = ""
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.str = ""
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9501
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9527
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9772
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9787
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9931
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9966
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9967
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9968
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10029
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10089
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = true
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = false
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10143
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = nil
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10157
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = true
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = false
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = true
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10187
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10191
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10244
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10249
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10308
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10436
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10451
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10473
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10520
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10532
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10551
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10593
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10603
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10649
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10679
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10712
		{
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10714
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = nil
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = true
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = false
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.str = tree.AstFull
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.str = tree.AstRight
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.str = tree.AstInner
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10831
		{
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10832
		{
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.str = tree.AstHash
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.str = ""
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10901
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10936
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10946
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = true
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = false
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = true
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = false
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10995
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11008
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11016
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11017
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11035
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11045
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11065
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11074
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11114
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11126
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11127
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = types.Geography
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11176
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11184
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11218
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = nil
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = types.Int2
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = types.Int
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = types.Float4
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = types.Float
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11261
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11269
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11277
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = types.Bool
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = types.Float
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11310
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11316
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11338
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = types.String
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = true
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = false
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = types.Date
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11387
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11395
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11409
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11418
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11426
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11443
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = true
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = false
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = false
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = types.Interval
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11467
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = nil
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11596
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11656
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11805
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12000
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12130
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12138
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12239
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12265
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12274
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12289
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12323
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12334
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12335
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12350
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12359
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12425
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12550
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12555
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12573
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12582
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12596
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12601
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12625
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12626
		{
			return unimplemented(sqllex, "treat")
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12647
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12652
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12699
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.str = ""
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12788
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12801
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12869
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12898
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12934
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12953
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12974
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13299
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13314
		{
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13315
		{
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13354
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13387
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13395
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13439
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13445
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13464
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13468
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13480
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13484
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13493
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13504
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13513
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13521
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13538
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13623
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13631
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13635
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13695
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13709
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13713
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13730
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13739
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13757
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13770
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13777
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13802
		{
			sqlVAL.str = ""
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13808
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13812
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
