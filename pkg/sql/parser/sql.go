// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) fetchCursor() *tree.FetchCursor {
	return u.val.(*tree.FetchCursor)
}

//line sql-gen.y:917
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14345

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 39,
	-2, 1687,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 58,
	269, 432,
	-2, 0,
	-1, 70,
	8, 876,
	29, 876,
	612, 876,
	613, 876,
	-2, 0,
	-1, 76,
	251, 258,
	536, 258,
	-2, 0,
	-1, 90,
	239, 1420,
	253, 1420,
	269, 428,
	406, 428,
	417, 1167,
	458, 428,
	472, 1167,
	521, 1167,
	548, 428,
	574, 1167,
	-2, 0,
	-1, 96,
	136, 1687,
	246, 1687,
	559, 1687,
	560, 1687,
	-2, 0,
	-1, 114,
	155, 1658,
	175, 1658,
	188, 1658,
	249, 1658,
	282, 1658,
	355, 1658,
	366, 1658,
	554, 1658,
	-2, 1629,
	-1, 156,
	163, 1000,
	268, 1000,
	409, 961,
	477, 961,
	520, 961,
	539, 1000,
	541, 961,
	-2, 0,
	-1, 160,
	4, 1689,
	21, 1689,
	22, 1689,
	23, 1689,
	24, 1689,
	25, 1689,
	26, 1689,
	27, 1689,
	28, 1689,
	30, 1689,
	31, 1689,
	37, 1689,
	41, 1689,
	43, 1689,
	44, 1689,
	46, 1689,
	47, 1689,
	48, 1689,
	49, 1689,
	50, 1689,
	51, 1689,
	52, 1689,
	53, 1689,
	54, 1689,
	56, 1689,
	57, 1689,
	58, 1689,
	59, 1689,
	61, 1689,
	62, 1689,
	63, 1689,
	64, 1689,
	65, 1689,
	66, 1689,
	67, 1689,
	71, 1689,
	72, 1689,
	73, 1689,
	74, 1689,
	76, 1689,
	77, 1689,
	78, 1689,
	82, 1689,
	83, 1689,
	84, 1689,
	85, 1689,
	86, 1689,
	87, 1689,
	88, 1689,
	91, 1689,
	92, 1689,
	93, 1689,
	94, 1689,
	95, 1689,
	97, 1689,
	99, 1689,
	100, 1689,
	101, 1689,
	102, 1689,
	103, 1689,
	104, 1689,
	106, 1689,
	107, 1689,
	108, 1689,
	110, 1689,
	111, 1689,
	112, 1689,
	120, 1689,
	121, 1689,
	122, 1689,
	123, 1689,
	124, 1689,
	126, 1689,
	127, 1689,
	128, 1689,
	129, 1689,
	131, 1689,
	132, 1689,
	133, 1689,
	135, 1689,
	136, 1689,
	137, 1689,
	139, 1689,
	140, 1689,
	141, 1689,
	144, 1689,
	145, 1689,
	146, 1689,
	148, 1689,
	149, 1689,
	150, 1689,
	152, 1689,
	153, 1689,
	154, 1689,
	156, 1689,
	157, 1689,
	158, 1689,
	159, 1689,
	160, 1689,
	161, 1689,
	162, 1689,
	163, 1689,
	164, 1689,
	165, 1689,
	166, 1689,
	167, 1689,
	168, 1689,
	169, 1689,
	170, 1689,
	171, 1689,
	172, 1689,
	174, 1689,
	180, 1689,
	181, 1689,
	182, 1689,
	183, 1689,
	187, 1689,
	189, 1689,
	190, 1689,
	191, 1689,
	193, 1689,
	196, 1689,
	197, 1689,
	198, 1689,
	199, 1689,
	200, 1689,
	201, 1689,
	202, 1689,
	203, 1689,
	204, 1689,
	205, 1689,
	206, 1689,
	207, 1689,
	208, 1689,
	209, 1689,
	211, 1689,
	212, 1689,
	214, 1689,
	215, 1689,
	217, 1689,
	218, 1689,
	219, 1689,
	220, 1689,
	221, 1689,
	222, 1689,
	223, 1689,
	224, 1689,
	225, 1689,
	226, 1689,
	228, 1689,
	229, 1689,
	231, 1689,
	232, 1689,
	233, 1689,
	234, 1689,
	235, 1689,
	239, 1689,
	240, 1689,
	241, 1689,
	242, 1689,
	245, 1689,
	246, 1689,
	247, 1689,
	248, 1689,
	250, 1689,
	252, 1689,
	253, 1689,
	255, 1689,
	257, 1689,
	258, 1689,
	259, 1689,
	261, 1689,
	265, 1689,
	266, 1689,
	267, 1689,
	268, 1689,
	269, 1689,
	270, 1689,
	272, 1689,
	273, 1689,
	274, 1689,
	276, 1689,
	277, 1689,
	279, 1689,
	280, 1689,
	283, 1689,
	284, 1689,
	285, 1689,
	286, 1689,
	287, 1689,
	288, 1689,
	289, 1689,
	292, 1689,
	293, 1689,
	294, 1689,
	295, 1689,
	297, 1689,
	298, 1689,
	299, 1689,
	300, 1689,
	301, 1689,
	302, 1689,
	303, 1689,
	304, 1689,
	305, 1689,
	306, 1689,
	307, 1689,
	308, 1689,
	309, 1689,
	310, 1689,
	311, 1689,
	312, 1689,
	313, 1689,
	314, 1689,
	315, 1689,
	316, 1689,
	317, 1689,
	318, 1689,
	320, 1689,
	322, 1689,
	323, 1689,
	324, 1689,
	325, 1689,
	326, 1689,
	327, 1689,
	328, 1689,
	329, 1689,
	330, 1689,
	331, 1689,
	332, 1689,
	333, 1689,
	334, 1689,
	335, 1689,
	336, 1689,
	337, 1689,
	338, 1689,
	340, 1689,
	341, 1689,
	343, 1689,
	345, 1689,
	346, 1689,
	347, 1689,
	348, 1689,
	350, 1689,
	351, 1689,
	352, 1689,
	353, 1689,
	354, 1689,
	357, 1689,
	359, 1689,
	361, 1689,
	362, 1689,
	363, 1689,
	364, 1689,
	367, 1689,
	368, 1689,
	369, 1689,
	371, 1689,
	373, 1689,
	374, 1689,
	375, 1689,
	376, 1689,
	377, 1689,
	378, 1689,
	379, 1689,
	380, 1689,
	381, 1689,
	382, 1689,
	383, 1689,
	384, 1689,
	385, 1689,
	387, 1689,
	388, 1689,
	389, 1689,
	390, 1689,
	391, 1689,
	392, 1689,
	393, 1689,
	394, 1689,
	395, 1689,
	396, 1689,
	397, 1689,
	398, 1689,
	399, 1689,
	400, 1689,
	401, 1689,
	403, 1689,
	404, 1689,
	405, 1689,
	407, 1689,
	408, 1689,
	409, 1689,
	410, 1689,
	411, 1689,
	412, 1689,
	413, 1689,
	414, 1689,
	415, 1689,
	416, 1689,
	417, 1689,
	418, 1689,
	419, 1689,
	421, 1689,
	423, 1689,
	424, 1689,
	425, 1689,
	431, 1689,
	432, 1689,
	433, 1689,
	435, 1689,
	436, 1689,
	437, 1689,
	438, 1689,
	439, 1689,
	440, 1689,
	441, 1689,
	442, 1689,
	443, 1689,
	444, 1689,
	446, 1689,
	447, 1689,
	448, 1689,
	450, 1689,
	451, 1689,
	452, 1689,
	453, 1689,
	454, 1689,
	455, 1689,
	456, 1689,
	458, 1689,
	459, 1689,
	460, 1689,
	461, 1689,
	462, 1689,
	463, 1689,
	464, 1689,
	465, 1689,
	466, 1689,
	467, 1689,
	468, 1689,
	469, 1689,
	470, 1689,
	472, 1689,
	473, 1689,
	474, 1689,
	475, 1689,
	476, 1689,
	477, 1689,
	479, 1689,
	480, 1689,
	481, 1689,
	482, 1689,
	483, 1689,
	484, 1689,
	486, 1689,
	487, 1689,
	488, 1689,
	489, 1689,
	490, 1689,
	491, 1689,
	492, 1689,
	493, 1689,
	495, 1689,
	497, 1689,
	498, 1689,
	499, 1689,
	500, 1689,
	501, 1689,
	502, 1689,
	503, 1689,
	504, 1689,
	505, 1689,
	506, 1689,
	507, 1689,
	508, 1689,
	509, 1689,
	510, 1689,
	511, 1689,
	512, 1689,
	513, 1689,
	514, 1689,
	516, 1689,
	517, 1689,
	519, 1689,
	520, 1689,
	522, 1689,
	523, 1689,
	524, 1689,
	525, 1689,
	526, 1689,
	527, 1689,
	528, 1689,
	529, 1689,
	531, 1689,
	532, 1689,
	533, 1689,
	534, 1689,
	535, 1689,
	537, 1689,
	539, 1689,
	540, 1689,
	541, 1689,
	542, 1689,
	543, 1689,
	544, 1689,
	545, 1689,
	547, 1689,
	548, 1689,
	549, 1689,
	550, 1689,
	552, 1689,
	553, 1689,
	556, 1689,
	557, 1689,
	558, 1689,
	559, 1689,
	560, 1689,
	561, 1689,
	562, 1689,
	564, 1689,
	567, 1689,
	568, 1689,
	569, 1689,
	570, 1689,
	571, 1689,
	572, 1689,
	574, 1689,
	575, 1689,
	576, 1689,
	577, 1689,
	578, 1689,
	579, 1689,
	580, 1689,
	581, 1689,
	586, 1689,
	587, 1689,
	588, 1689,
	589, 1689,
	590, 1689,
	591, 1689,
	-2, 0,
	-1, 161,
	1, 1537,
	134, 1537,
	257, 1537,
	342, 1537,
	404, 1537,
	413, 1537,
	595, 1537,
	625, 1537,
	-2, 0,
	-1, 163,
	1, 1537,
	625, 1537,
	-2, 0,
	-1, 164,
	1, 1537,
	625, 1537,
	-2, 0,
	-1, 165,
	1, 1537,
	536, 1537,
	625, 1537,
	-2, 0,
	-1, 197,
	155, 1657,
	175, 1657,
	188, 1657,
	249, 1657,
	282, 1657,
	355, 1657,
	366, 1657,
	554, 1657,
	-2, 1632,
	-1, 244,
	4, 1696,
	5, 1696,
	6, 1696,
	7, 1696,
	8, 1696,
	9, 1696,
	10, 1696,
	21, 1696,
	22, 1696,
	23, 1696,
	24, 1696,
	25, 1696,
	26, 1696,
	27, 1696,
	28, 1696,
	30, 1696,
	31, 1696,
	37, 1696,
	38, 1696,
	41, 1696,
	43, 1696,
	44, 1696,
	45, 1696,
	46, 1696,
	47, 1696,
	48, 1696,
	49, 1696,
	50, 1696,
	51, 1696,
	52, 1696,
	53, 1696,
	54, 1696,
	56, 1696,
	57, 1696,
	58, 1696,
	59, 1696,
	61, 1696,
	62, 1696,
	63, 1696,
	64, 1696,
	65, 1696,
	66, 1696,
	67, 1696,
	68, 1696,
	69, 1696,
	70, 1696,
	71, 1696,
	72, 1696,
	73, 1696,
	74, 1696,
	76, 1696,
	77, 1696,
	78, 1696,
	80, 1696,
	82, 1696,
	83, 1696,
	84, 1696,
	85, 1696,
	86, 1696,
	87, 1696,
	88, 1696,
	91, 1696,
	92, 1696,
	93, 1696,
	94, 1696,
	95, 1696,
	97, 1696,
	99, 1696,
	100, 1696,
	101, 1696,
	102, 1696,
	103, 1696,
	104, 1696,
	106, 1696,
	107, 1696,
	108, 1696,
	109, 1696,
	110, 1696,
	111, 1696,
	112, 1696,
	113, 1696,
	114, 1696,
	115, 1696,
	116, 1696,
	117, 1696,
	118, 1696,
	119, 1696,
	120, 1696,
	121, 1696,
	122, 1696,
	123, 1696,
	124, 1696,
	125, 1696,
	126, 1696,
	127, 1696,
	128, 1696,
	129, 1696,
	130, 1696,
	131, 1696,
	132, 1696,
	133, 1696,
	135, 1696,
	136, 1696,
	137, 1696,
	139, 1696,
	140, 1696,
	141, 1696,
	144, 1696,
	145, 1696,
	146, 1696,
	148, 1696,
	149, 1696,
	150, 1696,
	152, 1696,
	153, 1696,
	154, 1696,
	156, 1696,
	157, 1696,
	158, 1696,
	159, 1696,
	160, 1696,
	161, 1696,
	162, 1696,
	163, 1696,
	164, 1696,
	165, 1696,
	166, 1696,
	167, 1696,
	168, 1696,
	169, 1696,
	170, 1696,
	171, 1696,
	172, 1696,
	173, 1696,
	174, 1696,
	180, 1696,
	181, 1696,
	182, 1696,
	183, 1696,
	187, 1696,
	189, 1696,
	190, 1696,
	191, 1696,
	193, 1696,
	195, 1696,
	196, 1696,
	197, 1696,
	198, 1696,
	199, 1696,
	200, 1696,
	201, 1696,
	202, 1696,
	203, 1696,
	204, 1696,
	205, 1696,
	206, 1696,
	207, 1696,
	208, 1696,
	209, 1696,
	211, 1696,
	212, 1696,
	214, 1696,
	215, 1696,
	217, 1696,
	218, 1696,
	219, 1696,
	220, 1696,
	221, 1696,
	222, 1696,
	223, 1696,
	224, 1696,
	225, 1696,
	226, 1696,
	227, 1696,
	228, 1696,
	229, 1696,
	231, 1696,
	232, 1696,
	233, 1696,
	234, 1696,
	235, 1696,
	239, 1696,
	240, 1696,
	241, 1696,
	242, 1696,
	244, 1696,
	245, 1696,
	246, 1696,
	247, 1696,
	248, 1696,
	250, 1696,
	252, 1696,
	253, 1696,
	254, 1696,
	255, 1696,
	256, 1696,
	257, 1696,
	258, 1696,
	259, 1696,
	260, 1696,
	261, 1696,
	265, 1696,
	266, 1696,
	267, 1696,
	268, 1696,
	269, 1696,
	270, 1696,
	272, 1696,
	273, 1696,
	274, 1696,
	276, 1696,
	277, 1696,
	278, 1696,
	279, 1696,
	280, 1696,
	281, 1696,
	283, 1696,
	284, 1696,
	285, 1696,
	286, 1696,
	287, 1696,
	288, 1696,
	289, 1696,
	290, 1696,
	291, 1696,
	292, 1696,
	293, 1696,
	294, 1696,
	295, 1696,
	297, 1696,
	298, 1696,
	299, 1696,
	300, 1696,
	301, 1696,
	302, 1696,
	303, 1696,
	304, 1696,
	305, 1696,
	306, 1696,
	307, 1696,
	308, 1696,
	309, 1696,
	310, 1696,
	311, 1696,
	312, 1696,
	313, 1696,
	314, 1696,
	315, 1696,
	316, 1696,
	317, 1696,
	318, 1696,
	320, 1696,
	321, 1696,
	322, 1696,
	323, 1696,
	324, 1696,
	325, 1696,
	326, 1696,
	327, 1696,
	328, 1696,
	329, 1696,
	330, 1696,
	331, 1696,
	332, 1696,
	333, 1696,
	334, 1696,
	335, 1696,
	336, 1696,
	337, 1696,
	338, 1696,
	339, 1696,
	340, 1696,
	341, 1696,
	342, 1696,
	343, 1696,
	344, 1696,
	345, 1696,
	346, 1696,
	347, 1696,
	348, 1696,
	349, 1696,
	350, 1696,
	351, 1696,
	352, 1696,
	353, 1696,
	354, 1696,
	357, 1696,
	359, 1696,
	362, 1696,
	363, 1696,
	364, 1696,
	367, 1696,
	368, 1696,
	369, 1696,
	370, 1696,
	371, 1696,
	372, 1696,
	373, 1696,
	374, 1696,
	375, 1696,
	376, 1696,
	377, 1696,
	378, 1696,
	379, 1696,
	380, 1696,
	381, 1696,
	382, 1696,
	383, 1696,
	384, 1696,
	385, 1696,
	387, 1696,
	388, 1696,
	389, 1696,
	390, 1696,
	391, 1696,
	392, 1696,
	393, 1696,
	394, 1696,
	395, 1696,
	396, 1696,
	397, 1696,
	398, 1696,
	399, 1696,
	400, 1696,
	401, 1696,
	403, 1696,
	404, 1696,
	405, 1696,
	407, 1696,
	408, 1696,
	409, 1696,
	410, 1696,
	411, 1696,
	412, 1696,
	413, 1696,
	414, 1696,
	415, 1696,
	416, 1696,
	417, 1696,
	418, 1696,
	419, 1696,
	421, 1696,
	423, 1696,
	424, 1696,
	425, 1696,
	431, 1696,
	432, 1696,
	433, 1696,
	435, 1696,
	436, 1696,
	437, 1696,
	438, 1696,
	439, 1696,
	440, 1696,
	441, 1696,
	442, 1696,
	443, 1696,
	444, 1696,
	446, 1696,
	447, 1696,
	448, 1696,
	449, 1696,
	450, 1696,
	451, 1696,
	452, 1696,
	453, 1696,
	454, 1696,
	455, 1696,
	456, 1696,
	458, 1696,
	459, 1696,
	460, 1696,
	461, 1696,
	462, 1696,
	463, 1696,
	464, 1696,
	465, 1696,
	466, 1696,
	467, 1696,
	468, 1696,
	469, 1696,
	470, 1696,
	472, 1696,
	473, 1696,
	474, 1696,
	475, 1696,
	476, 1696,
	477, 1696,
	478, 1696,
	479, 1696,
	480, 1696,
	481, 1696,
	482, 1696,
	483, 1696,
	484, 1696,
	485, 1696,
	486, 1696,
	487, 1696,
	488, 1696,
	489, 1696,
	490, 1696,
	491, 1696,
	492, 1696,
	493, 1696,
	495, 1696,
	497, 1696,
	498, 1696,
	499, 1696,
	500, 1696,
	501, 1696,
	502, 1696,
	503, 1696,
	504, 1696,
	505, 1696,
	506, 1696,
	507, 1696,
	508, 1696,
	509, 1696,
	510, 1696,
	511, 1696,
	512, 1696,
	513, 1696,
	514, 1696,
	516, 1696,
	517, 1696,
	518, 1696,
	519, 1696,
	520, 1696,
	522, 1696,
	523, 1696,
	524, 1696,
	525, 1696,
	526, 1696,
	527, 1696,
	528, 1696,
	529, 1696,
	531, 1696,
	532, 1696,
	533, 1696,
	534, 1696,
	535, 1696,
	537, 1696,
	539, 1696,
	540, 1696,
	541, 1696,
	542, 1696,
	543, 1696,
	544, 1696,
	545, 1696,
	546, 1696,
	547, 1696,
	548, 1696,
	549, 1696,
	550, 1696,
	552, 1696,
	553, 1696,
	555, 1696,
	556, 1696,
	557, 1696,
	558, 1696,
	559, 1696,
	560, 1696,
	561, 1696,
	562, 1696,
	563, 1696,
	564, 1696,
	567, 1696,
	568, 1696,
	569, 1696,
	570, 1696,
	571, 1696,
	572, 1696,
	574, 1696,
	575, 1696,
	576, 1696,
	577, 1696,
	578, 1696,
	579, 1696,
	580, 1696,
	581, 1696,
	586, 1696,
	587, 1696,
	588, 1696,
	589, 1696,
	590, 1696,
	591, 1696,
	592, 1696,
	605, 1696,
	612, 1696,
	613, 1696,
	614, 1696,
	622, 1696,
	626, 1696,
	-2, 0,
	-1, 781,
	4, 1418,
	21, 1418,
	22, 1418,
	23, 1418,
	24, 1418,
	25, 1418,
	26, 1418,
	27, 1418,
	28, 1418,
	30, 1418,
	31, 1418,
	37, 1418,
	41, 1418,
	43, 1418,
	44, 1418,
	46, 1418,
	47, 1418,
	48, 1418,
	49, 1418,
	50, 1418,
	51, 1418,
	52, 1418,
	53, 1418,
	54, 1418,
	56, 1418,
	57, 1418,
	58, 1418,
	59, 1418,
	61, 1418,
	62, 1418,
	63, 1418,
	64, 1418,
	65, 1418,
	66, 1418,
	67, 1418,
	71, 1418,
	72, 1418,
	73, 1418,
	74, 1418,
	76, 1418,
	77, 1418,
	78, 1418,
	82, 1418,
	83, 1418,
	84, 1418,
	85, 1418,
	86, 1418,
	87, 1418,
	88, 1418,
	91, 1418,
	92, 1418,
	93, 1418,
	94, 1418,
	95, 1418,
	97, 1418,
	99, 1418,
	100, 1418,
	101, 1418,
	102, 1418,
	103, 1418,
	104, 1418,
	106, 1418,
	107, 1418,
	108, 1418,
	110, 1418,
	111, 1418,
	112, 1418,
	120, 1418,
	121, 1418,
	122, 1418,
	123, 1418,
	124, 1418,
	126, 1418,
	127, 1418,
	128, 1418,
	129, 1418,
	131, 1418,
	132, 1418,
	133, 1418,
	135, 1418,
	136, 1418,
	137, 1418,
	139, 1418,
	140, 1418,
	141, 1418,
	144, 1418,
	145, 1418,
	146, 1418,
	148, 1418,
	149, 1418,
	150, 1418,
	152, 1418,
	153, 1418,
	154, 1418,
	156, 1418,
	157, 1418,
	158, 1418,
	159, 1418,
	160, 1418,
	161, 1418,
	162, 1418,
	163, 1418,
	164, 1418,
	165, 1418,
	166, 1418,
	167, 1418,
	168, 1418,
	169, 1418,
	170, 1418,
	171, 1418,
	172, 1418,
	174, 1418,
	180, 1418,
	181, 1418,
	182, 1418,
	183, 1418,
	187, 1418,
	189, 1418,
	190, 1418,
	191, 1418,
	193, 1418,
	196, 1418,
	197, 1418,
	198, 1418,
	199, 1418,
	200, 1418,
	201, 1418,
	202, 1418,
	203, 1418,
	204, 1418,
	205, 1418,
	206, 1418,
	207, 1418,
	208, 1418,
	209, 1418,
	211, 1418,
	212, 1418,
	214, 1418,
	215, 1418,
	217, 1418,
	218, 1418,
	219, 1418,
	220, 1418,
	221, 1418,
	222, 1418,
	223, 1418,
	224, 1418,
	225, 1418,
	226, 1418,
	228, 1418,
	229, 1418,
	231, 1418,
	232, 1418,
	233, 1418,
	234, 1418,
	235, 1418,
	239, 1418,
	240, 1418,
	241, 1418,
	242, 1418,
	245, 1418,
	246, 1418,
	247, 1418,
	248, 1418,
	250, 1418,
	252, 1418,
	253, 1418,
	255, 1418,
	257, 1418,
	258, 1418,
	259, 1418,
	261, 1418,
	265, 1418,
	266, 1418,
	267, 1418,
	268, 1418,
	269, 1418,
	270, 1418,
	272, 1418,
	273, 1418,
	274, 1418,
	276, 1418,
	277, 1418,
	279, 1418,
	280, 1418,
	283, 1418,
	284, 1418,
	285, 1418,
	286, 1418,
	287, 1418,
	288, 1418,
	289, 1418,
	292, 1418,
	293, 1418,
	294, 1418,
	295, 1418,
	297, 1418,
	298, 1418,
	299, 1418,
	300, 1418,
	301, 1418,
	302, 1418,
	303, 1418,
	304, 1418,
	305, 1418,
	306, 1418,
	307, 1418,
	308, 1418,
	309, 1418,
	310, 1418,
	311, 1418,
	312, 1418,
	313, 1418,
	314, 1418,
	315, 1418,
	316, 1418,
	317, 1418,
	318, 1418,
	320, 1418,
	322, 1418,
	323, 1418,
	324, 1418,
	325, 1418,
	326, 1418,
	327, 1418,
	328, 1418,
	329, 1418,
	330, 1418,
	331, 1418,
	332, 1418,
	333, 1418,
	334, 1418,
	335, 1418,
	336, 1418,
	337, 1418,
	338, 1418,
	340, 1418,
	341, 1418,
	343, 1418,
	345, 1418,
	346, 1418,
	347, 1418,
	348, 1418,
	350, 1418,
	351, 1418,
	352, 1418,
	353, 1418,
	354, 1418,
	357, 1418,
	359, 1418,
	362, 1418,
	363, 1418,
	364, 1418,
	367, 1418,
	368, 1418,
	369, 1418,
	371, 1418,
	373, 1418,
	374, 1418,
	375, 1418,
	376, 1418,
	377, 1418,
	378, 1418,
	379, 1418,
	380, 1418,
	381, 1418,
	382, 1418,
	383, 1418,
	384, 1418,
	385, 1418,
	387, 1418,
	388, 1418,
	389, 1418,
	390, 1418,
	391, 1418,
	392, 1418,
	393, 1418,
	394, 1418,
	395, 1418,
	396, 1418,
	397, 1418,
	398, 1418,
	399, 1418,
	400, 1418,
	401, 1418,
	403, 1418,
	404, 1418,
	405, 1418,
	407, 1418,
	408, 1418,
	409, 1418,
	410, 1418,
	411, 1418,
	412, 1418,
	413, 1418,
	414, 1418,
	415, 1418,
	416, 1418,
	417, 1418,
	418, 1418,
	419, 1418,
	421, 1418,
	423, 1418,
	424, 1418,
	425, 1418,
	431, 1418,
	432, 1418,
	433, 1418,
	435, 1418,
	436, 1418,
	437, 1418,
	438, 1418,
	439, 1418,
	440, 1418,
	441, 1418,
	442, 1418,
	443, 1418,
	444, 1418,
	446, 1418,
	447, 1418,
	448, 1418,
	450, 1418,
	451, 1418,
	452, 1418,
	453, 1418,
	454, 1418,
	455, 1418,
	456, 1418,
	458, 1418,
	459, 1418,
	460, 1418,
	461, 1418,
	462, 1418,
	463, 1418,
	464, 1418,
	465, 1418,
	466, 1418,
	467, 1418,
	468, 1418,
	469, 1418,
	470, 1418,
	472, 1418,
	473, 1418,
	474, 1418,
	475, 1418,
	476, 1418,
	477, 1418,
	479, 1418,
	480, 1418,
	481, 1418,
	482, 1418,
	483, 1418,
	484, 1418,
	486, 1418,
	487, 1418,
	488, 1418,
	489, 1418,
	490, 1418,
	491, 1418,
	492, 1418,
	493, 1418,
	495, 1418,
	497, 1418,
	498, 1418,
	499, 1418,
	500, 1418,
	501, 1418,
	502, 1418,
	503, 1418,
	504, 1418,
	505, 1418,
	506, 1418,
	507, 1418,
	508, 1418,
	509, 1418,
	510, 1418,
	511, 1418,
	512, 1418,
	513, 1418,
	514, 1418,
	516, 1418,
	517, 1418,
	519, 1418,
	520, 1418,
	522, 1418,
	523, 1418,
	524, 1418,
	525, 1418,
	526, 1418,
	527, 1418,
	528, 1418,
	529, 1418,
	531, 1418,
	532, 1418,
	533, 1418,
	534, 1418,
	535, 1418,
	537, 1418,
	539, 1418,
	540, 1418,
	541, 1418,
	542, 1418,
	543, 1418,
	544, 1418,
	545, 1418,
	547, 1418,
	548, 1418,
	549, 1418,
	550, 1418,
	552, 1418,
	553, 1418,
	556, 1418,
	557, 1418,
	558, 1418,
	559, 1418,
	560, 1418,
	561, 1418,
	562, 1418,
	564, 1418,
	567, 1418,
	568, 1418,
	569, 1418,
	570, 1418,
	571, 1418,
	572, 1418,
	574, 1418,
	575, 1418,
	576, 1418,
	577, 1418,
	578, 1418,
	579, 1418,
	580, 1418,
	581, 1418,
	586, 1418,
	587, 1418,
	588, 1418,
	589, 1418,
	590, 1418,
	591, 1418,
	-2, 0,
	-1, 800,
	194, 2491,
	536, 2491,
	604, 2491,
	624, 2491,
	-2, 0,
	-1, 801,
	194, 2478,
	536, 2478,
	604, 2478,
	624, 2478,
	-2, 0,
	-1, 803,
	194, 2754,
	536, 2754,
	604, 2754,
	624, 2754,
	-2, 0,
	-1, 806,
	194, 2605,
	536, 2605,
	604, 2605,
	624, 2605,
	-2, 0,
	-1, 807,
	194, 2797,
	536, 2797,
	604, 2797,
	624, 2797,
	-2, 0,
	-1, 815,
	194, 2632,
	536, 2632,
	604, 2632,
	624, 2632,
	-2, 745,
	-1, 831,
	8, 875,
	29, 875,
	612, 875,
	613, 875,
	-2, 880,
	-1, 835,
	1, 2545,
	625, 2545,
	-2, 880,
	-1, 836,
	1, 2593,
	625, 2593,
	-2, 880,
	-1, 839,
	1, 2637,
	625, 2637,
	-2, 873,
	-1, 840,
	1, 2693,
	625, 2693,
	-2, 874,
	-1, 841,
	1, 2550,
	625, 2550,
	-2, 877,
	-1, 842,
	1, 2465,
	625, 2465,
	-2, 878,
	-1, 872,
	624, 2424,
	627, 2424,
	-2, 1085,
	-1, 873,
	624, 2426,
	627, 2426,
	-2, 1086,
	-1, 874,
	624, 2425,
	627, 2425,
	-2, 1087,
	-1, 875,
	627, 2350,
	-2, 1088,
	-1, 900,
	188, 277,
	-2, 0,
	-1, 924,
	45, 2397,
	-2, 0,
	-1, 925,
	574, 1396,
	-2, 1168,
	-1, 941,
	4, 1830,
	21, 1830,
	22, 1830,
	23, 1830,
	24, 1830,
	25, 1830,
	26, 1830,
	27, 1830,
	28, 1830,
	30, 1830,
	31, 1830,
	37, 1830,
	41, 1830,
	43, 1830,
	44, 1830,
	46, 1830,
	47, 1830,
	48, 1830,
	49, 1830,
	50, 1830,
	51, 1830,
	52, 1830,
	53, 1830,
	54, 1830,
	56, 1830,
	57, 1830,
	58, 1830,
	59, 1830,
	61, 1830,
	62, 1830,
	63, 1830,
	64, 1830,
	65, 1830,
	66, 1830,
	67, 1830,
	71, 1830,
	72, 1830,
	73, 1830,
	74, 1830,
	76, 1830,
	77, 1830,
	78, 1830,
	82, 1830,
	83, 1830,
	84, 1830,
	85, 1830,
	86, 1830,
	87, 1830,
	88, 1830,
	91, 1830,
	92, 1830,
	93, 1830,
	94, 1830,
	95, 1830,
	97, 1830,
	99, 1830,
	100, 1830,
	101, 1830,
	102, 1830,
	103, 1830,
	104, 1830,
	106, 1830,
	107, 1830,
	108, 1830,
	110, 1830,
	111, 1830,
	112, 1830,
	120, 1830,
	121, 1830,
	122, 1830,
	123, 1830,
	124, 1830,
	126, 1830,
	127, 1830,
	128, 1830,
	129, 1830,
	131, 1830,
	132, 1830,
	133, 1830,
	135, 1830,
	136, 1830,
	137, 1830,
	139, 1830,
	140, 1830,
	141, 1830,
	144, 1830,
	145, 1830,
	146, 1830,
	148, 1830,
	149, 1830,
	150, 1830,
	152, 1830,
	153, 1830,
	154, 1830,
	156, 1830,
	157, 1830,
	158, 1830,
	159, 1830,
	160, 1830,
	161, 1830,
	162, 1830,
	163, 1830,
	164, 1830,
	165, 1830,
	166, 1830,
	167, 1830,
	168, 1830,
	169, 1830,
	170, 1830,
	171, 1830,
	172, 1830,
	174, 1830,
	180, 1830,
	181, 1830,
	182, 1830,
	183, 1830,
	187, 1830,
	189, 1830,
	190, 1830,
	191, 1830,
	193, 1830,
	196, 1830,
	197, 1830,
	198, 1830,
	199, 1830,
	200, 1830,
	201, 1830,
	202, 1830,
	203, 1830,
	204, 1830,
	205, 1830,
	206, 1830,
	207, 1830,
	208, 1830,
	209, 1830,
	211, 1830,
	212, 1830,
	214, 1830,
	215, 1830,
	217, 1830,
	218, 1830,
	219, 1830,
	220, 1830,
	221, 1830,
	222, 1830,
	223, 1830,
	224, 1830,
	225, 1830,
	226, 1830,
	228, 1830,
	229, 1830,
	231, 1830,
	232, 1830,
	233, 1830,
	234, 1830,
	235, 1830,
	239, 1830,
	240, 1830,
	241, 1830,
	242, 1830,
	245, 1830,
	246, 1830,
	247, 1830,
	248, 1830,
	250, 1830,
	252, 1830,
	253, 1830,
	255, 1830,
	257, 1830,
	258, 1830,
	259, 1830,
	261, 1830,
	265, 1830,
	266, 1830,
	267, 1830,
	268, 1830,
	269, 1830,
	270, 1830,
	272, 1830,
	273, 1830,
	274, 1830,
	276, 1830,
	277, 1830,
	279, 1830,
	280, 1830,
	283, 1830,
	284, 1830,
	285, 1830,
	286, 1830,
	287, 1830,
	288, 1830,
	289, 1830,
	292, 1830,
	293, 1830,
	294, 1830,
	295, 1830,
	297, 1830,
	298, 1830,
	299, 1830,
	300, 1830,
	301, 1830,
	302, 1830,
	303, 1830,
	304, 1830,
	305, 1830,
	306, 1830,
	307, 1830,
	308, 1830,
	309, 1830,
	310, 1830,
	311, 1830,
	312, 1830,
	313, 1830,
	314, 1830,
	315, 1830,
	316, 1830,
	317, 1830,
	318, 1830,
	320, 1830,
	322, 1830,
	323, 1830,
	324, 1830,
	325, 1830,
	326, 1830,
	327, 1830,
	328, 1830,
	329, 1830,
	330, 1830,
	331, 1830,
	332, 1830,
	333, 1830,
	334, 1830,
	335, 1830,
	336, 1830,
	337, 1830,
	338, 1830,
	340, 1830,
	341, 1830,
	343, 1830,
	345, 1830,
	346, 1830,
	347, 1830,
	348, 1830,
	350, 1830,
	351, 1830,
	352, 1830,
	353, 1830,
	354, 1830,
	357, 1830,
	359, 1830,
	362, 1830,
	363, 1830,
	364, 1830,
	367, 1830,
	368, 1830,
	369, 1830,
	371, 1830,
	373, 1830,
	374, 1830,
	375, 1830,
	376, 1830,
	377, 1830,
	378, 1830,
	379, 1830,
	380, 1830,
	381, 1830,
	382, 1830,
	383, 1830,
	384, 1830,
	385, 1830,
	387, 1830,
	388, 1830,
	389, 1830,
	390, 1830,
	391, 1830,
	392, 1830,
	393, 1830,
	394, 1830,
	395, 1830,
	396, 1830,
	397, 1830,
	398, 1830,
	399, 1830,
	400, 1830,
	401, 1830,
	403, 1830,
	404, 1830,
	405, 1830,
	407, 1830,
	408, 1830,
	409, 1830,
	410, 1830,
	411, 1830,
	412, 1830,
	413, 1830,
	414, 1830,
	415, 1830,
	416, 1830,
	417, 1830,
	418, 1830,
	419, 1830,
	421, 1830,
	423, 1830,
	424, 1830,
	425, 1830,
	431, 1830,
	432, 1830,
	433, 1830,
	435, 1830,
	436, 1830,
	437, 1830,
	438, 1830,
	439, 1830,
	440, 1830,
	441, 1830,
	442, 1830,
	443, 1830,
	444, 1830,
	446, 1830,
	447, 1830,
	448, 1830,
	450, 1830,
	451, 1830,
	452, 1830,
	453, 1830,
	454, 1830,
	455, 1830,
	456, 1830,
	458, 1830,
	459, 1830,
	460, 1830,
	461, 1830,
	462, 1830,
	463, 1830,
	464, 1830,
	465, 1830,
	466, 1830,
	467, 1830,
	468, 1830,
	469, 1830,
	470, 1830,
	472, 1830,
	473, 1830,
	474, 1830,
	475, 1830,
	476, 1830,
	477, 1830,
	479, 1830,
	480, 1830,
	481, 1830,
	482, 1830,
	483, 1830,
	484, 1830,
	486, 1830,
	487, 1830,
	488, 1830,
	489, 1830,
	490, 1830,
	491, 1830,
	492, 1830,
	493, 1830,
	495, 1830,
	497, 1830,
	498, 1830,
	499, 1830,
	500, 1830,
	501, 1830,
	502, 1830,
	503, 1830,
	504, 1830,
	505, 1830,
	506, 1830,
	507, 1830,
	508, 1830,
	509, 1830,
	510, 1830,
	511, 1830,
	512, 1830,
	513, 1830,
	514, 1830,
	516, 1830,
	517, 1830,
	519, 1830,
	520, 1830,
	522, 1830,
	523, 1830,
	524, 1830,
	525, 1830,
	526, 1830,
	527, 1830,
	528, 1830,
	529, 1830,
	531, 1830,
	532, 1830,
	533, 1830,
	534, 1830,
	535, 1830,
	537, 1830,
	539, 1830,
	540, 1830,
	541, 1830,
	542, 1830,
	543, 1830,
	544, 1830,
	545, 1830,
	547, 1830,
	548, 1830,
	549, 1830,
	550, 1830,
	552, 1830,
	553, 1830,
	556, 1830,
	557, 1830,
	558, 1830,
	559, 1830,
	560, 1830,
	561, 1830,
	562, 1830,
	564, 1830,
	567, 1830,
	568, 1830,
	569, 1830,
	570, 1830,
	571, 1830,
	572, 1830,
	574, 1830,
	575, 1830,
	576, 1830,
	577, 1830,
	578, 1830,
	579, 1830,
	580, 1830,
	581, 1830,
	586, 1830,
	587, 1830,
	588, 1830,
	589, 1830,
	590, 1830,
	591, 1830,
	-2, 0,
	-1, 951,
	269, 432,
	-2, 0,
	-1, 1030,
	409, 962,
	477, 962,
	520, 962,
	541, 962,
	-2, 0,
	-1, 1031,
	409, 961,
	477, 961,
	520, 961,
	541, 961,
	-2, 893,
	-1, 1035,
	1, 1014,
	621, 1014,
	623, 1014,
	625, 1014,
	-2, 0,
	-1, 1037,
	1, 936,
	621, 936,
	623, 936,
	625, 936,
	-2, 0,
	-1, 1038,
	1, 940,
	621, 940,
	623, 940,
	625, 940,
	-2, 0,
	-1, 1039,
	1, 1084,
	188, 1084,
	621, 1084,
	623, 1084,
	625, 1084,
	-2, 0,
	-1, 1047,
	1, 967,
	621, 967,
	623, 967,
	625, 967,
	-2, 0,
	-1, 1054,
	1, 1014,
	621, 1014,
	623, 1014,
	625, 1014,
	-2, 0,
	-1, 1055,
	1, 1016,
	621, 1016,
	623, 1016,
	625, 1016,
	-2, 0,
	-1, 1056,
	1, 1019,
	621, 1019,
	623, 1019,
	625, 1019,
	-2, 0,
	-1, 1063,
	1, 1048,
	621, 1048,
	623, 1048,
	625, 1048,
	-2, 0,
	-1, 1064,
	1, 1050,
	621, 1050,
	623, 1050,
	625, 1050,
	-2, 0,
	-1, 1069,
	1, 1078,
	621, 1078,
	623, 1078,
	625, 1078,
	-2, 0,
	-1, 1123,
	175, 1700,
	188, 1700,
	282, 1700,
	355, 1700,
	-2, 1636,
	-1, 1139,
	175, 1699,
	188, 1699,
	282, 1699,
	355, 1699,
	-2, 1633,
	-1, 1166,
	624, 2423,
	-2, 753,
	-1, 1195,
	5, 2415,
	622, 2413,
	-2, 2404,
	-1, 1203,
	5, 2436,
	622, 2433,
	-2, 2424,
	-1, 1204,
	5, 2437,
	622, 2434,
	-2, 2425,
	-1, 1212,
	624, 2421,
	-2, 2403,
	-1, 1213,
	622, 2884,
	-2, 2422,
	-1, 1236,
	622, 2883,
	-2, 2438,
	-1, 1237,
	5, 1905,
	-2, 2854,
	-1, 1238,
	5, 1906,
	-2, 2855,
	-1, 1239,
	5, 1907,
	-2, 2869,
	-1, 1240,
	5, 1908,
	-2, 2833,
	-1, 1241,
	5, 1909,
	-2, 2867,
	-1, 1242,
	5, 1917,
	-2, 2846,
	-1, 1243,
	5, 1904,
	-2, 2842,
	-1, 1244,
	5, 1904,
	-2, 2841,
	-1, 1245,
	5, 1904,
	-2, 2860,
	-1, 1246,
	5, 1915,
	-2, 2835,
	-1, 1247,
	5, 1920,
	-2, 2834,
	-1, 1248,
	5, 1922,
	-2, 2879,
	-1, 1251,
	5, 1944,
	-2, 2872,
	-1, 1252,
	5, 1936,
	-2, 2873,
	-1, 1253,
	5, 1944,
	-2, 2874,
	-1, 1254,
	5, 1940,
	-2, 2875,
	-1, 1255,
	5, 1890,
	-2, 2847,
	-1, 1256,
	5, 1891,
	-2, 2848,
	-1, 1257,
	5, 1892,
	-2, 2836,
	-1, 1285,
	5, 1927,
	-2, 2880,
	-1, 1286,
	5, 1928,
	-2, 2870,
	-1, 1287,
	5, 1929,
	575, 1929,
	-2, 2837,
	-1, 1288,
	5, 1930,
	575, 1930,
	-2, 2838,
	-1, 1325,
	622, 2433,
	-2, 2424,
	-1, 1326,
	622, 2434,
	-2, 2425,
	-1, 1424,
	194, 2797,
	536, 2797,
	604, 2797,
	624, 2797,
	-2, 0,
	-1, 1429,
	1, 729,
	625, 729,
	-2, 1545,
	-1, 1576,
	375, 2398,
	435, 2398,
	479, 2398,
	614, 2398,
	-2, 2388,
	-1, 1582,
	194, 137,
	276, 137,
	340, 137,
	581, 137,
	-2, 2793,
	-1, 1583,
	194, 138,
	276, 138,
	340, 138,
	581, 138,
	-2, 2536,
	-1, 1584,
	194, 139,
	276, 139,
	340, 139,
	581, 139,
	-2, 2715,
	-1, 1590,
	626, 2398,
	-2, 2400,
	-1, 1610,
	1, 1393,
	440, 1348,
	479, 1348,
	598, 1348,
	621, 1393,
	623, 1393,
	625, 1393,
	-2, 1685,
	-1, 1616,
	210, 1490,
	230, 1490,
	448, 1490,
	-2, 0,
	-1, 1664,
	417, 1167,
	574, 1167,
	-2, 427,
	-1, 1681,
	45, 2396,
	-2, 1130,
	-1, 1688,
	1, 1393,
	621, 1393,
	623, 1393,
	625, 1393,
	-2, 1685,
	-1, 1696,
	4, 1418,
	21, 1418,
	22, 1418,
	23, 1418,
	24, 1418,
	25, 1418,
	26, 1418,
	27, 1418,
	28, 1418,
	30, 1418,
	31, 1418,
	37, 1418,
	41, 1418,
	43, 1418,
	44, 1418,
	46, 1418,
	47, 1418,
	48, 1418,
	49, 1418,
	50, 1418,
	51, 1418,
	52, 1418,
	53, 1418,
	54, 1418,
	56, 1418,
	57, 1418,
	58, 1418,
	59, 1418,
	61, 1418,
	62, 1418,
	63, 1418,
	64, 1418,
	65, 1418,
	66, 1418,
	67, 1418,
	71, 1418,
	72, 1418,
	73, 1418,
	74, 1418,
	76, 1418,
	77, 1418,
	78, 1418,
	82, 1418,
	83, 1418,
	84, 1418,
	85, 1418,
	86, 1418,
	87, 1418,
	88, 1418,
	91, 1418,
	92, 1418,
	93, 1418,
	94, 1418,
	95, 1418,
	97, 1418,
	99, 1418,
	100, 1418,
	101, 1418,
	102, 1418,
	103, 1418,
	104, 1418,
	106, 1418,
	107, 1418,
	108, 1418,
	110, 1418,
	111, 1418,
	112, 1418,
	120, 1418,
	121, 1418,
	122, 1418,
	123, 1418,
	124, 1418,
	126, 1418,
	127, 1418,
	128, 1418,
	129, 1418,
	131, 1418,
	132, 1418,
	133, 1418,
	135, 1418,
	136, 1418,
	137, 1418,
	139, 1418,
	140, 1418,
	141, 1418,
	144, 1418,
	145, 1418,
	146, 1418,
	148, 1418,
	149, 1418,
	150, 1418,
	152, 1418,
	153, 1418,
	154, 1418,
	156, 1418,
	157, 1418,
	158, 1418,
	159, 1418,
	160, 1418,
	161, 1418,
	162, 1418,
	163, 1418,
	164, 1418,
	165, 1418,
	166, 1418,
	167, 1418,
	168, 1418,
	169, 1418,
	170, 1418,
	171, 1418,
	172, 1418,
	180, 1418,
	181, 1418,
	182, 1418,
	183, 1418,
	187, 1418,
	189, 1418,
	190, 1418,
	191, 1418,
	193, 1418,
	196, 1418,
	197, 1418,
	198, 1418,
	199, 1418,
	200, 1418,
	201, 1418,
	202, 1418,
	203, 1418,
	204, 1418,
	205, 1418,
	206, 1418,
	207, 1418,
	208, 1418,
	209, 1418,
	211, 1418,
	212, 1418,
	214, 1418,
	215, 1418,
	217, 1418,
	218, 1418,
	219, 1418,
	220, 1418,
	221, 1418,
	222, 1418,
	223, 1418,
	224, 1418,
	225, 1418,
	226, 1418,
	228, 1418,
	229, 1418,
	231, 1418,
	232, 1418,
	233, 1418,
	234, 1418,
	235, 1418,
	240, 1418,
	241, 1418,
	242, 1418,
	245, 1418,
	246, 1418,
	247, 1418,
	248, 1418,
	250, 1418,
	252, 1418,
	253, 1418,
	255, 1418,
	257, 1418,
	258, 1418,
	259, 1418,
	261, 1418,
	265, 1418,
	266, 1418,
	267, 1418,
	268, 1418,
	269, 1418,
	270, 1418,
	272, 1418,
	273, 1418,
	274, 1418,
	276, 1418,
	277, 1418,
	279, 1418,
	280, 1418,
	283, 1418,
	284, 1418,
	285, 1418,
	286, 1418,
	287, 1418,
	288, 1418,
	289, 1418,
	292, 1418,
	293, 1418,
	294, 1418,
	295, 1418,
	297, 1418,
	298, 1418,
	299, 1418,
	300, 1418,
	301, 1418,
	302, 1418,
	303, 1418,
	304, 1418,
	305, 1418,
	306, 1418,
	307, 1418,
	308, 1418,
	309, 1418,
	310, 1418,
	311, 1418,
	312, 1418,
	313, 1418,
	314, 1418,
	315, 1418,
	316, 1418,
	317, 1418,
	318, 1418,
	320, 1418,
	322, 1418,
	323, 1418,
	324, 1418,
	325, 1418,
	326, 1418,
	327, 1418,
	328, 1418,
	329, 1418,
	330, 1418,
	331, 1418,
	332, 1418,
	333, 1418,
	334, 1418,
	335, 1418,
	336, 1418,
	337, 1418,
	338, 1418,
	340, 1418,
	341, 1418,
	345, 1418,
	346, 1418,
	347, 1418,
	348, 1418,
	350, 1418,
	351, 1418,
	352, 1418,
	353, 1418,
	354, 1418,
	357, 1418,
	359, 1418,
	360, 1418,
	362, 1418,
	363, 1418,
	364, 1418,
	367, 1418,
	368, 1418,
	369, 1418,
	371, 1418,
	373, 1418,
	374, 1418,
	375, 1418,
	376, 1418,
	377, 1418,
	378, 1418,
	379, 1418,
	380, 1418,
	381, 1418,
	382, 1418,
	383, 1418,
	384, 1418,
	385, 1418,
	387, 1418,
	388, 1418,
	389, 1418,
	390, 1418,
	391, 1418,
	392, 1418,
	393, 1418,
	394, 1418,
	395, 1418,
	396, 1418,
	397, 1418,
	398, 1418,
	399, 1418,
	400, 1418,
	401, 1418,
	403, 1418,
	404, 1418,
	405, 1418,
	407, 1418,
	408, 1418,
	409, 1418,
	410, 1418,
	411, 1418,
	412, 1418,
	413, 1418,
	414, 1418,
	415, 1418,
	416, 1418,
	417, 1418,
	418, 1418,
	419, 1418,
	421, 1418,
	423, 1418,
	424, 1418,
	425, 1418,
	431, 1418,
	432, 1418,
	433, 1418,
	435, 1418,
	436, 1418,
	437, 1418,
	438, 1418,
	439, 1418,
	440, 1418,
	441, 1418,
	442, 1418,
	443, 1418,
	444, 1418,
	446, 1418,
	447, 1418,
	448, 1418,
	450, 1418,
	451, 1418,
	452, 1418,
	453, 1418,
	454, 1418,
	455, 1418,
	456, 1418,
	458, 1418,
	459, 1418,
	460, 1418,
	461, 1418,
	462, 1418,
	463, 1418,
	464, 1418,
	465, 1418,
	466, 1418,
	467, 1418,
	468, 1418,
	469, 1418,
	470, 1418,
	472, 1418,
	473, 1418,
	474, 1418,
	475, 1418,
	476, 1418,
	477, 1418,
	479, 1418,
	480, 1418,
	481, 1418,
	482, 1418,
	483, 1418,
	484, 1418,
	486, 1418,
	487, 1418,
	488, 1418,
	489, 1418,
	490, 1418,
	491, 1418,
	492, 1418,
	493, 1418,
	495, 1418,
	497, 1418,
	498, 1418,
	499, 1418,
	500, 1418,
	501, 1418,
	502, 1418,
	503, 1418,
	504, 1418,
	505, 1418,
	506, 1418,
	507, 1418,
	508, 1418,
	509, 1418,
	510, 1418,
	511, 1418,
	512, 1418,
	513, 1418,
	514, 1418,
	516, 1418,
	517, 1418,
	519, 1418,
	520, 1418,
	522, 1418,
	523, 1418,
	524, 1418,
	525, 1418,
	526, 1418,
	527, 1418,
	528, 1418,
	529, 1418,
	531, 1418,
	532, 1418,
	533, 1418,
	534, 1418,
	535, 1418,
	537, 1418,
	539, 1418,
	540, 1418,
	541, 1418,
	542, 1418,
	543, 1418,
	544, 1418,
	545, 1418,
	547, 1418,
	548, 1418,
	549, 1418,
	550, 1418,
	552, 1418,
	553, 1418,
	556, 1418,
	557, 1418,
	558, 1418,
	559, 1418,
	560, 1418,
	561, 1418,
	562, 1418,
	564, 1418,
	567, 1418,
	568, 1418,
	569, 1418,
	570, 1418,
	571, 1418,
	572, 1418,
	574, 1418,
	575, 1418,
	576, 1418,
	577, 1418,
	578, 1418,
	579, 1418,
	580, 1418,
	581, 1418,
	586, 1418,
	587, 1418,
	588, 1418,
	589, 1418,
	590, 1418,
	591, 1418,
	-2, 0,
	-1, 1719,
	1, 572,
	621, 572,
	623, 572,
	625, 572,
	-2, 1656,
	-1, 1722,
	4, 2878,
	11, 2878,
	12, 2878,
	14, 2878,
	15, 2878,
	16, 2878,
	17, 2878,
	18, 2878,
	19, 2878,
	21, 2878,
	22, 2878,
	23, 2878,
	24, 2878,
	25, 2878,
	26, 2878,
	27, 2878,
	28, 2878,
	30, 2878,
	31, 2878,
	34, 2878,
	35, 2878,
	37, 2878,
	39, 2878,
	41, 2878,
	43, 2878,
	44, 2878,
	46, 2878,
	47, 2878,
	48, 2878,
	49, 2878,
	50, 2878,
	51, 2878,
	52, 2878,
	53, 2878,
	54, 2878,
	56, 2878,
	57, 2878,
	58, 2878,
	59, 2878,
	61, 2878,
	62, 2878,
	63, 2878,
	64, 2878,
	65, 2878,
	66, 2878,
	67, 2878,
	70, 2878,
	71, 2878,
	72, 2878,
	73, 2878,
	74, 2878,
	76, 2878,
	77, 2878,
	78, 2878,
	79, 2878,
	82, 2878,
	83, 2878,
	84, 2878,
	85, 2878,
	86, 2878,
	87, 2878,
	88, 2878,
	89, 2878,
	91, 2878,
	92, 2878,
	93, 2878,
	94, 2878,
	95, 2878,
	97, 2878,
	98, 2878,
	99, 2878,
	100, 2878,
	101, 2878,
	102, 2878,
	103, 2878,
	104, 2878,
	106, 2878,
	107, 2878,
	108, 2878,
	109, 2878,
	110, 2878,
	111, 2878,
	112, 2878,
	120, 2878,
	121, 2878,
	122, 2878,
	123, 2878,
	124, 2878,
	126, 2878,
	127, 2878,
	128, 2878,
	129, 2878,
	131, 2878,
	132, 2878,
	133, 2878,
	135, 2878,
	136, 2878,
	137, 2878,
	139, 2878,
	140, 2878,
	141, 2878,
	144, 2878,
	145, 2878,
	146, 2878,
	148, 2878,
	149, 2878,
	150, 2878,
	152, 2878,
	153, 2878,
	154, 2878,
	156, 2878,
	157, 2878,
	158, 2878,
	159, 2878,
	160, 2878,
	161, 2878,
	162, 2878,
	163, 2878,
	164, 2878,
	165, 2878,
	166, 2878,
	167, 2878,
	168, 2878,
	169, 2878,
	170, 2878,
	171, 2878,
	172, 2878,
	176, 2878,
	177, 2878,
	178, 2878,
	179, 2878,
	180, 2878,
	181, 2878,
	182, 2878,
	183, 2878,
	186, 2878,
	187, 2878,
	189, 2878,
	190, 2878,
	191, 2878,
	193, 2878,
	195, 2878,
	196, 2878,
	197, 2878,
	198, 2878,
	199, 2878,
	200, 2878,
	201, 2878,
	202, 2878,
	203, 2878,
	204, 2878,
	205, 2878,
	206, 2878,
	207, 2878,
	208, 2878,
	209, 2878,
	211, 2878,
	212, 2878,
	214, 2878,
	215, 2878,
	217, 2878,
	218, 2878,
	219, 2878,
	220, 2878,
	221, 2878,
	222, 2878,
	223, 2878,
	224, 2878,
	225, 2878,
	226, 2878,
	227, 2878,
	228, 2878,
	229, 2878,
	230, 2878,
	231, 2878,
	232, 2878,
	233, 2878,
	234, 2878,
	235, 2878,
	237, 2878,
	238, 2878,
	240, 2878,
	241, 2878,
	242, 2878,
	244, 2878,
	245, 2878,
	246, 2878,
	247, 2878,
	248, 2878,
	250, 2878,
	252, 2878,
	253, 2878,
	254, 2878,
	255, 2878,
	256, 2878,
	257, 2878,
	258, 2878,
	259, 2878,
	260, 2878,
	261, 2878,
	263, 2878,
	264, 2878,
	265, 2878,
	266, 2878,
	267, 2878,
	268, 2878,
	269, 2878,
	270, 2878,
	272, 2878,
	273, 2878,
	274, 2878,
	276, 2878,
	277, 2878,
	278, 2878,
	279, 2878,
	280, 2878,
	281, 2878,
	283, 2878,
	284, 2878,
	285, 2878,
	286, 2878,
	287, 2878,
	288, 2878,
	289, 2878,
	292, 2878,
	293, 2878,
	294, 2878,
	295, 2878,
	296, 2878,
	297, 2878,
	298, 2878,
	299, 2878,
	300, 2878,
	301, 2878,
	302, 2878,
	303, 2878,
	304, 2878,
	305, 2878,
	306, 2878,
	307, 2878,
	308, 2878,
	309, 2878,
	310, 2878,
	311, 2878,
	312, 2878,
	313, 2878,
	314, 2878,
	315, 2878,
	316, 2878,
	317, 2878,
	318, 2878,
	320, 2878,
	321, 2878,
	322, 2878,
	323, 2878,
	324, 2878,
	325, 2878,
	326, 2878,
	327, 2878,
	328, 2878,
	329, 2878,
	330, 2878,
	331, 2878,
	332, 2878,
	333, 2878,
	334, 2878,
	335, 2878,
	336, 2878,
	337, 2878,
	338, 2878,
	340, 2878,
	341, 2878,
	344, 2878,
	345, 2878,
	346, 2878,
	347, 2878,
	348, 2878,
	350, 2878,
	351, 2878,
	352, 2878,
	353, 2878,
	354, 2878,
	357, 2878,
	359, 2878,
	362, 2878,
	363, 2878,
	364, 2878,
	365, 2878,
	367, 2878,
	368, 2878,
	369, 2878,
	371, 2878,
	373, 2878,
	374, 2878,
	375, 2878,
	376, 2878,
	377, 2878,
	378, 2878,
	379, 2878,
	380, 2878,
	381, 2878,
	382, 2878,
	383, 2878,
	384, 2878,
	385, 2878,
	387, 2878,
	388, 2878,
	389, 2878,
	390, 2878,
	391, 2878,
	392, 2878,
	393, 2878,
	394, 2878,
	395, 2878,
	396, 2878,
	397, 2878,
	398, 2878,
	399, 2878,
	400, 2878,
	401, 2878,
	403, 2878,
	404, 2878,
	405, 2878,
	407, 2878,
	408, 2878,
	409, 2878,
	410, 2878,
	411, 2878,
	412, 2878,
	413, 2878,
	414, 2878,
	415, 2878,
	416, 2878,
	417, 2878,
	418, 2878,
	419, 2878,
	421, 2878,
	423, 2878,
	424, 2878,
	425, 2878,
	431, 2878,
	432, 2878,
	433, 2878,
	434, 2878,
	435, 2878,
	436, 2878,
	437, 2878,
	438, 2878,
	439, 2878,
	440, 2878,
	441, 2878,
	442, 2878,
	443, 2878,
	444, 2878,
	446, 2878,
	447, 2878,
	448, 2878,
	449, 2878,
	450, 2878,
	451, 2878,
	452, 2878,
	453, 2878,
	454, 2878,
	455, 2878,
	456, 2878,
	457, 2878,
	458, 2878,
	459, 2878,
	460, 2878,
	461, 2878,
	462, 2878,
	463, 2878,
	464, 2878,
	465, 2878,
	466, 2878,
	467, 2878,
	468, 2878,
	469, 2878,
	470, 2878,
	472, 2878,
	473, 2878,
	474, 2878,
	475, 2878,
	476, 2878,
	477, 2878,
	479, 2878,
	480, 2878,
	481, 2878,
	482, 2878,
	483, 2878,
	484, 2878,
	485, 2878,
	486, 2878,
	487, 2878,
	488, 2878,
	489, 2878,
	490, 2878,
	491, 2878,
	492, 2878,
	493, 2878,
	495, 2878,
	497, 2878,
	498, 2878,
	499, 2878,
	500, 2878,
	501, 2878,
	502, 2878,
	503, 2878,
	504, 2878,
	505, 2878,
	506, 2878,
	507, 2878,
	508, 2878,
	509, 2878,
	510, 2878,
	511, 2878,
	512, 2878,
	513, 2878,
	514, 2878,
	516, 2878,
	517, 2878,
	518, 2878,
	519, 2878,
	520, 2878,
	522, 2878,
	523, 2878,
	524, 2878,
	525, 2878,
	526, 2878,
	527, 2878,
	528, 2878,
	529, 2878,
	531, 2878,
	532, 2878,
	533, 2878,
	534, 2878,
	535, 2878,
	537, 2878,
	539, 2878,
	540, 2878,
	541, 2878,
	542, 2878,
	543, 2878,
	544, 2878,
	545, 2878,
	547, 2878,
	548, 2878,
	549, 2878,
	550, 2878,
	552, 2878,
	553, 2878,
	556, 2878,
	557, 2878,
	558, 2878,
	559, 2878,
	560, 2878,
	561, 2878,
	562, 2878,
	564, 2878,
	567, 2878,
	568, 2878,
	569, 2878,
	570, 2878,
	571, 2878,
	572, 2878,
	574, 2878,
	575, 2878,
	576, 2878,
	577, 2878,
	578, 2878,
	579, 2878,
	580, 2878,
	581, 2878,
	586, 2878,
	587, 2878,
	588, 2878,
	589, 2878,
	590, 2878,
	591, 2878,
	592, 2878,
	594, 2878,
	602, 2878,
	603, 2878,
	604, 2878,
	605, 2878,
	606, 2878,
	607, 2878,
	609, 2878,
	610, 2878,
	611, 2878,
	612, 2878,
	613, 2878,
	614, 2878,
	615, 2878,
	616, 2878,
	617, 2878,
	620, 2878,
	623, 2878,
	624, 2878,
	626, 2878,
	627, 2878,
	-2, 0,
	-1, 1727,
	194, 2754,
	536, 2754,
	604, 2754,
	624, 2754,
	-2, 0,
	-1, 1781,
	409, 962,
	477, 962,
	520, 962,
	541, 962,
	-2, 0,
	-1, 1792,
	1, 1490,
	621, 1490,
	623, 1490,
	625, 1490,
	-2, 0,
	-1, 1809,
	1, 957,
	621, 957,
	623, 957,
	625, 957,
	-2, 0,
	-1, 1810,
	1, 1001,
	621, 1001,
	623, 1001,
	625, 1001,
	-2, 0,
	-1, 1811,
	1, 1009,
	621, 1009,
	623, 1009,
	625, 1009,
	-2, 0,
	-1, 1814,
	1, 966,
	621, 966,
	623, 966,
	625, 966,
	-2, 0,
	-1, 1816,
	1, 972,
	621, 972,
	623, 972,
	625, 972,
	-2, 0,
	-1, 1819,
	1, 968,
	621, 968,
	623, 968,
	625, 968,
	-2, 0,
	-1, 1824,
	1, 982,
	621, 982,
	623, 982,
	625, 982,
	-2, 0,
	-1, 1857,
	1, 2736,
	621, 2736,
	623, 2736,
	624, 2736,
	625, 2736,
	-2, 0,
	-1, 1861,
	1, 1059,
	621, 1059,
	623, 1059,
	625, 1059,
	-2, 0,
	-1, 1878,
	1, 1540,
	625, 1540,
	-2, 1545,
	-1, 1881,
	175, 1699,
	188, 1699,
	282, 1699,
	355, 1699,
	-2, 1637,
	-1, 1981,
	155, 1658,
	175, 1658,
	188, 1658,
	249, 1658,
	282, 1658,
	355, 1658,
	366, 1658,
	554, 1658,
	-2, 2109,
	-1, 2042,
	623, 2284,
	-2, 0,
	-1, 2077,
	155, 1658,
	175, 1658,
	188, 1658,
	249, 1658,
	282, 1658,
	355, 1658,
	366, 1658,
	554, 1658,
	-2, 1791,
	-1, 2117,
	536, 2751,
	624, 2751,
	627, 2751,
	-2, 0,
	-1, 2134,
	622, 1932,
	-2, 1920,
	-1, 2166,
	194, 2751,
	624, 2751,
	627, 2751,
	-2, 0,
	-1, 2209,
	1, 731,
	625, 731,
	-2, 1545,
	-1, 2374,
	230, 272,
	-2, 2432,
	-1, 2375,
	230, 273,
	-2, 327,
	-1, 2486,
	1, 959,
	621, 959,
	623, 959,
	625, 959,
	-2, 0,
	-1, 2487,
	1, 1003,
	621, 1003,
	623, 1003,
	625, 1003,
	-2, 0,
	-1, 2488,
	1, 1011,
	621, 1011,
	623, 1011,
	625, 1011,
	-2, 0,
	-1, 2489,
	1, 1061,
	621, 1061,
	623, 1061,
	625, 1061,
	-2, 0,
	-1, 2530,
	1, 984,
	621, 984,
	623, 984,
	625, 984,
	-2, 0,
	-1, 2551,
	1, 1044,
	621, 1044,
	623, 1044,
	625, 1044,
	-2, 0,
	-1, 2598,
	455, 1726,
	456, 1726,
	-2, 1965,
	-1, 2629,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 1985,
	-1, 2630,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 1986,
	-1, 2631,
	98, 0,
	263, 0,
	264, 0,
	606, 0,
	607, 0,
	-2, 1987,
	-1, 2632,
	98, 0,
	263, 0,
	264, 0,
	606, 0,
	607, 0,
	-2, 1988,
	-1, 2633,
	98, 0,
	263, 0,
	264, 0,
	606, 0,
	607, 0,
	-2, 1989,
	-1, 2634,
	98, 0,
	263, 0,
	264, 0,
	606, 0,
	607, 0,
	-2, 1990,
	-1, 2635,
	98, 0,
	263, 0,
	264, 0,
	606, 0,
	607, 0,
	-2, 1991,
	-1, 2636,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 1992,
	-1, 2648,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2004,
	-1, 2649,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2005,
	-1, 2650,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2006,
	-1, 2654,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2013,
	-1, 2660,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2017,
	-1, 2662,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2025,
	-1, 2663,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2026,
	-1, 2664,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2027,
	-1, 2665,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2028,
	-1, 2839,
	5, 2436,
	194, 2295,
	622, 2433,
	-2, 2424,
	-1, 2840,
	194, 2296,
	-2, 2829,
	-1, 2841,
	194, 2297,
	-2, 2631,
	-1, 2842,
	194, 2298,
	-2, 2509,
	-1, 2843,
	194, 2299,
	-2, 2569,
	-1, 2844,
	194, 2300,
	-2, 2616,
	-1, 2845,
	194, 2301,
	-2, 2749,
	-1, 2846,
	194, 2302,
	-2, 2092,
	-1, 2917,
	1, 1792,
	2, 1792,
	109, 1792,
	155, 1792,
	175, 1792,
	188, 1792,
	195, 1792,
	213, 1792,
	216, 1792,
	244, 1792,
	249, 1792,
	260, 1792,
	278, 1792,
	282, 1792,
	321, 1792,
	355, 1792,
	360, 1792,
	366, 1792,
	445, 1792,
	449, 1792,
	554, 1792,
	565, 1792,
	583, 1792,
	584, 1792,
	585, 1792,
	595, 1792,
	621, 1792,
	623, 1792,
	625, 1792,
	627, 1792,
	-2, 1791,
	-1, 2930,
	622, 2405,
	-2, 2419,
	-1, 2932,
	1, 344,
	583, 344,
	-2, 1685,
	-1, 2962,
	622, 1931,
	-2, 1921,
	-1, 3168,
	1, 1393,
	440, 1348,
	479, 1348,
	598, 1348,
	621, 1393,
	623, 1393,
	625, 1393,
	-2, 1685,
	-1, 3347,
	361, 1729,
	-2, 2868,
	-1, 3348,
	361, 1730,
	-2, 2733,
	-1, 3352,
	455, 2361,
	456, 2361,
	-2, 2090,
	-1, 3353,
	455, 2365,
	456, 2365,
	-2, 2091,
	-1, 3354,
	455, 2362,
	456, 2362,
	-2, 2090,
	-1, 3355,
	455, 2366,
	456, 2366,
	-2, 2091,
	-1, 3368,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2015,
	-1, 3369,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2019,
	-1, 3375,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2021,
	-1, 3602,
	1, 726,
	621, 726,
	623, 726,
	625, 726,
	-2, 1545,
	-1, 3791,
	45, 2396,
	-2, 1131,
	-1, 3796,
	1, 1393,
	621, 1393,
	623, 1393,
	625, 1393,
	-2, 1685,
	-1, 3903,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2023,
	-1, 3910,
	254, 0,
	256, 0,
	344, 0,
	-2, 2042,
	-1, 3978,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2071,
	-1, 3979,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2072,
	-1, 3980,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2073,
	-1, 3984,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2077,
	-1, 3985,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2078,
	-1, 3986,
	14, 0,
	15, 0,
	16, 0,
	602, 0,
	603, 0,
	604, 0,
	-2, 2079,
	-1, 4034,
	622, 2406,
	-2, 2420,
	-1, 4237,
	624, 2985,
	-2, 1611,
	-1, 4294,
	254, 0,
	256, 0,
	344, 0,
	-2, 2043,
	-1, 4297,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2046,
	-1, 4298,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2048,
	-1, 4412,
	624, 2421,
	-2, 1428,
	-1, 4572,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2047,
	-1, 4573,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	227, 0,
	230, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2049,
	-1, 4584,
	254, 0,
	-2, 2082,
	-1, 4772,
	254, 0,
	-2, 2083,
	-1, 4992,
	53, 0,
	227, 0,
	281, 0,
	485, 0,
	592, 0,
	605, 0,
	-2, 2832,
}

const sqlPrivate = 57344

const sqlLast = 143044

var sqlAct = [...]int{
	283, 4978, 4927, 5183, 1405, 3506, 5054, 5110, 3241, 3098,
	5038, 4991, 4926, 5004, 4641, 5124, 4883, 3254, 3779, 4820,
	4864, 3780, 4277, 2371, 4938, 1625, 4960, 4917, 4812, 4941,
	5005, 4408, 5006, 4741, 1402, 5063, 1318, 4623, 1461, 4689,
	4718, 5002, 3943, 4705, 4776, 4532, 4990, 4044, 2269, 2449,
	4488, 4527, 3895, 1329, 4461, 4593, 4521, 4646, 3628, 3211,
	4561, 2608, 1149, 2461, 3813, 1600, 4229, 4512, 4221, 4514,
	3631, 4724, 4849, 4409, 2459, 1395, 4148, 874, 2178, 3361,
	4389, 3764, 3034, 2677, 4195, 1890, 4537, 4176, 2616, 4178,
	740, 812, 2191, 3634, 3807, 3753, 2609, 3844, 3769, 1140,
	2121, 1480, 3846, 3230, 4589, 874, 3616, 1397, 3266, 3768,
	3225, 3691, 2101, 3200, 3746, 3745, 3617, 2083, 3227, 3113,
	3618, 2422, 1388, 2278, 1573, 4037, 2944, 1745, 3552, 3771,
	3521, 3033, 3529, 4276, 3489, 1789, 3256, 953, 3261, 3510,
	2052, 3242, 3559, 4333, 2360, 1743, 751, 2358, 2306, 3175,
	3655, 2354, 5039, 4777, 3488, 949, 4, 871, 1148, 187,
	4004, 2613, 2910, 2755, 1989, 1959, 2122, 277, 2690, 276,
	2028, 3345, 869, 944, 3512, 1309, 2290, 2912, 1400, 2359,
	3260, 2872, 2757, 3204, 1683, 808, 3137, 2352, 2346, 2327,
	2334, 2909, 1199, 3212, 1444, 2257, 2261, 1459, 1878, 2746,
	2189, 1204, 2053, 2674, 1463, 2597, 1374, 2578, 2072, 2580,
	2945, 785, 1720, 3235, 2409, 875, 2408, 876, 3019, 1686,
	2349, 1602, 3058, 2890, 3772, 3059, 2973, 4884, 727, 2869,
	821, 2749, 749, 1024, 1431, 1312, 2899, 2062, 2880, 1291,
	2069, 1973, 1891, 2579, 880, 2835, 883, 1326, 2023, 2801,
	197, 2727, 198, 2581, 793, 187, 1385, 1892, 113, 1824,
	2368, 804, 970, 1718, 2435, 1809, 1711, 1620, 5055, 5111,
	1581, 2602, 880, 1456, 883, 1180, 1308, 275, 744, 45,
	741, 44, 753, 42, 33, 31, 1314, 864, 29, 1289,
	1897, 1195, 768, 3398, 925, 1877, 1045, 3392, 3508, 1631,
	824, 828, 926, 4018, 1144, 4019, 4045, 5000, 2180, 5194,
	1162, 2180, 5186, 2889, 1905, 1906, 3832, 1938, 1939, 1940,
	1949, 1950, 1951, 2180, 2180, 2180, 5174, 2180, 5173, 5143,
	2889, 5141, 2889, 4645, 4613, 4645, 2457, 1942, 1936, 5084,
	5040, 5030, 3822, 2380, 5041, 2889, 1908, 5028, 2201, 5025,
	5022, 2889, 4610, 5026, 5023, 4988, 1955, 4987, 4986, 2380,
	1815, 2380, 3271, 4976, 3823, 4974, 4969, 4645, 1206, 4645,
	4727, 4964, 4963, 1961, 4936, 4645, 4645, 4903, 4645, 4896,
	4895, 2953, 1907, 2889, 2889, 4888, 4863, 4860, 3832, 2380,
	2380, 4645, 1927, 4607, 4842, 4774, 1905, 1906, 4478, 2953,
	4755, 1924, 4720, 4664, 4258, 4663, 4078, 2380, 4652, 2380,
	4651, 4644, 2380, 1440, 4645, 4645, 1292, 1292, 3459, 3460,
	1936, 1306, 4600, 4574, 4360, 3569, 2380, 2953, 1908, 1133,
	4548, 1440, 1144, 4545, 3271, 1905, 1906, 3832, 1124, 4456,
	1123, 3587, 4436, 2889, 4296, 2458, 2889, 4245, 2953, 4239,
	4192, 3839, 4109, 3839, 4193, 1961, 4110, 4077, 1145, 1936,
	3584, 4078, 2975, 4008, 1907, 4029, 2201, 1908, 4027, 4030,
	4011, 3927, 4028, 3923, 2889, 2380, 2380, 2889, 2882, 1930,
	1931, 1932, 1933, 3838, 2198, 1344, 2949, 3839, 2201, 1913,
	1624, 3505, 1139, 3500, 1961, 2889, 3474, 2889, 3499, 1352,
	3450, 3448, 2889, 1907, 3451, 3449, 945, 3440, 3438, 3407,
	3409, 3441, 2889, 1927, 2889, 3408, 2198, 3270, 3252, 3251,
	2998, 3271, 2445, 2445, 2889, 3360, 2889, 2952, 2201, 1293,
	1946, 2953, 4904, 1956, 75, 2942, 948, 947, 1324, 2889,
	1935, 1937, 4778, 2934, 2888, 2444, 1633, 2380, 2889, 2445,
	4769, 4757, 76, 2201, 1295, 4727, 1296, 1952, 3271, 1953,
	4008, 2881, 4525, 4478, 2198, 2889, 1922, 1923, 4437, 81,
	4258, 1913, 4194, 3105, 3018, 2215, 1345, 2179, 244, 2283,
	2195, 3206, 1345, 2379, 1944, 3123, 3009, 2048, 1619, 4127,
	3898, 3871, 2070, 3465, 2339, 3824, 1791, 2926, 2925, 1928,
	1930, 1931, 1932, 1933, 1755, 2924, 1736, 2923, 2922, 90,
	1913, 1297, 1294, 1132, 244, 3825, 4760, 1131, 1130, 1129,
	1128, 1127, 1935, 1937, 1126, 1122, 1121, 1120, 246, 1119,
	1118, 1117, 1116, 1115, 1114, 3317, 4539, 1113, 1112, 2703,
	2704, 2705, 2722, 2723, 2724, 1111, 1110, 1954, 1109, 96,
	951, 1108, 1107, 1106, 1105, 1104, 1103, 1085, 1022, 1021,
	2725, 1935, 1937, 50, 246, 112, 1020, 1019, 1943, 2752,
	1018, 96, 109, 1017, 1016, 1015, 1014, 245, 1645, 1958,
	1013, 1928, 1012, 2181, 3459, 3460, 2181, 3477, 3478, 3479,
	1011, 1202, 238, 3397, 1010, 1961, 1009, 1008, 2181, 2181,
	2181, 239, 2181, 3475, 1007, 1006, 1005, 1004, 1003, 1002,
	1001, 1000, 999, 245, 2715, 998, 997, 996, 995, 994,
	1928, 993, 992, 2711, 991, 990, 989, 988, 987, 199,
	986, 975, 4351, 97, 974, 973, 968, 1934, 4308, 1639,
	2198, 2522, 967, 960, 959, 958, 943, 942, 899, 898,
	897, 896, 887, 886, 885, 884, 848, 819, 818, 817,
	1929, 1958, 3474, 799, 2753, 199, 271, 2198, 1998, 270,
	269, 3459, 3460, 268, 3477, 3478, 3479, 267, 266, 265,
	264, 263, 262, 1958, 261, 2198, 1407, 1204, 1947, 260,
	1633, 259, 1633, 258, 4292, 3026, 257, 3822, 1632, 256,
	1958, 2716, 2717, 2718, 2719, 255, 254, 253, 252, 251,
	250, 2710, 249, 248, 1204, 1204, 1204, 247, 4054, 4023,
	3840, 1960, 3555, 1624, 3420, 3403, 3394, 3297, 3503, 244,
	1201, 3185, 3220, 3026, 2957, 2931, 2916, 2073, 2031, 2570,
	2242, 2784, 1929, 2200, 2782, 2030, 2754, 2096, 2751, 3474,
	2000, 2768, 1483, 4541, 2766, 1872, 1204, 1627, 1934, 3465,
	1452, 1328, 1204, 1605, 3476, 1407, 1904, 1178, 2201, 1610,
	4758, 2985, 3504, 2034, 1345, 3238, 1448, 1449, 1450, 246,
	4636, 1929, 1435, 2179, 2198, 2195, 101, 2573, 2720, 2721,
	1204, 5015, 1204, 2198, 1204, 1945, 5014, 5011, 4989, 1644,
	4973, 1605, 4868, 1960, 1991, 1919, 1920, 1926, 1948, 1925,
	1921, 2881, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914,
	1915, 2713, 2031, 4766, 4588, 4546, 4318, 1407, 245, 2030,
	4317, 1688, 1345, 1591, 4524, 4366, 1759, 4331, 1321, 4781,
	1817, 1740, 1960, 238, 195, 104, 3465, 1605, 108, 1586,
	4330, 4324, 239, 244, 1605, 4323, 4322, 2029, 1305, 4315,
	1638, 4314, 4312, 1204, 4307, 1204, 156, 4304, 1413, 3475,
	1605, 4303, 4115, 1249, 4191, 244, 4058, 1578, 4205, 1204,
	199, 1204, 4057, 952, 1633, 4056, 1379, 1382, 156, 4033,
	3999, 3998, 1427, 3997, 1392, 3919, 1623, 1909, 1910, 1911,
	1912, 1914, 1915, 246, 1692, 1695, 1429, 3914, 1991, 3550,
	3024, 1905, 1906, 2756, 3481, 3496, 3470, 3468, 3469, 3461,
	3462, 3463, 3464, 3466, 3467, 246, 1476, 3487, 1570, 1575,
	1605, 1466, 1467, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 1608, 1908, 3458, 880, 3455, 883, 3454, 1958,
	1204, 160, 245, 1204, 1698, 3452, 3475, 3447, 3446, 3445,
	1455, 1396, 1147, 3442, 3439, 1421, 200, 238, 3419, 1992,
	3402, 1990, 2425, 244, 245, 244, 239, 1320, 3395, 1907,
	3393, 1993, 2714, 3253, 2917, 2739, 1904, 1903, 2387, 238,
	2385, 3222, 5189, 1622, 5132, 1621, 5131, 5053, 239, 5051,
	1330, 3945, 196, 1681, 199, 1458, 187, 187, 4783, 1468,
	1469, 4928, 4125, 4206, 1322, 4540, 4847, 3459, 3460, 4832,
	1760, 1723, 1725, 246, 4828, 246, 946, 4827, 3023, 4826,
	3476, 1576, 4806, 2750, 1590, 1396, 1958, 4805, 4803, 4780,
	4779, 4753, 2680, 1960, 4739, 4736, 4735, 244, 4728, 4716,
	3459, 3460, 3501, 4715, 4660, 1204, 1204, 1204, 1204, 1204,
	1204, 1204, 1204, 4631, 1435, 2966, 3023, 1435, 1721, 4586,
	4569, 4568, 245, 4508, 245, 2686, 4504, 4501, 4479, 3459,
	3460, 4350, 4329, 4259, 4113, 4112, 1913, 238, 1204, 238,
	1833, 4093, 4092, 4090, 1204, 1197, 239, 246, 239, 3023,
	4014, 4002, 3909, 1978, 3841, 1145, 1396, 1396, 244, 4761,
	244, 3459, 3460, 3833, 3799, 3710, 244, 3476, 1714, 3666,
	3633, 3578, 3424, 1882, 199, 3576, 199, 2700, 2701, 2702,
	2726, 2712, 2706, 3423, 2708, 2709, 2707, 2694, 2695, 2696,
	2697, 2698, 2699, 4206, 3418, 3384, 245, 2955, 3199, 3051,
	2037, 2036, 2035, 2032, 2024, 2022, 2964, 2963, 246, 1765,
	246, 238, 1876, 1735, 2928, 2921, 246, 244, 2887, 2764,
	239, 1977, 2095, 2051, 2046, 3471, 3472, 3473, 2045, 1754,
	2044, 2043, 3470, 3468, 3469, 3461, 3462, 3463, 3464, 3466,
	3467, 2042, 3465, 2041, 2040, 1462, 2039, 2038, 199, 1204,
	1204, 1204, 3221, 1980, 2019, 1204, 2018, 245, 2017, 245,
	2016, 2015, 1326, 2014, 1326, 245, 2013, 246, 2012, 2011,
	2010, 2009, 238, 2008, 238, 3465, 2007, 2006, 1782, 1483,
	238, 239, 2005, 239, 2004, 1993, 1979, 1976, 1971, 239,
	1420, 1204, 1712, 1349, 874, 1407, 2050, 1818, 1340, 4782,
	2139, 874, 4511, 1407, 3465, 1407, 2099, 4362, 4608, 199,
	4364, 199, 3471, 3472, 3473, 4300, 245, 3237, 1883, 3470,
	3468, 3469, 3461, 3462, 3463, 3464, 3466, 3467, 4053, 2118,
	4026, 238, 4017, 3406, 1887, 1999, 3465, 2168, 1879, 2170,
	239, 1905, 1906, 2919, 1886, 4052, 1992, 1717, 3574, 1124,
	1974, 1123, 3828, 2091, 3099, 244, 5123, 2107, 3669, 4439,
	244, 4836, 1447, 4829, 4729, 1407, 1445, 1881, 199, 3459,
	3460, 1204, 1462, 1908, 2033, 4544, 4482, 4481, 2106, 4480,
	4438, 3459, 3460, 1900, 1901, 3475, 4353, 244, 3547, 4265,
	2056, 2057, 4264, 1440, 4263, 1204, 1145, 2227, 2226, 2203,
	4262, 1462, 2235, 1483, 2100, 246, 5007, 1462, 2185, 1907,
	246, 2187, 2783, 4759, 3475, 2781, 4261, 2192, 1292, 4260,
	1462, 2194, 2767, 4079, 187, 2765, 2197, 3077, 1460, 2272,
	1446, 4021, 2233, 4020, 3843, 3842, 2059, 246, 2080, 1905,
	1906, 3835, 3834, 2025, 2026, 3730, 3475, 5080, 1983, 1435,
	4635, 2113, 1988, 5078, 245, 4725, 5003, 2240, 2162, 245,
	2206, 880, 2073, 883, 2317, 1958, 1905, 1906, 880, 238,
	883, 1908, 2112, 2081, 238, 4209, 3896, 2104, 239, 4139,
	2031, 244, 2752, 239, 1874, 1440, 245, 2030, 3444, 3443,
	1936, 3366, 3062, 1443, 1958, 1834, 1781, 4108, 1908, 2078,
	2071, 238, 2014, 3135, 2014, 2002, 199, 1907, 2221, 1101,
	239, 199, 40, 1440, 3782, 4073, 3781, 4074, 3635, 4799,
	4798, 2450, 1145, 2230, 4719, 1961, 1958, 5036, 1304, 1790,
	2049, 246, 4522, 3267, 1907, 2183, 3754, 4468, 199, 2336,
	4799, 1791, 2362, 3700, 4213, 2090, 3476, 2089, 2075, 2088,
	2086, 2085, 2207, 1324, 2084, 1324, 3465, 1102, 4188, 4199,
	4145, 4136, 2361, 1590, 1911, 1912, 1914, 1915, 1605, 1605,
	4118, 3508, 3868, 2209, 2119, 3476, 2105, 2753, 1483, 3600,
	245, 2542, 2455, 2393, 4590, 3947, 2747, 4655, 5012, 2962,
	2478, 3412, 4627, 2047, 2027, 238, 3762, 2419, 3120, 1691,
	1615, 1416, 1378, 5027, 239, 2426, 1716, 3476, 5024, 3818,
	3060, 3117, 3115, 1590, 1913, 4084, 1769, 4821, 3101, 4528,
	4935, 1748, 2316, 2205, 3638, 4103, 3234, 3296, 3737, 5115,
	938, 5060, 199, 5082, 5081, 4658, 4654, 2247, 4633, 2248,
	3890, 1913, 3604, 2232, 4158, 2323, 4684, 4425, 1666, 2255,
	2256, 1717, 2313, 1658, 2321, 2999, 5185, 5013, 3177, 2754,
	2331, 2751, 1099, 4837, 2551, 2236, 3475, 2548, 2133, 2228,
	3463, 3464, 3466, 3467, 2326, 1605, 1097, 1605, 1095, 1605,
	2283, 2231, 2326, 2249, 2250, 1831, 3606, 1832, 4677, 4666,
	2253, 2254, 1935, 1937, 4471, 2372, 2377, 1605, 1605, 2277,
	3469, 3461, 3462, 3463, 3464, 3466, 3467, 1081, 1447, 2326,
	1093, 1605, 1090, 2588, 4157, 1153, 1617, 2289, 2536, 2210,
	4470, 4156, 2549, 1605, 2534, 1605, 1605, 1605, 3468, 3469,
	3461, 3462, 3463, 3464, 3466, 3467, 2222, 880, 1667, 883,
	939, 2366, 4155, 2364, 2365, 4147, 1958, 4133, 4132, 874,
	2550, 1928, 2281, 1447, 4130, 4129, 2311, 2324, 4117, 4076,
	2415, 1143, 3461, 3462, 3463, 3464, 3466, 3467, 4075, 3743,
	3742, 1204, 3702, 2477, 2586, 3568, 1446, 3417, 3416, 2956,
	3415, 3414, 3668, 3370, 3133, 1622, 2420, 1621, 3575, 3132,
	1830, 3122, 3111, 2432, 3103, 3093, 3092, 2310, 2307, 3087,
	3086, 2322, 1767, 3085, 1958, 3067, 3066, 2330, 1204, 3027,
	2943, 791, 2661, 3022, 3022, 1880, 2797, 4423, 4656, 2453,
	2482, 1446, 3081, 4628, 2796, 4420, 2756, 3476, 3020, 3020,
	2618, 1958, 1704, 1702, 1703, 1701, 2470, 2378, 3231, 4371,
	1762, 2440, 791, 2463, 1204, 5116, 1204, 5061, 2970, 1464,
	1465, 1441, 2399, 1204, 1087, 1142, 2139, 2139, 1483, 2947,
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	1204, 1204, 1204, 1204, 1204, 1204, 1721, 1204, 1721, 1204,
	1204, 1204, 1204, 2429, 2572, 2442, 2507, 3635, 2401, 2400,
	1716, 1441, 1929, 2418, 5118, 2325, 880, 2362, 883, 3698,
	1430, 4567, 2434, 2325, 2438, 1204, 2577, 2590, 2469, 1204,
	1204, 2587, 1714, 1145, 2437, 1145, 2437, 1204, 2446, 1421,
	2447, 1204, 2563, 1204, 1204, 2450, 2750, 1915, 3869, 1813,
	2325, 1483, 2568, 1321, 2474, 1321, 1662, 1204, 1204, 1204,
	1204, 1763, 4381, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	1204, 4440, 1144, 1960, 1437, 3467, 1464, 1465, 2588, 3470,
	3468, 3469, 3461, 3462, 3463, 3464, 3466, 3467, 3064, 1204,
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 2486, 2560,
	2494, 1618, 1204, 2497, 1870, 2237, 2238, 2585, 1675, 1813,
	1783, 1464, 1465, 1364, 1326, 5119, 3006, 2487, 2319, 3274,
	2282, 1483, 2614, 2615, 1464, 1465, 2747, 3036, 4380, 2676,
	1326, 2676, 1843, 2933, 1437, 1680, 2530, 4419, 3324, 2586,
	1909, 1910, 1911, 1912, 1914, 1915, 1204, 1483, 790, 2279,
	2601, 3312, 1441, 941, 940, 4421, 5081, 3050, 2562, 1442,
	1812, 1829, 2540, 1779, 1918, 1916, 1917, 1909, 1910, 1911,
	1912, 1914, 1915, 1873, 1849, 4814, 2576, 1810, 1791, 790,
	5009, 2488, 2547, 2589, 2275, 2574, 2575, 3699, 3343, 5147,
	3119, 2491, 1320, 2692, 1320, 4417, 2582, 2485, 1124, 5117,
	2605, 1124, 1124, 2606, 2607, 3459, 3460, 2743, 4087, 3603,
	2728, 2729, 1791, 1885, 2528, 2280, 2495, 3049, 1419, 1442,
	1812, 1438, 4100, 3118, 2728, 2744, 2584, 2439, 5121, 1322,
	1439, 1322, 3358, 3878, 3877, 3314, 3116, 3114, 2756, 1847,
	2904, 1811, 2684, 1687, 3039, 2276, 3936, 4789, 3013, 2682,
	4469, 2792, 1407, 1407, 3327, 4168, 2993, 2794, 984, 4131,
	1141, 792, 2795, 4128, 2688, 2798, 4061, 2799, 2800, 4048,
	2838, 2838, 2852, 2946, 2728, 1437, 1292, 2873, 2875, 1768,
	936, 1438, 935, 2879, 3749, 1145, 3741, 2994, 2896, 3685,
	1439, 3696, 792, 1483, 2741, 1145, 2587, 3121, 1685, 1145,
	1091, 2091, 4816, 4566, 2080, 3084, 3065, 3609, 2972, 2061,
	2384, 2383, 2980, 2658, 1091, 4169, 1091, 1826, 2984, 5093,
	2569, 2988, 2969, 2918, 2133, 2133, 2950, 2929, 2903, 187,
	2908, 2685, 2995, 2914, 2915, 2847, 2895, 2834, 2877, 1435,
	2968, 5102, 2139, 4098, 2864, 2885, 2886, 1983, 1092, 3686,
	1091, 2283, 2897, 2901, 2902, 2535, 739, 2991, 2958, 4167,
	1442, 2533, 5101, 5010, 2308, 2078, 2987, 2941, 4114, 3021,
	3063, 3357, 2585, 2136, 2033, 4422, 3002, 2996, 3350, 3351,
	3465, 2559, 5149, 734, 5068, 4282, 4281, 3012, 1145, 3677,
	1483, 3872, 3750, 3684, 3326, 2065, 3815, 3933, 3381, 3004,
	1412, 3816, 2860, 846, 1605, 1324, 3320, 4415, 1664, 3622,
	2337, 3028, 1440, 2756, 1407, 3097, 3747, 4912, 3168, 2965,
	4900, 1324, 1438, 2281, 3172, 4418, 3323, 2990, 2291, 3379,
	4618, 1439, 2283, 5120, 3100, 1204, 1204, 3005, 1204, 2979,
	2561, 2314, 1396, 2982, 2068, 2983, 2974, 2025, 2026, 3678,
	1135, 2997, 1073, 2295, 3038, 1661, 3089, 2989, 3003, 1764,
	2063, 3088, 3025, 874, 4822, 1407, 3713, 1687, 2180, 3210,
	3265, 5008, 1440, 1088, 4844, 3264, 3082, 1137, 2066, 3934,
	2303, 3112, 4404, 3203, 3173, 2309, 3815, 2656, 3605, 2286,
	2659, 1396, 5127, 3676, 1844, 1841, 1605, 2357, 2493, 3000,
	3054, 4694, 4980, 1630, 4981, 1637, 789, 1643, 3070, 1605,
	2292, 1605, 1363, 3650, 3068, 1792, 3069, 1605, 4397, 844,
	1616, 2064, 1347, 1396, 1396, 1136, 3218, 3083, 3171, 1605,
	3014, 3015, 3041, 3044, 3016, 3017, 3325, 3031, 888, 2854,
	2304, 2655, 4498, 3075, 3076, 3078, 3079, 3080, 3091, 2287,
	3656, 2340, 3022, 1407, 3128, 1407, 2347, 2356, 3134, 2320,
	3523, 5067, 2020, 3169, 3170, 895, 3572, 3042, 3277, 3278,
	1958, 1074, 3649, 4398, 3376, 4416, 1734, 1204, 1739, 3284,
	3285, 3286, 4815, 2318, 2302, 976, 4181, 3298, 3734, 3299,
	3090, 3214, 1753, 2285, 1758, 2127, 4179, 880, 3102, 883,
	5046, 3095, 3372, 3109, 2675, 3377, 3658, 3037, 2337, 3382,
	5047, 4278, 977, 1440, 4563, 2273, 4898, 3126, 3127, 3125,
	3208, 3245, 2296, 4579, 5091, 3623, 4946, 4450, 2672, 1576,
	880, 3178, 883, 1842, 3262, 2932, 3268, 2337, 3294, 3259,
	5145, 1845, 1778, 1780, 1204, 1622, 2756, 3183, 758, 2067,
	1204, 1204, 2262, 187, 3748, 985, 3269, 2263, 2738, 2670,
	1816, 4899, 3275, 3300, 2529, 1970, 1590, 3293, 3249, 3247,
	3197, 2490, 2341, 1848, 3657, 3207, 4099, 2484, 3291, 3422,
	2900, 4183, 3303, 5150, 3305, 2913, 3307, 1144, 3949, 2297,
	2298, 2282, 1884, 2333, 3302, 5134, 3304, 1418, 3306, 2262,
	3308, 3309, 3240, 3329, 2263, 3331, 1204, 1204, 3250, 2683,
	2133, 4510, 1204, 4182, 2305, 2293, 1766, 1721, 1073, 4272,
	2332, 1079, 1078, 3318, 2318, 1204, 1204, 4605, 3096, 4474,
	4515, 1204, 1204, 4049, 3248, 1353, 3332, 1204, 3229, 3334,
	1846, 2320, 735, 1137, 1351, 2657, 845, 4283, 3892, 3341,
	4516, 5125, 4865, 961, 4952, 2328, 4882, 4562, 4695, 3180,
	3178, 4685, 4858, 2294, 3182, 3522, 4738, 3301, 1075, 4473,
	4499, 4693, 5066, 2264, 2315, 2907, 4472, 4691, 4227, 2317,
	966, 3803, 1204, 1204, 1204, 4393, 2280, 3586, 1204, 2940,
	2407, 2268, 4394, 3373, 889, 890, 2058, 847, 1204, 3338,
	1350, 843, 3378, 4399, 2666, 1321, 3461, 3462, 3463, 3464,
	3466, 3467, 3380, 1343, 3405, 1204, 2329, 4850, 2312, 3349,
	2264, 1321, 1797, 1590, 4204, 726, 4690, 736, 2667, 1895,
	4851, 4279, 4327, 3339, 1396, 2668, 3340, 1074, 2268, 2673,
	1894, 978, 979, 2181, 3988, 4396, 2604, 2284, 2601, 3344,
	3272, 2223, 2319, 1889, 4692, 5155, 3560, 3279, 4653, 3280,
	4747, 3359, 2220, 4400, 4852, 5045, 3629, 5126, 2265, 2270,
	1894, 4796, 4228, 3043, 1073, 4151, 4181, 4134, 737, 3396,
	738, 4085, 4083, 3804, 3795, 3625, 4179, 3219, 1590, 2299,
	1590, 3213, 3201, 4180, 2433, 2427, 2421, 2413, 1076, 1137,
	2392, 2344, 4564, 2391, 5128, 3131, 3932, 1204, 1204, 1204,
	1204, 4866, 3371, 2594, 1655, 2265, 2270, 1204, 1204, 1204,
	1355, 4003, 1204, 4918, 1134, 3071, 1077, 3893, 2087, 2136,
	2136, 4854, 1204, 1326, 1483, 798, 1334, 2316, 1204, 2218,
	1204, 3515, 3516, 3026, 1320, 892, 891, 1893, 4885, 1326,
	1894, 1336, 2541, 2266, 2860, 4853, 2891, 4732, 2065, 2216,
	1320, 2342, 4230, 4069, 3400, 3401, 4533, 1483, 2300, 3404,
	4284, 4183, 3198, 4855, 4513, 1366, 4711, 1893, 1331, 1326,
	1080, 1322, 1483, 4709, 4630, 2219, 3641, 1079, 1078, 1145,
	2475, 1970, 2894, 1074, 1407, 3411, 2467, 1322, 4395, 3637,
	2266, 4016, 3662, 4182, 2139, 2343, 2273, 2068, 1483, 962,
	963, 3636, 893, 894, 3364, 3553, 3540, 3342, 1407, 3520,
	1895, 3519, 1710, 2898, 1337, 2456, 1407, 2389, 3567, 1814,
	3588, 4043, 2669, 2893, 1075, 2860, 2860, 2939, 2892, 4405,
	4406, 2066, 2671, 4328, 3989, 2938, 980, 981, 1204, 2260,
	1895, 1338, 3582, 2273, 2937, 3990, 2595, 1893, 4285, 1708,
	1204, 2936, 3660, 1820, 1819, 2935, 4187, 2271, 3205, 1696,
	983, 2272, 1142, 3527, 5154, 2246, 4642, 4809, 1407, 3554,
	2376, 4489, 3624, 1697, 2139, 3047, 4200, 4091, 2431, 3549,
	3757, 4080, 5088, 4713, 1335, 4616, 2355, 4614, 3176, 837,
	4177, 1204, 3865, 3498, 3072, 3073, 3661, 2272, 3590, 2258,
	3601, 3592, 3593, 3585, 2271, 4867, 3596, 1407, 3597, 3517,
	3598, 3674, 3607, 3525, 1435, 2061, 3570, 3558, 3594, 3562,
	3563, 3564, 3565, 3546, 3509, 838, 1407, 3273, 1407, 3539,
	3688, 3181, 3690, 1079, 1078, 3526, 3493, 3494, 3495, 3179,
	3538, 2127, 2127, 2259, 1204, 1204, 3541, 3542, 2336, 2460,
	3701, 4731, 1483, 3640, 1076, 2336, 3645, 4070, 4712, 3647,
	3573, 3524, 4625, 1407, 2361, 1772, 3544, 3724, 3545, 3626,
	1798, 4924, 4810, 4180, 1407, 4643, 3714, 3621, 3732, 4638,
	1075, 4637, 1077, 4375, 4374, 2267, 3579, 3580, 4932, 3581,
	3561, 3613, 3614, 4915, 4334, 4039, 4005, 3671, 2763, 4357,
	1866, 2065, 2067, 4954, 964, 965, 1605, 2860, 2860, 2860,
	2860, 4626, 3653, 3639, 1324, 4606, 3643, 5092, 3673, 1407,
	1605, 797, 1605, 5090, 2555, 4856, 1483, 3595, 3591, 3675,
	1324, 4857, 2267, 874, 1605, 1868, 1080, 3687, 3602, 1865,
	3632, 3694, 5029, 1863, 1838, 1836, 1605, 1808, 4081, 4040,
	2068, 3689, 4697, 3751, 1806, 3610, 3697, 1804, 1407, 4840,
	1324, 1709, 3796, 4830, 4925, 4811, 2063, 4612, 4585, 2245,
	1802, 3711, 1800, 4368, 3723, 1326, 4041, 1794, 4038, 3811,
	4326, 3809, 4186, 1788, 2066, 3731, 3490, 3716, 1786, 3718,
	3659, 2353, 3722, 1706, 3787, 3908, 3728, 3667, 1707, 3866,
	1605, 3863, 3703, 1590, 1590, 2136, 3583, 3680, 3794, 982,
	1076, 1332, 1605, 3453, 1605, 3681, 3683, 3383, 3202, 3682,
	3110, 3104, 3061, 2967, 2564, 2466, 2451, 2064, 2098, 2094,
	3738, 1869, 1747, 4373, 3491, 3888, 3706, 3887, 1077, 1889,
	3802, 3316, 3712, 3831, 3315, 3820, 3282, 3752, 2532, 3755,
	2583, 2499, 3725, 1825, 2502, 2370, 3739, 3729, 2412, 2762,
	2390, 3091, 2133, 3733, 1483, 2169, 1333, 1483, 2167, 2003,
	1761, 3767, 1679, 3870, 5001, 4451, 4138, 4137, 4455, 1089,
	3805, 4435, 1590, 4914, 4531, 4460, 3880, 4448, 3740, 4386,
	3744, 2111, 1080, 4385, 3715, 3810, 4226, 4217, 4154, 3929,
	880, 1204, 883, 5064, 2418, 3759, 2105, 1204, 1204, 3262,
	2557, 1204, 1204, 1204, 3812, 1204, 2556, 4135, 3262, 4106,
	4104, 3861, 2523, 4357, 1204, 2139, 4526, 1867, 3791, 3069,
	4082, 1864, 3790, 1204, 3792, 1862, 1837, 1835, 1204, 1807,
	3798, 3793, 2133, 3783, 1483, 3232, 1805, 3224, 3217, 1803,
	187, 187, 3209, 1204, 3194, 2067, 3193, 3819, 3817, 3862,
	3886, 1483, 1801, 3174, 1799, 3829, 3830, 3826, 3885, 1793,
	2986, 2139, 2139, 1204, 1204, 1787, 1204, 1204, 1204, 3874,
	1785, 3875, 2981, 3876, 2388, 1705, 2386, 3883, 4042, 2363,
	2338, 2301, 2288, 2274, 1204, 2202, 3889, 3894, 1204, 2199,
	2139, 2139, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	1204, 1204, 2196, 1204, 2193, 3911, 2188, 2127, 3961, 2186,
	3962, 1204, 1204, 2139, 2531, 2182, 1145, 2498, 1204, 3921,
	3922, 2369, 1396, 1094, 1096, 1098, 2173, 3808, 3726, 1204,
	2350, 5059, 1301, 2347, 4985, 1898, 3891, 4515, 3362, 5082,
	1326, 1326, 2224, 4808, 1204, 3335, 1324, 2212, 2213, 3333,
	3167, 4966, 4876, 4547, 4467, 4372, 3263, 4516, 2567, 1302,
	3608, 2241, 1660, 3022, 3022, 4749, 3048, 4742, 4238, 2283,
	1860, 1861, 2489, 2526, 1387, 2521, 1483, 4965, 3020, 3045,
	3918, 3916, 2496, 4035, 4426, 1905, 1906, 2430, 1386, 1407,
	1407, 4462, 1784, 3928, 1321, 3052, 3944, 1481, 4768, 3935,
	3937, 3938, 4640, 4335, 1407, 1407, 2565, 874, 1407, 4313,
	1321, 1457, 3951, 4022, 1212, 3654, 3053, 2614, 3952, 3074,
	1902, 3939, 1414, 4046, 4047, 1590, 3859, 1204, 1354, 3053,
	5076, 3964, 3864, 3959, 1454, 4150, 3363, 3960, 4059, 4060,
	1321, 3966, 4066, 3992, 3958, 5037, 2614, 3967, 1899, 3727,
	3192, 2351, 2566, 1907, 1204, 4214, 272, 2414, 1425, 4149,
	3117, 279, 279, 279, 3993, 729, 730, 3115, 745, 729,
	745, 756, 1303, 2211, 796, 1387, 1387, 4001, 816, 3996,
	187, 2598, 829, 823, 823, 823, 3124, 1204, 1204, 3531,
	4067, 279, 3108, 3057, 4068, 3106, 4009, 4010, 3055, 4000,
	1905, 1906, 2860, 2860, 723, 4923, 3107, 3056, 4905, 4875,
	4869, 4807, 957, 4733, 4012, 4013, 4704, 4617, 4224, 279,
	4216, 4203, 4032, 1204, 1204, 3797, 3239, 4024, 5122, 2878,
	2208, 1204, 1908, 1320, 4086, 2120, 4639, 3094, 1614, 1613,
	4956, 1138, 4105, 3571, 4107, 4957, 2355, 5153, 4871, 1320,
	1624, 1605, 3459, 3460, 4305, 1605, 4956, 4025, 1605, 1905,
	1906, 4957, 3856, 1407, 4062, 2758, 5095, 4165, 1907, 4051,
	1322, 2252, 3008, 2133, 880, 3854, 883, 2251, 3007, 1320,
	4123, 4055, 2793, 1771, 2252, 3847, 1322, 3532, 2139, 1770,
	2251, 4223, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
	2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
	2860, 2860, 4152, 2860, 4124, 4126, 1322, 4153, 1840, 2133,
	2133, 1839, 4734, 4678, 4464, 4111, 4459, 2855, 4458, 4301,
	1605, 1324, 1324, 4140, 4116, 4050, 1204, 3940, 4231, 3530,
	3537, 3720, 3717, 3321, 1326, 1204, 1997, 4240, 2133, 2133,
	1996, 4196, 3337, 729, 729, 1605, 1605, 1605, 4170, 4171,
	2571, 279, 1605, 1605, 1605, 5138, 5103, 4007, 4119, 4971,
	3858, 4247, 4185, 4909, 4164, 3536, 4908, 4173, 4159, 4210,
	3069, 2133, 4907, 4839, 1605, 4166, 1605, 3849, 4838, 4785,
	4707, 4670, 1483, 4609, 4603, 4232, 4506, 4486, 4424, 4235,
	4363, 3128, 3848, 4254, 4189, 4198, 4244, 4251, 4190, 4163,
	4102, 4094, 4146, 1598, 3801, 3800, 4202, 3646, 3589, 1483,
	4174, 3322, 1204, 1204, 4211, 4255, 3313, 3290, 1204, 1204,
	2139, 4234, 3289, 1204, 1204, 3288, 1204, 3287, 4215, 3223,
	4220, 1204, 3196, 3195, 3046, 2977, 1321, 2136, 2971, 2960,
	2959, 1650, 1204, 2948, 3632, 2687, 2558, 2527, 3857, 2520,
	2519, 2518, 2517, 2516, 4218, 2428, 3186, 2402, 1204, 3189,
	2398, 3191, 2397, 2396, 3245, 4233, 4236, 2395, 2394, 2176,
	2175, 2174, 2172, 4242, 4241, 3533, 3534, 3535, 4266, 4246,
	2110, 3262, 2109, 4269, 1859, 1858, 4252, 4286, 4253, 3845,
	1795, 1674, 1673, 1672, 1729, 1671, 1670, 1669, 1668, 1663,
	1659, 4268, 1657, 1656, 1396, 1595, 1594, 1593, 3236, 1474,
	1744, 3236, 1473, 1472, 1471, 1470, 1417, 2136, 1373, 1326,
	4295, 4270, 1372, 1371, 1370, 4275, 1369, 1326, 4287, 1368,
	4280, 1483, 1483, 1367, 1483, 1365, 1360, 1359, 1358, 1357,
	1356, 1326, 950, 8, 1284, 2214, 1100, 1086, 4813, 4403,
	4340, 4402, 1605, 1605, 4401, 2554, 95, 1665, 912, 89,
	2345, 4101, 1051, 4953, 2097, 1483, 4843, 1648, 920, 4934,
	1773, 4212, 3648, 3136, 2501, 1320, 1796, 3553, 2503, 3548,
	2920, 2418, 4897, 4309, 3421, 4775, 4578, 2761, 2001, 3502,
	1204, 91, 1188, 1234, 3310, 4497, 4496, 4387, 4088, 4175,
	3770, 1326, 4184, 1326, 4358, 4359, 4493, 4299, 4492, 4325,
	2124, 2126, 1322, 3855, 3850, 3851, 3852, 3853, 1152, 1486,
	4979, 2225, 5144, 1194, 2239, 1324, 2234, 2961, 1407, 4414,
	2837, 1211, 4434, 1208, 4413, 2128, 2130, 4410, 1483, 4410,
	1407, 1210, 1209, 1407, 4443, 2129, 2133, 4446, 4430, 4431,
	4343, 4345, 4379, 2021, 4339, 1204, 4348, 3856, 1483, 2127,
	1207, 4342, 2123, 4337, 4338, 4222, 4361, 3243, 4332, 4349,
	3854, 187, 4352, 3827, 1715, 1713, 1053, 2229, 2681, 4367,
	3847, 2745, 4370, 3410, 1994, 1168, 1190, 4428, 2243, 2742,
	1348, 4384, 1179, 4336, 1167, 3528, 4356, 1605, 1605, 3507,
	4369, 4341, 3814, 4382, 4031, 4378, 2593, 930, 3456, 4267,
	2748, 1339, 2861, 2853, 2849, 3599, 3233, 4376, 4377, 1875,
	4592, 1321, 1321, 1972, 3244, 1407, 1871, 1451, 1172, 4517,
	2679, 1985, 3388, 2603, 3821, 3551, 2954, 1483, 4433, 2127,
	4959, 4429, 1605, 4466, 3948, 3319, 4427, 2406, 1300, 1299,
	4534, 4442, 1346, 4487, 4445, 1298, 4940, 4449, 4937, 2335,
	4484, 4500, 4444, 3765, 3766, 3858, 2217, 3001, 4447, 2691,
	3784, 1605, 1605, 1605, 1605, 1605, 1605, 4457, 1184, 1589,
	2546, 4477, 3849, 3881, 4523, 4518, 3513, 4201, 2133, 1483,
	4483, 1676, 4647, 1196, 1957, 3163, 4463, 3848, 4465, 4476,
	4475, 1204, 1204, 1204, 3162, 4802, 1436, 4535, 1434, 1433,
	1324, 1432, 5112, 3130, 4495, 2348, 4097, 4096, 1324, 1483,
	4502, 4095, 243, 4507, 1204, 4485, 3356, 1204, 1204, 4503,
	4538, 4509, 1324, 4491, 1896, 4490, 1341, 1204, 1888, 240,
	2139, 242, 241, 3652, 4036, 1204, 1204, 4536, 3557, 4520,
	4543, 1396, 5035, 3857, 4121, 3756, 4529, 24, 830, 831,
	1320, 1320, 1483, 2381, 1605, 832, 3011, 4550, 2136, 3346,
	1362, 4549, 2244, 1453, 4072, 826, 23, 4570, 22, 1407,
	21, 118, 279, 43, 279, 279, 4557, 1391, 279, 1401,
	4565, 20, 1324, 158, 1324, 135, 155, 1322, 1322, 4552,
	1415, 1483, 154, 4556, 127, 153, 152, 151, 816, 1204,
	150, 816, 4575, 4611, 2136, 2136, 149, 157, 148, 147,
	4581, 2418, 1204, 142, 146, 145, 144, 143, 141, 139,
	140, 1204, 134, 138, 823, 137, 2139, 136, 133, 132,
	4587, 131, 130, 2136, 2136, 1396, 1204, 129, 128, 1204,
	2855, 2855, 4598, 4599, 126, 279, 159, 279, 279, 1391,
	125, 279, 279, 1204, 124, 123, 1204, 4620, 1401, 4621,
	122, 121, 4601, 1483, 4602, 120, 2136, 119, 809, 810,
	4650, 1407, 279, 62, 1626, 4687, 61, 117, 115, 4622,
	116, 1605, 1605, 1605, 4619, 19, 41, 14, 66, 4629,
	1646, 2272, 67, 18, 13, 36, 94, 1653, 107, 106,
	105, 4669, 1326, 37, 103, 102, 4661, 4662, 3855, 3850,
	3851, 3852, 3853, 4696, 35, 1321, 1678, 17, 16, 1401,
	15, 4683, 100, 279, 279, 99, 1391, 98, 4722, 4667,
	4717, 34, 1483, 4714, 32, 1605, 4710, 4706, 4410, 11,
	4679, 9, 4681, 4743, 4682, 38, 2082, 816, 12, 279,
	279, 4680, 5, 192, 191, 194, 190, 193, 93, 189,
	4672, 1741, 188, 92, 30, 4671, 4748, 4699, 4698, 1204,
	1204, 10, 1749, 4673, 4730, 4708, 184, 957, 4723, 4208,
	2127, 4703, 4686, 84, 186, 4726, 1204, 2139, 185, 183,
	4721, 182, 4659, 4688, 181, 85, 4752, 82, 4754, 180,
	4744, 88, 4746, 179, 83, 4558, 87, 4559, 1407, 4701,
	4702, 1407, 86, 1407, 1407, 28, 6, 65, 3663, 3664,
	7, 3665, 2855, 2855, 2855, 2855, 2127, 2127, 4751, 4538,
	4750, 4745, 1204, 2617, 1204, 4560, 1204, 2860, 3867, 110,
	3767, 111, 4784, 39, 80, 4786, 1326, 4787, 4788, 79,
	78, 4740, 4797, 77, 1320, 2127, 2127, 279, 27, 1204,
	4763, 1326, 64, 4795, 26, 176, 224, 223, 4756, 3707,
	3708, 222, 3709, 221, 220, 219, 218, 217, 4767, 212,
	216, 279, 4410, 214, 213, 215, 211, 4773, 2127, 234,
	233, 1322, 4825, 227, 226, 232, 231, 4410, 2133, 230,
	1321, 229, 4794, 4793, 228, 225, 237, 210, 1321, 2860,
	209, 208, 206, 202, 4824, 205, 1326, 1326, 207, 4817,
	204, 203, 1321, 201, 4846, 236, 2759, 4818, 4790, 235,
	1204, 74, 174, 4848, 175, 73, 173, 1326, 172, 171,
	1326, 2136, 170, 169, 1605, 168, 167, 4861, 4862, 72,
	4764, 4765, 4410, 4410, 1605, 4833, 178, 177, 25, 2448,
	4835, 2, 4834, 1, 0, 0, 0, 0, 4879, 1204,
	1204, 4881, 0, 4410, 0, 0, 4410, 2462, 2464, 1204,
	0, 0, 1321, 0, 1321, 4893, 4859, 4894, 4841, 0,
	0, 2468, 0, 1324, 2133, 4870, 4873, 4872, 4726, 0,
	0, 0, 0, 2476, 4878, 2479, 2480, 2481, 0, 4886,
	0, 0, 4887, 0, 0, 4890, 0, 4891, 4892, 0,
	4889, 0, 2930, 0, 0, 0, 0, 0, 0, 1204,
	1204, 4902, 4910, 1204, 4906, 0, 0, 1605, 1407, 1320,
	0, 1407, 4931, 0, 0, 1590, 0, 1320, 0, 4939,
	4942, 0, 4913, 0, 1905, 1906, 0, 0, 0, 0,
	0, 1320, 0, 0, 0, 4921, 4922, 4958, 4955, 0,
	0, 4929, 4950, 0, 0, 4951, 1322, 4930, 1936, 0,
	4962, 0, 0, 2136, 1322, 729, 1908, 0, 0, 0,
	4948, 0, 4944, 0, 4984, 4982, 2860, 4911, 1322, 1204,
	1204, 1204, 281, 0, 0, 0, 279, 0, 279, 0,
	0, 0, 279, 1961, 0, 0, 0, 0, 0, 4967,
	0, 1320, 1907, 1320, 0, 1626, 1391, 2102, 279, 0,
	279, 2108, 4975, 4983, 4972, 0, 1204, 1324, 279, 0,
	745, 5016, 0, 0, 2860, 279, 4996, 4997, 4999, 4998,
	4901, 0, 1324, 0, 5017, 2133, 5021, 0, 1322, 0,
	1322, 2177, 1396, 2127, 4949, 0, 0, 0, 3010, 2860,
	2272, 2262, 0, 279, 5018, 0, 2263, 5044, 0, 4961,
	279, 0, 0, 5043, 0, 0, 0, 5019, 0, 5056,
	0, 5042, 5034, 1204, 5050, 0, 0, 0, 5032, 0,
	0, 1407, 0, 0, 5065, 5052, 0, 1324, 1324, 5049,
	4943, 5048, 0, 816, 4947, 0, 4706, 5058, 0, 0,
	0, 5057, 5083, 0, 5075, 0, 0, 5031, 1324, 1913,
	5033, 1324, 5071, 5072, 0, 5073, 5062, 5079, 5077, 5074,
	0, 0, 0, 5086, 0, 0, 4939, 5085, 5087, 4942,
	0, 823, 1326, 823, 1326, 5098, 5089, 0, 0, 0,
	0, 5094, 5096, 823, 823, 5108, 5100, 5104, 5097, 0,
	5105, 0, 5099, 0, 0, 5114, 0, 0, 0, 5106,
	1935, 1937, 5113, 5107, 0, 5109, 0, 0, 4410, 0,
	4410, 0, 2264, 1407, 0, 0, 0, 0, 5129, 5130,
	0, 0, 0, 1166, 0, 2127, 5137, 0, 0, 0,
	2268, 0, 5136, 0, 0, 0, 5146, 0, 0, 5140,
	5135, 0, 0, 1204, 1204, 5139, 5148, 5133, 0, 0,
	5142, 0, 1204, 1204, 5151, 0, 0, 2855, 2855, 1928,
	0, 5162, 0, 0, 0, 5156, 0, 0, 5167, 0,
	5164, 0, 5160, 5170, 5172, 5169, 5171, 0, 5163, 0,
	0, 5166, 5165, 0, 3385, 3386, 0, 0, 0, 5176,
	1407, 5177, 5168, 4961, 5180, 0, 5184, 5182, 5181, 5175,
	0, 5179, 0, 0, 0, 0, 0, 2265, 2270, 0,
	1204, 5187, 0, 1321, 5191, 5178, 5193, 5184, 5195, 0,
	0, 5188, 0, 0, 0, 0, 0, 0, 0, 5190,
	279, 0, 5159, 0, 279, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 2855, 2855, 2855,
	2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
	2855, 2855, 2855, 2855, 2855, 2855, 2855, 0, 2855, 3245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 2266, 0, 279, 0, 0, 0, 0, 3245,
	279, 0, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1929, 0, 279, 2136, 279, 0, 0, 0, 729, 0,
	279, 0, 0, 5157, 5158, 0, 0, 0, 0, 0,
	0, 0, 816, 0, 0, 2273, 957, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 1324, 0, 1324, 3483, 3484, 3485, 3486,
	0, 0, 1321, 0, 0, 0, 279, 0, 1391, 279,
	4219, 1960, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 5192, 0, 816, 0, 0, 0, 0, 0, 0,
	279, 3611, 0, 0, 3129, 0, 2271, 0, 2500, 0,
	0, 0, 0, 279, 279, 0, 279, 0, 279, 2136,
	279, 0, 279, 0, 0, 0, 0, 1321, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 849, 3612, 4404, 2537, 1321, 4271,
	2538, 1321, 2539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 279, 279, 279,
	860, 0, 0, 1916, 1917, 1909, 1910, 1911, 1912, 1914,
	1915, 0, 4397, 0, 0, 0, 4390, 0, 0, 0,
	862, 0, 0, 0, 0, 796, 1320, 0, 0, 816,
	0, 0, 0, 4388, 0, 0, 0, 0, 0, 0,
	0, 1320, 4392, 861, 0, 0, 0, 3276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3283,
	0, 0, 0, 1322, 2267, 0, 0, 4398, 0, 0,
	0, 0, 0, 0, 0, 2127, 0, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 1320, 1320, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 0,
	2136, 4391, 0, 0, 0, 0, 859, 1320, 0, 0,
	1320, 0, 2693, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 1322, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 0, 0, 1322, 0, 3514,
	0, 0, 81, 0, 0, 0, 0, 0, 858, 0,
	0, 2127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 0, 0, 0, 0,
	0, 0, 3543, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 0, 3556, 279, 0,
	0, 856, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 279, 0, 729, 0, 0, 0,
	0, 0, 0, 3577, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4453, 0, 112, 279,
	1401, 0, 0, 0, 96, 109, 1166, 1166, 1166, 0,
	867, 0, 0, 0, 0, 0, 0, 0, 0, 4393,
	0, 0, 0, 0, 0, 0, 4394, 0, 0, 0,
	0, 0, 0, 1321, 0, 1321, 0, 4399, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 279, 1401,
	0, 0, 745, 0, 745, 0, 4505, 0, 2976, 0,
	0, 0, 0, 0, 279, 0, 97, 279, 0, 4519,
	0, 279, 2127, 279, 0, 0, 0, 0, 1391, 4396,
	279, 279, 0, 1401, 1401, 2992, 0, 0, 0, 0,
	279, 851, 4542, 0, 0, 0, 0, 4400, 0, 0,
	0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 1942, 1936, 0, 0, 0, 0,
	0, 0, 0, 1908, 823, 823, 0, 0, 823, 823,
	0, 0, 0, 1955, 0, 0, 0, 3035, 0, 0,
	0, 3904, 3905, 0, 0, 0, 0, 0, 0, 279,
	1961, 0, 790, 0, 0, 0, 0, 0, 0, 1907,
	0, 0, 1320, 279, 1320, 0, 0, 0, 863, 1927,
	0, 0, 0, 0, 853, 0, 279, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 816, 0, 1159,
	0, 3556, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 1322, 0, 0, 0, 0, 0, 0, 0, 101,
	0, 0, 0, 279, 0, 0, 4615, 0, 0, 0,
	0, 0, 4395, 850, 0, 279, 279, 0, 0, 0,
	0, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976,
	3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986,
	3987, 857, 3991, 0, 279, 3184, 1930, 1931, 1932, 1933,
	0, 0, 0, 4405, 4406, 792, 1913, 195, 104, 0,
	0, 108, 0, 0, 0, 0, 852, 0, 0, 0,
	0, 0, 1626, 0, 0, 279, 0, 279, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 244, 0,
	0, 865, 866, 0, 3228, 0, 952, 1946, 0, 0,
	1956, 156, 0, 0, 3035, 0, 729, 1935, 1937, 0,
	0, 0, 0, 75, 0, 3257, 957, 3035, 0, 3882,
	0, 0, 1481, 0, 1952, 0, 1953, 0, 0, 0,
	0, 76, 0, 1922, 1923, 0, 0, 0, 246, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 279, 1391,
	279, 0, 2855, 0, 160, 0, 1928, 0, 0, 0,
	1401, 279, 0, 0, 1391, 0, 1391, 0, 1391, 200,
	0, 0, 0, 0, 0, 0, 0, 245, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3925,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 1954, 196, 3941, 0, 0, 0,
	0, 0, 0, 0, 279, 279, 279, 279, 1391, 951,
	0, 1391, 0, 279, 2855, 1943, 0, 0, 279, 199,
	0, 0, 50, 0, 112, 0, 1958, 0, 0, 0,
	96, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3735, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3760, 0, 0, 0, 0, 0,
	0, 1567, 0, 0, 1934, 0, 3788, 0, 4831, 0,
	0, 75, 97, 0, 0, 0, 0, 3459, 3460, 0,
	3477, 3478, 3479, 0, 0, 0, 0, 1929, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 4845, 0, 0,
	4291, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 4034, 0, 0, 0, 1947, 0, 0, 0, 0,
	3837, 0, 0, 0, 0, 0, 4877, 0, 0, 0,
	0, 0, 3860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 1960, 0,
	0, 0, 0, 0, 0, 3474, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1166, 0, 0,
	0, 2855, 0, 0, 0, 1567, 0, 951, 2830, 2831,
	2832, 2833, 2826, 2827, 2828, 2829, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 96, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 101, 0, 0, 0, 2855,
	0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918,
	1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0,
	0, 0, 3465, 3434, 2855, 0, 0, 3435, 0, 0,
	0, 0, 4968, 0, 0, 0, 0, 0, 4970, 0,
	97, 2806, 2807, 2808, 2809, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 104, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 2818, 2819, 2820, 2821, 2814, 2815,
	2816, 2817, 2822, 2823, 2824, 2825, 0, 279, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	3481, 0, 952, 279, 0, 0, 0, 156, 729, 0,
	0, 0, 0, 729, 0, 0, 729, 0, 0, 729,
	729, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	1567, 0, 3475, 0, 246, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2802, 2803, 2804,
	2805, 2810, 2811, 2812, 2813, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2951, 0, 200, 279, 0, 0, 0,
	279, 279, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 0, 0, 0, 238, 0,
	3459, 3460, 0, 3477, 3478, 3479, 0, 239, 0, 0,
	0, 196, 1958, 0, 3035, 3035, 279, 0, 3619, 2102,
	0, 0, 0, 3913, 0, 3035, 0, 2108, 0, 0,
	0, 0, 0, 0, 0, 199, 3035, 2108, 0, 3035,
	2108, 0, 0, 2108, 0, 0, 3619, 0, 0, 0,
	0, 195, 104, 0, 0, 108, 0, 0, 279, 279,
	2102, 0, 279, 0, 0, 0, 0, 3459, 3460, 0,
	3477, 3478, 3479, 0, 0, 0, 0, 0, 3474, 2102,
	0, 279, 244, 3693, 3693, 0, 0, 0, 1391, 0,
	952, 0, 0, 3476, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3035, 0, 3035, 0, 3721, 3035, 2102, 0, 0, 3035,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	816, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3474, 0, 0, 0, 4347,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 1391, 0, 0, 4160, 0, 0, 4161, 279,
	0, 0, 0, 200, 0, 3465, 0, 0, 0, 0,
	4365, 245, 0, 0, 0, 0, 0, 279, 0, 3761,
	0, 0, 0, 3763, 3035, 0, 238, 279, 0, 0,
	0, 279, 0, 0, 1401, 239, 0, 0, 0, 196,
	1567, 0, 0, 0, 0, 0, 4584, 0, 0, 279,
	0, 0, 0, 0, 3228, 0, 0, 1391, 0, 279,
	0, 0, 3035, 199, 729, 0, 0, 0, 3471, 3472,
	3473, 3035, 3465, 3481, 0, 3470, 3468, 3469, 3461, 3462,
	3463, 3464, 3466, 3467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4248, 4249, 4250, 0, 0,
	0, 0, 2462, 4256, 4257, 0, 1905, 1906, 0, 1938,
	1939, 1940, 1949, 1950, 1951, 3475, 3482, 0, 4632, 0,
	0, 75, 3873, 0, 0, 0, 0, 0, 0, 1942,
	1936, 0, 0, 1567, 0, 0, 0, 0, 1908, 76,
	3481, 0, 3879, 0, 0, 1626, 0, 0, 1955, 1391,
	279, 0, 279, 0, 0, 0, 81, 0, 1391, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 1907, 0, 0, 0, 0, 0,
	0, 0, 3475, 0, 1927, 0, 0, 0, 0, 279,
	0, 0, 0, 1924, 0, 1958, 90, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 1906, 75, 0, 0, 1567,
	0, 0, 0, 0, 1481, 0, 0, 951, 0, 0,
	0, 0, 0, 0, 76, 0, 0, 3946, 1936, 0,
	50, 0, 112, 0, 0, 0, 1908, 0, 96, 109,
	0, 81, 1958, 0, 4576, 0, 0, 0, 0, 0,
	0, 1930, 1931, 1932, 1933, 0, 3476, 0, 0, 0,
	0, 1913, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 1941, 1907, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 4354, 4355, 0, 4772, 0, 4576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 1946, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 1935, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 951, 3476, 279, 279, 2617, 0, 0, 1952,
	0, 1953, 0, 4801, 0, 50, 0, 112, 1922, 1923,
	0, 0, 0, 96, 109, 0, 0, 0, 0, 729,
	729, 0, 0, 0, 0, 1567, 1944, 0, 4823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 3459, 3460, 0, 3477, 3478, 3479, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 3912, 0, 0, 2617, 0,
	0, 3471, 3472, 3473, 0, 97, 0, 0, 3470, 3468,
	3469, 3461, 3462, 3463, 3464, 3466, 3467, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 2462, 0, 0,
	1935, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3474, 1958, 1567, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3471, 3472,
	3473, 0, 0, 816, 0, 3470, 3468, 3469, 3461, 3462,
	3463, 3464, 3466, 3467, 0, 0, 0, 0, 0, 1928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4551, 0, 4553, 4554, 4555, 3693, 0, 0, 1934,
	0, 195, 104, 0, 0, 108, 0, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 1929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 2102, 3465, 279, 0,
	952, 0, 745, 745, 1401, 156, 0, 0, 101, 0,
	1947, 0, 0, 0, 0, 0, 0, 279, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 3228,
	0, 0, 3228, 2108, 0, 0, 0, 0, 279, 0,
	0, 0, 246, 1960, 4604, 0, 0, 0, 279, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 0, 3481, 195, 104, 160, 0,
	108, 0, 0, 0, 0, 0, 0, 3035, 279, 0,
	0, 0, 0, 200, 0, 0, 0, 3257, 3257, 0,
	0, 245, 0, 957, 3035, 0, 0, 244, 0, 0,
	1929, 0, 0, 0, 0, 952, 238, 3475, 0, 0,
	156, 0, 0, 0, 0, 239, 0, 1945, 0, 196,
	0, 0, 0, 0, 279, 0, 0, 1919, 1920, 1926,
	1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911,
	1912, 1914, 1915, 1726, 0, 0, 0, 246, 2736, 0,
	1941, 0, 2737, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 1941, 0, 166, 0,
	0, 4700, 0, 160, 0, 0, 0, 75, 0, 47,
	46, 0, 0, 0, 0, 0, 0, 1958, 200, 0,
	0, 0, 0, 0, 0, 76, 245, 0, 1941, 161,
	4310, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	1941, 238, 81, 0, 1905, 1906, 0, 0, 0, 0,
	239, 0, 0, 68, 196, 0, 0, 0, 0, 0,
	49, 0, 163, 0, 0, 0, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 1908, 0, 1724, 0,
	48, 0, 90, 0, 1917, 1909, 1910, 1911, 1912, 1914,
	1915, 0, 0, 279, 0, 0, 0, 0, 3476, 1626,
	0, 279, 0, 1961, 0, 0, 0, 0, 0, 51,
	69, 0, 1907, 0, 0, 279, 0, 0, 52, 0,
	0, 0, 1927, 58, 0, 0, 0, 0, 164, 0,
	0, 1924, 1941, 1401, 0, 0, 50, 1941, 112, 0,
	0, 0, 0, 0, 96, 109, 1401, 0, 279, 1401,
	0, 1941, 70, 0, 0, 0, 1941, 0, 0, 0,
	3035, 3035, 0, 3619, 0, 0, 3693, 3035, 0, 0,
	0, 0, 0, 0, 0, 4412, 0, 4412, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 3035,
	0, 2108, 0, 0, 0, 3619, 0, 1626, 1626, 279,
	2102, 0, 0, 0, 0, 0, 97, 0, 0, 1930,
	1931, 1932, 1933, 2102, 0, 279, 2102, 0, 279, 1913,
	3693, 1941, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3035,
	0, 3035, 279, 3471, 3472, 3473, 0, 0, 0, 0,
	3470, 3468, 3469, 3461, 3462, 3463, 3464, 3466, 3467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 1937, 0, 0, 2462, 0, 1567, 0, 3035, 3035,
	0, 0, 0, 0, 3228, 3228, 0, 0, 0, 0,
	0, 3619, 0, 0, 0, 0, 1922, 1923, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 1567,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 1928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	0, 0, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	0, 0, 1941, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 0, 57, 0, 1941, 0, 0, 60, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 71, 1958,
	0, 0, 0, 0, 0, 0, 59, 195, 104, 0,
	0, 108, 0, 0, 0, 55, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 2859, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 1941, 0, 63, 0, 0, 0,
	1941, 156, 0, 0, 0, 0, 0, 1934, 0, 0,
	3035, 2108, 0, 2108, 0, 0, 4624, 162, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	1929, 0, 0, 0, 0, 4648, 0, 4648, 246, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 3459, 3460, 0, 3477, 3478, 3479,
	0, 0, 816, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 3693, 0, 1391, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 1960, 0, 0, 2102, 0, 279, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 196, 0, 0, 1567, 0,
	0, 0, 0, 4624, 0, 0, 4412, 0, 0, 1626,
	0, 0, 3474, 3035, 0, 0, 0, 0, 0, 199,
	0, 0, 3, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914,
	1915, 279, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3693, 4792, 0, 0, 0, 0, 0, 0, 1151,
	4624, 0, 0, 0, 0, 0, 1567, 0, 0, 1567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3481, 0, 0,
	776, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 745, 0, 0, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 3475,
	4412, 4412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 4412, 0, 279, 4412, 0, 0, 761, 0, 0,
	0, 0, 0, 0, 2108, 0, 0, 0, 762, 0,
	0, 0, 0, 0, 1626, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 763,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1401, 0, 0, 0, 0, 1958,
	0, 782, 0, 0, 0, 0, 0, 0, 4919, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 4648, 0, 0, 279, 0, 0,
	0, 278, 278, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 765, 0, 0,
	0, 0, 3035, 0, 0, 0, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 0, 1567, 0,
	766, 0, 1941, 0, 767, 0, 0, 0, 0, 0,
	3476, 0, 0, 0, 0, 0, 0, 279, 0, 881,
	0, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3946,
	0, 0, 1941, 0, 0, 0, 1941, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 0, 1626, 0, 0, 0, 0, 0, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 1941, 1941, 1941, 0, 778, 0, 0, 0,
	1941, 0, 1941, 1941, 1941, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 2859, 2859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4624, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3471, 3472, 3473, 0, 0,
	0, 1323, 3470, 3468, 3469, 3461, 3462, 3463, 3464, 3466,
	3467, 0, 0, 0, 0, 0, 3035, 0, 0, 0,
	0, 0, 788, 0, 769, 0, 4412, 0, 4412, 0,
	1941, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 789, 0, 770, 0, 0, 0,
	1941, 0, 0, 1941, 0, 0, 1941, 0, 0, 1941,
	0, 0, 0, 0, 0, 1941, 1941, 1941, 1941, 1941,
	1941, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3035, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 0, 3257,
	0, 786, 787, 0, 784, 0, 0, 0, 0, 0,
	779, 0, 3035, 772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3257, 0, 0, 0,
	0, 1941, 0, 0, 3480, 0, 2859, 2859, 2859, 2859,
	0, 0, 0, 1941, 1567, 1941, 0, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 773, 0, 780,
	0, 0, 0, 0, 0, 0, 0, 774, 0, 0,
	0, 1567, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 775, 0, 0, 0, 0, 783, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 792, 1151, 1151, 1151, 0, 0, 0, 0, 0,
	0, 0, 777, 1942, 1936, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 1961,
	1596, 0, 0, 0, 0, 0, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 1628, 0,
	1634, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 1567, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	0, 1732, 1166, 1737, 0, 1930, 1931, 1932, 1933, 0,
	0, 0, 0, 0, 0, 1913, 0, 1751, 0, 1756,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	1567, 0, 1924, 0, 0, 0, 1946, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 1953, 0, 0, 1821, 0,
	0, 1827, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4290, 0,
	1944, 0, 0, 0, 0, 0, 0, 1941, 1941, 0,
	1941, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 0, 0, 0, 0,
	1913, 776, 0, 0, 0, 0, 0, 0, 0, 1567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 278, 1954, 278, 278, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1567, 0, 0, 0, 1958, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 1922, 1923, 762,
	0, 0, 0, 0, 3154, 0, 1982, 0, 0, 0,
	0, 1567, 1995, 0, 0, 0, 0, 0, 0, 0,
	763, 1941, 0, 0, 0, 278, 0, 278, 278, 0,
	1928, 278, 278, 0, 0, 0, 0, 3144, 3142, 0,
	0, 0, 782, 1934, 3146, 3148, 3138, 0, 0, 0,
	0, 0, 881, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 1941,
	0, 2859, 2859, 0, 0, 1941, 0, 3164, 765, 0,
	0, 0, 0, 1567, 1947, 3480, 3480, 0, 0, 1941,
	1941, 0, 0, 278, 278, 0, 0, 0, 0, 1941,
	1958, 766, 0, 0, 0, 767, 0, 2054, 2054, 2054,
	0, 0, 0, 1941, 0, 0, 0, 1960, 0, 278,
	278, 0, 791, 0, 0, 1941, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 1934, 0,
	0, 2859, 2859, 2859, 2859, 2859, 2859, 2859, 2859, 2859,
	2859, 2859, 2859, 2859, 2859, 2859, 2859, 2859, 2859, 2859,
	2859, 1929, 2859, 3480, 3480, 3480, 3480, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 778, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 1941, 0,
	0, 3140, 0, 0, 1567, 0, 0, 278, 0, 0,
	0, 0, 3156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 1151, 0, 3155, 3145, 3143, 3147, 3149,
	3139, 3141, 3157, 3159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3151, 3153, 3161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3165,
	0, 0, 0, 0, 0, 789, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 0,
	0, 0, 786, 787, 0, 784, 0, 0, 0, 0,
	0, 779, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1941, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3158, 773, 0,
	780, 0, 0, 0, 0, 0, 0, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 775, 0, 0, 0, 0, 783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 2076, 0, 1323, 0,
	0, 0, 278, 777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3166, 0, 0, 278, 2076,
	278, 0, 0, 0, 3150, 3152, 3160, 0, 881, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	1941, 0, 0, 1941, 3480, 3480, 1941, 0, 0, 0,
	1941, 0, 0, 0, 0, 0, 0, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2524,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1941, 1941, 1941, 1941, 1941, 0, 0,
	0, 0, 0, 1941, 0, 1941, 2552, 0, 3480, 3480,
	3480, 3480, 3480, 3480, 3480, 3480, 3480, 3480, 3480, 3480,
	3480, 3480, 3480, 3480, 3480, 3480, 3480, 3480, 0, 0,
	0, 3480, 0, 0, 1941, 1941, 0, 0, 0, 0,
	0, 0, 2592, 0, 2596, 0, 1941, 0, 0, 0,
	0, 2610, 0, 0, 0, 1941, 0, 0, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 0, 2660, 0, 2662, 2663, 2664,
	2665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 2689, 881, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 1982, 0, 0, 0, 2740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2770, 2773, 2776, 2779, 0,
	1941, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 1941, 1941, 0, 278, 0, 0, 0, 0, 2851,
	278, 2863, 2865, 2870, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 278, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 278, 0, 278, 0, 278, 0,
	278, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 1941,
	0, 0, 0, 1941, 1941, 0, 0, 1941, 1941, 0,
	0, 0, 1941, 1905, 1906, 0, 1941, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 278, 278, 278, 278,
	0, 0, 0, 0, 0, 0, 2859, 1936, 0, 0,
	0, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 1907, 0, 0, 0, 1936, 0, 0, 0, 0,
	0, 1927, 0, 1908, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 1955, 0, 0, 0, 0, 2859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 1907,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 3907, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1930, 1931,
	1932, 1933, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3187, 3188, 0, 3190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1932, 1933,
	0, 0, 0, 0, 0, 0, 1913, 0, 1323, 1935,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 1923, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 0, 0,
	1956, 1941, 1941, 1941, 0, 0, 0, 1935, 1937, 278,
	0, 0, 1941, 1941, 3480, 2859, 0, 0, 1928, 0,
	0, 1941, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 1923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 3480, 2859, 0, 3311, 1928, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 278, 0, 1941,
	0, 278, 0, 278, 0, 0, 0, 1941, 2859, 0,
	278, 278, 0, 0, 0, 1941, 0, 0, 1958, 0,
	278, 0, 0, 0, 1941, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 1963,
	0, 0, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3368, 3369, 278, 0, 0, 0,
	3375, 0, 3480, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3389,
	3390, 0, 0, 0, 0, 2740, 0, 1929, 0, 0,
	1941, 3480, 0, 278, 1941, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 278, 278, 0, 0, 0,
	0, 0, 0, 3480, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3399, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3413, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3425, 1941, 278, 0, 881, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1925, 1921,
	0, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 901, 278,
	0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918,
	1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 278, 903,
	278, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 2870, 2870, 2870, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	2054, 0, 0, 0, 0, 1941, 0, 0, 3518, 0,
	0, 0, 0, 1942, 1936, 905, 0, 922, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	1941, 0, 1955, 0, 278, 278, 278, 278, 0, 0,
	0, 0, 906, 278, 0, 0, 0, 907, 278, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 931,
	0, 0, 0, 0, 0, 0, 908, 1924, 0, 278,
	0, 1327, 0, 0, 0, 0, 0, 278, 0, 0,
	929, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 902, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	0, 0, 910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 933, 1930, 1931, 1932, 1933, 791,
	0, 0, 1941, 0, 0, 1913, 0, 0, 0, 3651,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 1946, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 0, 0,
	0, 0, 3704, 3705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 932, 1953, 0, 0, 0, 0,
	0, 0, 1922, 1923, 927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	1944, 0, 0, 0, 0, 1905, 1906, 0, 0, 0,
	0, 1949, 1950, 1951, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 913, 1954, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 1943, 0, 0, 0, 0, 0,
	0, 0, 1924, 0, 914, 1958, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 900,
	0, 0, 924, 1934, 0, 278, 0, 0, 0, 0,
	0, 915, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 1929, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 0, 0, 921, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	278, 278, 0, 0, 1947, 916, 0, 0, 0, 917,
	936, 0, 935, 0, 0, 918, 0, 0, 0, 2610,
	0, 1946, 0, 0, 1956, 3899, 3900, 0, 0, 3903,
	919, 1935, 1937, 3906, 0, 928, 278, 1960, 0, 0,
	0, 937, 3910, 934, 0, 0, 0, 0, 0, 792,
	0, 3917, 0, 0, 0, 0, 3518, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3930, 0, 0, 0, 1944, 0, 0, 278, 278,
	0, 1327, 278, 1327, 0, 0, 0, 0, 0, 2076,
	1928, 3953, 3954, 0, 3955, 3956, 3957, 0, 1327, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 3963, 0, 0, 0, 3965, 0, 0, 2140,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4316, 0, 0, 3994,
	3995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4006, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4015, 0, 0, 0, 0, 0, 0, 278,
	0, 1905, 1906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 278, 0, 0,
	0, 278, 1327, 1908, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	1961, 1929, 0, 0, 0, 0, 0, 0, 0, 1907,
	0, 0, 0, 0, 0, 4071, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 1947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4089, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 1942, 1936,
	0, 0, 0, 0, 0, 0, 4120, 1908, 0, 0,
	0, 0, 0, 0, 3902, 0, 0, 1955, 0, 0,
	278, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 1930, 1931, 1932, 1933,
	0, 4141, 4142, 1907, 0, 0, 1913, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 278,
	0, 0, 1924, 0, 0, 0, 1945, 1327, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 1935, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1922, 1923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 0, 0, 0, 0,
	1913, 0, 0, 0, 2054, 0, 1928, 0, 0, 0,
	0, 0, 0, 4243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 1327, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 0, 1956, 0, 1327, 1327, 0, 0,
	0, 1935, 1937, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 1323, 1323, 0, 0, 1952, 0,
	1953, 0, 1327, 0, 1327, 1327, 1327, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 1958, 1905, 1906, 0,
	4288, 4289, 0, 0, 0, 1944, 4293, 4294, 0, 0,
	0, 4297, 4298, 0, 0, 0, 0, 0, 0, 4302,
	1928, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	4306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 0, 4311, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1927, 0, 1929, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2140, 2140, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	3901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 0, 0,
	0, 278, 1913, 0, 0, 0, 0, 0, 1151, 0,
	0, 1929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1327, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 1935, 1937, 0, 1925, 1921, 278, 1918,
	1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 278, 0,
	0, 0, 1960, 4454, 0, 0, 0, 0, 278, 1922,
	1923, 0, 0, 278, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 1323, 0,
	1327, 0, 1928, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4571,
	4572, 4573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2610, 0, 0, 4582, 4583, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4591, 4594, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2140, 0, 0, 1960, 0, 0, 0, 0, 0,
	4649, 0, 0, 0, 0, 0, 0, 0, 278, 4657,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 280,
	280, 0, 0, 0, 4665, 0, 0, 1151, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 2076, 0, 1327,
	0, 4674, 0, 0, 4676, 0, 0, 0, 280, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 280, 0, 278, 0,
	0, 0, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 1905, 1906, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 1905, 1906, 1908, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 1942, 1936,
	0, 0, 0, 0, 1961, 0, 0, 1908, 1327, 0,
	1327, 0, 278, 1907, 0, 0, 1327, 1955, 0, 0,
	0, 0, 278, 1927, 0, 0, 0, 0, 1327, 0,
	0, 0, 1924, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 1189, 114,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	4800, 0, 0, 0, 4804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 0, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 114, 0, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4874, 0,
	0, 1935, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1946, 0, 0, 1956, 278, 0, 1922, 1923, 0,
	0, 1935, 1937, 0, 0, 0, 0, 0, 2610, 0,
	0, 0, 0, 0, 0, 0, 0, 4594, 1952, 0,
	1953, 0, 0, 0, 0, 0, 0, 1922, 1923, 0,
	1928, 0, 0, 0, 0, 0, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 0, 0, 1146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 0, 0, 0, 0, 0, 278, 0, 1151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 4995, 4995, 4995,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 278, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 5020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4995, 1327, 1327, 0, 0, 0, 0, 0, 0,
	2076, 0, 0, 0, 0, 0, 0, 0, 1327, 1947,
	0, 0, 1960, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 1327, 278,
	0, 1327, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2140, 0, 0, 0, 1327, 0, 0,
	2076, 2076, 0, 0, 0, 0, 0, 0, 274, 274,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 278, 2076, 0, 0, 0, 0, 0,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 4995, 5152, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 2140, 0, 0, 0, 0, 0, 0,
	0, 3437, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 280, 280, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 1487, 280, 280, 0, 278, 280, 280,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 1942, 1936, 0, 0, 1327,
	0, 1327, 0, 0, 1908, 1327, 0, 0, 0, 0,
	0, 0, 0, 1327, 1955, 0, 0, 1905, 1906, 0,
	280, 280, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 1487, 0,
	1907, 1936, 0, 0, 0, 1487, 280, 280, 0, 1908,
	1927, 0, 0, 0, 1327, 0, 0, 0, 0, 1924,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 1327,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 0,
	0, 1327, 0, 1327, 0, 1927, 0, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 0, 2076, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1327, 0, 0, 1327, 1913, 0, 0,
	0, 0, 0, 0, 280, 0, 284, 0, 0, 0,
	3367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1946, 0,
	0, 1956, 1913, 0, 0, 0, 0, 0, 1935, 1937,
	0, 0, 0, 0, 2140, 0, 0, 0, 0, 114,
	0, 114, 0, 114, 0, 1952, 0, 1953, 0, 0,
	0, 0, 0, 1327, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 0,
	1327, 0, 1944, 1935, 1937, 0, 0, 0, 0, 0,
	2140, 2140, 0, 0, 0, 0, 0, 1928, 0, 0,
	0, 873, 0, 0, 0, 1146, 114, 114, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 2140,
	2140, 0, 114, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	114, 0, 1928, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 2140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	1487, 0, 0, 0, 0, 280, 280, 280, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	1934, 0, 280, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 1125, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 280, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	0, 1377, 1377, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	1327, 0, 0, 1945, 1327, 0, 0, 1327, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 0, 0, 0, 2140, 3436, 0,
	0, 0, 1478, 0, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 1327,
	2074, 0, 2077, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 1327, 1327, 0, 0, 0,
	0, 1327, 1327, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 1327, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 1730, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 1487,
	1487, 280, 0, 0, 0, 0, 1205, 0, 1327, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 280, 0, 0, 1850, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, 1487, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1487, 1487,
	1327, 1327, 0, 1327, 0, 0, 0, 0, 0, 0,
	1327, 0, 1487, 280, 0, 0, 280, 0, 0, 0,
	0, 1327, 1327, 0, 1487, 0, 1487, 1487, 1487, 0,
	0, 0, 0, 0, 1327, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 280, 0, 280, 0, 280, 0, 280, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 280, 280, 280, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 1327, 1327, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1146, 0, 1146, 1327, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 1606, 0, 2092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 1588, 0, 0,
	1327, 1327, 1327, 1327, 1327, 1327, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 0, 0, 0, 1606, 1588, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 1606, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 1125, 0, 0, 1125,
	1125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 280, 2678, 0, 0, 280, 0,
	280, 0, 1327, 0, 0, 0, 0, 280, 280, 0,
	0, 0, 0, 0, 0, 1146, 0, 280, 0, 0,
	1327, 1327, 1327, 0, 0, 1981, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 2140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2404, 0, 0,
	0, 2411, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 1487, 0, 2424, 0, 0, 0, 0, 0, 114,
	0, 0, 280, 280, 0, 1487, 0, 0, 0, 2436,
	0, 2436, 0, 0, 0, 0, 0, 2443, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 0, 280, 2411, 280, 0, 2472, 873, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2492, 0, 0,
	0, 0, 0, 0, 0, 1327, 1327, 1487, 0, 0,
	0, 2508, 0, 2510, 0, 2512, 0, 2514, 0, 2515,
	1487, 0, 1487, 0, 0, 0, 1327, 0, 1487, 1327,
	0, 0, 0, 1327, 0, 0, 280, 0, 1485, 0,
	1487, 0, 0, 1327, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 280, 0, 280, 0, 0,
	0, 0, 0, 2543, 2544, 2545, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 280, 280, 280, 0, 1327, 0, 0, 0,
	280, 0, 0, 1607, 0, 280, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 114, 0, 280, 114, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 114, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 1606, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2927, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 1327, 0, 0, 0, 0, 0, 0,
	0, 1606, 0, 1606, 0, 1606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1606, 0, 0,
	0, 2978, 0, 0, 1377, 0, 0, 0, 1377, 1606,
	1377, 1606, 1606, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2424, 0, 0,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 280, 280, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2411, 2411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2411, 0, 0, 280, 280, 1484, 0, 280,
	0, 2424, 0, 0, 0, 0, 280, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3281, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 3292, 0, 3295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1484, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 1487, 0, 1487, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 280, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 1487, 280, 0,
	0, 3328, 1588, 3330, 1588, 0, 0, 0, 0, 0,
	3336, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 1377, 0, 0, 0,
	0, 1487, 0, 0, 3365, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 114, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 0, 0, 0, 0, 1487, 0, 280, 1487, 280,
	0, 0, 0, 1942, 1936, 114, 114, 0, 114, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 1955, 1607, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 1961,
	0, 0, 0, 1607, 1607, 0, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 1927, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 0, 1607,
	0, 1607, 1607, 1607, 0, 1487, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1606, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 873,
	114, 114, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1606, 1946, 1606, 0, 1956,
	0, 0, 0, 1606, 1485, 0, 1935, 1937, 0, 0,
	0, 0, 0, 0, 0, 1606, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 1953, 0, 1487, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 3566, 0, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 1905, 1906, 0, 1938, 1939, 1940,
	1949, 1950, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 1936, 0,
	0, 0, 0, 1377, 0, 0, 1908, 1588, 1588, 0,
	0, 0, 0, 1954, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 1943, 0, 0, 0, 0, 0,
	0, 0, 1907, 3615, 0, 1958, 0, 0, 0, 0,
	0, 0, 1927, 0, 0, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3670, 3672, 0, 280, 2424,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	114, 0, 1487, 1934, 0, 0, 1487, 0, 0, 1487,
	0, 0, 0, 0, 0, 280, 0, 0, 1310, 1310,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 1930,
	1931, 1932, 1933, 0, 0, 280, 0, 0, 0, 1913,
	0, 0, 0, 0, 1947, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 1960, 0, 0,
	1946, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	1935, 1937, 0, 0, 0, 0, 1487, 1487, 1487, 0,
	0, 0, 0, 1487, 1487, 1487, 0, 1952, 0, 1953,
	0, 0, 0, 0, 3785, 0, 1922, 1923, 3789, 0,
	0, 0, 0, 0, 0, 1487, 0, 1487, 0, 1485,
	0, 280, 0, 1487, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1928,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 3884, 0, 1588,
	1607, 0, 0, 1484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3897, 0, 0, 0,
	0, 0, 1487, 1487, 1484, 1487, 114, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 1487, 0, 0, 0, 0, 0,
	1929, 0, 1310, 0, 0, 0, 1487, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 0, 0, 0, 1607, 0, 1607, 0, 0,
	0, 0, 0, 1607, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 280, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 1487, 1487,
	0, 0, 0, 0, 0, 1919, 1920, 1926, 1948, 1925,
	1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914,
	1915, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 1487, 280,
	0, 114, 1606, 1487, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 1310, 1606, 0, 1606, 0,
	0, 0, 1484, 0, 0, 0, 0, 0, 0, 873,
	1606, 0, 1487, 1487, 1487, 1487, 1487, 1487, 0, 0,
	0, 0, 1606, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1606, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 1487, 1484, 0, 2424, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4197, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 4207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	2424, 0, 0, 0, 0, 4225, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 114, 0,
	1484, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 1487, 1487, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 1487, 0, 0, 0,
	0, 1905, 1906, 1485, 1938, 1939, 1940, 1949, 1950, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 1942, 1936, 0, 0, 280, 280,
	0, 0, 0, 1908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 114, 0, 0, 0, 0, 0, 0, 1907,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 1484, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 1932, 1933,
	0, 0, 0, 0, 0, 0, 1913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	280, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 1946, 0, 0,
	1956, 0, 0, 0, 0, 0, 4432, 1935, 1937, 0,
	0, 0, 0, 2678, 0, 0, 0, 0, 0, 0,
	0, 0, 2424, 0, 1952, 0, 1953, 0, 0, 0,
	0, 0, 1607, 1922, 1923, 0, 0, 1606, 0, 0,
	0, 1606, 0, 0, 1606, 0, 1607, 0, 1607, 0,
	0, 1944, 1485, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 280, 0, 1928, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2424,
	0, 0, 0, 0, 1954, 0, 1606, 0, 0, 4530,
	0, 0, 0, 0, 280, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 1607, 0,
	1607, 1606, 1606, 1606, 114, 0, 1958, 0, 1606, 1606,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1606, 0, 1606, 114, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 1934, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949,
	1950, 1951, 0, 0, 0, 0, 0, 1485, 1960, 0,
	0, 0, 4634, 0, 0, 0, 1942, 1936, 0, 0,
	0, 0, 0, 0, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 1484, 0,
	1484, 0, 1961, 0, 0, 0, 0, 0, 114, 0,
	0, 1907, 0, 0, 114, 0, 0, 0, 1606, 1606,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 1484, 1945, 2424, 0, 0, 0, 0, 0, 0,
	0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918,
	1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 1930, 1931,
	1932, 1933, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 4762, 1588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1946,
	0, 0, 1956, 1606, 1606, 0, 0, 0, 0, 1935,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 1953, 0,
	0, 0, 0, 0, 0, 1922, 1923, 0, 0, 0,
	0, 0, 0, 1484, 0, 0, 0, 0, 1606, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 1606, 1606, 1606,
	1606, 1606, 1606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 1607, 0, 0, 1607, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	4880, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1484, 0, 0,
	0, 1607, 1607, 1607, 0, 0, 0, 0, 1607, 1607,
	1607, 0, 0, 0, 4933, 0, 0, 0, 0, 1929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 1607, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 1484,
	0, 0, 0, 0, 4977, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 1606, 1606, 1606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 1606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921,
	0, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915,
	0, 0, 0, 0, 0, 0, 0, 1485, 1485, 3431,
	1485, 0, 0, 0, 0, 0, 1905, 1906, 0, 1938,
	1939, 1940, 1949, 1950, 1951, 0, 0, 0, 1607, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	1936, 1485, 0, 0, 0, 0, 0, 0, 1908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949,
	1950, 1951, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 1907, 0, 1942, 1936, 0, 0,
	0, 0, 0, 0, 1927, 1908, 0, 0, 0, 0,
	0, 0, 0, 1924, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 0, 0, 0, 0, 0,
	0, 1907, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1606, 0, 0, 1607, 1607, 0, 0, 0, 0, 0,
	1606, 1930, 1931, 1932, 1933, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1932, 1933, 1946, 0, 0, 1956, 0, 0, 1913, 0,
	0, 0, 1935, 1937, 0, 0, 0, 1607, 1607, 1607,
	1607, 1607, 1607, 0, 0, 0, 0, 0, 0, 1952,
	0, 1953, 0, 1606, 0, 1485, 0, 0, 1922, 1923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1946,
	0, 0, 1956, 0, 0, 0, 1944, 0, 0, 1935,
	1937, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 1928, 0, 0, 0, 0, 1952, 0, 1953, 0,
	0, 0, 0, 0, 0, 1922, 1923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 1485, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 1928, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1929, 0, 0, 0, 0, 1607, 1607, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 1607, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1919, 1920, 1926,
	1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911,
	1912, 1914, 1915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921,
	0, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915,
	0, 0, 0, 0, 0, 4920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 1488, 296, 297, 1489, 1490, 1491,
	0, 1492, 671, 1493, 1494, 1495, 298, 1496, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 1497, 676, 310, 311, 312,
	313, 314, 315, 1498, 1499, 0, 316, 677, 678, 679,
	1500, 317, 318, 680, 1501, 1568, 1502, 319, 320, 321,
	322, 323, 324, 325, 0, 1503, 327, 328, 329, 326,
	330, 1504, 331, 1607, 332, 333, 334, 335, 336, 337,
	1505, 338, 339, 340, 1268, 341, 342, 343, 1506, 1507,
	1509, 1508, 1510, 1511, 1512, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 1513, 354, 350, 352, 1514,
	355, 353, 356, 1515, 357, 358, 359, 1516, 1517, 360,
	361, 362, 1518, 363, 364, 365, 1519, 366, 367, 368,
	1520, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 1521, 285,
	1522, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 1523, 387, 388, 389, 1524, 390, 1525,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 1526, 403, 689, 1527, 690,
	404, 1528, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 1271, 411, 412, 1529, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 1530, 1270,
	499, 421, 694, 695, 1531, 696, 1532, 422, 423, 1272,
	697, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1533, 434, 436, 435,
	1534, 437, 698, 1275, 438, 439, 1276, 1535, 440, 441,
	442, 443, 444, 445, 448, 1536, 1537, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1538, 287, 1279,
	493, 494, 495, 496, 1539, 699, 497, 700, 500, 501,
	1540, 0, 502, 0, 503, 1541, 1542, 505, 506, 507,
	1543, 1544, 508, 509, 701, 1280, 510, 1281, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 1545, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 1546, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 1547, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	1548, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 1549, 591, 592, 590,
	593, 594, 595, 1550, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 1551, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	1552, 625, 626, 0, 622, 613, 1553, 627, 628, 629,
	630, 631, 632, 633, 634, 1554, 635, 712, 713, 714,
	715, 1555, 645, 1556, 636, 637, 638, 639, 716, 640,
	717, 1557, 641, 642, 643, 644, 0, 646, 647, 1558,
	1559, 648, 649, 650, 652, 653, 651, 654, 1560, 655,
	1561, 0, 656, 657, 658, 718, 719, 720, 1562, 660,
	659, 661, 662, 663, 721, 664, 665, 1563, 1564, 1565,
	1566, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 2905, 0, 0, 0, 0,
	0, 0, 0, 2906, 288, 289, 291, 290, 292, 293,
	294, 295, 1488, 296, 297, 1489, 1490, 1491, 0, 1492,
	671, 1493, 1494, 1495, 298, 1496, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 1497, 676, 310, 311, 312, 313, 314,
	315, 1498, 1499, 0, 316, 677, 678, 679, 1500, 317,
	318, 680, 1501, 1568, 1502, 319, 320, 321, 322, 323,
	324, 325, 0, 1503, 327, 328, 329, 326, 330, 1504,
	331, 0, 332, 333, 334, 335, 336, 337, 1505, 338,
	339, 340, 1268, 341, 342, 343, 1506, 1507, 1509, 1508,
	1510, 1511, 1512, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 1513, 354, 350, 352, 1514, 355, 353,
	356, 1515, 357, 358, 359, 1516, 1517, 360, 361, 362,
	1518, 363, 364, 365, 1519, 366, 367, 368, 1520, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 1521, 285, 1522, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 1523, 387, 388, 389, 1524, 390, 1525, 1269, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 1526, 403, 689, 1527, 690, 404, 1528,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	1271, 411, 412, 1529, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 1530, 1270, 499, 421,
	694, 695, 1531, 696, 1532, 422, 423, 1272, 697, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 1533, 434, 436, 435, 1534, 437,
	698, 1275, 438, 439, 1276, 1535, 440, 441, 442, 443,
	444, 445, 448, 1536, 1537, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1538, 287, 1279, 493, 494,
	495, 496, 1539, 699, 497, 700, 500, 501, 1540, 0,
	502, 0, 503, 1541, 1542, 505, 506, 507, 1543, 1544,
	508, 509, 701, 1280, 510, 1281, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 1545,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 1546, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 1547, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 1548, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 1549, 591, 592, 590, 593, 594,
	595, 1550, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 1551,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 1552, 625,
	626, 0, 622, 613, 1553, 627, 628, 629, 630, 631,
	632, 633, 634, 1554, 635, 712, 713, 714, 715, 1555,
	645, 1556, 636, 637, 638, 639, 716, 640, 717, 1557,
	641, 642, 643, 644, 0, 646, 647, 1558, 1559, 648,
	649, 650, 652, 653, 651, 654, 1560, 655, 1561, 0,
	656, 657, 658, 718, 719, 720, 1562, 660, 659, 661,
	662, 663, 721, 664, 665, 1563, 1564, 1565, 1566, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 3924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3926,
	288, 289, 291, 290, 292, 293, 294, 295, 1488, 296,
	297, 1489, 1490, 1491, 0, 1492, 671, 1493, 1494, 1495,
	298, 1496, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 1497,
	676, 310, 311, 312, 313, 314, 315, 1498, 1499, 0,
	316, 677, 678, 679, 1500, 317, 318, 680, 1501, 1568,
	1502, 319, 320, 321, 322, 323, 324, 325, 0, 1503,
	327, 328, 329, 326, 330, 1504, 331, 0, 332, 333,
	334, 335, 336, 337, 1505, 338, 339, 340, 1268, 341,
	342, 343, 1506, 1507, 1509, 1508, 1510, 1511, 1512, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 1513,
	354, 350, 352, 1514, 355, 353, 356, 1515, 357, 358,
	359, 1516, 1517, 360, 361, 362, 1518, 363, 364, 365,
	1519, 366, 367, 368, 1520, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 1521, 285, 1522, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 1523, 387, 388,
	389, 1524, 390, 1525, 1269, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1526,
	403, 689, 1527, 690, 404, 1528, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 1271, 411, 412, 1529,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1530, 1270, 499, 421, 694, 695, 1531, 696,
	1532, 422, 423, 1272, 697, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1533, 434, 436, 435, 1534, 437, 698, 1275, 438, 439,
	1276, 1535, 440, 441, 442, 443, 444, 445, 448, 1536,
	1537, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1538, 287, 1279, 493, 494, 495, 496, 1539, 699,
	497, 700, 500, 501, 1540, 0, 502, 0, 503, 1541,
	1542, 505, 506, 507, 1543, 1544, 508, 509, 701, 1280,
	510, 1281, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1545, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 1546, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 1547,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1548, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1549, 591, 592, 590, 593, 594, 595, 1550, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 1551, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 1552, 625, 626, 0, 622, 613,
	1553, 627, 628, 629, 630, 631, 632, 633, 634, 1554,
	635, 712, 713, 714, 715, 1555, 645, 1556, 636, 637,
	638, 639, 716, 640, 717, 1557, 641, 642, 643, 644,
	0, 646, 647, 1558, 1559, 648, 649, 650, 652, 653,
	651, 654, 1560, 655, 1561, 0, 656, 657, 658, 718,
	719, 720, 1562, 660, 659, 661, 662, 663, 721, 664,
	665, 1563, 1564, 1565, 1566, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4346,
	288, 289, 291, 290, 292, 293, 294, 295, 1488, 296,
	297, 1489, 1490, 1491, 0, 1492, 671, 1493, 1494, 1495,
	298, 1496, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 1497,
	676, 310, 311, 312, 313, 314, 315, 1498, 1499, 0,
	316, 677, 678, 679, 1500, 317, 318, 680, 1501, 1568,
	1502, 319, 320, 321, 322, 323, 324, 325, 0, 1503,
	327, 328, 329, 326, 330, 1504, 331, 0, 332, 333,
	334, 335, 336, 337, 1505, 338, 339, 340, 1268, 341,
	342, 343, 1506, 1507, 1509, 1508, 1510, 1511, 1512, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 1513,
	354, 350, 352, 1514, 355, 353, 356, 1515, 357, 358,
	359, 1516, 1517, 360, 361, 362, 1518, 363, 364, 365,
	1519, 366, 367, 368, 1520, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 1521, 285, 1522, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 1523, 387, 388,
	389, 1524, 390, 1525, 1269, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1526,
	403, 689, 1527, 690, 404, 1528, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 1271, 411, 412, 1529,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1530, 1270, 499, 421, 694, 695, 1531, 696,
	1532, 422, 423, 1272, 697, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1533, 434, 436, 435, 1534, 437, 698, 1275, 438, 439,
	1276, 1535, 440, 441, 442, 443, 444, 445, 448, 1536,
	1537, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1538, 287, 1279, 493, 494, 495, 496, 1539, 699,
	497, 700, 500, 501, 1540, 0, 502, 0, 503, 1541,
	1542, 505, 506, 507, 1543, 1544, 508, 509, 701, 1280,
	510, 1281, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1545, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 1546, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 1547,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1548, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1549, 591, 592, 590, 593, 594, 595, 1550, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 1551, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 1552, 625, 626, 0, 622, 613,
	1553, 627, 628, 629, 630, 631, 632, 633, 634, 1554,
	635, 712, 713, 714, 715, 1555, 645, 1556, 636, 637,
	638, 639, 716, 640, 717, 1557, 641, 642, 643, 644,
	0, 646, 647, 1558, 1559, 648, 649, 650, 652, 653,
	651, 654, 1560, 655, 1561, 0, 656, 657, 658, 718,
	719, 720, 1562, 660, 659, 661, 662, 663, 721, 664,
	665, 1563, 1564, 1565, 1566, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4344,
	288, 289, 291, 290, 292, 293, 294, 295, 1488, 296,
	297, 1489, 1490, 1491, 0, 1492, 671, 1493, 1494, 1495,
	298, 1496, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 1497,
	676, 310, 311, 312, 313, 314, 315, 1498, 1499, 0,
	316, 677, 678, 679, 1500, 317, 318, 680, 1501, 1568,
	1502, 319, 320, 321, 322, 323, 324, 325, 0, 1503,
	327, 328, 329, 326, 330, 1504, 331, 0, 332, 333,
	334, 335, 336, 337, 1505, 338, 339, 340, 1268, 341,
	342, 343, 1506, 1507, 1509, 1508, 1510, 1511, 1512, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 1513,
	354, 350, 352, 1514, 355, 353, 356, 1515, 357, 358,
	359, 1516, 1517, 360, 361, 362, 1518, 363, 364, 365,
	1519, 366, 367, 368, 1520, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 1521, 285, 1522, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 1523, 387, 388,
	389, 1524, 390, 1525, 1269, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1526,
	403, 689, 1527, 690, 404, 1528, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 1271, 411, 412, 1529,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1530, 1270, 499, 421, 694, 695, 1531, 696,
	1532, 422, 423, 1272, 697, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1533, 434, 436, 435, 1534, 437, 698, 1275, 438, 439,
	1276, 1535, 440, 441, 442, 443, 444, 445, 448, 1536,
	1537, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1538, 287, 1279, 493, 494, 495, 496, 1539, 699,
	497, 700, 500, 501, 1540, 0, 502, 0, 503, 1541,
	1542, 505, 506, 507, 1543, 1544, 508, 509, 701, 1280,
	510, 1281, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1545, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 1546, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 1547,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1548, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1549, 591, 592, 590, 593, 594, 595, 1550, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 1551, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 1552, 625, 626, 0, 622, 613,
	1553, 627, 628, 629, 630, 631, 632, 633, 634, 1554,
	635, 712, 713, 714, 715, 1555, 645, 1556, 636, 637,
	638, 639, 716, 640, 717, 1557, 641, 642, 643, 644,
	0, 646, 647, 1558, 1559, 648, 649, 650, 652, 653,
	651, 654, 1560, 655, 1561, 0, 656, 657, 658, 718,
	719, 720, 1562, 660, 659, 661, 662, 663, 721, 664,
	665, 1563, 1564, 1565, 1566, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4577, 288, 289, 291, 290, 292, 293,
	294, 295, 1488, 296, 297, 1489, 1490, 1491, 0, 1492,
	671, 1493, 1494, 1495, 298, 1496, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 1497, 676, 310, 311, 312, 313, 314,
	315, 1498, 1499, 0, 316, 677, 678, 679, 1500, 317,
	318, 680, 1501, 1568, 1502, 319, 320, 321, 322, 323,
	324, 325, 0, 1503, 327, 328, 329, 326, 330, 1504,
	331, 0, 332, 333, 334, 335, 336, 337, 1505, 338,
	339, 340, 1268, 341, 342, 343, 1506, 1507, 1509, 1508,
	1510, 1511, 1512, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 1513, 354, 350, 352, 1514, 355, 353,
	356, 1515, 357, 358, 359, 1516, 1517, 360, 361, 362,
	1518, 363, 364, 365, 1519, 366, 367, 368, 1520, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 1521, 285, 1522, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 1523, 387, 388, 389, 1524, 390, 1525, 1269, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 1526, 403, 689, 1527, 690, 404, 1528,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	1271, 411, 412, 1529, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 1530, 1270, 499, 421,
	694, 695, 1531, 696, 1532, 422, 423, 1272, 697, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 1533, 434, 436, 435, 1534, 437,
	698, 1275, 438, 439, 1276, 1535, 440, 441, 442, 443,
	444, 445, 448, 1536, 1537, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1538, 287, 1279, 493, 494,
	495, 496, 1539, 699, 497, 700, 500, 501, 1540, 0,
	502, 0, 503, 1541, 1542, 505, 506, 507, 1543, 1544,
	508, 509, 701, 1280, 510, 1281, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 1545,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 1546, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 1547, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 1548, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 1549, 591, 592, 590, 593, 594,
	595, 1550, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 1551,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 1552, 625,
	626, 0, 622, 613, 1553, 627, 628, 629, 630, 631,
	632, 633, 634, 1554, 635, 712, 713, 714, 715, 1555,
	645, 1556, 636, 637, 638, 639, 716, 640, 717, 1557,
	641, 642, 643, 644, 0, 646, 647, 1558, 1559, 648,
	649, 650, 652, 653, 651, 654, 1560, 655, 1561, 0,
	656, 657, 658, 718, 719, 720, 1562, 660, 659, 661,
	662, 663, 721, 664, 665, 1563, 1564, 1565, 1566, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4441, 288, 289,
	291, 290, 292, 293, 294, 295, 1488, 296, 297, 1489,
	1490, 1491, 0, 1492, 671, 1493, 1494, 1495, 298, 1496,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 1497, 676, 310,
	311, 312, 313, 314, 315, 1498, 1499, 0, 316, 677,
	678, 679, 1500, 317, 318, 680, 1501, 1568, 1502, 319,
	320, 321, 322, 323, 324, 325, 0, 1503, 327, 328,
	329, 326, 330, 1504, 331, 0, 332, 333, 334, 335,
	336, 337, 1505, 338, 339, 340, 1268, 341, 342, 343,
	1506, 1507, 1509, 1508, 1510, 1511, 1512, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 1513, 354, 350,
	352, 1514, 355, 353, 356, 1515, 357, 358, 359, 1516,
	1517, 360, 361, 362, 1518, 363, 364, 365, 1519, 366,
	367, 368, 1520, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	1521, 285, 1522, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 1523, 387, 388, 389, 1524,
	390, 1525, 1269, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 1526, 403, 689,
	1527, 690, 404, 1528, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 1271, 411, 412, 1529, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	1530, 1270, 499, 421, 694, 695, 1531, 696, 1532, 422,
	423, 1272, 697, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 1533, 434,
	436, 435, 1534, 437, 698, 1275, 438, 439, 1276, 1535,
	440, 441, 442, 443, 444, 445, 448, 1536, 1537, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 1538,
	287, 1279, 493, 494, 495, 496, 1539, 699, 497, 700,
	500, 501, 1540, 0, 502, 0, 503, 1541, 1542, 505,
	506, 507, 1543, 1544, 508, 509, 701, 1280, 510, 1281,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 1545, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 1546,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 1547, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 1548, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 1549, 591,
	592, 590, 593, 594, 595, 1550, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 1551, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 1552, 625, 626, 0, 622, 613, 1553, 627,
	628, 629, 630, 631, 632, 633, 634, 1554, 635, 712,
	713, 714, 715, 1555, 645, 1556, 636, 637, 638, 639,
	716, 640, 717, 1557, 641, 642, 643, 644, 0, 646,
	647, 1558, 1559, 648, 649, 650, 652, 653, 651, 654,
	1560, 655, 1561, 0, 656, 657, 658, 718, 719, 720,
	1562, 660, 659, 661, 662, 663, 721, 664, 665, 1563,
	1564, 1565, 1566, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4274, 288, 289, 291, 290, 292, 293, 294, 295,
	1488, 296, 297, 1489, 1490, 1491, 0, 1492, 671, 1493,
	1494, 1495, 298, 1496, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 1497, 676, 310, 311, 312, 313, 314, 315, 1498,
	1499, 0, 316, 677, 678, 679, 1500, 317, 318, 680,
	1501, 1568, 1502, 319, 320, 321, 322, 323, 324, 325,
	0, 1503, 327, 328, 329, 326, 330, 1504, 331, 0,
	332, 333, 334, 335, 336, 337, 1505, 338, 339, 340,
	1268, 341, 342, 343, 1506, 1507, 1509, 1508, 1510, 1511,
	1512, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 1513, 354, 350, 352, 1514, 355, 353, 356, 1515,
	357, 358, 359, 1516, 1517, 360, 361, 362, 1518, 363,
	364, 365, 1519, 366, 367, 368, 1520, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 1521, 285, 1522, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 1523,
	387, 388, 389, 1524, 390, 1525, 1269, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 1526, 403, 689, 1527, 690, 404, 1528, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 1271, 411,
	412, 1529, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 1530, 1270, 499, 421, 694, 695,
	1531, 696, 1532, 422, 423, 1272, 697, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 1533, 434, 436, 435, 1534, 437, 698, 1275,
	438, 439, 1276, 1535, 440, 441, 442, 443, 444, 445,
	448, 1536, 1537, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 1538, 287, 1279, 493, 494, 495, 496,
	1539, 699, 497, 700, 500, 501, 1540, 0, 502, 0,
	503, 1541, 1542, 505, 506, 507, 1543, 1544, 508, 509,
	701, 1280, 510, 1281, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 1545, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 1546, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 1547, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 1548, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 1549, 591, 592, 590, 593, 594, 595, 1550,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 1551, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 1552, 625, 626, 0,
	622, 613, 1553, 627, 628, 629, 630, 631, 632, 633,
	634, 1554, 635, 712, 713, 714, 715, 1555, 645, 1556,
	636, 637, 638, 639, 716, 640, 717, 1557, 641, 642,
	643, 644, 0, 646, 647, 1558, 1559, 648, 649, 650,
	652, 653, 651, 654, 1560, 655, 1561, 0, 656, 657,
	658, 718, 719, 720, 1562, 660, 659, 661, 662, 663,
	721, 664, 665, 1563, 1564, 1565, 1566, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3942, 288, 289, 291, 290,
	292, 293, 294, 295, 1488, 296, 297, 1489, 1490, 1491,
	0, 1492, 671, 1493, 1494, 1495, 298, 1496, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 1497, 676, 310, 311, 312,
	313, 314, 315, 1498, 1499, 0, 316, 677, 678, 679,
	1500, 317, 318, 680, 1501, 1568, 1502, 319, 320, 321,
	322, 323, 324, 325, 0, 1503, 327, 328, 329, 326,
	330, 1504, 331, 0, 332, 333, 334, 335, 336, 337,
	1505, 338, 339, 340, 1268, 341, 342, 343, 1506, 1507,
	1509, 1508, 1510, 1511, 1512, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 1513, 354, 350, 352, 1514,
	355, 353, 356, 1515, 357, 358, 359, 1516, 1517, 360,
	361, 362, 1518, 363, 364, 365, 1519, 366, 367, 368,
	1520, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 1521, 285,
	1522, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 1523, 387, 388, 389, 1524, 390, 1525,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 1526, 403, 689, 1527, 690,
	404, 1528, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 1271, 411, 412, 1529, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 1530, 1270,
	499, 421, 694, 695, 1531, 696, 1532, 422, 423, 1272,
	697, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1533, 434, 436, 435,
	1534, 437, 698, 1275, 438, 439, 1276, 1535, 440, 441,
	442, 443, 444, 445, 448, 1536, 1537, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1538, 287, 1279,
	493, 494, 495, 496, 1539, 699, 497, 700, 500, 501,
	1540, 0, 502, 0, 503, 1541, 1542, 505, 506, 507,
	1543, 1544, 508, 509, 701, 1280, 510, 1281, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 1545, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 1546, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 1547, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	1548, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 1549, 591, 592, 590,
	593, 594, 595, 1550, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 1551, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	1552, 625, 626, 0, 622, 613, 1553, 627, 628, 629,
	630, 631, 632, 633, 634, 1554, 635, 712, 713, 714,
	715, 1555, 645, 1556, 636, 637, 638, 639, 716, 640,
	717, 1557, 641, 642, 643, 644, 0, 646, 647, 1558,
	1559, 648, 649, 650, 652, 653, 651, 654, 1560, 655,
	1561, 0, 656, 657, 658, 718, 719, 720, 1562, 660,
	659, 661, 662, 663, 721, 664, 665, 1563, 1564, 1565,
	1566, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3758,
	288, 289, 291, 290, 292, 293, 294, 295, 1488, 296,
	297, 1489, 1490, 1491, 0, 1492, 671, 1493, 1494, 1495,
	298, 1496, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 1497,
	676, 310, 311, 312, 313, 314, 315, 1498, 1499, 0,
	316, 677, 678, 679, 1500, 317, 318, 680, 1501, 1568,
	1502, 319, 320, 321, 322, 323, 324, 325, 0, 1503,
	327, 328, 329, 326, 330, 1504, 331, 0, 332, 333,
	334, 335, 336, 337, 1505, 338, 339, 340, 1268, 341,
	342, 343, 1506, 1507, 1509, 1508, 1510, 1511, 1512, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 1513,
	354, 350, 352, 1514, 355, 353, 356, 1515, 357, 358,
	359, 1516, 1517, 360, 361, 362, 1518, 363, 364, 365,
	1519, 366, 367, 368, 1520, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 1521, 285, 1522, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 1523, 387, 388,
	389, 1524, 390, 1525, 1269, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 1526,
	403, 689, 1527, 690, 404, 1528, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 1271, 411, 412, 1529,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 1530, 1270, 499, 421, 694, 695, 1531, 696,
	1532, 422, 423, 1272, 697, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	1533, 434, 436, 435, 1534, 437, 698, 1275, 438, 439,
	1276, 1535, 440, 441, 442, 443, 444, 445, 448, 1536,
	1537, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1538, 287, 1279, 493, 494, 495, 496, 1539, 699,
	497, 700, 500, 501, 1540, 0, 502, 0, 503, 1541,
	1542, 505, 506, 507, 1543, 1544, 508, 509, 701, 1280,
	510, 1281, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 1545, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 1546, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 1547,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 1548, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	1549, 591, 592, 590, 593, 594, 595, 1550, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 1551, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 1552, 625, 626, 0, 622, 613,
	1553, 627, 628, 629, 630, 631, 632, 633, 634, 1554,
	635, 712, 713, 714, 715, 1555, 645, 1556, 636, 637,
	638, 639, 716, 640, 717, 1557, 641, 642, 643, 644,
	0, 646, 647, 1558, 1559, 648, 649, 650, 652, 653,
	651, 654, 1560, 655, 1561, 0, 656, 657, 658, 718,
	719, 720, 1562, 660, 659, 661, 662, 663, 721, 664,
	665, 1563, 1564, 1565, 1566, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2760, 288, 289, 291, 290, 292, 293,
	294, 295, 1488, 296, 297, 1489, 1490, 1491, 0, 1492,
	671, 1493, 1494, 1495, 298, 1496, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 1497, 676, 310, 311, 312, 313, 314,
	315, 1498, 1499, 0, 316, 677, 678, 679, 1500, 317,
	318, 680, 1501, 1568, 1502, 319, 320, 321, 322, 323,
	324, 325, 0, 1503, 327, 328, 329, 326, 330, 1504,
	331, 0, 332, 333, 334, 335, 336, 337, 1505, 338,
	339, 340, 1268, 341, 342, 343, 1506, 1507, 1509, 1508,
	1510, 1511, 1512, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 1513, 354, 350, 352, 1514, 355, 353,
	356, 1515, 357, 358, 359, 1516, 1517, 360, 361, 362,
	1518, 363, 364, 365, 1519, 366, 367, 368, 1520, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 1521, 285, 1522, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 1523, 387, 388, 389, 1524, 390, 1525, 1269, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 1526, 403, 689, 1527, 690, 404, 1528,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	1271, 411, 412, 1529, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 1530, 1270, 499, 421,
	694, 695, 1531, 696, 1532, 422, 423, 1272, 697, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 1533, 434, 436, 435, 1534, 437,
	698, 1275, 438, 439, 1276, 1535, 440, 441, 442, 443,
	444, 445, 448, 1536, 1537, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1538, 287, 1279, 493, 494,
	495, 496, 1539, 699, 497, 700, 500, 501, 1540, 0,
	502, 0, 503, 1541, 1542, 505, 506, 507, 1543, 1544,
	508, 509, 701, 1280, 510, 1281, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 1545,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 1546, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 1547, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 1548, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 1549, 591, 592, 590, 593, 594,
	595, 1550, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 1551,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 1552, 625,
	626, 0, 622, 613, 1553, 627, 628, 629, 630, 631,
	632, 633, 634, 1554, 635, 712, 713, 714, 715, 1555,
	645, 1556, 636, 637, 638, 639, 716, 640, 717, 1557,
	641, 642, 643, 644, 0, 646, 647, 1558, 1559, 648,
	649, 650, 652, 653, 651, 654, 1560, 655, 1561, 0,
	656, 657, 658, 718, 719, 720, 1562, 660, 659, 661,
	662, 663, 721, 664, 665, 1563, 1564, 1565, 1566, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 1479,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 288, 289,
	291, 290, 292, 293, 294, 295, 1488, 296, 297, 1489,
	1490, 1491, 0, 1492, 671, 1493, 1494, 1495, 298, 1496,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 1497, 676, 310,
	311, 312, 313, 314, 315, 1498, 1499, 0, 316, 677,
	678, 679, 1500, 317, 318, 680, 1501, 1568, 1502, 319,
	320, 321, 322, 323, 324, 325, 0, 1503, 327, 328,
	329, 326, 330, 1504, 331, 0, 332, 333, 334, 335,
	336, 337, 1505, 338, 339, 340, 1268, 341, 342, 343,
	1506, 1507, 1509, 1508, 1510, 1511, 1512, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 1513, 354, 350,
	352, 1514, 355, 353, 356, 1515, 357, 358, 359, 1516,
	1517, 360, 361, 362, 1518, 363, 364, 365, 1519, 366,
	367, 368, 1520, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	1521, 285, 1522, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 1523, 387, 388, 389, 1524,
	390, 1525, 1269, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 1526, 403, 689,
	1527, 690, 404, 1528, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 1271, 411, 412, 1529, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	1530, 1270, 499, 421, 694, 695, 1531, 696, 1532, 422,
	423, 1272, 697, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 1533, 434,
	436, 435, 1534, 437, 698, 1275, 438, 439, 1276, 1535,
	440, 441, 442, 443, 444, 445, 448, 1536, 1537, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 1538,
	287, 1279, 493, 494, 495, 496, 1539, 699, 497, 700,
	500, 501, 1540, 0, 502, 0, 503, 1541, 1542, 505,
	506, 507, 1543, 1544, 508, 509, 701, 1280, 510, 1281,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 1545, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 1546,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 1547, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 1548, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 1549, 591,
	592, 590, 593, 594, 595, 1550, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 1551, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 1552, 625, 626, 0, 622, 613, 1553, 627,
	628, 629, 630, 631, 632, 633, 634, 1554, 635, 712,
	713, 714, 715, 1555, 645, 1556, 636, 637, 638, 639,
	716, 640, 717, 1557, 641, 642, 643, 644, 0, 646,
	647, 1558, 1559, 648, 649, 650, 652, 653, 651, 654,
	1560, 655, 1561, 0, 656, 657, 658, 718, 719, 720,
	1562, 660, 659, 661, 662, 663, 721, 664, 665, 1563,
	1564, 1565, 1566, 666, 667, 722, 668, 669, 670, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 1488, 296, 297, 1489, 1490, 1491,
	0, 1492, 671, 1493, 1494, 1495, 298, 1496, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 1497, 676, 310, 311, 312,
	313, 314, 315, 1498, 1499, 0, 316, 677, 678, 679,
	1500, 317, 318, 680, 1501, 1568, 1502, 319, 320, 321,
	322, 323, 324, 325, 0, 1503, 327, 328, 329, 326,
	330, 1504, 331, 0, 332, 333, 334, 335, 336, 337,
	1505, 338, 339, 340, 1268, 341, 342, 343, 1506, 1507,
	1509, 1508, 1510, 1511, 1512, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 1513, 354, 350, 352, 1514,
	355, 353, 356, 1515, 357, 358, 359, 1516, 1517, 360,
	361, 362, 1518, 363, 364, 365, 1519, 366, 367, 368,
	1520, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 1521, 285,
	1522, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 1523, 387, 388, 389, 1524, 390, 1525,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 1526, 403, 689, 1527, 690,
	404, 1528, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 1271, 411, 412, 1529, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 1530, 1270,
	499, 421, 694, 695, 1531, 696, 1532, 422, 423, 1272,
	697, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1533, 434, 436, 435,
	1534, 437, 698, 1275, 438, 439, 1276, 1535, 440, 441,
	442, 443, 444, 445, 448, 1536, 1537, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1538, 287, 1279,
	493, 494, 495, 496, 1539, 699, 497, 700, 500, 501,
	1540, 0, 502, 0, 503, 1541, 1542, 505, 506, 507,
	1543, 1544, 508, 509, 701, 1280, 510, 1281, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 1545, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 1546, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 1547, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	1548, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 1549, 591, 592, 590,
	593, 594, 595, 1550, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 1551, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	1552, 625, 626, 0, 622, 613, 1553, 627, 628, 629,
	630, 631, 632, 633, 634, 1554, 635, 712, 713, 714,
	715, 1555, 645, 1556, 636, 637, 638, 639, 716, 640,
	717, 1557, 641, 642, 643, 644, 0, 646, 647, 1558,
	1559, 648, 649, 650, 652, 653, 651, 654, 1560, 655,
	1561, 0, 656, 657, 658, 718, 719, 720, 1562, 660,
	659, 661, 662, 663, 721, 664, 665, 1563, 1564, 1565,
	1566, 666, 667, 722, 668, 669, 670, 2735, 0, 1203,
	1175, 1176, 1177, 1173, 1174, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 2732, 296, 297, 0, 0, 0,
	0, 0, 1227, 1191, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 1240,
	0, 308, 1247, 309, 1246, 0, 1257, 310, 311, 312,
	313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	1250, 349, 351, 1244, 1243, 1163, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 2733, 0, 360,
	1235, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1169, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 1182, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1242, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 1255, 1256, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 1192,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 1237, 1238, 0, 1198, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1160, 287, 1279,
	493, 494, 495, 496, 1183, 1231, 497, 1245, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 1170, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1241,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	1171, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 1239, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1286, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 1157, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1251, 1252, 1253,
	1254, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 1181, 641, 642, 643, 644, 0, 646, 647, 0,
	1164, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 1248, 1285, 2731, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 1154, 1155, 2734,
	0, 0, 0, 0, 0, 0, 0, 1187, 2730, 0,
	1147, 1185, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 244,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 246,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 1722, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 238, 666, 667, 722, 668, 669, 670,
	1161, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1986, 1984, 0, 0, 1185, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 244,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 246,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 1722, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 238, 666, 667, 722, 668, 669, 670,
	1161, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1986, 3387, 0, 0, 1185, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 244,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 246,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 1722, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 238, 666, 667, 722, 668, 669, 670,
	1161, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1986, 1984, 0, 0, 1185, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 2866, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 2871, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 2867, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 2868, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 718, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	1161, 0, 0, 2780, 0, 1203, 1175, 1176, 1177, 1173,
	1174, 1186, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 288, 289, 291, 290, 292, 293, 294, 295,
	1187, 296, 297, 0, 1185, 0, 0, 0, 1227, 1191,
	0, 0, 298, 0, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 672, 1240, 0, 308, 1247, 309,
	1246, 0, 1257, 310, 311, 312, 313, 314, 315, 1193,
	1226, 1158, 316, 1287, 1288, 679, 0, 317, 318, 1233,
	0, 1214, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218,
	1222, 344, 345, 346, 347, 348, 1250, 349, 351, 1244,
	1243, 1163, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1235, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1169,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1258, 1259, 382, 1182, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1242, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1269, 391, 392, 393,
	1255, 1256, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1265, 0, 1192, 404, 0, 405, 406,
	407, 408, 409, 410, 1228, 1229, 1232, 498, 1271, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1270, 499, 421, 1237, 1238,
	0, 1198, 0, 422, 423, 1272, 1230, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1266, 1275,
	438, 439, 1276, 0, 440, 441, 442, 443, 444, 445,
	448, 1221, 1220, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 1160, 287, 1279, 493, 494, 495, 496,
	1183, 1231, 497, 1245, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 1280, 510, 1281, 1260, 511, 512, 1170, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 1261, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1241, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 1171, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1224,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 1239, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1286, 616,
	617, 618, 619, 1262, 623, 624, 0, 625, 626, 1157,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1251, 1252, 1253, 1254, 0, 645, 0,
	636, 637, 638, 639, 1263, 640, 1264, 1181, 641, 642,
	643, 644, 0, 646, 647, 0, 1164, 648, 649, 650,
	652, 653, 651, 654, 1225, 655, 0, 0, 656, 657,
	658, 718, 1248, 1285, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 0, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 1154, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 2778, 0, 2777, 1185, 1203, 1175,
	1176, 1177, 1173, 1174, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 1227, 1191, 0, 0, 298, 0, 299, 300, 1267,
	301, 302, 303, 304, 305, 306, 307, 672, 1240, 0,
	308, 1247, 309, 1246, 0, 1257, 310, 311, 312, 313,
	314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0,
	317, 318, 1233, 0, 1214, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1268, 341, 342, 343, 1217, 1215, 1216,
	1223, 1219, 1218, 1222, 344, 345, 346, 347, 348, 1250,
	349, 351, 1244, 1243, 1163, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1235,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1169, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1258, 1259, 382, 1182, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1242, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1269,
	391, 392, 393, 1255, 1256, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1265, 0, 1192, 404,
	0, 405, 406, 407, 408, 409, 410, 1228, 1229, 1232,
	498, 1271, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1270, 499,
	421, 1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230,
	1273, 424, 425, 426, 1274, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1266, 1275, 438, 439, 1276, 0, 440, 441, 442,
	443, 444, 445, 448, 1221, 1220, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1277, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1278, 491, 479, 1160, 287, 1279, 493,
	494, 495, 496, 1183, 1231, 497, 1245, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 701, 1280, 510, 1281, 1260, 511, 512,
	1170, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 703, 524, 525, 526, 704, 527, 528,
	529, 1261, 530, 706, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 1241, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1282, 568, 569, 570, 571, 572, 1171,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 1224, 596, 597, 579, 580, 598, 599, 1283,
	600, 601, 602, 603, 604, 605, 606, 1239, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 1286, 616, 617, 618, 619, 1262, 623, 624, 0,
	625, 626, 1157, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 1251, 1252, 1253, 1254,
	0, 645, 0, 636, 637, 638, 639, 1263, 640, 1264,
	1181, 641, 642, 643, 644, 0, 646, 647, 0, 1164,
	648, 649, 650, 652, 653, 651, 654, 1225, 655, 0,
	0, 656, 657, 658, 718, 1248, 1285, 0, 660, 659,
	661, 662, 663, 721, 664, 665, 0, 0, 0, 0,
	666, 667, 722, 668, 669, 670, 1161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1156,
	0, 0, 0, 0, 0, 0, 1154, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 1187, 2775, 0, 2774,
	1185, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 1227, 1191, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 1240, 0, 308, 1247, 309, 1246, 0, 1257, 310,
	311, 312, 313, 314, 315, 1193, 1226, 1158, 316, 1287,
	1288, 679, 0, 317, 318, 1233, 0, 1214, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346,
	347, 348, 1250, 349, 351, 1244, 1243, 1163, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1235, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1169, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1258, 1259, 382,
	1182, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1242, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 1255, 1256, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1265,
	0, 1192, 404, 0, 405, 406, 407, 408, 409, 410,
	1228, 1229, 1232, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1270, 499, 421, 1237, 1238, 0, 1198, 0, 422,
	423, 1272, 1230, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1266, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 1221, 1220, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 1160,
	287, 1279, 493, 494, 495, 496, 1183, 1231, 497, 1245,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	1260, 511, 512, 1170, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 1261, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1241, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 1171, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1224, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	1239, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1286, 616, 617, 618, 619, 1262,
	623, 624, 0, 625, 626, 1157, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1251,
	1252, 1253, 1254, 0, 645, 0, 636, 637, 638, 639,
	1263, 640, 1264, 1181, 641, 642, 643, 644, 0, 646,
	647, 0, 1164, 648, 649, 650, 652, 653, 651, 654,
	1225, 655, 0, 0, 656, 657, 658, 718, 1248, 1285,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 1154,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 1187,
	2772, 0, 2771, 1185, 1203, 1175, 1176, 1177, 1173, 1174,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 1227, 1191, 0,
	0, 298, 0, 299, 300, 1267, 301, 302, 303, 304,
	305, 306, 307, 672, 1240, 0, 308, 1247, 309, 1246,
	0, 1257, 310, 311, 312, 313, 314, 315, 1193, 1226,
	1158, 316, 1287, 1288, 679, 0, 317, 318, 1233, 0,
	1214, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1268,
	341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222,
	344, 345, 346, 347, 348, 1250, 349, 351, 1244, 1243,
	1163, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1235, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1169, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1258, 1259, 382, 1182, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1242, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1269, 391, 392, 393, 1255,
	1256, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1265, 0, 1192, 404, 0, 405, 406, 407,
	408, 409, 410, 1228, 1229, 1232, 498, 1271, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1270, 499, 421, 1237, 1238, 0,
	1198, 0, 422, 423, 1272, 1230, 1273, 424, 425, 426,
	1274, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1266, 1275, 438,
	439, 1276, 0, 440, 441, 442, 443, 444, 445, 448,
	1221, 1220, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1277, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1278,
	491, 479, 1160, 287, 1279, 493, 494, 495, 496, 1183,
	1231, 497, 1245, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 701,
	1280, 510, 1281, 1260, 511, 512, 1170, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 703,
	524, 525, 526, 704, 527, 528, 529, 1261, 530, 706,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 1241, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1282,
	568, 569, 570, 571, 572, 1171, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1224, 596,
	597, 579, 580, 598, 599, 1283, 600, 601, 602, 603,
	604, 605, 606, 1239, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 1286, 616, 617,
	618, 619, 1262, 623, 624, 0, 625, 626, 1157, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 1251, 1252, 1253, 1254, 0, 645, 0, 636,
	637, 638, 639, 1263, 640, 1264, 1181, 641, 642, 643,
	644, 0, 646, 647, 0, 1164, 648, 649, 650, 652,
	653, 651, 654, 1225, 655, 0, 0, 656, 657, 658,
	718, 1248, 1285, 0, 660, 659, 661, 662, 663, 721,
	664, 665, 0, 0, 0, 0, 666, 667, 722, 668,
	669, 670, 1161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 1154, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 1187, 2769, 0, 1823, 1185, 1203, 1175, 1176,
	1177, 1173, 1174, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	1227, 1191, 0, 0, 298, 0, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 1240, 0, 308,
	1247, 309, 1246, 0, 1257, 310, 311, 312, 313, 314,
	315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317,
	318, 1233, 0, 1214, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223,
	1219, 1218, 1222, 344, 345, 346, 347, 348, 1250, 349,
	351, 1244, 1243, 1163, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1235, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1169, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1258, 1259, 382, 1182, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1242, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1269, 391,
	392, 393, 1255, 1256, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1265, 0, 1192, 404, 0,
	405, 406, 407, 408, 409, 410, 1228, 1229, 1232, 498,
	1271, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1270, 499, 421,
	1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1266, 1275, 438, 439, 1276, 0, 440, 441, 442, 443,
	444, 445, 448, 1221, 1220, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1160, 287, 1279, 493, 494,
	495, 496, 1183, 1231, 497, 1245, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 1280, 510, 1281, 1260, 511, 512, 1170,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	1261, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1241, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 1171, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1224, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 1239, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1286, 616, 617, 618, 619, 1262, 623, 624, 0, 625,
	626, 1157, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1251, 1252, 1253, 1254, 0,
	645, 0, 636, 637, 638, 639, 1263, 640, 1264, 1181,
	641, 642, 643, 644, 0, 646, 647, 0, 1164, 648,
	649, 650, 652, 653, 651, 654, 1225, 655, 0, 0,
	656, 657, 658, 718, 1248, 1285, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 1822, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 1161, 0, 0, 1150, 0,
	1203, 1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0,
	0, 0, 0, 0, 0, 1154, 1155, 288, 289, 291,
	290, 292, 293, 294, 295, 1187, 296, 297, 0, 1185,
	0, 0, 0, 1227, 1191, 0, 0, 298, 0, 299,
	300, 1267, 301, 302, 303, 304, 305, 306, 307, 672,
	1240, 0, 308, 1247, 309, 1246, 0, 1257, 310, 311,
	312, 313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288,
	679, 0, 317, 318, 1233, 0, 1214, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1268, 341, 342, 343, 1217,
	1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347,
	348, 1250, 349, 351, 1244, 1243, 1163, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1235, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1169, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1258, 1259, 382, 1182,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1242,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1269, 391, 392, 393, 1255, 1256, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1265, 0,
	1192, 404, 0, 405, 406, 407, 408, 409, 410, 1228,
	1229, 1232, 498, 1271, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1270, 499, 421, 1237, 1238, 0, 1198, 0, 422, 423,
	1272, 1230, 1273, 424, 425, 426, 1274, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1266, 1275, 438, 439, 1276, 0, 440,
	441, 442, 443, 444, 445, 448, 1221, 1220, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1277, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1278, 491, 479, 1160, 287,
	1279, 493, 494, 495, 496, 1183, 1231, 497, 1245, 500,
	501, 0, 0, 502, 0, 503, 1165, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 1280, 510, 1281, 1260,
	511, 512, 1170, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 1261, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	1241, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1282, 568, 569, 570, 571,
	572, 1171, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 1224, 596, 597, 579, 580, 598,
	599, 1283, 600, 601, 602, 603, 604, 605, 606, 1239,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 1286, 616, 617, 618, 619, 1262, 623,
	624, 0, 625, 626, 1157, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 1251, 1252,
	1253, 1254, 0, 645, 0, 636, 637, 638, 639, 1263,
	640, 1264, 1181, 641, 642, 643, 644, 0, 646, 647,
	0, 1164, 648, 649, 650, 652, 653, 651, 654, 1225,
	655, 0, 0, 656, 657, 658, 718, 1248, 1285, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 1161, 0,
	0, 0, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186,
	0, 1156, 0, 0, 0, 0, 0, 0, 1154, 1155,
	288, 289, 291, 290, 292, 293, 294, 295, 1187, 296,
	297, 0, 1185, 0, 0, 0, 1227, 1191, 0, 0,
	298, 0, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 1240, 0, 308, 1247, 309, 1246, 0,
	1257, 310, 311, 312, 313, 314, 315, 1193, 1226, 1158,
	316, 1287, 1288, 679, 0, 317, 318, 1233, 0, 1214,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 4945, 337, 0, 338, 339, 340, 1268, 341,
	342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344,
	345, 346, 347, 348, 1250, 349, 351, 1244, 1243, 1163,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1235, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1169, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1258,
	1259, 382, 1182, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1242, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1269, 391, 392, 393, 1255, 1256,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1265, 0, 1192, 404, 0, 405, 406, 407, 408,
	409, 410, 1228, 1229, 1232, 498, 1271, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1270, 499, 421, 1237, 1238, 0, 1198,
	0, 422, 423, 1272, 1230, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1266, 1275, 438, 439,
	1276, 0, 440, 441, 442, 443, 444, 445, 448, 1221,
	1220, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1160, 287, 1279, 493, 494, 495, 496, 1183, 1231,
	497, 1245, 500, 501, 0, 0, 502, 0, 503, 1165,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 1280,
	510, 1281, 1260, 511, 512, 1170, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 1261, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1241, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 1171, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1224, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 1239, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1286, 616, 617, 618,
	619, 1262, 623, 624, 0, 625, 626, 1157, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1251, 1252, 1253, 1254, 0, 645, 0, 636, 637,
	638, 639, 1263, 640, 1264, 1181, 641, 642, 643, 644,
	0, 646, 647, 0, 1164, 648, 649, 650, 652, 653,
	651, 654, 1225, 655, 0, 0, 656, 657, 658, 718,
	1248, 1285, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 0, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 1161, 0, 0, 0, 0, 1203, 1175, 1176, 1177,
	1173, 1174, 1186, 0, 1156, 0, 0, 0, 0, 0,
	0, 1154, 1155, 288, 289, 291, 290, 292, 293, 294,
	295, 1187, 296, 297, 0, 1185, 0, 0, 0, 1227,
	1191, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 1240, 0, 308, 1247,
	309, 1246, 0, 1257, 310, 311, 312, 313, 314, 315,
	1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 1250, 349, 351,
	1244, 1243, 1163, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1235, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1169, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 1182, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1242, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 1255, 1256, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 1192, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 2612, 418, 419, 420, 0, 1270, 499, 421, 1237,
	1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 1160, 287, 1279, 493, 494, 495,
	496, 1183, 1231, 497, 1245, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 1170, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 2611, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 1241, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 1171, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 1239, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 1286,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	1157, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 1251, 1252, 1253, 1254, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 1181, 641,
	642, 643, 644, 0, 646, 647, 0, 1164, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 1248, 1285, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 1161, 0, 0, 0, 0, 1203,
	1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0,
	0, 0, 0, 0, 1154, 1155, 288, 289, 291, 290,
	292, 293, 294, 295, 1187, 296, 297, 0, 1185, 0,
	0, 0, 1227, 1191, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 1240,
	0, 308, 1247, 309, 1246, 0, 1257, 310, 311, 312,
	313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 4668, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	1250, 349, 351, 1244, 1243, 1163, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1235, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1169, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 1182, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1242, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 1255, 1256, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 1192,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 1237, 1238, 0, 1198, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1160, 287, 1279,
	493, 494, 495, 496, 1183, 1231, 497, 1245, 500, 501,
	0, 0, 502, 0, 503, 1165, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 1170, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1241,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	1171, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 1239, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1286, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 1157, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1251, 1252, 1253,
	1254, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 1181, 641, 642, 643, 644, 0, 646, 647, 0,
	1164, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 1248, 1285, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 1161, 0, 0,
	0, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1156, 0, 0, 0, 0, 0, 0, 1154, 1155, 288,
	289, 291, 290, 292, 293, 294, 295, 1187, 296, 297,
	0, 1185, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 1165, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 718, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	1161, 0, 0, 0, 0, 1203, 1175, 1176, 1177, 1173,
	1174, 1186, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 288, 289, 291, 290, 292, 293, 294, 295,
	1187, 296, 297, 0, 1185, 0, 0, 0, 1227, 1191,
	0, 0, 298, 0, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 672, 1240, 0, 308, 1247, 309,
	1246, 0, 1257, 310, 311, 312, 313, 314, 315, 1193,
	1226, 1158, 316, 1287, 1288, 679, 0, 317, 318, 1233,
	0, 1214, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218,
	1222, 344, 345, 346, 347, 348, 1250, 349, 351, 1244,
	1243, 1163, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1235, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1169,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1258, 1259, 382, 1182, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1242, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1269, 391, 392, 393,
	1255, 1256, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1265, 0, 1192, 404, 0, 405, 406,
	407, 408, 409, 410, 1228, 1229, 1232, 498, 1271, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1270, 499, 421, 1237, 1238,
	0, 1198, 0, 422, 423, 1272, 1230, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1266, 1275,
	438, 439, 1276, 0, 440, 441, 442, 443, 444, 445,
	448, 1221, 1220, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 1160, 4237, 1279, 493, 494, 495, 496,
	1183, 1231, 497, 1245, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 1280, 510, 1281, 1260, 511, 512, 1170, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 1261, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1241, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 1171, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1224,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 1239, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1286, 616,
	617, 618, 619, 1262, 623, 624, 0, 625, 626, 1157,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1251, 1252, 1253, 1254, 0, 645, 0,
	636, 637, 638, 639, 1263, 640, 1264, 1181, 641, 642,
	643, 644, 0, 646, 647, 0, 1164, 648, 649, 650,
	652, 653, 651, 654, 1225, 655, 0, 0, 656, 657,
	658, 718, 1248, 1285, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 0, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 0, 0,
	0, 0, 0, 1154, 1155, 2055, 1203, 1175, 1176, 1177,
	1173, 1174, 1186, 1187, 0, 0, 0, 1185, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 1227,
	1191, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 1240, 0, 308, 1247,
	309, 1246, 0, 1257, 310, 311, 312, 313, 314, 315,
	1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 1250, 349, 351,
	1244, 1243, 1163, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1235, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1169, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 1182, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1242, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 1255, 1256, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 1192, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1270, 499, 421, 1237,
	1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 1160, 287, 1279, 493, 494, 495,
	496, 1183, 1231, 497, 1245, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 1170, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 1241, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 1171, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 1239, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 1286,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	1157, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 1251, 1252, 1253, 1254, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 1181, 641,
	642, 643, 644, 0, 646, 647, 0, 1164, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 1248, 1285, 3920, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 1161, 0, 0, 0, 0, 1203,
	1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0,
	0, 0, 0, 0, 1154, 1155, 288, 289, 291, 290,
	292, 293, 294, 295, 1187, 296, 297, 0, 1185, 0,
	0, 0, 1227, 1191, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 1240,
	0, 308, 1247, 309, 1246, 0, 1257, 310, 311, 312,
	313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	1250, 349, 351, 1244, 1243, 1163, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1235, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1169, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 1182, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1242, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 1255, 1256, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 1192,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 1237, 1238, 0, 1198, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1160, 287, 1279,
	493, 494, 495, 496, 1183, 1231, 497, 1245, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 1170, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1241,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	1171, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 1239, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1286, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 1157, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1251, 1252, 1253,
	1254, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 1181, 641, 642, 643, 644, 0, 646, 647, 0,
	1164, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 1248, 1285, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 1154, 1155, 2055,
	1203, 1175, 1176, 1177, 1173, 1174, 1186, 1187, 0, 0,
	0, 1185, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 1227, 1191, 0, 0, 298, 0, 299,
	300, 1267, 301, 302, 303, 304, 305, 306, 307, 672,
	1240, 0, 308, 1247, 309, 1246, 0, 1257, 310, 311,
	312, 313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288,
	679, 0, 317, 318, 1233, 0, 1214, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1268, 341, 342, 343, 1217,
	1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347,
	348, 1250, 349, 351, 1244, 1243, 1163, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1235, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1169, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1258, 1259, 382, 1182,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1242,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	2871, 1269, 391, 392, 393, 1255, 1256, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1265, 0,
	1192, 404, 0, 405, 406, 407, 408, 409, 410, 1228,
	1229, 1232, 498, 1271, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1270, 499, 421, 1237, 1238, 0, 1198, 0, 422, 423,
	1272, 1230, 1273, 424, 425, 426, 1274, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1266, 1275, 438, 439, 1276, 0, 440,
	441, 442, 443, 444, 445, 448, 1221, 1220, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1277, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1278, 491, 479, 1160, 287,
	1279, 493, 494, 495, 496, 1183, 1231, 497, 1245, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 1280, 510, 1281, 1260,
	511, 512, 1170, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 1261, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	1241, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1282, 568, 569, 570, 571,
	572, 1171, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 1224, 596, 597, 579, 580, 598,
	599, 1283, 600, 601, 602, 603, 604, 605, 606, 1239,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 1286, 616, 617, 618, 619, 1262, 623,
	624, 0, 625, 626, 1157, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 1251, 1252,
	1253, 1254, 0, 645, 0, 636, 637, 638, 639, 1263,
	640, 1264, 1181, 641, 642, 643, 644, 0, 646, 647,
	0, 1164, 648, 649, 650, 652, 653, 651, 654, 1225,
	655, 0, 0, 656, 657, 658, 718, 1248, 1285, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 1161, 0,
	0, 0, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186,
	0, 1156, 0, 0, 0, 0, 0, 0, 1154, 1155,
	288, 289, 291, 290, 292, 293, 294, 295, 1187, 296,
	297, 0, 1185, 0, 0, 0, 1227, 1191, 0, 0,
	298, 0, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 1240, 0, 308, 1247, 309, 1246, 0,
	1257, 310, 311, 312, 313, 314, 315, 1193, 1226, 1158,
	316, 1287, 1288, 679, 0, 317, 318, 1233, 0, 1214,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1268, 341,
	342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344,
	345, 346, 347, 348, 1250, 349, 351, 1244, 1243, 1163,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1235, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1169, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1258,
	1259, 382, 1182, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1242, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1269, 391, 392, 393, 1255, 1256,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1265, 0, 1192, 404, 0, 405, 406, 407, 408,
	409, 410, 1228, 1229, 1232, 498, 1271, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1270, 499, 421, 1237, 1238, 0, 1198,
	0, 422, 423, 1272, 1230, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1266, 1275, 438, 439,
	1276, 0, 440, 441, 442, 443, 444, 445, 448, 1221,
	1220, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1160, 287, 1279, 493, 494, 495, 496, 1183, 1231,
	497, 1245, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 1280,
	510, 1281, 1260, 511, 512, 1170, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 1261, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1241, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 1171, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1224, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 1239, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1286, 616, 617, 618,
	619, 1262, 623, 624, 0, 625, 626, 1157, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1251, 1252, 1253, 1254, 0, 645, 0, 636, 637,
	638, 639, 1263, 640, 1264, 1181, 641, 642, 643, 644,
	0, 646, 647, 0, 1164, 648, 649, 650, 652, 653,
	651, 654, 1225, 655, 0, 0, 656, 657, 658, 718,
	1248, 1285, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 0, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 1154, 1155, 0, 0, 0, 0, 0, 0, 0,
	0, 1187, 1984, 0, 2876, 1185, 1203, 1175, 1176, 1177,
	1173, 1174, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 1227,
	1191, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 1240, 0, 308, 1247,
	309, 1246, 0, 1257, 310, 311, 312, 313, 314, 315,
	1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 1250, 349, 351,
	1244, 1243, 1163, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1235, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1169, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 1182, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1242, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 1255, 1256, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 1192, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1270, 499, 421, 1237,
	1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 1160, 287, 1279, 493, 494, 495,
	496, 1183, 1231, 497, 1245, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 1170, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 1241, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 1171, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 1239, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 1286,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	1157, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 1251, 1252, 1253, 1254, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 1181, 641,
	642, 643, 644, 0, 646, 647, 0, 1164, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 1248, 1285, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 1161, 0, 0, 2874, 0, 1203,
	1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0,
	0, 0, 0, 0, 1154, 1155, 288, 289, 291, 290,
	292, 293, 294, 295, 1187, 296, 297, 0, 1185, 0,
	0, 0, 1227, 1191, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 1240,
	0, 308, 1247, 309, 1246, 0, 1257, 310, 311, 312,
	313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	1250, 349, 351, 1244, 1243, 1163, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1235, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1169, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 1182, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1242, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 1255, 1256, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 1192,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 1237, 1238, 0, 1198, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1160, 287, 1279,
	493, 494, 495, 496, 1183, 1231, 497, 1245, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 1170, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1241,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	1171, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 1239, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1286, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 1157, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1251, 1252, 1253,
	1254, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 1181, 641, 642, 643, 644, 0, 646, 647, 0,
	1164, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 1248, 1285, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 1161, 0, 0,
	2862, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1156, 0, 0, 0, 0, 0, 0, 1154, 1155, 288,
	289, 291, 290, 292, 293, 294, 295, 1187, 296, 297,
	0, 1185, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 718, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	1161, 0, 0, 2850, 0, 1203, 1175, 1176, 1177, 1173,
	1174, 1186, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 288, 289, 291, 290, 292, 293, 294, 295,
	1187, 296, 297, 0, 1185, 0, 0, 0, 1227, 1191,
	0, 0, 298, 0, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 672, 1240, 0, 308, 1247, 309,
	1246, 0, 1257, 310, 311, 312, 313, 314, 315, 1193,
	1226, 1158, 316, 1287, 1288, 679, 0, 317, 318, 1233,
	0, 1214, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218,
	1222, 344, 345, 346, 347, 348, 1250, 349, 351, 1244,
	1243, 1163, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1235, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1169,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1258, 1259, 382, 1182, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1242, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1269, 391, 392, 393,
	1255, 1256, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1265, 0, 1192, 404, 0, 405, 406,
	407, 408, 409, 410, 1228, 1229, 1232, 498, 1271, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1270, 499, 421, 1237, 1238,
	0, 1198, 0, 422, 423, 1272, 1230, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1266, 1275,
	438, 439, 1276, 0, 440, 441, 442, 443, 444, 445,
	448, 1221, 1220, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 1160, 287, 1279, 493, 494, 495, 496,
	1183, 1231, 497, 1245, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 1280, 510, 1281, 1260, 511, 512, 1170, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 1261, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1241, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 1171, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1224,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 1239, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1286, 616,
	617, 618, 619, 1262, 623, 624, 0, 625, 626, 1157,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1251, 1252, 1253, 1254, 0, 645, 0,
	636, 637, 638, 639, 1263, 640, 1264, 1181, 641, 642,
	643, 644, 0, 646, 647, 0, 1164, 648, 649, 650,
	652, 653, 651, 654, 1225, 655, 0, 0, 656, 657,
	658, 718, 1248, 1285, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 0, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 1161, 0, 0, 2848, 0, 2839, 2846,
	1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0, 0,
	0, 0, 0, 1154, 1155, 288, 289, 291, 290, 292,
	293, 294, 295, 1187, 296, 297, 0, 1185, 0, 0,
	0, 1227, 1191, 0, 0, 298, 0, 299, 300, 1267,
	301, 302, 303, 304, 305, 306, 307, 672, 1240, 0,
	308, 1247, 309, 1246, 0, 1257, 310, 311, 312, 313,
	314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0,
	317, 318, 1233, 0, 1214, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1268, 341, 342, 343, 1217, 1215, 1216,
	1223, 1219, 1218, 1222, 344, 345, 346, 347, 348, 1250,
	2842, 351, 1244, 1243, 1163, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1235,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1169, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1258, 1259, 382, 1182, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1242, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1269,
	391, 392, 393, 1255, 1256, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1265, 0, 1192, 404,
	0, 405, 406, 407, 408, 2843, 410, 1228, 1229, 1232,
	498, 1271, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1270, 499,
	421, 1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230,
	1273, 424, 425, 426, 1274, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1266, 1275, 438, 439, 1276, 0, 440, 441, 442,
	443, 444, 445, 448, 1221, 1220, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 2844, 458, 2841,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1277, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1278, 491, 479, 1160, 287, 1279, 493,
	494, 495, 496, 1183, 1231, 497, 1245, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 701, 1280, 510, 1281, 1260, 511, 512,
	1170, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 703, 524, 525, 526, 704, 527, 528,
	529, 1261, 530, 706, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 1241, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1282, 568, 569, 570, 571, 572, 1171,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 2845, 0, 591, 592, 590, 593,
	594, 595, 1224, 596, 597, 579, 580, 598, 599, 1283,
	600, 601, 602, 603, 604, 605, 606, 1239, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 1286, 616, 617, 618, 619, 1262, 623, 624, 0,
	625, 626, 1157, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 1251, 1252, 1253, 1254,
	0, 645, 0, 636, 637, 638, 639, 1263, 640, 1264,
	1181, 641, 642, 643, 644, 0, 646, 647, 0, 1164,
	648, 649, 650, 652, 653, 651, 654, 1225, 655, 0,
	0, 656, 657, 658, 718, 1248, 1285, 0, 660, 659,
	661, 662, 663, 721, 664, 665, 0, 0, 0, 0,
	666, 667, 722, 668, 2840, 670, 1161, 0, 0, 2836,
	0, 2839, 2846, 1176, 1177, 1173, 1174, 1186, 0, 1156,
	0, 0, 0, 0, 0, 0, 1154, 1155, 288, 289,
	291, 290, 292, 293, 294, 295, 1187, 296, 297, 0,
	1185, 0, 0, 0, 1227, 1191, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 1240, 0, 308, 1247, 309, 1246, 0, 1257, 310,
	311, 312, 313, 314, 315, 1193, 1226, 1158, 316, 1287,
	1288, 679, 0, 317, 318, 1233, 0, 1214, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346,
	347, 348, 1250, 2842, 351, 1244, 1243, 1163, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1235, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1169, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1258, 1259, 382,
	1182, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1242, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 1255, 1256, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1265,
	0, 1192, 404, 0, 405, 406, 407, 408, 2843, 410,
	1228, 1229, 1232, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1270, 499, 421, 1237, 1238, 0, 1198, 0, 422,
	423, 1272, 1230, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1266, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 1221, 1220, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	2844, 458, 2841, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 1160,
	287, 1279, 493, 494, 495, 496, 1183, 1231, 497, 1245,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	1260, 511, 512, 1170, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 1261, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1241, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 1171, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 2845, 0, 591,
	592, 590, 593, 594, 595, 1224, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	1239, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1286, 616, 617, 618, 619, 1262,
	623, 624, 0, 625, 626, 1157, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1251,
	1252, 1253, 1254, 0, 645, 0, 636, 637, 638, 639,
	1263, 640, 1264, 1181, 641, 642, 643, 644, 0, 646,
	647, 0, 1164, 648, 649, 650, 652, 653, 651, 654,
	1225, 655, 0, 0, 656, 657, 658, 718, 1248, 1285,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 2840, 670, 1161,
	0, 0, 0, 0, 1203, 1175, 1176, 1177, 1173, 1174,
	1186, 0, 1156, 0, 0, 0, 0, 0, 0, 1154,
	1155, 288, 289, 291, 290, 292, 293, 294, 295, 1187,
	296, 297, 0, 1185, 0, 0, 0, 1227, 1191, 0,
	0, 298, 0, 299, 300, 1267, 301, 302, 303, 304,
	305, 306, 307, 672, 1240, 0, 308, 1247, 309, 1246,
	0, 1257, 310, 311, 312, 313, 314, 315, 1193, 1226,
	1158, 316, 1287, 1288, 679, 0, 317, 318, 1233, 0,
	1214, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1268,
	341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222,
	344, 345, 346, 347, 348, 1250, 349, 351, 1244, 1243,
	1163, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1235, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1169, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1258, 1259, 382, 1182, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1242, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1269, 391, 392, 393, 1255,
	1256, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1265, 0, 1192, 404, 0, 405, 406, 407,
	408, 409, 410, 1228, 1229, 1232, 498, 1271, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1270, 499, 421, 1237, 1238, 0,
	1198, 0, 422, 423, 1272, 1230, 1273, 424, 425, 426,
	1274, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1266, 1275, 438,
	439, 1276, 0, 440, 441, 442, 443, 444, 445, 448,
	1221, 1220, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1277, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1278,
	491, 479, 1160, 287, 1279, 493, 494, 495, 496, 1183,
	1231, 497, 1245, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 701,
	1280, 510, 1281, 1260, 511, 512, 1170, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 703,
	524, 525, 526, 704, 527, 528, 529, 1261, 530, 706,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 1241, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1282,
	568, 569, 570, 571, 572, 1171, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1224, 596,
	597, 579, 580, 598, 599, 1283, 600, 601, 602, 603,
	604, 605, 606, 1239, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 1286, 616, 617,
	618, 619, 1262, 623, 624, 0, 625, 626, 1157, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 1251, 1252, 1253, 1254, 0, 645, 0, 636,
	637, 638, 639, 1263, 640, 1264, 1181, 641, 642, 643,
	644, 0, 646, 647, 0, 1164, 648, 649, 650, 652,
	653, 651, 654, 1225, 655, 0, 0, 656, 657, 658,
	718, 1248, 1285, 0, 660, 659, 661, 662, 663, 721,
	664, 665, 0, 0, 0, 0, 666, 667, 722, 668,
	669, 670, 1161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 1154, 1155, 0, 0, 0, 0, 0, 0,
	1992, 0, 1187, 0, 0, 0, 1185, 1203, 1175, 1176,
	1177, 1173, 1174, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 2591, 296, 297, 0, 0, 0, 0, 0,
	1227, 1191, 0, 0, 298, 0, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 1240, 0, 308,
	1247, 309, 1246, 0, 1257, 310, 311, 312, 313, 314,
	315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317,
	318, 1233, 0, 1214, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223,
	1219, 1218, 1222, 344, 345, 346, 347, 348, 1250, 349,
	351, 1244, 1243, 1163, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1235, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1169, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1258, 1259, 382, 1182, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1242, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1269, 391,
	392, 393, 1255, 1256, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1265, 0, 1192, 404, 0,
	405, 406, 407, 408, 409, 410, 1228, 1229, 1232, 498,
	1271, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1270, 499, 421,
	1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1266, 1275, 438, 439, 1276, 0, 440, 441, 442, 443,
	444, 445, 448, 1221, 1220, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1160, 287, 1279, 493, 494,
	495, 496, 1183, 1231, 497, 1245, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 1280, 510, 1281, 1260, 511, 512, 1170,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	1261, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1241, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 1171, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1224, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 1239, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1286, 616, 617, 618, 619, 1262, 623, 624, 0, 625,
	626, 1157, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1251, 1252, 1253, 1254, 0,
	645, 0, 636, 637, 638, 639, 1263, 640, 1264, 1181,
	641, 642, 643, 644, 0, 646, 647, 0, 1164, 648,
	649, 650, 652, 653, 651, 654, 1225, 655, 0, 0,
	656, 657, 658, 718, 1248, 1285, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 0, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 1161, 0, 0, 2553, 0,
	1203, 1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0,
	0, 0, 0, 0, 0, 1154, 1155, 288, 289, 291,
	290, 292, 293, 294, 295, 1187, 296, 297, 0, 1185,
	0, 0, 0, 1227, 1191, 0, 0, 298, 0, 299,
	300, 1267, 301, 302, 303, 304, 305, 306, 307, 672,
	1240, 0, 308, 1247, 309, 1246, 0, 1257, 310, 311,
	312, 313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288,
	679, 0, 317, 318, 1233, 0, 1214, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1268, 341, 342, 343, 1217,
	1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347,
	348, 1250, 349, 351, 1244, 1243, 1163, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1235, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1169, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1258, 1259, 382, 1182,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1242,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1269, 391, 392, 393, 1255, 1256, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1265, 0,
	1192, 404, 0, 405, 406, 407, 408, 409, 410, 1228,
	1229, 1232, 498, 1271, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1270, 499, 421, 1237, 1238, 0, 1198, 0, 422, 423,
	1272, 1230, 1273, 424, 425, 426, 1274, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1266, 1275, 438, 439, 1276, 0, 440,
	441, 442, 443, 444, 445, 448, 1221, 1220, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1277, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1278, 491, 479, 1160, 287,
	1279, 493, 494, 495, 496, 1183, 1231, 497, 1245, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 1280, 510, 1281, 1260,
	511, 512, 1170, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 1261, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	1241, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1282, 568, 569, 570, 571,
	572, 1171, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 1224, 596, 597, 579, 580, 598,
	599, 1283, 600, 601, 602, 603, 604, 605, 606, 1239,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 1286, 616, 617, 618, 619, 1262, 623,
	624, 0, 625, 626, 1157, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 1251, 1252,
	1253, 1254, 0, 645, 0, 636, 637, 638, 639, 1263,
	640, 1264, 1181, 641, 642, 643, 644, 0, 646, 647,
	0, 1164, 648, 649, 650, 652, 653, 651, 654, 1225,
	655, 0, 0, 656, 657, 658, 718, 1248, 1285, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 1161, 0,
	0, 2525, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186,
	0, 1156, 0, 0, 0, 0, 0, 0, 1154, 1155,
	288, 289, 291, 290, 292, 293, 294, 295, 1187, 296,
	297, 0, 1185, 0, 0, 0, 1227, 1191, 0, 0,
	298, 0, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 1240, 0, 308, 1247, 309, 1246, 0,
	1257, 310, 311, 312, 313, 314, 315, 1193, 1226, 1158,
	316, 1287, 1288, 679, 0, 317, 318, 1233, 0, 1214,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1268, 341,
	342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344,
	345, 346, 347, 348, 1250, 349, 351, 1244, 1243, 1163,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1235, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1169, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1258,
	1259, 382, 1182, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1242, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1269, 391, 392, 393, 1255, 1256,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1265, 0, 1192, 404, 0, 405, 406, 407, 408,
	409, 410, 1228, 1229, 1232, 498, 1271, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1270, 499, 421, 1237, 1238, 0, 1198,
	0, 422, 423, 1272, 1230, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1266, 1275, 438, 439,
	1276, 0, 440, 441, 442, 443, 444, 445, 448, 1221,
	1220, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1160, 287, 1279, 493, 494, 495, 496, 1183, 1231,
	497, 1245, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 1280,
	510, 1281, 1260, 511, 512, 1170, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 1261, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1241, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 1171, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1224, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 1239, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1286, 616, 617, 618,
	619, 1262, 623, 624, 0, 625, 626, 1157, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1251, 1252, 1253, 1254, 0, 645, 0, 636, 637,
	638, 639, 1263, 640, 1264, 1181, 641, 642, 643, 644,
	0, 646, 647, 0, 1164, 648, 649, 650, 652, 653,
	651, 654, 1225, 655, 0, 0, 656, 657, 658, 718,
	1248, 1285, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 0, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 1161, 0, 0, 1828, 0, 1203, 1175, 1176, 1177,
	1173, 1174, 1186, 0, 1156, 0, 0, 0, 0, 0,
	0, 1154, 1155, 288, 289, 291, 290, 292, 293, 294,
	295, 1187, 296, 297, 0, 1185, 0, 0, 0, 1227,
	1191, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 1240, 0, 308, 1247,
	309, 1246, 0, 1257, 310, 311, 312, 313, 314, 315,
	1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 1250, 349, 351,
	1244, 1243, 1163, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1235, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1169, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 1182, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1242, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 1255, 1256, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 1192, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1270, 499, 421, 1237,
	1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 1160, 287, 1279, 493, 494, 495,
	496, 1183, 1231, 497, 1245, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 1170, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 1241, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 1171, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 1239, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 1286,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	1157, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 1251, 1252, 1253, 1254, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 1181, 641,
	642, 643, 644, 0, 646, 647, 0, 1164, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 1248, 1285, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 1161, 0, 0, 1757, 0, 1203,
	1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0,
	0, 0, 0, 0, 1154, 1155, 288, 289, 291, 290,
	292, 293, 294, 295, 1187, 296, 297, 0, 1185, 0,
	0, 0, 1227, 1191, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 1240,
	0, 308, 1247, 309, 1246, 0, 1257, 310, 311, 312,
	313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	1250, 349, 351, 1244, 1243, 1163, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1235, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1169, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 1182, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1242, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 1255, 1256, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 1192,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 1237, 1238, 0, 1198, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1160, 287, 1279,
	493, 494, 495, 496, 1183, 1231, 497, 1245, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 1170, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1241,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	1171, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 1239, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1286, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 1157, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1251, 1252, 1253,
	1254, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 1181, 641, 642, 643, 644, 0, 646, 647, 0,
	1164, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 1248, 1285, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 1161, 0, 0,
	1752, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1156, 0, 0, 0, 0, 0, 0, 1154, 1155, 288,
	289, 291, 290, 292, 293, 294, 295, 1187, 296, 297,
	0, 1185, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	646, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 718, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	1161, 0, 0, 1738, 0, 1203, 1175, 1176, 1177, 1173,
	1174, 1186, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 288, 289, 291, 290, 292, 293, 294, 295,
	1187, 296, 297, 0, 1185, 0, 0, 0, 1227, 1191,
	0, 0, 298, 0, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 672, 1240, 0, 308, 1247, 309,
	1246, 0, 1257, 310, 311, 312, 313, 314, 315, 1193,
	1226, 1158, 316, 1287, 1288, 679, 0, 317, 318, 1233,
	0, 1214, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218,
	1222, 344, 345, 346, 347, 348, 1250, 349, 351, 1244,
	1243, 1163, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1235, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1169,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1258, 1259, 382, 1182, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1242, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1269, 391, 392, 393,
	1255, 1256, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1265, 0, 1192, 404, 0, 405, 406,
	407, 408, 409, 410, 1228, 1229, 1232, 498, 1271, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1270, 499, 421, 1237, 1238,
	0, 1198, 0, 422, 423, 1272, 1230, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1266, 1275,
	438, 439, 1276, 0, 440, 441, 442, 443, 444, 445,
	448, 1221, 1220, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 1160, 287, 1279, 493, 494, 495, 496,
	1183, 1231, 497, 1245, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 1280, 510, 1281, 1260, 511, 512, 1170, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 1261, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1241, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 1171, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1224,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 1239, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1286, 616,
	617, 618, 619, 1262, 623, 624, 0, 625, 626, 1157,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1251, 1252, 1253, 1254, 0, 645, 0,
	636, 637, 638, 639, 1263, 640, 1264, 1181, 641, 642,
	643, 644, 0, 646, 647, 0, 1164, 648, 649, 650,
	652, 653, 651, 654, 1225, 655, 0, 0, 656, 657,
	658, 718, 1248, 1285, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 0, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 1161, 0, 0, 1733, 0, 1203, 1175,
	1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0, 0,
	0, 0, 0, 1154, 1155, 288, 289, 291, 290, 292,
	293, 294, 295, 1187, 296, 297, 0, 1185, 0, 0,
	0, 1227, 1191, 0, 0, 298, 0, 299, 300, 1267,
	301, 302, 303, 304, 305, 306, 307, 672, 1240, 0,
	308, 1247, 309, 1246, 0, 1257, 310, 311, 312, 313,
	314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0,
	317, 318, 1233, 0, 1214, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1268, 341, 342, 343, 1217, 1215, 1216,
	1223, 1219, 1218, 1222, 344, 345, 346, 347, 348, 1250,
	349, 351, 1244, 1243, 1163, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1235,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1169, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1258, 1259, 382, 1182, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1242, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1269,
	391, 392, 393, 1255, 1256, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1265, 0, 1192, 404,
	0, 405, 406, 407, 408, 409, 410, 1228, 1229, 1232,
	498, 1271, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1270, 499,
	421, 1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230,
	1273, 424, 425, 426, 1274, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1266, 1275, 438, 439, 1276, 0, 440, 441, 442,
	443, 444, 445, 448, 1221, 1220, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1277, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1278, 491, 479, 1160, 287, 1279, 493,
	494, 495, 496, 1183, 1231, 497, 1245, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 701, 1280, 510, 1281, 1260, 511, 512,
	1170, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 703, 524, 525, 526, 704, 527, 528,
	529, 1261, 530, 706, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 1241, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1282, 568, 569, 570, 571, 572, 1171,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 1224, 596, 597, 579, 580, 598, 599, 1283,
	600, 601, 602, 603, 604, 605, 606, 1239, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 1286, 616, 617, 618, 619, 1262, 623, 624, 0,
	625, 626, 1157, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 1251, 1252, 1253, 1254,
	0, 645, 0, 636, 637, 638, 639, 1263, 640, 1264,
	1181, 641, 642, 643, 644, 0, 646, 647, 0, 1164,
	648, 649, 650, 652, 653, 651, 654, 1225, 655, 0,
	0, 656, 657, 658, 718, 1248, 1285, 0, 660, 659,
	661, 662, 663, 721, 664, 665, 0, 0, 0, 0,
	666, 667, 722, 668, 669, 670, 1161, 0, 0, 1642,
	0, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0, 1156,
	0, 0, 0, 0, 0, 0, 1154, 1155, 288, 289,
	291, 290, 292, 293, 294, 295, 1187, 296, 297, 0,
	1185, 0, 0, 0, 1227, 1191, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 1240, 0, 308, 1247, 309, 1246, 0, 1257, 310,
	311, 312, 313, 314, 315, 1193, 1226, 1158, 316, 1287,
	1288, 679, 0, 317, 318, 1233, 0, 1214, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346,
	347, 348, 1250, 349, 351, 1244, 1243, 1163, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1235, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1169, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1258, 1259, 382,
	1182, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1242, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 1255, 1256, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1265,
	0, 1192, 404, 0, 405, 406, 407, 408, 409, 410,
	1641, 1229, 1232, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1270, 499, 421, 1237, 1238, 0, 1198, 0, 422,
	423, 1272, 1230, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1266, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 1221, 1220, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 1160,
	287, 1279, 493, 494, 495, 496, 1183, 1231, 497, 1245,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	1260, 511, 512, 1170, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 1261, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1241, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 1171, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1224, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	1239, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1286, 616, 617, 618, 619, 1262,
	623, 624, 0, 625, 626, 1157, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1251,
	1252, 1253, 1254, 0, 645, 0, 636, 637, 638, 639,
	1263, 640, 1264, 1181, 641, 642, 643, 644, 0, 646,
	647, 0, 1164, 648, 649, 650, 652, 653, 651, 654,
	1225, 655, 0, 0, 656, 657, 658, 718, 1248, 1285,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1161,
	0, 0, 1636, 0, 1203, 1175, 1176, 1177, 1173, 1174,
	1186, 0, 1156, 0, 0, 0, 0, 0, 0, 1154,
	1155, 288, 289, 291, 290, 292, 293, 294, 295, 1187,
	296, 297, 0, 1185, 0, 0, 0, 1227, 1191, 0,
	0, 298, 0, 299, 300, 1267, 301, 302, 303, 304,
	305, 306, 307, 672, 1240, 0, 308, 1247, 309, 1246,
	0, 1257, 310, 311, 312, 313, 314, 315, 1193, 1226,
	1158, 316, 1287, 1288, 679, 0, 317, 318, 1233, 0,
	1214, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1268,
	341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222,
	344, 345, 346, 347, 348, 1250, 349, 351, 1244, 1243,
	1163, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1235, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1169, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1258, 1259, 382, 1182, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1242, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1269, 391, 392, 393, 1255,
	1256, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1265, 0, 1192, 404, 0, 405, 406, 407,
	408, 409, 410, 1635, 1229, 1232, 498, 1271, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1270, 499, 421, 1237, 1238, 0,
	1198, 0, 422, 423, 1272, 1230, 1273, 424, 425, 426,
	1274, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1266, 1275, 438,
	439, 1276, 0, 440, 441, 442, 443, 444, 445, 448,
	1221, 1220, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1277, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1278,
	491, 479, 1160, 287, 1279, 493, 494, 495, 496, 1183,
	1231, 497, 1245, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 701,
	1280, 510, 1281, 1260, 511, 512, 1170, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 703,
	524, 525, 526, 704, 527, 528, 529, 1261, 530, 706,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 1241, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1282,
	568, 569, 570, 571, 572, 1171, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1224, 596,
	597, 579, 580, 598, 599, 1283, 600, 601, 602, 603,
	604, 605, 606, 1239, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 1286, 616, 617,
	618, 619, 1262, 623, 624, 0, 625, 626, 1157, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 1251, 1252, 1253, 1254, 0, 645, 0, 636,
	637, 638, 639, 1263, 640, 1264, 1181, 641, 642, 643,
	644, 0, 646, 647, 0, 1164, 648, 649, 650, 652,
	653, 651, 654, 1225, 655, 0, 0, 656, 657, 658,
	718, 1248, 1285, 0, 660, 659, 661, 662, 663, 721,
	664, 665, 0, 0, 0, 0, 666, 667, 722, 668,
	669, 670, 1161, 0, 0, 1629, 0, 1203, 1175, 1176,
	1177, 1173, 1174, 1186, 0, 1156, 0, 0, 0, 0,
	0, 0, 1154, 1155, 288, 289, 291, 290, 292, 293,
	294, 295, 1187, 296, 297, 0, 1185, 0, 0, 0,
	1227, 1191, 0, 0, 298, 0, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 1240, 0, 308,
	1247, 309, 1246, 0, 1257, 310, 311, 312, 313, 314,
	315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317,
	318, 1233, 0, 1214, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223,
	1219, 1218, 1222, 344, 345, 346, 347, 348, 1250, 349,
	351, 1244, 1243, 1163, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1235, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1169, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1258, 1259, 382, 1182, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1242, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1269, 391,
	392, 393, 1255, 1256, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1265, 0, 1192, 404, 0,
	405, 406, 407, 408, 409, 410, 1228, 1229, 1232, 498,
	1271, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1270, 499, 421,
	1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1266, 1275, 438, 439, 1276, 0, 440, 441, 442, 443,
	444, 445, 448, 1221, 1220, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1160, 287, 1279, 493, 494,
	495, 496, 1183, 1231, 497, 1245, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 1280, 510, 1281, 1260, 511, 512, 1170,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	1261, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1241, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 1171, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1224, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 1239, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1286, 616, 617, 618, 619, 1262, 623, 624, 0, 625,
	626, 1157, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1251, 1252, 1253, 1254, 0,
	645, 0, 636, 637, 638, 639, 1263, 640, 1264, 1181,
	641, 642, 643, 644, 0, 646, 647, 0, 1164, 648,
	649, 650, 652, 653, 651, 654, 1225, 655, 0, 0,
	656, 657, 658, 718, 1248, 1285, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 0, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 1161, 0, 0, 1597, 0,
	1203, 1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0,
	0, 0, 0, 0, 0, 1154, 1155, 288, 289, 291,
	290, 292, 293, 294, 295, 1187, 296, 297, 0, 1185,
	0, 0, 0, 1227, 1191, 0, 0, 298, 0, 299,
	300, 1267, 301, 302, 303, 304, 305, 306, 307, 672,
	1240, 0, 308, 1247, 309, 1246, 0, 1257, 310, 311,
	312, 313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288,
	679, 0, 317, 318, 1233, 0, 1214, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1268, 341, 342, 343, 1217,
	1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347,
	348, 1250, 349, 351, 1244, 1243, 1163, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1235, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1169, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1258, 1259, 382, 1182,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1242,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1269, 391, 392, 393, 1255, 1256, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1265, 0,
	1192, 404, 0, 405, 406, 407, 408, 409, 410, 1228,
	1229, 1232, 498, 1271, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1270, 499, 421, 1237, 1238, 0, 1198, 0, 422, 423,
	1272, 1230, 1273, 424, 425, 426, 1274, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1266, 1275, 438, 439, 1276, 0, 440,
	441, 442, 443, 444, 445, 448, 1221, 1220, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1277, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1278, 491, 479, 1160, 287,
	1279, 493, 494, 495, 496, 1183, 1231, 497, 1245, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 1280, 510, 1281, 1260,
	511, 512, 1170, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 1261, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	1241, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1282, 568, 569, 570, 571,
	572, 1171, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 1224, 596, 597, 579, 580, 598,
	599, 1283, 600, 601, 602, 603, 604, 605, 606, 1239,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 1286, 616, 617, 618, 619, 1262, 623,
	624, 0, 625, 626, 1157, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 1251, 1252,
	1253, 1254, 0, 645, 0, 636, 637, 638, 639, 1263,
	640, 1264, 1181, 641, 642, 643, 644, 0, 646, 647,
	0, 1164, 648, 649, 650, 652, 653, 651, 654, 1225,
	655, 0, 0, 656, 657, 658, 718, 1248, 1285, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 1161, 0,
	0, 1579, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186,
	0, 1156, 0, 0, 0, 0, 0, 0, 1154, 1155,
	288, 289, 291, 290, 292, 293, 294, 295, 1187, 296,
	297, 0, 1185, 0, 0, 0, 1227, 1191, 0, 0,
	298, 0, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 1240, 0, 308, 1247, 309, 1246, 0,
	1257, 310, 311, 312, 313, 314, 315, 1193, 1226, 1158,
	316, 1287, 1288, 679, 0, 317, 318, 1233, 0, 1214,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1268, 341,
	342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344,
	345, 346, 347, 348, 1250, 349, 351, 1244, 1243, 1163,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1235, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1169, 371, 372,
	373, 375, 377, 374, 1583, 378, 379, 380, 381, 1258,
	1259, 382, 1182, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1242, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1269, 391, 392, 393, 1255, 1256,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1265, 0, 1192, 404, 0, 405, 406, 407, 408,
	409, 410, 1228, 1229, 1232, 498, 1271, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1270, 499, 421, 1237, 1238, 0, 1198,
	0, 422, 423, 1272, 1230, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1266, 1275, 438, 439,
	1276, 0, 440, 441, 442, 443, 444, 445, 448, 1221,
	1220, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 1160, 287, 1279, 493, 494, 495, 496, 1183, 1231,
	497, 1245, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 1280,
	510, 1281, 1260, 511, 512, 1170, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 1261, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1241, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 1584, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 1171, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1224, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 1239, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1286, 616, 617, 618,
	619, 1262, 623, 624, 0, 625, 626, 1157, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 1582, 634, 0,
	635, 1251, 1252, 1253, 1254, 0, 645, 0, 636, 637,
	638, 639, 1263, 640, 1264, 1181, 641, 642, 643, 644,
	0, 646, 647, 0, 1164, 648, 649, 650, 652, 653,
	651, 654, 1225, 655, 0, 0, 656, 657, 658, 718,
	1248, 1285, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 0, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 1161, 0, 0, 1411, 0, 1203, 1175, 1176, 1177,
	1173, 1174, 1186, 0, 1156, 0, 0, 0, 0, 0,
	0, 1154, 1155, 288, 289, 291, 290, 292, 293, 294,
	295, 1187, 296, 297, 0, 1185, 0, 0, 0, 1227,
	1191, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 1240, 0, 308, 1247,
	309, 1246, 0, 1257, 310, 311, 312, 313, 314, 315,
	1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 1250, 349, 351,
	1244, 1243, 1163, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1235, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1169, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 1182, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1242, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 1255, 1256, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 1192, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1270, 499, 421, 1237,
	1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 1160, 287, 1279, 493, 494, 495,
	496, 1183, 1231, 497, 1245, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 1170, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 1241, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 1171, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 1239, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 1286,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	1157, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 1251, 1252, 1253, 1254, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 1181, 641,
	642, 643, 644, 0, 646, 647, 0, 1164, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 1248, 1285, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 1161, 0, 0, 0, 0, 1203,
	1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0,
	0, 0, 0, 0, 1154, 1155, 288, 289, 291, 290,
	292, 293, 294, 295, 1187, 296, 297, 0, 1185, 0,
	0, 0, 1227, 1191, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 1240,
	0, 308, 1247, 309, 1246, 0, 1257, 310, 311, 312,
	313, 314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	1250, 349, 351, 1244, 1243, 1163, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	1235, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 1169, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 1182, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 1242, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 1255, 1256, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 1192,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 1237, 1238, 0, 1198, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 1160, 287, 1279,
	493, 494, 495, 496, 1183, 1231, 497, 1245, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 1170, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 1241,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	1171, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 1239, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 1286, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 1157, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 1251, 1252, 1253,
	1254, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 1181, 641, 642, 643, 644, 0, 646, 647, 0,
	1164, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 1248, 1285, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 1161, 0, 0,
	0, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186, 0,
	1156, 0, 0, 0, 0, 0, 0, 1154, 1155, 288,
	289, 291, 290, 292, 293, 294, 295, 1187, 296, 297,
	0, 1185, 0, 0, 0, 1227, 1191, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 1240, 0, 308, 1247, 309, 1246, 0, 1257,
	310, 311, 312, 313, 314, 315, 1193, 1226, 1158, 316,
	1287, 1288, 679, 0, 317, 318, 1233, 0, 1214, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	4994, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345,
	346, 347, 348, 1250, 349, 351, 1244, 1243, 1163, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 1235, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 1169, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 1258, 1259,
	382, 1182, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 1242, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 1255, 1256, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	1265, 0, 1192, 404, 0, 405, 406, 407, 408, 409,
	410, 1228, 1229, 1232, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 1270, 499, 421, 1237, 1238, 0, 1198, 0,
	422, 423, 1272, 1230, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 1266, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 1221, 1220,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	1160, 287, 1279, 493, 494, 495, 496, 1183, 1231, 497,
	1245, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 1260, 511, 512, 1170, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 1261, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 1241, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 1171, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 1224, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 1239, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 1286, 616, 617, 618, 619,
	1262, 623, 624, 0, 625, 626, 1157, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	1251, 1252, 1253, 1254, 0, 645, 0, 636, 637, 638,
	639, 1263, 640, 1264, 1181, 641, 642, 643, 644, 0,
	4993, 647, 0, 1164, 648, 649, 650, 652, 653, 651,
	654, 1225, 655, 0, 0, 656, 657, 658, 718, 1248,
	1285, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	1161, 0, 0, 0, 0, 1203, 1175, 1176, 1177, 1173,
	1174, 1186, 0, 1156, 0, 0, 0, 0, 0, 0,
	1154, 1155, 288, 289, 291, 290, 292, 293, 294, 295,
	1187, 296, 297, 0, 1185, 0, 0, 0, 1227, 1191,
	0, 0, 298, 0, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 4992, 1240, 0, 308, 1247, 309,
	1246, 0, 1257, 310, 311, 312, 313, 314, 315, 1193,
	1226, 1158, 316, 1287, 1288, 679, 0, 317, 318, 1233,
	0, 1214, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1268, 341, 342, 4994, 1217, 1215, 1216, 1223, 1219, 1218,
	1222, 344, 345, 346, 347, 348, 1250, 349, 351, 1244,
	1243, 1163, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 1235, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 1169,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 1258, 1259, 382, 1182, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 1242, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1269, 391, 392, 393,
	1255, 1256, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 1265, 0, 1192, 404, 0, 405, 406,
	407, 408, 409, 410, 1228, 1229, 1232, 498, 1271, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 1270, 499, 421, 1237, 1238,
	0, 1198, 0, 422, 423, 1272, 1230, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 1266, 1275,
	438, 439, 1276, 0, 440, 441, 442, 443, 444, 445,
	448, 1221, 1220, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 1160, 287, 1279, 493, 494, 495, 496,
	1183, 1231, 497, 1245, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 1280, 510, 1281, 1260, 511, 512, 1170, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 1261, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 1241, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 1171, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 1224,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 1239, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 1286, 616,
	617, 618, 619, 1262, 623, 624, 0, 625, 626, 1157,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 1251, 1252, 1253, 1254, 0, 645, 0,
	636, 637, 638, 639, 1263, 640, 1264, 1181, 641, 642,
	643, 644, 0, 4993, 647, 0, 1164, 648, 649, 650,
	652, 653, 651, 654, 1225, 655, 0, 0, 656, 657,
	658, 718, 1248, 1285, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 0, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 1161, 0, 0, 0, 0, 1203, 1175,
	1176, 1177, 1173, 1174, 1186, 0, 1156, 0, 0, 0,
	0, 0, 0, 1154, 1155, 288, 289, 291, 290, 292,
	293, 294, 295, 1187, 296, 297, 0, 1185, 0, 0,
	0, 1227, 1191, 0, 0, 298, 0, 299, 300, 1267,
	301, 302, 303, 304, 305, 306, 307, 672, 1240, 0,
	308, 1247, 309, 1246, 0, 1257, 310, 311, 312, 313,
	314, 315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0,
	317, 318, 1233, 0, 1214, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1268, 341, 4596, 343, 1217, 1215, 1216,
	1223, 1219, 1218, 1222, 344, 345, 346, 347, 348, 1250,
	349, 351, 1244, 1243, 1163, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1235,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 1169, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 1258, 1259, 382, 1182, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 1242, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1269,
	391, 392, 393, 1255, 1256, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 1265, 0, 4597, 404,
	0, 405, 406, 407, 408, 409, 410, 1228, 1229, 1232,
	498, 1271, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 286, 418, 419, 420, 0, 1270, 499,
	421, 1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230,
	1273, 424, 425, 426, 1274, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 1266, 1275, 438, 439, 1276, 0, 440, 441, 442,
	443, 444, 445, 448, 1221, 1220, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1277, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1278, 491, 479, 1160, 287, 1279, 493,
	494, 495, 496, 1183, 1231, 497, 1245, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 701, 1280, 510, 1281, 1260, 511, 512,
	1170, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 703, 524, 525, 526, 704, 527, 528,
	529, 1261, 530, 706, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 1241, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1282, 568, 569, 570, 4595, 572, 1171,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 1224, 596, 597, 579, 580, 598, 599, 1283,
	600, 601, 602, 603, 604, 605, 606, 1239, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 1286, 616, 617, 618, 619, 1262, 623, 624, 0,
	625, 626, 1157, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 1251, 1252, 1253, 1254,
	0, 645, 0, 636, 637, 638, 639, 1263, 640, 1264,
	1181, 641, 642, 643, 644, 0, 646, 647, 0, 1164,
	648, 649, 650, 652, 653, 651, 654, 1225, 655, 0,
	0, 656, 657, 658, 718, 1248, 1285, 0, 660, 659,
	661, 662, 663, 721, 664, 665, 0, 0, 0, 0,
	666, 667, 722, 668, 669, 670, 1161, 0, 0, 0,
	0, 1203, 1175, 1176, 1177, 3354, 3355, 1186, 0, 1156,
	0, 0, 0, 0, 0, 0, 1154, 1155, 288, 289,
	291, 290, 292, 293, 294, 295, 1187, 296, 297, 0,
	1185, 0, 0, 0, 1227, 1191, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 1240, 0, 308, 1247, 309, 1246, 0, 1257, 310,
	311, 312, 313, 314, 315, 1193, 1226, 1158, 316, 1287,
	1288, 679, 0, 317, 318, 1233, 0, 1214, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	1217, 1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346,
	347, 348, 1250, 349, 351, 1244, 1243, 1163, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 1235, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 1169, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 1258, 1259, 382,
	1182, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	1242, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 1255, 1256, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 1265,
	0, 1192, 404, 0, 405, 406, 407, 408, 409, 410,
	1228, 1229, 1232, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 1270, 499, 421, 1237, 1238, 0, 1198, 0, 422,
	423, 1272, 1230, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 1266, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 1221, 1220, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 1160,
	287, 1279, 493, 494, 495, 496, 1183, 1231, 497, 1245,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	1260, 511, 512, 1170, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 1261, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 1241, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 1171, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 1224, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	1239, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 1286, 616, 617, 618, 619, 1262,
	623, 624, 0, 625, 626, 1157, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 1251,
	1252, 1253, 1254, 0, 645, 0, 636, 637, 638, 639,
	1263, 640, 1264, 1181, 641, 642, 643, 644, 0, 646,
	647, 0, 1164, 648, 649, 650, 652, 653, 651, 654,
	1225, 655, 0, 0, 656, 657, 658, 718, 1248, 1285,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1161,
	0, 0, 0, 0, 1203, 1175, 1176, 1177, 3352, 3353,
	1186, 0, 1156, 0, 0, 0, 0, 0, 0, 1154,
	1155, 288, 289, 291, 290, 292, 293, 294, 295, 1187,
	296, 297, 0, 1185, 0, 0, 0, 1227, 1191, 0,
	0, 298, 0, 299, 300, 1267, 301, 302, 303, 304,
	305, 306, 307, 672, 1240, 0, 308, 1247, 309, 1246,
	0, 1257, 310, 311, 312, 313, 314, 315, 1193, 1226,
	1158, 316, 1287, 1288, 679, 0, 317, 318, 1233, 0,
	1214, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1268,
	341, 342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222,
	344, 345, 346, 347, 348, 1250, 349, 351, 1244, 1243,
	1163, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 1235, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 1169, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	1258, 1259, 382, 1182, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 1242, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1269, 391, 392, 393, 1255,
	1256, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 1265, 0, 1192, 404, 0, 405, 406, 407,
	408, 409, 410, 1228, 1229, 1232, 498, 1271, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 1270, 499, 421, 1237, 1238, 0,
	1198, 0, 422, 423, 1272, 1230, 1273, 424, 425, 426,
	1274, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 1266, 1275, 438,
	439, 1276, 0, 440, 441, 442, 443, 444, 445, 448,
	1221, 1220, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1277, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1278,
	491, 479, 1160, 287, 1279, 493, 494, 495, 496, 1183,
	1231, 497, 1245, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 701,
	1280, 510, 1281, 1260, 511, 512, 1170, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 703,
	524, 525, 526, 704, 527, 528, 529, 1261, 530, 706,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 1241, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1282,
	568, 569, 570, 571, 572, 1171, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1224, 596,
	597, 579, 580, 598, 599, 1283, 600, 601, 602, 603,
	604, 605, 606, 1239, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 1286, 616, 617,
	618, 619, 1262, 623, 624, 0, 625, 626, 1157, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 1251, 1252, 1253, 1254, 0, 645, 0, 636,
	637, 638, 639, 1263, 640, 1264, 1181, 641, 642, 643,
	644, 0, 646, 647, 0, 1164, 648, 649, 650, 652,
	653, 651, 654, 1225, 655, 0, 0, 656, 657, 658,
	718, 1248, 1285, 0, 660, 659, 661, 662, 663, 721,
	664, 665, 0, 0, 0, 0, 666, 667, 722, 668,
	669, 670, 1161, 0, 0, 0, 0, 1203, 1175, 1176,
	1177, 1173, 1174, 1186, 0, 1156, 0, 0, 0, 0,
	0, 0, 1154, 1155, 288, 289, 291, 290, 292, 293,
	294, 295, 1187, 296, 297, 0, 1185, 0, 0, 0,
	1227, 1191, 0, 0, 298, 0, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 1240, 0, 308,
	1247, 309, 1246, 0, 1257, 310, 311, 312, 313, 314,
	315, 1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317,
	318, 1233, 0, 1214, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223,
	1219, 1218, 1222, 344, 345, 346, 347, 348, 1250, 349,
	351, 1244, 1243, 1163, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 1235, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 1169, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 1258, 1259, 382, 1182, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 1242, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1269, 391,
	392, 393, 1255, 1256, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 1265, 0, 1192, 404, 0,
	405, 406, 407, 408, 409, 410, 1228, 1229, 1232, 498,
	1271, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 1270, 499, 421,
	1237, 1238, 0, 1198, 0, 422, 423, 1272, 1230, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	1266, 1275, 438, 439, 1276, 0, 440, 441, 442, 443,
	444, 445, 448, 1221, 1220, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 1160, 287, 1279, 493, 494,
	495, 496, 1183, 1231, 497, 1245, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 1280, 510, 1281, 1260, 511, 512, 1170,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	1261, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 1241, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 1171, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 1224, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 1239, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	1286, 616, 617, 618, 619, 1262, 623, 624, 0, 625,
	626, 1157, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 1251, 1252, 1253, 1254, 0,
	645, 0, 636, 637, 638, 639, 1263, 640, 1264, 1181,
	641, 642, 643, 644, 0, 646, 647, 0, 1164, 648,
	649, 650, 652, 653, 651, 654, 1225, 655, 0, 0,
	656, 657, 658, 718, 1248, 1285, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 0, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 1161, 0, 0, 0, 0,
	1203, 1175, 1176, 1177, 1173, 1174, 1186, 0, 1156, 0,
	0, 0, 0, 0, 0, 2599, 2600, 288, 289, 291,
	290, 292, 293, 294, 295, 1187, 296, 297, 0, 1185,
	0, 0, 0, 1227, 1191, 0, 0, 298, 0, 299,
	300, 1267, 301, 302, 303, 304, 305, 306, 307, 672,
	1240, 0, 308, 1247, 309, 1246, 0, 1257, 310, 311,
	312, 313, 314, 315, 1193, 1226, 0, 316, 1287, 1288,
	679, 0, 317, 318, 1233, 0, 1214, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1268, 341, 342, 343, 1217,
	1215, 1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347,
	348, 1250, 349, 351, 1244, 1243, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 1235, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 1169, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 1258, 1259, 382, 1182,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 1242,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1269, 391, 392, 393, 1255, 1256, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 1265, 0,
	1192, 404, 0, 405, 406, 407, 408, 409, 410, 1228,
	1229, 1232, 498, 1271, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	1270, 499, 421, 1237, 1238, 0, 1198, 0, 422, 423,
	1272, 1230, 1273, 424, 425, 426, 1274, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 1266, 1275, 438, 439, 1276, 0, 440,
	441, 442, 443, 444, 445, 448, 1221, 1220, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1277, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1278, 491, 479, 0, 287,
	1279, 493, 494, 495, 496, 1183, 1231, 497, 1245, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 1280, 510, 1281, 1260,
	511, 512, 1170, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 1261, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	1241, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1282, 568, 569, 570, 571,
	572, 1171, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 1224, 596, 597, 579, 580, 598,
	599, 1283, 600, 601, 602, 603, 604, 605, 606, 1239,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 1286, 616, 617, 618, 619, 1262, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 1251, 1252,
	1253, 1254, 0, 645, 0, 636, 637, 638, 639, 1263,
	640, 1264, 1181, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 650, 652, 653, 651, 654, 1225,
	655, 0, 0, 656, 657, 658, 718, 1248, 1285, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 0, 0,
	0, 0, 0, 1203, 1175, 1176, 1177, 1173, 1174, 1186,
	0, 2858, 0, 0, 0, 0, 0, 0, 2856, 2857,
	288, 289, 291, 290, 292, 293, 294, 295, 1187, 296,
	297, 0, 1185, 0, 0, 0, 1227, 1191, 0, 0,
	298, 0, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 1240, 0, 308, 1247, 309, 1246, 0,
	1257, 310, 311, 312, 313, 314, 315, 1193, 1226, 0,
	316, 1287, 1288, 679, 0, 317, 318, 1233, 0, 1214,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1268, 341,
	342, 343, 1217, 1215, 1216, 1223, 1219, 1218, 1222, 344,
	345, 346, 347, 348, 1250, 349, 351, 1244, 1243, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 1235, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 1169, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 1258,
	1259, 382, 1182, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 1242, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1269, 391, 392, 393, 1255, 1256,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 1265, 0, 1192, 404, 0, 405, 406, 407, 408,
	409, 410, 1228, 1229, 1232, 498, 1271, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 1270, 499, 421, 1237, 1238, 0, 1198,
	0, 422, 423, 1272, 1230, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 1266, 1275, 438, 439,
	1276, 0, 440, 441, 442, 443, 444, 445, 448, 1221,
	1220, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 0, 287, 1279, 493, 494, 495, 496, 1183, 1231,
	497, 1245, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 1280,
	510, 1281, 1260, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 1261, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 1241, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 3347, 3348, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 1224, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 1239, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 1286, 616, 617, 618,
	619, 1262, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 1251, 1252, 1253, 1254, 0, 645, 0, 636, 637,
	638, 639, 1263, 640, 1264, 1181, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 1225, 655, 0, 0, 656, 657, 658, 718,
	1248, 1285, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 0, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 1203, 1175, 1176, 1177,
	1173, 1174, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 2237, 2238, 288, 289, 291, 290, 292, 293, 294,
	295, 1187, 296, 297, 0, 1185, 0, 0, 0, 1227,
	1191, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 0, 1240, 0, 308, 1247,
	309, 1246, 0, 1257, 310, 311, 312, 313, 314, 315,
	1193, 1226, 1158, 316, 1287, 1288, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 4994, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 1250, 349, 351,
	1244, 1243, 1163, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 1235, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	1169, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 1182, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 1242, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 1255, 1256, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 1192, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1270, 499, 421, 1237,
	1238, 0, 1198, 0, 422, 423, 0, 1230, 0, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 1160, 287, 0, 493, 494, 495,
	496, 1183, 1231, 497, 1245, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 1170, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 1241, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 1171, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 1239, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 1286,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	1157, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 1251, 1252, 1253, 1254, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 1181, 641,
	642, 643, 644, 0, 4993, 647, 0, 1164, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 1248, 1285, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 0, 0, 0, 1147, 0, 1325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1154, 1155, 288, 289, 291, 290,
	292, 293, 294, 295, 1187, 296, 297, 0, 1185, 0,
	0, 0, 1227, 0, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1311, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 1317, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 1319, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 244, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 246, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 1722, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 1325,
	238, 666, 667, 722, 668, 669, 670, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1227, 0, 0, 1315, 298, 2079, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1311, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 1317, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 1319, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 244, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 246, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 1722, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 3511, 0, 1325,
	238, 666, 667, 722, 668, 669, 670, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1227, 0, 0, 1315, 298, 2079, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1311, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 1317, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 1319, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1307, 0, 1325,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1227, 0, 0, 1315, 298, 1313, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1311, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 1317, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 1319, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 1325,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1227, 0, 0, 1315, 298, 1313, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 1311, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 1317, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 1319, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 1325,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1227, 0, 0, 1315, 298, 1313, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 1325,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 298, 4411, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 1226, 0, 316, 677, 678, 679,
	0, 317, 318, 1233, 0, 1214, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 1217, 1215,
	1216, 1223, 1219, 1218, 1222, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 1258, 1259, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 1265, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1228, 1229,
	1232, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	1230, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 1266, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 1221, 1220, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 287, 1279,
	493, 494, 495, 496, 0, 1231, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 1260, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 1261, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 1319, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1224, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 1262, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 1263, 640,
	1264, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 1225, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 2703,
	2704, 2705, 2722, 2723, 2724, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	2725, 0, 671, 0, 0, 0, 298, 1976, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 1961, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 2715, 0, 327, 328, 329, 326,
	330, 0, 331, 2711, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 2716, 2717, 2718, 2719, 383, 384, 385, 686, 0,
	0, 2710, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 2720, 2721,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 2713, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 2714, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 1960, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 1147, 0, 1604, 2700, 2701, 2702,
	2726, 2712, 2706, 0, 2708, 2709, 2707, 2694, 2695, 2696,
	2697, 2698, 2699, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 671,
	0, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 677, 678, 679, 0, 317, 318,
	680, 0, 1568, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 684, 685, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 689, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 691, 692, 693, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1270, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 1272, 697, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 698,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 0, 0, 1279, 493, 494, 495,
	496, 0, 699, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 702, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 705,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 244, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 711, 623, 624, 0, 625, 626,
	0, 622, 613, 246, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 716, 640, 717, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 0, 655, 0, 0, 656,
	657, 658, 1722, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 1719, 0, 1604, 238, 666, 667,
	722, 668, 669, 670, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 671,
	0, 0, 0, 298, 199, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 677, 678, 679, 0, 317, 318,
	680, 0, 1568, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 684, 685, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 689, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 691, 692, 693, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1270, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 1272, 697, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 698,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 0, 0, 1279, 493, 494, 495,
	496, 0, 699, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 702, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 705,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 244, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 711, 623, 624, 0, 625, 626,
	0, 622, 613, 246, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 716, 640, 717, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 0, 655, 0, 0, 656,
	657, 658, 1722, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 0, 238, 666, 667,
	722, 668, 669, 670, 1604, 1603, 239, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 199, 0, 0, 671, 0, 0,
	0, 298, 0, 299, 300, 1267, 301, 302, 303, 304,
	305, 306, 307, 672, 673, 0, 308, 674, 309, 675,
	0, 676, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 677, 678, 679, 0, 317, 318, 680, 0,
	1568, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 1268,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 681, 682,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 683, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	684, 685, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 686, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 1269, 391, 392, 393, 687,
	688, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 689, 0, 690, 404, 0, 405, 406, 407,
	408, 409, 410, 691, 692, 693, 498, 1271, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 1270, 499, 421, 694, 695, 0,
	696, 0, 422, 423, 1272, 697, 1273, 424, 425, 426,
	1274, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 698, 1275, 438,
	439, 1276, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 1277, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 1278,
	491, 479, 0, 0, 1279, 493, 494, 495, 496, 0,
	699, 497, 700, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 701,
	1280, 510, 1281, 702, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 703,
	524, 525, 526, 704, 527, 528, 529, 705, 530, 706,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 707, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 1282,
	568, 569, 570, 571, 572, 708, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 1283, 600, 601, 602, 603,
	604, 605, 606, 709, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 710, 616, 617,
	618, 619, 711, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 712, 713, 714, 715, 0, 645, 0, 636,
	637, 638, 639, 716, 640, 717, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 650, 652,
	653, 651, 654, 0, 655, 0, 0, 656, 657, 658,
	718, 719, 720, 0, 660, 659, 661, 662, 663, 721,
	664, 665, 0, 0, 0, 0, 666, 667, 722, 668,
	669, 670, 1604, 1603, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 1746, 0, 0, 671, 0, 0, 0, 298,
	0, 299, 300, 1267, 301, 302, 303, 304, 305, 306,
	307, 672, 673, 0, 308, 674, 309, 675, 0, 676,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	677, 678, 679, 0, 317, 318, 680, 0, 1568, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 1268, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 681, 682, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 683, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 684, 685,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 686, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 1269, 391, 392, 393, 687, 688, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	689, 0, 690, 404, 0, 405, 406, 407, 408, 409,
	410, 691, 692, 693, 498, 1271, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 0, 418, 419,
	420, 0, 1270, 499, 421, 694, 695, 0, 696, 0,
	422, 423, 1272, 697, 1273, 424, 425, 426, 1274, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 698, 1275, 438, 439, 1276,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 1277,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 1278, 491, 479,
	0, 0, 1279, 493, 494, 495, 496, 0, 699, 497,
	700, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 1280, 510,
	1281, 702, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 705, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 707, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 1282, 568, 569,
	570, 571, 572, 708, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 1283, 600, 601, 602, 603, 604, 605,
	606, 709, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 710, 616, 617, 618, 619,
	711, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	712, 713, 714, 715, 0, 645, 0, 636, 637, 638,
	639, 716, 640, 717, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 650, 652, 653, 651,
	654, 0, 655, 0, 0, 656, 657, 658, 718, 719,
	720, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	0, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	1604, 1603, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	3836, 0, 0, 671, 0, 0, 0, 298, 0, 299,
	300, 1267, 301, 302, 303, 304, 305, 306, 307, 672,
	673, 0, 308, 674, 309, 675, 0, 676, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 677, 678,
	679, 0, 317, 318, 680, 0, 1568, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 1268, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 681, 682, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 683, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 684, 685, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 686,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 1269, 391, 392, 393, 687, 688, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 689, 0,
	690, 404, 0, 405, 406, 407, 408, 409, 410, 691,
	692, 693, 498, 1271, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	1270, 499, 421, 694, 695, 0, 696, 0, 422, 423,
	1272, 697, 1273, 424, 425, 426, 1274, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 698, 1275, 438, 439, 1276, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 1277, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 1278, 491, 479, 0, 0,
	1279, 493, 494, 495, 496, 0, 699, 497, 700, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 1280, 510, 1281, 702,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 705, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	707, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 2465, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 1282, 568, 569, 570, 571,
	572, 708, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 1283, 600, 601, 602, 603, 604, 605, 606, 709,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 710, 616, 617, 618, 619, 711, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 712, 713,
	714, 715, 0, 645, 0, 636, 637, 638, 639, 716,
	640, 717, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 650, 652, 653, 651, 654, 0,
	655, 0, 0, 656, 657, 658, 718, 719, 720, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 1604, 2374,
	0, 0, 0, 0, 2375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 1746, 0,
	0, 671, 0, 0, 0, 298, 0, 299, 300, 1267,
	301, 302, 303, 304, 305, 306, 307, 672, 673, 0,
	308, 674, 309, 675, 0, 676, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 677, 678, 679, 0,
	317, 318, 680, 0, 1568, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1268, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 0,
	349, 351, 681, 682, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 683, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 684, 685, 382, 0, 285, 0,
	0, 0, 0, 0, 383, 384, 385, 686, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1269,
	391, 392, 393, 687, 688, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 689, 0, 690, 404,
	0, 405, 406, 407, 408, 409, 410, 691, 692, 693,
	498, 1271, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 1270, 499,
	421, 694, 695, 0, 696, 0, 422, 423, 1272, 697,
	1273, 424, 425, 426, 1274, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 2373, 436, 435, 0,
	437, 698, 1275, 438, 439, 1276, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1277, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1278, 491, 479, 0, 0, 1279, 493,
	494, 495, 496, 0, 699, 497, 700, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 701, 1280, 510, 1281, 702, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 703, 524, 525, 526, 704, 527, 528,
	529, 705, 530, 706, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 707, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1282, 568, 569, 570, 571, 572, 708,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 1283,
	600, 601, 602, 603, 604, 605, 606, 709, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 710, 616, 617, 618, 619, 711, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 712, 713, 714, 715,
	0, 645, 0, 636, 637, 638, 639, 716, 640, 717,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 650, 652, 653, 651, 654, 0, 655, 0,
	0, 656, 657, 658, 718, 719, 720, 0, 660, 659,
	661, 662, 663, 721, 664, 665, 0, 0, 0, 0,
	666, 667, 722, 668, 669, 670, 1604, 1603, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 1746, 0, 0, 671,
	0, 0, 0, 298, 0, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 677, 678, 679, 0, 317, 318,
	680, 0, 1568, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 684, 685, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 689, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 691, 692, 693, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 1270, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 1272, 697, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 698,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 0, 0, 1279, 493, 494, 495,
	496, 0, 699, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 702, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 705,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 711, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 716, 640, 717, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 0, 655, 0, 0, 656,
	657, 658, 718, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 1147, 0, 282, 0, 666, 667,
	722, 668, 669, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 671,
	0, 0, 0, 298, 1728, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 677, 678, 679, 0, 317, 318,
	680, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 684, 685, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 689, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 691, 692, 693, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 0, 697, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 698,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 699, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 0, 510, 0, 702, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 705,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 244, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 711, 623, 624, 0, 625, 626,
	0, 622, 613, 246, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 716, 640, 717, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 0, 655, 0, 0, 656,
	657, 658, 1722, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 282, 238, 666, 667,
	722, 668, 669, 670, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 671,
	0, 0, 0, 298, 199, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 677, 678, 679, 0, 317, 318,
	680, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 684, 685, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 689, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 691, 692, 693, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 0, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 0, 697, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 698,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 287, 0, 493, 494, 495,
	496, 0, 699, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 0, 510, 0, 702, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 705,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 711, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 716, 640, 717, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 0, 655, 0, 0, 656,
	657, 658, 718, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 282, 3258, 666, 667,
	722, 668, 669, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 671,
	0, 0, 0, 298, 2093, 299, 300, 0, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 677, 678, 679, 0, 317, 318,
	680, 0, 0, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 0, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 684, 685, 382, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 0, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 689, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 691, 692, 693, 498, 0,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 418, 419, 420, 0, 0, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 0, 697, 0, 424,
	425, 426, 0, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 698,
	0, 438, 439, 0, 0, 440, 441, 442, 443, 444,
	445, 448, 0, 0, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 0, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 0, 491, 479, 0, 0, 0, 493, 494, 495,
	496, 0, 699, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 0, 510, 0, 702, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 705,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	0, 596, 597, 579, 580, 598, 599, 0, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 711, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 716, 640, 717, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 0, 655, 0, 0, 656,
	657, 658, 718, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 0, 0, 1325, 0, 666, 667,
	722, 668, 669, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 291, 290, 292, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 1227,
	0, 0, 0, 298, 5161, 299, 300, 1267, 301, 302,
	303, 304, 305, 306, 307, 672, 673, 0, 308, 674,
	309, 675, 0, 676, 310, 311, 312, 313, 314, 315,
	0, 1226, 0, 316, 677, 678, 679, 0, 317, 318,
	1233, 0, 1214, 0, 319, 320, 321, 322, 323, 324,
	325, 0, 0, 327, 328, 329, 326, 330, 0, 331,
	0, 332, 333, 334, 335, 336, 337, 0, 338, 339,
	340, 1268, 341, 342, 343, 1217, 1215, 1216, 1223, 1219,
	1218, 1222, 344, 345, 346, 347, 348, 0, 349, 351,
	681, 682, 0, 354, 350, 352, 0, 355, 353, 356,
	0, 357, 358, 359, 0, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 366, 367, 368, 0, 369, 370,
	683, 371, 372, 373, 375, 377, 374, 376, 378, 379,
	380, 381, 1258, 1259, 382, 0, 285, 0, 0, 0,
	0, 0, 383, 384, 385, 686, 0, 0, 0, 386,
	0, 387, 388, 389, 0, 390, 0, 1269, 391, 392,
	393, 687, 688, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 0, 403, 1265, 0, 690, 404, 0, 405,
	406, 407, 408, 409, 410, 1228, 1229, 1232, 498, 1271,
	411, 412, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 286, 418, 419, 420, 0, 1270, 499, 421, 694,
	695, 0, 696, 0, 422, 423, 1272, 1230, 1273, 424,
	425, 426, 1274, 427, 0, 0, 0, 428, 429, 430,
	431, 432, 433, 0, 434, 436, 435, 0, 437, 1266,
	1275, 438, 439, 1276, 0, 440, 441, 442, 443, 444,
	445, 448, 1221, 1220, 446, 447, 449, 450, 0, 451,
	452, 454, 457, 453, 455, 456, 458, 471, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	473, 0, 472, 1277, 474, 475, 476, 477, 478, 485,
	487, 488, 483, 484, 486, 489, 490, 492, 480, 481,
	482, 1278, 491, 479, 0, 287, 1279, 493, 494, 495,
	496, 0, 1231, 497, 700, 500, 501, 0, 0, 502,
	0, 503, 0, 0, 505, 506, 507, 0, 0, 508,
	509, 701, 1280, 510, 1281, 1260, 511, 512, 504, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 703, 524, 525, 526, 704, 527, 528, 529, 1261,
	530, 706, 531, 532, 0, 533, 534, 535, 0, 536,
	537, 538, 539, 540, 541, 542, 707, 543, 544, 546,
	545, 547, 0, 548, 0, 549, 550, 551, 0, 0,
	0, 0, 0, 552, 553, 555, 0, 556, 557, 558,
	559, 554, 560, 561, 562, 563, 564, 0, 565, 566,
	567, 1282, 568, 569, 570, 571, 572, 708, 573, 0,
	574, 575, 582, 583, 584, 576, 577, 578, 585, 586,
	587, 588, 589, 0, 591, 592, 590, 593, 594, 595,
	1224, 596, 597, 579, 580, 598, 599, 1283, 600, 601,
	602, 603, 604, 605, 606, 709, 0, 607, 0, 608,
	609, 610, 611, 612, 614, 581, 615, 620, 621, 710,
	616, 617, 618, 619, 1262, 623, 624, 0, 625, 626,
	0, 622, 613, 0, 627, 628, 629, 630, 631, 632,
	633, 634, 0, 635, 712, 713, 714, 715, 0, 645,
	0, 636, 637, 638, 639, 1263, 640, 1264, 0, 641,
	642, 643, 644, 0, 646, 647, 0, 0, 648, 649,
	650, 652, 653, 651, 654, 1225, 655, 0, 0, 656,
	657, 658, 718, 719, 720, 0, 660, 659, 661, 662,
	663, 721, 664, 665, 282, 0, 0, 0, 666, 667,
	722, 668, 669, 670, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 671, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 672, 673, 0, 308, 674, 309, 675,
	0, 676, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 677, 678, 679, 0, 317, 318, 680, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 0, 349, 351, 681, 682,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 683, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	684, 685, 382, 0, 285, 0, 0, 0, 0, 0,
	383, 384, 385, 686, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 687,
	688, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 689, 0, 690, 404, 0, 405, 406, 407,
	408, 409, 410, 691, 692, 693, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 286,
	418, 419, 420, 0, 0, 499, 421, 694, 695, 0,
	696, 0, 422, 423, 0, 697, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 698, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 287, 0, 493, 494, 495, 496, 0,
	699, 497, 700, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 701,
	0, 510, 0, 702, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 703,
	524, 525, 526, 704, 527, 528, 529, 705, 530, 706,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 707, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 708, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 0, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 709, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 710, 616, 617,
	618, 619, 711, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 712, 713, 714, 715, 0, 645, 0, 636,
	637, 638, 639, 716, 640, 717, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 650, 652,
	653, 651, 654, 0, 655, 0, 0, 656, 657, 658,
	718, 719, 720, 0, 660, 659, 661, 662, 663, 721,
	664, 665, 282, 0, 0, 0, 666, 667, 722, 668,
	669, 670, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 291, 290, 292, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 671, 0, 0, 0, 298,
	3786, 299, 300, 0, 301, 302, 303, 304, 305, 306,
	307, 672, 673, 0, 308, 674, 309, 675, 0, 676,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	677, 678, 679, 0, 317, 318, 680, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 0, 0, 327,
	328, 329, 326, 330, 0, 331, 0, 332, 333, 334,
	335, 336, 337, 0, 338, 339, 340, 0, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 344, 345,
	346, 347, 348, 0, 349, 351, 681, 682, 0, 354,
	350, 352, 0, 355, 353, 356, 0, 357, 358, 359,
	0, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	366, 367, 368, 0, 369, 370, 683, 371, 372, 373,
	375, 377, 374, 376, 378, 379, 380, 381, 684, 685,
	382, 0, 285, 0, 0, 0, 0, 0, 383, 384,
	385, 686, 0, 0, 0, 386, 0, 387, 388, 389,
	0, 390, 0, 0, 391, 392, 393, 687, 688, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 0, 403,
	689, 0, 690, 404, 0, 405, 406, 407, 408, 409,
	410, 691, 692, 693, 498, 0, 411, 412, 0, 413,
	414, 415, 416, 417, 0, 0, 0, 286, 418, 419,
	420, 0, 0, 499, 421, 694, 695, 0, 696, 0,
	422, 423, 0, 697, 0, 424, 425, 426, 0, 427,
	0, 0, 0, 428, 429, 430, 431, 432, 433, 0,
	434, 436, 435, 0, 437, 698, 0, 438, 439, 0,
	0, 440, 441, 442, 443, 444, 445, 448, 0, 0,
	446, 447, 449, 450, 0, 451, 452, 454, 457, 453,
	455, 456, 458, 471, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 473, 0, 472, 0,
	474, 475, 476, 477, 478, 485, 487, 488, 483, 484,
	486, 489, 490, 492, 480, 481, 482, 0, 491, 479,
	0, 287, 0, 493, 494, 495, 496, 0, 699, 497,
	700, 500, 501, 0, 0, 502, 0, 503, 0, 0,
	505, 506, 507, 0, 0, 508, 509, 701, 0, 510,
	0, 702, 511, 512, 504, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 703, 524, 525,
	526, 704, 527, 528, 529, 705, 530, 706, 531, 532,
	0, 533, 534, 535, 0, 536, 537, 538, 539, 540,
	541, 542, 707, 543, 544, 546, 545, 547, 0, 548,
	0, 549, 550, 551, 0, 0, 0, 0, 0, 552,
	553, 555, 0, 556, 557, 558, 559, 554, 560, 561,
	562, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 708, 573, 0, 574, 575, 582, 583,
	584, 576, 577, 578, 585, 586, 587, 588, 589, 0,
	591, 592, 590, 593, 594, 595, 0, 596, 597, 579,
	580, 598, 599, 0, 600, 601, 602, 603, 604, 605,
	606, 709, 0, 607, 0, 608, 609, 610, 611, 612,
	614, 581, 615, 620, 621, 710, 616, 617, 618, 619,
	711, 623, 624, 0, 625, 626, 0, 622, 613, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 0, 635,
	712, 713, 714, 715, 0, 645, 0, 636, 637, 638,
	639, 716, 640, 717, 0, 641, 642, 643, 644, 0,
	646, 647, 0, 0, 648, 649, 650, 652, 653, 651,
	654, 0, 655, 0, 0, 656, 657, 658, 718, 719,
	720, 0, 660, 659, 661, 662, 663, 721, 664, 665,
	282, 0, 0, 0, 666, 667, 722, 668, 669, 670,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 298, 1716, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 672,
	673, 0, 308, 674, 309, 675, 0, 676, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 677, 678,
	679, 0, 317, 318, 680, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 681, 682, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 683, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 684, 685, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 686,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 687, 688, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 689, 0,
	690, 404, 0, 405, 406, 407, 408, 409, 410, 691,
	692, 693, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 694, 695, 0, 696, 0, 422, 423,
	0, 697, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 698, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 699, 497, 700, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 0, 510, 0, 702,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 705, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	707, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 708, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 709,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 710, 616, 617, 618, 619, 711, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 712, 713,
	714, 715, 0, 645, 0, 636, 637, 638, 639, 716,
	640, 717, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 650, 652, 653, 651, 654, 0,
	655, 0, 0, 656, 657, 658, 718, 719, 720, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	282, 0, 666, 667, 722, 668, 669, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 298, 3246, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 672,
	673, 0, 308, 674, 309, 675, 0, 676, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 677, 678,
	679, 0, 317, 318, 680, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 681, 682, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 683, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 684, 685, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 686,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 687, 688, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 689, 0,
	690, 404, 0, 405, 406, 407, 408, 409, 410, 691,
	692, 693, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 694, 695, 0, 696, 0, 422, 423,
	0, 697, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 698, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 699, 497, 700, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 0, 510, 0, 702,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 705, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	707, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 708, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 709,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 710, 616, 617, 618, 619, 711, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 712, 713,
	714, 715, 0, 645, 0, 636, 637, 638, 639, 716,
	640, 717, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 650, 652, 653, 651, 654, 0,
	655, 0, 0, 656, 657, 658, 718, 719, 720, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 0, 0,
	282, 0, 666, 667, 722, 668, 669, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 298, 3945, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 672,
	673, 0, 308, 674, 309, 675, 0, 676, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 677, 678,
	679, 0, 317, 318, 680, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 347,
	348, 0, 349, 351, 681, 682, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 683, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 684, 685, 382, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 686,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	0, 0, 391, 392, 393, 687, 688, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 689, 0,
	690, 404, 0, 405, 406, 407, 408, 409, 410, 691,
	692, 693, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 418, 419, 420, 0,
	0, 499, 421, 694, 695, 0, 696, 0, 422, 423,
	0, 697, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 698, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 0,
	0, 493, 494, 495, 496, 0, 699, 497, 700, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 0, 510, 0, 702,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 705, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	707, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 708, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 709,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 710, 616, 617, 618, 619, 711, 623,
	624, 0, 625, 626, 0, 622, 613, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 0, 635, 712, 713,
	714, 715, 0, 645, 0, 636, 637, 638, 639, 716,
	640, 717, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 650, 652, 653, 651, 654, 0,
	655, 0, 0, 656, 657, 658, 718, 719, 720, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 972, 0,
	872, 0, 666, 667, 722, 668, 669, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 291,
	290, 292, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 298, 2452, 299,
	300, 0, 301, 302, 303, 304, 305, 306, 307, 672,
	673, 0, 308, 674, 309, 675, 0, 676, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 677, 678,
	679, 0, 317, 318, 680, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 325, 0, 0, 327, 328, 329,
	326, 330, 0, 331, 0, 332, 333, 334, 335, 336,
	337, 0, 338, 339, 340, 0, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 344, 345, 346, 879,
	348, 0, 349, 351, 681, 682, 0, 354, 350, 352,
	0, 355, 353, 356, 0, 357, 358, 359, 0, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 366, 367,
	368, 0, 369, 370, 683, 371, 372, 373, 375, 377,
	374, 376, 378, 379, 380, 381, 684, 685, 382, 0,
	285, 0, 0, 0, 0, 0, 383, 384, 385, 686,
	0, 0, 0, 386, 0, 387, 388, 389, 0, 390,
	969, 0, 391, 392, 393, 687, 688, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 0, 403, 689, 0,
	690, 404, 0, 405, 406, 407, 408, 409, 410, 691,
	692, 693, 498, 0, 411, 412, 0, 413, 414, 415,
	416, 417, 0, 0, 0, 286, 418, 419, 420, 0,
	0, 499, 421, 694, 695, 0, 696, 0, 422, 423,
	0, 697, 0, 424, 425, 426, 0, 427, 0, 0,
	0, 428, 429, 430, 431, 432, 433, 0, 434, 436,
	435, 0, 437, 698, 0, 438, 439, 0, 0, 440,
	441, 442, 443, 444, 445, 448, 0, 0, 446, 447,
	449, 450, 0, 451, 452, 454, 457, 453, 455, 456,
	458, 471, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 473, 0, 472, 0, 474, 475,
	476, 477, 478, 485, 487, 488, 483, 484, 486, 489,
	490, 492, 480, 481, 482, 0, 491, 479, 0, 287,
	0, 493, 494, 495, 496, 0, 699, 497, 700, 500,
	501, 0, 0, 502, 0, 503, 0, 0, 505, 506,
	507, 0, 0, 508, 509, 701, 0, 510, 0, 702,
	511, 512, 504, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 703, 524, 525, 526, 704,
	527, 528, 529, 705, 530, 706, 531, 532, 0, 533,
	534, 535, 0, 536, 537, 538, 539, 540, 541, 542,
	707, 543, 544, 546, 545, 547, 0, 548, 0, 549,
	550, 551, 0, 0, 0, 0, 0, 552, 553, 555,
	0, 556, 557, 558, 559, 554, 560, 561, 562, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 708, 573, 0, 574, 575, 582, 583, 584, 576,
	577, 578, 585, 586, 587, 588, 589, 0, 591, 592,
	590, 593, 594, 595, 0, 596, 597, 579, 580, 598,
	599, 0, 600, 601, 602, 603, 604, 605, 606, 709,
	0, 607, 0, 608, 609, 610, 611, 612, 614, 581,
	615, 620, 621, 710, 616, 617, 618, 619, 711, 623,
	624, 0, 625, 971, 0, 622, 613, 877, 627, 628,
	629, 630, 631, 878, 633, 634, 0, 635, 712, 713,
	714, 715, 0, 645, 0, 636, 637, 638, 639, 716,
	640, 717, 0, 641, 642, 643, 644, 0, 646, 647,
	0, 0, 648, 649, 650, 652, 653, 651, 654, 0,
	655, 0, 0, 656, 657, 658, 718, 719, 720, 0,
	660, 659, 661, 662, 663, 721, 664, 665, 2138, 0,
	0, 0, 666, 667, 722, 668, 669, 670, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 291, 290, 292,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	882, 0, 0, 0, 0, 298, 0, 299, 300, 1267,
	301, 302, 303, 304, 305, 306, 307, 0, 2144, 0,
	308, 2134, 309, 2150, 0, 2157, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 2160, 2161, 0, 0,
	317, 318, 0, 0, 1568, 0, 319, 320, 321, 322,
	323, 324, 325, 0, 0, 327, 328, 329, 326, 330,
	0, 331, 0, 332, 333, 334, 335, 336, 337, 0,
	338, 339, 340, 1268, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 344, 345, 346, 347, 348, 1250,
	349, 351, 2148, 2147, 0, 354, 350, 352, 0, 355,
	353, 356, 0, 357, 358, 359, 0, 0, 360, 1235,
	362, 0, 363, 364, 365, 0, 366, 367, 368, 0,
	369, 370, 0, 371, 372, 373, 375, 377, 374, 376,
	378, 379, 380, 381, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 2146, 0, 0,
	0, 386, 0, 387, 388, 389, 0, 390, 0, 1269,
	391, 392, 393, 2155, 2156, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 0, 403, 0, 0, 0, 404,
	0, 405, 406, 407, 408, 409, 410, 0, 0, 0,
	498, 1271, 411, 412, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 418, 419, 420, 0, 1270, 499,
	421, 2141, 2142, 0, 2137, 0, 422, 423, 1272, 0,
	1273, 424, 425, 426, 1274, 427, 0, 0, 0, 428,
	429, 430, 431, 432, 433, 0, 434, 436, 435, 0,
	437, 0, 1275, 438, 439, 1276, 0, 440, 441, 442,
	443, 444, 445, 448, 0, 0, 446, 447, 449, 450,
	0, 451, 452, 454, 457, 453, 455, 456, 458, 471,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 473, 0, 472, 1277, 474, 475, 476, 477,
	478, 485, 487, 488, 483, 484, 486, 489, 490, 492,
	480, 481, 482, 1278, 491, 479, 0, 0, 1279, 493,
	494, 495, 496, 0, 0, 497, 2149, 500, 501, 0,
	0, 502, 0, 503, 0, 0, 505, 506, 507, 0,
	0, 508, 509, 0, 1280, 510, 1281, 0, 511, 512,
	504, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 2131, 524, 525, 526, 2132, 527, 528,
	529, 0, 530, 0, 531, 532, 0, 533, 534, 535,
	0, 536, 537, 538, 539, 540, 541, 542, 2145, 543,
	544, 546, 545, 547, 0, 548, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 552, 553, 555, 0, 556,
	557, 558, 559, 554, 560, 561, 562, 563, 564, 0,
	565, 566, 567, 1282, 568, 569, 570, 571, 572, 0,
	573, 0, 574, 575, 582, 583, 584, 576, 577, 578,
	585, 586, 587, 588, 589, 0, 591, 592, 590, 593,
	594, 595, 0, 596, 597, 579, 580, 598, 599, 1283,
	600, 601, 602, 603, 604, 605, 606, 2143, 0, 607,
	0, 608, 609, 610, 611, 612, 614, 581, 615, 620,
	621, 2159, 616, 617, 618, 619, 0, 623, 624, 0,
	625, 626, 0, 622, 613, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 0, 635, 2151, 2152, 2153, 2154,
	0, 645, 0, 636, 637, 638, 639, 0, 640, 0,
	0, 641, 642, 643, 644, 0, 646, 647, 0, 0,
	648, 649, 650, 652, 653, 651, 654, 0, 655, 0,
	0, 656, 657, 658, 0, 2135, 2158, 0, 660, 659,
	661, 662, 663, 0, 664, 665, 0, 0, 0, 872,
	666, 667, 0, 668, 669, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 4065, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	2125, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 879, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 4064, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 877, 627, 628, 629,
	630, 631, 878, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 4063, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 872, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 2165, 296, 297, 0, 0, 0, 0, 882,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 879, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 287, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 2164,
	586, 587, 588, 589, 0, 2166, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 877, 627, 628, 629, 630, 631,
	878, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 2163, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 872, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	2116, 296, 297, 0, 0, 0, 0, 882, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 879, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 2115, 586, 587,
	588, 589, 0, 2117, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 877, 627, 628, 629, 630, 631, 878, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	2114, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 870, 0, 872, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 882, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 879, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 877, 627, 628, 629, 630, 631, 878, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 872, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 882, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 879, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	877, 627, 628, 629, 630, 631, 878, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 872, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 882, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	879, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 2504, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 2505, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 877, 627,
	628, 629, 630, 631, 878, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 2506, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 882, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 0, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 1604, 1603, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 882,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 1267, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 1568,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 1268, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 1269, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 1271, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 1270, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 1272, 697, 1273, 424, 425, 426, 1274,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 1275, 438, 439,
	1276, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	1277, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 1278, 491,
	479, 0, 0, 1279, 493, 494, 495, 496, 4162, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 1280,
	510, 1281, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 1282, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 1283, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 0, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 1604, 1603, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 1568, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 1270, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 1272, 697, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 0,
	0, 1279, 493, 494, 495, 496, 3736, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1777,
	0, 1604, 1603, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 1568, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 1776, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 1270, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 1272, 697, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 0,
	0, 1279, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 1775,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 1774, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1649,
	0, 1604, 1603, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 1568, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	1651, 692, 693, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 1270, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 1272, 697, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 0,
	0, 1279, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1599,
	0, 1604, 1603, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 1267, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 1568, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 1268, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 1269, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 1271, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 1270, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 1272, 697, 1273, 424, 425, 426, 1274, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 1275, 438, 439, 1276, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 1277, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 1278, 491, 479, 0,
	0, 1279, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 1280, 510, 1281,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 1282, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 1283, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 0,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 1604,
	1603, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	1267, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 1568, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 1268, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	1269, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 1271, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 1270,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 1272,
	697, 1273, 424, 425, 426, 1274, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 1275, 438, 439, 1276, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 1277, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 1278, 491, 479, 0, 0, 1279,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 1280, 510, 1281, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 1282, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	1283, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1604, 1603, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 1267, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 1568, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 1268, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 1269, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	1271, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 1270, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 1272, 697, 1273,
	424, 425, 426, 1274, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 1275, 438, 439, 1276, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 1277, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 1278, 491, 479, 0, 0, 1279, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 1280, 510, 1281, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 1282, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 1283, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 1604, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 1267, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 1568, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	1268, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 1269, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 1271, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 1270, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 1272, 697, 1273, 424, 425,
	426, 1274, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 1275,
	438, 439, 1276, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 1277, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	1278, 491, 479, 0, 0, 1279, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 1280, 510, 1281, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	1282, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 1283, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 3036, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 3778, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 3040, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 3777, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 3039, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 3774, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 3776, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	3773, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 3038, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 3775, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 3036, 317, 318, 680, 0, 0, 3030, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 3032, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 3040, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 3039,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	3029, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 3038,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 3037, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 1856,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 1855, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	1854, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	1857, 577, 578, 585, 586, 587, 588, 589, 0, 1853,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 1851, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 1852, 659, 661, 662, 663, 721, 664, 665, 1572,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	1574, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 1317, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 1569,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	1571, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 1317, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 1475,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	1477, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 1317, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 755,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 754, 294, 295, 743, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 746, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 752, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 748, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 742,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 743, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 746, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 747, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 748, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 743, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	746, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 747, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 748, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 743, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 746, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 4172, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 748, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 1317, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 3679, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 3216, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 3215, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 2410, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 2473,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 2417,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	2416, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 2403,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	2405, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 2367, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 1317, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1694, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1693, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1592, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1585, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1587, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1394, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1393, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1384, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1383, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1381, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1380, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1376, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 1375, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 724, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 273, 0, 282,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 287, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 746, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 747, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 748, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 2513, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	2511, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 285, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 286, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	287, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 2509, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 285,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 286, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 287, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 285, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 2423, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 286, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 287, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 285, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 2190, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	286, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 287, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 285, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 2184, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 286, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 287, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 956, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	955, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	954, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 827, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 833, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 842,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 835, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 841, 837, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 838,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 836,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 839, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 840, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 834, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 3777, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 4494,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 1422,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 1425, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 1423, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 815, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 814, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 813, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 1426, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 811,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 1422,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 1425, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 1423, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 815, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 814, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 813, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 1426, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 811,
	713, 714, 715, 0, 645, 0, 636, 1424, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 822,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 820, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 733,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 732, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 731, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	3258, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 4791, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 3620, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 4383, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 4122, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 2911, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 3258, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 3255, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 2320, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 814, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 813, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 811, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 2483, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 2471, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1750, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1742, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 805, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 801, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 806, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 815,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 814,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 813, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 1727, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 811, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1700, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 1699, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1684, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 1682, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1677, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1654, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 1652, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1647, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1609, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1577, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1428, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 691, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 814,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 813, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 811, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1399, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 1398, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 1390, 0, 282, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 1389, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 1342, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 825,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 805,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 801, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 800, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 806, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 815, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 814, 569, 570,
	571, 572, 802, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 813, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 803, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 811,
	713, 714, 715, 0, 645, 0, 636, 807, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 794,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 795, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 757,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 750,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 728,
	0, 282, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 3806, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 814, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 813, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 811, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 3719, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	3695, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 3692, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 3644, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 582, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 3642, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	596, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 3630, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	3627, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 546, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	404, 0, 405, 406, 407, 408, 409, 410, 3226, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 282, 0, 0,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 291, 290, 292, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 298, 0, 299, 300, 0, 301,
	302, 303, 304, 305, 306, 307, 672, 673, 0, 308,
	674, 309, 675, 0, 676, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 677, 678, 679, 0, 317,
	318, 680, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 325, 0, 0, 327, 328, 329, 326, 330, 0,
	331, 0, 332, 333, 334, 335, 336, 337, 0, 338,
	339, 340, 0, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 344, 345, 346, 347, 348, 0, 349,
	351, 681, 682, 0, 354, 350, 352, 0, 355, 353,
	356, 0, 357, 358, 359, 0, 0, 360, 361, 362,
	0, 363, 364, 365, 0, 366, 367, 368, 0, 369,
	370, 683, 371, 372, 373, 375, 377, 374, 376, 378,
	379, 380, 381, 684, 685, 382, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 385, 686, 0, 0, 0,
	386, 0, 387, 388, 389, 0, 390, 0, 0, 391,
	392, 393, 687, 688, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 0, 403, 689, 0, 690, 404, 0,
	405, 406, 407, 408, 409, 410, 691, 692, 693, 498,
	0, 411, 412, 0, 413, 414, 415, 416, 417, 0,
	0, 0, 0, 418, 419, 420, 0, 0, 499, 421,
	694, 695, 0, 696, 0, 422, 423, 0, 697, 0,
	424, 425, 426, 0, 427, 0, 0, 0, 428, 429,
	430, 431, 432, 433, 0, 434, 436, 435, 0, 437,
	698, 0, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 448, 0, 0, 446, 447, 449, 450, 0,
	451, 452, 454, 457, 453, 455, 456, 458, 471, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 473, 0, 472, 0, 474, 475, 476, 477, 478,
	485, 487, 488, 483, 484, 486, 489, 490, 492, 480,
	481, 482, 0, 491, 479, 0, 0, 0, 493, 494,
	495, 496, 0, 699, 497, 700, 500, 501, 0, 0,
	502, 0, 503, 0, 0, 505, 506, 507, 0, 0,
	508, 509, 701, 0, 510, 0, 702, 511, 512, 504,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 703, 524, 525, 526, 704, 527, 528, 529,
	705, 530, 706, 531, 532, 0, 533, 534, 535, 0,
	536, 537, 538, 539, 540, 541, 542, 707, 543, 544,
	546, 545, 547, 0, 548, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 552, 553, 555, 0, 556, 557,
	558, 559, 554, 560, 561, 562, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 708, 573,
	0, 574, 575, 795, 583, 584, 576, 577, 578, 585,
	586, 587, 588, 589, 0, 591, 592, 590, 593, 594,
	595, 0, 596, 597, 579, 580, 598, 599, 0, 600,
	601, 602, 603, 604, 605, 606, 709, 0, 607, 0,
	608, 609, 610, 611, 612, 614, 581, 615, 620, 621,
	710, 616, 617, 618, 619, 711, 623, 624, 0, 625,
	626, 0, 622, 613, 0, 627, 628, 629, 630, 631,
	632, 633, 634, 0, 635, 712, 713, 714, 715, 0,
	645, 0, 636, 637, 638, 639, 716, 640, 717, 0,
	641, 642, 643, 644, 0, 646, 647, 0, 0, 648,
	649, 650, 652, 653, 651, 654, 0, 655, 0, 0,
	656, 657, 658, 718, 719, 720, 0, 660, 659, 661,
	662, 663, 721, 664, 665, 282, 0, 0, 0, 666,
	667, 722, 668, 669, 670, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 291, 290, 292, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 671, 0,
	2441, 0, 298, 0, 299, 300, 0, 301, 302, 303,
	304, 305, 306, 307, 672, 673, 0, 308, 674, 309,
	675, 0, 676, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 677, 678, 679, 0, 317, 318, 680,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 325,
	0, 0, 327, 328, 329, 326, 330, 0, 331, 0,
	332, 333, 334, 335, 336, 337, 0, 338, 339, 340,
	0, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 344, 345, 346, 347, 348, 0, 349, 351, 681,
	682, 0, 354, 350, 352, 0, 355, 353, 356, 0,
	357, 358, 359, 0, 0, 360, 361, 362, 0, 363,
	364, 365, 0, 366, 367, 368, 0, 369, 370, 683,
	371, 372, 373, 375, 377, 374, 376, 378, 379, 380,
	381, 684, 685, 382, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 385, 686, 0, 0, 0, 386, 0,
	387, 388, 389, 0, 390, 0, 0, 391, 392, 393,
	687, 688, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 0, 403, 689, 0, 690, 404, 0, 405, 406,
	407, 408, 409, 410, 691, 692, 693, 498, 0, 411,
	412, 0, 413, 414, 415, 416, 417, 0, 0, 0,
	0, 418, 419, 420, 0, 0, 499, 421, 694, 695,
	0, 696, 0, 422, 423, 0, 697, 0, 424, 425,
	426, 0, 427, 0, 0, 0, 428, 429, 430, 431,
	432, 433, 0, 434, 436, 435, 0, 437, 698, 0,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	448, 0, 0, 446, 447, 449, 450, 0, 451, 452,
	454, 457, 453, 455, 456, 458, 471, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 473,
	0, 472, 0, 474, 475, 476, 477, 478, 485, 487,
	488, 483, 484, 486, 489, 490, 492, 480, 481, 482,
	0, 491, 479, 0, 0, 0, 493, 494, 495, 496,
	0, 699, 497, 700, 500, 501, 0, 0, 502, 0,
	503, 0, 0, 505, 506, 507, 0, 0, 508, 509,
	701, 0, 510, 0, 702, 511, 512, 504, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	703, 524, 525, 526, 704, 527, 528, 529, 705, 530,
	706, 531, 532, 0, 533, 534, 535, 0, 536, 537,
	538, 539, 540, 541, 542, 707, 543, 544, 546, 545,
	547, 0, 548, 0, 549, 550, 551, 0, 0, 0,
	0, 0, 552, 553, 555, 0, 556, 557, 558, 559,
	554, 560, 561, 562, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 708, 573, 0, 574,
	575, 582, 583, 584, 576, 577, 578, 585, 586, 587,
	588, 589, 0, 591, 592, 590, 593, 594, 595, 0,
	0, 597, 579, 580, 598, 599, 0, 600, 601, 602,
	603, 604, 605, 606, 709, 0, 607, 0, 608, 609,
	610, 611, 612, 614, 581, 615, 620, 621, 710, 616,
	617, 618, 619, 711, 623, 624, 0, 625, 626, 0,
	622, 613, 0, 627, 628, 629, 630, 631, 632, 633,
	634, 0, 635, 712, 713, 714, 715, 0, 645, 0,
	636, 637, 638, 639, 716, 640, 717, 0, 641, 642,
	643, 644, 0, 646, 647, 0, 0, 648, 649, 650,
	652, 653, 651, 654, 0, 655, 0, 0, 656, 657,
	658, 718, 719, 720, 0, 660, 659, 661, 662, 663,
	721, 664, 665, 282, 0, 0, 0, 666, 667, 722,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 291, 290, 292, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	298, 0, 299, 300, 0, 301, 302, 303, 304, 305,
	306, 307, 672, 673, 0, 308, 674, 309, 675, 0,
	676, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 677, 678, 679, 0, 317, 318, 680, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 325, 0, 0,
	327, 328, 329, 326, 330, 0, 331, 0, 332, 333,
	334, 335, 336, 337, 0, 338, 339, 340, 0, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 344,
	345, 346, 347, 348, 0, 349, 351, 681, 682, 0,
	354, 350, 352, 0, 355, 353, 356, 0, 357, 358,
	359, 0, 0, 360, 361, 362, 0, 363, 364, 365,
	0, 366, 367, 368, 0, 369, 370, 683, 371, 372,
	373, 375, 377, 374, 376, 378, 379, 380, 381, 684,
	685, 382, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 385, 686, 0, 0, 0, 386, 0, 387, 388,
	389, 0, 390, 0, 0, 391, 392, 393, 687, 688,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 0,
	403, 689, 0, 690, 404, 0, 405, 406, 407, 408,
	409, 410, 1361, 692, 693, 498, 0, 411, 412, 0,
	413, 414, 415, 416, 417, 0, 0, 0, 0, 418,
	419, 420, 0, 0, 499, 421, 694, 695, 0, 696,
	0, 422, 423, 0, 697, 0, 424, 425, 426, 0,
	427, 0, 0, 0, 428, 429, 430, 431, 432, 433,
	0, 434, 436, 435, 0, 437, 698, 0, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 448, 0,
	0, 446, 447, 449, 450, 0, 451, 452, 454, 457,
	453, 455, 456, 458, 471, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 473, 0, 472,
	0, 474, 475, 476, 477, 478, 485, 487, 488, 483,
	484, 486, 489, 490, 492, 480, 481, 482, 0, 491,
	479, 0, 0, 0, 493, 494, 495, 496, 0, 699,
	497, 700, 500, 501, 0, 0, 502, 0, 503, 0,
	0, 505, 506, 507, 0, 0, 508, 509, 701, 0,
	510, 0, 702, 511, 512, 504, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 703, 524,
	525, 526, 704, 527, 528, 529, 705, 530, 706, 531,
	532, 0, 533, 534, 535, 0, 536, 537, 538, 539,
	540, 541, 542, 707, 543, 544, 546, 545, 547, 0,
	548, 0, 549, 550, 551, 0, 0, 0, 0, 0,
	552, 553, 555, 0, 556, 557, 558, 559, 554, 560,
	561, 562, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 708, 573, 0, 574, 575, 582,
	583, 584, 576, 577, 578, 585, 586, 587, 588, 589,
	0, 591, 592, 590, 593, 594, 595, 0, 596, 597,
	579, 580, 598, 599, 0, 600, 601, 602, 603, 604,
	605, 606, 709, 0, 607, 0, 608, 609, 610, 611,
	612, 614, 581, 615, 620, 621, 710, 616, 617, 618,
	619, 711, 623, 624, 0, 625, 626, 0, 622, 613,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 0,
	635, 712, 713, 714, 715, 0, 645, 0, 636, 637,
	638, 639, 716, 640, 717, 0, 641, 642, 643, 644,
	0, 646, 647, 0, 0, 648, 649, 650, 652, 653,
	651, 654, 0, 655, 0, 0, 656, 657, 658, 718,
	719, 720, 0, 660, 659, 661, 662, 663, 721, 664,
	665, 282, 0, 0, 0, 666, 667, 722, 668, 669,
	670, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	291, 290, 292, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 298, 0,
	299, 300, 0, 301, 302, 303, 304, 305, 306, 307,
	672, 673, 0, 308, 674, 309, 675, 0, 676, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 677,
	678, 679, 0, 317, 318, 680, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 325, 0, 0, 327, 328,
	329, 326, 330, 0, 331, 0, 332, 333, 334, 335,
	336, 337, 0, 338, 339, 340, 0, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 344, 345, 346,
	347, 348, 0, 349, 351, 681, 682, 0, 354, 350,
	352, 0, 355, 353, 356, 0, 357, 358, 359, 0,
	0, 360, 361, 362, 0, 363, 364, 365, 0, 366,
	367, 368, 0, 369, 370, 683, 371, 372, 373, 375,
	377, 374, 376, 378, 379, 380, 381, 684, 685, 382,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 385,
	686, 0, 0, 0, 386, 0, 387, 388, 389, 0,
	390, 0, 0, 391, 392, 393, 687, 688, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 0, 403, 689,
	0, 690, 404, 0, 405, 406, 407, 408, 409, 410,
	691, 692, 693, 498, 0, 411, 412, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 418, 419, 420,
	0, 0, 499, 421, 694, 695, 0, 696, 0, 422,
	423, 0, 697, 0, 424, 425, 426, 0, 427, 0,
	0, 0, 428, 429, 430, 431, 432, 433, 0, 434,
	436, 435, 0, 437, 698, 0, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 448, 0, 0, 446,
	447, 449, 450, 0, 451, 452, 454, 457, 453, 455,
	456, 458, 471, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 473, 0, 472, 0, 474,
	475, 476, 477, 478, 485, 487, 488, 483, 484, 486,
	489, 490, 492, 480, 481, 482, 0, 491, 479, 0,
	0, 0, 493, 494, 495, 496, 0, 699, 497, 700,
	500, 501, 0, 0, 502, 0, 503, 0, 0, 505,
	506, 507, 0, 0, 508, 509, 701, 0, 510, 0,
	702, 511, 512, 504, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 703, 524, 525, 526,
	704, 527, 528, 529, 705, 530, 706, 531, 532, 0,
	533, 534, 535, 0, 536, 537, 538, 539, 540, 541,
	542, 707, 543, 544, 1290, 545, 547, 0, 548, 0,
	549, 550, 551, 0, 0, 0, 0, 0, 552, 553,
	555, 0, 556, 557, 558, 559, 554, 560, 561, 562,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 708, 573, 0, 574, 575, 582, 583, 584,
	576, 577, 578, 585, 586, 587, 588, 589, 0, 591,
	592, 590, 593, 594, 595, 0, 596, 597, 579, 580,
	598, 599, 0, 600, 601, 602, 603, 604, 605, 606,
	709, 0, 607, 0, 608, 609, 610, 611, 612, 614,
	581, 615, 620, 621, 710, 616, 617, 618, 619, 711,
	623, 624, 0, 625, 626, 0, 622, 613, 0, 627,
	628, 629, 630, 631, 632, 633, 634, 0, 635, 712,
	713, 714, 715, 0, 645, 0, 636, 637, 638, 639,
	716, 640, 717, 0, 641, 642, 643, 644, 0, 646,
	647, 0, 0, 648, 649, 650, 652, 653, 651, 654,
	0, 655, 0, 0, 656, 657, 658, 718, 719, 720,
	0, 660, 659, 661, 662, 663, 721, 664, 665, 282,
	0, 0, 0, 666, 667, 722, 668, 669, 670, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 672, 673,
	0, 308, 674, 309, 675, 0, 676, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 677, 678, 679,
	0, 317, 318, 680, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 344, 345, 346, 347, 348,
	0, 349, 351, 681, 682, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 683, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 684, 685, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 686, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 687, 688, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 689, 0, 690,
	0, 0, 405, 406, 407, 408, 409, 410, 691, 692,
	693, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 694, 695, 0, 696, 0, 422, 423, 0,
	697, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 698, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 699, 497, 700, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 701, 0, 510, 0, 702, 511,
	512, 504, 513, 514, 0, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 703, 524, 525, 526, 704, 527,
	528, 529, 705, 530, 706, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 0, 541, 542, 707,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	708, 0, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 0, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 709, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 710, 616, 617, 618, 619, 711, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 712, 713, 714,
	715, 0, 645, 0, 636, 637, 638, 639, 716, 640,
	717, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 718, 719, 720, 0, 660,
	659, 661, 662, 663, 721, 664, 665, 1690, 0, 1406,
	0, 666, 667, 722, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 0, 0,
	0, 317, 318, 0, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 1408, 344, 345, 346, 347, 348,
	0, 349, 351, 0, 0, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 0, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 0, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 0, 0, 0,
	404, 0, 405, 406, 407, 408, 409, 410, 1689, 0,
	0, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 0, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 0, 497, 0, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 0, 0, 510, 0, 0, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 0, 530, 0, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 0,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1409, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 0, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 0, 616, 617, 618, 619, 0, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 0, 0, 0,
	0, 0, 645, 0, 636, 637, 638, 639, 0, 640,
	0, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 0, 0, 0, 0, 660,
	659, 661, 662, 663, 0, 664, 665, 1612, 0, 1406,
	0, 666, 667, 0, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 0, 0,
	0, 317, 318, 0, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 1408, 344, 345, 346, 347, 348,
	0, 349, 351, 0, 0, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 0, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 0, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 0, 0, 0,
	404, 0, 405, 406, 407, 408, 409, 410, 1611, 0,
	0, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 0, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 0, 497, 0, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 0, 0, 510, 0, 0, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 0, 530, 0, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 0,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1409, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 0, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 0, 616, 617, 618, 619, 0, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 0, 0, 0,
	0, 0, 645, 0, 636, 637, 638, 639, 0, 640,
	0, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 0, 0, 0, 0, 660,
	659, 661, 662, 663, 0, 664, 665, 1404, 0, 1406,
	0, 666, 667, 0, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 0, 0,
	0, 317, 318, 0, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 1408, 344, 345, 346, 347, 348,
	0, 349, 351, 0, 0, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 0, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 0, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 0, 0, 0,
	404, 0, 405, 406, 407, 408, 409, 410, 1403, 0,
	0, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 0, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 0, 497, 0, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 0, 0, 510, 0, 0, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 0, 530, 0, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 0,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1409, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 0, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 0, 616, 617, 618, 619, 0, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 0, 0, 0,
	0, 0, 645, 0, 636, 637, 638, 639, 0, 640,
	0, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 0, 0, 0, 0, 660,
	659, 661, 662, 663, 0, 664, 665, 2204, 0, 1406,
	0, 666, 667, 0, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 0, 0,
	0, 317, 318, 0, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 1408, 344, 345, 346, 347, 348,
	0, 349, 351, 0, 0, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 0, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 0, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 0, 0, 0,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 0,
	0, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 0, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 0, 497, 0, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 0, 0, 510, 0, 0, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 0, 530, 0, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 0,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1409, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 0, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 0, 616, 617, 618, 619, 0, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 0, 0, 0,
	0, 0, 645, 0, 636, 637, 638, 639, 0, 640,
	0, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 0, 0, 0, 0, 660,
	659, 661, 662, 663, 0, 664, 665, 2171, 0, 1406,
	0, 666, 667, 0, 668, 669, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 291, 290,
	292, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 299, 300,
	0, 301, 302, 303, 304, 305, 306, 307, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 0, 0, 0, 316, 0, 0, 0,
	0, 317, 318, 0, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 325, 0, 0, 327, 328, 329, 326,
	330, 0, 331, 0, 332, 333, 334, 335, 336, 337,
	0, 338, 339, 340, 0, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 1408, 344, 345, 346, 347, 348,
	0, 349, 351, 0, 0, 0, 354, 350, 352, 0,
	355, 353, 356, 0, 357, 358, 359, 0, 0, 360,
	361, 362, 0, 363, 364, 365, 0, 366, 367, 368,
	0, 369, 370, 0, 371, 372, 373, 375, 377, 374,
	376, 378, 379, 380, 381, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 385, 0, 0,
	0, 0, 386, 0, 387, 388, 389, 0, 390, 0,
	0, 391, 392, 393, 0, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 0, 403, 0, 0, 0,
	404, 0, 405, 406, 407, 408, 409, 410, 0, 0,
	0, 498, 0, 411, 412, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 418, 419, 420, 0, 0,
	499, 421, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 424, 425, 426, 0, 427, 0, 0, 0,
	428, 429, 430, 431, 432, 433, 0, 434, 436, 435,
	0, 437, 0, 0, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 448, 0, 0, 446, 447, 449,
	450, 0, 451, 452, 454, 457, 453, 455, 456, 458,
	471, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 473, 0, 472, 0, 474, 475, 476,
	477, 478, 485, 487, 488, 483, 484, 486, 489, 490,
	492, 480, 481, 482, 0, 491, 479, 0, 0, 0,
	493, 494, 495, 496, 0, 0, 497, 0, 500, 501,
	0, 0, 502, 0, 503, 0, 0, 505, 506, 507,
	0, 0, 508, 509, 0, 0, 510, 0, 0, 511,
	512, 504, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 0, 530, 0, 531, 532, 0, 533, 534,
	535, 0, 536, 537, 538, 539, 540, 541, 542, 0,
	543, 544, 546, 545, 547, 0, 548, 0, 549, 550,
	551, 0, 0, 0, 0, 0, 552, 553, 555, 0,
	556, 557, 558, 559, 554, 560, 561, 562, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	0, 573, 0, 574, 575, 582, 583, 584, 576, 577,
	578, 585, 586, 587, 588, 589, 0, 591, 592, 590,
	593, 594, 595, 1409, 596, 597, 579, 580, 598, 599,
	0, 600, 601, 602, 603, 604, 605, 606, 0, 0,
	607, 0, 608, 609, 610, 611, 612, 614, 581, 615,
	620, 621, 0, 616, 617, 618, 619, 0, 623, 624,
	0, 625, 626, 0, 622, 613, 0, 627, 628, 629,
	630, 631, 632, 633, 634, 0, 635, 0, 0, 0,
	0, 0, 645, 0, 636, 637, 638, 639, 0, 640,
	0, 0, 641, 642, 643, 644, 0, 646, 647, 0,
	0, 648, 649, 650, 652, 653, 651, 654, 0, 655,
	0, 0, 656, 657, 658, 0, 0, 0, 0, 660,
	659, 661, 662, 663, 1406, 664, 665, 0, 0, 0,
	0, 666, 667, 0, 668, 669, 670, 0, 0, 0,
	0, 288, 289, 291, 290, 292, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 299, 300, 0, 301, 302, 303, 304,
	305, 306, 307, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 0, 0, 0, 317, 318, 0, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 325, 0,
	0, 327, 328, 329, 326, 330, 0, 331, 0, 332,
	333, 334, 335, 336, 337, 0, 338, 339, 340, 0,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 1408,
	344, 345, 346, 347, 348, 0, 349, 351, 0, 0,
	0, 354, 350, 352, 0, 355, 353, 356, 0, 357,
	358, 359, 0, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 366, 367, 368, 0, 369, 370, 0, 371,
	372, 373, 375, 377, 374, 376, 378, 379, 380, 381,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 385, 0, 0, 0, 0, 386, 0, 387,
	388, 389, 0, 390, 0, 0, 391, 392, 393, 0,
	0, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	0, 403, 0, 0, 0, 404, 0, 405, 406, 407,
	408, 409, 410, 0, 0, 0, 498, 0, 411, 412,
	0, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	418, 419, 420, 0, 0, 499, 421, 0, 0, 0,
	0, 0, 422, 423, 0, 0, 0, 424, 425, 426,
	0, 427, 0, 0, 0, 428, 429, 430, 431, 432,
	433, 0, 434, 436, 435, 0, 437, 0, 0, 438,
	439, 0, 0, 440, 441, 442, 443, 444, 445, 448,
	0, 0, 446, 447, 449, 450, 0, 451, 452, 454,
	457, 453, 455, 456, 458, 471, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 473, 0,
	472, 0, 474, 475, 476, 477, 478, 485, 487, 488,
	483, 484, 486, 489, 490, 492, 480, 481, 482, 0,
	491, 479, 0, 0, 0, 493, 494, 495, 496, 0,
	0, 497, 0, 500, 501, 0, 0, 502, 0, 503,
	0, 0, 505, 506, 507, 0, 0, 508, 509, 0,
	0, 510, 0, 0, 511, 512, 504, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 0, 530, 0,
	531, 532, 0, 533, 534, 535, 0, 536, 537, 538,
	539, 540, 541, 542, 0, 543, 544, 546, 545, 547,
	0, 548, 0, 549, 550, 551, 0, 0, 0, 0,
	0, 552, 553, 555, 0, 556, 557, 558, 559, 554,
	560, 561, 562, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 0, 573, 0, 574, 575,
	582, 583, 584, 576, 577, 578, 585, 586, 587, 588,
	589, 0, 591, 592, 590, 593, 594, 595, 1409, 596,
	597, 579, 580, 598, 599, 0, 600, 601, 602, 603,
	604, 605, 606, 0, 0, 607, 0, 608, 609, 610,
	611, 612, 614, 581, 615, 620, 621, 0, 616, 617,
	618, 619, 0, 623, 624, 0, 625, 626, 0, 622,
	613, 0, 627, 628, 629, 630, 631, 632, 633, 634,
	0, 635, 0, 0, 0, 0, 0, 645, 0, 636,
	637, 638, 639, 0, 640, 0, 0, 641, 642, 643,
	644, 0, 646, 647, 0, 0, 648, 649, 650, 652,
	653, 651, 654, 0, 655, 0, 0, 656, 657, 658,
	0, 0, 0, 0, 660, 659, 661, 662, 663, 0,
	664, 665, 0, 0, 0, 0, 666, 667, 0, 668,
	669, 670, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 1936, 0, 0, 0,
	0, 0, 1905, 1906, 1908, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 1936, 0, 0, 0,
	0, 1961, 0, 0, 1908, 0, 0, 0, 0, 0,
	1907, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 1953, 1946, 0,
	0, 1956, 0, 0, 1922, 1923, 0, 0, 1935, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 1952, 0, 1953, 0, 0,
	0, 0, 0, 0, 1922, 1923, 0, 1928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 1928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 1936, 0, 0, 0, 1954, 0, 0, 0, 1908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1961, 1958, 0, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 1943, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 1947, 0, 1929, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 0, 1960,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 1960,
	0, 0, 0, 0, 1908, 0, 0, 0, 0, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 1944, 0, 0,
	1907, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 1919, 1920, 1926, 1948, 1925, 1921, 1924,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 1945, 4916, 0, 0, 0, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	1954, 0, 0, 0, 4819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	1942, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 1955,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1947, 1944, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1928, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1945, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 4771,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 1934, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 1929, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1947, 1944, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1945, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 4770, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	1942, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 1955,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1947, 1944, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1928, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1945, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 4580,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 1934, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 1929, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1947, 1944, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1945, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 4407, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	1942, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 1955,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1947, 1944, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1928, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1945, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 4321,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 1934, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 1929, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1947, 1944, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1945, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 4320, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	1942, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 1955,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1947, 1944, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1928, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1945, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 4319,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 1934, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 1929, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1947, 1944, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1945, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 3950, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	1942, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 1955,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1947, 1944, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1928, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1945, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 3429,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 1934, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 1929, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1947, 1944, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1945, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 3428, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	1942, 1936, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 1955,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 1947, 1944, 0, 0, 1907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1928, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1945, 0,
	0, 0, 1913, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 3427,
	0, 0, 1905, 1906, 0, 1938, 1939, 1940, 1949, 1950,
	1951, 0, 0, 1946, 0, 1934, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 1942, 1936, 0, 0, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 1929, 0,
	1952, 0, 1953, 0, 1955, 0, 0, 0, 0, 1922,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 1947, 1944, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1928, 0, 2283, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 2281, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 1930, 1931, 1932,
	1933, 0, 0, 1945, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	0, 0, 0, 0, 3426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 0,
	1934, 1956, 0, 0, 0, 0, 0, 0, 1935, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 1952, 0, 1953, 0, 0,
	0, 0, 0, 0, 1922, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1944, 0, 0, 0, 0, 1905, 1906, 0,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 1928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 1936, 0, 0, 1960, 0, 0, 1905, 1906, 1908,
	1938, 1939, 1940, 1949, 1950, 1951, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1942, 1936, 0, 0, 0, 1954, 1961, 0, 0, 1908,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 1927, 1943, 0, 0, 0,
	0, 0, 0, 0, 1924, 0, 1961, 1958, 0, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 1945, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 1924, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 3391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2282, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 0, 0, 1929, 0,
	0, 0, 1913, 5070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 1932, 1933, 1947, 0, 0, 0,
	0, 0, 1913, 0, 3491, 0, 0, 0, 0, 0,
	3490, 0, 0, 1946, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 1935, 1937, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2280,
	1952, 0, 1953, 1946, 0, 0, 1956, 0, 0, 1922,
	1923, 0, 0, 1935, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	1952, 0, 1953, 0, 0, 0, 0, 0, 0, 1922,
	1923, 0, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 1919, 1920, 1926, 1948, 1925, 1921, 0,
	1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914, 1915, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 5069, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 1929, 0, 0, 0, 0, 0, 1905,
	1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 1942, 1936, 1960, 0, 0, 0, 3362, 0,
	0, 1908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 1907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 3363, 0, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1919, 1920,
	1926, 1948, 1925, 1921, 0, 1918, 1916, 1917, 1909, 1910,
	1911, 1912, 1914, 1915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 1932, 1933, 0, 0,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2884, 0, 0,
	0, 0, 0, 0, 1905, 1906, 0, 1938, 1939, 1940,
	1949, 1950, 1951, 0, 0, 1946, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 1935, 1937, 1942, 1936, 0,
	0, 0, 2883, 0, 0, 0, 1908, 0, 0, 0,
	0, 0, 1952, 0, 1953, 0, 1955, 0, 0, 0,
	0, 1922, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 1944,
	0, 0, 1907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 0, 1928, 0, 0, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 1930,
	1931, 1932, 1933, 0, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	1946, 0, 1934, 1956, 2350, 0, 0, 0, 0, 0,
	1935, 1937, 0, 1942, 1936, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 1929, 0, 1952, 0, 1953,
	0, 0, 1955, 0, 0, 0, 1922, 1923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 1947, 1944, 0, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 1928,
	0, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 2351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	1945, 0, 0, 0, 0, 1913, 0, 0, 0, 0,
	1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916, 1917,
	1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 1946, 1934, 0, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 1942, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	1929, 0, 0, 1952, 0, 1953, 0, 1955, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 1947, 0,
	1944, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 1928, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 1945, 0, 0, 0, 0,
	1913, 0, 4675, 0, 0, 1919, 1920, 1926, 1948, 1925,
	1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912, 1914,
	1915, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 1946, 0, 1934, 1956, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1942, 1936, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 1929, 0, 1952, 0,
	1953, 0, 1955, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 1947, 1944, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	1928, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	0, 1945, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 1946, 0, 1934, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 1942, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	0, 1929, 0, 1952, 0, 1953, 0, 1955, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 1947,
	1944, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 1928, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 1945, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 1946, 0, 1934, 1956, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1942, 1936, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 1929, 0, 1952, 0,
	1953, 0, 1955, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 1947, 1944, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	1928, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	0, 1945, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 1946, 0, 1934, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 1942, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	0, 1929, 0, 1952, 0, 1953, 0, 1955, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 1947,
	1944, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 1928, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 1945, 0, 0, 0,
	1913, 0, 4143, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 1946, 0, 1934, 1956, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1942, 1936, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 1929, 0, 1952, 0,
	1953, 0, 1955, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 1947, 1944, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	1928, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	0, 1945, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 1934, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 1952, 0, 1953, 0, 0, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1944, 0, 0, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1942, 1936,
	0, 0, 1960, 0, 0, 0, 0, 1908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 1943, 0, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 1929, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 0, 0, 3497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 1946, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1942, 1936, 0, 0, 1960, 3492, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 1952, 3931,
	1953, 0, 1955, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 1944, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	1928, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	0, 0, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 1946, 0, 1934, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 1942, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	0, 1929, 0, 1952, 0, 1953, 0, 1955, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 1947,
	1944, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 1928, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 1945, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 1946, 0, 1934, 1956, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1942, 1936, 0, 0, 0, 3430, 0,
	0, 0, 1908, 0, 0, 0, 1929, 0, 1952, 0,
	1953, 0, 1955, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 1947, 1944, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	1928, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	3457, 1945, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1906, 0, 1938, 1939,
	1940, 1949, 1950, 1951, 0, 0, 1946, 0, 1934, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 1942, 1936,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	0, 1929, 0, 1952, 0, 1953, 0, 1955, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 1947,
	1944, 0, 0, 1907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 1928, 0, 0, 0, 0,
	0, 0, 1924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	1930, 1931, 1932, 1933, 0, 0, 1945, 0, 0, 0,
	1913, 0, 0, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 1906, 0, 1938, 1939, 1940, 1949, 1950, 1951, 0,
	0, 1946, 0, 1934, 1956, 0, 0, 0, 0, 0,
	0, 1935, 1937, 1942, 1936, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 1929, 0, 1952, 0,
	1953, 0, 1955, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 1947, 1944, 0, 0, 1907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	1928, 0, 0, 0, 0, 0, 0, 1924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 1930, 1931, 1932, 1933, 0,
	0, 1945, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 1934, 1956,
	0, 0, 0, 0, 0, 0, 1935, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 1952, 0, 1953, 0, 0, 0, 0,
	0, 0, 1922, 1923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1947,
	1944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 2454,
	0, 0, 0, 0, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1919, 1920, 1926, 1948,
	1925, 1921, 0, 1918, 1916, 1917, 1909, 1910, 1911, 1912,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 1073, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	1029, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 1033, 0, 0, 0, 0, 1084,
	0, 0, 0, 0, 0, 0, 0, 1960, 1043, 1044,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 1035, 0, 0, 0,
	0, 0, 1036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	0, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 1920, 1926, 1948, 1925, 1921, 0, 1918, 1916,
	1917, 1909, 1910, 1911, 1912, 1914, 1915, 1072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 0,
	0, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1040, 1041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1049, 1047, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 1058, 0, 0, 1079, 1078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 0, 0, 1066, 1067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1076, 1064, 0, 0, 0, 0, 0, 0,
	0, 1082, 1059, 0, 0, 1052, 1050, 0, 0, 1055,
	0, 0, 0, 0, 0, 1056, 0, 0, 1025, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1068, 0, 1057, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	0, 0, 1060, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 1038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1065,
}

var sqlPact = [...]int{
	7487, -1000, -1000, -1000, -1000, 192, -1000, -1000, 188, 187,
	185, 184, 183, 182, 181, 180, 174, 171, 168, -1000,
	-1000, 166, 164, 159, -1000, -1000, 157, -1000, -1000, 156,
	-1000, 155, 154, 153, -1000, -1000, 152, -1000, 148, -1000,
	-1000, -1000, -1000, 145, 144, 141, 95995, 95415, 96573, 2415,
	122057, 104677, 2304, 84987, 121477, 84407, 120897, 2224, 8268, 120317,
	2883, 138, -1000, 119737, 134, 133, 132, -1000, 104097, 119157,
	101779, 2230, -1000, 131, -1000, 5422, 73921, 130, 129, 128,
	127, 2486, 126, -1000, 125, 124, -1000, -1000, 123, -1000,
	10846, 1544, -1000, 122, 121, -1000, 504, 101199, 120, 119,
	118, 2701, 117, 111, 71026, 110, 109, 106, 2533, 3018,
	-1000, -1000, 2137, -1000, -1000, 105, 103, 102, 101, 100,
	99, 97, 96, 94, 93, 92, 91, 90, -1000, 87,
	86, 85, 84, 83, -1000, 82, 81, 80, -1000, 79,
	-1000, 72, 71, 69, 65, 57, 55, 51, 50, 49,
	48, 45, 42, 41, 34, 33, 142452, -1000, -1000, 32,
	1902, 1760, 1758, 1726, 1724, 1710, 1019, 31, 30, 29,
	28, 27, 26, 23, 21, 20, 13, 12, 9, 8,
	7, 6, 5, 4, 2, 1, 0, 143, -1, -4,
	-5, -6, -7, -8, -12, 2398, 3692, -1000, 1656, 1060,
	32646, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 130727, 122635,
	-13, -71, -14, -1000, 3510, 956, 58795, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 237, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 478, 2805, 726, -1000, -1000,
	-1000, 118577, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2403, -51, -1000, 2067, -1000, -1000, -1000, -1000, -1000, 721,
	-1000, 2390, 2331, 305, 2322, -1000, -1000, -1000, 3545, 2568,
	4028, 4027, 4026, 4025, 4024, 130149, 1941, 4023, 2656, 4021,
	4017, 4014, 4012, 4011, 4010, 4006, -1000, 94835, 1078, 94255,
	93675, 3566, 117999, 93095, 117419, 133045, 50532, 966, 3539, -1000,
	-1000, -1000, -1000, -1000, -1000, 122635, -1000, 1077, -1000, -1000,
	4004, 2166, 718, 103517, -1000, -1000, 116839, 1968, -1000, -1000,
	-1000, 952, 1222, 35018, 35018, 35018, 236, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3558, -1000, -1000, -1000, -1000, 122635,
	2855, 2855, 1449, 1462, 1462, 2855, 2855, -1000, -1000, -1000,
	-1000, -1000, -1000, 4003, 4002, 4001, 4000, 3997, -1000, -1000,
	83827, 25337, 83247, 82667, 116259, 49939, 92515, 91935, 3995, 3994,
	3993, 49346, 78607, 115679, 132465, 3690, 3689, 1076, 2065, 1515,
	-1000, -1000, -1000, -1000, -1000, -1000, -39, 75655, 3722, 122635,
	-1000, 233, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48753,
	796, 48160, 737, 47567, 676, 115099, -1000, -1000, -1000, -1000,
	78017, -1000, 114519, 2562, 3991, 3990, 1159, 3988, 3441, 1884,
	3987, 1921, 1240, 3986, 3985, 3984, 3983, 3981, 3980, 3979,
	1537, 113939, 3144, 1580, 113359, 1776, 131885, 1075, 91355, 96573,
	2780, 112779, 1359, 1358, -1000, -1000, -1000, -1000, 3251, 3007,
	2970, 1340, -1000, -1000, -1000, -1000, 62292, 6966, 6861, -1000,
	-1000, 9119, 112199, 65232, 96573, 96573, -1000, -1000, -1000, -1000,
	-1000, -1000, 46974, 604, 46381, 939, 111619, -1000, -1000, 62880,
	3098, 1107, -1000, -1000, -1000, -1000, -1000, 111039, 45788, 602,
	45195, 934, 122635, -1000, 3142, 1888, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2664, 1664, 3761, 2895, 77427,
	2111, 1469, 3495, 3246, 3241, 1577, 2060, 3235, 3978, 2770,
	3230, 3228, 3215, 3212, 3205, 1650, 2720, 358, 2755, 32053,
	3125, 1803, 44602, 1572, 1543, 3203, 3202, 3796, 2035, 2080,
	2187, 2122, 82087, 3973, 3972, 3459, 3201, 3197, 2951, 3193,
	-1000, 3097, 1533, 231, -1000, -1000, -1000, -1000, -1000, -1000,
	1532, -1000, -1000, -1000, -1000, -1000, 86721, -1000, -1000, 1827,
	-1000, -1000, 1827, -1000, -1000, -1000, -1000, -1000, 1329, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1656, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2820, -1000, 2161, -1000, -1000, -1000,
	2615, 3486, 3486, 3486, 3537, 464, 463, -1000, 143, -1000,
	-1000, 142029, -1000, -1000, 51125, 51125, 51125, 51125, 51125, 51125,
	51125, 51125, 2243, -1000, 716, -1000, -1000, 780, -1000, 715,
	649, 581, -1000, -1000, -1000, -1000, -1000, -1000, 714, -1000,
	-1000, -1000, -1000, -1000, -1000, 3722, -1000, 28358, -1000, -1000,
	-1000, 449, 713, 51125, -1000, -1000, 3825, 3821, 763, -1000,
	226, 969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3141, 712, 710, -1000, 705, 704,
	701, 699, 698, -1000, 697, -1000, 696, 694, 691, 689,
	688, 686, 684, 682, -1000, 2113, -1000, -1000, -1000, -1000,
	-1000, -1000, 633, 632, 632, 632, -1000, 1069, -1000, -1000,
	-1000, 335, 631, 251, 630, 629, 628, -1000, 675, 674,
	672, 671, 669, 659, 658, 656, 652, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1068, -1000, -1000, -1000, -1000, -40,
	122635, -1000, 478, -40, -1000, -1000, 651, -1000, 36815, 36815,
	36815, -1000, -1000, 2386, 51125, -1000, 2966, -1000, -34, -34,
	918, 60535, -1000, 57635, 918, 482, 789, 66392, -1000, 3095,
	-1000, -1000, 650, 223, -1000, -1000, -1000, -1000, 25925, 3094,
	122635, 122635, 122635, 96573, 96573, 96573, 122635, 3970, 3968, 3210,
	51125, -1000, -1000, 73341, 134780, 97151, -1000, -1000, 3676, 71604,
	72763, 3140, 134780, 3137, 134205, 3960, -1000, -1000, -1000, -1000,
	-1000, 3348, 3959, 3958, 3957, -1000, 122635, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 256, 3337, -1000, -1000, 100619, 256,
	3331, -1000, 256, 3328, -1000, 100041, -1000, -1000, 2351, 3326,
	-1000, -1000, 258, 3324, -1000, -1000, -1000, 257, 3301, -1000,
	-1000, 219, -139, 3297, -1000, -1000, -1000, -1000, -1000, -1000,
	142029, -1000, -1000, -1000, 133625, -1000, 3464, -1000, 122635, -1000,
	51125, -1000, -1000, 3671, 1767, 3523, 3593, -1000, -1000, -52,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2629, 2594, 1197,
	2448, -1000, 3388, 1443, 35018, 3429, -1000, -1000, -1000, -1000,
	-1000, 216, 25925, 2984, -1000, -1000, 122635, -1000, 122635, 2855,
	2855, -1000, -1000, -1000, 3762, 3756, 2855, 2855, 122635, 122635,
	-1000, -1000, -1000, -1000, -1000, -1000, 2624, 3295, 1637, -1000,
	2444, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2064, 3294, -1000, 2339, 3293, 2055, -1000, -1000, 2289, -1000,
	138331, 1419, -1000, -1000, -1000, -1000, 2208, 3292, -32, -1000,
	-1000, 2476, -1000, -1000, -1000, -1000, 139499, -1000, 3021, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2072, -1000,
	1382, 3291, -1000, 2894, 2894, 90775, 3313, 64644, 62880, 75655,
	-44, -1000, -1000, -1000, -1000, -151, -1000, 24743, 142029, -1000,
	-1000, -1000, -1000, 1797, 142029, 932, -1000, -1000, 3288, -1000,
	142029, 930, -1000, -1000, 3286, -1000, 2718, -1000, 3132, -1000,
	-1000, 2511, 2508, 1048, -1000, 3956, -1000, -1000, 3955, -1000,
	3951, 3950, 3948, -1000, 1706, 2050, 3945, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 90197, 2380, -1000, -1000, 88457,
	3130, -1000, 2505, 3592, -1000, 89617, 1073, -1000, 1007, 2504,
	-1000, 99463, 1033, 2503, -1000, 3943, 3565, 2799, 1007, 2502,
	-1000, -1000, -1000, -1000, -1000, 1036, -1000, 68708, -1000, 68708,
	-1000, 1698, -1000, 129571, -34, 96573, 3722, -1000, -78, -1000,
	-1000, -1000, 956, -1000, 61712, -1000, 61712, 102937, 79195, 986,
	3092, 70446, 141824, -1000, 1047, -1000, -1000, 142029, -1000, -1000,
	-1000, 2716, -1000, -182, 2879, -1000, 79195, 64056, 3091, 2687,
	-1000, 142029, -1000, -1000, -1000, -1000, 142029, -1000, -1000, -1000,
	79195, 88457, -1000, 110459, 89037, -1000, -1000, 1483, 2679, -1000,
	-1000, -1000, 79195, 1410, 79195, 79195, 79195, -1000, 109879, -1000,
	-1000, 2145, 1590, 3460, 2139, 96573, -1000, 1927, -1000, -1000,
	-1000, 3479, 3309, 122635, -1000, -1000, 3126, -1000, 75077, 98885,
	-1000, 98307, -1000, 97729, -1000, 96573, -1000, 96573, -1000, 3941,
	3940, 3939, -1000, -1000, 3938, -1000, 3937, 3467, -1000, 739,
	44009, 142029, 3465, -1000, 3935, 2116, 3125, 142029, -1000, 3306,
	1772, 1766, 122635, -1000, -1000, 122635, -1000, 122635, -1000, -1000,
	-1000, 1610, -1000, -1000, 2622, -1000, -1000, -1000, 1046, -1000,
	-1000, 96573, 96573, 96573, 96573, 1250, -1000, 43416, -1000, -1000,
	3182, 3934, 1810, -1000, 1869, -1000, 3090, 3509, -1000, 1481,
	1809, 215, 3836, -1000, -1000, 260, -1000, -1000, -52, -1000,
	128993, -1000, 2615, -1000, 122635, -1000, 2645, 3111, 3122, 1763,
	2424, 2725, -1000, 42823, 2681, 54683, 2443, 143, -1000, -1000,
	143, 143, 33832, -1000, -1000, 71604, 71604, 25925, 1348, 51125,
	51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125,
	51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125,
	51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125,
	51125, 51125, 51125, 51125, 51125, 2210, 51125, 1326, 51125, 51125,
	51125, 51125, 2436, -1000, -1000, 2039, 520, 2163, 649, -1000,
	-1000, -1000, 3728, 3728, 3728, 1478, 1478, 1478, 15993, 15993,
	553, 3933, 780, -1000, 51125, -1000, 107, 61115, 51125, 26515,
	-1000, 463, 6865, 2569, -1000, 462, 27138, -1000, -1000, -1000,
	28358, 581, 42200, 51125, 1054, 142029, -1000, -1000, 1406, 3737,
	24149, 3138, 2945, 647, 852, 849, 31430, 30807, 30184, 29561,
	842, 839, 51125, 51125, 51125, 51125, 51125, 51125, 51125, 51125,
	-1000, -1000, 3754, -1000, 3737, -1000, -1000, -1000, -1000, 3737,
	1342, 1334, 3737, -1000, 3737, 3737, 6158, 6158, 41607, 41014,
	40421, 55276, 39828, 51125, 28968, 39235, 38642, -1000, 122635, -40,
	3670, 51125, 284, -1000, 139293, -1000, 284, 284, 646, -79,
	142029, 2689, 2689, 59375, 2713, 2260, 2260, 2260, -1000, 918,
	18765, 918, 108145, 2268, 918, 918, 212, 243, 461, 57055,
	2966, 108145, 772, 643, -17, -18, -20, -1000, -1000, -27,
	-28, -1000, -1000, 96573, 642, 26515, 25925, 211, 2081, -80,
	2761, 2757, -1000, 2750, 2741, -1000, 2733, 2379, -1000, -1000,
	-1000, 1861, -88, 1324, 96573, 122635, 1387, 3931, -99, -1000,
	6211, -96, -1000, 1209, 210, 3737, -1000, -1000, -1000, -1000,
	-1000, 3928, 3927, -1000, 1064, 635, 634, 543, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 633, 632, 632, 632,
	-1000, 335, 631, 251, 630, 629, 628, -1000, -1000, -1000,
	-1000, -1000, 3089, 96573, 122635, 1376, 3926, 85565, -139, 97151,
	-74, -1000, -1000, 122635, -1000, -1000, -1000, 3923, -1000, 96573,
	-1000, -1000, 96573, 256, 3284, -1000, 96573, -1000, 96573, 244,
	3272, -1000, -1000, 122635, -1000, 96573, 96573, -1000, 122635, 122635,
	122635, 134780, 134780, 241, -1000, 96573, 876, -103, 1165, -52,
	-1000, -1000, -1000, -1000, 1827, -1000, 1913, -1000, -1000, -1000,
	-1000, -1000, -1000, 1549, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 763, -1000, -1000, -1000, -1000, 3749, 3743, -41,
	-1000, -1000, 25925, -1000, 1872, -1000, -1000, -1000, -1000, 122635,
	122635, -1000, -1000, 122635, 122635, -1000, -1000, -53, 1783, 544,
	1323, -1000, 81507, 2421, 3463, 3922, 2794, 3450, 1688, -1000,
	1605, 627, -1000, 3546, 86721, 3635, 3644, 1384, -1000, 3088,
	-1000, -1000, -1000, 951, 1799, 1790, 1320, 1319, 86721, 2339,
	-1000, 71604, -1000, 2754, 3536, 1462, 1414, 1462, 1462, 1287,
	-1000, 86721, 1789, 1317, 1314, 1313, -1000, -1000, 1988, 1983,
	-1000, -1000, 109301, -1000, 1310, 1309, 3688, 2820, 2235, 800,
	1961, -1000, 1392, 1308, 3087, -1000, -1000, -54, 3632, 3643,
	1384, -1000, 3086, 1306, -1000, -1000, -1000, 3533, 96573, 25925,
	1618, 1617, 1604, 1781, 1305, -42, -1000, 3622, 3485, -1000,
	88457, 88457, 3701, 79195, -1000, 2531, 1303, 1298, -1000, 1074,
	9138, 3407, -1000, 134780, 1074, 1074, 1999, 3265, 2818, 1679,
	-1000, 2869, 848, 2861, -1000, -1000, -1000, 848, -44, 75655,
	122635, 207, -1000, 107, 51125, 51125, 107, 51125, 107, -1000,
	3582, 3258, 3256, 3921, -1000, -1000, -1000, -1000, -1000, 3920,
	2000, 2653, -1000, -1000, 626, 2500, 3084, 122635, 2767, -46,
	96573, -1000, 74499, 3254, 134780, 2339, 2499, -1000, -1000, 87879,
	-1000, 3250, 478, 2495, -1000, 680, 3917, 3249, -1000, 128415,
	-1000, 3464, 1363, 3247, 1111, 745, 3667, -1000, 745, 69286,
	-1000, 122635, -1000, -34, 6013, 80351, -104, -105, 460, -1000,
	108723, 122635, 122635, 3414, 2010, 2005, -1000, 998, 62880, -1000,
	62880, -106, -1000, -182, 2857, 1564, 62880, -1000, 986, 986,
	848, -1000, 848, -1000, 96573, 3118, -1000, -1000, 79195, 986,
	986, 986, -1000, -1000, -1000, -1000, 3915, 3913, 3910, 3905,
	-1000, -1000, 1006, 96573, 122635, 96573, -1000, -1000, 1648, -1000,
	203, -1000, 134780, -1000, 134780, 122635, 96573, -1000, 1006, 122635,
	1006, 122635, 1006, 122635, 1006, 1006, -1000, -1000, -1000, -1000,
	-1000, 107, -1000, -1000, 142029, -1000, 51125, -1000, -1000, 1599,
	3904, 1709, -1000, 3116, -1000, 3113, -1000, 11, -1000, -1000,
	1911, -1000, 3818, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3899, 142029, -1000, 1965, -1000, -1000, -1000, -1000, 96573,
	96573, 96573, 96573, 122635, 3406, -1000, 122635, 3401, 96573, -1000,
	3828, -1000, -1000, 86721, -1000, 2645, 3111, -1000, -1000, -1000,
	-1000, -1000, -1000, 1498, 2338, -1000, 2702, -1000, 1655, -1000,
	-1000, -1000, 142029, 55869, -1000, -1000, 142029, 1873, -1000, 54090,
	53497, -1000, -1000, 1834, 96573, 2773, -1000, 2773, -102, -1000,
	139088, 2699, 96573, -1000, -1000, -1000, -1000, -1000, 950, 1000,
	1000, 1380, 1380, 1380, 1380, 3669, 6983, 385, 4843, 11154,
	11154, 424, 424, 424, 424, 424, 11154, 1505, 1478, 1478,
	1505, 1505, 1505, 1505, 1505, 1478, 1478, 1478, 11154, 11154,
	11154, 1478, 15993, 8809, 13316, 51125, 51125, 1297, 2037, 520,
	12514, 51125, 7543, 7543, 7543, 7543, -1000, 2206, -1000, -1000,
	-1000, -1000, 3083, 623, 55276, 55276, -1000, -1000, -1000, -1000,
	27748, 51125, -1000, -1000, -1000, -1000, 38019, -1000, -1000, 138126,
	-333, 457, -1000, 202, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 455, -101, 66,
	-1000, 51125, 51125, 51125, 447, -1000, 201, 51125, 122635, -1000,
	18045, 762, -112, -1000, -113, 1494, -1000, 51125, -1000, -1000,
	1295, -1000, 1294, 1292, 1291, -1000, 622, 445, -1000, 200,
	-1000, 2258, 611, 600, 51125, -1000, -1000, -1000, -1000, -1000,
	137921, -1000, -1000, 137716, -1000, -1000, 137511, -1000, -1000, 137306,
	-1000, -1000, -1000, -1000, -1000, 141619, 17422, 16930, 15699, 5800,
	13271, 12544, -115, 441, -116, 440, 948, 947, 436, 435,
	434, -122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -123, 432, -1000, 3079, -101, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 425, -1000, 423,
	-1000, 141414, -101, 421, 6656, -1000, 55276, 55276, 55276, 55276,
	-1000, 404, -1000, 138636, -1000, 141209, 37426, 37426, 37426, 392,
	141004, 51125, -101, -125, -1000, -130, -1000, -1000, 530, -132,
	1038, 36815, 58215, 25925, -1000, 1038, 1038, 51125, -1000, 51125,
	2711, -1000, -1000, -1000, -1000, 2709, 2150, 2689, 59375, -1000,
	-1000, -1000, -1000, 108145, -1000, 3722, 3629, -1000, 108145, -1000,
	-1000, 122635, 478, -1000, 108145, 108145, 25925, 918, -1000, 918,
	108145, 815, -1000, -1000, -1000, -1000, -1000, 386, 67552, 66,
	198, 25925, 1007, -1000, -1000, 2801, 2801, 2801, 2801, 2801,
	96573, -1000, -1000, 134780, 1289, -47, -111, 2846, -1000, 3697,
	-1000, 2129, -1000, 71604, -1000, 778, 1217, 25925, -1000, -1000,
	-1000, 599, -1000, 3737, 3737, -1000, 3737, 134780, 3072, 266,
	2833, -1000, 2377, -45, 247, 134780, 3896, -1000, -1000, 256,
	-1000, 96573, 256, 256, -1000, 96573, 96573, 2351, -1000, 258,
	-1000, 257, -1000, -1000, -139, -1000, 1044, 35018, -1000, 1827,
	-1000, -1000, 1606, -1000, 2025, -1000, 1204, -1000, -1000, 35018,
	-1000, 3420, -1000, 1792, -1000, -1000, -1000, -1000, 4946, 122635,
	122635, 96573, -1000, 106411, 122635, -1000, 2151, 134780, -1000, 2493,
	127837, 2474, 127259, 71604, -1000, -1000, 598, 981, 2696, 2684,
	1109, 122635, 122635, 2671, 126681, 126103, -1000, 3895, 122635, 2109,
	51125, 106411, 3532, 2213, 2577, 107, 107, -1000, 107, -1000,
	-1000, 597, 1267, 96573, 96573, 122635, 134780, 96573, 1964, -1000,
	-1000, -1000, -1000, -1000, 87299, -1000, -1000, 1462, -1000, -1000,
	-1000, 1462, 2339, 1864, 122635, 134780, 96573, 134780, 125525, 124947,
	-1000, -1000, 1775, 122635, -1000, -1000, -1000, -1000, 1546, -1000,
	800, 1286, 3068, 51125, 51125, 2179, 107, 107, -1000, 107,
	593, 25925, 1981, -1000, 3131, 122635, 3817, 124369, 3816, 122635,
	122635, 122635, 134780, 3483, 122635, -1000, -1000, -1000, -1000, 3701,
	-1000, 891, 122635, 134780, -1000, 123791, 9138, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2157, 76837, 1117, 122635, 1382, -1000,
	-1000, 1770, 1284, 1283, 86721, 2156, 1768, 1891, 134780, 62880,
	1001, 62880, 2806, -1000, -1000, 23555, -1000, 142029, 142029, -1000,
	142029, -1000, 74499, 79195, 122635, -1000, -1000, 1072, 122635, 80929,
	979, 3245, 68130, -151, 986, 79195, 96573, -46, 2767, 122635,
	-1000, -1000, 2339, 3243, 478, 2492, -1000, 134780, 3666, 3242,
	592, 3893, 3892, -1000, 96573, 2371, 2491, -1000, -1000, 123213,
	3359, 800, 122635, 1038, 59375, 1991, -1000, 65812, 1089, 122635,
	1901, 170, -1000, -1000, -1000, -9, 122635, -1000, 788, -1000,
	-1000, 6013, 6013, 986, -239, 591, -1000, 888, 887, 63468,
	-140, -1000, 196, 582, 881, 880, -1000, 3615, -1000, -182,
	-1000, 79195, 998, 62880, 3067, -182, 2822, 3065, -1000, -1000,
	1037, -1000, 1477, 986, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -35, 1890, 122635, -139, -139,
	-63, -47, -1000, 1006, -1000, 1006, -1000, 1006, -1000, -1000,
	-1000, 142029, -1000, -1000, -1000, 1708, 1707, 122635, -1000, -1000,
	122635, -1000, -1000, 25925, 122635, 96573, 25925, 96573, 3109, 3107,
	-1000, -1000, -1000, 122635, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1131, -1000, 1873, 2337, -1000, 581, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2585, -1000, -50,
	33832, 933, -1000, -1000, 96573, -36, 51125, 51125, 11906, 11540,
	51125, 55276, 55276, -1000, 51125, 10202, -1000, -1000, -1000, -1000,
	-1000, 3061, 580, 51125, 71604, 7151, 6589, -1000, 384, 11644,
	1505, -1000, 51125, -1000, 625, -1000, 372, 36222, -1000, 139909,
	-62, -150, -1000, 19373, -101, -152, -1000, -1000, 776, -1000,
	3208, -1000, 51125, 140729, 2551, 2126, 1893, 1718, 3737, 3812,
	22961, -1000, 69866, 1052, 2272, 137101, -1000, -1000, -1000, -1000,
	71604, 71604, 51125, 51125, -1000, 51125, 51125, 51125, -1000, -1000,
	-1000, 3737, 943, -1000, -1000, -1000, 943, -1000, -1000, 1462,
	-1000, 1462, -1000, 51125, -1000, -1000, 3052, 51125, -1000, 71604,
	71604, 55276, 55276, 55276, 55276, 55276, 55276, 55276, 55276, 55276,
	55276, 55276, 55276, 55276, 55276, 55276, 55276, 55276, 55276, 55276,
	55276, 2652, 55276, 3721, 3721, 3721, 2144, -1000, 3106, 3052,
	51125, 51125, 71604, 370, 368, 367, -1000, 51125, -101, -1000,
	-1000, 5547, 579, -1000, 2573, -1000, 2943, -1000, 51125, -1000,
	-164, -1000, 2966, -1000, -1000, 2943, 2943, -153, 142029, 59375,
	59375, -1000, 578, 51125, 2691, -1000, -1000, 761, -324, -1000,
	879, -1000, -1000, -1000, -1000, -1000, -1000, 877, -1000, 478,
	-1000, -1000, -1000, 195, 108145, 108145, 759, -1000, -155, -1000,
	-1000, -158, -1000, 3663, 366, 25925, -1000, 1038, 3099, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2727, -279, 134780, 134780,
	1753, 2320, 3810, -1000, 3741, 775, 757, 194, 3737, 362,
	359, 353, -139, 134780, 134780, 1750, 72185, 134780, -1000, -1000,
	-1000, 256, -1000, -1000, -1000, 244, -1000, -1000, -1000, -1000,
	2791, -1000, -52, -1000, -1000, -1000, 51125, -1000, 980, -1000,
	-1000, 3462, 577, 1282, 1273, -1000, -166, -1000, 869, -1000,
	-1000, -1000, -1000, 2978, -1000, 3232, -1000, 2490, -1000, 1098,
	2489, 2002, -1000, 51125, 571, 2798, 570, 569, 3889, 2147,
	3888, 1110, 3222, 2351, 3221, 2351, -1000, -1000, -1000, 958,
	-1000, 142029, -171, -1000, 2213, -1000, 563, 562, -1000, -53,
	1782, 506, 1272, 1035, -1000, -1000, 51125, 51125, 107567, -1000,
	486, 3456, -37, -1000, -1000, -1000, 1747, 1269, 1268, -1000,
	-1000, -1000, -1000, 2339, 1743, 1262, 1261, -1000, -1000, -1000,
	-1000, -1000, 2485, -1000, -1000, 3219, 1026, -1000, 3165, 3164,
	938, 122635, 51125, 51125, 140524, 140319, -1000, 1025, -1000, -1000,
	51125, -1000, -54, 1259, 3588, 2483, 96573, -1000, 2351, 3200,
	1256, -1000, 1235, -1000, -1000, -1000, 3603, 3596, 1215, 3701,
	62880, -1000, -1000, -1000, 79195, -1000, -1000, 76249, -1000, -1000,
	1074, 122635, 134780, 96573, 1830, -1000, -1000, 85565, 86143, 122635,
	2818, -139, 848, -1000, 2686, 848, 1001, 3048, -1000, 2765,
	-1000, 1023, 96573, 3886, 351, -173, -55, 71604, -1000, -1000,
	-1000, -1000, 2474, 96573, 122635, 1370, 2797, 122635, 122635, 3662,
	-1000, 2417, 621, 96573, 940, -1000, 3722, -1000, -1000, -1000,
	1009, -1000, 3590, 96573, 3661, 3199, 1007, 107, 96573, 3766,
	-1000, -1000, 3659, 96573, 3198, 2368, 2480, 2638, 800, 79773,
	1007, 2271, -67, -1000, 1901, 35611, 3454, -174, -1000, -1000,
	-1000, 1038, 69286, 59375, 51125, 3884, -176, -1000, -1000, -1000,
	-1000, -1000, 105255, 105255, 79195, 79195, 79195, 986, 122635, 122635,
	3881, 79195, 79195, 79195, -57, 561, -1000, 865, 862, 846,
	-1000, -1000, -1000, -1000, -1000, -1000, 840, 838, 835, 998,
	-1000, -1000, -182, 62880, 998, 62880, 107, -1000, 2305, 96573,
	-1000, 22367, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1006,
	-151, -1000, -1000, -1000, 2182, 2428, 2182, 1881, 1880, -1000,
	-1000, 2336, -1000, -1000, -1000, -1000, 2738, 3478, 25925, 3554,
	7543, 51125, 51125, 8934, 6236, 760, 7543, 51125, 51125, 71604,
	10250, -179, 51125, 51125, -1000, 51125, 744, 142029, -1000, 3804,
	51125, 348, 344, -1000, -1000, -1000, 3726, -1000, -1000, -1000,
	142029, 51125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 341,
	-1000, 114, -1000, -1000, -1000, 131305, -1000, 51125, 339, 3526,
	-1000, 338, 336, 10879, 303, 136896, 136691, 136486, 333, -1000,
	-1000, 332, 328, 142029, 3106, 142029, -1000, -1000, 1106, 1106,
	1408, 1408, 1408, 1408, 3721, 1139, 1200, 1168, 407, 407,
	407, 1420, 2144, 2144, 407, 407, 407, 2144, 3046, 2640,
	560, 8013, -1000, -1000, 142029, 142029, 327, -1000, -1000, -1000,
	-101, 314, 5547, -1000, 2938, 3520, 142029, -1000, 59375, 2938,
	2938, -1000, -1000, 2150, 122635, 142029, 59375, -1000, 3629, -1000,
	20579, 19979, -1000, 25925, -1000, -1000, -1000, -1000, 3722, -1000,
	67552, -1000, 559, -1000, 108, -1000, 3099, -1000, 832, -1000,
	-1000, 79195, 79195, 2801, -1000, 2949, -279, -161, 122635, -1000,
	-1000, 736, 3878, 740, 25925, 312, -1000, -1000, -1000, -139,
	-139, 122635, 3039, 96573, 122635, 1367, -139, -1000, -1000, -1000,
	3413, 142029, 3105, 2924, 2923, 122635, 122635, -1000, 106411, 35018,
	1557, 106989, 122635, 3195, -1000, 3191, -1000, 1109, 5387, 136281,
	59955, -1000, 59955, 122635, -1000, -1000, -1000, -1000, 2015, 1745,
	3876, 1148, -1000, 3482, 122635, -1000, 122635, -1000, -1000, -1000,
	106411, -1000, 122635, 122635, 96573, 122635, -1000, 134780, 3175, -181,
	142029, -59, -1000, 826, -1000, 1407, -1000, 21773, 122635, 134780,
	96573, 122635, 134780, 96573, 3189, 122635, 2200, -1000, -1000, 3163,
	-1000, 142029, 140114, 107, 51125, 3172, -184, 25925, -1000, 3803,
	3801, 3187, 3492, -1000, 122635, 3799, 122635, 96573, 3412, 1002,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1734, 1234, 1208,
	2366, 2359, 2316, -63, 2156, 1001, -64, 556, -1000, 825,
	-1000, -1000, 823, 822, 1001, -1000, 79195, 62880, 3875, 478,
	-1000, 2790, -1000, 102357, 80929, 2318, -1000, -1000, 555, 122635,
	122635, 554, -1000, 107, -1000, 3874, 106411, 551, -1000, 2297,
	-1000, 731, -1000, 2560, 134780, 2339, 107, 96573, -1000, 997,
	478, 311, -65, -1000, 3234, 1104, 25925, 96573, 3186, 2643,
	800, 79773, -1000, 1363, 2725, -1000, -66, -1000, 493, 107,
	2271, -1000, -67, 142029, -1000, 821, -1000, -190, -1000, -1000,
	302, -1000, 3411, -1000, -1000, -193, -1000, -1000, 4020, 4020,
	79195, 62880, 79195, 79195, 79195, 62880, -1000, 998, 848, -1000,
	-182, -1000, 2468, -1000, -1000, -1000, -1000, -1000, 25925, 1732,
	-1000, 549, 548, -1000, -1000, -1000, -1000, 3478, 7543, 7543,
	51125, 51125, 51125, 7543, 10250, -200, -1000, 7543, 7543, -101,
	-1000, -1000, 139909, -1000, -1000, -1000, 142029, -1000, 21179, 2194,
	-1000, 136076, -1000, 33832, -1000, -1000, 51125, 51125, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55276, 3034, 547, 71604,
	-1000, -1000, 301, 1050, 51125, 52904, 2966, 1050, 1050, -1000,
	-201, -1000, -1000, -1000, 3722, -1000, 3722, 108, -1000, -1000,
	3872, 25925, -1000, 79195, -1000, -1000, -1000, 2314, -1000, -1000,
	3173, -143, 738, -1000, 3871, -1000, -1000, 158, 134780, 3033,
	140, 2817, -1000, 107, -1000, -1000, -1000, -1000, -1000, -1000,
	2815, 3658, -1000, 1957, -1000, 122635, 122635, -1000, 122635, -1000,
	25925, 122635, 2948, 1293, -1000, 981, 2669, 541, 55276, 1129,
	96573, 878, 2919, 2917, -1000, 3685, 3519, 2892, -212, -1000,
	122635, 51125, 122635, -213, -215, 2459, -1000, -1000, 1127, 1288,
	51125, 1126, -1000, -1000, -1000, 71604, 532, 2351, 2351, -1000,
	-218, -220, -1000, -1000, -1000, 51125, 1203, 122635, 34425, -1000,
	3869, 3456, -1000, -1000, -1000, -1000, -1000, -1000, 122635, -1000,
	122635, -1000, 51125, -1000, 139704, 51125, 1202, -1000, -1000, -1000,
	3798, 2351, 25925, 2351, -1000, 2351, 3492, 1147, 2352, 122635,
	134780, 96573, 2254, 2254, 3024, -1000, -1000, -1000, 2396, 2396,
	79195, 62880, 62880, -1000, -69, 1001, -1000, 3657, 2186, 3868,
	-1000, -1000, -1000, -1000, 2668, -1000, -1000, -1000, 122635, 2661,
	2886, 59955, 531, 527, 122635, 989, -1000, -221, 80929, 979,
	968, -1000, -72, 526, -1000, 810, -1000, -1000, -1000, -1000,
	478, -1000, 2785, 3654, -1000, 3797, 524, 523, 122635, 2356,
	522, 25925, 3452, 800, 79773, -1000, 3359, 1901, -1000, 2467,
	122635, 3449, -1000, 2725, 520, -1000, 986, 519, 986, -1000,
	-223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 998,
	-76, -1000, 841, 587, -1000, -1000, 96573, 96573, 51125, 51125,
	-1000, 7543, 7543, 7543, -1000, 300, -1000, -1000, 2271, 3515,
	-1000, -77, 135871, 135666, 673, 55276, 71604, -228, -1000, -1000,
	122635, 142029, -85, -1000, 142029, 518, 517, 459, -1000, -1000,
	-1000, 728, 487, -1000, -1000, -1000, -1000, 134780, 3867, -1000,
	134780, -139, 134780, 134780, 1731, -1000, 105833, 122635, -1000, -1000,
	2002, 2393, -1000, -1000, -1000, 122635, 2479, -1000, -1000, -1000,
	1005, 51125, 8013, 55276, 516, 51125, -1000, 515, 510, 3652,
	3393, -1000, 2784, 2997, 2021, 59955, -1000, 3478, -1000, 135391,
	-1000, 1102, 1994, -1000, -1000, -1000, -1000, 142029, 55276, 3492,
	59955, -1000, -1000, 507, 505, 142029, 502, 809, 3029, -1000,
	-1000, -1000, -1000, -1000, 142029, 107, 142029, 497, 3588, -1000,
	-1000, -1000, -1000, 2351, 96573, 807, -1000, -1000, -1000, 1177,
	-1000, -1000, -1000, -1000, 3866, 3861, 3025, 85565, -1000, -229,
	-1000, -1000, -1000, 2006, 107, 979, -1000, -1000, 2318, 494,
	-1000, 984, 2683, 2683, -236, 59955, 59955, -237, 2342, 2739,
	-1000, 279, 3651, 968, -1000, 3719, -1000, 3397, 3397, 51125,
	3650, 3410, -1000, 107, -1000, 3766, 59955, -1000, 96573, 59955,
	2346, 2107, 2616, 79773, -1000, 2638, -1000, -1000, -238, 122635,
	1901, -1000, -1000, 79195, -1000, -1000, -1000, 2468, -1000, 122635,
	-1000, 122635, -1000, -1000, -243, -244, -1000, 2155, 51125, 33832,
	-1000, -1000, 673, -246, -1000, -95, -1000, 3649, 52904, 3860,
	3854, 3851, -1000, -1000, -279, -1000, -139, -139, -139, 122635,
	-1000, 1944, -1000, 2474, -1000, -1000, 3185, -1000, 2936, 491,
	135361, 8013, 2576, 122635, 18092, 2339, 2339, -1000, 3646, 2996,
	-1000, -1000, 2179, 489, -1000, -1000, -1000, -1000, 933, 122635,
	984, 2931, 96573, 8013, 1105, -249, 2182, 2182, 51125, 33239,
	2199, -1000, 51125, -1000, -1000, 3492, 62880, 134780, -1000, -1000,
	134780, 2344, -1000, 2968, 3731, -1000, 2342, 122635, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1102, -251, -252, -1000, -1000, 3472, -1000, 3409, 2790, 107,
	-1000, -1000, -1000, -257, 142029, 107, 3847, 997, 277, -258,
	1104, -260, 96573, 2029, -1000, 800, -1000, 2643, 1038, 3371,
	-1000, -265, -1000, -266, -268, -1000, -1000, 275, 52311, 52311,
	52311, -101, -102, -1000, 122635, 479, -1000, -1000, -1000, -1000,
	-1000, 113, -1000, -1000, 3160, 912, -1000, 855, 1935, 274,
	1128, 273, 268, -1000, -1000, -1000, 2892, -1000, 122635, -1000,
	-1000, -1000, 912, 478, -1000, 51125, 1102, -273, -1000, 1088,
	-274, -1000, 1083, -276, -1000, 3008, -1000, -282, 2351, -1000,
	-279, 241, 2254, 992, 3577, -1000, -1000, -1000, 2604, -283,
	-1000, -1000, 2021, 1102, 2179, 2414, -1000, 2186, 989, -1000,
	-1000, -1000, -1000, -1000, 1102, 477, 2021, 475, 1555, 800,
	-1000, -1000, 1462, 3452, 3368, 1338, 986, -1000, -1000, -1000,
	3207, -1000, 56462, 2324, 1879, 138606, 3207, 3207, -1000, -1000,
	134780, 122635, 984, 3552, -1000, 902, 896, 1547, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1038, -284, -1000, 2576,
	142029, 984, -1000, 2182, 2812, -1000, 2182, 2989, -1000, 2197,
	-1000, -1000, -1000, -1000, 2983, -1000, 1806, 3715, -1000, -1000,
	984, 122635, 2179, 2021, 984, 1856, 1835, 3844, 979, 2342,
	2021, 59955, 2179, 59955, 2148, -1000, 122635, -1000, 2107, 1336,
	-1000, 1670, -1000, -1000, 1852, 3674, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -139, -1000, -1000, 802, -1000, 3383, -1000,
	1125, 2375, 2375, -1000, -1000, 855, -1000, -1000, 474, -1000,
	472, -1000, 134780, 2281, -1000, -1000, -1000, -1000, 984, 2179,
	1038, -1000, 3843, -1000, 2342, -1000, 2179, -292, 984, -294,
	2215, -1000, -1000, -151, 2029, -1000, 1660, 69286, 1877, -1000,
	-1000, 2265, 51718, 51125, -1000, 3703, -1000, -1000, 2675, -1000,
	2892, 51125, 51125, 241, 66972, 1038, 984, -1000, -1000, 2604,
	984, 1102, 1038, 2021, -1000, 800, 1555, 69286, -285, -1000,
	-1000, -1000, 142029, -1000, -1000, -1000, -1000, -295, -297, -1000,
	-239, 105255, -1000, 1038, -1000, 1038, 2021, -1000, 2179, 134780,
	2148, -285, -1000, 2179, 1170, -311, -1000, -1000, 2179, 984,
	-1000, -1000, -1000, -1000, -1000, 470, -1000, 984, 1038, 51125,
	1038, -1000, -314, -1000, 2179, -1000,
}

var sqlPgo = [...]int{
	0, 4763, 4761, 4758, 4757, 4756, 4749, 4746, 4745, 4743,
	4742, 4739, 4738, 4736, 4735, 148, 4734, 4732, 4731, 4729,
	4725, 4723, 4721, 4720, 4718, 4715, 4713, 4712, 4711, 4710,
	4707, 4706, 4705, 4704, 4701, 4699, 4696, 4695, 4694, 4693,
	4690, 4689, 4686, 4685, 4684, 4683, 4680, 4679, 4677, 4676,
	4675, 4674, 4673, 4671, 4667, 4666, 4665, 4664, 4662, 4658,
	4653, 4650, 4649, 4644, 4643, 4641, 4639, 4638, 4635, 60,
	4620, 4617, 4616, 4615, 4612, 4606, 4604, 4603, 4601, 4599,
	4597, 4595, 4594, 4591, 4589, 4588, 4584, 4583, 4579, 4578,
	71, 4576, 288, 4571, 4564, 4563, 4562, 4559, 4558, 4557,
	4556, 4555, 4554, 4553, 4552, 285, 4548, 155, 173, 4546,
	4545, 4032, 4541, 4539, 284, 4534, 4531, 4527, 4525, 4522,
	299, 4520, 4518, 4517, 4514, 4505, 4504, 4503, 4500, 4499,
	4498, 4496, 4495, 127, 145, 4494, 4493, 1562, 4492, 4488,
	4487, 4486, 4485, 4480, 4478, 4477, 4476, 4473, 4469, 261,
	185, 4468, 283, 4467, 4465, 4461, 4460, 4455, 4454, 4450,
	4446, 4444, 4438, 4437, 4432, 4431, 4429, 4428, 4427, 4425,
	4423, 4422, 4420, 4419, 4418, 4417, 4416, 4415, 4414, 4413,
	4409, 4408, 4407, 4406, 4400, 4397, 4396, 4395, 4394, 4392,
	4386, 4385, 4383, 265, 233, 142, 4381, 4373, 281, 279,
	4371, 4370, 4368, 4366, 4365, 4364, 4363, 4362, 4356, 4355,
	4349, 4348, 4347, 4345, 136, 17, 49, 4344, 4342, 95,
	89, 87, 108, 102, 97, 4338, 125, 4334, 137, 120,
	4333, 116, 106, 18, 21, 258, 252, 12628, 250, 4332,
	4331, 4329, 253, 209, 4328, 257, 4324, 4316, 4312, 4311,
	4307, 4306, 79, 52, 220, 4305, 4303, 151, 187, 196,
	195, 190, 189, 78, 58, 103, 94, 66, 45, 1,
	111, 227, 16, 7, 269, 4302, 268, 6, 152, 10,
	33, 4301, 4299, 4298, 4296, 3594, 118, 4295, 278, 254,
	186, 4294, 4285, 4284, 867, 4283, 4282, 54, 230, 122,
	119, 110, 131, 138, 4281, 153, 179, 37, 4277, 177,
	70, 4276, 4273, 101, 88, 8374, 13051, 4270, 4269, 124,
	75, 121, 277, 169, 167, 210, 112, 178, 184, 107,
	217, 215, 192, 291, 4268, 264, 4260, 3636, 92, 200,
	165, 5909, 4259, 4257, 4256, 81, 4254, 113, 4253, 4251,
	72, 20, 3, 2, 150, 43, 48, 12, 4249, 22,
	133, 50, 24, 4248, 29, 4246, 4245, 4242, 4239, 56,
	4238, 53, 180, 4237, 4235, 293, 4234, 99, 61, 31,
	4230, 25, 226, 4226, 238, 139, 4225, 4224, 267, 214,
	206, 4223, 181, 251, 4222, 4221, 4220, 4218, 4217, 4216,
	140, 8, 141, 4214, 4213, 160, 4210, 55, 243, 207,
	4209, 64, 4206, 4205, 193, 59, 176, 290, 135, 236,
	130, 237, 223, 245, 4204, 4203, 4202, 229, 4201, 4200,
	231, 163, 4198, 4197, 256, 296, 93, 51, 85, 242,
	86, 205, 171, 4196, 213, 4194, 4192, 295, 198, 234,
	41, 19, 28, 98, 109, 4189, 5, 241, 168, 240,
	132, 4185, 8018, 2489, 1765, 4184, 4182, 154, 134, 83,
	143, 164, 275, 100, 4180, 4179, 310, 4176, 4175, 4174,
	4173, 199, 4171, 4168, 4167, 162, 191, 208, 4166, 96,
	73, 57, 26, 174, 276, 286, 128, 235, 175, 266,
	4165, 4164, 4163, 202, 4157, 74, 336, 183, 212, 263,
	68, 4155, 166, 4152, 161, 1195, 76, 170, 4150, 248,
	4143, 4135, 4132, 4131, 4126, 4125, 4123, 973, 249, 4121,
	4120, 4117, 38, 204, 4116, 271, 182, 197, 117, 62,
	4114, 91, 2725, 4113, 368, 221, 65, 4, 4112, 34,
	4111, 3030, 63, 4110, 0, 14026, 10129, 12401, 13466, 4109,
	4902, 4108, 4101, 4100, 224, 82, 4098, 4096, 4090, 129,
	4088, 84, 4087, 4086, 80, 4085, 27, 13, 15, 32,
	30, 830, 691, 4083, 4082, 36, 144, 158, 4081, 289,
	239, 4079, 4078, 4077, 4076, 104, 4075, 44, 4074, 42,
	4073, 4072, 46, 11, 35, 4070, 4069, 157, 4068, 126,
	216, 4066, 172, 4064, 90, 147, 4063, 4062, 4061, 69,
	67, 270, 222, 225, 123, 4059, 294, 4058, 211, 4057,
	4056, 23, 4053, 4052, 259, 115, 114, 47, 260, 149,
	39, 194, 218, 4051, 4050, 188, 4049, 4048, 4047, 292,
	4046, 3591, 273, 4045, 40, 4044, 4041, 4039, 14, 4038,
	4037, 219, 3339, 4036, 4035, 9, 4034, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	13, 13, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 53, 53, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 39, 41, 40, 34, 34, 35,
	35, 36, 37, 37, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 42, 42, 22,
	22, 44, 44, 23, 23, 45, 45, 621, 621, 621,
	622, 622, 623, 623, 623, 26, 47, 19, 20, 20,
	20, 20, 624, 624, 624, 624, 38, 27, 48, 31,
	31, 31, 31, 31, 217, 217, 217, 217, 25, 25,
	43, 43, 260, 260, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 617, 617, 262, 262, 261, 249,
	249, 250, 250, 251, 251, 625, 625, 263, 263, 263,
	264, 264, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 516, 516, 516, 547, 547, 547, 547, 549,
	549, 644, 644, 645, 645, 645, 645, 645, 136, 136,
	413, 413, 413, 57, 57, 57, 57, 57, 612, 612,
	219, 219, 219, 221, 221, 220, 220, 220, 220, 220,
	81, 81, 631, 631, 630, 629, 629, 629, 632, 632,
	632, 218, 218, 218, 132, 132, 132, 132, 132, 132,
	132, 132, 133, 133, 134, 134, 222, 222, 222, 224,
	224, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 228, 18, 18, 18, 115, 115, 115,
	115, 115, 115, 115, 110, 110, 551, 551, 552, 552,
	213, 213, 214, 214, 214, 214, 215, 215, 216, 216,
	216, 72, 72, 225, 225, 227, 227, 226, 226, 226,
	226, 226, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 61, 61, 61, 61,
	61, 61, 62, 62, 62, 62, 62, 62, 63, 63,
	70, 70, 70, 70, 70, 70, 70, 70, 195, 195,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 78, 78, 78, 78, 78, 646, 646,
	646, 646, 646, 646, 646, 646, 646, 646, 646, 646,
	646, 646, 646, 646, 646, 646, 646, 647, 647, 648,
	648, 649, 649, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 87,
	87, 373, 373, 336, 336, 88, 88, 88, 89, 89,
	90, 90, 74, 74, 610, 610, 389, 389, 507, 507,
	75, 618, 618, 618, 620, 620, 619, 619, 92, 92,
	412, 412, 93, 93, 93, 93, 93, 93, 94, 94,
	94, 94, 94, 94, 94, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 102,
	102, 102, 102, 102, 103, 103, 103, 100, 100, 100,
	97, 97, 97, 96, 96, 96, 101, 101, 101, 609,
	325, 325, 99, 99, 99, 98, 98, 98, 390, 390,
	104, 104, 104, 104, 337, 105, 105, 105, 105, 105,
	105, 105, 105, 108, 108, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 509, 509,
	4, 4, 255, 255, 254, 254, 5, 5, 5, 258,
	258, 257, 256, 106, 106, 106, 474, 474, 111, 111,
	111, 428, 428, 112, 112, 112, 112, 112, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 614,
	614, 382, 382, 288, 288, 288, 288, 124, 124, 124,
	124, 125, 125, 125, 125, 126, 126, 200, 200, 142,
	142, 142, 142, 141, 141, 141, 141, 141, 141, 141,
	141, 64, 64, 64, 65, 65, 66, 66, 67, 67,
	68, 68, 69, 69, 69, 69, 69, 145, 145, 641,
	641, 147, 144, 144, 144, 144, 144, 143, 143, 146,
	146, 146, 146, 148, 150, 150, 150, 150, 150, 149,
	149, 149, 149, 149, 151, 151, 541, 541, 398, 398,
	539, 539, 561, 561, 540, 540, 343, 343, 343, 343,
	343, 344, 344, 344, 550, 550, 550, 550, 550, 550,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 201, 201, 201, 202, 202,
	206, 206, 207, 207, 207, 208, 208, 208, 205, 205,
	205, 203, 203, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 211, 211, 209, 209, 210, 210, 652,
	652, 651, 651, 212, 212, 212, 212, 212, 177, 177,
	177, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 399, 399, 180, 180, 180, 164, 164, 153,
	153, 153, 153, 153, 153, 153, 158, 158, 158, 158,
	158, 158, 158, 158, 154, 154, 166, 166, 166, 166,
	166, 159, 159, 160, 160, 160, 161, 161, 161, 161,
	188, 188, 163, 163, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 155, 155, 155, 155, 168, 168, 168,
	168, 435, 435, 435, 193, 193, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 191, 191, 191, 191, 191, 191, 633, 633,
	634, 634, 634, 184, 184, 184, 184, 184, 184, 488,
	488, 178, 178, 178, 178, 183, 183, 183, 183, 186,
	186, 186, 186, 418, 418, 175, 175, 175, 176, 176,
	176, 181, 181, 182, 374, 374, 179, 179, 185, 185,
	185, 185, 187, 187, 187, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 157, 157, 157, 157, 189, 189,
	174, 174, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 653, 653, 170, 170, 170, 169, 169,
	169, 169, 172, 172, 173, 173, 173, 173, 173, 173,
	171, 162, 192, 611, 611, 607, 607, 607, 607, 607,
	607, 607, 607, 608, 608, 608, 608, 613, 613, 116,
	116, 116, 116, 116, 116, 116, 127, 127, 127, 127,
	127, 127, 127, 130, 130, 117, 117, 117, 117, 117,
	117, 117, 120, 120, 118, 118, 118, 118, 119, 119,
	82, 82, 82, 82, 82, 17, 17, 17, 83, 83,
	279, 279, 233, 233, 233, 361, 361, 234, 234, 351,
	351, 351, 351, 229, 229, 230, 230, 231, 232, 232,
	84, 84, 654, 654, 654, 626, 626, 626, 627, 627,
	627, 627, 627, 627, 345, 345, 346, 346, 454, 454,
	454, 454, 454, 349, 349, 349, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 359, 360, 360, 352, 352,
	358, 357, 357, 356, 356, 355, 355, 353, 354, 354,
	354, 363, 363, 362, 365, 365, 364, 453, 570, 570,
	572, 572, 572, 572, 572, 572, 572, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 436, 436, 655, 655, 656, 657,
	568, 568, 568, 569, 564, 564, 565, 565, 565, 565,
	565, 347, 347, 348, 348, 348, 348, 566, 567, 380,
	380, 492, 571, 571, 573, 573, 575, 658, 658, 658,
	658, 658, 658, 659, 659, 659, 452, 452, 451, 451,
	450, 450, 371, 371, 576, 576, 576, 576, 577, 577,
	577, 577, 577, 580, 579, 578, 578, 578, 578, 578,
	86, 86, 86, 415, 415, 414, 414, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 197, 197, 291, 291, 291, 80, 80, 80,
	14, 14, 14, 14, 14, 14, 14, 306, 306, 15,
	15, 15, 628, 628, 628, 85, 85, 85, 85, 85,
	85, 369, 369, 369, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	616, 616, 615, 615, 292, 292, 661, 661, 91, 91,
	91, 91, 91, 91, 91, 91, 510, 510, 511, 511,
	79, 79, 79, 79, 79, 437, 437, 434, 434, 433,
	433, 379, 379, 490, 490, 490, 491, 296, 296, 297,
	297, 252, 252, 252, 33, 32, 24, 24, 28, 28,
	29, 29, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 30, 30, 50, 50, 50, 50, 51, 51, 51,
	51, 54, 54, 55, 55, 49, 49, 49, 49, 52,
	52, 46, 46, 56, 56, 56, 56, 56, 635, 637,
	637, 636, 636, 640, 640, 640, 640, 640, 640, 638,
	638, 639, 639, 642, 642, 643, 643, 123, 123, 128,
	128, 128, 128, 128, 129, 129, 129, 129, 131, 131,
	131, 131, 140, 140, 196, 196, 196, 196, 196, 196,
	196, 58, 58, 58, 58, 71, 71, 71, 71, 138,
	663, 663, 663, 139, 139, 139, 662, 662, 289, 289,
	447, 447, 448, 448, 664, 664, 449, 449, 449, 449,
	449, 282, 281, 283, 283, 284, 284, 77, 77, 77,
	272, 272, 271, 273, 273, 274, 274, 269, 269, 553,
	553, 276, 276, 276, 277, 277, 265, 265, 266, 266,
	267, 267, 268, 268, 280, 280, 548, 548, 665, 665,
	114, 114, 114, 199, 199, 335, 335, 335, 444, 444,
	444, 372, 372, 303, 303, 446, 446, 446, 446, 446,
	411, 411, 411, 198, 198, 387, 387, 401, 401, 402,
	402, 504, 504, 403, 121, 121, 122, 122, 137, 137,
	237, 237, 235, 235, 235, 235, 235, 235, 235, 235,
	242, 242, 243, 243, 244, 244, 245, 246, 246, 246,
	246, 391, 391, 247, 247, 247, 236, 236, 236, 238,
	238, 238, 238, 238, 238, 238, 241, 241, 241, 241,
	248, 248, 248, 240, 240, 587, 587, 587, 589, 589,
	591, 591, 590, 590, 586, 586, 588, 588, 660, 660,
	417, 417, 417, 368, 370, 366, 366, 367, 367, 377,
	377, 375, 376, 376, 378, 378, 489, 489, 489, 253,
	253, 253, 408, 408, 408, 408, 409, 409, 440, 440,
	438, 438, 438, 438, 439, 439, 441, 441, 441, 442,
	442, 443, 443, 405, 405, 406, 406, 407, 407, 407,
	407, 470, 470, 239, 239, 239, 384, 384, 384, 385,
	385, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 461, 461, 459, 459, 459, 459, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 494, 495, 495,
	386, 386, 496, 445, 445, 605, 605, 605, 606, 606,
	487, 487, 497, 497, 497, 497, 497, 497, 485, 485,
	486, 486, 505, 506, 506, 421, 421, 421, 421, 419,
	419, 422, 422, 422, 422, 422, 420, 420, 498, 498,
	498, 498, 410, 410, 499, 499, 499, 499, 500, 501,
	501, 502, 502, 455, 456, 456, 512, 512, 512, 512,
	514, 383, 383, 383, 383, 383, 563, 562, 562, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	529, 529, 529, 529, 529, 529, 529, 515, 515, 515,
	515, 515, 519, 519, 519, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 520, 520, 525, 525,
	526, 526, 526, 521, 522, 527, 527, 527, 527, 666,
	666, 531, 531, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 517, 517, 517, 524, 524, 524, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 429, 429, 431, 431, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 464, 464, 464, 464,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 581, 581, 581, 581, 581,
	581, 581, 581, 466, 466, 584, 584, 585, 585, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	592, 592, 593, 593, 595, 595, 596, 596, 597, 598,
	598, 598, 599, 600, 600, 594, 594, 601, 601, 601,
	601, 602, 602, 603, 603, 603, 603, 603, 604, 604,
	604, 604, 604, 476, 476, 477, 477, 483, 483, 483,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 342, 342, 341, 293, 293,
	293, 293, 293, 293, 396, 396, 394, 394, 394, 397,
	397, 395, 395, 393, 393, 392, 392, 473, 473, 471,
	471, 475, 475, 423, 423, 530, 530, 530, 530, 530,
	530, 530, 530, 424, 424, 424, 432, 425, 425, 426,
	426, 426, 426, 426, 467, 468, 427, 427, 427, 469,
	469, 478, 482, 482, 481, 480, 480, 479, 479, 457,
	457, 458, 458, 404, 404, 667, 667, 400, 400, 503,
	503, 503, 503, 339, 339, 388, 388, 338, 338, 330,
	330, 331, 331, 331, 331, 381, 381, 484, 484, 532,
	532, 533, 533, 534, 534, 535, 535, 536, 537, 538,
	472, 472, 314, 313, 300, 301, 312, 311, 310, 299,
	302, 307, 308, 309, 304, 305, 321, 320, 319, 270,
	275, 326, 327, 327, 329, 329, 328, 328, 316, 317,
	318, 508, 298, 332, 332, 333, 333, 333, 334, 334,
	334, 334, 294, 294, 295, 295, 322, 322, 323, 324,
	324, 315, 315, 315, 285, 285, 285, 286, 286, 287,
	287, 546, 546, 543, 543, 543, 544, 544, 544, 545,
	545, 545, 545, 542, 542, 542, 542, 542, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 555, 555, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 557, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 560, 560,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 0,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 3, 3, 3, 6, 4, 9,
	7, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 5, 2, 0, 1, 2, 3, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 7, 4,
	7, 8, 8, 9, 11, 5, 2, 6, 9, 4,
	7, 7, 10, 7, 10, 10, 13, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 2, 9, 2,
	1, 0, 1, 1, 0, 1, 2, 0, 2, 2,
	0, 2, 2, 1, 2, 3, 3, 4, 4, 4,
	4, 3, 3, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 3, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 6, 4, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 5, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 8, 11,
	5, 4, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	16, 19, 15, 18, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 2, 2, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 14, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 625, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-196, -201, -202, -203, -212, -3, -57, -59, -73, -92,
	-94, -105, -115, -114, -116, -124, -132, -127, -110, -64,
	-137, -141, -152, -197, -198, -199, 33, 32, 103, 83,
	159, 132, 141, 210, 400, 448, 460, 416, 146, 439,
	421, -146, -147, 479, -58, -71, -139, -138, 76, 133,
	175, 431, -6, -14, -18, 30, 48, -60, -61, -62,
	-63, 65, -80, -76, -87, -81, -74, -75, -78, -646,
	105, -588, -95, -98, -131, -650, 167, 229, -117, -118,
	-119, 382, -125, -126, 441, -128, -129, -130, 444, 168,
	-66, -65, 161, -235, -237, -144, -143, -145, -200, -153,
	-154, -155, -156, -157, -158, -159, -161, -188, -162, -163,
	-164, -165, -166, -167, -171, -191, -168, -169, -170, -173,
	-172, -174, -179, -175, -176, -177, -178, -180, -181, -183,
	-184, -185, -186, -187, -189, -190, 484, -182, -192, -160,
	547, 52, 500, 85, 151, 452, 21, -7, -8, -9,
	-10, -11, -12, -13, -17, -16, -56, -4, -5, -77,
	-79, -82, -83, -84, -91, -85, -86, -587, -96, -97,
	-100, -102, -103, -99, -101, 440, 598, -238, -236, 622,
	562, -21, -26, -22, -23, -25, -27, -24, -28, -29,
	-30, -42, -47, -44, -45, -43, -46, -48, -49, -50,
	-51, -52, -53, -54, -55, -32, -38, -39, -33, -34,
	-35, -36, -37, -40, -41, -19, -20, -31, 585, 594,
	-241, -239, -240, -248, 471, 570, 521, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, -337, 2, -316, -322, -323, -324, -315, -285,
	-557, -560, 4, -554, -558, 174, 239, 343, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 46, 47, 48, 49, 50, 51, 52, 56, 58,
	62, 63, 64, 65, 66, 67, 71, 76, 77, 82,
	83, 84, 85, 86, 87, 88, 94, 91, 92, 93,
	95, 97, 99, 100, 101, 102, 103, 104, 106, 107,
	108, 110, 111, 112, 120, 121, 122, 123, 124, 126,
	132, 127, 133, 136, 131, 135, 137, 139, 140, 141,
	144, 145, 146, 148, 149, 150, 152, 153, 154, 156,
	157, 159, 160, 161, 164, 162, 165, 163, 166, 167,
	168, 169, 172, 180, 181, 182, 187, 189, 190, 191,
	193, 196, 197, 198, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 211, 215, 217, 218, 219, 220, 221,
	222, 228, 229, 231, 232, 233, 234, 235, 240, 241,
	242, 246, 252, 253, 257, 258, 259, 261, 265, 266,
	267, 268, 269, 270, 272, 274, 273, 276, 279, 280,
	283, 284, 285, 286, 287, 288, 292, 293, 289, 294,
	295, 297, 298, 301, 299, 302, 303, 300, 304, 306,
	307, 308, 309, 310, 311, 312, 313, 314, 315, 316,
	317, 305, 320, 318, 322, 323, 324, 325, 326, 341,
	336, 337, 338, 330, 331, 327, 332, 328, 329, 333,
	334, 340, 335, 345, 346, 347, 348, 351, 226, 245,
	353, 354, 357, 359, 376, 362, 363, 364, 367, 368,
	371, 374, 375, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 387, 388, 390, 391, 392, 394, 395, 396,
	398, 400, 401, 403, 404, 405, 407, 408, 409, 410,
	411, 412, 413, 415, 416, 418, 417, 419, 421, 423,
	424, 425, 431, 432, 439, 433, 435, 436, 437, 438,
	440, 441, 442, 443, 444, 446, 447, 448, 450, 451,
	452, 453, 454, 456, 458, 459, 463, 464, 465, 481,
	482, 503, 460, 461, 462, 466, 467, 468, 469, 470,
	474, 472, 473, 475, 476, 477, 479, 480, 483, 484,
	486, 487, 488, 489, 490, 491, 492, 495, 497, 498,
	499, 500, 501, 520, 502, 504, 508, 509, 510, 511,
	505, 506, 519, 513, 514, 516, 517, 522, 523, 524,
	525, 526, 527, 528, 529, 531, 539, 540, 541, 542,
	544, 547, 548, 549, 550, 537, 552, 553, 556, 557,
	558, 561, 559, 560, 562, 564, 567, 568, 569, 575,
	574, 576, 577, 578, 580, 581, 586, 587, 589, 590,
	591, 37, 53, 54, 57, 59, 61, 72, 73, 74,
	78, 128, 129, 158, 170, 171, 183, 199, 200, 212,
	214, 223, 224, 225, 247, 248, 250, 255, 277, 350,
	352, 369, 373, 389, 393, 397, 399, 414, 455, 493,
	507, 512, 532, 533, 534, 535, 543, 545, 570, 571,
	572, 579, 588, -337, 2, -316, 360, -309, 2, -285,
	-285, 400, 29, 2, 29, 388, 473, 524, 526, 2,
	-614, -382, 2, 29, -288, -285, 105, 210, 471, -309,
	2, -614, 210, -382, 26, 2, -285, 2, 374, 23,
	28, 69, 80, 101, 144, 169, 192, 196, -649, 376,
	408, 458, 475, 519, 529, 544, 2, 574, 298, 472,
	521, 239, 123, 549, 466, -628, 463, 464, 374, 406,
	450, 213, 563, -289, 2, 460, -285, 298, 2, 625,
	97, 77, 455, 476, -149, 2, 288, 540, -150, -151,
	-148, 532, -541, 466, 450, 320, -285, 625, 625, 625,
	29, -298, 2, -285, -298, 2, -204, 2, -298, -651,
	-211, -210, -209, 22, 432, 182, 270, 194, 230, 325,
	403, 193, 50, 521, 239, 466, 123, 517, 625, 2,
	521, 379, 574, 472, 123, 411, 239, 549, 196, 144,
	28, 71, 48, 466, -628, 599, 600, 298, 130, -612,
	2, -607, 4, -558, -554, -331, -330, 521, 527, 123,
	-324, -315, 614, -323, 625, 625, 625, 625, 2, 258,
	259, 410, 409, 476, 477, 29, 625, 625, 625, 625,
	463, 2, 169, 23, 28, 69, 96, 101, 130, 192,
	196, 365, -647, 376, 408, 475, 519, 523, 529, 544,
	-627, 502, 71, 438, 466, -626, -628, 298, 549, 144,
	-433, 123, 288, 208, 557, 526, 524, 555, 136, 246,
	560, 559, 625, 625, -108, 2, 622, 33, 32, -107,
	-111, 146, 479, -228, 521, 251, 2, -285, 625, 625,
	625, 2, 258, 259, 463, 464, 29, 625, 625, 194,
	-607, 517, 2, 625, 625, 625, 2, 29, 258, 259,
	463, 464, 251, 2, 71, 468, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 2, -194, 476, 502, 219, 49, 48,
	77, 29, 407, 82, 380, 124, 130, 153, 550, 211,
	239, 240, 266, 96, 97, -435, 46, 259, 71, 258,
	464, -633, 463, -488, 522, 467, 473, 516, 270, 460,
	540, 542, 105, 564, 451, 591, 411, 412, 514, 425,
	289, 162, 195, 4, 123, 320, 450, 478, 274, 273,
	532, 288, 459, 383, 87, 625, -660, 2, 521, -662,
	2, 540, 540, 2, -662, 2, -662, 2, -662, 2,
	-663, 540, 588, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, -236, -238, -237, 625, 625, 625, 625,
	625, 625, 625, -194, 476, 2, 77, 29, 29, -375,
	-377, 554, 249, 155, 366, -235, -237, 2, -587, -539,
	2, -462, -561, -464, 612, 613, 605, 518, 70, -341,
	342, 592, -476, 130, 555, 360, -560, -465, -478, 158,
	376, 455, -397, 8, 9, 5, 6, 7, -294, -466,
	-472, 546, 173, 349, -334, 626, 10, 622, -584, -237,
	-477, 38, 214, 68, -543, -333, -295, -515, 250, -332,
	-315, -581, -582, 4, -554, -555, -544, -518, -526, -522,
	-523, -529, -285, -557, 80, 114, 115, 113, 118, 117,
	291, 290, 119, 116, 478, 563, 69, 37, 223, 224,
	255, 350, 225, 78, -583, 145, -556, 247, 248, 493,
	54, 414, 183, 129, 128, 352, 59, 57, 571, -527,
	125, 532, 533, 534, 535, 199, 200, 61, 170, 171,
	373, 397, 512, 543, 545, 212, 277, 45, 109, 195,
	244, 227, 254, 256, 260, 278, 281, 321, 339, 344,
	370, 372, 449, 485, -666, 572, 507, 72, 73, -589,
	417, -590, -309, -589, 625, 625, 627, 625, -366, -368,
	-370, 2, 29, 142, 622, 2, -493, 2, -494, -498,
	-237, 271, -497, 622, -495, 620, -316, 361, -585, 456,
	-581, -582, -294, -315, -333, 4, -554, -556, 624, -371,
	622, 123, 466, 521, 81, 239, 96, 169, 196, -428,
	622, -285, 29, 360, 536, 627, -367, 405, -474, 622,
	360, 363, 194, 363, 63, 302, 2, 2, 2, 2,
	2, 223, -285, 521, 122, 2, 269, 2, 2, 2,
	2, 2, 2, 2, -390, 223, 2, -316, 574, -390,
	223, 2, -390, 223, 2, -434, 2, 90, -299, 223,
	2, -285, -325, 223, 2, -320, -322, -329, 223, 2,
	-327, -285, -549, 223, 2, -547, 4, -554, 119, 478,
	-462, 2, -137, 2, 63, -285, 574, 2, 481, 2,
	622, -149, 2, 74, 540, 45, 476, -150, 2, -448,
	2, -449, -281, -282, -283, -505, -284, 257, 404, 413,
	595, 134, 342, 591, -641, 194, 604, 536, -539, -539,
	-539, -398, 624, -206, 56, -298, -652, -651, -652, -537,
	29, -532, 8, -533, 612, 613, -537, -537, -652, -652,
	2, 2, 2, 2, 2, 2, -498, 223, -316, 2,
	-313, -542, 4, -554, -558, -555, -559, -557, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 60, 68, 69,
	75, 79, 81, 90, 96, 105, 113, 114, 116, 115,
	117, 118, 119, 130, 134, 138, 142, 143, 147, 151,
	155, 173, 175, 188, 192, 194, 210, 213, 216, 230,
	243, 249, 251, 271, 275, 282, 290, 291, 342, 349,
	355, 360, 361, 365, 366, 386, 402, 420, 445, 471,
	478, 496, 515, 521, 530, 536, 538, 546, 554, 555,
	563, 565, 573, 582, 583, 584, 585, -560, 80, 2,
	-498, 223, 2, -319, 223, -498, -322, 2, -299, 2,
	-462, -621, 528, 165, 433, 2, -338, 223, -316, -318,
	-322, -320, 2, 2, 2, 2, -462, 2, -551, 2,
	-546, 10, -545, 5, 4, -554, -558, -555, -327, 2,
	-547, 223, 2, 29, 29, 574, 405, 251, 536, 627,
	-388, -330, -331, -538, 8, -381, -285, 624, -462, 2,
	-137, -120, 2, 188, -462, 223, 2, -137, 223, 2,
	-462, 223, 2, -137, 223, 2, -285, 2, -629, 2,
	-551, 223, 223, -285, 2, 302, 2, 2, 544, 2,
	101, 521, 122, 2, 437, -648, 458, 548, 2, 2,
	2, 2, 2, 2, 2, 521, -304, 2, -285, 188,
	505, -327, 223, -328, 2, 472, -661, 417, -547, 223,
	2, 574, -320, 223, 2, -320, 239, 253, -299, 223,
	2, 526, 524, 526, 524, 194, 2, 251, 2, 251,
	2, -499, 2, -500, -494, -501, 620, 361, -509, 2,
	-508, -545, 570, -108, 622, -108, 622, 476, 622, -551,
	-316, -316, -462, 2, -137, -120, 2, -462, 2, -137,
	2, -285, 2, -134, -551, -133, 622, 194, 564, -285,
	2, -462, 2, -137, -120, 2, -462, 2, -137, 2,
	-228, 188, 2, 123, 521, -194, 2, 188, 565, 2,
	8, 2, 230, -551, 467, 412, 180, 2, 481, 2,
	482, 77, -435, 591, 77, 194, 2, 194, 2, -418,
	2, 585, 405, 194, 2, 2, -611, 2, 360, 194,
	2, 194, 2, 194, 2, 194, 2, 194, 2, -193,
	477, 541, 520, 409, 259, 2, -137, 582, -120, 259,
	258, -462, 582, 2, -634, 188, 464, -462, 2, 539,
	268, 163, 194, -418, 2, 194, 2, 194, 2, 5,
	2, 410, 503, 2, 257, 404, 503, 2, 501, 2,
	-316, 521, 574, 472, 123, 29, 2, 463, 2, 2,
	91, 92, 194, 2, 194, 2, 209, 194, 2, 194,
	521, -399, 624, 591, 2, -410, -498, -447, -448, -447,
	536, -375, -377, -194, 481, 2, -242, -408, -244, 188,
	-438, -439, -245, 282, 175, 355, -246, -417, 29, 142,
	-417, -417, 63, 623, 623, 11, 12, 79, 43, 612,
	613, 614, 615, 186, 616, 617, 610, 611, 609, 602,
	603, 607, 263, 264, 98, 606, 604, 89, 296, 457,
	176, 177, 178, 179, 434, 237, 35, 238, 14, 15,
	16, -341, 34, 365, 281, 592, 227, 485, 605, 17,
	18, 19, 254, 256, 344, 53, 230, -293, 376, -340,
	518, 70, -462, -462, -462, -462, -462, -462, -462, -462,
	372, 622, -404, -457, 620, -237, 622, 622, 622, 622,
	-538, -237, -462, -476, 623, -395, 622, -237, -476, -471,
	622, 455, 620, 622, -479, -462, 5, 5, 5, 622,
	624, -592, 586, 188, 622, 622, 622, 622, 622, 622,
	622, 622, 622, 622, 622, 622, 622, 622, 622, 622,
	399, -520, 622, -519, 622, -519, -519, 575, -517, 622,
	594, 587, 622, -517, 622, 622, 622, 622, 622, 622,
	622, 622, 622, 622, 622, 622, 622, 575, 627, -589,
	-371, 622, -400, -503, -462, 614, -400, -400, 360, -392,
	-462, 109, -421, 260, 321, 195, 278, 449, 244, -459,
	626, -459, -487, 594, -237, -495, -315, -237, -497, 622,
	-493, -487, -109, -538, -92, -105, -114, -137, -152, -198,
	-199, 614, -316, 622, 194, 622, 624, -542, 194, -381,
	-299, -326, -285, -316, -332, -333, -338, -310, -285, 2,
	2, 141, -392, -607, 549, 466, 29, 472, -549, -288,
	39, -473, -512, -513, -563, 626, -562, -515, -525, -521,
	-524, 389, 393, -544, 57, 571, -527, 250, 4, -554,
	-556, 247, 248, 493, 54, 414, 183, 129, 128, 352,
	59, 532, 533, 534, 535, 199, 200, 61, 572, 507,
	72, 73, -607, 549, 466, 29, 472, 188, -549, 188,
	-549, 2, 2, 158, 2, 2, 2, -285, -263, 627,
	67, 442, 158, -390, 223, -263, 158, -263, 158, -339,
	223, -338, -263, 158, -263, 627, 158, -263, 627, 158,
	624, 627, 158, -549, 2, -434, -541, -392, 39, -448,
	2, 130, 4, 5, -664, 627, 280, -344, 295, 341,
	218, 361, 589, 353, 134, -550, 5, 4, -472, -484,
	130, 288, 250, -532, -534, 9, -535, 612, 613, -540,
	-539, 112, 624, -542, -207, 245, 41, -298, -298, -652,
	-652, 8, 8, -652, -652, -298, -298, -260, 435, 479,
	375, -259, 25, 30, 146, 241, 326, 568, 164, -356,
	242, 440, -353, 379, 158, 497, 558, -621, -624, 462,
	528, 165, 433, 93, 353, 479, 375, 435, 158, -414,
	-416, 39, 121, 326, 374, 64, 233, 300, 301, 500,
	579, 158, 479, 375, 435, 375, -15, -274, 25, 146,
	-276, -271, 479, -624, 102, 435, 598, 440, 385, 513,
	402, -624, -621, 276, -623, 581, 340, -262, 497, 558,
	-621, -624, 462, 435, -261, -358, -353, 379, 158, 626,
	25, 146, 435, 479, 375, -644, -645, 30, -255, -254,
	25, 146, -258, 230, -257, 25, 435, 375, -615, -306,
	-586, 230, 585, 158, -306, -306, -498, 223, -638, 188,
	2, -631, -133, 272, 5, 10, -551, -133, -388, 627,
	627, -542, 614, 464, 463, 158, 158, 158, 158, 259,
	188, 342, 342, 585, 2, 2, 2, 2, 2, 196,
	-626, -649, 2, 2, -316, 223, -373, 360, -610, -389,
	521, -316, 188, 342, 45, -319, 223, 2, -322, 574,
	-615, 342, -321, 223, -316, 39, 622, 342, 2, -434,
	2, 239, -586, 342, -499, -335, -316, -494, -335, 479,
	-309, 39, -459, -316, 623, 627, -509, -509, -551, -216,
	585, 194, 622, -228, 585, 585, 259, -506, 627, -505,
	230, -552, -551, -134, -551, 438, 194, 259, -551, -610,
	-299, 2, -316, 2, 521, 261, -551, -216, 230, -551,
	-551, -551, -541, 29, 482, 2, -193, 477, 541, 92,
	482, 2, -316, 521, 123, 239, 83, -638, 188, 2,
	-285, -613, 188, -608, 450, 466, 549, -607, -316, 123,
	-316, 123, -316, 123, -316, -316, 2, 2, 2, 2,
	2, 88, 2, -137, -462, 2, 88, 2, 48, 498,
	-634, 188, 2, 539, 2, 539, 2, -285, -285, -285,
	502, 280, 585, -316, -316, -316, -317, -322, 467, 522,
	550, 464, -462, 2, -653, 2, 194, 188, 2, 521,
	239, 521, 239, 123, 194, 77, 123, 29, 521, 461,
	624, 4, -263, 627, -289, -242, -408, -541, -409, -408,
	-243, -242, -245, 188, 413, 559, 326, 483, 265, -439,
	-438, 29, -462, -443, 182, 325, -462, -441, -464, 612,
	613, -533, -535, -391, 353, -236, -236, -236, -378, -489,
	-462, 402, 239, -514, -512, -512, -314, -542, 532, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, 281, 227, 485, 53, 230,
	-462, 536, -462, -462, -462, -462, 318, 342, 349, 546,
	173, 556, 142, 353, -667, 515, 42, -469, -237, -396,
	622, -483, 36, 496, 29, -476, 622, 2, -457, -462,
	-458, -342, -340, -285, 612, 613, 614, 615, 616, 617,
	602, 603, 604, 14, 15, 16, 607, 611, 609, 610,
	186, 98, 606, 296, 457, 89, 176, 177, 178, 179,
	263, 264, 17, 18, 19, 35, 605, -393, -392, -392,
	623, 573, 29, 142, 614, 2, 623, 627, 39, 623,
	-462, -393, -475, -471, -392, -482, -481, 582, -429, -430,
	590, 305, 126, 221, 303, -431, 470, -536, 8, -542,
	614, -593, 181, 213, 622, 623, 2, 623, 2, 623,
	-462, 2, 623, -462, 2, 623, -462, 2, 623, -462,
	2, 623, 2, 623, 2, -462, -462, -462, -462, -462,
	-462, -462, -392, 8, -536, -536, 532, 532, -536, -536,
	-536, -528, 389, 390, 391, 392, 283, 284, 285, 286,
	393, 394, 395, 396, 310, 311, 312, 313, 306, 307,
	308, 309, 314, 315, 316, 317, 204, 205, 206, 207,
	200, 201, 202, 203, -528, -423, 2, -530, -392, 4,
	590, 305, 126, 221, 303, 470, 5, -423, 2, -424,
	2, -462, -392, -425, -463, -464, 612, 613, 605, -341,
	-476, -426, 2, -462, -393, -462, 60, 275, 538, -427,
	-462, 194, -392, -392, 2, -392, 2, -590, 39, -392,
	-384, 627, 194, 39, 4, -384, -384, 622, 623, 627,
	-422, 217, 299, 294, 253, -422, -493, -421, 260, -419,
	370, -419, -419, -487, -300, 620, 628, -542, -487, -486,
	-485, 39, -309, 367, -487, -487, 624, 623, -486, 621,
	-605, 622, 625, 625, 625, 625, 625, -316, 622, -392,
	-542, 624, 504, 2, 623, 254, 254, 254, 254, 254,
	360, 456, 623, 536, -609, -325, -329, 522, 2, 585,
	-107, 362, 623, 627, -383, 38, 620, 624, -536, 2,
	2, -531, 575, 622, 622, -430, 622, 194, -609, -329,
	522, 2, -614, -382, -382, 536, -285, 2, -316, -390,
	-263, 158, -390, -390, -263, 627, 158, -299, -320, -325,
	-327, -329, -285, -547, -549, -263, -321, -641, 623, 540,
	-449, -343, 413, 495, 436, 474, 517, 9, 9, 627,
	-542, -208, 465, 326, -298, -298, -298, -298, 627, -642,
	96, 536, 81, 622, 466, -278, 289, 536, -453, 223,
	81, -564, 96, -302, -565, -285, 75, 555, 402, 192,
	156, -642, 96, 402, -642, 96, 2, 241, 96, 479,
	502, 622, 29, 63, -498, 43, 43, 29, -622, -623,
	276, 194, 591, 521, 239, 466, 536, 536, -498, -416,
	-512, 121, 300, 301, 63, -537, -537, 63, -537, -537,
	-537, 585, -319, -498, 466, 536, 536, 536, 423, 423,
	-271, -150, 536, 536, 29, -194, 443, 130, -665, 604,
	423, 276, -623, 536, 194, 627, 43, 43, 29, -622,
	194, 536, -338, -300, 569, 44, 569, 44, 569, 536,
	44, 466, 536, 627, 44, -254, -610, -610, -257, -551,
	-256, 324, 536, 536, -15, 479, -616, -290, 108, 332,
	293, 333, 100, 329, 99, 328, 106, 330, 107, 331,
	576, 345, 577, 346, 66, 327, 304, 334, 499, 335,
	578, 347, -291, -292, 149, 381, 567, 123, -547, -15,
	-15, 479, 375, 435, 158, -639, 230, 29, -628, 230,
	-506, 230, -506, -330, -285, 624, -137, -462, -462, -137,
	-462, -137, 48, 158, 158, 2, 2, -661, 269, 622,
	-347, 342, 194, -381, -507, 251, 627, -389, -607, 158,
	-547, -415, -414, 342, -321, 223, 2, 158, -371, 342,
	152, 622, 411, 2, 158, -301, 223, -286, -285, -434,
	-265, 525, 158, -412, 565, -444, -137, 622, 130, 39,
	-444, -401, -402, -504, -403, -302, 622, -309, -459, -108,
	-508, 623, 623, 623, -215, 364, -214, -285, 5, -228,
	-372, -303, -302, 122, 415, 415, -222, 585, -133, -134,
	623, 627, -506, 230, 505, -134, -551, -216, -216, -506,
	-506, -316, 188, -551, -216, -216, -216, 2, 2, 2,
	2, -418, -316, -299, -338, -316, 29, 624, -549, -549,
	-329, -325, -418, -299, -418, -299, -418, -299, -418, -418,
	-137, -462, 502, 2, 476, 188, 188, 624, -418, -374,
	445, 5, 2, 411, 123, 521, 379, 239, -316, -338,
	-316, -338, -299, 123, -299, 124, -316, 4, -498, -409,
	-243, 361, 265, 483, -441, -442, -464, 455, 456, -442,
	455, 456, 8, 9, 8, 9, -247, 487, 348, -390,
	627, -252, 40, 138, 265, -316, 591, 154, -462, -462,
	536, -667, 515, -469, 154, -462, 318, 349, 546, 173,
	556, 142, 353, 194, 622, -463, -463, 623, -394, -462,
	-462, 621, 630, 623, 624, 623, -377, 627, -375, -462,
	-392, -392, 623, 624, -392, -381, 621, 621, 627, 623,
	-480, -481, 147, -462, 536, 536, 536, 536, 622, 623,
	624, -598, 371, 622, 622, -462, 623, 623, 623, 623,
	39, 627, 627, 627, 623, 627, 627, 627, 623, 623,
	623, 627, 623, 591, 591, 623, 623, 623, 623, 627,
	623, 627, 623, 194, 623, 623, -432, 386, 623, 11,
	12, 612, 613, 614, 615, 186, 616, 617, 610, 611,
	609, 602, 603, 604, 89, 296, 457, 14, 15, 16,
	-341, 254, 230, -463, -463, -463, -463, 623, -467, -468,
	194, 188, 39, -427, -427, -427, 623, 194, -392, 623,
	623, 622, -591, 298, 342, 623, -456, -455, 583, -503,
	-385, 2, -493, -311, -542, -456, -456, -392, -462, 260,
	260, -420, 565, 360, -422, -493, -486, -538, -461, -460,
	190, 40, 138, 336, 337, 338, 226, 191, -486, -309,
	-371, -486, -486, -542, -487, -487, -485, 623, -606, -538,
	623, -386, -496, -585, -377, 624, -542, -225, -586, -195,
	5, 349, -195, -195, -195, -195, -316, -549, 536, 536,
	230, 26, 387, -512, 620, 621, 8, -542, 622, -536,
	-536, -536, -549, 194, 194, 230, 360, 194, -547, 2,
	-263, -390, -263, -263, -338, -339, -263, -263, -263, -413,
	585, -539, -448, 553, 86, 413, 532, -539, 120, 465,
	-259, 435, 479, -302, -302, -316, -232, -231, -229, -285,
	5, -326, 208, 424, -547, 342, -453, 223, -264, 342,
	223, -310, -512, 622, -436, 587, 265, 265, 565, -302,
	-310, 265, 223, -302, 223, -310, 2, -310, -617, 413,
	354, -462, -230, -229, 63, -354, 287, 411, 343, -260,
	435, 479, 375, -137, -137, -137, 622, -641, 565, 141,
	-316, -338, -316, -326, -547, -321, 479, 375, 435, 339,
	-332, -537, -537, -414, 479, 375, 435, -326, -547, -319,
	-547, -270, 223, -285, -270, 223, 466, -299, 423, 591,
	47, -665, 536, 194, -462, -462, -261, -137, -137, -137,
	622, -300, -262, 435, 5, 223, -302, 5, -302, 223,
	5, -285, -302, -326, -547, -645, 25, 146, -302, -258,
	604, -326, -547, -290, 381, -551, 349, 561, -299, -615,
	-306, 466, 536, 536, -498, -635, -636, 210, 448, 466,
	451, -549, -133, -219, 585, -133, -213, 234, 614, -612,
	-551, -285, 574, -285, -345, -348, -346, -302, -454, -453,
	-568, -569, -564, 281, 239, 555, 253, 174, 96, -233,
	-234, 587, 585, 158, -336, -316, 620, -216, -551, -316,
	-507, -327, -328, 158, -371, 342, -547, 39, 158, 622,
	2, 2, -320, 360, 342, -301, 223, -266, 148, -665,
	-299, -456, -385, -411, -446, 445, 360, -372, 570, -309,
	-411, -387, 627, 194, 604, 624, -372, -502, 614, -108,
	-108, -216, 627, 622, 604, 604, 622, -551, 623, 627,
	624, 622, 604, 604, -224, 364, -223, 150, 267, 252,
	489, 490, 491, 492, 140, 488, 127, 323, 235, -506,
	-551, -222, -134, 194, -506, 230, 194, -67, 585, 521,
	-216, 626, 451, -285, -418, -418, -418, 476, 476, -285,
	-381, -312, -542, -299, -316, -313, -338, 188, 188, -299,
	559, -442, 361, 292, -489, -253, 593, -316, 626, -462,
	-462, 154, 154, -462, -463, -463, -462, 154, 194, 622,
	-462, -473, 34, 34, 623, 627, -458, -462, -340, 623,
	573, -377, -377, 623, 614, -542, 626, 623, -471, 151,
	-462, 530, 305, 221, 303, -431, 303, -431, -431, -536,
	5, -542, 614, -599, -305, 622, -285, 583, -376, 366,
	623, -514, -512, -462, -462, -462, -462, -462, -536, -517,
	-517, -532, -532, -462, -467, -462, -514, -512, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, 142, 342,
	353, -463, -468, -467, -462, -462, -512, 623, 623, 623,
	-392, -107, 622, 298, -405, 213, -462, -506, 627, -405,
	-405, 623, -493, -493, 622, -462, 260, 621, 627, 629,
	604, 604, -371, 624, -485, -486, 621, 623, 627, 623,
	627, -445, 39, 623, -542, -456, -227, -226, 139, 56,
	110, 137, 349, 254, -637, 585, -549, -549, 466, 363,
	5, 8, 620, 621, 624, -536, 623, 623, 623, -549,
	-549, 466, -607, 549, 466, 29, -549, -263, -263, 122,
	326, -462, -205, 585, 587, 536, 536, 623, 627, 604,
	63, 230, 158, 342, 567, 342, -565, 156, -570, -462,
	622, 239, 622, 622, 2, -249, -250, -251, 146, 479,
	25, -643, 2, 565, 158, -263, 158, -263, 589, 623,
	627, -354, 622, 622, 536, 466, -278, 536, 585, -392,
	-462, -217, 130, -541, -624, 626, -624, 626, 466, 536,
	536, 466, 536, 536, 342, 158, 585, 172, 172, 591,
	-270, -462, -462, 188, 536, 585, -392, 536, -516, 51,
	27, 342, -320, -263, 158, 536, 536, 549, 479, -133,
	-551, -551, 349, -15, -326, -547, -321, 479, 375, 435,
	-614, -614, 210, -329, -639, -506, -221, 364, -220, 150,
	447, 140, 267, 235, -506, -219, 194, 251, 585, -321,
	2, 623, 623, 627, 627, -571, -264, -316, -301, 239,
	239, -308, -286, 39, 357, 357, 622, -316, -88, 585,
	-505, -538, -618, 585, 45, -319, 39, 158, -615, -137,
	-321, -510, -511, 5, 39, -316, 158, 360, 342, -267,
	274, -665, -546, -586, -377, -411, -400, 343, 94, 623,
	-456, -402, -385, -462, 2, 623, -214, -215, -551, -551,
	-551, -216, -228, -303, 2, -552, -551, -551, 627, 622,
	604, 604, 604, 604, 604, 604, -222, -506, -133, -222,
	-134, -137, 364, -316, 614, -418, -360, -359, 379, 353,
	-360, 455, 455, 361, 182, 270, -252, -300, -462, -462,
	154, 34, 34, -462, -462, -473, 623, -462, -462, -392,
	621, 5, -462, 623, 623, 8, -462, 623, 624, -600,
	-285, -462, 623, 63, 623, 623, 627, 627, 623, 623,
	623, 623, 623, 623, 623, -468, 194, 142, 353, 622,
	623, 623, -107, -470, 216, 63, -493, -470, -470, -420,
	-381, -493, -460, -300, 620, -300, 620, -542, -538, -496,
	622, 624, -226, 604, -551, -551, -195, 210, -637, -637,
	585, -329, 621, 2, 620, -542, 623, -329, 194, -609,
	-329, 522, 122, 188, 220, 220, -302, -302, -231, -539,
	521, 455, -270, 402, -453, 158, 158, -572, 96, -574,
	79, 174, 105, 342, 349, 555, 402, 75, 130, 360,
	420, -655, -656, -657, 39, 596, 597, 623, -379, -490,
	-585, 622, -285, -379, -381, 342, 510, 130, 360, 342,
	130, 360, 580, 122, 2, 549, 82, -302, -310, -229,
	-381, -381, -316, -326, -547, 166, 623, 627, 604, 2,
	614, 614, -326, -547, -321, -326, -547, -319, 158, -270,
	377, 172, 536, -137, -462, 166, 623, -300, 5, 5,
	158, -297, 79, -302, 5, -302, -320, 122, 585, 466,
	536, 536, 360, 360, 363, -635, -636, -219, 627, 622,
	604, 604, 604, -219, -552, -133, 2, -371, -361, 241,
	-302, -569, -566, -567, 402, -454, -573, -575, 174, 402,
	-349, 622, -301, -286, 622, -137, 2, -232, 622, -347,
	364, 621, -620, 364, -619, 120, 140, -547, -415, -137,
	-321, -369, 585, -371, 623, 627, 152, -437, 565, -300,
	-316, 158, -268, 273, -665, -546, -265, -440, -438, 143,
	622, 360, -137, -377, 604, 623, 623, 122, 623, -223,
	-224, -551, -133, -551, -551, -551, -133, -222, -506, -506,
	-68, -69, 239, 96, 384, -313, 521, 239, 622, 622,
	-252, -462, -462, -462, 623, -377, -542, 614, -594, 379,
	623, -489, -462, -462, -463, 194, 622, -473, 623, -595,
	584, -462, -406, -407, -462, 453, 111, 214, -595, -595,
	623, -538, -538, 2, -551, 363, 2, 536, 620, 2,
	194, -549, 194, 194, 230, -137, 230, 39, 423, -453,
	-310, -310, -314, -307, -285, 174, 223, 349, 580, -436,
	265, 622, -463, 559, -316, 622, 2, 222, 222, 31,
	63, -658, 134, 243, 623, 627, -491, -296, -285, -462,
	-491, 623, 623, 349, 559, 349, 580, -462, 559, -512,
	622, -263, -263, 623, 623, -462, 536, -541, 103, -539,
	2, -624, -270, -299, -462, 188, -462, 536, 5, -263,
	-314, -263, -263, -297, 549, 359, -326, -547, -321, -640,
	522, 473, 550, 467, 197, 454, -640, 188, -220, -221,
	-551, -133, -133, -219, 39, -355, -356, 2, -571, 265,
	-307, 265, 232, 157, -379, 622, 622, -381, -654, 585,
	623, -345, -233, -89, -90, 537, -505, 627, 622, 604,
	-371, 326, 122, 39, 5, 622, 622, -285, 360, 622,
	-300, -280, 95, -665, -546, -266, -411, 343, -381, 96,
	-440, -469, -216, 622, -216, 623, -222, 627, 29, 622,
	29, 622, -316, -338, -392, -392, 623, -377, 63, 627,
	623, 623, -463, -473, 623, -596, -597, -305, 627, 622,
	622, 480, 621, 621, -549, 2, -549, -549, -549, 466,
	-270, 402, -285, -565, -574, -307, 342, -234, 565, 585,
	-462, -463, -287, 622, -462, 622, 622, 39, 130, 243,
	135, 228, -452, -659, 104, 511, 231, -490, -252, 623,
	-451, 565, 420, -463, -297, -379, 622, 622, 622, 604,
	194, -137, 622, -516, -263, -320, 604, 536, 2, 2,
	194, -614, 623, -630, 418, -137, -233, 622, -234, -350,
	84, 97, 131, 222, 198, 240, 502, 508, 29, -350,
	623, -379, -379, 623, -351, 360, 122, 326, 623, 39,
	-90, 9, -619, -620, -462, 39, 122, -137, -510, -379,
	-316, -379, 360, -272, -271, 282, -546, -267, 623, -310,
	-411, -552, -69, -381, -381, 623, 623, -601, 411, 456,
	215, -392, -378, 623, 627, 39, -407, 2, 2, 2,
	-637, -329, 423, -264, 158, 217, 623, -576, 297, -285,
	623, -415, -415, 39, 135, 228, -357, -353, 622, -253,
	-491, -234, 217, -316, -625, 565, 623, -363, -362, -359,
	-365, -364, -359, -392, -539, 103, 377, -392, -297, -133,
	-549, -549, 360, -632, 195, -631, 5, 10, -351, -380,
	-492, -302, -451, 623, 623, 85, 122, -361, -137, 623,
	-137, 2, -369, 623, 623, -437, 623, -316, -269, -553,
	423, 425, -665, -268, -456, 143, 623, 623, 623, 623,
	-602, -603, 53, 552, 112, -462, -602, -602, -597, -599,
	194, 174, -450, 594, -577, -580, -579, 601, 486, 195,
	378, 623, 510, 579, 623, 623, -658, -381, -450, -371,
	-462, -451, 623, 627, 570, 623, 627, 570, 623, 194,
	623, -263, -637, -263, -640, -218, 585, 48, -279, -278,
	623, 627, -452, -451, -357, 401, 136, 146, -355, -654,
	-451, 622, -452, 622, -277, -276, -665, -532, -280, 143,
	343, 559, -216, -604, 156, -603, 398, 187, 455, 398,
	187, -604, -604, -549, -307, -234, 58, -579, 601, -580,
	601, 559, 136, -456, 623, -576, -234, -362, 230, -364,
	194, 377, 194, 463, -631, 31, -234, -492, -357, -452,
	-234, 456, 456, 2, -233, -351, -452, -379, -357, -379,
	-273, -274, -275, -381, -272, 343, 559, 479, 112, 213,
	531, 326, 34, 604, -578, 326, 442, 67, 479, -578,
	-577, 622, 622, -549, 364, -234, -357, -456, 2, -351,
	-357, 623, -234, 623, -548, 375, -269, 479, -401, 455,
	368, -603, -462, 24, 349, 130, -658, -392, -392, -263,
	-215, 622, -456, -234, -279, -234, -451, -456, -452, -665,
	-277, -401, -456, 623, 623, -215, -456, -456, -452, -357,
	-547, -273, -456, -352, -353, 536, 623, -357, -234, 622,
	-234, -456, -392, -456, 623, -352,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 575, 576, 578, 579, 580,
	582, 583, 585, 587, 589, 590, 591, 593, 594, 596,
	597, 598, 599, 600, 602, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 689, 691, 0, 1514, 1516, 1518, 1520, 0, 0,
	-2, 0, 40, 41, 43, 0, -2, 352, 354, 356,
	358, 0, 390, 392, 393, 395, 397, 398, 399, 401,
	-2, 0, 508, 509, 511, 513, -2, 0, 1099, 1101,
	1103, 0, 677, 679, 0, 1106, 1108, 1110, 0, 0,
	701, 702, 0, 1628, -2, 693, 695, 697, 699, 770,
	772, 774, 776, 778, 780, 782, 784, 786, 788, 789,
	791, 793, 795, 797, 799, 800, 802, 804, 806, 807,
	809, 810, 812, 814, 816, 818, 820, 822, 824, 826,
	828, 830, 832, 834, 836, 838, -2, 841, 842, 843,
	-2, -2, 0, -2, -2, -2, 1532, 45, 47, 49,
	51, 53, 55, 57, 59, 61, 63, 65, 67, 452,
	454, 456, 458, 460, 463, 465, 467, 1686, 515, 517,
	519, 521, 523, 525, 527, 0, 0, -2, 1700, 0,
	0, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 117, 118, 119, 120, 121, 122, 123, 82, 83,
	84, 86, 87, 88, 89, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 114, 115, 80, 0, 0,
	1659, 1661, 1663, 1665, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 33,
	35, 37, 577, 581, 584, 586, 588, 592, 595, 601,
	603, 605, 560, 561, 564, 2398, 2416, 2417, 2418, 2421,
	2422, 2423, 2424, 2425, 2426, 2903, 2984, 2985, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
	2880, 2881, 2882, 562, 563, 1293, 0, 642, 640, 2383,
	643, 2691, 645, 647, 502, 503, 504, 505, 506, 507,
	0, 670, 656, 1698, 671, 673, 674, 675, 676, 637,
	635, 0, 675, 670, 2453, 668, 1512, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 431,
	1352, 1353, 1354, 1497, 1498, 2742, 1539, 0, 249, 690,
	-2, -2, 2868, -2, 724, 725, -2, -2, 739, 743,
	734, 2872, 0, 2745, 2728, -2, 746, 1515, 1517, 1519,
	845, 846, 847, 2402, 851, 849, 861, 862, 863, 0,
	880, -2, 0, 2449, 2713, -2, -2, 881, 882, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 42, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 259, -2, -2, -2, -2, 0, 0, 2792, 2507,
	2351, 2418, 2354, 2349, 353, 355, 357, 359, 360, 0,
	0, 0, 0, 0, 0, 0, 391, 394, 396, 400,
	-2, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 1165, 1166, 1419, 0, 0,
	0, -2, 510, 512, 565, 566, 0, 1687, 1687, 573,
	574, -2, 0, 0, 0, 0, 323, 313, 1100, 1102,
	1104, 1105, 0, 0, 0, 0, 0, 678, 680, 0,
	0, 2786, 291, 1107, 1109, 1111, 1112, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 694, 696, 698, 700,
	771, 773, 775, 777, 779, 781, 783, 785, 787, 790,
	792, 794, 796, 798, 801, 803, 805, 808, 811, 813,
	815, 817, 819, 821, 823, 825, 827, 829, 831, 833,
	835, 837, 839, 840, 888, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	990, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	1080, 0, 0, 891, 894, 895, 896, 897, 898, 899,
	0, 963, 988, 989, 999, 844, 0, 1333, 1688, 1541,
	1522, 1536, 1541, 1524, 1525, 1526, 1527, 1528, 1533, 1535,
	1529, 1530, 1531, 46, 48, 50, 52, 54, 56, 58,
	60, 62, 64, 66, 68, 453, 455, 457, 459, 461,
	464, 466, 468, -2, 1657, 1658, 516, 518, 520, 522,
	524, 526, 528, 681, 0, 684, 0, 893, 683, -2,
	0, 1692, 1692, 1692, 0, 0, 1658, 1656, 0, 687,
	688, 750, 751, 1965, 0, 0, 0, 0, 0, 0,
	0, 0, 2225, 2053, 0, 752, -2, 2086, 2088, 2843,
	2664, 2868, 2224, 2090, 2091, 2092, 2093, 2094, 0, 2096,
	2097, 2098, 2099, 2100, 2101, 0, 2103, 0, 2108, 2109,
	2110, 0, 2850, 2328, 2412, -2, 0, 0, 2856, 2408,
	0, 2191, 2126, -2, -2, 2435, 2414, 1897, 1898, 1899,
	1900, 1901, -2, -2, 2886, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 0, 2831, 2851, 2852,
	2857, 2859, 2853, 2840, 2151, 2521, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1924,
	1933, -2, -2, -2, -2, -2, -2, -2, 2844, 2845,
	2862, 2865, 2871, 2876, 2877, 2849, 2858, 2885, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 1925, -2, -2, -2, -2, 1675,
	2706, 1678, 1293, 1676, 1660, 1662, 0, 1664, 0, 0,
	0, 1669, 1695, 1693, 0, 1744, 1673, 1674, 1767, 1767,
	1791, 0, 1772, 0, 1791, 1687, 1818, 0, 1778, 2733,
	2127, 2128, 0, 2418, 2413, -2, -2, 2883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 638,
	0, 644, 646, 0, 0, 0, 669, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 435, 436, 437,
	438, 2851, 0, 0, 0, 443, 0, 445, 446, 447,
	448, 449, 450, 451, 219, 2851, 533, 558, 0, 219,
	2851, 536, 219, 2851, 539, 0, 542, 1417, 219, 2851,
	545, 2379, 219, 2851, 548, 550, 2387, 219, 2851, 554,
	2394, 2392, 555, 0, 557, 239, 235, 236, 237, 238,
	1508, 1509, 1510, 1511, 0, 1538, 1418, 692, 0, 718,
	0, 722, 723, 2839, -2, 0, 2754, 727, 728, -2,
	730, 1542, 1546, 1547, 1548, 1549, 1550, 0, 0, 0,
	0, 1555, 0, 0, 0, 0, 719, 720, 737, 738,
	744, 747, 0, 854, 850, 864, 0, 879, 0, 880,
	880, 2368, 2359, 2360, 0, 0, 880, 880, 0, 0,
	883, 884, 885, 886, 887, 79, 0, 2851, 1818, 81,
	0, 2373, 2443, 2444, 2445, 2446, 2447, 2884, 2904, 2905,
	2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915,
	2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925,
	2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935,
	2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945,
	2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2886, 85,
	0, 2851, 90, 0, 2851, 0, -2, 103, 0, 116,
	0, 143, -2, -2, -2, 124, 0, 2851, 0, 2348,
	-2, 0, 231, 314, 315, 316, 0, 621, 0, 628,
	326, 327, 2431, 2432, 2439, 2440, 2441, 2442, 0, 1137,
	-2, 0, 1346, 1348, 1348, 0, -2, 0, 0, 0,
	1090, 2345, 2350, 1091, 2369, 1092, 2355, 0, 361, 362,
	363, 364, 365, 0, 366, 2851, 368, 369, 0, 371,
	372, 2851, 374, 375, 0, 377, 0, 379, 0, 271,
	275, 2851, 2851, 404, 407, 0, 409, 410, 0, 412,
	0, 0, 0, 416, -2, 432, 0, 429, 419, 420,
	422, 423, 424, 425, 426, 0, 472, 470, 2384, 0,
	0, -2, 2851, 0, 1134, 0, 0, 1397, -2, 0,
	1339, 0, 1404, 2851, 1400, 0, -2, 0, 1685, 2851,
	1559, 1169, 1170, 1171, 1172, 1830, 499, 0, 1592, 0,
	1594, 0, 1614, 1824, 1767, 0, 0, 1829, 0, -2,
	618, 2401, -2, 568, 0, 569, 0, -2, 0, 340,
	0, 0, 1115, 1117, 1118, 1120, 1121, 1124, 1125, 1126,
	1127, 0, 1129, 1804, 292, 294, 0, 0, 0, 0,
	1114, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	0, 0, 703, 0, 0, 889, 890, 0, 0, 906,
	907, 908, 0, 340, 2746, 2701, 2543, 915, 0, 918,
	921, -2, 0, 0, 0, 0, 925, 0, 930, 931,
	932, 0, -2, 0, 939, 941, 1098, 943, 0, 0,
	945, 0, 949, 0, 952, 0, 954, 0, 956, -2,
	-2, -2, 964, 965, -2, 970, -2, 0, 974, -2,
	0, 977, 0, 980, -2, 0, 990, 986, 987, 0,
	0, 0, 0, 1007, 1008, 0, 1017, 0, 1020, 1021,
	1022, 0, 1026, 1027, 0, 1029, 1030, 1031, 1033, 1034,
	1035, 0, 2820, 2751, 2507, 0, 1043, -2, 1049, 1051,
	0, -2, 0, 1067, 0, 1071, 0, 0, 1079, 0,
	0, 892, 0, 900, 901, 219, 1822, 1521, -2, 1523,
	0, -2, 0, 682, 0, 686, 1717, 1643, 1640, 0,
	1714, 1715, 1644, 0, 0, 0, 1651, 0, 1690, 1691,
	0, 0, 0, 1630, 1631, 0, 0, 0, 0, 2230,
	2231, 2232, 2233, 2246, 2234, 2235, 2245, 2243, 2244, 2236,
	2237, 2242, 2256, 2257, 2247, 2248, 2238, 2251, 2249, 2250,
	2252, 2253, 2254, 2255, 0, 0, 2261, 0, 2239, 2240,
	2241, 2269, 0, 0, 2270, 0, 2272, 0, 2262, 2258,
	2259, 2260, 0, 2032, 2034, 2336, 0, 0, 0, 2268,
	2263, 2264, 1970, 1971, 1972, 1973, 1974, 2007, 2011, 2012,
	0, 0, 2087, 2333, 2332, 2089, 0, 0, 2284, 0,
	2102, -2, 0, 2225, 2279, 0, 0, 2111, 2112, 2113,
	0, 0, 2284, 0, 0, 2327, 2123, 2124, 1962, 0,
	0, 2193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1911, 1910, 0, 1912, 0, 1913, 1914, 1921, 1934, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 2308, -2, 0, 0, 0, 0, 1926, 0, 1677,
	0, 0, 1748, 2337, 2341, 2342, 1748, 1748, 0, 0,
	2285, 1815, 1815, 0, 0, 1810, 1810, 1810, 1808, 1791,
	0, 1791, 1801, 0, 1791, 1791, 0, -2, 1772, 0,
	0, 1801, 0, 1785, 606, 608, 610, 612, 613, 614,
	616, 1819, 1820, 0, 0, 0, 0, 2419, 0, 0,
	0, 0, 2391, 0, 0, 2404, 0, 0, 2378, 386,
	387, 0, 0, 0, 2803, 2745, 0, -2, 649, 672,
	1687, 0, 2287, 1845, 1849, 0, 1851, 1852, 1853, 1854,
	1855, 0, 0, 1846, -2, 1922, 1924, 1945, 2436, 2437,
	2438, 1905, 1906, 1907, 1908, 1909, 1917, 1904, 1904, 1904,
	1915, 1944, 1936, 1944, 1940, 1890, 1891, 1892, 1927, 1928,
	1929, 1930, 0, 2803, 2745, 0, -2, 0, 659, 0,
	0, 1625, 433, 0, 440, 441, 442, 0, 529, 0,
	217, 218, 0, 219, 2851, 534, 0, 537, 0, 219,
	2851, 2343, 543, 0, 546, 0, 0, 552, 0, 0,
	0, 0, 0, 219, 1627, 0, 0, 0, 0, -2,
	732, 740, 741, 742, 0, 1544, 0, 1551, 761, 762,
	763, 1553, 1554, 0, 1556, 735, 764, 765, 766, 767,
	768, 769, 0, 2357, 2358, 2363, 2364, 0, 0, 733,
	754, 736, 0, 748, 857, 852, 853, 865, 866, 0,
	0, 2361, 2362, 0, 0, 871, 872, 125, 1494, 0,
	0, 172, 0, 1494, 1494, 0, 0, 0, 0, 200,
	0, 0, 1203, 0, 0, 0, 0, 143, 157, 168,
	137, 138, 139, 0, 0, 0, 0, 0, 0, 91,
	1315, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 105, 106, 0, 0,
	111, 112, 0, 156, 0, 0, 0, 0, 0, 1589,
	0, 147, 143, 0, 0, 142, 144, 127, 0, 0,
	143, 158, 170, 0, 206, 208, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 241, 0, 620, 622,
	0, 0, 626, 0, 629, 0, 0, 0, 1340, 0,
	0, 0, 1684, 0, 0, 0, 0, 2851, 1492, 0,
	1477, 0, 1804, 2594, -2, -2, 292, 1804, 1089, 0,
	0, 2419, 2353, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 408, 411, 413, 414, 415, 0,
	1396, 0, 421, 462, 1262, 2851, 0, 0, 489, 484,
	0, 486, 0, 0, 0, 1314, 2851, 1312, 2388, 0,
	1337, 0, 1293, 2851, 2386, 0, 0, 0, 1405, 2428,
	1414, 1418, 1577, 0, 501, 0, 1595, 1597, 0, 0,
	1825, 0, 1827, 1767, 1687, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 1128, 298, 0, 1803,
	0, 0, 328, 1804, 292, 2719, 0, 1113, 340, 340,
	1804, 705, 1804, 707, 0, 0, 909, 910, 0, 340,
	340, 340, 916, 917, 919, 920, -2, -2, -2, -2,
	922, 923, 1014, 0, 0, 0, 1013, 933, 0, 935,
	938, 942, 0, 1083, 2728, 2745, 2803, 1096, 1014, 2507,
	1014, 2507, 1014, 2507, 1014, 1014, 958, 1002, 1010, 969,
	976, 0, 971, 975, 978, 981, 0, 983, 991, 0,
	-2, 0, 994, 0, 996, 0, 998, 1014, 1015, 1018,
	1025, 1028, 0, 1036, 1037, 1038, 1039, 2399, 1040, 1041,
	1042, -2, 1046, 1047, 0, 1058, 1063, 1064, 1060, 0,
	0, 0, 0, 0, 0, 1074, 1075, 0, 0, 1082,
	0, 902, 1332, 0, 1534, 1717, 1643, 685, 1634, 1716,
	1635, 1642, 1645, 0, 0, 1647, 0, 1649, 0, 1712,
	1713, 1720, 1721, 0, 1731, 1732, 1724, 0, -2, 0,
	0, 1727, 1728, 1653, 0, 1670, 1671, 1672, 1701, 1704,
	1433, 0, 2984, 1966, 1840, 1967, 1968, 2372, 0, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, -2,
	-2, -2, -2, -2, -2, -2, -2, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, -2, -2,
	-2, 2008, 2009, 2010, -2, 2271, 2273, 0, 2336, 0,
	-2, 0, -2, -2, -2, -2, 2029, 0, 2031, 2036,
	2038, 2040, 0, 0, 0, 0, 2335, 2050, 2319, 2320,
	0, 0, 2227, 2228, 2229, 2035, 0, 2054, 2334, 2331,
	0, 0, 2265, 0, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 0, 2283, 1700,
	2115, 0, 0, 0, 0, 2122, 2107, 2281, 0, 2280,
	0, 0, 0, 2291, 0, 2326, 2322, 0, 2370, 1961,
	1948, 1949, 1950, 1951, 1952, 1953, 1963, 0, 2367, 2405,
	2411, 2201, 0, 0, 0, 2152, 2153, 2154, 2155, 2156,
	0, 2158, 2159, 0, 2161, 2162, 0, 2164, 2165, 0,
	2167, 2168, 2169, 2170, 2171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 0, 0, 2173, 0, 2294, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2175, 0,
	2177, 2285, 2305, 0, 0, 2055, 0, 0, 0, 0,
	2225, 0, 2180, 2285, 2313, 0, 0, 0, 0, 0,
	2285, 0, 2318, 0, 2187, 0, 2189, 1679, 0, 0,
	1835, 0, 0, 0, 2340, 1835, 1835, 0, 1743, 0,
	0, 1811, 1812, 1813, 1814, 0, 0, 1815, 0, 1805,
	1809, 1806, 1807, 1801, 1764, 0, 0, 2374, 1801, 1770,
	1800, 0, 1293, 1790, 1801, 1801, 0, -2, 1774, 1791,
	0, 0, 607, 609, 611, 615, 617, 0, 0, 1700,
	-2, 0, -2, 342, 1292, 0, 0, 0, 0, 0,
	0, 639, 641, 0, 0, 549, 0, 0, 655, 0,
	633, 0, 636, 0, 1836, 1839, 0, 0, 1850, 1856,
	1857, 0, -2, 0, 0, 1946, 0, 0, 0, 0,
	0, 667, 0, 670, 0, 0, 0, 444, 559, 219,
	531, 0, 219, 219, 540, 0, 0, 219, 551, 219,
	2395, 219, 2393, 240, 556, 1626, 252, 0, 721, 0,
	1543, 1552, 0, 758, 0, 760, 0, 2365, 2366, 0,
	749, 0, 855, 0, 867, 868, 869, 870, 0, 0,
	0, 0, 1493, 0, 0, 1440, 0, 0, 176, 2851,
	0, 221, 0, 0, 1255, 2380, 0, 1245, 0, 0,
	2529, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 140,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	1317, 1319, 1326, 1328, 0, 1322, 1323, 0, 1325, 1327,
	1329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 1349, 0, 0, 1350, 1351, 1565, 1566, 0, 1588,
	1589, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 2347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 625, 630, 0,
	631, 0, 0, 0, 1342, 0, 1392, 1390, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 0, 0, 0, 0, -2, 1344,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 331, 2346, 2356, 0, 1122, 1123, 367, 370,
	373, 376, 258, 0, 0, 406, 417, 0, 0, 1175,
	1147, 0, 0, 471, 340, 0, 0, 485, 489, 2397,
	1132, 1310, 1313, 0, 1293, 2851, 1360, 0, 0, 0,
	0, 0, 0, 1403, 0, 0, 2851, 2375, 2427, 2428,
	1579, 1589, 0, 1835, 0, 1612, 1598, 0, 0, 0,
	1612, 1616, 1617, 1619, 1620, 0, 0, 1826, 1832, 567,
	619, 1687, 1687, 340, 338, 2667, 336, 333, 335, 0,
	0, 1601, 1603, 0, 0, 0, 284, 0, 295, 1804,
	293, 0, 298, 0, 0, 1804, 292, 0, 483, 704,
	709, 904, 0, 340, 912, 913, 914, 960, 1004, 1012,
	1062, 924, 926, 927, 928, 0, 0, 0, 1097, 1093,
	1094, 1095, 944, 1014, 947, 1014, 950, 1014, 953, 955,
	973, 979, 992, 985, 993, 0, 0, 0, 1006, 1023,
	0, 1032, 1045, 0, 0, 0, 0, 0, 0, 0,
	1068, 1069, 1070, 1072, 1077, 1076, 1081, 903, 1823, 1638,
	1639, 1641, 0, 1650, 0, 0, 1726, -2, -2, 1725,
	1729, 1730, -2, -2, -2, -2, 1646, 0, 1655, 1652,
	0, 1711, 1431, 1432, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 2051, 0, -2, 2030, 2033, 2037, 2039,
	2041, 0, 0, 0, 0, 0, 0, 2274, 0, 2276,
	2052, 2329, 2332, 2267, 0, 2223, 0, 0, 1699, 1700,
	1700, 0, 2121, 0, 2282, 0, 2289, 2290, 0, 2114,
	0, 2323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 0, 0, 0, 0, 2157, 2160, 2163, 2166,
	0, 0, 0, 0, 2146, 0, 0, 0, 2150, 1916,
	1902, 0, 1944, 1942, 1943, 1937, 1944, 1941, 1894, 0,
	1893, 0, 2172, 0, 2174, 2176, 0, 0, 2178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 2059, 2060, 2080, 2179, 2311, 2312,
	0, 0, 0, 0, 0, 0, 2185, 0, 2317, 2186,
	2188, 1687, 0, 1680, 0, 1745, 1734, 1834, 0, 2338,
	1804, 1747, 1749, 2339, 2377, 1734, 1734, 0, 2286, 0,
	0, 1795, 0, 0, 0, 1797, 1768, 0, 0, 1762,
	0, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1769, 1293,
	1799, 1771, 1775, 2405, 0, 1801, 0, 1786, 0, 1788,
	1821, 0, 1780, 1783, 0, 0, 2420, 1835, 0, 380,
	388, 389, 381, 382, 383, 384, 0, 1480, 0, 0,
	0, 0, 0, 2288, 0, 1841, 0, 1847, 0, 0,
	0, 0, 657, 0, 0, 0, 0, 0, 1624, 439,
	530, 219, 535, 538, 2344, 219, 544, 547, 553, 248,
	0, 717, -2, 756, 757, 759, 0, 755, 860, 856,
	173, 1494, 0, 0, 0, 1436, 0, 1158, 0, 1153,
	1154, 1438, 1442, 1448, 1451, 0, 178, 2851, 190, 0,
	2851, 0, 1219, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 2851, 219, 2851, 219, 194, 196, 199, 0,
	205, 201, 0, 1155, 0, 1207, 0, 0, 1210, 126,
	1494, 0, 0, 129, 133, 145, 0, 0, 0, 155,
	0, 0, 0, 1453, 1457, 1465, 0, 0, 0, 1320,
	1321, 1324, 1330, 92, 0, 0, 0, 1461, 1463, 1469,
	104, 107, 2851, 2389, 109, 2851, 0, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 131, 135, 146,
	0, 1471, 128, 0, 234, 0, 0, 224, 219, 2851,
	0, 226, 0, 227, 228, 242, 0, 0, 0, 627,
	0, 1135, 1136, 1391, 0, 1335, 1336, 0, 1347, 1341,
	0, 0, 0, 0, 0, 1473, 1474, 0, 0, 0,
	1492, 1489, 1804, 254, 0, 1804, 262, 0, 2352, 0,
	276, 403, 0, 0, 0, 0, 1174, 1273, 1176, 1178,
	1179, 1180, 221, 0, 2428, 1245, 2583, 2428, 0, 0,
	1142, 0, 0, 0, 477, 473, 0, 482, 488, 487,
	493, -2, 0, 0, 0, 0, -2, 0, 0, 1407,
	1401, 1402, 0, 0, 0, 0, 2851, 1581, 1589, 0,
	1685, 1700, 500, 1590, 1612, 0, 0, 0, 1600, 1596,
	1593, 1835, 0, 0, 0, 0, 0, 1828, 1831, 570,
	571, 317, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 0, 296, 0, 299, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 0, 0, 0, 298,
	329, 286, 1804, 0, 298, 0, 0, 706, 0, 0,
	911, 0, 934, 937, 946, 948, 951, 995, 997, 1014,
	1024, 1052, 2376, 1053, 1197, 0, 1197, 0, 0, 1073,
	1648, 0, 1723, 1654, 1705, 1706, 0, 1433, 0, 1969,
	2014, 0, 0, -2, 0, 0, 2018, 0, 0, 0,
	-2, 0, 0, 0, 2275, 2277, 0, 2331, 2266, 2116,
	0, 0, 0, 2120, 2104, 2105, 0, 2226, 2292, 2321,
	2325, 0, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 0,
	2371, 2406, 2410, 2199, 2200, 2204, 2385, 0, 0, 0,
	2129, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	1939, 0, 0, 2293, 2304, 2306, 2056, 2057, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, -2, -2,
	-2, 2074, 2075, 2076, -2, -2, -2, 2081, 0, 0,
	0, 2307, 2309, 2310, 2314, 2315, 0, 2182, 2183, 2184,
	2316, 0, 1687, 1681, 1742, 0, 1833, 1746, 0, 1742,
	1742, 1694, 1793, 0, 0, 1817, 0, 1765, 0, 1766,
	0, 0, 1798, 0, 1773, 1776, 1777, 1787, 0, 1779,
	0, 1782, 0, 2116, -2, 341, 343, 345, 0, 348,
	349, 0, 0, 0, 648, 0, 1480, 1480, 0, 650,
	634, 0, 0, 1843, 0, 0, 1919, 1923, 1947, 661,
	663, 0, 0, 2803, 2745, 0, 660, 532, 541, 250,
	0, 1802, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 220, 0, 1254, 0, 1217, 0,
	0, 1244, 0, 0, 1260, 180, 181, 182, 0, 0,
	0, 0, 192, 0, 0, 188, 0, 198, 204, 203,
	0, 1204, 0, 0, 0, 0, 1441, 0, 0, 0,
	152, 153, 154, 0, 159, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1571, 1572, 0,
	1562, 149, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 1430, 244, 0, 0, 0, 0, 0, 0,
	1334, 1394, 1395, 1343, 1454, 1458, 1466, 0, 0, 0,
	0, 0, 675, 1491, 0, 262, 260, 0, 263, 0,
	266, 267, 0, 0, 262, 256, 0, 0, 0, 1293,
	418, 1145, 1261, 0, 0, 1263, 1181, 1185, 0, 2428,
	2428, 0, 2382, 0, 1143, 0, 0, 1262, 469, 0,
	476, 0, 490, 0, 0, 1314, 0, 0, 1338, 1363,
	1293, 0, 1406, 1408, 0, 1416, 0, 0, 0, 1583,
	1589, 0, 1576, 1577, 1719, 1591, 1610, -2, 0, 0,
	1700, 1618, 1615, 1621, 1622, 0, 337, 0, 332, 334,
	0, 320, 0, 1602, 1604, 0, 1116, 1119, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 298, 1804, 288,
	1804, 324, 0, 905, 929, 1005, 1054, 1196, 0, 0,
	1056, 0, 0, 1722, 1709, 1710, 1707, 1433, 2016, 2020,
	0, 0, 0, 2022, -2, 0, 2044, -2, -2, 2278,
	2330, 2095, 1700, 2117, 2119, 2106, 2324, 1964, 0, 2206,
	2203, 0, 2190, 0, 2141, 2142, 0, 0, 2145, 2147,
	2148, 2149, 1903, 1896, 1895, 2303, 0, 0, 0, 0,
	2181, 1682, 0, 2195, 0, 0, 1750, 2195, 2195, 1794,
	0, 1796, 1763, 1751, 0, 1760, 0, 2406, 1789, 1781,
	0, 0, 346, 0, 350, 351, 385, 0, 651, 652,
	0, 0, 1837, 1842, 0, 1848, 1918, 0, 0, 0,
	0, 0, 251, 0, 858, 859, 174, 175, 1159, 1157,
	1445, 1449, 1446, 0, 177, 0, 0, 1218, 0, 1221,
	0, 0, 0, 0, 1228, 1245, 0, 0, 0, 0,
	0, 0, 1247, 0, 1246, 0, 0, 1277, 0, 1421,
	1428, 0, -2, 0, 0, 0, 184, 210, 0, 0,
	0, 0, 213, 1495, 186, 0, 0, 219, 219, 1156,
	0, 0, 1437, 1439, 1452, 0, 0, 0, 0, 162,
	0, 0, 1455, 1459, 1467, 1462, 1464, 1470, 0, 110,
	0, 1573, 0, 148, 0, 0, 0, 1472, 232, 233,
	0, 219, 0, 219, 225, 219, 1430, 0, 0, 0,
	0, 0, 0, 0, 0, 1475, 1476, 253, 0, 0,
	0, 0, 0, 255, 330, 262, 405, 0, 1206, 0,
	1273, 1265, 1266, 1267, 0, 1177, 1272, 1274, 0, 0,
	1182, 0, 0, 0, 0, 1162, 1144, 0, 1175, 1147,
	0, 474, 491, 0, 494, 0, 497, 1133, 1311, 1355,
	1293, 1358, 0, 0, 1398, 0, 0, 0, 0, 0,
	0, 0, 1585, 1589, 0, 1578, 1579, 1612, 1718, 0,
	0, 0, 1599, 1719, 0, 339, 340, 0, 340, 300,
	0, 301, 302, 303, 310, 311, 312, 287, 290, 298,
	708, 710, 0, 0, 716, 1195, 0, 0, 0, 0,
	1708, 2024, -2, -2, 2045, 0, 2407, 2409, 1700, 0,
	2192, 1702, 0, 0, -2, 0, 0, 0, 1683, 1666,
	0, 1741, 1733, 1735, 1737, 2731, 2502, 2850, 1667, 1668,
	1816, 0, 0, 1784, 347, 1479, 653, 0, 0, 1844,
	0, 658, 0, 0, 0, 848, 0, 0, 1447, 179,
	0, 0, 1222, 1223, 2381, 1225, 0, 1227, 1229, 1230,
	1147, 0, 1234, 0, 2430, 0, 1239, 1242, 1243, 0,
	0, 1256, 1278, 0, 1287, 0, 1423, 1433, 1427, 0,
	1425, 1289, 0, 183, 212, 185, 214, 209, 0, 1430,
	0, 187, 197, 0, 0, 130, 0, 0, 2496, 165,
	163, 161, 108, 1434, 151, 0, 132, 0, 234, 243,
	1429, 245, 229, 219, 0, 0, 1456, 1460, 1468, 0,
	1483, 1484, 1485, 1486, 0, 0, 0, 0, 264, 0,
	265, 268, 269, 0, 0, 1147, 1205, 1146, 1264, 0,
	1275, 1147, 0, 0, 0, 0, 0, 0, 1149, 0,
	1148, 0, 0, 475, 478, 0, 481, 0, 0, 0,
	0, 0, 1362, 0, 1409, 1407, 0, 1415, 0, 0,
	0, 1561, 0, 0, 1580, 1581, 498, 1605, 0, 0,
	1612, 1623, 319, 0, 322, 297, 289, 0, 712, 0,
	714, 0, 1055, 1057, 0, 0, 2118, 2210, 0, 0,
	2143, 2144, -2, 0, 2084, 2194, 2196, 0, 0, 0,
	0, 0, 1752, 1761, 1480, 1838, 665, 662, 664, 0,
	1443, 0, 1450, 221, 1220, 1224, 0, 1231, 0, 0,
	0, 1235, 1297, 0, 0, 1314, 1314, 1248, 0, 0,
	1281, 1282, 1202, 0, 1283, 1284, 1285, 1422, 1711, 1428,
	1147, 0, 0, 211, 216, 0, 0, 0, 0, 0,
	0, 150, 0, 223, 246, 1430, 0, 0, 1487, 1488,
	0, 0, 261, 280, 0, 1356, 1149, 0, 1276, 1183,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1184,
	1289, 0, 0, 1253, 1160, 0, 1163, 0, 1145, 0,
	479, 480, 495, 0, 496, 0, 0, 1363, 0, 0,
	1416, 0, 0, 1568, 1560, 1589, 1582, 1583, 1835, 0,
	1613, 0, 711, 0, 0, 1065, 1066, 0, 0, 0,
	0, 2205, 1703, 2085, 0, 0, 1736, 1738, 1739, 1740,
	654, 0, 1444, 191, 0, 1291, 1233, 1302, 0, 0,
	0, 0, 0, 1249, 1279, 1280, 1277, 1201, 0, 1426,
	1424, 1258, 1291, 1293, 189, 0, 1289, 0, 1211, 0,
	0, 1214, 0, 0, 166, 2496, 164, 0, 219, 632,
	1480, 219, 0, 283, 0, 274, 272, 273, 1141, 0,
	1269, 1271, 1287, 1289, 1202, 0, 1164, 1206, 1162, 492,
	1357, 1361, 1359, 1399, 1289, 0, 1287, 0, 1575, 1589,
	1569, 1570, 0, 1585, 0, 0, 340, 713, 715, 2202,
	2222, 2211, -2, 2806, 2503, 0, 2222, 2222, 2197, 2198,
	0, 0, 1147, 0, 1236, 1298, 1299, 0, 1294, 1295,
	1296, 2429, 1237, 1238, 1240, 1241, 1835, 0, 1288, 1297,
	215, 1147, 1208, 0, 0, 1209, 0, 0, 169, 0,
	171, 247, 1478, 1481, 0, 270, 0, 0, 1138, 1140,
	1147, 0, 1202, 1287, 1147, 0, 0, 0, 1147, 1149,
	1287, 0, 1202, 0, 1564, 1574, 0, 1584, 1561, 0,
	1608, 0, 321, 2207, 0, 0, 2213, 2214, 2215, 2216,
	2217, 2208, 2209, 666, 1226, 1232, 0, 1300, 0, 1301,
	0, 0, 0, 1257, 1286, 1302, 195, 1212, 0, 1215,
	0, 167, 0, 0, 278, 279, 1268, 1270, 1147, 1202,
	1835, 1150, 0, 1152, 1149, 1161, 1202, 0, 1147, 0,
	1587, 1563, 1567, 2390, 1568, 1606, 0, 0, 0, 2219,
	2220, 0, 0, 0, 1303, 0, 1306, 1307, 0, 1304,
	1277, 0, 0, 219, 0, 1835, 1147, 1252, 1151, 1141,
	1147, 1289, 1835, 1287, 1557, 1589, 1575, 0, 1835, 2218,
	2221, 2212, 1290, 1305, 1308, 1309, 1259, 0, 0, 1482,
	281, 0, 1250, 1835, 1139, 1835, 1287, 1412, 1202, 0,
	1564, 1835, 1609, 1199, 0, 0, 1251, 1410, 1202, 1147,
	1586, 1558, 1607, 1213, 1198, 0, 282, 1147, 1835, 0,
	1835, 1413, 0, 1411, 1199, 1216,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 610, 3, 616, 611, 3,
	622, 623, 614, 612, 627, 613, 624, 615, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 630, 3,
	602, 604, 603, 607, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 620, 3, 621, 617, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 628, 609, 629, 605,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 606,
	57945, 608, 57946, 618, 57947, 619, 57948, 625, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1545
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1547
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1550
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1552
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1553
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1554
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1555
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1559
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1560
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "ALTER")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1753
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1764
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1776
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1865
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1930
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1951
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1959
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1995
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2006
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2039
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2088
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2101
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2110
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2121
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2129
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2140
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2150
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2160
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2169
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2180
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2186
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2212
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2217
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2362
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2365
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2423
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = nil
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = true
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = false
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2618
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2622
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2806
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = nil
		}
	case 284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3278
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3287
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3293
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3298
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3303
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3307
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = nil
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3411
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3607
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3657
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CREATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3672
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3675
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3681
		{
			return unimplemented(sqllex, "create access method")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			return unimplemented(sqllex, "create cast")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3684
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3686
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3691
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "create publication")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplemented(sqllex, "create rule")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplemented(sqllex, "create server")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3703
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3706
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3707
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3710
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3711
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3714
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3719
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplemented(sqllex, "drop server")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3858
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3893
		{

			sqlVAL.union.val = nil
		}
	case 490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "DELETE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3980
		{
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4006
		{
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			return helpWith(sqllex, "DROP")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4272
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4280
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4296
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4304
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{
			return helpWith(sqllex, "DELETE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4329
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "INSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "DELETE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "INSERT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4481
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4514
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4605
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "GRANT")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4717
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4730
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "RESET")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "RESET")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "USE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "USE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			return unimplemented(sqllex, "set from current")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5082
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = tree.Low
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = tree.Normal
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = tree.High
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "SHOW")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = false
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = true
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = false
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = false
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = sqlDollar[2].union.fetchCursor()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "FETCH")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5395
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.FetchCursor{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = int64(1)
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = int64(-1)
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = int64(1)
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = int64(1)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = int64(-1)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5451
		{
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5454
		{
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5455
		{
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5464
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.str = "client_encoding"
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.str = "timezone"
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5541
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5604
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5643
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5686
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = true
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = true
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = false
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5875
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5920
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5921
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5945
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5989
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5996
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6000
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = true
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = false
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6020
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6066
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = true
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = false
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6113
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6124
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6146
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6156
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6174
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6190
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6195
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6200
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6205
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6234
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6239
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6279
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6287
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6318
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6331
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6354
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6435
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6633
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6685
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6697
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6698
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6737
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6750
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6782
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6790
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6865
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6901
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6916
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{

			sqlVAL.union.val = nil
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.str = ""
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6960
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = nil
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6983
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7023
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7036
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7050
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7052
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7133
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7147
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7151
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.str = ""
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7289
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7396
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{

			sqlVAL.union.val = true
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = false
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7451
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7458
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7555
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7593
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7608
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7676
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7763
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7848
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7857
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7865
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7905
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7913
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.str = ""
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = true
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8025
		{

			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8040
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8054
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8066
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8078
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8088
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8098
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8102
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = true
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = true
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = nil
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8245
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8273
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8275
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8277
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8281
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8316
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8333
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8351
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8367
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8383
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8387
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = false
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = true
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = false
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = true
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = false
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8441
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8447
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.str = ""
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.str = ""
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8520
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8526
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8751
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8757
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8769
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8775
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8789
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8795
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8854
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.Types
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8947
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9054
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9097
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9113
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9130
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9177
		{
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.str = ""
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9299
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{

		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9331
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.str = ""
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.str = ""
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.str = ""
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.str = ""
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9386
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9412
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9657
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9672
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9816
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9851
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9852
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9853
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9958
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = true
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = false
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10027
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10028
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = nil
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10041
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10042
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = true
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = false
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = false
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = true
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10072
		{
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10076
		{
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10129
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10134
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10160
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10193
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10319
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10321
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10358
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10405
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10436
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10488
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10534
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10564
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10597
		{
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = nil
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = true
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = false
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.str = tree.AstFull
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.str = tree.AstRight
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.str = tree.AstInner
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10717
		{
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.str = tree.AstHash
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.str = ""
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10831
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = true
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = false
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = true
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = false
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10893
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10901
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10902
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10920
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10930
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10950
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10999
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11011
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = types.Geography
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11061
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11069
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11103
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = nil
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = types.Int2
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = types.Int
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = types.Float4
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = types.Float
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11146
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11154
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = types.Bool
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = types.Float
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11195
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11201
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11223
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = types.String
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = true
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = false
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = types.Date
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11272
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11280
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11294
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11311
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11328
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = true
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = false
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = false
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = types.Interval
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11352
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11451
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = nil
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11481
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11541
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11690
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11885
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11907
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12015
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12119
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12124
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12150
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12174
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12208
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12219
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12220
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12244
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12310
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12440
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12467
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12476
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12481
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12486
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12491
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12496
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12501
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12510
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12511
		{
			return unimplemented(sqllex, "treat")
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12532
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12537
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.str = ""
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12673
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12686
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12783
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12859
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12926
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13039
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13052
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13173
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13190
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13199
		{
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13200
		{
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13280
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13353
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13365
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13369
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13378
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13389
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13398
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13406
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13423
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13624
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13642
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13655
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13662
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.str = ""
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13693
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13697
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
